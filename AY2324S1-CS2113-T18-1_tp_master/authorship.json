[{"path":"CONTRIBUTORS.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"onx001"},"content":"Name | Github Profile","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"onx001"},"content":"---|:---:","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"onx001"},"content":"Antriksh Dhand | [Github](https://github.com/antrikshdhand/)","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"onx001"},"content":"Ou Ningxiang | [Github](https://github.com/onx001/)","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"onx001"},"content":"Oh Ken Wei | [Github](https://github.com/ken-ruster/)","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"onx001"},"content":"Tong Zheng Hong | [Github](https://://github.com/TongZhengHong/)","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"onx001"},"content":"Tricia Boo Koh | [Github](https://://github.com/TriciaBK/)","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"# I would like to join this list. How can I help the project","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"onx001"},"content":"For more information, please refer to our [contributor\u0027s guide](README.md#contributing).","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"onx001":9,"-":4}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"antrikshdhand"},"content":" \u003cbr /\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"antrikshdhand"},"content":" \u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"antrikshdhand"},"content":"    \u003ca href\u003d\"\"\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"antrikshdhand"},"content":"        \u003cimg src\u003d\"docs/images/ChessMasterLogo.png\" alt\u003d\"Logo\" width\u003d\"80\" height\u003d\"80\"\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"antrikshdhand"},"content":"    \u003c/a\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"antrikshdhand"},"content":"    \u003ch3 align\u003d\"center\"\u003eChessMaster\u003c/h3\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"antrikshdhand"},"content":"    \u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"antrikshdhand"},"content":"        Chess finally makes it to your terminal.","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"antrikshdhand"},"content":"        \u003cbr /\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"antrikshdhand"},"content":"        \u003ca href\u003d\"https://ay2324s1-cs2113-t18-1.github.io/tp/UserGuide.html\"\u003eView User Guide\u003c/a\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"antrikshdhand"},"content":"        ·","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"antrikshdhand"},"content":"        \u003ca href\u003d\"https://ay2324s1-cs2113-t18-1.github.io/tp/DeveloperGuide.html\"\u003eView Developer Guide\u003c/a\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"antrikshdhand"},"content":"        ·","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"antrikshdhand"},"content":"        \u003ca href\u003d\"https://ay2324s1-cs2113-t18-1.github.io/tp/AboutUs.html\"\u003eAbout Us\u003c/a\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"antrikshdhand"},"content":"    \u003c/p\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"antrikshdhand"},"content":" \u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"antrikshdhand"},"content":"_ChessMaster_ is a command-line interface (CLI) chess game designed to make learning and training accessible for","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"antrikshdhand"},"content":"beginners while offering an engaging experience for all skill levels. This simple and user-friendly chess simulator","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"antrikshdhand"},"content":"provides a platform for novice players to build their skills and understanding of the game.","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"antrikshdhand"},"content":"This project was created for the _CS2113: Software Engineering and Object-Oriented Programming_ team project and","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"antrikshdhand"},"content":"is programmed in 100% Java.","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"antrikshdhand"},"content":"## Getting started","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"antrikshdhand"},"content":"1. Ensure you have **Java 11 or above** installed in your system.","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"antrikshdhand"},"content":"2. Download the latest version of `ChessMaster.jar` from [here](https://github.com/AY2324S1-CS2113-T18-1/tp/releases).","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"antrikshdhand"},"content":"3. Open a terminal instance and navigate into the folder that contains the downloaded ChessMaster.jar file.","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"antrikshdhand"},"content":"```bash","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"antrikshdhand"},"content":"cd PATH_TO_JAR_FILE","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"antrikshdhand"},"content":"```","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"antrikshdhand"},"content":"4. Run the jar application with the following command:","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"antrikshdhand"},"content":"```bash","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"antrikshdhand"},"content":"java -jar ChessMaster.jar","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"antrikshdhand"},"content":"```","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"antrikshdhand"},"content":"You should be greeted by a welcome message from ChessMaster:","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"antrikshdhand"},"content":"```","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"antrikshdhand"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"antrikshdhand"},"content":"Hey there, chess geek! You have stumbled upon the one and only:","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"antrikshdhand"},"content":"    ________                      __  ___           __","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"antrikshdhand"},"content":"   / ____/ /_  ___  __________   /  |/  /___ ______/ /____  _____","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"antrikshdhand"},"content":"  / /   / __ \\/ _ \\/ ___/ ___/  / /|_/ / __ `/ ___/ __/ _ \\/ ___/","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"antrikshdhand"},"content":" / /___/ / / /  __(__  |__  )  / /  / / /_/ (__  ) /_/  __/ /","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"antrikshdhand"},"content":" \\____/_/ /_/\\___/____/____/  /_/  /_/\\__,_/____/\\__/\\___/_/","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"antrikshdhand"},"content":"where CHESS becomes an exciting journey of strategy and skill!","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"antrikshdhand"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"antrikshdhand"},"content":"```","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"antrikshdhand"},"content":"## Usage","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"antrikshdhand"},"content":"A summary of user commands can be found in the table below:","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"antrikshdhand"},"content":"| Action        | Format                             |","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"antrikshdhand"},"content":"|---------------|------------------------------------|","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"antrikshdhand"},"content":"| Move          | `move [column][row] [column][row]` |","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"antrikshdhand"},"content":"| Show moves    | `moves [column][row]`              |","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"antrikshdhand"},"content":"| Show board    | `show`                             |","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"antrikshdhand"},"content":"| Rules         | `rules`                            |","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"antrikshdhand"},"content":"| Help          | `help`                             |","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"antrikshdhand"},"content":"| Pieces legend | `legend`                           |","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"antrikshdhand"},"content":"| History       | `history`                          |","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"antrikshdhand"},"content":"| Step back     | `stepback`                         |","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"antrikshdhand"},"content":"| List pieces   | `captured`                         |","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"onx001"},"content":"| Exit          | `exit`                             |","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"antrikshdhand"},"content":"Please visit our [User Guide](https://ay2324s1-cs2113-t18-1.github.io/tp/UserGuide.html) for further details on each ","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"antrikshdhand"},"content":"of these commands.","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"antrikshdhand"},"content":"## Contributing","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"antrikshdhand"},"content":"[![Contributors](https://img.shields.io/github/contributors/AY2324S1-CS2113-T18-1/tp?label\u003dContributors\u0026style\u003dflat-square)](https://github.com/AY2324S1-CS2113-T18-1/tp/graphs/contributors)","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"antrikshdhand"},"content":"[![Commits](https://img.shields.io/github/commits-since/AY2324S1-CS2113-T18-1/tp/latest?style\u003dflat-square\u0026label\u003dCommits%20since%20v2.0)](https://github.com/AY2324S1-CS2113-T18-1/tp/commits/master)","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"antrikshdhand"},"content":"[![Issues](https://img.shields.io/github/issues/AY2324S1-CS2113-T18-1/tp?style\u003dflat-square\u0026label\u003dLatest%20issues)](https://github.com/AY2324S1-CS2113-T18-1/tp/issues)","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"antrikshdhand"},"content":"[![PRs](https://img.shields.io/github/issues-pr/AY2324S1-CS2113-T18-1/tp?style\u003dflat-square\u0026label\u003dPull%20requests)](https://github.com/AY2324S1-CS2113-T18-1/tp/pulls)","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"antrikshdhand"},"content":"All contributions are greatly appreciated! If you have a suggestion that would make this better, ","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"antrikshdhand"},"content":"please fork the repo and create a pull request. ","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"antrikshdhand"},"content":"1. Fork the Project","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"antrikshdhand"},"content":"2. Create your Feature Branch (`git checkout -b feature/branch-FeatureName`)","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"antrikshdhand"},"content":"3. Commit your Changes (`git commit -m \u0027Add some FeatureName\u0027`)","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"antrikshdhand"},"content":"4. Push to the Branch (`git push origin feature/AmazingFeature`)","lastModifiedDate":"2023-11-10"},{"lineNumber":93,"author":{"gitId":"antrikshdhand"},"content":"5. Open a Pull Request","lastModifiedDate":"2023-11-10"},{"lineNumber":94,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":95,"author":{"gitId":"antrikshdhand"},"content":"## Contact","lastModifiedDate":"2023-11-10"},{"lineNumber":96,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"antrikshdhand"},"content":"Please visit our [About Us](https://ay2324s1-cs2113-t18-1.github.io/tp/AboutUs.html) page for further contact","lastModifiedDate":"2023-11-10"},{"lineNumber":98,"author":{"gitId":"antrikshdhand"},"content":"information.","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":100,"author":{"gitId":"antrikshdhand"},"content":"Project Link: [https://github.com/AY2324S1-CS2113-T18-1/tp](https://github.com/AY2324S1-CS2113-T18-1/tp)","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"antrikshdhand":99,"onx001":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"    mainClass.set(\"chessmaster.ChessMaster\")","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"    archiveBaseName.set(\"chessmaster\")","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"ken-ruster"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"compileJava.options.encoding \u003d \u0027UTF-8\u0027","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"tasks.withType(JavaCompile) {","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"    options.encoding \u003d \u0027UTF-8\u0027","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"ken-ruster":1,"TongZhengHong":7,"-":45}},{"path":"build.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"\u003cproject name\u003d\"ChessMaster\" basedir\u003d\".\" default\u003d\"main\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"    \u003cproperty name\u003d\"src.dir\"     value\u003d\"src/main/java\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"    \u003cproperty name\u003d\"build.dir\"   value\u003d\"build\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"    \u003cproperty name\u003d\"classes.dir\" value\u003d\"${build.dir}/classes\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"    \u003cproperty name\u003d\"jar.dir\"     value\u003d\"${build.dir}/jar\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"    \u003cproperty name\u003d\"main-class\"  value\u003d\"chessmaster.ChessMaster\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"    \u003ctarget name\u003d\"clean\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"        \u003cdelete dir\u003d\"${build.dir}\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"    \u003c/target\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"    \u003ctarget name\u003d\"compile\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"        \u003cmkdir dir\u003d\"${classes.dir}\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"        \u003cjavac includeantruntime\u003d\"false\" target\u003d\"11\" source\u003d\"11\" encoding\u003d\"utf8\" srcdir\u003d\"${src.dir}\" destdir\u003d\"${classes.dir}\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"    \u003c/target\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"    \u003ctarget name\u003d\"jar\" depends\u003d\"compile\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"        \u003cmkdir dir\u003d\"${jar.dir}\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"        \u003cjar destfile\u003d\"${jar.dir}/${ant.project.name}.jar\" basedir\u003d\"${classes.dir}\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"            \u003cmanifest\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"                \u003cattribute name\u003d\"Main-Class\" value\u003d\"${main-class}\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"            \u003c/manifest\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"        \u003c/jar\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"    \u003c/target\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"    \u003ctarget name\u003d\"run\" depends\u003d\"jar\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"        \u003cjava jar\u003d\"${jar.dir}/${ant.project.name}.jar\" fork\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"    \u003c/target\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"    \u003ctarget name\u003d\"clean-build\" depends\u003d\"clean,jar\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"    \u003ctarget name\u003d\"main\" depends\u003d\"clean,run\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"\u003c/project\u003e","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"TongZhengHong":35}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/basic.html","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        IMPORT CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2022-04-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        An import statement is redundant if:","lastModifiedDate":"2022-04-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2022-04-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2022-04-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2022-04-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003c!-- Checks for unused import statements.","lastModifiedDate":"2022-04-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        An import statement is unused if:","lastModifiedDate":"2022-04-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          It\u0027s not referenced in the file.","lastModifiedDate":"2022-04-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        NAMING CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                     value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        LENGTH and CODING CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2022-04-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"          Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"          C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2022-04-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            the same line. e.g., the following example is fine:","lastModifiedDate":"2022-04-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            \u003cpre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"              if {","lastModifiedDate":"2022-04-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                ...","lastModifiedDate":"2022-04-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"              } else","lastModifiedDate":"2022-04-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            \u003c/pre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            \u003c!-- This next example is not fine:","lastModifiedDate":"2022-04-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            \u003cpre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"              if {","lastModifiedDate":"2022-04-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                ...","lastModifiedDate":"2022-04-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"              }","lastModifiedDate":"2022-04-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"              else","lastModifiedDate":"2022-04-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            \u003c/pre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            if (true) return 1; // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            if (true) { return 1; } // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            else if {","lastModifiedDate":"2022-04-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"              return 1; // else if should always be multi line","lastModifiedDate":"2022-04-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-04-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            if (true)","lastModifiedDate":"2022-04-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"              return 1; // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2022-04-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2022-04-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2022-04-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2022-04-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2022-04-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                      value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        ORDER CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2022-04-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"             @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2022-04-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2022-04-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"          1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2022-04-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"          2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2022-04-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"          3. Constructors","lastModifiedDate":"2022-04-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"          4. Methods","lastModifiedDate":"2022-04-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2022-04-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                 8.4.3.  The prescribed order is:","lastModifiedDate":"2022-04-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                 public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2022-04-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                 synchronized, native, strictfp","lastModifiedDate":"2022-04-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"              --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        WHITESPACE CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":245,"author":{"gitId":"TongZhengHong"},"content":"        \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":246,"author":{"gitId":"TongZhengHong"},"content":"            \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":247,"author":{"gitId":"TongZhengHong"},"content":"            \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":248,"author":{"gitId":"TongZhengHong"},"content":"            \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":249,"author":{"gitId":"TongZhengHong"},"content":"        \u003c/module\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":250,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        JAVADOC CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that all block-tags are ordered correctly. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that Javadoc block tags appear only at the beginning of the line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that for block tags, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        \u003c!-- Checks the Javadoc\u0027s format for every method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"TongZhengHong":6,"-":287}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"TriciaBK"},"content":"| Name                                 | ID        | Github        |","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"TriciaBK"},"content":"|--------------------------------------|-----------|---------------|","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"TriciaBK"},"content":"| [Antriksh Dhand](team/antrikshdhand.md) | A0278458J | antrikshdhand |","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"TriciaBK"},"content":"| [Oh Ken Wei](team/ken-ruster.md)     | A0251850J | ken-ruster    |","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"TriciaBK"},"content":"| [Ou Ningxiang ](team/onx001.md)      | A0249445W | onx001        |","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"TriciaBK"},"content":"| [Tong Zheng Hong](team/tongzhenghong.md) | A0251819Y | TongZhengHong |","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"TriciaBK"},"content":"| [Tricia Boo Koh](team/triciabk.md)   | A0264665U | TriciaBK      |","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"TriciaBK":7,"-":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"antrikshdhand"},"content":"- [Design and implementation](#design-and-implementation)","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"antrikshdhand"},"content":"    - [Architecture](#architecture)","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"antrikshdhand"},"content":"        - [Main components of the architecture](#main-components-of-the-architecture)     ","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"antrikshdhand"},"content":"    - [ChessMaster component](#chessmaster-component)","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"antrikshdhand"},"content":"    - [Game component](#game-component)","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"antrikshdhand"},"content":"    - [User input handling](#user-input-handling)","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"antrikshdhand"},"content":"    - [Minimax algorithm](#minimax-algorithm)","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"onx001"},"content":"    - [Move types](#move-types)","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"antrikshdhand"},"content":"    - [Storage component](#storage-component)","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"antrikshdhand"},"content":"- [Product scope](#product-scope)","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"antrikshdhand"},"content":"    - [Target user profile](#target-user-profile)","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"antrikshdhand"},"content":"    - [Value proposition](#value-proposition)","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"antrikshdhand"},"content":"- [User stories](#user-stories)","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"antrikshdhand"},"content":"- [Non-functional requirements](#non-functional-requirements)","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"antrikshdhand"},"content":"- [Manual testing](#manual-testing)","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"antrikshdhand"},"content":"    - [End-to-end testing](#end-to-end-testing)","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"antrikshdhand"},"content":"## Design and implementation","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"![](images/OverallArchitecture.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"### Architecture","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"The Architecture Diagram given above explains the high-level design of the application. Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"#### Main components of the architecture","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"`ChessMaster` is the main invocation of the application. It handles the loading of previous chess games from the storage file and running of the chess `Game` instance.  ","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"The remaining logic is handled by the following components:","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"- **UI**: The User Interface of the application","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"- **Game**: Executes user commands in game and CPU moves","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"- **Storage**: Reads and write chess game information to the hard disk","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"- **ChessBoard**: Holds the current chess board state in memory","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"- **Parser**: Parses string representations into relevant classes (`Command`, `Move`, `ChessPiece`, etc)","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"Our application also uses other classes to store information about the chess game and provide utility functions for the main components to function. This include: `Command`, `Move`, `Coordinate`, `Color`,  `Player`, `ChessTile` and `ChessPiece(s).`","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"### ChessMaster component","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"The sequence diagram below illustrates the interactions within the ChessMaster component, when they launch the program.","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"TriciaBK"},"content":"The user has the option to terminate the game anytime during this interaction with `exit`, however, this event is not depicted in the diagram for simplicity.","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"![](images/ChessMasterSequence.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"How does ChessMaster component work:","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"1. Attempts to load previously stored game in storage","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"2. If previous game exists, asks the user if a new game or the previous game should be loaded. ","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"TriciaBK"},"content":"3. If a new game is selected, the user will be prompted for the color and difficulty to start. ","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"4. Start running the new or previous game instance.","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"TongZhengHong"},"content":"### Game component","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"TriciaBK"},"content":"The sequence diagram below illustrates the interactions within the Game component.","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"TongZhengHong"},"content":"![](images/GameSequence.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"TongZhengHong"},"content":"How does the Game component work:","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"TriciaBK"},"content":"1. Solicits input from user. Users can provide game commands, if not recognised, it will parse as a `MoveCommand`.","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"TongZhengHong"},"content":"2. The returned command will be executed.","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"TongZhengHong"},"content":"3. If user entered a game command (not MoveCommand), the next user input will be solicited.","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"TongZhengHong"},"content":"4. If a MoveCommand is identified, the user\u0027s input will be parsed as a Move object with checks to ensure it is a valid move on the chessboard.","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"TongZhengHong"},"content":"5. The user\u0027s validated Move will be executed on the chess board. This move will then be saved in the storage file.","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"TongZhengHong"},"content":"6. Next, it will be the CPU\u0027s turn to play. The best move will be calculated by the CPU object and it will be executed on the chess board. This move will also be saved in the storage file.","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"TongZhengHong"},"content":"7. Once both the user and CPU has made their moves, the game state will be checked where the number of kings on the board and the winner will be determined.","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"antrikshdhand"},"content":"### User input handling","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"ken-ruster"},"content":"Below is a class diagram representing the Command and Parser classes.","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"TongZhengHong"},"content":"![](images/ParserCommandDiagram.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"ken-ruster"},"content":"In order to handle user input into the program during the game, the `Parser` class was implemented.","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"ken-ruster"},"content":"Below is a sequence diagram describing the process of handling user input passed from `Game`:","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"TongZhengHong"},"content":"![](images/ParseCommandSequence.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"ken-ruster"},"content":"`Parser` works to resolve a player\u0027s input in the following manner:","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"ken-ruster"},"content":"1. When `Parser` is called to parse a command, it returns the relevant `Command` object (More precisely,","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"ken-ruster"},"content":"one of its subclasses e.g. `MoveCommand`), which is then executed by `Game`.","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"ken-ruster"},"content":"2. Depending on the type of `Command` returned, the following may occur: ","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"ken-ruster"},"content":"   1.  If it is a `MoveCommand`, the Command calls `parseMove` to instantiate the `Move`,","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"ken-ruster"},"content":"   which is passed back to `Game` to be executed in the main logic.","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"ken-ruster"},"content":"   2. If it is a `ShowMovesCommand`, `parseAlgebraicCoor` is called to obtain the position of the piece as a ","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"ken-ruster"},"content":"   `Coordinate` object. The available coordinates are printed using `showAvailableCoordinates`, then stored as a String","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"ken-ruster"},"content":"   by `getAvailableCoordinatesString()`.","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"ken-ruster"},"content":"3. The result is then encapsulated in a `CommandResult` and returned to `Game` to be handled.","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"ken-ruster"},"content":"4. If the player made a move resulting in a promotion, `parsePromote` is called.","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"ken-ruster"},"content":"5. `Parser` calls `getColor` and `getPosition` to retrieve relevant data from the `ChessPiece` ","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"ken-ruster"},"content":"the player wants to promote.","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"ken-ruster"},"content":"6. The user\u0027s input is parsed and a new `ChessPiece` is returned.","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"ken-ruster"},"content":"`Parser` also contains methods to fulfil parsing needs in other parts of the program, for instance `parseChessPiece`, ","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"ken-ruster"},"content":"which is called while loading the .txt file containing save data, called for each character representing a ","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"ken-ruster"},"content":"singular chess piece. Using a Case statement, it returns the relevant `ChessPiece` object depending on the character","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"ken-ruster"},"content":"(representing the type of piece), and whether it is capitalised (representing colour).","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"ken-ruster"},"content":"How the parsing works:","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"ken-ruster"},"content":"- When called upon to parse a user command, the `Parser` class returns a relevant subclass of the `Command` class","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"ken-ruster"},"content":"  (i.e. entering a valid command \"XYZ\" will cause `Parser` to return an `XYZCommand` object)","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"ken-ruster"},"content":"- Each `Command` subclass contains the relevant methods to execute the specified command","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"ken-ruster"},"content":"(AbortCommand, ShowCommand, etc.) and inherit from the abstract `Command` class.","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"onx001"},"content":"### Minimax algorithm","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"onx001"},"content":"The minimax algorithm is used to determine the best move for the AI to make. It is a recursive algorithm that works by alternatingly minimising opponent scores and maximising CPU scores. The algorithm is implemented in the `Minimax` class.","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"onx001"},"content":"![](images/MiniMaxSequenceDiagram.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"onx001"},"content":"How the minimax algorithm works:","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"onx001"},"content":"1. The `Minimax` class is called by the `Game` class to determine the best move for the CPU to make.","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"onx001"},"content":"2. The `Minimax` class calls the `getPossibleMoves` method in the `ChessBoard` class to get all possible moves for the CPU.","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"onx001"},"content":"3. The `Minimax` class then calls the `getBestMove` method to determine the best move for the CPU to make by maximising CPU score and minimizing the player score.","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"onx001"},"content":"4. The `getBestMove` method calls the `getBestMove` method recursively to populate the child scores.","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"onx001"},"content":"5. The `getBestMove` method returns the best move for the CPU to make.","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"onx001"},"content":"### Move types","lastModifiedDate":"2023-11-12"},{"lineNumber":121,"author":{"gitId":"onx001"},"content":"The Move class and its subclasses are responsible for handling the different types of moves in chess. The Move class is a parent class of several move types: CastleMove, EnPassantMove and PromoteMove. The MoveFactory class is responsible for generating the correct move type.","lastModifiedDate":"2023-11-14"},{"lineNumber":122,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":123,"author":{"gitId":"onx001"},"content":"Below is a class diagram representing the parent Move class.","lastModifiedDate":"2023-11-14"},{"lineNumber":124,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"onx001"},"content":"![](images/MoveClass.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":126,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":127,"author":{"gitId":"onx001"},"content":"#### Standard moves","lastModifiedDate":"2023-11-12"},{"lineNumber":128,"author":{"gitId":"onx001"},"content":"Standard moves are the most common type of moves in chess. They are moves that involve moving a piece from one tile to another without considering special cases. Standard moves are further classified into two types: normal moves and capture moves. This information is implemented in the ChessPiece classes.","lastModifiedDate":"2023-11-12"},{"lineNumber":129,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":130,"author":{"gitId":"onx001"},"content":"How standard moves are generated:","lastModifiedDate":"2023-11-12"},{"lineNumber":131,"author":{"gitId":"onx001"},"content":"1. The chess piece has directions that it can move in. For example, a rook can move in the up, down, left and right directions. ","lastModifiedDate":"2023-11-12"},{"lineNumber":132,"author":{"gitId":"onx001"},"content":"2. The chess piece has a maximum number of steps it can take in each direction. For example, a rook can move any number of steps in the up, down, left and right directions as constrained by the chess board.","lastModifiedDate":"2023-11-12"},{"lineNumber":133,"author":{"gitId":"onx001"},"content":"3. The chess piece cannot move past another chess piece. For example, a rook cannot move past another chess piece in the up, down, left and right directions.","lastModifiedDate":"2023-11-12"},{"lineNumber":134,"author":{"gitId":"onx001"},"content":"4. Any chess piece that \"blocks\" the path of the chess piece is checked for colour. If the chess piece is of the same colour, the chess piece cannot move past it. If the chess piece is of the opposite colour, the chess piece can capture it. For example, a rook can capture an enemy chess piece in the up, down, left and right directions. (Note that pawn moves are an exception to this rule. Pawn pieces can only capture enemy chess pieces in the forward diagonal directions.)","lastModifiedDate":"2023-11-12"},{"lineNumber":135,"author":{"gitId":"onx001"},"content":"5. Special cases such as castling, en passant and promotion are also encoded as `directions` and executed separately with different move functions.","lastModifiedDate":"2023-11-12"},{"lineNumber":136,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":137,"author":{"gitId":"onx001"},"content":"Below is a sequence diagram representing the process of generating and executing moves.","lastModifiedDate":"2023-11-13"},{"lineNumber":138,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":139,"author":{"gitId":"onx001"},"content":"![](images/MoveSequence.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":140,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":141,"author":{"gitId":"onx001"},"content":"#### Pawn Opening","lastModifiedDate":"2023-11-12"},{"lineNumber":142,"author":{"gitId":"onx001"},"content":"A pawn opening is a special type of move that involves moving a pawn from its starting position to another tile two spaces ahead. This move is only valid if the pawn is in its starting position and the tile it is moving to as well as the tile in between is empty. ","lastModifiedDate":"2023-11-12"},{"lineNumber":143,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":144,"author":{"gitId":"onx001"},"content":"#### Castling","lastModifiedDate":"2023-11-12"},{"lineNumber":145,"author":{"gitId":"onx001"},"content":"Castling is a special type of move that involves moving the king and rook at the same time. This move is only valid if the king and rook have not moved before and there are no pieces between them. Castling is further classified into two types: king-side castling and queen-side castling. This information is implemented in the ChessPiece King and Rook classes and executed with the CastleMove and CastleSide classes.","lastModifiedDate":"2023-11-12"},{"lineNumber":146,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":147,"author":{"gitId":"onx001"},"content":"#### En Passant","lastModifiedDate":"2023-11-12"},{"lineNumber":148,"author":{"gitId":"onx001"},"content":"En passant is a special type of move that involves capturing a pawn that has just moved two spaces. This move is only valid if the pawn is in the correct position and the pawn is the last piece to move. This information is implemented in the Pawn class and executed with the EnPassantMove class. ","lastModifiedDate":"2023-11-12"},{"lineNumber":149,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":150,"author":{"gitId":"onx001"},"content":"#### Promotion","lastModifiedDate":"2023-11-12"},{"lineNumber":151,"author":{"gitId":"onx001"},"content":"Promotion is a special type of move that involves promoting a pawn to another piece. This move is only valid if the pawn is in the correct position, which is at the other end of the board from which it starts. This information is implemented in the Pawn class and executed with the PromotionMove class.","lastModifiedDate":"2023-11-12"},{"lineNumber":152,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":153,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":154,"author":{"gitId":"TriciaBK"},"content":"### Storage Component","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"TriciaBK"},"content":"Below is a class diagram representing the Storage class.","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"TriciaBK"},"content":"The Storage component is responsible for handling the storage and retrieval of chess game state.","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":158,"author":{"gitId":"TriciaBK"},"content":"![](images/StorageClass.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"TriciaBK"},"content":"Below is a sequence diagram of the storage class.","lastModifiedDate":"2023-11-13"},{"lineNumber":161,"author":{"gitId":"TriciaBK"},"content":"It includes only the more essential methods (createChessmasterFile, saveBoard, loadBoard, resetBoard) required for the main storing and loading of information, to prevent the diagram from being too complex.","lastModifiedDate":"2023-11-13"},{"lineNumber":162,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":163,"author":{"gitId":"TriciaBK"},"content":"![](images/StorageSequence.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"TriciaBK"},"content":"Here is a brief overview of how the storage handles the data storage:","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"TriciaBK"},"content":"1. For the storing of information, it creates the necessary parent directories for the file and the file itself if they don\u0027t exist","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"TriciaBK"},"content":"2. In the text file, the following contents are stored in order, each taking up a line:","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"TriciaBK"},"content":"   1. Player\u0027s color information ","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"TriciaBK"},"content":"   2. Game difficulty","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"TriciaBK"},"content":"   3. Color of the next player (the color to be played upon the loading of game)","lastModifiedDate":"2023-11-13"},{"lineNumber":171,"author":{"gitId":"TriciaBK"},"content":"   4. Human player\u0027s past moves in the form of comma-separated string","lastModifiedDate":"2023-11-13"},{"lineNumber":172,"author":{"gitId":"TriciaBK"},"content":"   5. CPU\u0027s past moves in the form of comma-separated string ","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"TriciaBK"},"content":"   6. State of the chessboard in an 8x8 format, taking up 8 lines.","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"TriciaBK"},"content":"3. For the loading of information the above saved information are loaded (Player\u0027s color, game difficulty, next turn\u0027s color, player\u0027s moves, CPU\u0027s moves and board state)","lastModifiedDate":"2023-11-13"},{"lineNumber":175,"author":{"gitId":"TriciaBK"},"content":"4. To ensure data is not corrupted, the executeSavedMoves method parses the saved player\u0027s moves and CPU\u0027s moves to check against the saved board state ","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"TriciaBK"},"content":"5. Other features include resetting the game by clearing the contents of the file.","lastModifiedDate":"2023-11-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":181,"author":{"gitId":"TriciaBK"},"content":"1. Novice players trying to practice chess and play chess offline without a chess set. ","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"TriciaBK"},"content":"2. Time-poor users looking for a very simple, clean, gimmick-free chess application.","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":185,"author":{"gitId":"TriciaBK"},"content":"- Chess novices can use ChessMaster CLI to learn the game\u0027s rules and practice their skills.","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"TriciaBK"},"content":"- Busy students can open the application up in their terminal easily for a quick game of chess.","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"TriciaBK"},"content":"- The CLI interface is intuitive, making it easy for beginners to understand moves and strategies","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":189,"author":{"gitId":"antrikshdhand"},"content":"## User stories","lastModifiedDate":"2023-11-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"| Version | As a ...   | I want to ...                                          | So that I can ...                                      |","lastModifiedDate":"2020-05-24"},{"lineNumber":192,"author":{"gitId":"TriciaBK"},"content":"|---------|------------|--------------------------------------------------------|--------------------------------------------------------|","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"| v1.0    | new user   | see usage instructions                                 | refer to them when I forget how to use the application |","lastModifiedDate":"2020-05-24"},{"lineNumber":194,"author":{"gitId":"TriciaBK"},"content":"| v1.0    | player     | do only valid moves                                    | play chess properly                                    |","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"TriciaBK"},"content":"| v1.0    | player     | start a new game                                       | play chess multiple times                              |","lastModifiedDate":"2023-11-02"},{"lineNumber":196,"author":{"gitId":"onx001"},"content":"| v1.0    | player     | see the current state of the chess board on every turn | think about what move to play                          |","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"onx001"},"content":"| v1.0    | player     | tell which symbol represents which piece               | know what is where                                     |","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"onx001"},"content":"| v1.0    | player     | specify move coordinates                               | move the piece I want how I want it                    |","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"onx001"},"content":"| v1.0    | player     | promote pieces when the option is available            | play extended games properly                           |","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"onx001"},"content":"| v1.0    | player     | have the option to abort the game                      | leave the game when I no longer want to play           |","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"TriciaBK"},"content":"| v1.0    | player     | save and get back to a game                            | leave when I am busy and resume a game when I am free  |","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"TriciaBK"},"content":"| v2.0    | new player | see available moves for a piece                        | learn the rules of chess and valid moves               |","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"TriciaBK"},"content":"| v2.0    | new player | refresh the rules of chess anytime                     | recap and learn the rules of chess                     |","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"TriciaBK"},"content":"| v2.0    | player     | see past move history                                  | recap through the gameplay                             |","lastModifiedDate":"2023-11-13"},{"lineNumber":205,"author":{"gitId":"TriciaBK"},"content":"| v2.0    | player     | see captured pieces                                    | gauge the state of the game                            |","lastModifiedDate":"2023-11-13"},{"lineNumber":206,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":207,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"antrikshdhand"},"content":"## Non-functional requirements","lastModifiedDate":"2023-11-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":210,"author":{"gitId":"TriciaBK"},"content":"1. Should work on any mainstream OS as long as it has Java 11 or above installed. ","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"TriciaBK"},"content":"2. A user with a basic understanding of chess should be able to navigate the game without difficulty. ","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"TriciaBK"},"content":"{More to be added}","lastModifiedDate":"2023-10-27"},{"lineNumber":213,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":214,"author":{"gitId":"antrikshdhand"},"content":"## Manual testing","lastModifiedDate":"2023-11-07"},{"lineNumber":215,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":216,"author":{"gitId":"antrikshdhand"},"content":"This section describes the process of manual testing for ChessMaster. ChessMaster utilises `JUnit 5.10.0` for automated testing. Please ensure you are using the same version before proceeding.","lastModifiedDate":"2023-11-07"},{"lineNumber":217,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":218,"author":{"gitId":"antrikshdhand"},"content":"### End-to-end testing","lastModifiedDate":"2023-11-07"},{"lineNumber":219,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":220,"author":{"gitId":"antrikshdhand"},"content":"In addition to unit tests, we have also set up functionality for end-to-end tests. End-to-end testing, in the context of ChessMaster, involves testing the entire program, simulating user interactions, and verifying that the system functions as expected. These tests cover a wide range of scenarios, from setting up the game to making moves and evaluating outcomes.","lastModifiedDate":"2023-11-07"},{"lineNumber":221,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":222,"author":{"gitId":"antrikshdhand"},"content":"The general idea is to compare expected output to real output, as usual. But we must first capture the `System.out` output to be able to call `assertEquals()` on it with the expected output. This is what our class `ConsoleCapture` does: it just redirects all output from `System.out` to a new, temporary stream. We start the stream before each test, run the game, and then `stopCapture()` after the game is complete.","lastModifiedDate":"2023-11-07"},{"lineNumber":223,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":224,"author":{"gitId":"antrikshdhand"},"content":"In general, to create your own end-to-end test, follow these steps:","lastModifiedDate":"2023-11-07"},{"lineNumber":225,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":226,"author":{"gitId":"antrikshdhand"},"content":"1. Create a test class: Start by creating a new Java class in the `./src/test/java/chessmaster/endtoend` directory. The name of your class should reflect the feature or scenario you plan to test e.g. `HistoryTest` tests the History command.","lastModifiedDate":"2023-11-07"},{"lineNumber":227,"author":{"gitId":"antrikshdhand"},"content":"2. Capture program output: To capture the program\u0027s output, you can use the `ConsoleCapture` class. This class redirects all output from `System.out` to a temporary stream, allowing you to capture the output during the test. Begin capturing the output before each test and stop it after the test is complete.","lastModifiedDate":"2023-11-07"},{"lineNumber":228,"author":{"gitId":"antrikshdhand"},"content":"3. Define test input: Construct your test input as a string, ensuring it ends with the abort command or a win condition, depending on your test\u0027s requirements.","lastModifiedDate":"2023-11-07"},{"lineNumber":229,"author":{"gitId":"antrikshdhand"},"content":"4. Run the game: Create and run the game, allowing the test to take in the input you defined in the previous step.","lastModifiedDate":"2023-11-07"},{"lineNumber":230,"author":{"gitId":"antrikshdhand"},"content":"5. Capture and compare output: Utilise `ConsoleCapture` to capture the program\u0027s output and compare it to the expected output. The expected output should be saved in a text file under the `./src/test/resources` directory.","lastModifiedDate":"2023-11-07"},{"lineNumber":231,"author":{"gitId":"antrikshdhand"},"content":"6. Cleanup: After the test is complete, be sure to stop capturing the output and perform any necessary cleanup steps.","lastModifiedDate":"2023-11-07"},{"lineNumber":232,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":233,"author":{"gitId":"antrikshdhand"},"content":"Some sample stub code is provided below.","lastModifiedDate":"2023-11-07"},{"lineNumber":234,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":235,"author":{"gitId":"antrikshdhand"},"content":"```java","lastModifiedDate":"2023-11-07"},{"lineNumber":236,"author":{"gitId":"antrikshdhand"},"content":"public class Test {","lastModifiedDate":"2023-11-07"},{"lineNumber":237,"author":{"gitId":"antrikshdhand"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-07"},{"lineNumber":238,"author":{"gitId":"antrikshdhand"},"content":"    public void setup() {","lastModifiedDate":"2023-11-07"},{"lineNumber":239,"author":{"gitId":"antrikshdhand"},"content":"        // Create temporary storage file just for tests","lastModifiedDate":"2023-11-07"},{"lineNumber":240,"author":{"gitId":"antrikshdhand"},"content":"        String filepath \u003d \"testingStorage.txt\";","lastModifiedDate":"2023-11-07"},{"lineNumber":241,"author":{"gitId":"antrikshdhand"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2023-11-07"},{"lineNumber":242,"author":{"gitId":"antrikshdhand"},"content":"        try {","lastModifiedDate":"2023-11-07"},{"lineNumber":243,"author":{"gitId":"antrikshdhand"},"content":"            file.createNewFile();","lastModifiedDate":"2023-11-07"},{"lineNumber":244,"author":{"gitId":"antrikshdhand"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-07"},{"lineNumber":245,"author":{"gitId":"antrikshdhand"},"content":"            System.out.println(\"An error occurred: \" + e.getMessage());","lastModifiedDate":"2023-11-07"},{"lineNumber":246,"author":{"gitId":"antrikshdhand"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":247,"author":{"gitId":"antrikshdhand"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2023-11-07"},{"lineNumber":248,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":249,"author":{"gitId":"antrikshdhand"},"content":"        consoleCapture \u003d new ConsoleCapture();","lastModifiedDate":"2023-11-07"},{"lineNumber":250,"author":{"gitId":"antrikshdhand"},"content":"        consoleCapture.startCapture();","lastModifiedDate":"2023-11-07"},{"lineNumber":251,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":252,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":253,"author":{"gitId":"antrikshdhand"},"content":"    @AfterEach","lastModifiedDate":"2023-11-07"},{"lineNumber":254,"author":{"gitId":"antrikshdhand"},"content":"    public void shutdown() {","lastModifiedDate":"2023-11-07"},{"lineNumber":255,"author":{"gitId":"antrikshdhand"},"content":"        String filepath \u003d \"testingStorage.txt\";","lastModifiedDate":"2023-11-07"},{"lineNumber":256,"author":{"gitId":"antrikshdhand"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2023-11-07"},{"lineNumber":257,"author":{"gitId":"antrikshdhand"},"content":"        file.delete();","lastModifiedDate":"2023-11-07"},{"lineNumber":258,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":259,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":260,"author":{"gitId":"antrikshdhand"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":261,"author":{"gitId":"antrikshdhand"},"content":"    public void historyCommand_twoMovesWhiteStarts() {","lastModifiedDate":"2023-11-07"},{"lineNumber":262,"author":{"gitId":"antrikshdhand"},"content":"        // Convert user input string to an InputStream and tell Java to use it as the input","lastModifiedDate":"2023-11-07"},{"lineNumber":263,"author":{"gitId":"antrikshdhand"},"content":"        String testInput \u003d \"\u003cyour input here\u003e\";","lastModifiedDate":"2023-11-07"},{"lineNumber":264,"author":{"gitId":"antrikshdhand"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(testInput.getBytes());","lastModifiedDate":"2023-11-07"},{"lineNumber":265,"author":{"gitId":"antrikshdhand"},"content":"        System.setIn(in);","lastModifiedDate":"2023-11-07"},{"lineNumber":266,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":267,"author":{"gitId":"antrikshdhand"},"content":"        // Need to create TextUI() after setting System input stream","lastModifiedDate":"2023-11-07"},{"lineNumber":268,"author":{"gitId":"antrikshdhand"},"content":"        ui \u003d new TextUI();","lastModifiedDate":"2023-11-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":270,"author":{"gitId":"antrikshdhand"},"content":"        // Create a new board and game with your desired testing preferences","lastModifiedDate":"2023-11-07"},{"lineNumber":271,"author":{"gitId":"antrikshdhand"},"content":"        board \u003d new ChessBoard();","lastModifiedDate":"2023-11-07"},{"lineNumber":272,"author":{"gitId":"antrikshdhand"},"content":"        Game game \u003d new Game();","lastModifiedDate":"2023-11-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":274,"author":{"gitId":"antrikshdhand"},"content":"        // Run the game. This will automatically use the `testInput` string as user input","lastModifiedDate":"2023-11-07"},{"lineNumber":275,"author":{"gitId":"antrikshdhand"},"content":"        game.run();","lastModifiedDate":"2023-11-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":277,"author":{"gitId":"antrikshdhand"},"content":"        // Compare captured output with expected output and assert","lastModifiedDate":"2023-11-07"},{"lineNumber":278,"author":{"gitId":"antrikshdhand"},"content":"        consoleCapture.stopCapture();","lastModifiedDate":"2023-11-07"},{"lineNumber":279,"author":{"gitId":"antrikshdhand"},"content":"        String capturedOutput \u003d consoleCapture.getCapturedOutput();","lastModifiedDate":"2023-11-07"},{"lineNumber":280,"author":{"gitId":"antrikshdhand"},"content":"        String expectedOutput \u003d readExpectedOutputFromFile(\"src/test/resources/historyCommand_twoMovesWhiteStarts.txt\");","lastModifiedDate":"2023-11-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":282,"author":{"gitId":"antrikshdhand"},"content":"        assertEquals(expectedOutput, capturedOutput);","lastModifiedDate":"2023-11-07"},{"lineNumber":283,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":284,"author":{"gitId":"antrikshdhand"},"content":"}","lastModifiedDate":"2023-11-07"},{"lineNumber":285,"author":{"gitId":"antrikshdhand"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":287,"author":{"gitId":"antrikshdhand"},"content":"Some notes about the above code:","lastModifiedDate":"2023-11-07"},{"lineNumber":288,"author":{"gitId":"antrikshdhand"},"content":"- @BeforeEach test we create a new storage Object and startCapturing() System.out data.","lastModifiedDate":"2023-11-07"},{"lineNumber":289,"author":{"gitId":"antrikshdhand"},"content":"- Inside each @Test we first tell Java to use our given string as user input instead of stdin.","lastModifiedDate":"2023-11-07"},{"lineNumber":290,"author":{"gitId":"antrikshdhand"},"content":"- Then we create our board and game with whichever starting color and orientation we want.","lastModifiedDate":"2023-11-07"},{"lineNumber":291,"author":{"gitId":"antrikshdhand"},"content":"- We run the game, and then compare the real output to the expected output.","lastModifiedDate":"2023-11-07"},{"lineNumber":292,"author":{"gitId":"antrikshdhand"},"content":"- Here, the expected output is saved in a .txt file under ./src/test/resources","lastModifiedDate":"2023-11-07"},{"lineNumber":293,"author":{"gitId":"antrikshdhand"},"content":"- @AfterEach test we delete the storage file.","lastModifiedDate":"2023-11-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":295,"author":{"gitId":"antrikshdhand"},"content":"Things to note when creating your own test:","lastModifiedDate":"2023-11-07"},{"lineNumber":296,"author":{"gitId":"antrikshdhand"},"content":"- `testInput` MUST end with the abort command (or a win condition) for the test to run properly.","lastModifiedDate":"2023-11-07"},{"lineNumber":297,"author":{"gitId":"antrikshdhand"},"content":"- Save your expected output in a file named with the same test method name for documentation purposes.","lastModifiedDate":"2023-11-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":299,"author":{"gitId":"antrikshdhand"},"content":"By following these steps, you can create end-to-end tests that cover various gameplay scenarios and command usage. These tests help ensure that the program functions correctly and produces the expected output in response to user interactions.","lastModifiedDate":"2023-11-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"ken-ruster":33,"antrikshdhand":98,"TriciaBK":43,"onx001":57,"TongZhengHong":44,"-":26}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ken-ruster"},"content":"# ChessMaster","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"ChessMasterCLI is a command-line interface (CLI) chess game designed to make learning and training accessible for beginners while offering an engaging experience for all skill levels. This sleek and user-friendly chess simulator provides a platform for novice players to build their skills and understanding of the game.","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"For more information: ","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"ken-ruster":1,"TongZhengHong":2,"-":5}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"# ChessMaster User Guide","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"ChessMasterCLI is a command-line interface (CLI) chess game designed to make learning and training accessible for beginners while offering an engaging experience for all skill levels. This sleek and user-friendly chess simulator provides a platform for novice players to build their skills and understanding of the game.","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"- [Starting a game](#starting-a-game)","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"- [Gameplay](#gameplay)","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"- [Features](#features)","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"    - Gameplay features","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"        - [Make a move](#make-a-move)","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"        - [Show available moves: `moves`](#show-available-moves-moves)","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"        - [Show current chess board: `show`](#show-current-chess-board-show)","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"    - Getting help","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"        - [Show chess rules: `rules`](#show-chess-rules-rules)","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"        - [Show commands: `help`](#show-commands-help)","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"        - [Legend: `legend`](#view-pieces-representation-legend)","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"TriciaBK"},"content":"        - [Restart game: `restart`](#start-a-new-game-of-chess-restart)        ","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"antrikshdhand"},"content":"        - [View history of game moves: `history`](#view-history-of-all-game-moves-history)","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"antrikshdhand"},"content":"        - [Step back in history: `stepback`](#step-back-in-history-stepback)","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"antrikshdhand"},"content":"        - [List pieces in play: `captured`](#list-pieces-in-play-captured)","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"antrikshdhand"},"content":"        - [Exit game: `exit`](#exit-the-game-exit)","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"1. Ensure you have **Java 11 or above** installed in your system.","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"2. Download the latest version of `ChessMaster.jar` from [here](https://github.com/AY2324S1-CS2113-T18-1/tp/releases).","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"3. Open a terminal instance and navigate into the folder that contains the downloaded ChessMaster.jar file.","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"```bash","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"cd PATH_TO_JAR_FILE","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"4. Run the jar application with the following command:","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"```bash","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"java -jar ChessMaster.jar","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"You should be greeted by a welcome message from ChessMaster:","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"Hey there, chess geek! You have stumbled upon the one and only:","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"    ________                      __  ___           __","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"   / ____/ /_  ___  __________   /  |/  /___ ______/ /____  _____","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"  / /   / __ \\/ _ \\/ ___/ ___/  / /|_/ / __ `/ ___/ __/ _ \\/ ___/","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":" / /___/ / / /  __(__  |__  )  / /  / / /_/ (__  ) /_/  __/ /","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":" \\____/_/ /_/\\___/____/____/  /_/  /_/\\__,_/____/\\__/\\___/_/","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"TongZhengHong"},"content":"where CHESS becomes an exciting journey of strategy and skill!","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"TongZhengHong"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"TongZhengHong"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"TongZhengHong"},"content":"## Starting a game","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"TongZhengHong"},"content":"Upon launching the application, ChessMaster checks if there is a previous game in progress. If a previous game exists, you\u0027ll be presented with the option to continue from where you left off. Please enter `y` for **yes** and `n` for **no**.","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"TongZhengHong"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"TriciaBK"},"content":"You have an ongoing previous chess game. Continue game? [y/n/exit]","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"TongZhengHong"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"TongZhengHong"},"content":"However, if you prefer to **start a fresh game** or if **no previous game is found**, ChessMaster will prompt you to select your preferred color—whether it\u0027s \"White\" or \"Black.\" Please enter `b` for **black** and `w` for **white**.","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"TongZhengHong"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"TriciaBK"},"content":"Choose your starting color to start new game! [b/w/exit]","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"TongZhengHong"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"antrikshdhand"},"content":"Next, you can choose the difficulty of the AI you will be pitched against! The current supported difficulty levels range from 1 to 3. Please enter the number corresponding to your preferred difficulty level.","lastModifiedDate":"2023-11-14"},{"lineNumber":74,"author":{"gitId":"onx001"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"antrikshdhand"},"content":"Choose your difficulty level! [1/2/3/exit]","lastModifiedDate":"2023-11-14"},{"lineNumber":76,"author":{"gitId":"onx001"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"TriciaBK"},"content":"Inputs that are not compliant with the expect input (indicated in `[]`) will be rejected and users will be prompted to re-input.","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"TriciaBK"},"content":"Else, you\u0027ll be off to a rewarding journey of enhancing your chess skills and enjoying the timeless game of strategy and tactics with ChessMaster!","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"TongZhengHong"},"content":"## Gameplay","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"TongZhengHong"},"content":"The gameplay system of ChessMaster provides you with the flexibility to enter either a **command** or a **move** during your turn. ","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"TongZhengHong"},"content":"- If you opt for a **command**, the system will promptly solicit your next action, allowing you to access various [features](#features) seamlessly. However, when you decide to make a move, the system will evaluate your input for validity. ","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"TongZhengHong"},"content":"- Only when you enter a **valid move** will your turn be passed to the CPU, enabling it to respond with its strategic move. ","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"TongZhengHong"},"content":"Additionally, every time a move is executed, ChessMaster provides a comprehensive view of the chessboard, displaying the state of the game following the previous move.","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"TongZhengHong"},"content":"\u003ctable\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"TongZhengHong"},"content":"\u003ctr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"TongZhengHong"},"content":"    \u003cth\u003eUser Move\u003c/th\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"TongZhengHong"},"content":"    \u003cth\u003eCPU move\u003c/th\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"TongZhengHong"},"content":"\u003c/tr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"TongZhengHong"},"content":"\u003ctr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"TongZhengHong"},"content":"\u003ctd\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"TongZhengHong"},"content":"\u003cpre\u003e\u003ccode\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":99,"author":{"gitId":"TongZhengHong"},"content":"move d2 d4","lastModifiedDate":"2023-11-14"},{"lineNumber":100,"author":{"gitId":"TongZhengHong"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"TongZhengHong"},"content":"You moved Pawn from d2 to d4","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"TongZhengHong"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"TongZhengHong"},"content":"                 (a) (b) (c) (d) (e) (f) (g) (h)","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"TongZhengHong"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"TongZhengHong"},"content":"            (8) | R | N | B | Q | K | B | N | R | (8)","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"TongZhengHong"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"TongZhengHong"},"content":"            (7) | P | P | P | P | P | P | P | P | (7)","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"TongZhengHong"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"TongZhengHong"},"content":"            (6) |   |   |   |   |   |   |   |   | (6)","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"TongZhengHong"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"TongZhengHong"},"content":"            (5) |   |   |   |   |   |   |   |   | (5)","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"TongZhengHong"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"TongZhengHong"},"content":"            (4) |   |   |   |(p)|   |   |   |   | (4)","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"TongZhengHong"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"TongZhengHong"},"content":"            (3) |   |   |   |   |   |   |   |   | (3)","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"TongZhengHong"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"TongZhengHong"},"content":"            (2) | p | p | p |( )| p | p | p | p | (2)","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"TongZhengHong"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"TongZhengHong"},"content":"            (1) | r | n | b | q | k | b | n | r | (1)","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"TongZhengHong"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"TongZhengHong"},"content":"                 (a) (b) (c) (d) (e) (f) (g) (h)","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"TongZhengHong"},"content":"\u003c/code\u003e\u003c/pre\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":125,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"TongZhengHong"},"content":"\u003c/td\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"TongZhengHong"},"content":"\u003ctd\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"TongZhengHong"},"content":"\u003cpre\u003e\u003ccode\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":130,"author":{"gitId":"TongZhengHong"},"content":"ChessMaster is thinking of a move...","lastModifiedDate":"2023-11-14"},{"lineNumber":131,"author":{"gitId":"TongZhengHong"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"TongZhengHong"},"content":"ChessMaster moved Pawn from e7 to e5","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"TongZhengHong"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"TongZhengHong"},"content":"                 (a) (b) (c) (d) (e) (f) (g) (h)","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"TongZhengHong"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"TongZhengHong"},"content":"            (8) | R | N | B | Q | K | B | N | R | (8)","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"TongZhengHong"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"TongZhengHong"},"content":"            (7) | P | P | P | P |( )| P | P | P | (7)","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"TongZhengHong"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":142,"author":{"gitId":"TongZhengHong"},"content":"            (6) |   |   |   |   |   |   |   |   | (6)","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"TongZhengHong"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":144,"author":{"gitId":"TongZhengHong"},"content":"            (5) |   |   |   |   |(P)|   |   |   | (5)","lastModifiedDate":"2023-11-01"},{"lineNumber":145,"author":{"gitId":"TongZhengHong"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"TongZhengHong"},"content":"            (4) |   |   |   | p |   |   |   |   | (4)","lastModifiedDate":"2023-11-01"},{"lineNumber":147,"author":{"gitId":"TongZhengHong"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"TongZhengHong"},"content":"            (3) |   |   |   |   |   |   |   |   | (3)","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"TongZhengHong"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"TongZhengHong"},"content":"            (2) | p | p | p |   | p | p | p | p | (2)","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"TongZhengHong"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":152,"author":{"gitId":"TongZhengHong"},"content":"            (1) | r | n | b | q | k | b | n | r | (1)","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"TongZhengHong"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"TongZhengHong"},"content":"                 (a) (b) (c) (d) (e) (f) (g) (h)","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"TongZhengHong"},"content":"\u003c/code\u003e\u003c/pre\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":156,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"TongZhengHong"},"content":"\u003c/td\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":158,"author":{"gitId":"TongZhengHong"},"content":"\u003c/tr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"TongZhengHong"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":161,"author":{"gitId":"ken-ruster"},"content":"## Ending the game","lastModifiedDate":"2023-11-01"},{"lineNumber":162,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"onx001"},"content":"The game will automatically end and a victor be declared when one side has been checkmated, or if both players are stuck in a stalemate situation where neither player can avoid moving into a checked position.","lastModifiedDate":"2023-11-12"},{"lineNumber":164,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":165,"author":{"gitId":"antrikshdhand"},"content":"Checkmate is the point in the game where the attacking player has the opponent\u0027s king in a situation where it can\u0027t escape being captured on the next move. The king is \"trapped\" and has no safe squares to move to, and no other pieces can help.","lastModifiedDate":"2023-11-14"},{"lineNumber":166,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"TriciaBK"},"content":"Otherwise, you may use the `exit` command if you wish to end the game midway and quit the program or `restart` command to start a new game. ","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":171,"author":{"gitId":"TongZhengHong"},"content":"### Make a move","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":173,"author":{"gitId":"ken-ruster"},"content":"To make a move, simply enter the coordinate of the piece to be moved, followed by the coordinates it is to be moved to.","lastModifiedDate":"2023-11-01"},{"lineNumber":174,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":175,"author":{"gitId":"antrikshdhand"},"content":"Format: `move [column][row] [column][row]`","lastModifiedDate":"2023-11-07"},{"lineNumber":176,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":177,"author":{"gitId":"ken-ruster"},"content":"Examples: ","lastModifiedDate":"2023-11-01"},{"lineNumber":178,"author":{"gitId":"antrikshdhand"},"content":"- `move a2 a4`","lastModifiedDate":"2023-11-07"},{"lineNumber":179,"author":{"gitId":"antrikshdhand"},"content":"- `move b3 g6`","lastModifiedDate":"2023-11-07"},{"lineNumber":180,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"antrikshdhand"},"content":"ChessMaster automatically checks if the move is valid and legal before it is executed. If the move is valid, an output as shown above in the [Gameplay](#gameplay) section will be output. Else, the following error","lastModifiedDate":"2023-11-14"},{"lineNumber":182,"author":{"gitId":"TriciaBK"},"content":"message will be shown:","lastModifiedDate":"2023-11-05"},{"lineNumber":183,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"ken-ruster"},"content":"`Oops, that move isn\u0027t valid!`","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":187,"author":{"gitId":"TongZhengHong"},"content":"### Show available moves: `moves`","lastModifiedDate":"2023-11-01"},{"lineNumber":188,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":189,"author":{"gitId":"ken-ruster"},"content":"Shows the available moves for a piece on the board. This command can be used for both yours and the enemy\u0027s pieces.","lastModifiedDate":"2023-11-01"},{"lineNumber":190,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":191,"author":{"gitId":"ken-ruster"},"content":"Format: `moves [column][row]`","lastModifiedDate":"2023-11-01"},{"lineNumber":192,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":193,"author":{"gitId":"TriciaBK"},"content":"Example:  `moves e5`","lastModifiedDate":"2023-11-05"},{"lineNumber":194,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":195,"author":{"gitId":"TriciaBK"},"content":"Expected Output:","lastModifiedDate":"2023-11-05"},{"lineNumber":196,"author":{"gitId":"TongZhengHong"},"content":"```","lastModifiedDate":"2023-11-03"},{"lineNumber":197,"author":{"gitId":"ken-ruster"},"content":"                 (a) (b) (c) (d) (e) (f) (g) (h)","lastModifiedDate":"2023-11-01"},{"lineNumber":198,"author":{"gitId":"ken-ruster"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":199,"author":{"gitId":"ken-ruster"},"content":"            (8) | R | N | B | Q | K | B | N | R | (8)","lastModifiedDate":"2023-11-01"},{"lineNumber":200,"author":{"gitId":"ken-ruster"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":201,"author":{"gitId":"ken-ruster"},"content":"            (7) | P | P | P |[ ]|   |[P]| P | P | (7)","lastModifiedDate":"2023-11-01"},{"lineNumber":202,"author":{"gitId":"ken-ruster"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"ken-ruster"},"content":"            (6) |   |   |[ ]| P |   |   |[ ]|   | (6)","lastModifiedDate":"2023-11-01"},{"lineNumber":204,"author":{"gitId":"ken-ruster"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":205,"author":{"gitId":"ken-ruster"},"content":"            (5) |   |   |   |   |{n}|   |   |   | (5)","lastModifiedDate":"2023-11-01"},{"lineNumber":206,"author":{"gitId":"ken-ruster"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":207,"author":{"gitId":"ken-ruster"},"content":"            (4) |   |   |[ ]|   |   |   |[ ]|   | (4)","lastModifiedDate":"2023-11-01"},{"lineNumber":208,"author":{"gitId":"ken-ruster"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":209,"author":{"gitId":"ken-ruster"},"content":"            (3) |   |   |   |[ ]|   |[ ]|   |   | (3)","lastModifiedDate":"2023-11-01"},{"lineNumber":210,"author":{"gitId":"ken-ruster"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":211,"author":{"gitId":"ken-ruster"},"content":"            (2) | p | p | p | p | p | p | p | p | (2)","lastModifiedDate":"2023-11-01"},{"lineNumber":212,"author":{"gitId":"ken-ruster"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":213,"author":{"gitId":"ken-ruster"},"content":"            (1) | r | n | b | q | k | b |   | r | (1)","lastModifiedDate":"2023-11-01"},{"lineNumber":214,"author":{"gitId":"ken-ruster"},"content":"                _________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":215,"author":{"gitId":"ken-ruster"},"content":"                 (a) (b) (c) (d) (e) (f) (g) (h)","lastModifiedDate":"2023-11-01"},{"lineNumber":216,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":217,"author":{"gitId":"ken-ruster"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":218,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":219,"author":{"gitId":"ken-ruster"},"content":"Available coordinates for Knight at e5: ","lastModifiedDate":"2023-11-01"},{"lineNumber":220,"author":{"gitId":"ken-ruster"},"content":"f7 d7 f3 d3 g6 g4 c6 c4 ","lastModifiedDate":"2023-11-01"},{"lineNumber":221,"author":{"gitId":"ken-ruster"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-01"},{"lineNumber":222,"author":{"gitId":"ken-ruster"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":223,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":224,"author":{"gitId":"TongZhengHong"},"content":"### Show current chess board: `show`","lastModifiedDate":"2023-11-01"},{"lineNumber":225,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":226,"author":{"gitId":"ken-ruster"},"content":"Shows the current state of the chess board.","lastModifiedDate":"2023-11-01"},{"lineNumber":227,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":228,"author":{"gitId":"ken-ruster"},"content":"Format: `show`","lastModifiedDate":"2023-11-01"},{"lineNumber":229,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":230,"author":{"gitId":"TriciaBK"},"content":"Expected Output:","lastModifiedDate":"2023-11-05"},{"lineNumber":231,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":232,"author":{"gitId":"onx001"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":233,"author":{"gitId":"onx001"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":234,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":235,"author":{"gitId":"onx001"},"content":"Here is the current board state:","lastModifiedDate":"2023-11-13"},{"lineNumber":236,"author":{"gitId":"onx001"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":237,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":238,"author":{"gitId":"onx001"},"content":"                 (a) (b) (c) (d) (e) (f) (g) (h)","lastModifiedDate":"2023-11-13"},{"lineNumber":239,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":240,"author":{"gitId":"onx001"},"content":"            (8) | R | N | B | Q | K | B | N | R | (8)","lastModifiedDate":"2023-11-13"},{"lineNumber":241,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":242,"author":{"gitId":"onx001"},"content":"            (7) | P | P | P | P | P | P | P | P | (7)","lastModifiedDate":"2023-11-13"},{"lineNumber":243,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":244,"author":{"gitId":"onx001"},"content":"            (6) |   |   |   |   |   |   |   |   | (6)","lastModifiedDate":"2023-11-13"},{"lineNumber":245,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":246,"author":{"gitId":"onx001"},"content":"            (5) |   |   |   |   |   |   |   |   | (5)","lastModifiedDate":"2023-11-13"},{"lineNumber":247,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":248,"author":{"gitId":"onx001"},"content":"            (4) |   |   |   |   |   |   |   |   | (4)","lastModifiedDate":"2023-11-13"},{"lineNumber":249,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":250,"author":{"gitId":"onx001"},"content":"            (3) |   |   |   |   |   |   |   |   | (3)","lastModifiedDate":"2023-11-13"},{"lineNumber":251,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":252,"author":{"gitId":"onx001"},"content":"            (2) | p | p | p | p | p | p | p | p | (2)","lastModifiedDate":"2023-11-13"},{"lineNumber":253,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":254,"author":{"gitId":"onx001"},"content":"            (1) | r | n | b | q | k | b | n | r | (1)","lastModifiedDate":"2023-11-13"},{"lineNumber":255,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":256,"author":{"gitId":"onx001"},"content":"                 (a) (b) (c) (d) (e) (f) (g) (h)","lastModifiedDate":"2023-11-13"},{"lineNumber":257,"author":{"gitId":"onx001"},"content":"                 ","lastModifiedDate":"2023-11-13"},{"lineNumber":258,"author":{"gitId":"onx001"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":259,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":260,"author":{"gitId":"TongZhengHong"},"content":"### Show chess rules: `rules`","lastModifiedDate":"2023-11-01"},{"lineNumber":261,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":262,"author":{"gitId":"ken-ruster"},"content":"Obtain a quick refresher on the rules of chess","lastModifiedDate":"2023-11-01"},{"lineNumber":263,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":264,"author":{"gitId":"ken-ruster"},"content":"Format: `rules`","lastModifiedDate":"2023-11-01"},{"lineNumber":265,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":266,"author":{"gitId":"TriciaBK"},"content":"Expected Output:","lastModifiedDate":"2023-11-05"},{"lineNumber":267,"author":{"gitId":"TriciaBK"},"content":"```","lastModifiedDate":"2023-11-05"},{"lineNumber":268,"author":{"gitId":"TriciaBK"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-05"},{"lineNumber":269,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":270,"author":{"gitId":"TriciaBK"},"content":"Here are simple chess rules to get you started:","lastModifiedDate":"2023-11-05"},{"lineNumber":271,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":272,"author":{"gitId":"TriciaBK"},"content":"Piece movement:","lastModifiedDate":"2023-11-05"},{"lineNumber":273,"author":{"gitId":"TriciaBK"},"content":"   Pawn (\"p\") move forward one square but capture diagonally.","lastModifiedDate":"2023-11-05"},{"lineNumber":274,"author":{"gitId":"TriciaBK"},"content":"   Rooks (\"r\") move horizontally and vertically any number of squares.","lastModifiedDate":"2023-11-05"},{"lineNumber":275,"author":{"gitId":"TriciaBK"},"content":"   Knights (\"n\") move in an L-shape.","lastModifiedDate":"2023-11-05"},{"lineNumber":276,"author":{"gitId":"TriciaBK"},"content":"   Bishops (\"b\") move diagonally any number of squares.","lastModifiedDate":"2023-11-05"},{"lineNumber":277,"author":{"gitId":"TriciaBK"},"content":"   Queens (\"q\") move any number of squares in any direction.","lastModifiedDate":"2023-11-05"},{"lineNumber":278,"author":{"gitId":"TriciaBK"},"content":"   Kings (\"k\") move one square in any direction.","lastModifiedDate":"2023-11-05"},{"lineNumber":279,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":280,"author":{"gitId":"TriciaBK"},"content":"Special Rules:","lastModifiedDate":"2023-11-13"},{"lineNumber":281,"author":{"gitId":"TriciaBK"},"content":"[Refer to specific move methods in the User Guide]","lastModifiedDate":"2023-11-13"},{"lineNumber":282,"author":{"gitId":"TriciaBK"},"content":"   Castling - King and rook move simultaneously to safeguard the king.","lastModifiedDate":"2023-11-13"},{"lineNumber":283,"author":{"gitId":"TriciaBK"},"content":"   En Passant - Pawn capturing when moving two squares from starting position.","lastModifiedDate":"2023-11-05"},{"lineNumber":284,"author":{"gitId":"TriciaBK"},"content":"   Pawn Promotion - Promote a pawn to another piece (except king) upon reaching the back rank.","lastModifiedDate":"2023-11-05"},{"lineNumber":285,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":286,"author":{"gitId":"TriciaBK"},"content":"Objective:","lastModifiedDate":"2023-11-05"},{"lineNumber":287,"author":{"gitId":"TriciaBK"},"content":"   Game ends when one player\u0027s king is in checkmate, under attack and can\u0027t escape capture.","lastModifiedDate":"2023-11-05"},{"lineNumber":288,"author":{"gitId":"TriciaBK"},"content":"   The delivering player wins the game.","lastModifiedDate":"2023-11-05"},{"lineNumber":289,"author":{"gitId":"TriciaBK"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-05"},{"lineNumber":290,"author":{"gitId":"TriciaBK"},"content":"```","lastModifiedDate":"2023-11-05"},{"lineNumber":291,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":292,"author":{"gitId":"TongZhengHong"},"content":"#### 1. Castling","lastModifiedDate":"2023-11-14"},{"lineNumber":293,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":294,"author":{"gitId":"TriciaBK"},"content":"For the move to be valid:","lastModifiedDate":"2023-11-06"},{"lineNumber":295,"author":{"gitId":"TriciaBK"},"content":"- It\u0027s the king\u0027s first move. ","lastModifiedDate":"2023-11-06"},{"lineNumber":296,"author":{"gitId":"TriciaBK"},"content":"- It\u0027s the rook\u0027s first move. ","lastModifiedDate":"2023-11-06"},{"lineNumber":297,"author":{"gitId":"TriciaBK"},"content":"- There are no pieces between the king and the rook. ","lastModifiedDate":"2023-11-06"},{"lineNumber":298,"author":{"gitId":"onx001"},"content":"- The king is not in check and the king will not be in check after castling","lastModifiedDate":"2023-11-12"},{"lineNumber":299,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":300,"author":{"gitId":"TriciaBK"},"content":"To perform castling on either sides:","lastModifiedDate":"2023-11-06"},{"lineNumber":301,"author":{"gitId":"TriciaBK"},"content":"- Move your king two squares to the right/left (towards the rook).","lastModifiedDate":"2023-11-06"},{"lineNumber":302,"author":{"gitId":"TriciaBK"},"content":"- The rook will jump over the king and land on the square next to the king.","lastModifiedDate":"2023-11-06"},{"lineNumber":303,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":304,"author":{"gitId":"TongZhengHong"},"content":"Examples and expected output:","lastModifiedDate":"2023-11-14"},{"lineNumber":305,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":306,"author":{"gitId":"TongZhengHong"},"content":"\u003ctable\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":307,"author":{"gitId":"TongZhengHong"},"content":"\u003ctr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":308,"author":{"gitId":"TongZhengHong"},"content":"    \u003cth\u003eCastling availability: \u003ccode\u003emoves e1\u003c/code\u003e\u003c/th\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":309,"author":{"gitId":"TongZhengHong"},"content":"    \u003cth\u003eExecute castle move: \u003ccode\u003emoves e1 c1\u003c/code\u003e\u003c/th\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":310,"author":{"gitId":"TongZhengHong"},"content":"\u003c/tr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":311,"author":{"gitId":"TongZhengHong"},"content":"\u003ctr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":312,"author":{"gitId":"TongZhengHong"},"content":"\u003ctd\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":313,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":314,"author":{"gitId":"TongZhengHong"},"content":"\u003cpre\u003e\u003ccode\u003e                 (a) (b) (c) (d) (e) (f) (g) (h)","lastModifiedDate":"2023-11-14"},{"lineNumber":315,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":316,"author":{"gitId":"onx001"},"content":"            (8) | R |   |   |   | K |   |   | R | (8)","lastModifiedDate":"2023-11-12"},{"lineNumber":317,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":318,"author":{"gitId":"onx001"},"content":"            (7) | P | P | P |   |   |   | P | P | (7)","lastModifiedDate":"2023-11-12"},{"lineNumber":319,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":320,"author":{"gitId":"onx001"},"content":"            (6) |   |   |   |   |   |   |   |   | (6)","lastModifiedDate":"2023-11-12"},{"lineNumber":321,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":322,"author":{"gitId":"onx001"},"content":"            (5) |   |   | q |   |   | P |   |   | (5)","lastModifiedDate":"2023-11-12"},{"lineNumber":323,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":324,"author":{"gitId":"onx001"},"content":"            (4) |   |   |   |   |   | p |   |   | (4)","lastModifiedDate":"2023-11-12"},{"lineNumber":325,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":326,"author":{"gitId":"onx001"},"content":"            (3) |   |   | n |   |   |   |   |   | (3)","lastModifiedDate":"2023-11-12"},{"lineNumber":327,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":328,"author":{"gitId":"onx001"},"content":"            (2) | B | p |   |[.]|[.]| p | p | p | (2)","lastModifiedDate":"2023-11-12"},{"lineNumber":329,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":330,"author":{"gitId":"onx001"},"content":"            (1) | r |   |[.]|[.]|{k}| b | n | r | (1)","lastModifiedDate":"2023-11-12"},{"lineNumber":331,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":332,"author":{"gitId":"onx001"},"content":"                (a) (b) (c) (d) (e) (f) (g) (h)","lastModifiedDate":"2023-11-12"},{"lineNumber":333,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":334,"author":{"gitId":"onx001"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":335,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":336,"author":{"gitId":"onx001"},"content":"Available coordinates for King at e1:","lastModifiedDate":"2023-11-12"},{"lineNumber":337,"author":{"gitId":"onx001"},"content":"e2 d1 d2 c1","lastModifiedDate":"2023-11-12"},{"lineNumber":338,"author":{"gitId":"TongZhengHong"},"content":"_________________________________________________________________\u003c/code\u003e\u003c/pre\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":339,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":340,"author":{"gitId":"TongZhengHong"},"content":"\u003c/td\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":341,"author":{"gitId":"TongZhengHong"},"content":"\u003ctd\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":342,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":343,"author":{"gitId":"TongZhengHong"},"content":"\u003cpre\u003e\u003ccode\u003e_________________________________________________________________","lastModifiedDate":"2023-11-14"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":345,"author":{"gitId":"onx001"},"content":"You moved King from e1 to c1","lastModifiedDate":"2023-11-12"},{"lineNumber":346,"author":{"gitId":"onx001"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":348,"author":{"gitId":"onx001"},"content":"                (a) (b) (c) (d) (e) (f) (g) (h)","lastModifiedDate":"2023-11-12"},{"lineNumber":349,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":350,"author":{"gitId":"onx001"},"content":"            (8) | R |   |   |   | K |   |   | R | (8)","lastModifiedDate":"2023-11-12"},{"lineNumber":351,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":352,"author":{"gitId":"onx001"},"content":"            (7) | P | P | P |   |   |   | P | P | (7)","lastModifiedDate":"2023-11-12"},{"lineNumber":353,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":354,"author":{"gitId":"onx001"},"content":"            (6) |   |   |   |   |   |   |   |   | (6)","lastModifiedDate":"2023-11-12"},{"lineNumber":355,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":356,"author":{"gitId":"onx001"},"content":"            (5) |   |   | q |   |   | P |   |   | (5)","lastModifiedDate":"2023-11-12"},{"lineNumber":357,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":358,"author":{"gitId":"onx001"},"content":"            (4) |   |   |   |   |   | p |   |   | (4)","lastModifiedDate":"2023-11-12"},{"lineNumber":359,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":360,"author":{"gitId":"onx001"},"content":"            (3) |   |   | n |   |   |   |   |   | (3)","lastModifiedDate":"2023-11-12"},{"lineNumber":361,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":362,"author":{"gitId":"onx001"},"content":"            (2) | B | p |   |   |   | p | p | p | (2)","lastModifiedDate":"2023-11-12"},{"lineNumber":363,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":364,"author":{"gitId":"onx001"},"content":"            (1) |   |   |(k)| r |( )| b | n | r | (1)","lastModifiedDate":"2023-11-12"},{"lineNumber":365,"author":{"gitId":"onx001"},"content":"                _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":366,"author":{"gitId":"TongZhengHong"},"content":"                (a) (b) (c) (d) (e) (f) (g) (h)\u003c/code\u003e\u003c/pre\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":368,"author":{"gitId":"TongZhengHong"},"content":"\u003c/td\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":369,"author":{"gitId":"TongZhengHong"},"content":"\u003c/tr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":370,"author":{"gitId":"TongZhengHong"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":372,"author":{"gitId":"TongZhengHong"},"content":"#### 2. En Passant:","lastModifiedDate":"2023-11-14"},{"lineNumber":373,"author":{"gitId":"TriciaBK"},"content":"   ","lastModifiedDate":"2023-11-06"},{"lineNumber":374,"author":{"gitId":"TriciaBK"},"content":"This move only happens when your opponent moves their pawn two squares forward from its starting position and lands next to your pawn.","lastModifiedDate":"2023-11-06"},{"lineNumber":375,"author":{"gitId":"TriciaBK"},"content":"To capture en passant, you must do it on your very next move. ","lastModifiedDate":"2023-11-06"},{"lineNumber":376,"author":{"gitId":"TriciaBK"},"content":"- Move your pawn diagonally forward to the square that your opponent\u0027s pawn would have occupied if it had moved only one square forward.","lastModifiedDate":"2023-11-06"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":378,"author":{"gitId":"TongZhengHong"},"content":"\u003ctable\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":379,"author":{"gitId":"TongZhengHong"},"content":"\u003ctr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":380,"author":{"gitId":"TongZhengHong"},"content":"    \u003cth\u003eSample board before en passant\u003c/th\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":381,"author":{"gitId":"TongZhengHong"},"content":"    \u003cth\u003eExecuting en passant move: \u003ccode\u003emove d5 e6\u003c/code\u003e\u003c/th\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":382,"author":{"gitId":"TongZhengHong"},"content":"\u003c/tr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":383,"author":{"gitId":"TongZhengHong"},"content":"\u003ctr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":384,"author":{"gitId":"TongZhengHong"},"content":"\u003ctd\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":386,"author":{"gitId":"TongZhengHong"},"content":"\u003cpre\u003e\u003ccode\u003e_________________________________________________________________","lastModifiedDate":"2023-11-14"},{"lineNumber":387,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":388,"author":{"gitId":"onx001"},"content":"ChessMaster moved Pawn from e7 to e5","lastModifiedDate":"2023-11-12"},{"lineNumber":389,"author":{"gitId":"onx001"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":390,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":391,"author":{"gitId":"onx001"},"content":"             (a) (b) (c) (d) (e) (f) (g) (h)","lastModifiedDate":"2023-11-12"},{"lineNumber":392,"author":{"gitId":"onx001"},"content":"            _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":393,"author":{"gitId":"onx001"},"content":"        (8) | R |   | B | Q | K | B |   | R | (8)","lastModifiedDate":"2023-11-12"},{"lineNumber":394,"author":{"gitId":"onx001"},"content":"            _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":395,"author":{"gitId":"onx001"},"content":"        (7) | P | P | P | P |( )| P | P | P | (7)","lastModifiedDate":"2023-11-12"},{"lineNumber":396,"author":{"gitId":"onx001"},"content":"            _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":397,"author":{"gitId":"onx001"},"content":"        (6) |   |   | N |   |   |   |   |   | (6)","lastModifiedDate":"2023-11-12"},{"lineNumber":398,"author":{"gitId":"onx001"},"content":"            _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":399,"author":{"gitId":"onx001"},"content":"        (5) |   |   |   | p |(P)|   |   |   | (5)","lastModifiedDate":"2023-11-12"},{"lineNumber":400,"author":{"gitId":"onx001"},"content":"            _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":401,"author":{"gitId":"onx001"},"content":"        (4) |   |   |   |   |   |   |   |   | (4)","lastModifiedDate":"2023-11-12"},{"lineNumber":402,"author":{"gitId":"onx001"},"content":"            _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":403,"author":{"gitId":"onx001"},"content":"        (3) |   |   |   |   |   |   |   |   | (3)","lastModifiedDate":"2023-11-12"},{"lineNumber":404,"author":{"gitId":"onx001"},"content":"            _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":405,"author":{"gitId":"onx001"},"content":"        (2) | p | p |   |   | p | p | p | p | (2)","lastModifiedDate":"2023-11-12"},{"lineNumber":406,"author":{"gitId":"onx001"},"content":"            _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":407,"author":{"gitId":"onx001"},"content":"        (1) | r | n | b | q | k | b | n | r | (1)","lastModifiedDate":"2023-11-12"},{"lineNumber":408,"author":{"gitId":"onx001"},"content":"            _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":409,"author":{"gitId":"TongZhengHong"},"content":"             (a) (b) (c) (d) (e) (f) (g) (h)\u003c/code\u003e\u003c/pre\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":410,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":411,"author":{"gitId":"TongZhengHong"},"content":"\u003c/td\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":412,"author":{"gitId":"TongZhengHong"},"content":"\u003ctd\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":413,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":414,"author":{"gitId":"TongZhengHong"},"content":"\u003cpre\u003e\u003ccode\u003e_________________________________________________________________","lastModifiedDate":"2023-11-14"},{"lineNumber":415,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":416,"author":{"gitId":"TongZhengHong"},"content":"You moved Pawn from d5 to e6","lastModifiedDate":"2023-11-14"},{"lineNumber":417,"author":{"gitId":"TongZhengHong"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-14"},{"lineNumber":418,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":419,"author":{"gitId":"onx001"},"content":"             (a) (b) (c) (d) (e) (f) (g) (h)","lastModifiedDate":"2023-11-12"},{"lineNumber":420,"author":{"gitId":"onx001"},"content":"            _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":421,"author":{"gitId":"onx001"},"content":"        (8) | R |   | B | Q | K | B |   | R | (8)","lastModifiedDate":"2023-11-12"},{"lineNumber":422,"author":{"gitId":"onx001"},"content":"            _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":423,"author":{"gitId":"onx001"},"content":"        (7) | P | P | P | P |   | P | P | P | (7)","lastModifiedDate":"2023-11-12"},{"lineNumber":424,"author":{"gitId":"onx001"},"content":"            _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":425,"author":{"gitId":"onx001"},"content":"        (6) |   |   | N |   |(p)|   |   |   | (6)","lastModifiedDate":"2023-11-13"},{"lineNumber":426,"author":{"gitId":"onx001"},"content":"            _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":427,"author":{"gitId":"onx001"},"content":"        (5) |   |   |   |( )|   |   |   |   | (5)","lastModifiedDate":"2023-11-13"},{"lineNumber":428,"author":{"gitId":"onx001"},"content":"            _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":429,"author":{"gitId":"onx001"},"content":"        (4) |   |   |   |   |   |   |   |   | (4)","lastModifiedDate":"2023-11-12"},{"lineNumber":430,"author":{"gitId":"onx001"},"content":"            _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":431,"author":{"gitId":"onx001"},"content":"        (3) |   |   |   |   |   |   |   |   | (3)","lastModifiedDate":"2023-11-12"},{"lineNumber":432,"author":{"gitId":"onx001"},"content":"            _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":433,"author":{"gitId":"onx001"},"content":"        (2) | p | p |   |   | p | p | p | p | (2)","lastModifiedDate":"2023-11-12"},{"lineNumber":434,"author":{"gitId":"onx001"},"content":"            _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":435,"author":{"gitId":"onx001"},"content":"        (1) | r | n | b | q | k | b | n | r | (1)","lastModifiedDate":"2023-11-12"},{"lineNumber":436,"author":{"gitId":"onx001"},"content":"            _________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":437,"author":{"gitId":"TongZhengHong"},"content":"             (a) (b) (c) (d) (e) (f) (g) (h)\u003c/code\u003e\u003c/pre\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":438,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":439,"author":{"gitId":"TongZhengHong"},"content":"\u003c/td\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":440,"author":{"gitId":"TongZhengHong"},"content":"\u003c/tr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":441,"author":{"gitId":"TongZhengHong"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":442,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":443,"author":{"gitId":"ken-ruster"},"content":"### Show commands: `help`","lastModifiedDate":"2023-11-01"},{"lineNumber":444,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":445,"author":{"gitId":"ken-ruster"},"content":"Show a list of commands and what they do","lastModifiedDate":"2023-11-01"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":447,"author":{"gitId":"ken-ruster"},"content":"Format: `help`","lastModifiedDate":"2023-11-01"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":449,"author":{"gitId":"TriciaBK"},"content":"Expected Output:","lastModifiedDate":"2023-11-05"},{"lineNumber":450,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":451,"author":{"gitId":"TriciaBK"},"content":"```","lastModifiedDate":"2023-11-05"},{"lineNumber":452,"author":{"gitId":"TriciaBK"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-05"},{"lineNumber":453,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":454,"author":{"gitId":"TriciaBK"},"content":"Here are the commands you can use to play:","lastModifiedDate":"2023-11-13"},{"lineNumber":455,"author":{"gitId":"TriciaBK"},"content":"move\t\tMove piece","lastModifiedDate":"2023-11-13"},{"lineNumber":456,"author":{"gitId":"TriciaBK"},"content":"\t\tFormat: move [column][row] [column][row]","lastModifiedDate":"2023-11-13"},{"lineNumber":457,"author":{"gitId":"TriciaBK"},"content":"\t\te.g. move a2 a3","lastModifiedDate":"2023-11-13"},{"lineNumber":458,"author":{"gitId":"TriciaBK"},"content":"moves\t\tShow available moves for a piece","lastModifiedDate":"2023-11-13"},{"lineNumber":459,"author":{"gitId":"TriciaBK"},"content":"\t\tFormat: moves [column][row]","lastModifiedDate":"2023-11-05"},{"lineNumber":460,"author":{"gitId":"TriciaBK"},"content":"\t\te.g. moves a2","lastModifiedDate":"2023-11-13"},{"lineNumber":461,"author":{"gitId":"TriciaBK"},"content":"show\t\tShow the chessboard","lastModifiedDate":"2023-11-13"},{"lineNumber":462,"author":{"gitId":"TriciaBK"},"content":"rules\t\tObtain a quick refresher on the rules of chess","lastModifiedDate":"2023-11-13"},{"lineNumber":463,"author":{"gitId":"TriciaBK"},"content":"legend\t\tView pieces representation","lastModifiedDate":"2023-11-13"},{"lineNumber":464,"author":{"gitId":"TriciaBK"},"content":"restart\t\tStart a new game","lastModifiedDate":"2023-11-13"},{"lineNumber":465,"author":{"gitId":"TriciaBK"},"content":"history\t\tView history of all game moves","lastModifiedDate":"2023-11-13"},{"lineNumber":466,"author":{"gitId":"TriciaBK"},"content":"stepback\tView the board as it was a certain number of moves ago","lastModifiedDate":"2023-11-13"},{"lineNumber":467,"author":{"gitId":"TriciaBK"},"content":"\t\tFormat: stepback [number of moves to step back]","lastModifiedDate":"2023-11-13"},{"lineNumber":468,"author":{"gitId":"TriciaBK"},"content":"\t\te.g. stepback 4","lastModifiedDate":"2023-11-13"},{"lineNumber":469,"author":{"gitId":"TriciaBK"},"content":"captured\tSee which Player and CPU pieces have been captured so far","lastModifiedDate":"2023-11-13"},{"lineNumber":470,"author":{"gitId":"TriciaBK"},"content":"exit\t\tExit game","lastModifiedDate":"2023-11-13"},{"lineNumber":471,"author":{"gitId":"TriciaBK"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-05"},{"lineNumber":472,"author":{"gitId":"TriciaBK"},"content":"```","lastModifiedDate":"2023-11-05"},{"lineNumber":473,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":474,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":475,"author":{"gitId":"TriciaBK"},"content":"### View pieces representation: `legend` ","lastModifiedDate":"2023-11-02"},{"lineNumber":476,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":477,"author":{"gitId":"TriciaBK"},"content":"Display a legend that explains the piece representations","lastModifiedDate":"2023-11-02"},{"lineNumber":478,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":479,"author":{"gitId":"TriciaBK"},"content":"Format: `legend`","lastModifiedDate":"2023-11-02"},{"lineNumber":480,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":481,"author":{"gitId":"TriciaBK"},"content":"Expected Output:","lastModifiedDate":"2023-11-05"},{"lineNumber":482,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":483,"author":{"gitId":"TriciaBK"},"content":"```","lastModifiedDate":"2023-11-05"},{"lineNumber":484,"author":{"gitId":"TriciaBK"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-05"},{"lineNumber":485,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":486,"author":{"gitId":"TriciaBK"},"content":"Black pieces:","lastModifiedDate":"2023-11-05"},{"lineNumber":487,"author":{"gitId":"TriciaBK"},"content":"\"R\" represents a black rook.","lastModifiedDate":"2023-11-05"},{"lineNumber":488,"author":{"gitId":"TriciaBK"},"content":"\"N\" represents a black knight.","lastModifiedDate":"2023-11-05"},{"lineNumber":489,"author":{"gitId":"TriciaBK"},"content":"\"B\" represents a black bishop.","lastModifiedDate":"2023-11-05"},{"lineNumber":490,"author":{"gitId":"TriciaBK"},"content":"\"Q\" represents a black queen.","lastModifiedDate":"2023-11-05"},{"lineNumber":491,"author":{"gitId":"TriciaBK"},"content":"\"K\" represents a black king.","lastModifiedDate":"2023-11-05"},{"lineNumber":492,"author":{"gitId":"TriciaBK"},"content":"\"P\" represents a black pawn.","lastModifiedDate":"2023-11-05"},{"lineNumber":493,"author":{"gitId":"TriciaBK"},"content":"   ","lastModifiedDate":"2023-11-05"},{"lineNumber":494,"author":{"gitId":"TriciaBK"},"content":"White pieces:","lastModifiedDate":"2023-11-05"},{"lineNumber":495,"author":{"gitId":"TriciaBK"},"content":"\"r\" represents a white rook.","lastModifiedDate":"2023-11-05"},{"lineNumber":496,"author":{"gitId":"TriciaBK"},"content":"\"n\" represents a white knight.","lastModifiedDate":"2023-11-05"},{"lineNumber":497,"author":{"gitId":"TriciaBK"},"content":"\"b\" represents a white bishop.","lastModifiedDate":"2023-11-05"},{"lineNumber":498,"author":{"gitId":"TriciaBK"},"content":"\"q\" represents a white queen.","lastModifiedDate":"2023-11-05"},{"lineNumber":499,"author":{"gitId":"TriciaBK"},"content":"\"k\" represents a white king.","lastModifiedDate":"2023-11-05"},{"lineNumber":500,"author":{"gitId":"TriciaBK"},"content":"\"p\" represents a white pawn.","lastModifiedDate":"2023-11-05"},{"lineNumber":501,"author":{"gitId":"TriciaBK"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-05"},{"lineNumber":502,"author":{"gitId":"TriciaBK"},"content":"```","lastModifiedDate":"2023-11-05"},{"lineNumber":503,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":504,"author":{"gitId":"TriciaBK"},"content":"### Start a new game of chess: `restart`","lastModifiedDate":"2023-11-09"},{"lineNumber":505,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":506,"author":{"gitId":"TriciaBK"},"content":"Enables the player to restart the game.","lastModifiedDate":"2023-11-13"},{"lineNumber":507,"author":{"gitId":"TriciaBK"},"content":"Selecting `y` will restart the game, while `n` will cause player to exit program.","lastModifiedDate":"2023-11-13"},{"lineNumber":508,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":509,"author":{"gitId":"TriciaBK"},"content":"Format: `restart`","lastModifiedDate":"2023-11-09"},{"lineNumber":510,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":511,"author":{"gitId":"TriciaBK"},"content":"Expected output:","lastModifiedDate":"2023-11-09"},{"lineNumber":512,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":513,"author":{"gitId":"TriciaBK"},"content":"```","lastModifiedDate":"2023-11-09"},{"lineNumber":514,"author":{"gitId":"TriciaBK"},"content":"Do you want to restart game? [y/n] ","lastModifiedDate":"2023-11-09"},{"lineNumber":515,"author":{"gitId":"TriciaBK"},"content":"```","lastModifiedDate":"2023-11-09"},{"lineNumber":516,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":517,"author":{"gitId":"antrikshdhand"},"content":"### View history of all game moves: `history`","lastModifiedDate":"2023-11-07"},{"lineNumber":518,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":519,"author":{"gitId":"antrikshdhand"},"content":"Displays a list of all previous moves in the current game","lastModifiedDate":"2023-11-07"},{"lineNumber":520,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":521,"author":{"gitId":"antrikshdhand"},"content":"Format: `history`","lastModifiedDate":"2023-11-07"},{"lineNumber":522,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":523,"author":{"gitId":"TriciaBK"},"content":"Sample output:","lastModifiedDate":"2023-11-13"},{"lineNumber":524,"author":{"gitId":"TriciaBK"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":525,"author":{"gitId":"TriciaBK"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":526,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":527,"author":{"gitId":"TriciaBK"},"content":"Move 1: WHITE moves Knight from g8 to f6","lastModifiedDate":"2023-11-13"},{"lineNumber":528,"author":{"gitId":"TriciaBK"},"content":"Move 2: BLACK moves Pawn from a2 to a4","lastModifiedDate":"2023-11-13"},{"lineNumber":529,"author":{"gitId":"TriciaBK"},"content":"Move 3: WHITE moves Knight from b8 to c6","lastModifiedDate":"2023-11-13"},{"lineNumber":530,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":531,"author":{"gitId":"TriciaBK"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":532,"author":{"gitId":"TriciaBK"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":533,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":534,"author":{"gitId":"antrikshdhand"},"content":"### Step back in history: `stepback`","lastModifiedDate":"2023-11-09"},{"lineNumber":535,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":536,"author":{"gitId":"antrikshdhand"},"content":"Displays the board state as it was a certain number of moves ago. **Note that this command does not reverse any moves","lastModifiedDate":"2023-11-14"},{"lineNumber":537,"author":{"gitId":"antrikshdhand"},"content":"in the current game.**","lastModifiedDate":"2023-11-14"},{"lineNumber":538,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":539,"author":{"gitId":"antrikshdhand"},"content":"Format: `stepback [number of moves to step back]`","lastModifiedDate":"2023-11-09"},{"lineNumber":540,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":541,"author":{"gitId":"TriciaBK"},"content":"Example: `stepback 2`","lastModifiedDate":"2023-11-13"},{"lineNumber":542,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":543,"author":{"gitId":"TriciaBK"},"content":"Sample output:","lastModifiedDate":"2023-11-13"},{"lineNumber":544,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":545,"author":{"gitId":"TriciaBK"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":546,"author":{"gitId":"TriciaBK"},"content":"                (a) (b) (c) (d) (e) (f) (g) (h)","lastModifiedDate":"2023-11-13"},{"lineNumber":547,"author":{"gitId":"TriciaBK"},"content":"                _________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":548,"author":{"gitId":"TriciaBK"},"content":"            (8) | r | n | b | q | k | b |   | r | (8)","lastModifiedDate":"2023-11-13"},{"lineNumber":549,"author":{"gitId":"TriciaBK"},"content":"                _________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":550,"author":{"gitId":"TriciaBK"},"content":"            (7) | p | p | p | p | p | p | p | p | (7)","lastModifiedDate":"2023-11-13"},{"lineNumber":551,"author":{"gitId":"TriciaBK"},"content":"                _________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":552,"author":{"gitId":"TriciaBK"},"content":"            (6) |   |   |   |   |   | n |   |   | (6)","lastModifiedDate":"2023-11-13"},{"lineNumber":553,"author":{"gitId":"TriciaBK"},"content":"                _________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":554,"author":{"gitId":"TriciaBK"},"content":"            (5) |   |   |   |   |   |   |   |   | (5)","lastModifiedDate":"2023-11-13"},{"lineNumber":555,"author":{"gitId":"TriciaBK"},"content":"                _________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":556,"author":{"gitId":"TriciaBK"},"content":"            (4) |   |   |   |   |   |   |   |   | (4)","lastModifiedDate":"2023-11-13"},{"lineNumber":557,"author":{"gitId":"TriciaBK"},"content":"                _________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":558,"author":{"gitId":"TriciaBK"},"content":"            (3) |   |   |   |   |   |   |   |   | (3)","lastModifiedDate":"2023-11-13"},{"lineNumber":559,"author":{"gitId":"TriciaBK"},"content":"                _________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":560,"author":{"gitId":"TriciaBK"},"content":"            (2) | P | P | P | P | P | P | P | P | (2)","lastModifiedDate":"2023-11-13"},{"lineNumber":561,"author":{"gitId":"TriciaBK"},"content":"                _________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":562,"author":{"gitId":"TriciaBK"},"content":"            (1) | R | N | B | Q | K | B | N | R | (1)","lastModifiedDate":"2023-11-13"},{"lineNumber":563,"author":{"gitId":"TriciaBK"},"content":"                _________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":564,"author":{"gitId":"TriciaBK"},"content":"                (a) (b) (c) (d) (e) (f) (g) (h)","lastModifiedDate":"2023-11-13"},{"lineNumber":565,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":566,"author":{"gitId":"TriciaBK"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":567,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":568,"author":{"gitId":"TriciaBK"},"content":"Stepped back 2 steps!","lastModifiedDate":"2023-11-13"},{"lineNumber":569,"author":{"gitId":"TriciaBK"},"content":"Use `show` to see the current board.","lastModifiedDate":"2023-11-13"},{"lineNumber":570,"author":{"gitId":"TriciaBK"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-13"},{"lineNumber":571,"author":{"gitId":"TriciaBK"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":572,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":573,"author":{"gitId":"antrikshdhand"},"content":"### List pieces in play: `captured`","lastModifiedDate":"2023-11-12"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":575,"author":{"gitId":"antrikshdhand"},"content":"Lists each player\u0027s pieces grouped by whether they have been captured or not.","lastModifiedDate":"2023-11-12"},{"lineNumber":576,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":577,"author":{"gitId":"antrikshdhand"},"content":"Format: `captured`","lastModifiedDate":"2023-11-12"},{"lineNumber":578,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":579,"author":{"gitId":"antrikshdhand"},"content":"Sample output:","lastModifiedDate":"2023-11-12"},{"lineNumber":580,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":581,"author":{"gitId":"antrikshdhand"},"content":"```","lastModifiedDate":"2023-11-12"},{"lineNumber":582,"author":{"gitId":"antrikshdhand"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":583,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":584,"author":{"gitId":"antrikshdhand"},"content":"Player\u0027s pieces","lastModifiedDate":"2023-11-12"},{"lineNumber":585,"author":{"gitId":"antrikshdhand"},"content":"----------------------------------------","lastModifiedDate":"2023-11-12"},{"lineNumber":586,"author":{"gitId":"antrikshdhand"},"content":"In play:","lastModifiedDate":"2023-11-12"},{"lineNumber":587,"author":{"gitId":"antrikshdhand"},"content":"- Bishop x2","lastModifiedDate":"2023-11-12"},{"lineNumber":588,"author":{"gitId":"antrikshdhand"},"content":"- King","lastModifiedDate":"2023-11-12"},{"lineNumber":589,"author":{"gitId":"antrikshdhand"},"content":"- Knight","lastModifiedDate":"2023-11-12"},{"lineNumber":590,"author":{"gitId":"antrikshdhand"},"content":"- Pawn x7","lastModifiedDate":"2023-11-12"},{"lineNumber":591,"author":{"gitId":"antrikshdhand"},"content":"- Rook x2","lastModifiedDate":"2023-11-12"},{"lineNumber":592,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":593,"author":{"gitId":"antrikshdhand"},"content":"Captured:","lastModifiedDate":"2023-11-12"},{"lineNumber":594,"author":{"gitId":"antrikshdhand"},"content":"- Queen","lastModifiedDate":"2023-11-12"},{"lineNumber":595,"author":{"gitId":"antrikshdhand"},"content":"- Knight","lastModifiedDate":"2023-11-12"},{"lineNumber":596,"author":{"gitId":"antrikshdhand"},"content":"- Pawn","lastModifiedDate":"2023-11-12"},{"lineNumber":597,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":598,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":599,"author":{"gitId":"antrikshdhand"},"content":"CPU\u0027s pieces","lastModifiedDate":"2023-11-12"},{"lineNumber":600,"author":{"gitId":"antrikshdhand"},"content":"----------------------------------------","lastModifiedDate":"2023-11-12"},{"lineNumber":601,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":602,"author":{"gitId":"antrikshdhand"},"content":"In play:","lastModifiedDate":"2023-11-12"},{"lineNumber":603,"author":{"gitId":"antrikshdhand"},"content":"- Bishop x2","lastModifiedDate":"2023-11-12"},{"lineNumber":604,"author":{"gitId":"antrikshdhand"},"content":"- King","lastModifiedDate":"2023-11-12"},{"lineNumber":605,"author":{"gitId":"antrikshdhand"},"content":"- Queen","lastModifiedDate":"2023-11-12"},{"lineNumber":606,"author":{"gitId":"antrikshdhand"},"content":"- Knight","lastModifiedDate":"2023-11-12"},{"lineNumber":607,"author":{"gitId":"antrikshdhand"},"content":"- Pawn x7","lastModifiedDate":"2023-11-12"},{"lineNumber":608,"author":{"gitId":"antrikshdhand"},"content":"- Rook x2","lastModifiedDate":"2023-11-12"},{"lineNumber":609,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":610,"author":{"gitId":"antrikshdhand"},"content":"Captured:","lastModifiedDate":"2023-11-12"},{"lineNumber":611,"author":{"gitId":"antrikshdhand"},"content":"- Knight","lastModifiedDate":"2023-11-12"},{"lineNumber":612,"author":{"gitId":"antrikshdhand"},"content":"- Pawn","lastModifiedDate":"2023-11-12"},{"lineNumber":613,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":614,"author":{"gitId":"antrikshdhand"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-12"},{"lineNumber":615,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":616,"author":{"gitId":"antrikshdhand"},"content":"```","lastModifiedDate":"2023-11-12"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":618,"author":{"gitId":"antrikshdhand"},"content":"### Exit the game: `exit`","lastModifiedDate":"2023-11-10"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":620,"author":{"gitId":"ken-ruster"},"content":"Exit the ChessMaster application.","lastModifiedDate":"2023-11-01"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":622,"author":{"gitId":"antrikshdhand"},"content":"Format: `exit`","lastModifiedDate":"2023-11-10"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":624,"author":{"gitId":"TriciaBK"},"content":"Expected Output:","lastModifiedDate":"2023-11-05"},{"lineNumber":625,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":626,"author":{"gitId":"TriciaBK"},"content":"```","lastModifiedDate":"2023-11-05"},{"lineNumber":627,"author":{"gitId":"TriciaBK"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-05"},{"lineNumber":628,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":629,"author":{"gitId":"TriciaBK"},"content":"Exiting program... Thanks for playing!","lastModifiedDate":"2023-11-05"},{"lineNumber":630,"author":{"gitId":"TriciaBK"},"content":"_________________________________________________________________","lastModifiedDate":"2023-11-05"},{"lineNumber":631,"author":{"gitId":"TriciaBK"},"content":"```","lastModifiedDate":"2023-11-05"},{"lineNumber":632,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":633,"author":{"gitId":"antrikshdhand"},"content":"### Saving and loading games","lastModifiedDate":"2023-11-12"},{"lineNumber":634,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":635,"author":{"gitId":"antrikshdhand"},"content":"Every time a turn ends, ChessMaster will save the current state of the game. When ChessMaster is restarted, the","lastModifiedDate":"2023-11-12"},{"lineNumber":636,"author":{"gitId":"antrikshdhand"},"content":"user will be prompted to choose whether to load the saved game or begin a new one. ChessMaster only supports a single","lastModifiedDate":"2023-11-12"},{"lineNumber":637,"author":{"gitId":"antrikshdhand"},"content":"saved game, and starting a new one will delete the existing save file.","lastModifiedDate":"2023-11-12"},{"lineNumber":638,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":639,"author":{"gitId":"TongZhengHong"},"content":"### Editing the storage file","lastModifiedDate":"2023-11-14"},{"lineNumber":640,"author":{"gitId":"TongZhengHong"},"content":"Tasks data are saved automatically in a text (.txt) file `\u003cJAR file location\u003e/data/ChessMaster.txt`. Users are welcome to update data directly by editing this data file to achieve a desired game state. ","lastModifiedDate":"2023-11-14"},{"lineNumber":641,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":642,"author":{"gitId":"TongZhengHong"},"content":"The format of the saved game in the storage file is as follows:","lastModifiedDate":"2023-11-14"},{"lineNumber":643,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":644,"author":{"gitId":"TongZhengHong"},"content":"```java","lastModifiedDate":"2023-11-14"},{"lineNumber":645,"author":{"gitId":"TongZhengHong"},"content":"[CURRENT_PLAYER_COLOR]  // Either BLACK or WHITE","lastModifiedDate":"2023-11-14"},{"lineNumber":646,"author":{"gitId":"TongZhengHong"},"content":"[GAME_DIFFICULTY]       // Integer from 1 to 3","lastModifiedDate":"2023-11-14"},{"lineNumber":647,"author":{"gitId":"TongZhengHong"},"content":"[HUMAN_MOVE_HISTORY]    // delimited by \u0027,\u0027","lastModifiedDate":"2023-11-14"},{"lineNumber":648,"author":{"gitId":"TongZhengHong"},"content":"[CPU_MOVE_HISTORY]      // delimited by \u0027,\u0027","lastModifiedDate":"2023-11-14"},{"lineNumber":649,"author":{"gitId":"TongZhengHong"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":651,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":653,"author":{"gitId":"TongZhengHong"},"content":"\u003e **Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2023-11-14"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":655,"author":{"gitId":"ken-ruster"},"content":"**A**: You can navigate to your root folder, and find the file `data/ChessMaster.txt`. Transfer the file to your other computer,","lastModifiedDate":"2023-11-01"},{"lineNumber":656,"author":{"gitId":"ken-ruster"},"content":"and find the `data` folder in the ChessMaster install folder in the other computer. Copy the file into the folder. Start ChessMaster,","lastModifiedDate":"2023-11-01"},{"lineNumber":657,"author":{"gitId":"ken-ruster"},"content":"and type `y` when prompted to load a saved game.","lastModifiedDate":"2023-11-01"},{"lineNumber":658,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":659,"author":{"gitId":"TongZhengHong"},"content":"\u003e **Q**: How do I play with another person?","lastModifiedDate":"2023-11-14"},{"lineNumber":660,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":661,"author":{"gitId":"ken-ruster"},"content":"**A**: Currently, ChessMaster does not support multiplayer. ","lastModifiedDate":"2023-11-01"},{"lineNumber":662,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":663,"author":{"gitId":"TongZhengHong"},"content":"\u003e **Q**: Can we play timed games?","lastModifiedDate":"2023-11-14"},{"lineNumber":664,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":665,"author":{"gitId":"TriciaBK"},"content":"**A**: ChessMaster does not come with an internal timer. However, you are able to use your own chess timer or stopwatch to simulate timed games.","lastModifiedDate":"2023-11-13"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":667,"author":{"gitId":"TongZhengHong"},"content":"\u003e **Q**: Can I draw by repeating moves?","lastModifiedDate":"2023-11-14"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":669,"author":{"gitId":"onx001"},"content":"**A**: ChessMaster does not currently support draws by repetition. However, you can use the `exit` command to end the game. Alternatively, you can maneuver the game to a draw by stalemate, where neither party can move without being in check or there are only kings left on the board.","lastModifiedDate":"2023-11-13"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":671,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":673,"author":{"gitId":"TongZhengHong"},"content":"| Action               | Format                             |","lastModifiedDate":"2023-11-01"},{"lineNumber":674,"author":{"gitId":"TriciaBK"},"content":"|----------------------|------------------------------------|","lastModifiedDate":"2023-11-13"},{"lineNumber":675,"author":{"gitId":"antrikshdhand"},"content":"| Move                 | `move [column][row] [column][row]` |","lastModifiedDate":"2023-11-07"},{"lineNumber":676,"author":{"gitId":"ken-ruster"},"content":"| Show moves           | `moves [column][row]`              |","lastModifiedDate":"2023-11-01"},{"lineNumber":677,"author":{"gitId":"ken-ruster"},"content":"| Show board           | `show`                             |","lastModifiedDate":"2023-11-01"},{"lineNumber":678,"author":{"gitId":"TriciaBK"},"content":"| Rules                | `rules`                            |","lastModifiedDate":"2023-11-02"},{"lineNumber":679,"author":{"gitId":"ken-ruster"},"content":"| Help                 | `help`                             |","lastModifiedDate":"2023-11-01"},{"lineNumber":680,"author":{"gitId":"TriciaBK"},"content":"| Pieces legend        | `legend`                           |","lastModifiedDate":"2023-11-02"},{"lineNumber":681,"author":{"gitId":"TriciaBK"},"content":"| Restart game         | `restart`                          |","lastModifiedDate":"2023-11-13"},{"lineNumber":682,"author":{"gitId":"antrikshdhand"},"content":"| History              | `history`                          |","lastModifiedDate":"2023-11-08"},{"lineNumber":683,"author":{"gitId":"antrikshdhand"},"content":"| Step back            | `stepback [number of steps]`       |","lastModifiedDate":"2023-11-12"},{"lineNumber":684,"author":{"gitId":"TriciaBK"},"content":"| List captured pieces | `captured`                         |","lastModifiedDate":"2023-11-13"},{"lineNumber":685,"author":{"gitId":"antrikshdhand"},"content":"| Exit                 | `exit`                             |","lastModifiedDate":"2023-11-10"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"ken-ruster":64,"antrikshdhand":78,"TriciaBK":175,"onx001":125,"TongZhengHong":209,"-":35}},{"path":"docs/diagrams/ChessMasterSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"@startuml ChessMasterSequence","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"actor User as user #BlanchedAlmond","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"participant \":UI\" as ui #IndianRed","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"participant \":ChessMaster\" as chessMaster #LightPink","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"participant \":Game\" as game #Orange","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"participant \":Storage\" as storage #DeepSkyBlue","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"user -\u003e chessMaster : start","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"activate chessMaster","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"chessMaster -\u003e storage : loadBoard()","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"activate storage","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"storage --\u003e chessMaster : prevBoard:ChessBoard","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"deactivate storage","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"ken-ruster"},"content":"alt Previous board exists","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"    chessMaster -\u003e ui : shouldStartNewGame()","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"    activate ui","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"    user -\u003e ui : \"yes/no\"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"    ui --\u003e chessMaster : :boolean","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"    deactivate ui","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"ken-ruster"},"content":"    opt startNewGame","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"ken-ruster"},"content":"        chessMaster -\u003e ui : chooseColor()","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"        activate ui","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"        user -\u003e ui : \"black/white\"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"        ui --\u003e chessMaster : playerColor:Color","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"        deactivate ui","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"    end","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"ken-ruster"},"content":"else No previous board","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"ken-ruster"},"content":"    chessMaster -\u003e ui : chooseColor()","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"    activate ui","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"    user -\u003e ui : \"black/white\"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"    ui --\u003e chessMaster : playerColor:Color","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"    deactivate ui","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"end","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"create game","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"chessMaster -\u003e game","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"activate game","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"chessMaster -\u003e game : run()","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"game --\u003e chessMaster","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"destroy game","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"chessMaster --\u003e user","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"deactivate chessMaster","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"TongZhengHong"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"ken-ruster":5,"TongZhengHong":51}},{"path":"docs/diagrams/GameSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"@startuml GameSequence","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"actor User as user #BlanchedAlmond","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"participant \":UI\" as ui #IndianRed","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"participant \":Parser\" as parser #LightPink","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"participant \":Game\" as game #Orchid","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"participant \":ChessBoard\" as board #Orange","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"participant \":CPU\" as cpu #SkyBlue","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"participant \":Storage\" as storage #PaleTurquoise","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"activate game #AliceBlue","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"ken-ruster"},"content":"loop hasGameEnded","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"ken-ruster"},"content":"    game -\u003e ui : getUserInput()","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"    activate ui","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"ken-ruster"},"content":"    user -\u003e ui : input","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"ken-ruster"},"content":"    ui --\u003e game : userInputString :String","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"    deactivate ui","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"ken-ruster"},"content":"    game -\u003e parser : parseCommand(userInputString)","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"    activate parser","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"    parser --\u003e game : :Command","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"    deactivate parser","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"ken-ruster"},"content":"    opt isMoveCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"ken-ruster"},"content":"        game -\u003e parser : parseMove(input)","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"        activate parser","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"        parser --\u003e game : humanMove:Move","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"        deactivate parser","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"        game -\u003e board : executeMove(humanMove)","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"        activate board","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"        board --\u003e game","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"        deactivate board","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"        game -\u003e storage : saveBoard()","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"        activate storage","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"        storage --\u003e game","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"        deactivate storage","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"        game -\u003e cpu : getBestMove()","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"        activate cpu","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"        cpu --\u003e game : cpuMove:Move","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"        deactivate cpu","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"        game -\u003e board : executeMove(cpuMove)","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"        activate board","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"        board --\u003e game","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"        deactivate board","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"        game -\u003e storage : saveBoard()","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"        activate storage","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"TongZhengHong"},"content":"        storage --\u003e game","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"TongZhengHong"},"content":"        deactivate storage","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"TongZhengHong"},"content":"        game -\u003e board : checkEndState()","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"TongZhengHong"},"content":"        activate board","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"TongZhengHong"},"content":"        board --\u003e game : hasGameEnded:bool","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"TongZhengHong"},"content":"        deactivate board","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"TongZhengHong"},"content":"    end","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"TongZhengHong"},"content":"end","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"TongZhengHong"},"content":"game --\u003e user","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"TongZhengHong"},"content":"destroy game","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"TongZhengHong"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"ken-ruster":7,"TongZhengHong":63}},{"path":"docs/diagrams/MiniMaxSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"onx001"},"content":"@startuml MiniMaxSequenceDiagram","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"onx001"},"content":"actor CPU as user #BlanchedAlmond","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"onx001"},"content":"participant \":MiniMax\" as MM #IndianRed","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"onx001"},"content":"participant \"Board :ChessBoard\" as CB #LightPink","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"onx001"},"content":"participant \":Move\" as M #Orange","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"onx001"},"content":"participant \":BoardScoreTuple\" as BST #SkyBlue","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"onx001"},"content":"participant \":ChessMasterException\" as E #PaleTurquoise","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"onx001"},"content":"create MM","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"onx001"},"content":"activate MM #AliceBlue","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"onx001"},"content":"user -\u003e MM : getBestMove()","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"onx001"},"content":"MM -\u003e MM : mostPoints()","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"ken-ruster"},"content":"loop \"depth \u003c maxDepth\"","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"onx001"},"content":"    MM -\u003e CB : getBoard()","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"onx001"},"content":"    deactivate MM","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"onx001"},"content":"    activate CB","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"onx001"},"content":"    CB --\u003e MM : ChessBoard","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"onx001"},"content":"    activate MM","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"onx001"},"content":"    deactivate CB","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"onx001"},"content":"    MM -\u003e MM : Initialize variables","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"onx001"},"content":"    MM -\u003e CB : getPoints()","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"onx001"},"content":"    deactivate MM","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"onx001"},"content":"    activate CB","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"onx001"},"content":"    CB --\u003e MM : points","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"onx001"},"content":"    activate MM","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"onx001"},"content":"    deactivate CB","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"onx001"},"content":"    MM -\u003e CB : Clone board","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"onx001"},"content":"    activate CB","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"onx001"},"content":"    CB --\u003e CB : board.clone()","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"onx001"},"content":"    activate CB","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"onx001"},"content":"    CB -\u003e M** : setPiece()","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"onx001"},"content":"    activate M","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"onx001"},"content":"    M -\u003e CB : Execute move","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"onx001"},"content":"    deactivate M","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"onx001"},"content":"    CB -\u003e CB : Calculate new score","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"onx001"},"content":"    CB -\u003e BST** : Create BoardScoreTuple","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"onx001"},"content":"    activate BST","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"onx001"},"content":"    BST --\u003e BST : BoardScoreTuple","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"onx001"},"content":"    deactivate BST","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"onx001"},"content":"    CB -\u003e E : Handle exception (if any)","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"onx001"},"content":"    deactivate CB","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"onx001"},"content":"    CB -\u003e MM : Continue loop","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"onx001"},"content":"    deactivate CB","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"ken-ruster"},"content":"    loop \"depth \u003c maxDepth\"","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"onx001"},"content":"        activate MM","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"onx001"},"content":"        MM -\u003e MM : Recursively call mostPoints() while incrementing depth","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"onx001"},"content":"        MM --\u003e MM : bestTuple","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"onx001"},"content":"        deactivate MM","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"onx001"},"content":"    end","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"onx001"},"content":"    MM -\u003e MM : Update bestScore based on player turn","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"onx001"},"content":"    MM -\u003e MM : Update bestTuple with bestScore and bestMove","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"onx001"},"content":"end","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"onx001"},"content":"MM -\u003e BST : getBestMove()","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"onx001"},"content":"activate BST","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"onx001"},"content":"BST --\u003e MM : bestMove","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"onx001"},"content":"deactivate BST","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"onx001"},"content":"MM -\u003e user : Return bestMove","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"onx001"},"content":"deactivate MM","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"onx001"},"content":"destroy MM","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"onx001"},"content":"destroy BST","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"onx001"},"content":"@enduml","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"ken-ruster":2,"onx001":71}},{"path":"docs/diagrams/MoveClass.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"onx001"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"onx001"},"content":"hide circle","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"onx001"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"onx001"},"content":"class Move {","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"onx001"},"content":"  - from: Coordinate","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"onx001"},"content":"  - to: Coordinate","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"onx001"},"content":"  - pieceMoved: ChessPiece","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"onx001"},"content":"  - pieceCaptured: ChessPiece","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"TriciaBK"},"content":"  + getFrom(): Coordinate","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"TriciaBK"},"content":"  + getTo(): Coordinate","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"onx001"},"content":"  + getPieceMoved(): ChessPiece","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"onx001"},"content":"  + hasCapturedAPiece(): boolean","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"onx001"},"content":"  + getPieceCaptured(): ChessPiece","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"onx001"},"content":"  + isValidWithCheck(board: ChessBoard): boolean","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"TriciaBK"},"content":"  + isSkippingPawn(): boolean","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"TriciaBK"},"content":"  + toString(): String","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"onx001"},"content":"}","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"onx001"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"TriciaBK":5,"onx001":15}},{"path":"docs/diagrams/MoveSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"onx001"},"content":"@startuml MoveSequence","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"onx001"},"content":"actor User as user #BlanchedAlmond","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"onx001"},"content":"participant \":Game\" as g #LightGreen","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"onx001"},"content":"participant \":UI\" as ui #LightBlue","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"onx001"},"content":"participant \":MoveCommand\" as mc #LightCoral","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"onx001"},"content":"participant \":MoveFactory\" as mf #IndianRed","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"onx001"},"content":"participant \":ChessBoard\" as cb #LightPink","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"onx001"},"content":"user --\u003e ui : move coordinates :String","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"onx001"},"content":"activate ui","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"onx001"},"content":"ui --\u003e g : move coordinates :String","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"onx001"},"content":"deactivate ui","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"onx001"},"content":"activate g","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"onx001"},"content":"create mc","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"onx001"},"content":"g --\u003e mc : inputString :String","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"onx001"},"content":"activate mc","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"onx001"},"content":"g -\u003e mc : execute()","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"onx001"},"content":"mc --\u003e g : move :Move","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"onx001"},"content":"deactivate mc","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"onx001"},"content":"destroy mc","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"onx001"},"content":"g -\u003e cb : move :Move","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"onx001"},"content":"deactivate g","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"onx001"},"content":"activate cb","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"onx001"},"content":"cb -\u003e cb : isValidMove()","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"onx001"},"content":"activate cb","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"onx001"},"content":"cb --\u003e cb : :boolean","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"onx001"},"content":"deactivate cb","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"onx001"},"content":"alt Move is valid","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"onx001"},"content":"    create mf","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"onx001"},"content":"    cb -\u003e mf : createMove()","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"onx001"},"content":"    deactivate cb","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"onx001"},"content":"    activate mf","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"onx001"},"content":"    mf --\u003e cb : move :Move","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"onx001"},"content":"    deactivate mf","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"onx001"},"content":"    destroy mf","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"onx001"},"content":"    activate cb","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"onx001"},"content":"    cb -\u003e cb : executeMove()","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"onx001"},"content":"    cb --\u003e g : board :ChessBoard","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"onx001"},"content":"    activate g","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"onx001"},"content":"    g -\u003e ui : printChessBoardWithMove()","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"onx001"},"content":"    deactivate g","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"onx001"},"content":"    activate ui","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"onx001"},"content":"    ui --\u003e user","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"onx001"},"content":"    deactivate ui","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"onx001"},"content":"else Move is invalid","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"onx001"},"content":"    cb -\u003e ui : :InvalidMoveException","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"onx001"},"content":"    deactivate cb","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"onx001"},"content":"    activate ui","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"onx001"},"content":"    ui --\u003e user","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"onx001"},"content":"    deactivate ui","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"onx001"},"content":"end","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"onx001"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"onx001":54}},{"path":"docs/diagrams/OverallArchitecture.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"@startuml OverallArchitecture","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"rectangle ChessMaster as chessMaster #LightPink","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"rectangle Parser as parser #AliceBlue","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"rectangle Game as game #Orchid","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"rectangle UI as ui #IndianRed","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"rectangle Storage as storage #SkyBlue","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"rectangle ChessBoard as board #Orange","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"actor User as user #BlanchedAlmond","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"user -d-\u003e ui","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"chessMaster -r-\u003e ui","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"chessMaster -d-\u003e game","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"chessMaster -u-\u003e storage","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"chessMaster -u-\u003e board","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"game -\u003e storage","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"game -u-\u003e board","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"game -u-\u003e ui","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"storage .up.\u003e board","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"ken-ruster"},"content":"game .right.\u003e parser","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"ken-ruster"},"content":"storage .\u003e parser","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"ken-ruster"},"content":"board .\u003e parser","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"ken-ruster":4,"TongZhengHong":24}},{"path":"docs/diagrams/ParseCommandSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ken-ruster"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"ken-ruster"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"TriciaBK"},"content":"participant \":Game\" as Game #Pink","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"TriciaBK"},"content":"participant \":Parser\" as Parser #SkyBlue","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"TriciaBK"},"content":"participant \":Command\" as Command #IndianRed","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"TriciaBK"},"content":"participant \":CommandResult\" as CommandResult #LimeGreen","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"TriciaBK"},"content":"participant \"coord :Coordinate\" as Coordinate #LightPink","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"TriciaBK"},"content":"participant \"board :ChessBoard\" as ChessBoard #Turquoise","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"TriciaBK"},"content":"participant \"promoteFrom :ChessPiece\" as ChessPiece #Orchid","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"ken-ruster"},"content":"Game -\u003e Parser: parseCommand()","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"ken-ruster"},"content":"activate Parser","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"ken-ruster"},"content":"create Command","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"ken-ruster"},"content":"Parser -\u003e Command ++","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"ken-ruster"},"content":"Command --\u003e Parser --: :Command","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"ken-ruster"},"content":"Game \u003c-- Parser --: :Command","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"ken-ruster"},"content":"Game -\u003e Command ++: execute","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"ken-ruster"},"content":"alt MoveCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"ken-ruster"},"content":"    Command -\u003e Parser ++: parseMove()","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"ken-ruster"},"content":"    Parser --\u003e Command --: :Move","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"ken-ruster"},"content":"else ShowMoveCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"ken-ruster"},"content":"    create Coordinate","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"ken-ruster"},"content":"    Command -\u003e Coordinate ++: parseAlgebraicCoor()","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"ken-ruster"},"content":"    Coordinate --\u003e Command --: coord :Coordinate","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"ken-ruster"},"content":"    Command -\u003e ChessBoard ++: showAvailableCoordinates()","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"ken-ruster"},"content":"    ChessBoard --","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"ken-ruster"},"content":"    Command -\u003e ChessBoard ++: getAvailableCoordinatesString()","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"ken-ruster"},"content":"    ChessBoard --\u003e Command --: :String","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"ken-ruster"},"content":"    destroy Coordinate","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"ken-ruster"},"content":"end","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"ken-ruster"},"content":"Command -\u003e CommandResult**","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"ken-ruster"},"content":"activate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"ken-ruster"},"content":"CommandResult --\u003e Command--","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"ken-ruster"},"content":"Game \u003c-- Command --: :CommandResult","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"ken-ruster"},"content":"opt canPromote","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"ken-ruster"},"content":"Game -\u003e Parser ++: parsePromote()","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"ken-ruster"},"content":"Parser -\u003e ChessPiece ++: getColour()","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"ken-ruster"},"content":"ChessPiece --\u003e Parser --: :Color","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"ken-ruster"},"content":"Parser -\u003e ChessPiece ++: getPosition()","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"ken-ruster"},"content":"ChessPiece --\u003e Parser --: :Coordinate","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"ken-ruster"},"content":"Game \u003c-- Parser --: :ChessPiece","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"ken-ruster"},"content":"end","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"ken-ruster"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"ken-ruster":41,"TriciaBK":7}},{"path":"docs/diagrams/ParserCommandDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ken-ruster"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"ken-ruster"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"ken-ruster"},"content":"hide circle","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"ken-ruster"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"ken-ruster"},"content":"package command{","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"ken-ruster"},"content":"    abstract class Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"TriciaBK"},"content":"    +execute(game: Game)","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"TriciaBK"},"content":"    +isMoveCommand(): boolean","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"ken-ruster"},"content":"    class MoveCommand {","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"ken-ruster"},"content":"    -userInput: String","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"ken-ruster"},"content":"    -move: Move","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"ken-ruster"},"content":"    +getMove(): Move","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"ken-ruster"},"content":"    class ShowMovesCommand {","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"ken-ruster"},"content":"    -userInput: String","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"ken-ruster"},"content":"    -piece: ChessPiece","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"ken-ruster"},"content":"    +getPiece(): ChessPiece","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"ken-ruster"},"content":"    class XYZCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"ken-ruster"},"content":"    note top: Includes subclasses AbortCommand, HelpCommand, etc.","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"ken-ruster"},"content":"    XYZCommand -|\u003e Command","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"ken-ruster"},"content":"    ShowMovesCommand --|\u003e Command","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"ken-ruster"},"content":"    MoveCommand --|\u003e Command","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"ken-ruster"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"ken-ruster"},"content":"package parser{","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"ken-ruster"},"content":"    class Parser {","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"ken-ruster"},"content":"    +{static} parsePromote(): ChessPiece","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"ken-ruster"},"content":"    +{static} parseMove(): Move","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"ken-ruster"},"content":"    +{static} parseChessPiece(): ChessPiece","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"ken-ruster"},"content":"    +{static} parseCommand(): Command","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"ken-ruster"},"content":"    +{static} parsePlayerColor(): Color","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"ken-ruster"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"ken-ruster"},"content":"class Storage","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"ken-ruster"},"content":"class Game","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"ken-ruster"},"content":"class Human","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"ken-ruster"},"content":"command.MoveCommand ..\u003e parser.Parser","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"ken-ruster"},"content":"command.ShowMovesCommand ..\u003e parser.Parser","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"ken-ruster"},"content":"command.XYZCommand ..\u003e parser.Parser","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"ken-ruster"},"content":"Game \u003c... parser.Parser","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"ken-ruster"},"content":"Storage \u003c... parser.Parser","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"ken-ruster"},"content":"Human \u003c... parser.Parser","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"ken-ruster"},"content":"ChessBoard \u003c... parser.Parser","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"ken-ruster"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"ken-ruster":47,"TriciaBK":2}},{"path":"docs/diagrams/StorageClass.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TriciaBK"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"ken-ruster"},"content":"hide circle","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"ken-ruster"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"TriciaBK"},"content":"class Storage {","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"TriciaBK"},"content":"  - filePathString: String","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"TriciaBK"},"content":"  - storageFile: File","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"TriciaBK"},"content":"  - blackPieceNum: int","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"TriciaBK"},"content":"  - whitePieceNum: int","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"TriciaBK"},"content":"  - blackKingPresent: boolean","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"TriciaBK"},"content":"  - whiteKingPresent: boolean","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"TriciaBK"},"content":"  - fileScanner: Scanner","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"TriciaBK"},"content":"  - lastMove: Coordinate","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"TriciaBK"},"content":"  + Storage(filePath: String)","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"TriciaBK"},"content":"  + saveBoard(board: ChessBoard, currentColor: Color, human: Human, cpu: CPU): void","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"TriciaBK"},"content":"  + resetBoard(): void","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"TriciaBK"},"content":"  + loadBoard(): ChessTile[][]","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"TriciaBK"},"content":"  + executeSavedMoves(playerColor: Color, otherBoard: ChessBoard, human: Human, cpu: CPU): void","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"TriciaBK"},"content":"  + loadPlayerColor(): Color","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"TriciaBK"},"content":"  + loadDifficulty(): int","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"TriciaBK"},"content":"  + loadCurrentColor(): Color","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"TriciaBK"},"content":"  + getFilePath(): String","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"TriciaBK"},"content":"  + loadHumanMoves(): ArrayList\u003cString\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"TriciaBK"},"content":"  + loadCPUMoves(): ArrayList\u003cString\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"TriciaBK"},"content":"  - isPieceValid(initialPiece: ChessPiece): Boolean","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"TriciaBK"},"content":"  - createChessMasterFile(): void","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"TriciaBK"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"TriciaBK"},"content":"class ChessBoard {","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"TriciaBK"},"content":"  - SIZE: int","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"TriciaBK"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"TriciaBK"},"content":"class ChessTile","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"TriciaBK"},"content":"class Color","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"TriciaBK"},"content":"class Coordinate","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"TriciaBK"},"content":"class Parser","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"TriciaBK"},"content":"class ChessPiece","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"TriciaBK"},"content":"class Human","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"TriciaBK"},"content":"class CPU","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"TriciaBK"},"content":"Storage --|\u003e ChessBoard","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"TriciaBK"},"content":"Storage --|\u003e ChessTile","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"TriciaBK"},"content":"Storage --|\u003e Color","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"TriciaBK"},"content":"Storage --|\u003e Coordinate","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"TriciaBK"},"content":"Storage --|\u003e Parser","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"TriciaBK"},"content":"Storage --|\u003e ChessPiece","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"TriciaBK"},"content":"Storage --|\u003e Human","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"TriciaBK"},"content":"Storage --|\u003e CPU","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"TriciaBK"},"content":"@enduml","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"ken-ruster":2,"TriciaBK":57}},{"path":"docs/diagrams/StorageSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TriciaBK"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"TriciaBK"},"content":"actor User #BlanchedAlmond","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"TriciaBK"},"content":"participant \":Storage\" as Storage #DeepSkyBlue","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"TriciaBK"},"content":"participant \":File\" as File #Orange","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"TriciaBK"},"content":"participant \":FileWriter\" as FileWriter #PaleTurquoise","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"TriciaBK"},"content":"participant \":Scanner\" as Scanner #Pink","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"TriciaBK"},"content":"participant \":ChessTile\" as ChessTile #Orchid","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"TriciaBK"},"content":"participant \":String\" as String #IndianRed","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"TriciaBK"},"content":"participant \"human:Human\" as Human #Lime","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"TriciaBK"},"content":"participant \"cpu:CPU\" as CPU #LightGreen","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"TriciaBK"},"content":"participant \"board:ChessBoard\" as ChessBoard  #LightPink","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"TriciaBK"},"content":"create Storage","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"TriciaBK"},"content":"User -\u003e Storage++ : new Storage(): String","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"TriciaBK"},"content":"create File","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"TriciaBK"},"content":"Storage -\u003e File++ : new File()","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"TriciaBK"},"content":"File --\u003e Storage-- : storageFile:File","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"TriciaBK"},"content":"Storage --\u003e User--","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"TriciaBK"},"content":"User -\u003e Storage++ : createChessMasterFile()","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"TriciaBK"},"content":"Storage -\u003e File++ : exists()","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"TriciaBK"},"content":"File --\u003e Storage-- : boolean","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"TriciaBK"},"content":"alt File: !exists()","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"TriciaBK"},"content":"    File -\u003e File++ : createParentDirectories()","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"TriciaBK"},"content":"    File --\u003e File--","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"TriciaBK"},"content":"    File -\u003e File++ : createNewFile()","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"TriciaBK"},"content":"    File --\u003e File--","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"TriciaBK"},"content":"end","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"TriciaBK"},"content":"Storage --\u003e User--","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"TriciaBK"},"content":"User -\u003e Storage++ : saveBoard(): ChessBoard","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"TriciaBK"},"content":"Storage -\u003e Storage++ : createChessMasterFile()","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"TriciaBK"},"content":"Storage --\u003e Storage--","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"TriciaBK"},"content":"create FileWriter","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"TriciaBK"},"content":"Storage -\u003e FileWriter++ : new FileWriter(): File","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"TriciaBK"},"content":"FileWriter --\u003e Storage-- : fileWriter: FileWriter","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"TriciaBK"},"content":"Storage -\u003e FileWriter++: fileWriter.write(): playerColor.name()","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"TriciaBK"},"content":"FileWriter -\u003e ChessBoard++ : getPlayerColor()","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"TriciaBK"},"content":"ChessBoard --\u003e FileWriter-- : Color","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"TriciaBK"},"content":"FileWriter -\u003e FileWriter++ : write(): Color","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"TriciaBK"},"content":"FileWriter --\u003e FileWriter--","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"TriciaBK"},"content":"FileWriter --\u003e Storage--","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"TriciaBK"},"content":"FileWriter -\u003e FileWriter++ : fileWriter.write(): System.lineSeparator()","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"TriciaBK"},"content":"FileWriter --\u003e FileWriter--","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"ken-ruster"},"content":"Storage -\u003e FileWriter++ : fileWriter.write(): human.movesToString()","lastModifiedDate":"2023-11-05"},{"lineNumber":50,"author":{"gitId":"ken-ruster"},"content":"FileWriter -\u003e Human++ : movesToString()","lastModifiedDate":"2023-11-05"},{"lineNumber":51,"author":{"gitId":"ken-ruster"},"content":"Human --\u003e FileWriter : human moves","lastModifiedDate":"2023-11-05"},{"lineNumber":52,"author":{"gitId":"ken-ruster"},"content":"FileWriter -\u003e FileWriter++ : write(): human moves","lastModifiedDate":"2023-11-05"},{"lineNumber":53,"author":{"gitId":"ken-ruster"},"content":"FileWriter --\u003e FileWriter--","lastModifiedDate":"2023-11-05"},{"lineNumber":54,"author":{"gitId":"ken-ruster"},"content":"FileWriter --\u003e Storage--","lastModifiedDate":"2023-11-05"},{"lineNumber":55,"author":{"gitId":"ken-ruster"},"content":"Storage -\u003e FileWriter++ : fileWriter.write(): cpu.movesToString()","lastModifiedDate":"2023-11-05"},{"lineNumber":56,"author":{"gitId":"ken-ruster"},"content":"FileWriter -\u003e CPU++ : movesToString()","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"ken-ruster"},"content":"CPU --\u003e FileWriter : CPU moves","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"ken-ruster"},"content":"FileWriter -\u003e FileWriter++ : write(): CPU moves","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"ken-ruster"},"content":"FileWriter --\u003e FileWriter--","lastModifiedDate":"2023-11-05"},{"lineNumber":60,"author":{"gitId":"ken-ruster"},"content":"FileWriter --\u003e Storage--","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"TriciaBK"},"content":"loop for row from 0 to ChessBoard.SIZE-1","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"TriciaBK"},"content":"    alt row loop","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"TriciaBK"},"content":"        FileWriter -\u003e FileWriter++ : .write(): System.lineSeparator()","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"TriciaBK"},"content":"        FileWriter --\u003e FileWriter--","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"TriciaBK"},"content":"        loop for col from 0 to ChessBoard.SIZE-1","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"TriciaBK"},"content":"            Storage -\u003e ChessBoard++ : getPieceAtCoor(): Coordinate","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"TriciaBK"},"content":"            create Coordinate","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"TriciaBK"},"content":"            ChessBoard -\u003e Coordinate++","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"TriciaBK"},"content":"            Coordinate --\u003e ChessBoard-- : Coordinate","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"TriciaBK"},"content":"            ChessBoard --\u003e Storage--  : piece","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"TriciaBK"},"content":"            FileWriter -\u003e FileWriter++ : write(): ChessPiece","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"TriciaBK"},"content":"            FileWriter --\u003e FileWriter--","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"TriciaBK"},"content":"        end","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"TriciaBK"},"content":"    end","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"TriciaBK"},"content":"end","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"TriciaBK"},"content":"FileWriter -\u003e FileWriter++ : close()","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"TriciaBK"},"content":"FileWriter --\u003e FileWriter--","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"TriciaBK"},"content":"Storage --\u003e User--","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"TriciaBK"},"content":"User -\u003e Storage++ : resetBoard(): ChessBoard","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"TriciaBK"},"content":"Storage -\u003e Storage++ : createChessMasterFile()","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"TriciaBK"},"content":"Storage --\u003e Storage--","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"TriciaBK"},"content":"create FileWriter","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"TriciaBK"},"content":"Storage -\u003e FileWriter++ : new FileWriter(): File","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"TriciaBK"},"content":"FileWriter --\u003e Storage-- : fileWriter: FileWriter","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"TriciaBK"},"content":"Storage -\u003e FileWriter++: .write(): String","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"TriciaBK"},"content":"FileWriter --\u003e Storage--","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"TriciaBK"},"content":"Storage -\u003e FileWriter++: .close()","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"TriciaBK"},"content":"FileWriter --\u003e Storage--","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"TriciaBK"},"content":"Storage --\u003e User--","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"TriciaBK"},"content":"User -\u003e Storage++ : loadBoard(): ChessBoard","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"TriciaBK"},"content":"Storage -\u003e Storage++ : createChessMasterFile()","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"TriciaBK"},"content":"Storage --\u003e Storage--","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"TriciaBK"},"content":"create Scanner","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"TriciaBK"},"content":"Storage -\u003e Scanner++ : new Scanner(): File","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"TriciaBK"},"content":"Scanner --\u003e Storage-- : fileScanner: Scanner","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"TriciaBK"},"content":"alt FileScanner: hasNext()","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"TriciaBK"},"content":"    Storage -\u003e Scanner++: nextLine()","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"TriciaBK"},"content":"    Scanner --\u003e Storage --","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"TriciaBK"},"content":"end","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"TriciaBK"},"content":"Storage -\u003e Storage: Initialize rowIndex, boardTiles","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"TriciaBK"},"content":"create ChessTile","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"TriciaBK"},"content":"Storage -\u003e ChessTile++","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"TriciaBK"},"content":"ChessTile --\u003e Storage-- : boardTiles: ChessTile[][]","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"TriciaBK"},"content":"loop (rowIndex \u003c ChessBoard.SIZE \u0026\u0026 fileScanner.hasNext())","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"TriciaBK"},"content":"    Storage -\u003e Scanner++ : nextLine()","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"TriciaBK"},"content":"    Scanner --\u003e Storage-- : chessRowLine: String","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"TriciaBK"},"content":"    alt chessRowLine.length() !\u003d ChessBoard.SIZE","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"TriciaBK"},"content":"        Storage -\u003e Scanner++: close()","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"TriciaBK"},"content":"        Scanner --\u003e Storage--","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"TriciaBK"},"content":"    end alt","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"TriciaBK"},"content":"    loop for col from 0 to ChessBoard.SIZE-1","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"TriciaBK"},"content":"        create String","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"TriciaBK"},"content":"        Storage -\u003e String++ : valueOf(): chessRowLine.charAt(col)","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"TriciaBK"},"content":"        String --\u003e Storage-- : chessPieceString: String","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"TriciaBK"},"content":"        Storage -\u003e Parser++ : chessPieceString","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"TriciaBK"},"content":"        Parser --\u003e Storage -- : initialPiece: ChessPiece","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"TriciaBK"},"content":"        create ChessTile","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"TriciaBK"},"content":"        Storage -\u003e ChessTile++","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"TriciaBK"},"content":"        ChessTile --\u003e Storage-- : boardTiles: ChessTile[][]","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"TriciaBK"},"content":"    end loop","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"TriciaBK"},"content":"end","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"TriciaBK"},"content":"Storage -\u003e Scanner++: close","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"TriciaBK"},"content":"Scanner --\u003e Storage--","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"ken-ruster"},"content":"Storage --\u003e User-- : boardTiles","lastModifiedDate":"2023-11-05"},{"lineNumber":131,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":132,"author":{"gitId":"TriciaBK"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"ken-ruster":14,"TriciaBK":118}},{"path":"docs/team/antrikshdhand.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"antrikshdhand"},"content":"# Project Portfolio Page","lastModifiedDate":"2023-11-14"},{"lineNumber":2,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"antrikshdhand"},"content":"By Antriksh Dhand (@antrikshdhand)","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"antrikshdhand"},"content":"## Overview","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"antrikshdhand"},"content":"I primarily focused on enhancing the gameplay experience and ensuring the robustness of the codebase. I implemented new key commands, refactored existing code for an improved object-oriented design, and explored end-to-end testing strategies.","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"antrikshdhand"},"content":"## Contributions","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"antrikshdhand"},"content":"### Code contributed","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"antrikshdhand"},"content":"Check out my contributions on the [TP Dashboard](https://nus-cs2113-ay2324s1.github.io/tp-dashboard/?search\u003dantrikshdhhttps://nus-cs2113-ay2324s1.github.io/tp-dashboard/?search\u003dantrikshdhand\u0026breakdown\u003dtruehttps://nus-cs2113-ay2324s1.github.io/tp-dashboard/?search\u003dantrikshdhand\u0026breakdown\u003dtruehttps://nus-cs2113-ay2324s1.github.io/tp-dashboard/?search\u003dantrikshdhand\u0026breakdown\u003dtrueand\u0026breakdown\u003dtrue).","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"antrikshdhand"},"content":"### Enhancements implemented","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"antrikshdhand"},"content":"#### `captured`, `history`, and `stepback` Commands","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"antrikshdhand"},"content":"I implemented the `captured`, `history`, and `stepback` commands, allowing the player access to commands they would generally expect to see in a modern chess game. The `stepback` command posed a unique challenge, requiring a deep dive into move reversal mechanisms. This effort involved significant code refactoring to promote cleaner, more object-oriented structures.","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"antrikshdhand"},"content":"#### Object-Oriented Design Refactoring","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"antrikshdhand"},"content":"To enhance code maintainability and extensibility, I introduced sub-classes such as `CastleMove` and `EnPassantMove`. Additionally, the implementation of the `MoveFactory` class, adopting the Factory method pattern, has streamlined the creation of Move objects. This in turn fed into making the reversal of moves much more cleaner to implement and more robust overall. I also encouraged and administered the use of SLAP in our codebase.","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"antrikshdhand"},"content":"### Contributions to the User Guide (UG)","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"antrikshdhand"},"content":"While not introducing new major sections, I diligently maintained the UG by documenting my new commands and ensuring that information stays relevant and up to date.","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"antrikshdhand"},"content":"### Contributions to the Developer Guide (DG)","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":31,"author":{"gitId":"antrikshdhand"},"content":"#### End-to-End Testing Section","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"antrikshdhand"},"content":"I made substantial progress in establishing end-to-end testing for the CLI. Despite not achieving full completion, I laid the groundwork and documented the process in the DG, providing a valuable resource for future testing efforts. You can see a stub of this code in the DG.","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"antrikshdhand"},"content":"### General Contributions","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"antrikshdhand"},"content":"Regularly contributed to team discussions, providing insights and assistance where needed.","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"antrikshdhand"},"content":"Actively participated in code reviews and offered constructive feedback to enhance overall code quality.","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"antrikshdhand":39}},{"path":"docs/team/ken-ruster.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ken-ruster"},"content":"# Project: ChessMaster v2.1","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"ken-ruster"},"content":"ChessMaster is a desktop application targeted at chess beginners ","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"ken-ruster"},"content":"for them to be able to learn chess on the go. Users interact with it using the CLI,","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"ken-ruster"},"content":"and its simplicity means that even low-end machines should be able to run it.","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"ken-ruster"},"content":"### Code contributions: [RepoSense Link](https://nus-cs2113-ay2324s1.github.io/tp-dashboard/?search\u003dken-ruster\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"ken-ruster"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"ken-ruster"},"content":"### **New Feature**: Move class","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"ken-ruster"},"content":"- A class representing a move to be made.","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"ken-ruster"},"content":"- Includes the coordinates from and to of the move, as well as the piece involved to check for validity later.","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"ken-ruster"},"content":"### **New Feature**: Checking for the validity of the save file.","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"ken-ruster"},"content":"- Justification: To make sure that the move history and current board state match. Prevents the user from making ","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"ken-ruster"},"content":"  illegal moves via changing the save file.","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"ken-ruster"},"content":"- Highlights: The implementation required a revision to the structure of the saved file. ","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"ken-ruster"},"content":"  It required implementing a `PromoteMove` class as well to store possible promotions.","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"ken-ruster"},"content":"- How it works:","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"ken-ruster"},"content":"  - Move history is stored in the .txt file","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"ken-ruster"},"content":"  - When the game is loaded, the file reads the moves of the human and CPU, and merges them to form a single array.","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"ken-ruster"},"content":"  - Each of the moves in the array are parsed and executed in the exact order they were stored in.","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"ken-ruster"},"content":"  - The board it was executed on then is passed into the Game to be run after being checked against the saved board state.","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"ken-ruster"},"content":"  - By doing this, we are able to ensure the History, Stepback and Captured commands are able to work normally after a saved game is loaded.","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"ken-ruster"},"content":"### **New feature**: Displaying valid moves for a piece","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"ken-ruster"},"content":"- Justification: New players may not be able to tell how certain pieces move.","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"ken-ruster"},"content":"  This feature assists them in learning how the game works in an accessible manner.","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"ken-ruster"},"content":"- Highlights: Doing this posed a challenge on how best to display the different possibilities for moves","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"ken-ruster"},"content":"  , eg capturable pieces, current position of the piece and empty tiles it could move to.","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"ken-ruster"},"content":"  Some difficulty arose while learning to go formatting for text highlighting which works","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"ken-ruster"},"content":"  for both Windows and Mac.","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"ken-ruster"},"content":"### **New feature**: Handling promotion","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"ken-ruster"},"content":"- Justification: Promotion is an essential mechanic of Chess.","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"ken-ruster"},"content":"- Highlights: Handling promotion required extensive modification of several classes relating to game function.","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"ken-ruster"},"content":"- How it works:","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"ken-ruster"},"content":"  - Game checks for pieces able to promoted at the end of each move","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"ken-ruster"},"content":"  - User is prompted to promote a piece, and the input is parsed to return a new piece","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"ken-ruster"},"content":"  - The pawn to be promoted is replaced with the new piece","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"ken-ruster"},"content":"### **Project Management**:","lastModifiedDate":"2023-11-14"},{"lineNumber":39,"author":{"gitId":"ken-ruster"},"content":"- Set up GitHub organisation and repo","lastModifiedDate":"2023-11-14"},{"lineNumber":40,"author":{"gitId":"ken-ruster"},"content":"- Managed repo branch security settings","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"ken-ruster"},"content":"- Maintained issue tracker","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"ken-ruster"},"content":"- Managed bug testing and checkStyle adherence for releases `1.0` and `2.0`","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"ken-ruster"},"content":"### **Enhancements to existing features**:","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"ken-ruster"},"content":"- Added additional tests for existing features, including:","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"ken-ruster"},"content":"  - `parsePromote`","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"ken-ruster"},"content":"  - `ShowMovesCommand`","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"ken-ruster"},"content":"  - `executeSavedMoves`, `loadHumanMoves()` and `loadCPUMoves()` in `Storage`","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"ken-ruster"},"content":"  - `executeMoveArray` in `ChessBoard`","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"ken-ruster"},"content":"### **Documentation**:","lastModifiedDate":"2023-11-14"},{"lineNumber":50,"author":{"gitId":"ken-ruster"},"content":"- Developer Guide:","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"ken-ruster"},"content":"  - Added documentation for the `Parser` and `Command` subclasses","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"ken-ruster"},"content":"  - Added sequence diagram for move parsing","lastModifiedDate":"2023-11-14"},{"lineNumber":53,"author":{"gitId":"ken-ruster"},"content":"  - Added class diagram describing `Parser` and `Command`","lastModifiedDate":"2023-11-14"},{"lineNumber":54,"author":{"gitId":"ken-ruster"},"content":"- User Guide:","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"ken-ruster"},"content":"  - Added documentation for the Features section","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"ken-ruster"},"content":"  - Updated the Command Summary","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"ken-ruster"},"content":"  - Added and wrote the FAQ section","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"ken-ruster":57}},{"path":"docs/team/onx001.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"onx001"},"content":"# Project Portfolio: ChessMaster","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"onx001"},"content":"## Overview","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"onx001"},"content":"I implemented the main game logic, including the `Minimax` class and algorithm which serves as the backbone for the CPU, as well as move logic for the individual chesspieces. These classes dictate the precise functioning and internal logic of the game. My responsibilities extend to detailing documentation for these gameplay features, and for ironing out bugs and issues that might arise from the progressive integration of these features into the game.","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"onx001"},"content":"## Contributions","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"onx001"},"content":"### Minimax Class and Algorithm","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"onx001"},"content":"The Minimax class and algorithm is the backbone of the CPU. It is responsible for determining the best move for the CPU to make, and is the core of the CPU\u0027s decision-making process. The Minimax algorithm is a recursive algorithm that searches through the game tree, and is used to determine the best move for the CPU to make. The Minimax class is responsible for the implementation of the algorithm, and is the class that is called by the CPU to determine the best move to make. I implemented the algorithm with SLAP and extracted helper functions to improve the readability of the code.","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"onx001"},"content":"#### Difficulty","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"onx001"},"content":"The difficulty of the game is determined by the depth of the Minimax algorithm. The higher the depth, the more moves the CPU will look ahead, and the more difficult the game will be. The depth of the Minimax algorithm can be set by the user in the savefile and when starting a new game. The maximum depth is set to 3, as the CPU will take a long time to make a move if the depth is set too high. ","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"onx001"},"content":"The difficulty is also saved in the savefile, and is loaded when the user loads the savefile. I implemented this feature by adding a new field in the savefile, and by adding a new parameter in the `Game` class to set the difficulty of the game. This was added in the style of the existing parameters in the `Storage` class.","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"onx001"},"content":"### Move Validity","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"onx001"},"content":"The move validity of the chesspieces is determined by the `isValidMove()` method in the `ChessPiece` class. This method is called by the `Game` class to determine if a move is valid. The `isValidMove()` method is implemented in the child classes of the `ChessPiece` class, and is responsible for determining if a move is valid for the chesspiece. ","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"onx001"},"content":"I implemented this alongside various non-standard chess moves, such as castling and en passant in a manner that minimised code coupling and enabled other developers to have a more bug-free experience.","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"onx001"},"content":"### Reposense","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"onx001"},"content":"My code contributions can be found on the [TP Dashboard](https://github.com/AY2324S1-CS2113-T18-1/tp/commit/fa0fa79e972d3c962461120070ca65f00bfff965).","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"onx001"},"content":"### Project Management","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"onx001"},"content":"I solved bugs and issues that arose from the integration of the Minimax algorithm and the move validity of the chesspieces. I also managed the bug testing and checkstyle adherence, and delivered key features in a timely manner which allowed for other developers to have a longer runway for implementing their features.","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"onx001"},"content":"### Documentation","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":31,"author":{"gitId":"onx001"},"content":"#### Developer\u0027s Guide","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"onx001"},"content":"I documented the `Minimax` class and algorithm with a sequence diagram, as well as the `Move` class and the various types of moves available. I also added a sequence diagram and a class diagram of the `Move` class.","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"onx001"},"content":"### User\u0027s Guide","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"onx001"},"content":"I  added documentation in the user guide for castling and en passant, as well as the difficulty of the game. In addition, I polished and edited the user guide to make it more comprehensive about the various features ChessMaster has to offer.","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"onx001"},"content":"### Team-based tasks","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"onx001"},"content":"I added several issues and reviewed several PRs, and helped to manage the project board. An example can be found [in this pull request](https://github.com/AY2324S1-CS2113-T18-1/tp/pull/182) and [in this issue](https://github.com/AY2324S1-CS2113-T18-1/tp/issues/185). I also submitted various bugs for other teams such as [here](https://github.com/AY2324S1-CS2113-F11-1/tp/issues/58).","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"onx001":38}},{"path":"docs/team/tongzhenghong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"# Project Portfolio: Chess Master","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"By: Tong Zheng Hong","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"## Overview","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"As a key contributor to the Chess Master project, I played a central role in developing the foundational classes for the game, including the `Game` and `ChessMaster` classes. These classes serve as the backbone of the chess-playing application, managing overall game processing and execution. My responsibilities extended to crafting a comprehensive user guide and developer guide to ensure a seamless experience for both end-users and fellow developers.","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"TriciaBK"},"content":"My code contribution can be found in this [TP Dashboard](https://nus-cs2113-ay2324s1.github.io/tp-dashboard/?search\u003dtongzhenghong\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"## Chess Master Class","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"The ChessMaster class acts as the orchestrator, handling the primary game loop, player turns, move execution, and game state management. I meticulously designed and implemented this class to provide a robust and enjoyable chess-playing experience. The ChessMaster class integrates seamlessly with other components, such as the chessboard, players, and user interface.","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"`Game` Class","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"The `Game` class encapsulates the core logic for the chess game. It manages players, moves, and the chessboard. My role involved defining and implementing essential game functionalities within this class, ensuring smooth gameplay and adherence to chess rules. The `Game` class also interacts with the ChessMaster class to maintain the flow of the overall game.","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"## Overall Game Processing and Execution","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"Contributing to the overall game processing and execution, I focused on creating a stable and engaging environment for users. This encompassed implementing turn-based moves, handling player input, and ensuring proper execution of game commands. My efforts aimed to deliver an immersive and error-free gaming experience.","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"## User Guide and Developer Guide","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"I worked on the the introductory part, including the overvie, quick start and the gameplay specifications. This entailed providing players with clear instructions on gameplay, commands, and features, with a specific section dedicated to the turn-based nature of the game. Simultaneously, the developer guide offers valuable insights into the project\u0027s structure, class interactions, and guidelines for future enhancements, especially in the context of the turn-based gameplay mechanics.","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"TriciaBK":2,"TongZhengHong":18}},{"path":"docs/team/triciabk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TriciaBK"},"content":"# TrciaBK\u0027s Project Portfolio Page","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"TriciaBK"},"content":"## Project: ChessMaster","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"TriciaBK"},"content":"ChessMaster is a ChessMasterCLI is a command-line interface (CLI) chess game designed to make learning and training accessible for beginners while offering an engaging experience for all skill levels. ","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"TriciaBK"},"content":"This sleek and user-friendly chess simulator provides a platform for novice players to build their skills and understanding of the game.","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"TriciaBK"},"content":"### Given below are my contributions to the project:","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"TriciaBK"},"content":"###### My code contribution can be found in this [TP Dashboard](https://nus-cs2113-ay2324s1.github.io/tp-dashboard/?search\u003dtriciabk\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"TriciaBK"},"content":"#### Storage Class","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"TriciaBK"},"content":"- Stores the current state of board","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"TriciaBK"},"content":"- Stores the last current player before exit of game","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"TriciaBK"},"content":"- Loads the state of board","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"TriciaBK"},"content":"I managed the `storage` class of the board and the data that are required to be stored and returned when loading a new game. ","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"TriciaBK"},"content":"#### Restart function","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"TriciaBK"},"content":"- Restart allows users to restart the game any time they want, without having to exit the program and entering again.","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"TriciaBK"},"content":"- Allow for restart of new game after a game is completed","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"TriciaBK"},"content":"#### Other Trivial Commands","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"TriciaBK"},"content":"- `help` command ","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"TriciaBK"},"content":"- `show` board command","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"TriciaBK"},"content":"- `rules` command ","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"TriciaBK"},"content":"### Project Management","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"TriciaBK"},"content":"- Managed Release v1.0 on GitHub","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"TriciaBK"},"content":"### Documentation:","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"TriciaBK"},"content":"#### User Guide:","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"TriciaBK"},"content":"- Added documentation for the features releating to storage and command features (Exit, Help, Restart, Rules, Show)","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"TriciaBK"},"content":"- Implemented command summary and expected outputs of commands.","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"TriciaBK"},"content":"#### Developer Guide:","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"TriciaBK"},"content":"- Added implementation details of the storage feature.","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"TriciaBK"},"content":"- Contributed to product scope and target users.","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"TriciaBK"},"content":"- Updated user stories.","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"TriciaBK":37}},{"path":"src/main/java/chessmaster/ChessMaster.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"//@@author TongZhengHong","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster;","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.ui.TextUI;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.storage.Storage;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Color;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Game;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.user.CPU;","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.user.Human;","lastModifiedDate":"2023-11-05"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"/**","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":" * Main entry-point for ChessMaster application.","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":" */","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"public class ChessMaster {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"    private static final String FILE_PATH_STRING \u003d \"data/ChessMaster.txt\";","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"    private TextUI ui;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"    private ChessBoard board;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"    private Storage storage;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"    private int difficulty;","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"    private boolean exit \u003d false;","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"    private Color playerColor;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"    private Color currentTurnColor \u003d Color.WHITE;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"    private Human human;","lastModifiedDate":"2023-11-05"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"    private CPU cpu;","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"    private ChessMaster() {","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"        ui \u003d new TextUI();","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"        storage \u003d new Storage(FILE_PATH_STRING);","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"        try {","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"            playerColor \u003d storage.loadPlayerColor();","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"            difficulty \u003d storage.loadDifficulty();","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":39,"author":{"gitId":"ken-ruster"},"content":"            //@@author ken_ruster","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"ken-ruster"},"content":"            // ChessTile[][] existingBoardState \u003d storage.loadBoard();","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"ken-ruster"},"content":"            // ChessBoard existingBoard \u003d new ChessBoard(playerColor, existingBoardState);","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"ken-ruster"},"content":"            board \u003d new ChessBoard(playerColor);","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"ken-ruster"},"content":"            human \u003d new Human(playerColor, board);","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"ken-ruster"},"content":"            cpu \u003d new CPU(playerColor.getOppositeColour(), board);","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"ken-ruster"},"content":"            storage.executeSavedMoves(playerColor, board, human, cpu);","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"ken-ruster"},"content":"            board.setDifficulty(difficulty);","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":49,"author":{"gitId":"ken-ruster"},"content":"            currentTurnColor \u003d getCurrentTurnColor(human, cpu, playerColor);","lastModifiedDate":"2023-11-14"},{"lineNumber":50,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"ken-ruster"},"content":"            if (shouldStartNewGame() \u0026\u0026 !exit) {","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"ken-ruster"},"content":"                loadNewGame();","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"ken-ruster"},"content":"        } catch (ChessMasterException e) {","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"ken-ruster"},"content":"            ui.printLoadBoardError();","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"ken-ruster"},"content":"            loadNewGame();","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"ken-ruster"},"content":"    private Color getCurrentTurnColor(Human human, CPU cpu, Color playerColor) throws ChessMasterException {","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"ken-ruster"},"content":"        int noHumanMoves \u003d human.getMovesLength();","lastModifiedDate":"2023-11-14"},{"lineNumber":62,"author":{"gitId":"ken-ruster"},"content":"        int noCPUMoves \u003d cpu.getMovesLength();","lastModifiedDate":"2023-11-14"},{"lineNumber":63,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":64,"author":{"gitId":"ken-ruster"},"content":"        if (noHumanMoves \u003d\u003d noCPUMoves \u0026\u0026 playerColor.isWhite()","lastModifiedDate":"2023-11-14"},{"lineNumber":65,"author":{"gitId":"ken-ruster"},"content":"            || noHumanMoves \u003c noCPUMoves \u0026\u0026 playerColor.isBlack()) {","lastModifiedDate":"2023-11-14"},{"lineNumber":66,"author":{"gitId":"ken-ruster"},"content":"            return playerColor;","lastModifiedDate":"2023-11-14"},{"lineNumber":67,"author":{"gitId":"ken-ruster"},"content":"        } else if (noHumanMoves \u003e noCPUMoves \u0026\u0026 playerColor.isWhite()","lastModifiedDate":"2023-11-14"},{"lineNumber":68,"author":{"gitId":"ken-ruster"},"content":"            || noHumanMoves \u003d\u003d noCPUMoves \u0026\u0026 playerColor.isBlack()) {","lastModifiedDate":"2023-11-14"},{"lineNumber":69,"author":{"gitId":"ken-ruster"},"content":"            return playerColor.getOppositeColour();","lastModifiedDate":"2023-11-14"},{"lineNumber":70,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":71,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":72,"author":{"gitId":"ken-ruster"},"content":"        throw new ChessMasterException(","lastModifiedDate":"2023-11-14"},{"lineNumber":73,"author":{"gitId":"ken-ruster"},"content":"                \"Moves in save file are invalid! Please start a new game or correct the error\");","lastModifiedDate":"2023-11-14"},{"lineNumber":74,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":75,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":76,"author":{"gitId":"ken-ruster"},"content":"    private boolean shouldStartNewGame() {","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"ken-ruster"},"content":"        ui.promptContinuePrevGame(false);","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"ken-ruster"},"content":"        String input \u003d ui.getUserInput(false);","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"ken-ruster"},"content":"        while (!input.equals(\"y\") \u0026\u0026 !input.equals(\"n\")) {","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"ken-ruster"},"content":"            if (input.equalsIgnoreCase(\"exit\")) {","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"ken-ruster"},"content":"                exit \u003d true;","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"ken-ruster"},"content":"                break;","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"ken-ruster"},"content":"            ui.promptContinuePrevGame(true);","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"ken-ruster"},"content":"            input \u003d ui.getUserInput(false);","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"ken-ruster"},"content":"        ","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"ken-ruster"},"content":"        if (input.equals(\"y\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"ken-ruster"},"content":"            ui.printContinuePrevGame(playerColor.name(), difficulty);","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"ken-ruster"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"ken-ruster"},"content":"        } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"ken-ruster"},"content":"            return true;","lastModifiedDate":"2023-11-10"},{"lineNumber":94,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"TriciaBK"},"content":"    //@@author TriciaBK","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"TriciaBK"},"content":"    private boolean shouldRestartGame() {","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"TriciaBK"},"content":"        ui.promptNewGame(false);","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"TriciaBK"},"content":"        String input \u003d ui.getUserInput(false);","lastModifiedDate":"2023-11-08"},{"lineNumber":101,"author":{"gitId":"TriciaBK"},"content":"        while (!input.equals(\"y\") \u0026\u0026 !input.equals(\"n\")) {","lastModifiedDate":"2023-11-08"},{"lineNumber":102,"author":{"gitId":"TriciaBK"},"content":"            if (input.equalsIgnoreCase(\"exit\")) {","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"TriciaBK"},"content":"                exit \u003d true;","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"TriciaBK"},"content":"                break;","lastModifiedDate":"2023-11-10"},{"lineNumber":105,"author":{"gitId":"TriciaBK"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"TriciaBK"},"content":"            ui.promptNewGame(true);","lastModifiedDate":"2023-11-08"},{"lineNumber":107,"author":{"gitId":"TriciaBK"},"content":"            input \u003d ui.getUserInput(false);","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"TriciaBK"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"TriciaBK"},"content":"        if (input.equals(\"y\")) {","lastModifiedDate":"2023-11-08"},{"lineNumber":110,"author":{"gitId":"TriciaBK"},"content":"            ui.printRestartingGameMessage();","lastModifiedDate":"2023-11-08"},{"lineNumber":111,"author":{"gitId":"TriciaBK"},"content":"            return true;","lastModifiedDate":"2023-11-08"},{"lineNumber":112,"author":{"gitId":"TriciaBK"},"content":"        } else {","lastModifiedDate":"2023-11-08"},{"lineNumber":113,"author":{"gitId":"TriciaBK"},"content":"            return false;","lastModifiedDate":"2023-11-08"},{"lineNumber":114,"author":{"gitId":"TriciaBK"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":115,"author":{"gitId":"TriciaBK"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":116,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":117,"author":{"gitId":"TriciaBK"},"content":"    private void loadNewGame() {","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"TriciaBK"},"content":"        ui.promptStartingColor(false);","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"TriciaBK"},"content":"        String input \u003d ui.getUserInput(false);","lastModifiedDate":"2023-11-06"},{"lineNumber":120,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"TriciaBK"},"content":"        while (!input.equals(\"b\") \u0026\u0026 !input.equals(\"w\")) {","lastModifiedDate":"2023-11-10"},{"lineNumber":122,"author":{"gitId":"TriciaBK"},"content":"            if (input.equalsIgnoreCase(\"exit\")) {","lastModifiedDate":"2023-11-10"},{"lineNumber":123,"author":{"gitId":"TriciaBK"},"content":"                exit \u003d true;","lastModifiedDate":"2023-11-10"},{"lineNumber":124,"author":{"gitId":"TriciaBK"},"content":"                return;","lastModifiedDate":"2023-11-10"},{"lineNumber":125,"author":{"gitId":"TriciaBK"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":126,"author":{"gitId":"TriciaBK"},"content":"            ui.promptStartingColor(true);","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"TriciaBK"},"content":"            input \u003d ui.getUserInput(false);","lastModifiedDate":"2023-11-06"},{"lineNumber":128,"author":{"gitId":"TriciaBK"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"TriciaBK"},"content":"        playerColor \u003d input.equals(\"b\") ? Color.BLACK : Color.WHITE;","lastModifiedDate":"2023-10-23"},{"lineNumber":131,"author":{"gitId":"TriciaBK"},"content":"        Color cpuColor \u003d playerColor.getOppositeColour();","lastModifiedDate":"2023-11-05"},{"lineNumber":132,"author":{"gitId":"TriciaBK"},"content":"        board \u003d new ChessBoard(playerColor);","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"TriciaBK"},"content":"        ui.printStartNewGame(playerColor.name());","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"TriciaBK"},"content":"        human \u003d new Human(playerColor, board);","lastModifiedDate":"2023-11-05"},{"lineNumber":136,"author":{"gitId":"TriciaBK"},"content":"        cpu \u003d new CPU(cpuColor, board);","lastModifiedDate":"2023-11-05"},{"lineNumber":137,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":138,"author":{"gitId":"onx001"},"content":"        //@@author onx001","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"onx001"},"content":"        ui.promptDifficulty(false);","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"onx001"},"content":"        input \u003d ui.getUserInput(false);","lastModifiedDate":"2023-11-06"},{"lineNumber":141,"author":{"gitId":"onx001"},"content":"        while (!input.equals(\"1\") \u0026\u0026 !input.equals(\"2\") \u0026\u0026 !input.equals(\"3\")) {","lastModifiedDate":"2023-11-10"},{"lineNumber":142,"author":{"gitId":"onx001"},"content":"            if (input.equalsIgnoreCase(\"exit\")) {","lastModifiedDate":"2023-11-10"},{"lineNumber":143,"author":{"gitId":"onx001"},"content":"                exit \u003d true;","lastModifiedDate":"2023-11-10"},{"lineNumber":144,"author":{"gitId":"onx001"},"content":"                return;","lastModifiedDate":"2023-11-10"},{"lineNumber":145,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":146,"author":{"gitId":"onx001"},"content":"            ui.promptDifficulty(true);","lastModifiedDate":"2023-11-01"},{"lineNumber":147,"author":{"gitId":"onx001"},"content":"            input \u003d ui.getUserInput(false);","lastModifiedDate":"2023-11-06"},{"lineNumber":148,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"onx001"},"content":"        difficulty \u003d Integer.parseInt(input);","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"onx001"},"content":"        board.setDifficulty(difficulty);","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"onx001"},"content":"        currentTurnColor \u003d Color.WHITE;","lastModifiedDate":"2023-11-03"},{"lineNumber":152,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":153,"author":{"gitId":"onx001"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":154,"author":{"gitId":"onx001"},"content":"            storage.saveBoard(board, currentTurnColor, human, cpu);","lastModifiedDate":"2023-11-07"},{"lineNumber":155,"author":{"gitId":"onx001"},"content":"        } catch (ChessMasterException e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":156,"author":{"gitId":"onx001"},"content":"            ui.printText(e.getMessage());","lastModifiedDate":"2023-11-06"},{"lineNumber":157,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":158,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":159,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":160,"author":{"gitId":"onx001"},"content":"    private void run() {","lastModifiedDate":"2023-10-23"},{"lineNumber":161,"author":{"gitId":"onx001"},"content":"        boolean shouldRestart \u003d true;","lastModifiedDate":"2023-11-08"},{"lineNumber":162,"author":{"gitId":"onx001"},"content":"        while (shouldRestart \u0026\u0026 !exit) {","lastModifiedDate":"2023-11-10"},{"lineNumber":163,"author":{"gitId":"onx001"},"content":"            Game game \u003d new Game(playerColor, currentTurnColor, board, storage, ui, difficulty, human, cpu);","lastModifiedDate":"2023-11-05"},{"lineNumber":164,"author":{"gitId":"onx001"},"content":"            boolean restartMidGame \u003d game.run();","lastModifiedDate":"2023-11-08"},{"lineNumber":165,"author":{"gitId":"onx001"},"content":"            if (!restartMidGame) {","lastModifiedDate":"2023-11-09"},{"lineNumber":166,"author":{"gitId":"onx001"},"content":"                shouldRestart \u003d false;","lastModifiedDate":"2023-11-09"},{"lineNumber":167,"author":{"gitId":"onx001"},"content":"                continue;","lastModifiedDate":"2023-11-09"},{"lineNumber":168,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":169,"author":{"gitId":"onx001"},"content":"            shouldRestart \u003d shouldRestartGame();","lastModifiedDate":"2023-11-09"},{"lineNumber":170,"author":{"gitId":"onx001"},"content":"            if (shouldRestart) {","lastModifiedDate":"2023-11-09"},{"lineNumber":171,"author":{"gitId":"onx001"},"content":"                loadNewGame();","lastModifiedDate":"2023-11-08"},{"lineNumber":172,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":173,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":174,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":175,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":176,"author":{"gitId":"onx001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":177,"author":{"gitId":"onx001"},"content":"        new ChessMaster().run();","lastModifiedDate":"2023-10-23"},{"lineNumber":178,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":179,"author":{"gitId":"onx001"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ken-ruster":58,"TriciaBK":41,"onx001":42,"TongZhengHong":38}},{"path":"src/main/java/chessmaster/commands/CapturedCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshdhand"},"content":"package chessmaster.commands;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.Game;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.pieces.ChessPiece;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.user.CPU;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.user.Human;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"antrikshdhand"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"antrikshdhand"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"antrikshdhand"},"content":"import java.util.List;","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"antrikshdhand"},"content":"import java.util.Map;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"antrikshdhand"},"content":"public class CapturedCommand extends Command {","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"antrikshdhand"},"content":"    public static final String CAPTURED_COMMAND_STRING \u003d \"captured\";","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"antrikshdhand"},"content":"    private String getCapturedDisplayString(","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"antrikshdhand"},"content":"            ArrayList\u003cChessPiece\u003e humanInPlay, ArrayList\u003cChessPiece\u003e humanCaptured,","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"antrikshdhand"},"content":"            ArrayList\u003cChessPiece\u003e cpuInPlay, ArrayList\u003cChessPiece\u003e cpuCaptured) {","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"antrikshdhand"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"antrikshdhand"},"content":"        sb.append(\"Player\u0027s pieces\\n\");","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"antrikshdhand"},"content":"        sb.append(\"-\".repeat(40)).append(System.lineSeparator());","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"antrikshdhand"},"content":"        // In play: Human","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"antrikshdhand"},"content":"        sb.append(\"In play:\\n\");","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"antrikshdhand"},"content":"        appendPiecesWithCount(sb, humanInPlay);","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"antrikshdhand"},"content":"        // Captured: Human","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"antrikshdhand"},"content":"        sb.append(\"\\nCaptured:\\n\"); // Add a separator between \"In play\" and \"Captured\"","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"antrikshdhand"},"content":"        appendPiecesWithCount(sb, humanCaptured);","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"antrikshdhand"},"content":"        // Space between Human and CPU pieces","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"antrikshdhand"},"content":"        sb.append(System.lineSeparator());","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"antrikshdhand"},"content":"        sb.append(System.lineSeparator());","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"antrikshdhand"},"content":"        sb.append(\"CPU\u0027s pieces\\n\");","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"antrikshdhand"},"content":"        sb.append(\"-\".repeat(40)).append(System.lineSeparator());","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"antrikshdhand"},"content":"        // In play: CPU","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"antrikshdhand"},"content":"        sb.append(\"\\nIn play:\\n\"); // Add a separator between \"Captured\" and \"In play\"","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"antrikshdhand"},"content":"        appendPiecesWithCount(sb, cpuInPlay);","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"antrikshdhand"},"content":"        // Captured: CPU","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"antrikshdhand"},"content":"        sb.append(\"\\nCaptured:\\n\"); // Add a separator between \"In play\" and \"Captured\"","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"antrikshdhand"},"content":"        appendPiecesWithCount(sb, cpuCaptured);","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"antrikshdhand"},"content":"        return sb.toString();","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"antrikshdhand"},"content":"    private void appendPiecesWithCount(StringBuilder sb, List\u003cChessPiece\u003e pieces) {","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"antrikshdhand"},"content":"        Map\u003cString, Integer\u003e pieceCountMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"antrikshdhand"},"content":"        for (ChessPiece piece : pieces) {","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"antrikshdhand"},"content":"            String pieceName \u003d piece.getPieceName();","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"antrikshdhand"},"content":"            pieceCountMap.put(pieceName, pieceCountMap.getOrDefault(pieceName, 0) + 1);","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"antrikshdhand"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"antrikshdhand"},"content":"        // This relies on the fact that the \"In play\" pieces should never be empty","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"antrikshdhand"},"content":"        if (pieceCountMap.isEmpty()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"antrikshdhand"},"content":"            sb.append(\"No pieces have been captured yet!\\n\");","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"antrikshdhand"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"antrikshdhand"},"content":"        for (Map.Entry\u003cString, Integer\u003e entry : pieceCountMap.entrySet()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"antrikshdhand"},"content":"            sb.append(\"- \").append(entry.getKey());","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"antrikshdhand"},"content":"            if (entry.getValue() \u003e 1) {","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"antrikshdhand"},"content":"                sb.append(\" x\").append(entry.getValue());","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"antrikshdhand"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"antrikshdhand"},"content":"            sb.append(System.lineSeparator());","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"antrikshdhand"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"antrikshdhand"},"content":"    public CommandResult execute(Game game) throws ChessMasterException {","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"antrikshdhand"},"content":"        Human human \u003d game.getHuman();","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"antrikshdhand"},"content":"        ArrayList\u003cChessPiece\u003e humanInPlay \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"antrikshdhand"},"content":"        ArrayList\u003cChessPiece\u003e humanCaptured \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"antrikshdhand"},"content":"        for (ChessPiece p : human.getPieces()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"antrikshdhand"},"content":"            if (p.getIsCaptured()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"antrikshdhand"},"content":"                humanCaptured.add(p);","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"antrikshdhand"},"content":"            } else {","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"antrikshdhand"},"content":"                humanInPlay.add(p);","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"antrikshdhand"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"antrikshdhand"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"antrikshdhand"},"content":"        CPU cpu \u003d game.getCPU();","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"antrikshdhand"},"content":"        ArrayList\u003cChessPiece\u003e cpuInPlay \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-12"},{"lineNumber":87,"author":{"gitId":"antrikshdhand"},"content":"        ArrayList\u003cChessPiece\u003e cpuCaptured \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"antrikshdhand"},"content":"        for (ChessPiece p : cpu.getPieces()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"antrikshdhand"},"content":"            if (p.getIsCaptured()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"antrikshdhand"},"content":"                cpuCaptured.add(p);","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"antrikshdhand"},"content":"            } else {","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"antrikshdhand"},"content":"                cpuInPlay.add(p);","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"antrikshdhand"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"antrikshdhand"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"antrikshdhand"},"content":"        String displayString \u003d this.getCapturedDisplayString(","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"antrikshdhand"},"content":"                humanInPlay, humanCaptured,","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"antrikshdhand"},"content":"                cpuInPlay, cpuCaptured","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"antrikshdhand"},"content":"        );","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":101,"author":{"gitId":"antrikshdhand"},"content":"        return new CommandResult(displayString);","lastModifiedDate":"2023-11-12"},{"lineNumber":102,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":103,"author":{"gitId":"antrikshdhand"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"antrikshdhand":103}},{"path":"src/main/java/chessmaster/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"//@@author TongZhengHong","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Game;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"public abstract class Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"    public abstract CommandResult execute(Game game) throws ChessMasterException;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isMoveCommand() {","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"        return this instanceof MoveCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"TongZhengHong":13}},{"path":"src/main/java/chessmaster/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"//@@author TongZhengHong","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"public class CommandResult {","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"     * The feedback message to be shown to the user. Contains a description of the","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"     * execution result","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"    private final String[] message;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"    public CommandResult(String... message) {","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"    public String[] getMessageStrings() {","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"        return this.message;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"TongZhengHong":23}},{"path":"src/main/java/chessmaster/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"//@@author TongZhengHong","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Game;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"    public static final String EXIT_COMMAND_STRING \u003d \"exit\";","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"    private static final String EXIT_MESSAGE \u003d \"Exiting program... Thanks for playing!\";","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"    public CommandResult execute(Game game) throws ChessMasterException {","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"        return new CommandResult(EXIT_MESSAGE);","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"        return command instanceof ExitCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"TongZhengHong":22}},{"path":"src/main/java/chessmaster/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TriciaBK"},"content":"//@@author TriciaBK","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"TriciaBK"},"content":"package chessmaster.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.game.Game;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"TriciaBK"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"TriciaBK"},"content":"    public static final String HELP_COMMAND_STRING \u003d \"help\";","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"TriciaBK"},"content":"    public static final String[] HELP_STRINGS \u003d {","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"TriciaBK"},"content":"        \"Here are the commands you can use to play:\",","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"TriciaBK"},"content":"        \"move\\t\\tMove piece\",","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"TriciaBK"},"content":"        \"\\t\\tFormat: move [column][row] [column][row]\",","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"TriciaBK"},"content":"        \"\\t\\te.g. move a2 a3\",","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"TriciaBK"},"content":"        \"moves\\t\\tShow available moves for a piece\",","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"TriciaBK"},"content":"        \"\\t\\tFormat: moves [column][row]\",","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"TriciaBK"},"content":"        \"\\t\\te.g. moves a2\",","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"TriciaBK"},"content":"        \"show\\t\\tShow the chessboard\",","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"TriciaBK"},"content":"        \"rules\\t\\tObtain a quick refresher on the rules of chess\",","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"TriciaBK"},"content":"        \"legend\\t\\tView pieces representation\",","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"TriciaBK"},"content":"        \"restart\\t\\tStart a new game\",","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"TriciaBK"},"content":"        \"history\\t\\tView history of all game moves\",","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"TriciaBK"},"content":"        \"stepback\\tView the board as it was a certain number of moves ago\",","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"TriciaBK"},"content":"        \"\\t\\tFormat: stepback [number of moves to step back]\",","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"TriciaBK"},"content":"        \"\\t\\te.g. stepback 4\",","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"TriciaBK"},"content":"        \"captured\\tSee which Player and CPU pieces have been captured so far\",","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"TriciaBK"},"content":"        \"exit\\t\\tExit game\",","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"TriciaBK"},"content":"    };","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"TriciaBK"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"TriciaBK"},"content":"    public CommandResult execute(Game game) {","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"TriciaBK"},"content":"        return new CommandResult(HELP_STRINGS);","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"TriciaBK"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"TriciaBK"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"TriciaBK":34}},{"path":"src/main/java/chessmaster/commands/HistoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshdhand"},"content":"package chessmaster.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.Game;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.CastleMove;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.Move;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.PromoteMove;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.user.Player;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"antrikshdhand"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"antrikshdhand"},"content":"class PlayerMoveTuple {","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"antrikshdhand"},"content":"    private Player player;","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"antrikshdhand"},"content":"    private Move move;","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"antrikshdhand"},"content":"    public PlayerMoveTuple(Player player, Move move) {","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"antrikshdhand"},"content":"        this.player \u003d player;","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"antrikshdhand"},"content":"        this.move \u003d move;","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"antrikshdhand"},"content":"    public Player getPlayer() {","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"antrikshdhand"},"content":"        return player;","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"antrikshdhand"},"content":"    public Move getMove() {","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"antrikshdhand"},"content":"        return move;","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"antrikshdhand"},"content":"}","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"antrikshdhand"},"content":"public class HistoryCommand extends Command {","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"antrikshdhand"},"content":"    public static final String HISTORY_COMMAND_STRING \u003d \"history\";","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"antrikshdhand"},"content":"    public static ArrayList\u003cPlayerMoveTuple\u003e getAllMovesInChronologicalOrder(Game game) {","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"antrikshdhand"},"content":"        int totalMoves \u003d game.getNumMoves();","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"antrikshdhand"},"content":"        ArrayList\u003cPlayerMoveTuple\u003e allMoves \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"antrikshdhand"},"content":"        Player currentPlayer \u003d game.getCurrentPlayer();","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"antrikshdhand"},"content":"        ArrayList\u003cMove\u003e currentPlayerMoves \u003d currentPlayer.getMoves();","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"antrikshdhand"},"content":"        Player opponent \u003d currentPlayer.isHuman() ? game.getCPU() : game.getHuman();","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"antrikshdhand"},"content":"        ArrayList\u003cMove\u003e opponentMoves \u003d opponent.getMoves();","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"antrikshdhand"},"content":"        int j \u003d (int) Math.floor(totalMoves / 2);","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"antrikshdhand"},"content":"        for (int i \u003d 0; i \u003c\u003d j; i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"antrikshdhand"},"content":"            // If totalMoves is odd, that means the current player is NOT the player","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"antrikshdhand"},"content":"            // who started playing. The first move of the game was from opponent.","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"antrikshdhand"},"content":"            if (totalMoves % 2 !\u003d 0) {","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"antrikshdhand"},"content":"                allMoves.add(new PlayerMoveTuple(opponent, opponentMoves.get(i)));","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"antrikshdhand"},"content":"                if (i \u003d\u003d j) {","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"antrikshdhand"},"content":"                    break; // to account for the odd number of moves","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"antrikshdhand"},"content":"                }","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"antrikshdhand"},"content":"                allMoves.add(new PlayerMoveTuple(currentPlayer, currentPlayerMoves.get(i)));","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"antrikshdhand"},"content":"            } else {","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"antrikshdhand"},"content":"                if (i \u003d\u003d j) {","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"antrikshdhand"},"content":"                    break;","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"antrikshdhand"},"content":"                }","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"antrikshdhand"},"content":"                allMoves.add(new PlayerMoveTuple(currentPlayer, currentPlayerMoves.get(i)));","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"antrikshdhand"},"content":"                allMoves.add(new PlayerMoveTuple(opponent, opponentMoves.get(i)));","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"antrikshdhand"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"antrikshdhand"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"antrikshdhand"},"content":"        return allMoves;","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"antrikshdhand"},"content":"    @Override","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"antrikshdhand"},"content":"    public CommandResult execute(Game game) throws ChessMasterException {","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"antrikshdhand"},"content":"        int numMoves \u003d game.getNumMoves();","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"antrikshdhand"},"content":"        if (numMoves \u003d\u003d 0) {","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"antrikshdhand"},"content":"            return new CommandResult(\"No moves have been played yet!\");","lastModifiedDate":"2023-11-07"},{"lineNumber":70,"author":{"gitId":"antrikshdhand"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":72,"author":{"gitId":"antrikshdhand"},"content":"        ArrayList\u003cPlayerMoveTuple\u003e allMoves \u003d getAllMovesInChronologicalOrder(game);","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"antrikshdhand"},"content":"        StringBuilder returnStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-11-07"},{"lineNumber":75,"author":{"gitId":"antrikshdhand"},"content":"        int moveCounter \u003d 1;","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"antrikshdhand"},"content":"        for (PlayerMoveTuple tuple : allMoves) {","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"antrikshdhand"},"content":"            Move move \u003d tuple.getMove();","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"antrikshdhand"},"content":"            Player player \u003d tuple.getPlayer();","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"antrikshdhand"},"content":"            String moveString;","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"antrikshdhand"},"content":"            if (move.hasCapturedAPiece()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"antrikshdhand"},"content":"                moveString \u003d String.format(","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"antrikshdhand"},"content":"                        \"Move %d: %s moves %s from %s to %s capturing the opponent\u0027s %s!\\n\",","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"antrikshdhand"},"content":"                        moveCounter,","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"antrikshdhand"},"content":"                        player.getColour(),","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"antrikshdhand"},"content":"                        move.getPieceMoved().getPieceName(),","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"antrikshdhand"},"content":"                        move.getFrom(),","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"antrikshdhand"},"content":"                        move.getTo(),","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"antrikshdhand"},"content":"                        move.getPieceCaptured().getPieceName()","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"antrikshdhand"},"content":"                );","lastModifiedDate":"2023-11-07"},{"lineNumber":90,"author":{"gitId":"antrikshdhand"},"content":"            } else if (move instanceof CastleMove) {","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"antrikshdhand"},"content":"                moveString \u003d String.format(","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"antrikshdhand"},"content":"                        \"Move %d: %s castles their king!\\n\",","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"antrikshdhand"},"content":"                        moveCounter,","lastModifiedDate":"2023-11-10"},{"lineNumber":94,"author":{"gitId":"antrikshdhand"},"content":"                        player.getColour()","lastModifiedDate":"2023-11-10"},{"lineNumber":95,"author":{"gitId":"antrikshdhand"},"content":"                );","lastModifiedDate":"2023-11-10"},{"lineNumber":96,"author":{"gitId":"antrikshdhand"},"content":"            } else if (move instanceof PromoteMove) {","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"antrikshdhand"},"content":"                moveString \u003d String.format(","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"antrikshdhand"},"content":"                        \"Move %d: %s promotes their pawn to a %s!\",","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"antrikshdhand"},"content":"                        moveCounter,","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"antrikshdhand"},"content":"                        player.getColour(),","lastModifiedDate":"2023-11-12"},{"lineNumber":101,"author":{"gitId":"antrikshdhand"},"content":"                        ((PromoteMove) move).getNewPiece()","lastModifiedDate":"2023-11-12"},{"lineNumber":102,"author":{"gitId":"antrikshdhand"},"content":"                );","lastModifiedDate":"2023-11-12"},{"lineNumber":103,"author":{"gitId":"antrikshdhand"},"content":"            } else {","lastModifiedDate":"2023-11-08"},{"lineNumber":104,"author":{"gitId":"antrikshdhand"},"content":"                moveString \u003d String.format(","lastModifiedDate":"2023-11-08"},{"lineNumber":105,"author":{"gitId":"antrikshdhand"},"content":"                        \"Move %d: %s moves %s from %s to %s\\n\",","lastModifiedDate":"2023-11-07"},{"lineNumber":106,"author":{"gitId":"antrikshdhand"},"content":"                        moveCounter,","lastModifiedDate":"2023-11-08"},{"lineNumber":107,"author":{"gitId":"antrikshdhand"},"content":"                        player.getColour(),","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"antrikshdhand"},"content":"                        move.getPieceMoved().getPieceName(),","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"antrikshdhand"},"content":"                        move.getFrom(),","lastModifiedDate":"2023-11-08"},{"lineNumber":110,"author":{"gitId":"antrikshdhand"},"content":"                        move.getTo()","lastModifiedDate":"2023-11-08"},{"lineNumber":111,"author":{"gitId":"antrikshdhand"},"content":"                );","lastModifiedDate":"2023-11-07"},{"lineNumber":112,"author":{"gitId":"antrikshdhand"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":113,"author":{"gitId":"antrikshdhand"},"content":"            returnStringBuilder.append(moveString);","lastModifiedDate":"2023-11-08"},{"lineNumber":114,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":115,"author":{"gitId":"antrikshdhand"},"content":"            moveCounter++;","lastModifiedDate":"2023-11-08"},{"lineNumber":116,"author":{"gitId":"antrikshdhand"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":117,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":118,"author":{"gitId":"antrikshdhand"},"content":"        return new CommandResult(returnStringBuilder.toString());","lastModifiedDate":"2023-11-07"},{"lineNumber":119,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":120,"author":{"gitId":"antrikshdhand"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"antrikshdhand":120}},{"path":"src/main/java/chessmaster/commands/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.commands;","lastModifiedDate":"2023-11-05"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.Game;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"    private static final String INVALID_COMMAND_STRING \u003d ","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"        \"Oops! It appears that the command you entered is not recognized. \" + System.lineSeparator() + ","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"        \"Please use \u0027help\u0027 to view a list of available commands.\";","lastModifiedDate":"2023-11-05"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"    @Override","lastModifiedDate":"2023-11-05"},{"lineNumber":12,"author":{"gitId":"antrikshdhand"},"content":"    public CommandResult execute(Game game) {","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"        return new CommandResult(INVALID_COMMAND_STRING);","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"antrikshdhand":2,"TongZhengHong":13}},{"path":"src/main/java/chessmaster/commands/LegendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TriciaBK"},"content":"//@@author TriciaBK","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"TriciaBK"},"content":"package chessmaster.commands;","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.game.Game;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.pieces.Bishop;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.pieces.King;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.pieces.Knight;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.pieces.Pawn;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.pieces.Queen;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.pieces.Rook;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"TriciaBK"},"content":"public class LegendCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"TriciaBK"},"content":"    public static final String LEGEND_COMMAND_STRING \u003d \"legend\";","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"TriciaBK"},"content":"    private static final String[] LEGEND_STRINGS \u003d {","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"TriciaBK"},"content":"        \"Black pieces:\",","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"TriciaBK"},"content":"        String.format(\"\\\"%s\\\" represents a black rook.\", Rook.ROOK_BLACK),","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"TriciaBK"},"content":"        String.format(\"\\\"%s\\\" represents a black knight.\", Knight.KNIGHT_BLACK),","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"TriciaBK"},"content":"        String.format(\"\\\"%s\\\" represents a black bishop.\", Bishop.BISHOP_BLACK),","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"TriciaBK"},"content":"        String.format(\"\\\"%s\\\" represents a black queen.\", Queen.QUEEN_BLACK),","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"TriciaBK"},"content":"        String.format(\"\\\"%s\\\" represents a black king.\", King.KING_BLACK),","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"TriciaBK"},"content":"        String.format(\"\\\"%s\\\" represents a black pawn.\", Pawn.PAWN_BLACK),","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"TriciaBK"},"content":"        \"   \",","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"TriciaBK"},"content":"        \"White pieces:\",","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"TriciaBK"},"content":"        String.format(\"\\\"%s\\\" represents a white rook.\", Rook.ROOK_WHITE),","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"TriciaBK"},"content":"        String.format(\"\\\"%s\\\" represents a white knight.\", Knight.KNIGHT_WHITE),","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"TriciaBK"},"content":"        String.format(\"\\\"%s\\\" represents a white bishop.\", Bishop.BISHOP_WHITE),","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"TriciaBK"},"content":"        String.format(\"\\\"%s\\\" represents a white queen.\", Queen.QUEEN_WHITE),","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"TriciaBK"},"content":"        String.format(\"\\\"%s\\\" represents a white king.\", King.KING_WHITE),","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"TriciaBK"},"content":"        String.format(\"\\\"%s\\\" represents a white pawn.\", Pawn.PAWN_WHITE),","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"TriciaBK"},"content":"    };","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"TriciaBK"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"TriciaBK"},"content":"    public CommandResult execute(Game game) {","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"TriciaBK"},"content":"        return new CommandResult(LEGEND_STRINGS);","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"TriciaBK"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"TriciaBK"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"TriciaBK":38}},{"path":"src/main/java/chessmaster/commands/MoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"//@@author TongZhengHong","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.exceptions.InvalidMoveException;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Game;","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.move.CastleMove;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.move.Move;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.parser.Parser;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"public class MoveCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"    public static final String MOVE_COMMAND_STRING \u003d \"move\";","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"    ","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"    public static final String NO_MOVE_FOUND_STRING \u003d ","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"        \"Oops! It seems you forgot to provide the \u0027from\u0027 and \u0027to\u0027 squares!\";","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"    public static final String MOVE_FORMAT_STRING \u003d ","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"        \"Format: moves \u003cfrom\u003e \u003cto\u003e\";","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"    public static final String MOVE_EXAMPLE_STRING \u003d \"Example: move e2 e4\";","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"    private static final String EMPTY_PAYLOAD_ERROR_STRING \u003d NO_MOVE_FOUND_STRING + System.lineSeparator() + ","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"        MOVE_FORMAT_STRING + System.lineSeparator() + MOVE_EXAMPLE_STRING;","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"    private static final String MOVE_PIECE_MESSAGE \u003d \"You moved %s from %s to %s\";","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"    private static final String MOVE_AND_CAPTURE_MESSAGE \u003d \"You moved %s from %s to %s and captured the opponent\u0027s %s!\";","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"    private static final String MOVE_CASTLE_STRING \u003d \"You castled your King!\";","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"    private String userInput;","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"    private Move move;","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"    public MoveCommand(String inputString) {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"        this.userInput \u003d inputString;","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"     * Executes the command based on user input, which is expected to consist of two","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"     * algebraic coordinate strings separated by whitespace.","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"     * @return A CommandResult object containing the result of the command.","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"     * @throws ChessMasterException If the user input cannot be parsed into two","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"     *                                  coordinate objects.","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"    public CommandResult execute(Game game) throws ChessMasterException {","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"        ChessBoard board \u003d game.getBoard();","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"        if (userInput.isBlank()) {","lastModifiedDate":"2023-11-05"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"            throw new InvalidMoveException(EMPTY_PAYLOAD_ERROR_STRING);","lastModifiedDate":"2023-11-05"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"        ","lastModifiedDate":"2023-11-05"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"        move \u003d Parser.parseMove(userInput, board, true);","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"        if (!move.isValid(board)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"            throw new InvalidMoveException();","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"TongZhengHong"},"content":"        String pieceString \u003d move.getPieceMoved().getClass().getSimpleName();","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"TongZhengHong"},"content":"        String returnString;","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"TongZhengHong"},"content":"        if (move.hasCapturedAPiece()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"TongZhengHong"},"content":"            returnString \u003d String.format(","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"TongZhengHong"},"content":"                    MOVE_AND_CAPTURE_MESSAGE,","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"TongZhengHong"},"content":"                    pieceString, move.getFrom(), move.getTo(), move.getPieceCaptured().getPieceName()","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"TongZhengHong"},"content":"            );","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"TongZhengHong"},"content":"        } else if (move instanceof CastleMove) {","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"TongZhengHong"},"content":"            returnString \u003d MOVE_CASTLE_STRING;","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"TongZhengHong"},"content":"        } else {","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"TongZhengHong"},"content":"            returnString \u003d String.format(MOVE_PIECE_MESSAGE, pieceString, move.getFrom(), move.getTo());","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"TongZhengHong"},"content":"        return new CommandResult(returnString);","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"TongZhengHong"},"content":"    public Move getMove() throws InvalidMoveException {","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"TongZhengHong"},"content":"        if (move \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"TongZhengHong"},"content":"            throw new InvalidMoveException();","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"TongZhengHong"},"content":"        return move;","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"TongZhengHong":79}},{"path":"src/main/java/chessmaster/commands/RestartCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TriciaBK"},"content":"package chessmaster.commands;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.game.Game;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"TriciaBK"},"content":"public class RestartCommand extends Command {","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"TriciaBK"},"content":"    public static final String RESTART_COMMAND_STRING \u003d \"restart\";","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"TriciaBK"},"content":"    @Override","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"TriciaBK"},"content":"    public CommandResult execute(Game game) throws ChessMasterException {","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"TriciaBK"},"content":"        return new CommandResult();","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"TriciaBK"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"TriciaBK"},"content":"    public static boolean isRestart(Command command) {","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"TriciaBK"},"content":"        return command instanceof RestartCommand;","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"TriciaBK"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"TriciaBK"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"TriciaBK":19}},{"path":"src/main/java/chessmaster/commands/RulesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TriciaBK"},"content":"//@@author TriciaBK","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"TriciaBK"},"content":"package chessmaster.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.game.Game;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.pieces.Bishop;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.pieces.King;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.pieces.Knight;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.pieces.Pawn;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.pieces.Queen;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.pieces.Rook;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"TriciaBK"},"content":"public class RulesCommand extends Command {","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"TriciaBK"},"content":"    public static final String RULES_COMMAND_STRING \u003d \"rules\";","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"TriciaBK"},"content":"    static final String[] RULES_STRINGS \u003d {","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"TriciaBK"},"content":"        \"Here are simple chess rules to get you started:\",","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"TriciaBK"},"content":"        \"\",","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"TriciaBK"},"content":"        \"Piece movement:\",","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"TriciaBK"},"content":"        String.format(\"   Pawn (\\\"%s\\\") move forward one square but capture diagonally.\", Pawn.PAWN_WHITE),","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"TriciaBK"},"content":"        String.format(\"   Rooks (\\\"%s\\\") move horizontally and vertically any number of squares.\", Rook.ROOK_WHITE),","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"TriciaBK"},"content":"        String.format(\"   Knights (\\\"%s\\\") move in an L-shape.\", Knight.KNIGHT_WHITE),","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"TriciaBK"},"content":"        String.format(\"   Bishops (\\\"%s\\\") move diagonally any number of squares.\", Bishop.BISHOP_WHITE),","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"TriciaBK"},"content":"        String.format(\"   Queens (\\\"%s\\\") move any number of squares in any direction.\", Queen.QUEEN_WHITE),","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"TriciaBK"},"content":"        String.format(\"   Kings (\\\"%s\\\") move one square in any direction.\", King.KING_WHITE),","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"TriciaBK"},"content":"        \"\",","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"TriciaBK"},"content":"        \"Special Rules:\",","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"TriciaBK"},"content":"        \"[Refer to specific move methods in the User Guide]\",","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"TriciaBK"},"content":"        \"   Castling - King and rook move simultaneously to safeguard the king.\",","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"TriciaBK"},"content":"        \"   En Passant - Pawn capturing when moving two squares from starting position.\",","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"TriciaBK"},"content":"        \"   Pawn Promotion - Promote a pawn to another piece (except king) upon reaching the back rank.\",","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"TriciaBK"},"content":"        \"\",","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"TriciaBK"},"content":"        \"Objective:\",","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"TriciaBK"},"content":"        \"   Game ends when one player\u0027s king is in checkmate, under attack and can\u0027t escape capture.\",","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"TriciaBK"},"content":"        \"   The delivering player wins the game.\"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"TriciaBK"},"content":"    };","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"TriciaBK"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"TriciaBK"},"content":"    public CommandResult execute(Game game) {","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"TriciaBK"},"content":"        return new CommandResult(RULES_STRINGS);","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"TriciaBK"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"TriciaBK"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"TriciaBK":43}},{"path":"src/main/java/chessmaster/commands/ShowCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TriciaBK"},"content":"//@@author TriciaBK","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"TriciaBK"},"content":"package chessmaster.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.game.Game;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.ui.TextUI;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"TriciaBK"},"content":"public class ShowCommand extends Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"TriciaBK"},"content":"    public static final String SHOW_COMMAND_STRING \u003d \"show\";","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"TriciaBK"},"content":"    private static final String SHOW_STRING \u003d \"Here is the current board state:\";","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"TriciaBK"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"TriciaBK"},"content":"    public CommandResult execute(Game game) {","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"TriciaBK"},"content":"        ChessBoard board \u003d game.getBoard();","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"TriciaBK"},"content":"        TextUI ui \u003d game.getUI();","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"TriciaBK"},"content":"        ui.printText(SHOW_STRING);","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"TriciaBK"},"content":"        ui.printChessBoard(board.getBoard());","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"TriciaBK"},"content":"        return new CommandResult();","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"TriciaBK"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"TriciaBK"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"TriciaBK":24}},{"path":"src/main/java/chessmaster/commands/ShowMovesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ken-ruster"},"content":"//@@author ken-ruster","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"ken-ruster"},"content":"package chessmaster.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.exceptions.NullPieceException;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.game.Game;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.pieces.ChessPiece;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.ui.TextUI;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ken-ruster"},"content":"public class ShowMovesCommand extends Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ken-ruster"},"content":"    public static final String SHOW_MOVES_COMMAND_STRING \u003d \"moves\";","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"ken-ruster"},"content":"    public static final String NO_COORDINATE_FOUND_STRING \u003d ","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"ken-ruster"},"content":"        \"Oops! Looks like you forgot to specify a coordinate!\";","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"ken-ruster"},"content":"    public static final String SHOW_MOVES_FORMAT_STRING \u003d \"Format: moves [column][row]\";","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"ken-ruster"},"content":"    public static final String SHOW_MOVES_EXAMPLE_STRING \u003d \"Example: moves a2\";","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"ken-ruster"},"content":"    private String userInput;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ken-ruster"},"content":"    private ChessPiece piece;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ken-ruster"},"content":"    public ShowMovesCommand(String userInput) {","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ken-ruster"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ken-ruster"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ken-ruster"},"content":"    public CommandResult execute(Game game) throws ChessMasterException {","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"ken-ruster"},"content":"        ChessBoard board \u003d game.getBoard();","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"ken-ruster"},"content":"        TextUI ui \u003d game.getUI();","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"ken-ruster"},"content":"        if (userInput.isBlank()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"ken-ruster"},"content":"            return new CommandResult(NO_COORDINATE_FOUND_STRING, ","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"ken-ruster"},"content":"                SHOW_MOVES_FORMAT_STRING, SHOW_MOVES_EXAMPLE_STRING);","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"ken-ruster"},"content":"        Coordinate coord \u003d Coordinate.parseAlgebraicCoor(userInput);","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"ken-ruster"},"content":"        piece \u003d board.getPieceAtCoor(coord);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"ken-ruster"},"content":"        if (piece.isEmptyPiece()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"ken-ruster"},"content":"            throw new NullPieceException(coord);","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"ken-ruster"},"content":"        Coordinate[] possibleCoordinates \u003d piece.getLegalCoordinates(board);","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"ken-ruster"},"content":"        ui.printChessBoardAvailableMoves(board.getBoard(), piece, possibleCoordinates);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"ken-ruster"},"content":"    ","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"ken-ruster"},"content":"        String[] displayString \u003d piece.getAvailableCoordinatesString(board);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"ken-ruster"},"content":"        return new CommandResult(displayString);","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"ken-ruster"},"content":"    public ChessPiece getPiece() {","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"ken-ruster"},"content":"        return this.piece;","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"ken-ruster"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ken-ruster":53}},{"path":"src/main/java/chessmaster/commands/StepbackCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshdhand"},"content":"package chessmaster.commands;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.Game;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.CastleMove;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.Move;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.PromoteMove;","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.pieces.ChessPiece;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.pieces.Pawn;","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"antrikshdhand"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"antrikshdhand"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"antrikshdhand"},"content":"public class StepbackCommand extends Command {","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"antrikshdhand"},"content":"    public static final String STEPBACK_COMMAND_STRING \u003d \"stepback\";","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"antrikshdhand"},"content":"    private String userInput;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"antrikshdhand"},"content":"    public StepbackCommand(String inputString) {","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"antrikshdhand"},"content":"        this.userInput \u003d inputString;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"antrikshdhand"},"content":"    private void reverseMove(Move move, ChessBoard board) {","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"antrikshdhand"},"content":"        // need to reverse the previousMove by moving the piece back from `to` to `from`.","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"antrikshdhand"},"content":"        Coordinate moveTo \u003d move.getTo();","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"antrikshdhand"},"content":"        Coordinate moveFrom \u003d move.getFrom();","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"antrikshdhand"},"content":"        ChessPiece clonedPieceToMove \u003d board.getPieceAtCoor(moveTo);","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"antrikshdhand"},"content":"        clonedPieceToMove.updatePosition(moveFrom);","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"antrikshdhand"},"content":"        board.getTileAtCoor(moveFrom).updateTileChessPiece(clonedPieceToMove);","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"antrikshdhand"},"content":"        // Need to check if the move captured a piece. If it did, need to replace `to` tile with pieceCaptured","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"antrikshdhand"},"content":"        if (move.hasCapturedAPiece()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"antrikshdhand"},"content":"            board.getTileAtCoor(moveTo).updateTileChessPiece(move.getPieceCaptured());","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"antrikshdhand"},"content":"        } else {","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"antrikshdhand"},"content":"            board.getTileAtCoor(moveTo).setTileEmpty(moveTo);","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"antrikshdhand"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"antrikshdhand"},"content":"    private void reversePromotion(PromoteMove move, ChessBoard board) {","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"antrikshdhand"},"content":"        // Put the original pawn which was promoted back on the tile","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"antrikshdhand"},"content":"        Coordinate endTile \u003d move.getTo(); // move.getFrom() is the same","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"antrikshdhand"},"content":"        Pawn pawnPromoted \u003d move.getPawnPromoted();","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"antrikshdhand"},"content":"        board.getTileAtCoor(endTile).updateTileChessPiece(pawnPromoted);","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"antrikshdhand"},"content":"    @Override","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"antrikshdhand"},"content":"    public CommandResult execute(Game game) throws ChessMasterException {","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"antrikshdhand"},"content":"        ChessBoard currentBoard \u003d game.getBoard();","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"antrikshdhand"},"content":"        ChessBoard historyBoard \u003d currentBoard.clone();","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"antrikshdhand"},"content":"        int totalNumMoves \u003d game.getNumMoves();","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"antrikshdhand"},"content":"        // INPUT ERROR HANDLING","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"antrikshdhand"},"content":"        int numMovesToStepBack \u003d 0;","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"antrikshdhand"},"content":"        try {","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"antrikshdhand"},"content":"            numMovesToStepBack \u003d Integer.parseInt(this.userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"antrikshdhand"},"content":"            if (numMovesToStepBack \u003e totalNumMoves) {","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"antrikshdhand"},"content":"                throw new ChessMasterException(\"You cannot step back more moves than have been played!\");","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"antrikshdhand"},"content":"            } else if (numMovesToStepBack \u003c\u003d 0) {","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"antrikshdhand"},"content":"                throw new ChessMasterException(\"Number of steps has to be greater than 0.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"antrikshdhand"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"antrikshdhand"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"antrikshdhand"},"content":"            throw new ChessMasterException(\"Please input an integer number of steps to step back.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"antrikshdhand"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"antrikshdhand"},"content":"        ArrayList\u003cPlayerMoveTuple\u003e allMoves \u003d HistoryCommand.getAllMovesInChronologicalOrder(game);","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"antrikshdhand"},"content":"        Collections.reverse(allMoves);","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"antrikshdhand"},"content":"        for (int i \u003d 0; i \u003c numMovesToStepBack; i++) {","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"antrikshdhand"},"content":"            Move previousMove \u003d allMoves.get(i).getMove();","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"antrikshdhand"},"content":"            reverseMove(previousMove, historyBoard);","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"antrikshdhand"},"content":"            // If castling, need to reverse the rook move as well","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"antrikshdhand"},"content":"            if (previousMove instanceof CastleMove) {","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"antrikshdhand"},"content":"                Move rookCastleMove \u003d ((CastleMove) previousMove).getRookMove();","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"antrikshdhand"},"content":"                reverseMove(rookCastleMove, historyBoard);","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"antrikshdhand"},"content":"            } else if (previousMove instanceof PromoteMove) {","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"antrikshdhand"},"content":"                reversePromotion((PromoteMove) previousMove, historyBoard);","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"antrikshdhand"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"antrikshdhand"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"antrikshdhand"},"content":"        game.getUI().printChessBoard(historyBoard.getBoard());","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"antrikshdhand"},"content":"        return new CommandResult(String.format(","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"antrikshdhand"},"content":"                \"Stepped back %d steps!\\nUse `show` to see the current board.\",","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"antrikshdhand"},"content":"                numMovesToStepBack)","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"antrikshdhand"},"content":"        );","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"antrikshdhand"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"antrikshdhand":92}},{"path":"src/main/java/chessmaster/exceptions/ChessMasterException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"//@@author TongZhengHong","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.exceptions;","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"public class ChessMasterException extends Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"    public ChessMasterException(String message) {","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"        super(message);","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"TongZhengHong":8}},{"path":"src/main/java/chessmaster/exceptions/InvalidMoveException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"//@@author TongZhengHong","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.exceptions;","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.ui.ExceptionMessages;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"public class InvalidMoveException extends ChessMasterException {","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"    public InvalidMoveException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"        super(ExceptionMessages.MESSAGE_INVALID_MOVE_EXCEPTION);","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"    public InvalidMoveException(String message) {","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"        super(message);","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"TongZhengHong":14}},{"path":"src/main/java/chessmaster/exceptions/LoadBoardException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TriciaBK"},"content":"//@@author TriciaBK","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"TriciaBK"},"content":"package chessmaster.exceptions;","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.ui.ExceptionMessages;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"TriciaBK"},"content":"public class LoadBoardException extends ChessMasterException {","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"TriciaBK"},"content":"    public LoadBoardException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"TriciaBK"},"content":"        super(ExceptionMessages.MESSAGE_LOAD_BOARD_EXCEPTION);","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"TriciaBK"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"TriciaBK"},"content":"    public LoadBoardException(String message) {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"TriciaBK"},"content":"        super(message);","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"TriciaBK"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"TriciaBK"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"TriciaBK":17}},{"path":"src/main/java/chessmaster/exceptions/MoveOpponentPieceException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"//@@author TongZhengHong","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.exceptions;","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.ui.ExceptionMessages;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"public class MoveOpponentPieceException extends ChessMasterException {","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"    public MoveOpponentPieceException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"        super(ExceptionMessages.MESSAGE_MOVE_OPPONENT_EXCEPTION);","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"    public MoveOpponentPieceException(String message) {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"        super(message);","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"TongZhengHong":14}},{"path":"src/main/java/chessmaster/exceptions/NullPieceException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"//@@author TongZhengHong","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.exceptions;","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.ui.ExceptionMessages;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"public class NullPieceException extends ChessMasterException {","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"    public NullPieceException(Coordinate coordinate) {","lastModifiedDate":"2023-11-05"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"        super(String.format(ExceptionMessages.MESSAGE_NULL_PIECE_COORDINATE_EXCEPTION, ","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"            coordinate.toString()));","lastModifiedDate":"2023-11-05"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"    public NullPieceException(String message) {","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"        super(message);","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"TongZhengHong":17}},{"path":"src/main/java/chessmaster/exceptions/ParseChessPieceException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"//@@author TongZhengHong","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.exceptions;","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.ui.ExceptionMessages;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"public class ParseChessPieceException extends ChessMasterException {","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"    public ParseChessPieceException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"        super(ExceptionMessages.MESSAGE_PARSE_CHESS_PIECE_EXCEPTION);","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"    public ParseChessPieceException(String message) {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"        super(message);","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"TongZhengHong":16}},{"path":"src/main/java/chessmaster/exceptions/ParseColorException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"//@@author TongZhengHong","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.exceptions;","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.ui.ExceptionMessages;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"public class ParseColorException extends ChessMasterException {","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"    public ParseColorException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"        super(ExceptionMessages.MESSAGE_PARSE_COLOR_EXCEPTION);","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"    public ParseColorException(String message) {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"        super(message);","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"TongZhengHong":14}},{"path":"src/main/java/chessmaster/exceptions/ParseCoordinateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"//@@author TongZhengHong","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.exceptions;","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.ui.ExceptionMessages;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"public class ParseCoordinateException extends ChessMasterException {","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"    public ParseCoordinateException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"        super(ExceptionMessages.MESSAGE_PARSE_COORDINATE_EXCEPTION);","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"    public ParseCoordinateException(String message) {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"        super(message);","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"TongZhengHong":16}},{"path":"src/main/java/chessmaster/exceptions/SaveBoardException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TriciaBK"},"content":"//@@author TriciaBK","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"TriciaBK"},"content":"package chessmaster.exceptions;","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.ui.ExceptionMessages;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"TriciaBK"},"content":"public class SaveBoardException extends ChessMasterException {","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"TriciaBK"},"content":"    public SaveBoardException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"TriciaBK"},"content":"        super(ExceptionMessages.MESSAGE_SAVE_BOARD_EXCEPTION);","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"TriciaBK"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"TriciaBK"},"content":"    public SaveBoardException(String message) {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"TriciaBK"},"content":"        super(message);","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"TriciaBK"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"TriciaBK"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"TriciaBK":17}},{"path":"src/main/java/chessmaster/game/BoardScoreTuple.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"onx001"},"content":"package chessmaster.game;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.Move;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"onx001"},"content":"public class BoardScoreTuple implements Comparable\u003cBoardScoreTuple\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"onx001"},"content":"    private ChessBoard board;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"onx001"},"content":"    private int score;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"onx001"},"content":"    private Move move;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"onx001"},"content":"    public BoardScoreTuple(ChessBoard board, int score, Move move) {","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"onx001"},"content":"        this.board \u003d board;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"onx001"},"content":"        this.score \u003d score;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"onx001"},"content":"        this.move \u003d move;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"onx001"},"content":"    public ChessBoard getBoard() {","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"onx001"},"content":"        return board;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"onx001"},"content":"    public int getScore() {","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"onx001"},"content":"        return score;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"onx001"},"content":"    public Move getMove() {","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"onx001"},"content":"        return move;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"onx001"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"onx001"},"content":"    public int compareTo(BoardScoreTuple tuple) {","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"onx001"},"content":"        if (this.score \u003e tuple.getScore()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"onx001"},"content":"            return 1;","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"onx001"},"content":"        } else if (this.score \u003c tuple.getScore()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"onx001"},"content":"            return -1;","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"onx001"},"content":"        } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"onx001"},"content":"            return 0;","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"onx001"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"antrikshdhand":2,"onx001":37}},{"path":"src/main/java/chessmaster/game/ChessBoard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.game;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"onx001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.exceptions.InvalidMoveException;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.PromoteMove;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.CastleMove;","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.CastleSide;","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.Move;","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.MoveFactory;","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.EnPassantMove;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.parser.Parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.pieces.ChessPiece;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.pieces.EmptyPiece;","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.pieces.King;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"onx001"},"content":"import chessmaster.pieces.Pawn;","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.user.CPU;","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.user.Human;","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"public class ChessBoard {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"    public static final int SIZE \u003d 8;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"    public static final int TOP_ROW_INDEX \u003d 0;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"    public static final int BOTTOM_ROW_INDEX \u003d 7;","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"onx001"},"content":"    public static final int MAX_PIECES \u003d 16;","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"    ","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"ken-ruster"},"content":"    public static final String PROMOTE_MOVE_STRING \u003d \"p\";","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":31,"author":{"gitId":"ken-ruster"},"content":"    public static final String INVALID_SAVE_STRING \u003d","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"ken-ruster"},"content":"            \"Invalid move found in save file! Please start a new game or correct the invalid move!\";","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"ken-ruster"},"content":"    public static final String INVALID_PROMOTE_STRING \u003d","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"ken-ruster"},"content":"            \"Invalid promotion found in save file! Please start a new game or correct the invalid move!\";","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"    private static final String[][] STARTING_CHESSBOARD_BLACK \u003d { ","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"        { \"r\", \"n\", \"b\", \"q\", \"k\", \"b\", \"n\", \"r\" }, ","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"        { \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\" }, ","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"        { \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\" }, ","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"        { \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\" }, ","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"        { \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\" }, ","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"        { \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\" }, ","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"        { \"P\", \"P\", \"P\", \"P\", \"P\", \"P\", \"P\", \"P\" }, ","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"        { \"R\", \"N\", \"B\", \"Q\", \"K\", \"B\", \"N\", \"R\" }, ","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"    };","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"    private static final String[][] STARTING_CHESSBOARD_WHITE \u003d { ","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"        { \"R\", \"N\", \"B\", \"Q\", \"K\", \"B\", \"N\", \"R\" }, ","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"        { \"P\", \"P\", \"P\", \"P\", \"P\", \"P\", \"P\", \"P\" },","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"        { \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\" }, ","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"        { \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\" }, ","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"        { \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\" }, ","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"        { \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\" }, ","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"        { \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\" },","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"TongZhengHong"},"content":"        { \"r\", \"n\", \"b\", \"q\", \"k\", \"b\", \"n\", \"r\" }, ","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"TongZhengHong"},"content":"    };","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"onx001"},"content":"    private Color playerColor;","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"TongZhengHong"},"content":"    private int difficulty \u003d 1;","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"antrikshdhand"},"content":"    private final ChessTile[][] board \u003d new ChessTile[SIZE][SIZE];","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"TongZhengHong"},"content":"    public ChessBoard(Color playerColor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"TongZhengHong"},"content":"        this.playerColor \u003d playerColor;","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"TongZhengHong"},"content":"        for (int row \u003d 0; row \u003c SIZE; row++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"TongZhengHong"},"content":"            for (int col \u003d 0; col \u003c SIZE; col++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"TongZhengHong"},"content":"                String chessPieceString \u003d playerColor.isBlack()","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"TongZhengHong"},"content":"                    ? STARTING_CHESSBOARD_BLACK[row][col]","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"TongZhengHong"},"content":"                    : STARTING_CHESSBOARD_WHITE[row][col];","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"TongZhengHong"},"content":"                ChessPiece initialPiece \u003d Parser.parseChessPiece(chessPieceString, row, col);","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"TongZhengHong"},"content":"                board[row][col] \u003d new ChessTile(initialPiece);","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"ken-ruster"},"content":"                assert (board[row][col] !\u003d null);","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"TongZhengHong"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"onx001"},"content":"        this.playerColor \u003d playerColor;","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"TongZhengHong"},"content":"    public ChessBoard(Color playerColor, ChessTile[][] boardTiles) {","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"TongZhengHong"},"content":"        this.playerColor \u003d playerColor;","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"TongZhengHong"},"content":"        for (int row \u003d 0; row \u003c SIZE; row++) {","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"TongZhengHong"},"content":"            for (int col \u003d 0; col \u003c SIZE; col++) {","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"TongZhengHong"},"content":"                board[row][col] \u003d boardTiles[row][col];","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"TongZhengHong"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"TongZhengHong"},"content":"     * Gets a copy of the current chessboard as a 2D array of ChessTile objects.","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"TongZhengHong"},"content":"     * This method creates a deep copy of the chessboard, allowing for the independent","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"TongZhengHong"},"content":"     * examination of the board\u0027s state without modifying the original chessboard.","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"TongZhengHong"},"content":"     * @return A 2D array copy of ChessTile objects representing the current state of the chessboard.","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"TongZhengHong"},"content":"    public ChessTile[][] getBoard() {","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"TongZhengHong"},"content":"        ChessTile[][] copy \u003d new ChessTile[SIZE][SIZE];","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"TongZhengHong"},"content":"        for (int i \u003d 0; i \u003c SIZE; i++) {","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"TongZhengHong"},"content":"            copy[i] \u003d board[i].clone();","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"TongZhengHong"},"content":"        return copy;","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"TongZhengHong"},"content":"    public Color getPlayerColor() {","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"TongZhengHong"},"content":"        return this.playerColor;","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"onx001"},"content":"    //@@author onx001","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"onx001"},"content":"    public void setDifficulty(int difficulty) {","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"onx001"},"content":"        this.difficulty \u003d difficulty;","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"onx001"},"content":"    public int getDifficulty() {","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"onx001"},"content":"        return this.difficulty;","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"onx001"},"content":"    //@@author onx001","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"onx001"},"content":"    public boolean hasEnPassant() {","lastModifiedDate":"2023-11-06"},{"lineNumber":119,"author":{"gitId":"onx001"},"content":"        //Checks all chess pieces for en passant","lastModifiedDate":"2023-11-06"},{"lineNumber":120,"author":{"gitId":"onx001"},"content":"        for (int row \u003d 0; row \u003c ChessBoard.SIZE; row++) {","lastModifiedDate":"2023-11-06"},{"lineNumber":121,"author":{"gitId":"onx001"},"content":"            for (int col \u003d 0; col \u003c ChessBoard.SIZE; col++) {","lastModifiedDate":"2023-11-06"},{"lineNumber":122,"author":{"gitId":"onx001"},"content":"                Coordinate coor \u003d new Coordinate(col, row);","lastModifiedDate":"2023-11-06"},{"lineNumber":123,"author":{"gitId":"onx001"},"content":"                ChessPiece piece \u003d getPieceAtCoor(coor);","lastModifiedDate":"2023-11-06"},{"lineNumber":124,"author":{"gitId":"onx001"},"content":"                if (piece.isEnPassant()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":125,"author":{"gitId":"onx001"},"content":"                    return true;","lastModifiedDate":"2023-11-06"},{"lineNumber":126,"author":{"gitId":"onx001"},"content":"                }","lastModifiedDate":"2023-11-06"},{"lineNumber":127,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":128,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":129,"author":{"gitId":"onx001"},"content":"        return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":130,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":131,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":132,"author":{"gitId":"onx001"},"content":"    public ChessPiece getEnPassantPiece() {","lastModifiedDate":"2023-11-08"},{"lineNumber":133,"author":{"gitId":"onx001"},"content":"        for (int row \u003d 0; row \u003c ChessBoard.SIZE; row++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":134,"author":{"gitId":"onx001"},"content":"            for (int col \u003d 0; col \u003c ChessBoard.SIZE; col++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":135,"author":{"gitId":"onx001"},"content":"                Coordinate coor \u003d new Coordinate(col, row);","lastModifiedDate":"2023-11-08"},{"lineNumber":136,"author":{"gitId":"onx001"},"content":"                ChessPiece piece \u003d getPieceAtCoor(coor);","lastModifiedDate":"2023-11-08"},{"lineNumber":137,"author":{"gitId":"onx001"},"content":"                if (piece.isEnPassant()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":138,"author":{"gitId":"onx001"},"content":"                    return piece;","lastModifiedDate":"2023-11-08"},{"lineNumber":139,"author":{"gitId":"onx001"},"content":"                }","lastModifiedDate":"2023-11-08"},{"lineNumber":140,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":141,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":142,"author":{"gitId":"onx001"},"content":"        return null;","lastModifiedDate":"2023-11-08"},{"lineNumber":143,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":144,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":145,"author":{"gitId":"onx001"},"content":"    public Coordinate getEnPassantCoor() {","lastModifiedDate":"2023-11-06"},{"lineNumber":146,"author":{"gitId":"onx001"},"content":"        //Checks all chess pieces for en passant","lastModifiedDate":"2023-11-06"},{"lineNumber":147,"author":{"gitId":"onx001"},"content":"        for (int row \u003d 0; row \u003c ChessBoard.SIZE; row++) {","lastModifiedDate":"2023-11-06"},{"lineNumber":148,"author":{"gitId":"onx001"},"content":"            for (int col \u003d 0; col \u003c ChessBoard.SIZE; col++) {","lastModifiedDate":"2023-11-06"},{"lineNumber":149,"author":{"gitId":"onx001"},"content":"                Coordinate coor \u003d new Coordinate(col, row);","lastModifiedDate":"2023-11-06"},{"lineNumber":150,"author":{"gitId":"onx001"},"content":"                ChessPiece piece \u003d getPieceAtCoor(coor);","lastModifiedDate":"2023-11-06"},{"lineNumber":151,"author":{"gitId":"onx001"},"content":"                if (piece.isEnPassant()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":152,"author":{"gitId":"onx001"},"content":"                    if (piece.isSameColorAs(playerColor)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":153,"author":{"gitId":"onx001"},"content":"                        return coor.addOffsetToCoordinate(0, 1);","lastModifiedDate":"2023-11-08"},{"lineNumber":154,"author":{"gitId":"onx001"},"content":"                    } else {","lastModifiedDate":"2023-11-08"},{"lineNumber":155,"author":{"gitId":"onx001"},"content":"                        return coor.addOffsetToCoordinate(0, -1);","lastModifiedDate":"2023-11-08"},{"lineNumber":156,"author":{"gitId":"onx001"},"content":"                    }","lastModifiedDate":"2023-11-08"},{"lineNumber":157,"author":{"gitId":"onx001"},"content":"                }","lastModifiedDate":"2023-11-06"},{"lineNumber":158,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":159,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":160,"author":{"gitId":"onx001"},"content":"        return null;","lastModifiedDate":"2023-11-06"},{"lineNumber":161,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":162,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":163,"author":{"gitId":"onx001"},"content":"    public boolean isCheckmated(Color color) {","lastModifiedDate":"2023-11-07"},{"lineNumber":164,"author":{"gitId":"onx001"},"content":"        Move[] moves \u003d getLegalMoves(color);","lastModifiedDate":"2023-11-07"},{"lineNumber":165,"author":{"gitId":"onx001"},"content":"        ChessPiece[] playerPieces \u003d getAllPieces(color);","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"onx001"},"content":"        ChessPiece[] opponentPieces \u003d getAllPieces(color.getOppositeColour());","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"onx001"},"content":"        if (playerPieces.length \u003d\u003d 1 \u0026\u0026 opponentPieces.length \u003d\u003d 1) {","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"onx001"},"content":"            return true;","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"onx001"},"content":"        return moves.length \u003d\u003d 0;","lastModifiedDate":"2023-11-07"},{"lineNumber":171,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":172,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":173,"author":{"gitId":"onx001"},"content":"    public ChessPiece[] getAllPieces(Color color) {","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"onx001"},"content":"        ArrayList\u003cChessPiece\u003e pieces \u003d new ArrayList\u003cChessPiece\u003e();","lastModifiedDate":"2023-11-13"},{"lineNumber":175,"author":{"gitId":"onx001"},"content":"        for (int row \u003d 0; row \u003c ChessBoard.SIZE; row++) {","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"onx001"},"content":"            for (int col \u003d 0; col \u003c ChessBoard.SIZE; col++) {","lastModifiedDate":"2023-11-13"},{"lineNumber":177,"author":{"gitId":"onx001"},"content":"                Coordinate coor \u003d new Coordinate(col, row);","lastModifiedDate":"2023-11-13"},{"lineNumber":178,"author":{"gitId":"onx001"},"content":"                ChessPiece piece \u003d getPieceAtCoor(coor);","lastModifiedDate":"2023-11-13"},{"lineNumber":179,"author":{"gitId":"onx001"},"content":"                if (piece.isSameColorAs(color)) {","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"onx001"},"content":"                    pieces.add(piece);","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"onx001"},"content":"                }","lastModifiedDate":"2023-11-13"},{"lineNumber":182,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"onx001"},"content":"        return pieces.toArray(new ChessPiece[0]);","lastModifiedDate":"2023-11-13"},{"lineNumber":185,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":186,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":187,"author":{"gitId":"onx001"},"content":"    public boolean isKingAlive(Color color) {","lastModifiedDate":"2023-11-13"},{"lineNumber":188,"author":{"gitId":"onx001"},"content":"        ChessPiece[] pieces \u003d getAllPieces(color);","lastModifiedDate":"2023-11-13"},{"lineNumber":189,"author":{"gitId":"onx001"},"content":"        for (ChessPiece piece : pieces) {","lastModifiedDate":"2023-11-13"},{"lineNumber":190,"author":{"gitId":"onx001"},"content":"            if (piece instanceof King) {","lastModifiedDate":"2023-11-13"},{"lineNumber":191,"author":{"gitId":"onx001"},"content":"                return true;","lastModifiedDate":"2023-11-13"},{"lineNumber":192,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"onx001"},"content":"        return false;","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":196,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":197,"author":{"gitId":"onx001"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":198,"author":{"gitId":"onx001"},"content":"     * Check if the player of the specified color is in check.","lastModifiedDate":"2023-11-09"},{"lineNumber":199,"author":{"gitId":"onx001"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":200,"author":{"gitId":"onx001"},"content":"     * This method determines whether the player with the specified color is in check, ","lastModifiedDate":"2023-11-09"},{"lineNumber":201,"author":{"gitId":"onx001"},"content":"     * meaning their king is under threat. It checks if any moves by the opposing player\u0027s pieces ","lastModifiedDate":"2023-11-09"},{"lineNumber":202,"author":{"gitId":"onx001"},"content":"     * can reach the player\u0027s king.","lastModifiedDate":"2023-11-09"},{"lineNumber":203,"author":{"gitId":"onx001"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":204,"author":{"gitId":"onx001"},"content":"     * @param color The color for which to check if the king is in check (\u0027WHITE\u0027 or \u0027BLACK\u0027).","lastModifiedDate":"2023-11-09"},{"lineNumber":205,"author":{"gitId":"onx001"},"content":"     * @return `true` if the player is in check; `false` if the player\u0027s king is not in immediate danger.","lastModifiedDate":"2023-11-09"},{"lineNumber":206,"author":{"gitId":"onx001"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":207,"author":{"gitId":"onx001"},"content":"    public boolean isChecked(Color color) {","lastModifiedDate":"2023-11-09"},{"lineNumber":208,"author":{"gitId":"onx001"},"content":"        Move[] moves \u003d getPseudoLegalMoves(color.getOppositeColour());","lastModifiedDate":"2023-11-09"},{"lineNumber":209,"author":{"gitId":"onx001"},"content":"        for (Move move : moves) {","lastModifiedDate":"2023-11-09"},{"lineNumber":210,"author":{"gitId":"onx001"},"content":"            Coordinate to \u003d move.getTo();","lastModifiedDate":"2023-11-09"},{"lineNumber":211,"author":{"gitId":"onx001"},"content":"            if (this.getPieceAtCoor(to) instanceof King) {","lastModifiedDate":"2023-11-09"},{"lineNumber":212,"author":{"gitId":"onx001"},"content":"                return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":213,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":214,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":215,"author":{"gitId":"onx001"},"content":"        return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":216,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":217,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":218,"author":{"gitId":"onx001"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":219,"author":{"gitId":"onx001"},"content":"     * Retrieve an array of pseudo-legal moves for pieces of the specified color.","lastModifiedDate":"2023-11-09"},{"lineNumber":220,"author":{"gitId":"onx001"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":221,"author":{"gitId":"onx001"},"content":"     * This method calculates and provides an array of pseudo-legal moves for all pieces of the given ","lastModifiedDate":"2023-11-09"},{"lineNumber":222,"author":{"gitId":"onx001"},"content":"     * color on the chessboard. Pseudo-legal moves are those that are valid based on the piece\u0027s movement rules, ","lastModifiedDate":"2023-11-09"},{"lineNumber":223,"author":{"gitId":"onx001"},"content":"     * but they may not account for potential checks on the king.","lastModifiedDate":"2023-11-09"},{"lineNumber":224,"author":{"gitId":"onx001"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":225,"author":{"gitId":"onx001"},"content":"     * @param color The color for which pseudo-legal moves should be generated (\u0027WHITE\u0027 or \u0027BLACK\u0027).","lastModifiedDate":"2023-11-09"},{"lineNumber":226,"author":{"gitId":"onx001"},"content":"     * @return An array of Move objects, each representing a pseudo-legal move, containing the starting square, ","lastModifiedDate":"2023-11-09"},{"lineNumber":227,"author":{"gitId":"onx001"},"content":"     *          destination square, and the ChessPiece involved.","lastModifiedDate":"2023-11-09"},{"lineNumber":228,"author":{"gitId":"onx001"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":229,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":230,"author":{"gitId":"onx001"},"content":"    public Move[] getPseudoLegalMoves(Color color) {","lastModifiedDate":"2023-11-09"},{"lineNumber":231,"author":{"gitId":"onx001"},"content":"        //Declare arraylist of moves as allMoves","lastModifiedDate":"2023-10-23"},{"lineNumber":232,"author":{"gitId":"onx001"},"content":"        ArrayList\u003cMove\u003e allMoves \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":233,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":234,"author":{"gitId":"onx001"},"content":"        for (int row \u003d 0; row \u003c ChessBoard.SIZE; row++) {","lastModifiedDate":"2023-10-23"},{"lineNumber":235,"author":{"gitId":"onx001"},"content":"            for (int col \u003d 0; col \u003c ChessBoard.SIZE; col++) {","lastModifiedDate":"2023-10-23"},{"lineNumber":236,"author":{"gitId":"onx001"},"content":"                Coordinate currentCoor \u003d new Coordinate(col, row);","lastModifiedDate":"2023-11-08"},{"lineNumber":237,"author":{"gitId":"onx001"},"content":"                ChessPiece piece \u003d getPieceAtCoor(currentCoor);","lastModifiedDate":"2023-11-08"},{"lineNumber":238,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":239,"author":{"gitId":"onx001"},"content":"                if (piece.isSameColorAs(color)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":240,"author":{"gitId":"onx001"},"content":"                    Coordinate[] possibleCoordinates \u003d piece.getPseudoLegalCoordinates(this);","lastModifiedDate":"2023-11-09"},{"lineNumber":241,"author":{"gitId":"onx001"},"content":"                    for (Coordinate possible: possibleCoordinates) {","lastModifiedDate":"2023-10-23"},{"lineNumber":242,"author":{"gitId":"onx001"},"content":"                        allMoves.add(MoveFactory.createMove(this, currentCoor, possible));","lastModifiedDate":"2023-11-08"},{"lineNumber":243,"author":{"gitId":"onx001"},"content":"                    }","lastModifiedDate":"2023-10-23"},{"lineNumber":244,"author":{"gitId":"onx001"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":245,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":246,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":247,"author":{"gitId":"onx001"},"content":"        return allMoves.toArray(new Move[0]);","lastModifiedDate":"2023-10-23"},{"lineNumber":248,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":249,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":250,"author":{"gitId":"onx001"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":251,"author":{"gitId":"onx001"},"content":"     * Retrieve an array of legal moves for pieces of the specified color.","lastModifiedDate":"2023-11-09"},{"lineNumber":252,"author":{"gitId":"onx001"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":253,"author":{"gitId":"onx001"},"content":"     * This method calculates and provides an array of legal moves for all pieces of the given color on the ","lastModifiedDate":"2023-11-09"},{"lineNumber":254,"author":{"gitId":"onx001"},"content":"     * chessboard. This is done by executing each pseudo-legal move and ensuring that it does not result in ","lastModifiedDate":"2023-11-09"},{"lineNumber":255,"author":{"gitId":"onx001"},"content":"     * the king being checked. ","lastModifiedDate":"2023-11-09"},{"lineNumber":256,"author":{"gitId":"onx001"},"content":"     * ","lastModifiedDate":"2023-11-09"},{"lineNumber":257,"author":{"gitId":"onx001"},"content":"     * Legal moves are those that adhere to the piece\u0027s movement rules and do not result in the ","lastModifiedDate":"2023-11-09"},{"lineNumber":258,"author":{"gitId":"onx001"},"content":"     * player\u0027s own king being in check.","lastModifiedDate":"2023-11-09"},{"lineNumber":259,"author":{"gitId":"onx001"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":260,"author":{"gitId":"onx001"},"content":"     * @param color The color for which legal moves should be generated (\u0027WHITE\u0027 or \u0027BLACK\u0027).","lastModifiedDate":"2023-11-09"},{"lineNumber":261,"author":{"gitId":"onx001"},"content":"     * @return An array of Move objects, each representing a legal move, containing the starting square, ","lastModifiedDate":"2023-11-09"},{"lineNumber":262,"author":{"gitId":"onx001"},"content":"     *          destination square, and the ChessPiece involved.","lastModifiedDate":"2023-11-09"},{"lineNumber":263,"author":{"gitId":"onx001"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":264,"author":{"gitId":"onx001"},"content":"    public Move[] getLegalMoves(Color color) {","lastModifiedDate":"2023-11-07"},{"lineNumber":265,"author":{"gitId":"onx001"},"content":"        Move[] moves \u003d getPseudoLegalMoves(color);","lastModifiedDate":"2023-11-09"},{"lineNumber":266,"author":{"gitId":"onx001"},"content":"        ArrayList\u003cMove\u003e legalMoves \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-09"},{"lineNumber":267,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":268,"author":{"gitId":"onx001"},"content":"        for (Move move : moves) {","lastModifiedDate":"2023-11-07"},{"lineNumber":269,"author":{"gitId":"onx001"},"content":"            ChessBoard newBoard \u003d this.clone();","lastModifiedDate":"2023-11-07"},{"lineNumber":270,"author":{"gitId":"onx001"},"content":"            Coordinate from \u003d move.getFrom();","lastModifiedDate":"2023-11-07"},{"lineNumber":271,"author":{"gitId":"onx001"},"content":"            ChessPiece piece \u003d newBoard.getPieceAtCoor(from);","lastModifiedDate":"2023-11-07"},{"lineNumber":272,"author":{"gitId":"onx001"},"content":"            Move moveCopy \u003d new Move(from, move.getTo(), piece);","lastModifiedDate":"2023-11-07"},{"lineNumber":273,"author":{"gitId":"onx001"},"content":"            try {","lastModifiedDate":"2023-11-07"},{"lineNumber":274,"author":{"gitId":"onx001"},"content":"                newBoard.executeMove(moveCopy);","lastModifiedDate":"2023-11-07"},{"lineNumber":275,"author":{"gitId":"onx001"},"content":"            } catch (InvalidMoveException e) {","lastModifiedDate":"2023-11-07"},{"lineNumber":276,"author":{"gitId":"onx001"},"content":"                continue;","lastModifiedDate":"2023-11-07"},{"lineNumber":277,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":278,"author":{"gitId":"onx001"},"content":"            if (!newBoard.isChecked(color)) {","lastModifiedDate":"2023-11-07"},{"lineNumber":279,"author":{"gitId":"onx001"},"content":"                legalMoves.add(move);","lastModifiedDate":"2023-11-09"},{"lineNumber":280,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":281,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":282,"author":{"gitId":"onx001"},"content":"        return legalMoves.toArray(new Move[0]);","lastModifiedDate":"2023-11-09"},{"lineNumber":283,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":284,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":285,"author":{"gitId":"TongZhengHong"},"content":"    //@@author TongZhengHong","lastModifiedDate":"2023-10-27"},{"lineNumber":286,"author":{"gitId":"TongZhengHong"},"content":"    public void setPromotionPiece(Coordinate coord, ChessPiece promotedPiece) {","lastModifiedDate":"2023-10-22"},{"lineNumber":287,"author":{"gitId":"TongZhengHong"},"content":"        getTileAtCoor(coord).updateTileChessPiece(promotedPiece);","lastModifiedDate":"2023-10-22"},{"lineNumber":288,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":289,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":290,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":291,"author":{"gitId":"TongZhengHong"},"content":"     * Gets the ChessTile object located at the specified coordinate on the","lastModifiedDate":"2023-10-22"},{"lineNumber":292,"author":{"gitId":"TongZhengHong"},"content":"     * chessboard.","lastModifiedDate":"2023-10-22"},{"lineNumber":293,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":294,"author":{"gitId":"TongZhengHong"},"content":"     * @param coor The coordinate of the position to retrieve the tile for.","lastModifiedDate":"2023-10-22"},{"lineNumber":295,"author":{"gitId":"TongZhengHong"},"content":"     * @return The ChessTile object at the specified coordinate.","lastModifiedDate":"2023-10-22"},{"lineNumber":296,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":297,"author":{"gitId":"TongZhengHong"},"content":"    public ChessTile getTileAtCoor(Coordinate coor) {","lastModifiedDate":"2023-11-09"},{"lineNumber":298,"author":{"gitId":"TongZhengHong"},"content":"        return board[coor.getY()][coor.getX()];","lastModifiedDate":"2023-10-18"},{"lineNumber":299,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":300,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":301,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":302,"author":{"gitId":"TongZhengHong"},"content":"     * Gets the chess piece located at the specified coordinate on the chessboard.","lastModifiedDate":"2023-10-22"},{"lineNumber":303,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":304,"author":{"gitId":"TongZhengHong"},"content":"     * @param coor The coordinate of the position to check.","lastModifiedDate":"2023-10-22"},{"lineNumber":305,"author":{"gitId":"TongZhengHong"},"content":"     * @return The ChessPiece object at the specified coordinate. If empty piece at","lastModifiedDate":"2023-10-22"},{"lineNumber":306,"author":{"gitId":"TongZhengHong"},"content":"     *         coordinate, returns EmptyPiece object","lastModifiedDate":"2023-10-22"},{"lineNumber":307,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":308,"author":{"gitId":"TongZhengHong"},"content":"    public ChessPiece getPieceAtCoor(Coordinate coor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":309,"author":{"gitId":"TongZhengHong"},"content":"        ChessTile tile \u003d getTileAtCoor(coor);","lastModifiedDate":"2023-10-18"},{"lineNumber":310,"author":{"gitId":"TongZhengHong"},"content":"        return tile.getChessPiece();","lastModifiedDate":"2023-10-16"},{"lineNumber":311,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":312,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":313,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":314,"author":{"gitId":"TongZhengHong"},"content":"     * For castling moves, executeBasicMove() only moves the King. This method will move the rook correctly","lastModifiedDate":"2023-11-12"},{"lineNumber":315,"author":{"gitId":"TongZhengHong"},"content":"     * based on whether the player has castled queen-side or king-side.","lastModifiedDate":"2023-11-12"},{"lineNumber":316,"author":{"gitId":"TongZhengHong"},"content":"     * @param move The CastleMove to execute","lastModifiedDate":"2023-11-12"},{"lineNumber":317,"author":{"gitId":"TongZhengHong"},"content":"     * @throws InvalidMoveException If the rook move is not valid according to game rules","lastModifiedDate":"2023-11-12"},{"lineNumber":318,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":319,"author":{"gitId":"TongZhengHong"},"content":"    private void executeCastlingRookMove(CastleMove move) throws InvalidMoveException {","lastModifiedDate":"2023-11-12"},{"lineNumber":320,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate startCoor \u003d move.getFrom();","lastModifiedDate":"2023-10-18"},{"lineNumber":321,"author":{"gitId":"TongZhengHong"},"content":"        CastleSide side \u003d move.getSide();","lastModifiedDate":"2023-11-12"},{"lineNumber":322,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":323,"author":{"gitId":"TongZhengHong"},"content":"        Move rookCastleMove;","lastModifiedDate":"2023-11-10"},{"lineNumber":324,"author":{"gitId":"TongZhengHong"},"content":"        if (side \u003d\u003d CastleSide.LEFT \u0026\u0026 startCoor.isOffsetWithinBoard(-4, 0)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":325,"author":{"gitId":"TongZhengHong"},"content":"            Coordinate rookStartCoor \u003d startCoor.addOffsetToCoordinate(-4, 0);","lastModifiedDate":"2023-11-01"},{"lineNumber":326,"author":{"gitId":"TongZhengHong"},"content":"            Coordinate rookDestCoor \u003d startCoor.addOffsetToCoordinate(-1, 0);","lastModifiedDate":"2023-11-01"},{"lineNumber":327,"author":{"gitId":"TongZhengHong"},"content":"            rookCastleMove \u003d MoveFactory.createMove(this, rookStartCoor, rookDestCoor);","lastModifiedDate":"2023-11-10"},{"lineNumber":328,"author":{"gitId":"TongZhengHong"},"content":"            move.setRookMove(rookCastleMove);","lastModifiedDate":"2023-11-12"},{"lineNumber":329,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":330,"author":{"gitId":"TongZhengHong"},"content":"            this.executeMove(rookCastleMove);","lastModifiedDate":"2023-11-10"},{"lineNumber":331,"author":{"gitId":"TongZhengHong"},"content":"        } else if (side \u003d\u003d CastleSide.RIGHT \u0026\u0026 startCoor.isOffsetWithinBoard(3, 0)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":332,"author":{"gitId":"TongZhengHong"},"content":"            Coordinate rookStartCoor \u003d startCoor.addOffsetToCoordinate(3, 0);","lastModifiedDate":"2023-11-01"},{"lineNumber":333,"author":{"gitId":"TongZhengHong"},"content":"            Coordinate rookDestCoor \u003d startCoor.addOffsetToCoordinate(1, 0);","lastModifiedDate":"2023-11-01"},{"lineNumber":334,"author":{"gitId":"TongZhengHong"},"content":"            rookCastleMove \u003d MoveFactory.createMove(this, rookStartCoor, rookDestCoor);","lastModifiedDate":"2023-11-10"},{"lineNumber":335,"author":{"gitId":"TongZhengHong"},"content":"            move.setRookMove(rookCastleMove);","lastModifiedDate":"2023-11-12"},{"lineNumber":336,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":337,"author":{"gitId":"TongZhengHong"},"content":"            this.executeMove(rookCastleMove);","lastModifiedDate":"2023-11-10"},{"lineNumber":338,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":339,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":340,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":341,"author":{"gitId":"TongZhengHong"},"content":"    private void executeEnPassantCapture(EnPassantMove move) {","lastModifiedDate":"2023-11-12"},{"lineNumber":342,"author":{"gitId":"TongZhengHong"},"content":"        ChessPiece enPassantPiece \u003d move.getPieceCaptured();","lastModifiedDate":"2023-11-12"},{"lineNumber":343,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":344,"author":{"gitId":"TongZhengHong"},"content":"        // Capture the enPassantPiece","lastModifiedDate":"2023-11-12"},{"lineNumber":345,"author":{"gitId":"TongZhengHong"},"content":"        this.getTileAtCoor(enPassantPiece.getPosition()).setTileEmpty(enPassantPiece.getPosition());","lastModifiedDate":"2023-11-12"},{"lineNumber":346,"author":{"gitId":"TongZhengHong"},"content":"        enPassantPiece.setIsCaptured();","lastModifiedDate":"2023-11-07"},{"lineNumber":347,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":348,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":349,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":350,"author":{"gitId":"TongZhengHong"},"content":"     * Moves a piece from the start coordinate to the destination coordinate.","lastModifiedDate":"2023-11-12"},{"lineNumber":351,"author":{"gitId":"TongZhengHong"},"content":"     * @param move The move to execute","lastModifiedDate":"2023-11-12"},{"lineNumber":352,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":353,"author":{"gitId":"TongZhengHong"},"content":"    private void executeBasicMove(Move move) {","lastModifiedDate":"2023-11-12"},{"lineNumber":354,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate startCoor \u003d move.getFrom();","lastModifiedDate":"2023-11-12"},{"lineNumber":355,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate destCoor \u003d move.getTo();","lastModifiedDate":"2023-11-12"},{"lineNumber":356,"author":{"gitId":"TongZhengHong"},"content":"        ChessPiece pieceMoved \u003d move.getPieceMoved();","lastModifiedDate":"2023-11-12"},{"lineNumber":357,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":358,"author":{"gitId":"TongZhengHong"},"content":"        pieceMoved.setHasMoved();","lastModifiedDate":"2023-11-12"},{"lineNumber":359,"author":{"gitId":"TongZhengHong"},"content":"        pieceMoved.updatePosition(destCoor);","lastModifiedDate":"2023-11-12"},{"lineNumber":360,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":361,"author":{"gitId":"TongZhengHong"},"content":"        getTileAtCoor(startCoor).setTileEmpty(startCoor);","lastModifiedDate":"2023-11-12"},{"lineNumber":362,"author":{"gitId":"TongZhengHong"},"content":"        getTileAtCoor(destCoor).getChessPiece().setIsCaptured();","lastModifiedDate":"2023-11-12"},{"lineNumber":363,"author":{"gitId":"TongZhengHong"},"content":"        getTileAtCoor(destCoor).updateTileChessPiece(pieceMoved);","lastModifiedDate":"2023-11-12"},{"lineNumber":364,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":365,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":366,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":367,"author":{"gitId":"TongZhengHong"},"content":"    private void clearAllEnPassants(Move move) {","lastModifiedDate":"2023-11-12"},{"lineNumber":368,"author":{"gitId":"TongZhengHong"},"content":"        for (int row \u003d 0; row \u003c ChessBoard.SIZE; row++) {","lastModifiedDate":"2023-11-06"},{"lineNumber":369,"author":{"gitId":"TongZhengHong"},"content":"            for (int col \u003d 0; col \u003c ChessBoard.SIZE; col++) {","lastModifiedDate":"2023-11-06"},{"lineNumber":370,"author":{"gitId":"TongZhengHong"},"content":"                Coordinate coor \u003d new Coordinate(col, row);","lastModifiedDate":"2023-11-06"},{"lineNumber":371,"author":{"gitId":"TongZhengHong"},"content":"                ChessPiece piece \u003d getPieceAtCoor(coor);","lastModifiedDate":"2023-11-06"},{"lineNumber":372,"author":{"gitId":"TongZhengHong"},"content":"                if (piece.isEnPassant() \u0026\u0026 piece.getColor() !\u003d move.getPieceMoved().getColor()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":373,"author":{"gitId":"TongZhengHong"},"content":"                    piece.clearEnPassant();","lastModifiedDate":"2023-11-06"},{"lineNumber":374,"author":{"gitId":"TongZhengHong"},"content":"                }","lastModifiedDate":"2023-11-06"},{"lineNumber":375,"author":{"gitId":"TongZhengHong"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":376,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":377,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":378,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":379,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":380,"author":{"gitId":"TongZhengHong"},"content":"     * Executes a chess move on the chessboard.","lastModifiedDate":"2023-11-12"},{"lineNumber":381,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":382,"author":{"gitId":"TongZhengHong"},"content":"     * @param move The Move object representing the move to be executed.","lastModifiedDate":"2023-11-12"},{"lineNumber":383,"author":{"gitId":"TongZhengHong"},"content":"     * @throws InvalidMoveException If the move is not valid according to the game","lastModifiedDate":"2023-11-12"},{"lineNumber":384,"author":{"gitId":"TongZhengHong"},"content":"     *                              rules.","lastModifiedDate":"2023-11-12"},{"lineNumber":385,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":386,"author":{"gitId":"TongZhengHong"},"content":"    public void executeMove(Move move) throws InvalidMoveException {","lastModifiedDate":"2023-11-12"},{"lineNumber":387,"author":{"gitId":"TongZhengHong"},"content":"        this.executeBasicMove(move);","lastModifiedDate":"2023-11-12"},{"lineNumber":388,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":389,"author":{"gitId":"TongZhengHong"},"content":"        if (move instanceof CastleMove) {","lastModifiedDate":"2023-11-12"},{"lineNumber":390,"author":{"gitId":"TongZhengHong"},"content":"            this.executeCastlingRookMove((CastleMove) move);","lastModifiedDate":"2023-11-12"},{"lineNumber":391,"author":{"gitId":"TongZhengHong"},"content":"        } else if (move instanceof EnPassantMove) {","lastModifiedDate":"2023-11-12"},{"lineNumber":392,"author":{"gitId":"TongZhengHong"},"content":"            this.executeEnPassantCapture((EnPassantMove) move);","lastModifiedDate":"2023-11-12"},{"lineNumber":393,"author":{"gitId":"TongZhengHong"},"content":"        } else if (move.isSkippingPawn()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":394,"author":{"gitId":"TongZhengHong"},"content":"            move.getPieceMoved().setEnPassant();","lastModifiedDate":"2023-11-12"},{"lineNumber":395,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":396,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":397,"author":{"gitId":"TongZhengHong"},"content":"        this.clearAllEnPassants(move);","lastModifiedDate":"2023-11-12"},{"lineNumber":398,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":399,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":400,"author":{"gitId":"TongZhengHong"},"content":"    public void executeMoveWithCheck(Move move) throws InvalidMoveException {","lastModifiedDate":"2023-11-07"},{"lineNumber":401,"author":{"gitId":"TongZhengHong"},"content":"        if (move.isValidWithCheck(this)) {","lastModifiedDate":"2023-11-07"},{"lineNumber":402,"author":{"gitId":"TongZhengHong"},"content":"            executeMove(move);","lastModifiedDate":"2023-11-07"},{"lineNumber":403,"author":{"gitId":"TongZhengHong"},"content":"        } else {","lastModifiedDate":"2023-11-07"},{"lineNumber":404,"author":{"gitId":"TongZhengHong"},"content":"            throw new InvalidMoveException(\"Move causes a check\");","lastModifiedDate":"2023-11-10"},{"lineNumber":405,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":406,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":407,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":408,"author":{"gitId":"ken-ruster"},"content":"    //@@author ken-ruster","lastModifiedDate":"2023-10-27"},{"lineNumber":409,"author":{"gitId":"ken-ruster"},"content":"    public boolean canPromote(Move move) {","lastModifiedDate":"2023-10-19"},{"lineNumber":410,"author":{"gitId":"ken-ruster"},"content":"        ChessPiece piece \u003d move.getPieceMoved();","lastModifiedDate":"2023-11-08"},{"lineNumber":411,"author":{"gitId":"ken-ruster"},"content":"        Coordinate endCoord \u003d move.getTo();","lastModifiedDate":"2023-10-19"},{"lineNumber":412,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":413,"author":{"gitId":"ken-ruster"},"content":"        if (!piece.isPawn()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":414,"author":{"gitId":"ken-ruster"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":415,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":416,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":417,"author":{"gitId":"ken-ruster"},"content":"        if (isPieceFriendly(piece)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":418,"author":{"gitId":"ken-ruster"},"content":"            return endCoord.getY() \u003d\u003d TOP_ROW_INDEX;","lastModifiedDate":"2023-10-22"},{"lineNumber":419,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":420,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":421,"author":{"gitId":"ken-ruster"},"content":"        if (isPieceOpponent(piece)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":422,"author":{"gitId":"ken-ruster"},"content":"            return endCoord.getY() \u003d\u003d BOTTOM_ROW_INDEX;","lastModifiedDate":"2023-10-22"},{"lineNumber":423,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":424,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":425,"author":{"gitId":"ken-ruster"},"content":"        return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":426,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":427,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":428,"author":{"gitId":"onx001"},"content":"    //@@author onx001","lastModifiedDate":"2023-11-07"},{"lineNumber":429,"author":{"gitId":"onx001"},"content":"    public boolean isEndGame() throws ChessMasterException {","lastModifiedDate":"2023-11-13"},{"lineNumber":430,"author":{"gitId":"onx001"},"content":"        if (!isKingAlive(playerColor) || !isKingAlive(playerColor.getOppositeColour())) {","lastModifiedDate":"2023-11-13"},{"lineNumber":431,"author":{"gitId":"onx001"},"content":"            throw new ChessMasterException(\"King is dead!\");","lastModifiedDate":"2023-11-13"},{"lineNumber":432,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":433,"author":{"gitId":"onx001"},"content":"        return isCheckmated(playerColor) || isCheckmated(playerColor.getOppositeColour());","lastModifiedDate":"2023-11-07"},{"lineNumber":434,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":435,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":436,"author":{"gitId":"onx001"},"content":"    public Color getWinningColor() {","lastModifiedDate":"2023-10-22"},{"lineNumber":437,"author":{"gitId":"onx001"},"content":"        if (isCheckmated(playerColor) \u0026\u0026 isCheckmated(playerColor.getOppositeColour())) {","lastModifiedDate":"2023-11-12"},{"lineNumber":438,"author":{"gitId":"onx001"},"content":"            return Color.DRAW;","lastModifiedDate":"2023-11-12"},{"lineNumber":439,"author":{"gitId":"onx001"},"content":"        } else if (isCheckmated(playerColor)) {","lastModifiedDate":"2023-11-12"},{"lineNumber":440,"author":{"gitId":"onx001"},"content":"            return playerColor.getOppositeColour();","lastModifiedDate":"2023-11-07"},{"lineNumber":441,"author":{"gitId":"onx001"},"content":"        } else if (isCheckmated(playerColor.getOppositeColour())) {","lastModifiedDate":"2023-11-07"},{"lineNumber":442,"author":{"gitId":"onx001"},"content":"            return playerColor;","lastModifiedDate":"2023-11-07"},{"lineNumber":443,"author":{"gitId":"onx001"},"content":"        } else {","lastModifiedDate":"2023-10-20"},{"lineNumber":444,"author":{"gitId":"onx001"},"content":"            return Color.EMPTY;","lastModifiedDate":"2023-10-22"},{"lineNumber":445,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":446,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":447,"author":{"gitId":"onx001"},"content":"    ","lastModifiedDate":"2023-10-23"},{"lineNumber":448,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":449,"author":{"gitId":"onx001"},"content":"    public int getPoints(Color color) {","lastModifiedDate":"2023-10-23"},{"lineNumber":450,"author":{"gitId":"onx001"},"content":"        int points \u003d 0;","lastModifiedDate":"2023-10-23"},{"lineNumber":451,"author":{"gitId":"onx001"},"content":"        int enemyPoints \u003d 0;","lastModifiedDate":"2023-10-24"},{"lineNumber":452,"author":{"gitId":"onx001"},"content":"        boolean isUpright;","lastModifiedDate":"2023-10-26"},{"lineNumber":453,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":454,"author":{"gitId":"onx001"},"content":"        if (this.playerColor \u003d\u003d color) {","lastModifiedDate":"2023-10-26"},{"lineNumber":455,"author":{"gitId":"onx001"},"content":"            isUpright \u003d true;","lastModifiedDate":"2023-10-26"},{"lineNumber":456,"author":{"gitId":"onx001"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":457,"author":{"gitId":"onx001"},"content":"            isUpright \u003d false;","lastModifiedDate":"2023-10-26"},{"lineNumber":458,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":459,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":460,"author":{"gitId":"onx001"},"content":"        for (int row \u003d 0; row \u003c ChessBoard.SIZE; row++) {","lastModifiedDate":"2023-10-23"},{"lineNumber":461,"author":{"gitId":"onx001"},"content":"            for (int col \u003d 0; col \u003c ChessBoard.SIZE; col++) {","lastModifiedDate":"2023-10-23"},{"lineNumber":462,"author":{"gitId":"onx001"},"content":"                Coordinate coor \u003d new Coordinate(col, row);","lastModifiedDate":"2023-10-23"},{"lineNumber":463,"author":{"gitId":"onx001"},"content":"                ChessPiece piece \u003d this.getPieceAtCoor(coor);","lastModifiedDate":"2023-10-23"},{"lineNumber":464,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":465,"author":{"gitId":"onx001"},"content":"                if (piece.isSameColorAs(color)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":466,"author":{"gitId":"onx001"},"content":"                    points +\u003d piece.getPoints(isUpright);","lastModifiedDate":"2023-10-26"},{"lineNumber":467,"author":{"gitId":"onx001"},"content":"                } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":468,"author":{"gitId":"onx001"},"content":"                    enemyPoints +\u003d piece.getPoints(isUpright);","lastModifiedDate":"2023-10-26"},{"lineNumber":469,"author":{"gitId":"onx001"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":470,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":471,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":472,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":473,"author":{"gitId":"onx001"},"content":"        return points - enemyPoints;","lastModifiedDate":"2023-10-24"},{"lineNumber":474,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":475,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":476,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":477,"author":{"gitId":"onx001"},"content":"    public ChessBoard clone() {","lastModifiedDate":"2023-10-23"},{"lineNumber":478,"author":{"gitId":"onx001"},"content":"        String boardString \u003d this.toString();","lastModifiedDate":"2023-11-07"},{"lineNumber":479,"author":{"gitId":"onx001"},"content":"        return toBoard(boardString);","lastModifiedDate":"2023-11-07"},{"lineNumber":480,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":481,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":482,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":483,"author":{"gitId":"onx001"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":484,"author":{"gitId":"onx001"},"content":"     * Converts a String representing a board into a new ChessBoard.","lastModifiedDate":"2023-11-10"},{"lineNumber":485,"author":{"gitId":"onx001"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":486,"author":{"gitId":"onx001"},"content":"     * @param board String representing the board","lastModifiedDate":"2023-11-10"},{"lineNumber":487,"author":{"gitId":"onx001"},"content":"     * @return ChessBoard generated from input string","lastModifiedDate":"2023-11-10"},{"lineNumber":488,"author":{"gitId":"onx001"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":489,"author":{"gitId":"onx001"},"content":"    public ChessBoard toBoard(String board) {","lastModifiedDate":"2023-10-23"},{"lineNumber":490,"author":{"gitId":"onx001"},"content":"        ChessTile[][] boardTiles \u003d new ChessTile[SIZE][SIZE];","lastModifiedDate":"2023-10-23"},{"lineNumber":491,"author":{"gitId":"onx001"},"content":"        int row \u003d 0;","lastModifiedDate":"2023-10-23"},{"lineNumber":492,"author":{"gitId":"onx001"},"content":"        int col \u003d 0;","lastModifiedDate":"2023-10-23"},{"lineNumber":493,"author":{"gitId":"onx001"},"content":"        for (int i \u003d 0; i \u003c board.length(); i++) {","lastModifiedDate":"2023-10-23"},{"lineNumber":494,"author":{"gitId":"onx001"},"content":"            String pieceString \u003d board.substring(i, i + 1);","lastModifiedDate":"2023-10-23"},{"lineNumber":495,"author":{"gitId":"onx001"},"content":"            ChessPiece piece \u003d Parser.parseChessPiece(pieceString, row, col);","lastModifiedDate":"2023-10-23"},{"lineNumber":496,"author":{"gitId":"onx001"},"content":"            assert (row \u003c SIZE);","lastModifiedDate":"2023-10-24"},{"lineNumber":497,"author":{"gitId":"onx001"},"content":"            assert (col \u003c SIZE);","lastModifiedDate":"2023-10-24"},{"lineNumber":498,"author":{"gitId":"onx001"},"content":"            boardTiles[row][col] \u003d new ChessTile(piece);","lastModifiedDate":"2023-10-23"},{"lineNumber":499,"author":{"gitId":"onx001"},"content":"            col++;","lastModifiedDate":"2023-10-23"},{"lineNumber":500,"author":{"gitId":"onx001"},"content":"            if (col \u003d\u003d SIZE) {","lastModifiedDate":"2023-10-23"},{"lineNumber":501,"author":{"gitId":"onx001"},"content":"                col \u003d 0;","lastModifiedDate":"2023-10-23"},{"lineNumber":502,"author":{"gitId":"onx001"},"content":"                row++;","lastModifiedDate":"2023-10-23"},{"lineNumber":503,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":504,"author":{"gitId":"onx001"},"content":"            if (row \u003d\u003d SIZE) {","lastModifiedDate":"2023-10-24"},{"lineNumber":505,"author":{"gitId":"onx001"},"content":"                break;","lastModifiedDate":"2023-10-24"},{"lineNumber":506,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":507,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":508,"author":{"gitId":"onx001"},"content":"        return new ChessBoard(this.playerColor, boardTiles);","lastModifiedDate":"2023-10-26"},{"lineNumber":509,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":510,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":511,"author":{"gitId":"ken-ruster"},"content":"    //@@author ken-ruster","lastModifiedDate":"2023-11-14"},{"lineNumber":512,"author":{"gitId":"ken-ruster"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":513,"author":{"gitId":"ken-ruster"},"content":"     * Takes in an array of multiple moves, and executes them in order. Also updates the move history","lastModifiedDate":"2023-11-10"},{"lineNumber":514,"author":{"gitId":"ken-ruster"},"content":"     * stored in the human and CPU objects.","lastModifiedDate":"2023-11-10"},{"lineNumber":515,"author":{"gitId":"ken-ruster"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":516,"author":{"gitId":"ken-ruster"},"content":"     * @param moves ArrayList of moves to be executed","lastModifiedDate":"2023-11-10"},{"lineNumber":517,"author":{"gitId":"ken-ruster"},"content":"     * @param human Object representing the human player","lastModifiedDate":"2023-11-10"},{"lineNumber":518,"author":{"gitId":"ken-ruster"},"content":"     * @param cpu Object representing the CPU player","lastModifiedDate":"2023-11-10"},{"lineNumber":519,"author":{"gitId":"ken-ruster"},"content":"     * @throws ChessMasterException","lastModifiedDate":"2023-11-10"},{"lineNumber":520,"author":{"gitId":"ken-ruster"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":521,"author":{"gitId":"ken-ruster"},"content":"    public void executeMoveArray(ArrayList\u003cString\u003e moves, Human human, CPU cpu) throws ChessMasterException {","lastModifiedDate":"2023-11-07"},{"lineNumber":522,"author":{"gitId":"ken-ruster"},"content":"        boolean isPlayersTurn \u003d playerColor.isWhite();","lastModifiedDate":"2023-11-07"},{"lineNumber":523,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":524,"author":{"gitId":"ken-ruster"},"content":"        for (String move : moves) {","lastModifiedDate":"2023-11-07"},{"lineNumber":525,"author":{"gitId":"ken-ruster"},"content":"            String[] moveCommandArray \u003d move.split(\"\\\\s+\");","lastModifiedDate":"2023-11-08"},{"lineNumber":526,"author":{"gitId":"ken-ruster"},"content":"            boolean isPromote \u003d moveCommandArray[0].equals(PROMOTE_MOVE_STRING);","lastModifiedDate":"2023-11-08"},{"lineNumber":527,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":528,"author":{"gitId":"ken-ruster"},"content":"            if (!isPromote) {","lastModifiedDate":"2023-11-07"},{"lineNumber":529,"author":{"gitId":"ken-ruster"},"content":"                Move toExecute \u003d Parser.parseMove(move, this, false);","lastModifiedDate":"2023-11-08"},{"lineNumber":530,"author":{"gitId":"ken-ruster"},"content":"                if (!toExecute.isValid(this)) {","lastModifiedDate":"2023-11-14"},{"lineNumber":531,"author":{"gitId":"ken-ruster"},"content":"                    throw new InvalidMoveException(INVALID_SAVE_STRING);","lastModifiedDate":"2023-11-14"},{"lineNumber":532,"author":{"gitId":"ken-ruster"},"content":"                }","lastModifiedDate":"2023-11-14"},{"lineNumber":533,"author":{"gitId":"ken-ruster"},"content":"                this.executeMove(toExecute);","lastModifiedDate":"2023-11-07"},{"lineNumber":534,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":535,"author":{"gitId":"ken-ruster"},"content":"                if (isPlayersTurn) {","lastModifiedDate":"2023-11-07"},{"lineNumber":536,"author":{"gitId":"ken-ruster"},"content":"                    human.addMove(toExecute);","lastModifiedDate":"2023-11-07"},{"lineNumber":537,"author":{"gitId":"ken-ruster"},"content":"                } else {","lastModifiedDate":"2023-11-07"},{"lineNumber":538,"author":{"gitId":"ken-ruster"},"content":"                    cpu.addMove(toExecute);","lastModifiedDate":"2023-11-07"},{"lineNumber":539,"author":{"gitId":"ken-ruster"},"content":"                }","lastModifiedDate":"2023-11-07"},{"lineNumber":540,"author":{"gitId":"ken-ruster"},"content":"            } else {","lastModifiedDate":"2023-11-07"},{"lineNumber":541,"author":{"gitId":"ken-ruster"},"content":"                Coordinate coord \u003d Coordinate.parseAlgebraicCoor(moveCommandArray[1]);","lastModifiedDate":"2023-11-07"},{"lineNumber":542,"author":{"gitId":"ken-ruster"},"content":"                ChessPiece oldPiece \u003d this.getPieceAtCoor(coord);","lastModifiedDate":"2023-11-07"},{"lineNumber":543,"author":{"gitId":"ken-ruster"},"content":"                assert oldPiece instanceof Pawn;","lastModifiedDate":"2023-11-12"},{"lineNumber":544,"author":{"gitId":"ken-ruster"},"content":"                if (!this.canPromote(new Move(coord, coord, oldPiece))) {","lastModifiedDate":"2023-11-14"},{"lineNumber":545,"author":{"gitId":"ken-ruster"},"content":"                    throw new InvalidMoveException(INVALID_PROMOTE_STRING);","lastModifiedDate":"2023-11-14"},{"lineNumber":546,"author":{"gitId":"ken-ruster"},"content":"                }","lastModifiedDate":"2023-11-14"},{"lineNumber":547,"author":{"gitId":"ken-ruster"},"content":"                ChessPiece newPiece \u003d Parser.parsePromote(oldPiece, moveCommandArray[2]);","lastModifiedDate":"2023-11-07"},{"lineNumber":548,"author":{"gitId":"ken-ruster"},"content":"                this.setPromotionPiece(coord, newPiece);","lastModifiedDate":"2023-11-07"},{"lineNumber":549,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":550,"author":{"gitId":"ken-ruster"},"content":"                PromoteMove promoteMove \u003d MoveFactory.createPromoteMove(coord, (Pawn) oldPiece, newPiece);","lastModifiedDate":"2023-11-12"},{"lineNumber":551,"author":{"gitId":"ken-ruster"},"content":"                if (isPlayersTurn) {","lastModifiedDate":"2023-11-07"},{"lineNumber":552,"author":{"gitId":"ken-ruster"},"content":"                    human.addMove(promoteMove);","lastModifiedDate":"2023-11-07"},{"lineNumber":553,"author":{"gitId":"ken-ruster"},"content":"                } else {","lastModifiedDate":"2023-11-07"},{"lineNumber":554,"author":{"gitId":"ken-ruster"},"content":"                    cpu.addMove(promoteMove);","lastModifiedDate":"2023-11-07"},{"lineNumber":555,"author":{"gitId":"ken-ruster"},"content":"                }","lastModifiedDate":"2023-11-07"},{"lineNumber":556,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":557,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":558,"author":{"gitId":"ken-ruster"},"content":"            isPlayersTurn \u003d !isPlayersTurn;","lastModifiedDate":"2023-11-07"},{"lineNumber":559,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":560,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":561,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":562,"author":{"gitId":"ken-ruster"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":563,"author":{"gitId":"ken-ruster"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":564,"author":{"gitId":"ken-ruster"},"content":"        StringBuilder boardString \u003d new StringBuilder();","lastModifiedDate":"2023-10-23"},{"lineNumber":565,"author":{"gitId":"ken-ruster"},"content":"        for (ChessTile[] row : board) {","lastModifiedDate":"2023-10-23"},{"lineNumber":566,"author":{"gitId":"ken-ruster"},"content":"            for (ChessTile tile : row) {","lastModifiedDate":"2023-10-23"},{"lineNumber":567,"author":{"gitId":"ken-ruster"},"content":"                boardString.append(tile.toFileString());","lastModifiedDate":"2023-10-24"},{"lineNumber":568,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":569,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":570,"author":{"gitId":"ken-ruster"},"content":"        return boardString.toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":571,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":572,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":573,"author":{"gitId":"TongZhengHong"},"content":"    //@@author TongZhengHong","lastModifiedDate":"2023-10-27"},{"lineNumber":574,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isPieceFriendly(ChessPiece otherPiece) {","lastModifiedDate":"2023-10-26"},{"lineNumber":575,"author":{"gitId":"TongZhengHong"},"content":"        return this.playerColor \u003d\u003d otherPiece.getColor();","lastModifiedDate":"2023-10-26"},{"lineNumber":576,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":577,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":578,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isPieceOpponent(ChessPiece otherPiece) {","lastModifiedDate":"2023-10-26"},{"lineNumber":579,"author":{"gitId":"TongZhengHong"},"content":"        return this.playerColor !\u003d otherPiece.getColor();","lastModifiedDate":"2023-10-26"},{"lineNumber":580,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":581,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":582,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isTileOccupied(Coordinate coord) {","lastModifiedDate":"2023-11-08"},{"lineNumber":583,"author":{"gitId":"TongZhengHong"},"content":"        ChessPiece piece \u003d this.getPieceAtCoor(coord);","lastModifiedDate":"2023-11-08"},{"lineNumber":584,"author":{"gitId":"TongZhengHong"},"content":"        return piece \u003d\u003d null || !(piece instanceof EmptyPiece);","lastModifiedDate":"2023-11-08"},{"lineNumber":585,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":586,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":587,"author":{"gitId":"ken-ruster"},"content":"    //@@author ken_ruster","lastModifiedDate":"2023-11-07"},{"lineNumber":588,"author":{"gitId":"ken-ruster"},"content":"    public boolean equals(ChessBoard otherBoard) {","lastModifiedDate":"2023-11-08"},{"lineNumber":589,"author":{"gitId":"ken-ruster"},"content":"        String otherBoardString \u003d otherBoard.toString();","lastModifiedDate":"2023-11-08"},{"lineNumber":590,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":591,"author":{"gitId":"ken-ruster"},"content":"        return otherBoardString.equals(this.toString());","lastModifiedDate":"2023-11-08"},{"lineNumber":592,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":593,"author":{"gitId":"ken-ruster"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ken-ruster":99,"antrikshdhand":8,"TriciaBK":1,"onx001":270,"TongZhengHong":215}},{"path":"src/main/java/chessmaster/game/ChessTile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.game;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.pieces.ChessPiece;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.pieces.EmptyPiece;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"public class ChessTile implements Cloneable {","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"    public static final String TILE_DIVIDER \u003d \"|\";","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"    private static final String EMPTY_TILE_STRING \u003d \" \";","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"    private static final String EMPTY_TILE_MOVES_STRING \u003d \".\";","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"ken-ruster"},"content":"    private static final String BACKGROUND_RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ken-ruster"},"content":"    private static final String CAPTURABLE_BACKGROUND \u003d \"\\u001B[43m\";","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"    /** Nullable ChessPiece object. Null signifies that this tile is empty */","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"    private ChessPiece chessPiece;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"ken-ruster"},"content":"    public ChessTile(Coordinate coor) {","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"        chessPiece \u003d new EmptyPiece(coor.getX(), coor.getY());","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"    public ChessTile(ChessPiece piece) {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"        chessPiece \u003d piece;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"    public ChessPiece getChessPiece() {","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"        return chessPiece;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"        return chessPiece.isEmptyPiece();","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"ken-ruster"},"content":"    public void setTileEmpty(Coordinate coor) {","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"        chessPiece \u003d new EmptyPiece(coor.getX(),coor.getY());","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"     * Updates the ChessTile with a new ChessPiece, considering piece interactions. \u003cBR\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"     * 1. Replace the new piece on an EMPTY tile. \u003cBR\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"     * 2. Cannot capture a friendly piece; no change is made UNLESS it is for promotion. \u003cBR\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"     * 3. If new piece captures the opponent piece, mark the opponent piece as captured and replace it. \u003cBR\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"     * @param newPiece The new ChessPiece to place on the tile.","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"    public void updateTileChessPiece(ChessPiece newPiece) {","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"        if (chessPiece.isEmptyPiece()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"            // Move newPiece to empty tile","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"            chessPiece \u003d newPiece;","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"            return;","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"        } ","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"        if (newPiece.isFriendly(chessPiece)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"            // Only update if friendly pawn piece is promoting","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"            if (chessPiece.isPawn() \u0026\u0026 newPiece.isPromotionPiece()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"                chessPiece \u003d newPiece;","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"TongZhengHong"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"TongZhengHong"},"content":"            return; // Cannot capture friendly piece","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"TongZhengHong"},"content":"        } ","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"TongZhengHong"},"content":"        ","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"TongZhengHong"},"content":"        if (newPiece.isOpponent(chessPiece)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"TongZhengHong"},"content":"            // Mark opponent piece as captured","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"TongZhengHong"},"content":"            chessPiece.setIsCaptured();","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"TongZhengHong"},"content":"            chessPiece \u003d newPiece;","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"TongZhengHong"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"TongZhengHong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"TongZhengHong"},"content":"        String tileContent \u003d isEmpty() ? EMPTY_TILE_STRING : chessPiece.toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"TongZhengHong"},"content":"        return String.format(\" %s \", tileContent);","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"TongZhengHong"},"content":"    public String toStringSelected() {","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"TongZhengHong"},"content":"        String tileContent \u003d isEmpty() ? EMPTY_TILE_STRING : chessPiece.toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"TongZhengHong"},"content":"        return CAPTURABLE_BACKGROUND + String.format(\"{%s}\", tileContent) + BACKGROUND_RESET;","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"TongZhengHong"},"content":"    public String toStringPrevMove() {","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"TongZhengHong"},"content":"        String tileContent \u003d isEmpty() ? EMPTY_TILE_STRING : chessPiece.toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"TongZhengHong"},"content":"        return CAPTURABLE_BACKGROUND + String.format(\"(%s)\", tileContent) + BACKGROUND_RESET;","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"ken-ruster"},"content":"    //@@author ken-ruster","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"ken-ruster"},"content":"    public String toStringAvailableDest() {","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"ken-ruster"},"content":"        String tileContent \u003d isEmpty() ? EMPTY_TILE_MOVES_STRING : chessPiece.toString();","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"ken-ruster"},"content":"        String addBrackets \u003d String.format(\"[%s]\", tileContent);","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"ken-ruster"},"content":"        if (!isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"ken-ruster"},"content":"            return CAPTURABLE_BACKGROUND + addBrackets + BACKGROUND_RESET;","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"ken-ruster"},"content":"        return addBrackets;","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"onx001"},"content":"    //@@author onx001","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"onx001"},"content":"    public String toFileString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"onx001"},"content":"        return chessPiece.toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"onx001"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ken-ruster":17,"onx001":5,"TongZhengHong":75}},{"path":"src/main/java/chessmaster/game/Color.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"//@@author TongZhengHong","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.game;","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"public enum Color {","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"    WHITE, BLACK, EMPTY, DRAW;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"     * Get the opposite color given the player\u0027s color.","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"     * Used to identify the color for CPU player.","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"     * @return The opposite color.","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"    public Color getOppositeColour() {","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"        if (this \u003d\u003d Color.WHITE) {","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"            return Color.BLACK;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"        } else if (this \u003d\u003d Color.BLACK) {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"            return Color.WHITE;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"            return Color.EMPTY;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"     * Checks if a given color is white. ","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"     * @return true if the color is white; false otherwise.","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isWhite() {","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"        return this \u003d\u003d Color.WHITE;","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"     * Checks if a given color is black. ","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"     * @return true if the color is black; false otherwise.","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isBlack() {","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"        return this \u003d\u003d Color.BLACK;","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"     * Checks if a given color is empty.","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"     * @return true if the color is empty; false otherwise.","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"        return this \u003d\u003d Color.EMPTY;","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"     * Checks if a given color is draw.","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"     * @return true if the color is draw; false otherwise.","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isDraw() {","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"TongZhengHong"},"content":"        return this \u003d\u003d Color.DRAW;","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"TongZhengHong":58}},{"path":"src/main/java/chessmaster/game/Coordinate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"//@@author TongZhengHong","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.game;","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.exceptions.ParseCoordinateException;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"public class Coordinate {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"    private static final String BOARD_COLUMNS \u003d \"abcdefgh\";","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"    private int x;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"    private int y;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"    public Coordinate(int x, int y) {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"        this.x \u003d x;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"        this.y \u003d y;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"        assert !isCoorOutofBoard(x, y) : \"Coordinates (x,y) should NOT be out of chessboard (8x8 size)!\";","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"    public int getX() {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"        return x;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"    public int getY() {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"        return y;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"    public static boolean isCoorOutofBoard(int x, int y) {","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"        return (x \u003c 0 || x \u003e\u003d ChessBoard.SIZE) || (y \u003c 0 || y \u003e\u003d ChessBoard.SIZE);","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"     * Checks if applying a given offset from the current position stays within the","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"     * bounds of the chessboard.","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"     * @param offsetX The horizontal offset to apply.","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"     * @param offsetY The vertical offset to apply.","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"     * @return true if the resulting position is within the board boundaries;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"     *         otherwise, false.","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isOffsetWithinBoard(int offsetX, int offsetY) {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"        int newX \u003d x + offsetX;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"        int newY \u003d y + offsetY;","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"        return (newX \u003e\u003d 0 \u0026\u0026 newX \u003c ChessBoard.SIZE) \u0026\u0026","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"                (newY \u003e\u003d 0 \u0026\u0026 newY \u003c ChessBoard.SIZE);","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"     * Adds the given offsets to the current coordinate and returns the new","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"     * coordinate.","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"     * @param offsetX The horizontal offset to apply.","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"     * @param offsetY The vertical offset to apply.","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"     * @return A new coordinate after applying the offsets, or the current","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"TongZhengHong"},"content":"     *         coordinate","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"TongZhengHong"},"content":"     *         if the new position is out of the board boundaries.","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"TongZhengHong"},"content":"    public Coordinate addOffsetToCoordinate(int offsetX, int offsetY) {","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"TongZhengHong"},"content":"        int newX \u003d x + offsetX;","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"TongZhengHong"},"content":"        int newY \u003d y + offsetY;","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"TongZhengHong"},"content":"        if (isCoorOutofBoard(newX, newY)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"TongZhengHong"},"content":"            return new Coordinate(x, y);","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"TongZhengHong"},"content":"        return new Coordinate(newX, newY);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"TongZhengHong"},"content":"     * Parses an algebraic chess coordinate notation (e.g., \"a1\") and returns a","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"TongZhengHong"},"content":"     * Coordinate object.","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"TongZhengHong"},"content":"     * @param notation The algebraic coordinate notation to parse.","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"TongZhengHong"},"content":"     * @return A Coordinate object representing the parsed chess coordinate.","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"TongZhengHong"},"content":"     * @throws ParseCoordinateException If the input notation is invalid or out of","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"TongZhengHong"},"content":"     *                                  bounds.","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"TongZhengHong"},"content":"    public static Coordinate parseAlgebraicCoor(String notation) throws ParseCoordinateException {","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"TongZhengHong"},"content":"        notation \u003d notation.toLowerCase();","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"TongZhengHong"},"content":"        if (notation.length() !\u003d 2) {","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"TongZhengHong"},"content":"            throw new ParseCoordinateException();","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"TongZhengHong"},"content":"        String colString \u003d Character.toString(notation.charAt(0));","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"TongZhengHong"},"content":"        boolean isColValid \u003d BOARD_COLUMNS.contains(colString);","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"TongZhengHong"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"TongZhengHong"},"content":"            String rowString \u003d String.valueOf(notation.charAt(1));","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"TongZhengHong"},"content":"            int rowInt \u003d Integer.parseInt(String.valueOf(rowString));","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"TongZhengHong"},"content":"            if (rowInt \u003c 1 || rowInt \u003e ChessBoard.SIZE || !isColValid) {","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"TongZhengHong"},"content":"                throw new ParseCoordinateException();","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"TongZhengHong"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"TongZhengHong"},"content":"            int indexX \u003d BOARD_COLUMNS.indexOf(colString); ","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"TongZhengHong"},"content":"            int indexY \u003d (rowInt - 8) * -1;","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"TongZhengHong"},"content":"            return new Coordinate(indexX, indexY);","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"TongZhengHong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"TongZhengHong"},"content":"            throw new ParseCoordinateException();","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"TongZhengHong"},"content":"    public int[] calculateOffsetFrom(Coordinate otherCoordinate) {","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"TongZhengHong"},"content":"        int offsetX \u003d this.x - otherCoordinate.getX();","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"TongZhengHong"},"content":"        int offsetY \u003d this.y - otherCoordinate.getY();","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"TongZhengHong"},"content":"        return new int[]{ offsetX, offsetY };","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"TongZhengHong"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"TongZhengHong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"TongZhengHong"},"content":"        return String.format(\"%s%d\", BOARD_COLUMNS.charAt(x), (ChessBoard.SIZE - y));","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"onx001"},"content":"    //@@author onx001","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"onx001"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"onx001"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"onx001"},"content":"        if (obj instanceof Coordinate) {","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"onx001"},"content":"            Coordinate other \u003d (Coordinate) obj;","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"onx001"},"content":"            return x \u003d\u003d other.x \u0026\u0026 y \u003d\u003d other.y;","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"onx001"},"content":"        return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"onx001"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"onx001":11,"TongZhengHong":115}},{"path":"src/main/java/chessmaster/game/Game.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"//@@author TongZhengHong","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.game;","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.commands.ExitCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.commands.Command;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.commands.CommandResult;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.commands.HelpCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.commands.MoveCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.commands.RestartCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.move.Move;","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.parser.Parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.storage.Storage;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.ui.TextUI;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.user.CPU;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.user.Human;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.user.Player;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"public class Game {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"    private static final String[] START_HELP_STRINGS \u003d new String[HelpCommand.HELP_STRINGS.length + 1];","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"    private CPU cpu;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"    private Human human;","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"    private Player currentPlayer;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"    private int numMoves;","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"    private TextUI ui;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"    private ChessBoard board;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"    private Storage storage;","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"    private int difficulty;","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"    private Command command;","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"    private boolean hasEnded;","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"    public Game(Color playerColour, Color currentTurnColor, ChessBoard board, ","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"        Storage storage, TextUI ui, int difficulty, Human human, CPU cpu) {","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"        this.board \u003d board;","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"        this.difficulty \u003d difficulty;","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"        this.human \u003d human;","lastModifiedDate":"2023-11-05"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"        Color cpuColor \u003d playerColour.getOppositeColour();","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"        this.cpu \u003d cpu;","lastModifiedDate":"2023-11-05"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"        this.numMoves \u003d human.getMovesLength() + cpu.getMovesLength();","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"        // Choose which player goes first","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"        currentPlayer \u003d currentTurnColor \u003d\u003d playerColour ? human : cpu;","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"        // Make the START_HELP_STRINGS more robust with just one source-of-truth in HelpCommand.HELP_STRINGS","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"        START_HELP_STRINGS[0] \u003d \"Thank you for choosing ChessMaster!\";","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"TongZhengHong"},"content":"        System.arraycopy(HelpCommand.HELP_STRINGS, 0, START_HELP_STRINGS, 1, HelpCommand.HELP_STRINGS.length);","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"TongZhengHong"},"content":"        assert playerColour !\u003d Color.EMPTY : \"Human player color should not be EMPTY!\";","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"TongZhengHong"},"content":"        assert cpuColor !\u003d Color.EMPTY : \"CPU player color should not be EMPTY!\";","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"TongZhengHong"},"content":"        assert currentPlayer !\u003d null : \"A player should always exist in a game!\";","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"TongZhengHong"},"content":"        assert (1 \u003c\u003d difficulty) \u0026\u0026 (difficulty \u003c\u003d 3) : \"Difficulty should be between 1 and 3!\";","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"TongZhengHong"},"content":"     * Manages the main gameplay of ChessMaster","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"TongZhengHong"},"content":"     * This code segment orchestrates the primary gameplay loop of Chess Master, which encompasses player turns,","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"TongZhengHong"},"content":"     * move handling, and the management of the game state.","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"TongZhengHong"},"content":"     * It starts by displaying the initial game setup, including the chessboard, and then enters a loop where players","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"TongZhengHong"},"content":"     * take turns making moves.","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"TongZhengHong"},"content":"     * If a player enters a valid move, the chessboard is updated, and the game progresses.","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"TongZhengHong"},"content":"     * If an exception is encountered during this process, an error message is displayed to the user.","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"TongZhengHong"},"content":"     * The loop continues until the game ends or specific commands are issued to abort, restart, or exit the game.","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"TongZhengHong"},"content":"     * @return true if the game has ended, either by checkmate, stalemate,","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"TongZhengHong"},"content":"     *     or if users wants to reset the game. Returns false if the game is aborted.","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"TongZhengHong"},"content":"    public boolean run() {","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"TongZhengHong"},"content":"        ui.printText(START_HELP_STRINGS);","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"TongZhengHong"},"content":"        ui.printChessBoard(board.getBoard());","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"TongZhengHong"},"content":"        while (!hasEnded \u0026\u0026 !ExitCommand.isExit(command) \u0026\u0026 !RestartCommand.isRestart(command)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"TongZhengHong"},"content":"            try {","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"TongZhengHong"},"content":"                assert currentPlayer.isCPU() || currentPlayer.isHuman() : ","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"TongZhengHong"},"content":"                    \"Player should only either be human or CPU!\";","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"TongZhengHong"},"content":"                if (currentPlayer.isHuman()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"TongZhengHong"},"content":"                    command \u003d getAndExecuteUserCommand();","lastModifiedDate":"2023-11-07"},{"lineNumber":88,"author":{"gitId":"TongZhengHong"},"content":"                    if (!command.isMoveCommand()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"TongZhengHong"},"content":"                        continue; // Get next command","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"TongZhengHong"},"content":"                    }","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"TongZhengHong"},"content":"                    Move playedMove \u003d handleHumanMove();","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"TongZhengHong"},"content":"                    ui.printChessBoardWithMove(board.getBoard(), playedMove);","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"TongZhengHong"},"content":"                    ","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"TongZhengHong"},"content":"                } else if (currentPlayer.isCPU()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"TongZhengHong"},"content":"                    Move playedMove \u003d handleCPUMove();","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"TongZhengHong"},"content":"                    ui.printChessBoardWithMove(board.getBoard(), playedMove);","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"TongZhengHong"},"content":"                } ","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"TongZhengHong"},"content":"                currentPlayer \u003d togglePlayerTurn();","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"TongZhengHong"},"content":"                storage.saveBoard(board, currentPlayer.getColour(), human, cpu);","lastModifiedDate":"2023-11-05"},{"lineNumber":101,"author":{"gitId":"TongZhengHong"},"content":"                hasEnded \u003d checkEndState(); // Resets board if end","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"TongZhengHong"},"content":"            } catch (ChessMasterException e) {","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"TongZhengHong"},"content":"                ui.printErrorMessage(e);","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"TongZhengHong"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"TongZhengHong"},"content":"        return hasEnded || RestartCommand.isRestart(command);","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"TongZhengHong"},"content":"     * Represents main part of gameplay loop for the human user. Responsible for","lastModifiedDate":"2023-11-10"},{"lineNumber":112,"author":{"gitId":"TongZhengHong"},"content":"     * taking in the user\u0027s input and discerning the user\u0027s intention based on the input.","lastModifiedDate":"2023-11-10"},{"lineNumber":113,"author":{"gitId":"TongZhengHong"},"content":"     * Also executes and handles all commands except `MoveCommand`.","lastModifiedDate":"2023-11-10"},{"lineNumber":114,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":115,"author":{"gitId":"TongZhengHong"},"content":"     * @return Command corresponding to the user\u0027s input","lastModifiedDate":"2023-11-10"},{"lineNumber":116,"author":{"gitId":"TongZhengHong"},"content":"     * @throws ChessMasterException","lastModifiedDate":"2023-11-10"},{"lineNumber":117,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":118,"author":{"gitId":"TongZhengHong"},"content":"    private Command getAndExecuteUserCommand() throws ChessMasterException {","lastModifiedDate":"2023-11-07"},{"lineNumber":119,"author":{"gitId":"TongZhengHong"},"content":"        String userInputString \u003d ui.getUserInput(true);","lastModifiedDate":"2023-11-06"},{"lineNumber":120,"author":{"gitId":"TongZhengHong"},"content":"        this.command \u003d Parser.parseCommand(userInputString);","lastModifiedDate":"2023-11-07"},{"lineNumber":121,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"TongZhengHong"},"content":"        CommandResult result \u003d command.execute(this);","lastModifiedDate":"2023-11-07"},{"lineNumber":123,"author":{"gitId":"TongZhengHong"},"content":"        ui.printCommandResult(result);","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"TongZhengHong"},"content":"        return this.command;","lastModifiedDate":"2023-11-07"},{"lineNumber":125,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":126,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":128,"author":{"gitId":"TongZhengHong"},"content":"     * Handles the user input in the case that a move was made by the player.","lastModifiedDate":"2023-11-10"},{"lineNumber":129,"author":{"gitId":"TongZhengHong"},"content":"     * Extracts the move from the current command, and reflects the move on the chessboard.","lastModifiedDate":"2023-11-10"},{"lineNumber":130,"author":{"gitId":"TongZhengHong"},"content":"     * When the move is done, it also handles any possible promotions which can be made.","lastModifiedDate":"2023-11-10"},{"lineNumber":131,"author":{"gitId":"TongZhengHong"},"content":"     * Returns the move which has been made to be printed in the run()  function.","lastModifiedDate":"2023-11-10"},{"lineNumber":132,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":133,"author":{"gitId":"TongZhengHong"},"content":"     * @return Move which has been executed","lastModifiedDate":"2023-11-10"},{"lineNumber":134,"author":{"gitId":"TongZhengHong"},"content":"     * @throws ChessMasterException","lastModifiedDate":"2023-11-10"},{"lineNumber":135,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":136,"author":{"gitId":"TongZhengHong"},"content":"    private Move handleHumanMove() throws ChessMasterException {","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"TongZhengHong"},"content":"        Move humanMove \u003d ((MoveCommand) this.command).getMove();","lastModifiedDate":"2023-11-07"},{"lineNumber":138,"author":{"gitId":"TongZhengHong"},"content":"        board.executeMoveWithCheck(humanMove);","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"TongZhengHong"},"content":"        human.addMove(humanMove);","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"TongZhengHong"},"content":"        numMoves++;","lastModifiedDate":"2023-11-07"},{"lineNumber":141,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":142,"author":{"gitId":"TongZhengHong"},"content":"        // Handle human promotion","lastModifiedDate":"2023-10-23"},{"lineNumber":143,"author":{"gitId":"TongZhengHong"},"content":"        if (!board.isEndGame()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"TongZhengHong"},"content":"            if (board.canPromote(humanMove)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":145,"author":{"gitId":"TongZhengHong"},"content":"                human.handlePromote(board, ui, humanMove);","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"TongZhengHong"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":147,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":148,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"TongZhengHong"},"content":"        return humanMove;","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":151,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":153,"author":{"gitId":"TongZhengHong"},"content":"     * Obtains and executes the CPU\u0027s move in response to the current board state.","lastModifiedDate":"2023-11-10"},{"lineNumber":154,"author":{"gitId":"TongZhengHong"},"content":"     * Also prints a message informing the player of the CPU thinking as it may take some time","lastModifiedDate":"2023-11-10"},{"lineNumber":155,"author":{"gitId":"TongZhengHong"},"content":"     * to compute the most optimal move in higher difficulty levels.","lastModifiedDate":"2023-11-10"},{"lineNumber":156,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":157,"author":{"gitId":"TongZhengHong"},"content":"     * @return The move that the CPU made","lastModifiedDate":"2023-11-10"},{"lineNumber":158,"author":{"gitId":"TongZhengHong"},"content":"     * @throws ChessMasterException","lastModifiedDate":"2023-11-10"},{"lineNumber":159,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":160,"author":{"gitId":"TongZhengHong"},"content":"    private Move handleCPUMove() throws ChessMasterException {","lastModifiedDate":"2023-11-01"},{"lineNumber":161,"author":{"gitId":"TongZhengHong"},"content":"        ui.printCPUThinkingMessage();","lastModifiedDate":"2023-11-06"},{"lineNumber":162,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":163,"author":{"gitId":"TongZhengHong"},"content":"        Move cpuMove \u003d cpu.getBestMove(board, difficulty);","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"TongZhengHong"},"content":"        ui.printCPUMove(cpuMove);","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"TongZhengHong"},"content":"        board.executeMoveWithCheck(cpuMove);","lastModifiedDate":"2023-11-09"},{"lineNumber":166,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":167,"author":{"gitId":"TongZhengHong"},"content":"        cpu.addMove(cpuMove);","lastModifiedDate":"2023-10-23"},{"lineNumber":168,"author":{"gitId":"TongZhengHong"},"content":"        numMoves++;","lastModifiedDate":"2023-11-07"},{"lineNumber":169,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":170,"author":{"gitId":"TongZhengHong"},"content":"        return cpuMove;","lastModifiedDate":"2023-11-01"},{"lineNumber":171,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":174,"author":{"gitId":"TongZhengHong"},"content":"     * Checks whether the current state of the board qualifies as the game having ended.","lastModifiedDate":"2023-11-10"},{"lineNumber":175,"author":{"gitId":"TongZhengHong"},"content":"     * If the game has ended, prints a message signalling the end of the game, and resets the saved board.","lastModifiedDate":"2023-11-10"},{"lineNumber":176,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":177,"author":{"gitId":"TongZhengHong"},"content":"     * @return Whether the game has ended","lastModifiedDate":"2023-11-10"},{"lineNumber":178,"author":{"gitId":"TongZhengHong"},"content":"     * @throws ChessMasterException","lastModifiedDate":"2023-11-10"},{"lineNumber":179,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":180,"author":{"gitId":"TongZhengHong"},"content":"    private boolean checkEndState() throws ChessMasterException {","lastModifiedDate":"2023-10-23"},{"lineNumber":181,"author":{"gitId":"TongZhengHong"},"content":"        boolean end \u003d board.isEndGame();","lastModifiedDate":"2023-10-22"},{"lineNumber":182,"author":{"gitId":"TongZhengHong"},"content":"        if (end) {","lastModifiedDate":"2023-10-22"},{"lineNumber":183,"author":{"gitId":"TongZhengHong"},"content":"            Color winningColor \u003d board.getWinningColor();","lastModifiedDate":"2023-10-22"},{"lineNumber":184,"author":{"gitId":"TongZhengHong"},"content":"            if (winningColor \u003d\u003d Color.DRAW) {","lastModifiedDate":"2023-11-12"},{"lineNumber":185,"author":{"gitId":"TongZhengHong"},"content":"                ui.printDrawMessage();","lastModifiedDate":"2023-11-12"},{"lineNumber":186,"author":{"gitId":"TongZhengHong"},"content":"            } else {","lastModifiedDate":"2023-11-12"},{"lineNumber":187,"author":{"gitId":"TongZhengHong"},"content":"                Player winnerPlayer \u003d human.getColour() \u003d\u003d winningColor ? human : cpu;","lastModifiedDate":"2023-11-03"},{"lineNumber":188,"author":{"gitId":"TongZhengHong"},"content":"                ui.printEndMessage(winnerPlayer);","lastModifiedDate":"2023-11-04"},{"lineNumber":189,"author":{"gitId":"TongZhengHong"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":190,"author":{"gitId":"TongZhengHong"},"content":"            storage.resetBoard();","lastModifiedDate":"2023-10-23"},{"lineNumber":191,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"TongZhengHong"},"content":"        return end;","lastModifiedDate":"2023-10-22"},{"lineNumber":193,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":194,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":195,"author":{"gitId":"TongZhengHong"},"content":"    private Player togglePlayerTurn() {","lastModifiedDate":"2023-10-23"},{"lineNumber":196,"author":{"gitId":"TongZhengHong"},"content":"        return currentPlayer.isHuman() ? cpu : human;","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":198,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":199,"author":{"gitId":"TongZhengHong"},"content":"    public ChessBoard getBoard() {","lastModifiedDate":"2023-11-07"},{"lineNumber":200,"author":{"gitId":"TongZhengHong"},"content":"        return this.board;","lastModifiedDate":"2023-11-07"},{"lineNumber":201,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":202,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":203,"author":{"gitId":"TongZhengHong"},"content":"    public TextUI getUI() {","lastModifiedDate":"2023-11-07"},{"lineNumber":204,"author":{"gitId":"TongZhengHong"},"content":"        return this.ui;","lastModifiedDate":"2023-11-07"},{"lineNumber":205,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":206,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":207,"author":{"gitId":"TongZhengHong"},"content":"    public CPU getCPU() {","lastModifiedDate":"2023-11-07"},{"lineNumber":208,"author":{"gitId":"TongZhengHong"},"content":"        return this.cpu;","lastModifiedDate":"2023-11-07"},{"lineNumber":209,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":210,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":211,"author":{"gitId":"TongZhengHong"},"content":"    public Human getHuman() {","lastModifiedDate":"2023-11-07"},{"lineNumber":212,"author":{"gitId":"TongZhengHong"},"content":"        return this.human;","lastModifiedDate":"2023-11-07"},{"lineNumber":213,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":214,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":215,"author":{"gitId":"TongZhengHong"},"content":"    public int getNumMoves() {","lastModifiedDate":"2023-11-07"},{"lineNumber":216,"author":{"gitId":"TongZhengHong"},"content":"        return this.numMoves;","lastModifiedDate":"2023-11-07"},{"lineNumber":217,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":218,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":219,"author":{"gitId":"TongZhengHong"},"content":"    public Player getCurrentPlayer() {","lastModifiedDate":"2023-11-07"},{"lineNumber":220,"author":{"gitId":"TongZhengHong"},"content":"        return this.currentPlayer;","lastModifiedDate":"2023-11-07"},{"lineNumber":221,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":222,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"TongZhengHong":222}},{"path":"src/main/java/chessmaster/game/MiniMax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"onx001"},"content":"//@@author onx001","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"onx001"},"content":"package chessmaster.game;","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"onx001"},"content":"import chessmaster.game.move.Move;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"onx001"},"content":"import chessmaster.pieces.ChessPiece;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"onx001"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"onx001"},"content":"public class MiniMax {","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"onx001"},"content":"    protected int depth;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"onx001"},"content":"    protected int maxDepth;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"onx001"},"content":"    protected int score;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"onx001"},"content":"    protected Move bestMove;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"onx001"},"content":"    protected ChessBoard board;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"onx001"},"content":"    protected Color color;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"onx001"},"content":"    protected Color opponentColor;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"onx001"},"content":"    protected BoardScoreTuple tuple;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"onx001"},"content":"    //declares all variables needed for the minimax algorithm","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"onx001"},"content":"    public MiniMax(ChessBoard board, Color color, int maxDepth, int score) {","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"onx001"},"content":"        this.board \u003d board;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"onx001"},"content":"        this.color \u003d color;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"onx001"},"content":"        this.opponentColor \u003d color.getOppositeColour();","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"onx001"},"content":"        this.maxDepth \u003d maxDepth;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"onx001"},"content":"        this.score \u003d score;","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"onx001"},"content":"        this.tuple \u003d new BoardScoreTuple(board, score, null);","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"onx001"},"content":"    ","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"onx001"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"onx001"},"content":"     * returns the best move tuple for the current player","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"onx001"},"content":"     * @author onx001","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"onx001"},"content":"     * @param tuple the BoardScoreTuple to be weighed","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"onx001"},"content":"     * @param color the color of the current player","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"onx001"},"content":"     * @param depth the current depth of the minimax algorithm","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"onx001"},"content":"     * @param score the score of the current board","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"onx001"},"content":"     * @param isMax whether the current player is the CPU or the player","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"onx001"},"content":"     * @param maxDepth the maximum depth of the minimax algorithm","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"onx001"},"content":"     * @return the best move tuple for the current player","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"onx001"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"onx001"},"content":"    public static BoardScoreTuple mostPoints(BoardScoreTuple tuple, Color color, int depth, ","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"onx001"},"content":"        int score, boolean isMax, int maxDepth) {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"onx001"},"content":"        //gets all the moves for the current player","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"onx001"},"content":"        ChessBoard board \u003d tuple.getBoard();","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"onx001"},"content":"        Color playerColor \u003d isMax ? color : color.getOppositeColour();","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"onx001"},"content":"        Move[] moves \u003d board.getLegalMoves(playerColor);","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"onx001"},"content":"        if (moves.length \u003d\u003d 0) {","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"onx001"},"content":"            return tuple;","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"onx001"},"content":"        BoardScoreTuple[] boards \u003d new BoardScoreTuple[moves.length];","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"onx001"},"content":"        int bestScore \u003d isMax ? Integer.MIN_VALUE : Integer.MAX_VALUE;","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"onx001"},"content":"        BoardScoreTuple bestTuple \u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"onx001"},"content":"        //if the depth is the max depth, return the score of the board as base case","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"onx001"},"content":"        if (depth \u003d\u003d maxDepth) {","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"onx001"},"content":"            int newscore \u003d board.getPoints(color);","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"onx001"},"content":"            return new BoardScoreTuple(board,newscore, null);","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"onx001"},"content":"        //for each move, clone the board and execute the move as a possibility","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"onx001"},"content":"        boards \u003d getBoards(moves, board, color);","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"onx001"},"content":"        ","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"onx001"},"content":"        //go through boards and find one with best points","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"onx001"},"content":"        for (int i \u003d 0; i \u003c boards.length; i++) {","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"onx001"},"content":"            BoardScoreTuple iterTuple \u003d boards[i];","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"onx001"},"content":"            assert iterTuple !\u003d null : \"iterTuple is null\";","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"onx001"},"content":"            assert iterTuple.getMove() !\u003d null : \"iterTuple move is null\";","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"onx001"},"content":"            //recursively call mostPoints to find the best move for current board","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"onx001"},"content":"            BoardScoreTuple tuple1 \u003d mostPoints(iterTuple, color, depth + 1, score, !isMax, maxDepth);","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"onx001"},"content":"          ","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"onx001"},"content":"            //Sets new score to current child score","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"onx001"},"content":"            int newScore \u003d tuple1.getScore();","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"onx001"},"content":"            bestScore \u003d updateScore(isMax, bestScore, newScore);","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"onx001"},"content":"            //set current tuple based on best child score","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"onx001"},"content":"            bestTuple \u003d bestScore \u003d\u003d newScore ? iterTuple : bestTuple;","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"onx001"},"content":"        return bestTuple;","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"onx001"},"content":"    /** ","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"onx001"},"content":"     * Kicks off minimax algorithm and returns the best move for the current player","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"onx001"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"onx001"},"content":"    public Move getBestMove() {","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"onx001"},"content":"        BoardScoreTuple bestTuple \u003d mostPoints(tuple, color, 0, score, true, maxDepth);","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"onx001"},"content":"        Move bestMove \u003d bestTuple.getMove();","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"onx001"},"content":"        return bestMove;","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"onx001"},"content":"    //Helper function to get all the boards for the current player","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"onx001"},"content":"    private static BoardScoreTuple[] getBoards(Move[] moves, ChessBoard board, Color color) {","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"onx001"},"content":"        BoardScoreTuple[] boards \u003d new BoardScoreTuple[moves.length];","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"onx001"},"content":"        for (int i \u003d 0; i \u003c moves.length; i++) {","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"onx001"},"content":"            ChessBoard newBoard \u003d board.clone();","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"onx001"},"content":"            Move move \u003d moves[i];","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"onx001"},"content":"            Coordinate from \u003d move.getFrom();","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"onx001"},"content":"            ChessPiece piece \u003d newBoard.getPieceAtCoor(from);","lastModifiedDate":"2023-11-12"},{"lineNumber":101,"author":{"gitId":"onx001"},"content":"            move.setPieceMoved(piece);","lastModifiedDate":"2023-11-12"},{"lineNumber":102,"author":{"gitId":"onx001"},"content":"            try {","lastModifiedDate":"2023-11-12"},{"lineNumber":103,"author":{"gitId":"onx001"},"content":"                newBoard.executeMove(move);","lastModifiedDate":"2023-11-12"},{"lineNumber":104,"author":{"gitId":"onx001"},"content":"                int newScore \u003d newBoard.getPoints(color);","lastModifiedDate":"2023-11-12"},{"lineNumber":105,"author":{"gitId":"onx001"},"content":"                boards[i] \u003d new BoardScoreTuple(newBoard, newScore, move);","lastModifiedDate":"2023-11-12"},{"lineNumber":106,"author":{"gitId":"onx001"},"content":"            } catch (ChessMasterException e) {","lastModifiedDate":"2023-11-12"},{"lineNumber":107,"author":{"gitId":"onx001"},"content":"                continue;","lastModifiedDate":"2023-11-12"},{"lineNumber":108,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":109,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":110,"author":{"gitId":"onx001"},"content":"        return boards;","lastModifiedDate":"2023-11-12"},{"lineNumber":111,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":112,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":113,"author":{"gitId":"onx001"},"content":"    //Helper function to update the best score","lastModifiedDate":"2023-11-12"},{"lineNumber":114,"author":{"gitId":"onx001"},"content":"    private static int updateScore(boolean isMax, int bestScore, int newScore) {","lastModifiedDate":"2023-11-12"},{"lineNumber":115,"author":{"gitId":"onx001"},"content":"        if (isMax) {","lastModifiedDate":"2023-11-12"},{"lineNumber":116,"author":{"gitId":"onx001"},"content":"            //maximises child score if CPU turn","lastModifiedDate":"2023-11-12"},{"lineNumber":117,"author":{"gitId":"onx001"},"content":"            if (newScore \u003e bestScore) {","lastModifiedDate":"2023-11-12"},{"lineNumber":118,"author":{"gitId":"onx001"},"content":"                bestScore \u003d newScore;","lastModifiedDate":"2023-11-12"},{"lineNumber":119,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":120,"author":{"gitId":"onx001"},"content":"        } else {","lastModifiedDate":"2023-11-12"},{"lineNumber":121,"author":{"gitId":"onx001"},"content":"            //minimises child score if player turn","lastModifiedDate":"2023-11-12"},{"lineNumber":122,"author":{"gitId":"onx001"},"content":"            if (newScore \u003c bestScore) {","lastModifiedDate":"2023-11-12"},{"lineNumber":123,"author":{"gitId":"onx001"},"content":"                bestScore \u003d newScore;","lastModifiedDate":"2023-11-12"},{"lineNumber":124,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":125,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":126,"author":{"gitId":"onx001"},"content":"        return bestScore;","lastModifiedDate":"2023-11-12"},{"lineNumber":127,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":128,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":129,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":130,"author":{"gitId":"onx001"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"onx001":130}},{"path":"src/main/java/chessmaster/game/move/CastleMove.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshdhand"},"content":"package chessmaster.game.move;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.pieces.ChessPiece;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.pieces.King;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"antrikshdhand"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"antrikshdhand"},"content":"public class CastleMove extends Move {","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"antrikshdhand"},"content":"    protected CastleSide side;","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"antrikshdhand"},"content":"    protected Move rookMove;","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"antrikshdhand"},"content":"    public CastleMove(Coordinate from, Coordinate to, ChessPiece pieceMoved, CastleSide side) {","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"antrikshdhand"},"content":"        super(from, to, pieceMoved);","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"antrikshdhand"},"content":"        this.side \u003d side;","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"antrikshdhand"},"content":"    public static boolean checkIfLeftCastling(ChessPiece pieceMoved, Coordinate from, Coordinate to) {","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"antrikshdhand"},"content":"        if (!(pieceMoved instanceof King)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"antrikshdhand"},"content":"            return false;","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"antrikshdhand"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"antrikshdhand"},"content":"        int[] offset \u003d to.calculateOffsetFrom(from);","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"antrikshdhand"},"content":"        return Arrays.equals(offset, ChessPiece.CASTLE_LEFT);","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"antrikshdhand"},"content":"    public static boolean checkIfRightCastling(ChessPiece pieceMoved, Coordinate from, Coordinate to) {","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"antrikshdhand"},"content":"        if (!(pieceMoved instanceof King)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"antrikshdhand"},"content":"            return false;","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"antrikshdhand"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"antrikshdhand"},"content":"        int[] offset \u003d to.calculateOffsetFrom(from);","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"antrikshdhand"},"content":"        return Arrays.equals(offset, ChessPiece.CASTLE_RIGHT);","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"antrikshdhand"},"content":"    @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"antrikshdhand"},"content":"    protected boolean isTryingToCastleUnderCheck(ChessBoard board) {","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"antrikshdhand"},"content":"        if (board.isChecked(this.getPieceMoved().getColor())) {","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"antrikshdhand"},"content":"            return true;","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"antrikshdhand"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"antrikshdhand"},"content":"        return false;","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"antrikshdhand"},"content":"    public CastleSide getSide() {","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"antrikshdhand"},"content":"        return side;","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"antrikshdhand"},"content":"    public Move getRookMove() {","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"antrikshdhand"},"content":"        return rookMove;","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"antrikshdhand"},"content":"    public void setRookMove(Move rookMove) {","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"antrikshdhand"},"content":"        this.rookMove \u003d rookMove;","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"antrikshdhand"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"antrikshdhand":58}},{"path":"src/main/java/chessmaster/game/move/CastleSide.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshdhand"},"content":"package chessmaster.game.move;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"antrikshdhand"},"content":"public enum CastleSide {","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"antrikshdhand"},"content":"    RIGHT, LEFT","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"antrikshdhand"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"antrikshdhand":5}},{"path":"src/main/java/chessmaster/game/move/EnPassantMove.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshdhand"},"content":"package chessmaster.game.move;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.pieces.ChessPiece;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"antrikshdhand"},"content":"public class EnPassantMove extends Move {","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"antrikshdhand"},"content":"    public EnPassantMove(Coordinate from, Coordinate to, ChessPiece pieceMoved, ChessPiece enPassantPiece) {","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"antrikshdhand"},"content":"        // enPassantPiece is the pieceCaptured","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"antrikshdhand"},"content":"        super(from, to, pieceMoved, enPassantPiece);","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"antrikshdhand"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"antrikshdhand":13}},{"path":"src/main/java/chessmaster/game/move/Move.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"// @author TongZhengHong","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"antrikshdhand"},"content":"package chessmaster.game.move;","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"onx001"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.pieces.ChessPiece;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"onx001"},"content":"import chessmaster.pieces.Pawn;","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"ken-ruster"},"content":"public class Move {","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"antrikshdhand"},"content":"    protected Coordinate from;","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"antrikshdhand"},"content":"    protected Coordinate to;","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"antrikshdhand"},"content":"    protected ChessPiece pieceMoved; // if castling then pieceMoved instanceof King","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"antrikshdhand"},"content":"    protected ChessPiece pieceCaptured;","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"antrikshdhand"},"content":"    protected boolean hasCapturedAPiece;","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"antrikshdhand"},"content":"    public Move(Coordinate from, Coordinate to, ChessPiece pieceMoved) {","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"ken-ruster"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"ken-ruster"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"antrikshdhand"},"content":"        this.pieceMoved \u003d pieceMoved;","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"antrikshdhand"},"content":"        this.pieceCaptured \u003d null;","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"antrikshdhand"},"content":"        this.hasCapturedAPiece \u003d false;","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"        assert from !\u003d null \u0026\u0026 to !\u003d null : \"Coordinates in Move should not be null!\";","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"antrikshdhand"},"content":"        assert pieceMoved !\u003d null \u0026\u0026 !pieceMoved.isEmptyPiece() : \"Chess piece in Move should not be null or empty!\";","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"antrikshdhand"},"content":"    public Move(Coordinate from, Coordinate to, ChessPiece pieceMoved, ChessPiece pieceCaptured) {","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"antrikshdhand"},"content":"        this(from, to, pieceMoved);","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"antrikshdhand"},"content":"        this.pieceCaptured \u003d pieceCaptured;","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"antrikshdhand"},"content":"        this.hasCapturedAPiece \u003d true;","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"ken-ruster"},"content":"    public Coordinate getFrom() {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"ken-ruster"},"content":"        return from;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"ken-ruster"},"content":"    public Coordinate getTo() {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"ken-ruster"},"content":"        return to;","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"antrikshdhand"},"content":"    public ChessPiece getPieceMoved() {","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"antrikshdhand"},"content":"        return pieceMoved;","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"antrikshdhand"},"content":"    public boolean hasCapturedAPiece() {","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"antrikshdhand"},"content":"        return this.hasCapturedAPiece;","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"antrikshdhand"},"content":"    public ChessPiece getPieceCaptured() {","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"antrikshdhand"},"content":"        return this.pieceCaptured;","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"antrikshdhand"},"content":"    public void setFrom(Coordinate from) {","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"antrikshdhand"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"antrikshdhand"},"content":"    public void setTo(Coordinate to) {","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"antrikshdhand"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"antrikshdhand"},"content":"    public void setPieceMoved(ChessPiece pieceMoved) {","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"antrikshdhand"},"content":"        this.pieceMoved \u003d pieceMoved;","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"onx001"},"content":"    //@@author onx001","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"onx001"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"onx001"},"content":"     * Checks if the move is valid by checking if the to coordinate is in the","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"onx001"},"content":"     * possibleCoordinates 2d array","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"onx001"},"content":"     * @param board","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"onx001"},"content":"     * @return","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"onx001"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"onx001"},"content":"    public boolean isValid(ChessBoard board) {","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"onx001"},"content":"        Coordinate[] coordinates \u003d pieceMoved.getPseudoLegalCoordinates(board);","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"onx001"},"content":"        for (Coordinate coor : coordinates) {","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"onx001"},"content":"            if (coor.equals(to)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"onx001"},"content":"                return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"onx001"},"content":"        return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"onx001"},"content":"    protected boolean isTryingToCastleUnderCheck(ChessBoard board) {","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"onx001"},"content":"        return false; // Only CastleMove objects can castle!","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"onx001"},"content":"    public boolean isValidWithCheck(ChessBoard board) {","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"onx001"},"content":"        // Check if the current move is valid on the board","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"onx001"},"content":"        if (!this.isValid(board)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":93,"author":{"gitId":"onx001"},"content":"            return false;","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"onx001"},"content":"        // Cannot castle while in check","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"onx001"},"content":"        if (isTryingToCastleUnderCheck(board)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":98,"author":{"gitId":"onx001"},"content":"            return false;","lastModifiedDate":"2023-11-07"},{"lineNumber":99,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":100,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":101,"author":{"gitId":"onx001"},"content":"        // Attempt to make the move on a cloned board","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"onx001"},"content":"        ChessBoard boardCopy \u003d board.clone();","lastModifiedDate":"2023-11-06"},{"lineNumber":103,"author":{"gitId":"onx001"},"content":"        ChessPiece pieceCopy \u003d boardCopy.getPieceAtCoor(from);","lastModifiedDate":"2023-11-06"},{"lineNumber":104,"author":{"gitId":"onx001"},"content":"        Move moveCopy \u003d new Move(from, to, pieceCopy);","lastModifiedDate":"2023-11-06"},{"lineNumber":105,"author":{"gitId":"onx001"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":106,"author":{"gitId":"onx001"},"content":"            boardCopy.executeMove(moveCopy);","lastModifiedDate":"2023-11-06"},{"lineNumber":107,"author":{"gitId":"onx001"},"content":"        } catch (ChessMasterException e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":108,"author":{"gitId":"onx001"},"content":"            return false;","lastModifiedDate":"2023-11-06"},{"lineNumber":109,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":110,"author":{"gitId":"onx001"},"content":"        boolean stillInCheckAfterMove \u003d boardCopy.isChecked(this.getPieceMoved().getColor());","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":112,"author":{"gitId":"onx001"},"content":"        return !stillInCheckAfterMove;","lastModifiedDate":"2023-11-10"},{"lineNumber":113,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"onx001"},"content":"    public boolean isSkippingPawn() {","lastModifiedDate":"2023-11-08"},{"lineNumber":116,"author":{"gitId":"onx001"},"content":"        if (!(pieceMoved instanceof Pawn)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"onx001"},"content":"            return false;","lastModifiedDate":"2023-11-08"},{"lineNumber":118,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":119,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":120,"author":{"gitId":"onx001"},"content":"        int[] offset \u003d to.calculateOffsetFrom(from);","lastModifiedDate":"2023-11-08"},{"lineNumber":121,"author":{"gitId":"onx001"},"content":"        return Arrays.equals(offset, ChessPiece.UP_UP) || Arrays.equals(offset, ChessPiece.DOWN_DOWN);","lastModifiedDate":"2023-11-08"},{"lineNumber":122,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":123,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":124,"author":{"gitId":"onx001"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"onx001"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"onx001"},"content":"        return \"Move [from\u003d\" + from + \", to\u003d\" + to + \", piece\u003d\" + pieceMoved + \"]\";","lastModifiedDate":"2023-11-08"},{"lineNumber":127,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"onx001"},"content":"    public String toFileString() {","lastModifiedDate":"2023-11-05"},{"lineNumber":130,"author":{"gitId":"onx001"},"content":"        return from + \" \" + to;","lastModifiedDate":"2023-11-07"},{"lineNumber":131,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":132,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":133,"author":{"gitId":"onx001"},"content":"    // @author TongZhengHong","lastModifiedDate":"2023-11-03"},{"lineNumber":134,"author":{"gitId":"onx001"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"onx001"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"onx001"},"content":"        if (obj !\u003d null \u0026\u0026 obj instanceof Move) {","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"onx001"},"content":"            final Move other \u003d (Move) obj;","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"onx001"},"content":"            boolean sameFrom \u003d from.equals(other.getFrom());","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"onx001"},"content":"            boolean sameTo \u003d to.equals(other.getTo());","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"onx001"},"content":"            boolean samePiece \u003d pieceMoved.getPieceName().equals(other.getPieceMoved().getPieceName());","lastModifiedDate":"2023-11-09"},{"lineNumber":141,"author":{"gitId":"onx001"},"content":"            return sameFrom \u0026\u0026 sameTo \u0026\u0026 samePiece;","lastModifiedDate":"2023-11-09"},{"lineNumber":142,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"onx001"},"content":"        return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"onx001"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"ken-ruster":17,"antrikshdhand":43,"onx001":79,"TongZhengHong":6}},{"path":"src/main/java/chessmaster/game/move/MoveFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshdhand"},"content":"package chessmaster.game.move;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.pieces.ChessPiece;","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.pieces.Pawn;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"antrikshdhand"},"content":"public class MoveFactory {","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"antrikshdhand"},"content":"    public static Move createMove(ChessBoard board, Coordinate from, Coordinate to) {","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"antrikshdhand"},"content":"        ChessPiece pieceMoved \u003d board.getPieceAtCoor(from);","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"antrikshdhand"},"content":"        // Check if the move is a castling move","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"antrikshdhand"},"content":"        if (CastleMove.checkIfLeftCastling(pieceMoved, from, to)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"antrikshdhand"},"content":"            return new CastleMove(from, to, pieceMoved, CastleSide.LEFT);","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"antrikshdhand"},"content":"        } else if (CastleMove.checkIfRightCastling(pieceMoved, from, to)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"antrikshdhand"},"content":"            return new CastleMove(from, to, pieceMoved, CastleSide.RIGHT);","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"antrikshdhand"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"antrikshdhand"},"content":"        // Check if move is an en passant move","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"onx001"},"content":"        //@@author onx001","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"onx001"},"content":"        if (pieceMoved instanceof Pawn \u0026\u0026 board.hasEnPassant()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"onx001"},"content":"            Coordinate enPassantCoor \u003d board.getEnPassantCoor();","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"onx001"},"content":"            if (to.equals(enPassantCoor)) {","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"onx001"},"content":"                ChessPiece enPassantPiece \u003d board.getEnPassantPiece();","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"onx001"},"content":"                return new EnPassantMove(from, to, pieceMoved, enPassantPiece);","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"onx001"},"content":"        // Check if the move is a capturing move","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"onx001"},"content":"        Move move;","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"onx001"},"content":"        if (board.isTileOccupied(to)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"onx001"},"content":"            ChessPiece pieceCaptured \u003d board.getPieceAtCoor(to);","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"onx001"},"content":"            move \u003d new Move(from, to, pieceMoved, pieceCaptured);","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"onx001"},"content":"        } else {","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"onx001"},"content":"            move \u003d new Move(from, to, pieceMoved);","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"onx001"},"content":"        return move;","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"onx001"},"content":"    public static PromoteMove createPromoteMove(Coordinate coord, Pawn pawnPromoted, ChessPiece newPiece) {","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"onx001"},"content":"        return new PromoteMove(coord, pawnPromoted, newPiece);","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"onx001"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"antrikshdhand":20,"onx001":25}},{"path":"src/main/java/chessmaster/game/move/PromoteMove.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshdhand"},"content":"package chessmaster.game.move;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.pieces.ChessPiece;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.pieces.Pawn;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"antrikshdhand"},"content":"/**","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"antrikshdhand"},"content":" * Note: a promotion is technically done in two Move objects:","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"antrikshdhand"},"content":" * Move 1. Move the pawn from 7th to 8th row or 2nd to 1st row","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"antrikshdhand"},"content":" * Move 2. Promote the pawn","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"antrikshdhand"},"content":" * This class represents Move #2.","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"antrikshdhand"},"content":" */","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"ken-ruster"},"content":"public class PromoteMove extends Move {","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"ken-ruster"},"content":"    public static final String PROMOTE_MOVE_STRING \u003d \"p %s %s\";","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"antrikshdhand"},"content":"    protected ChessPiece newPiece;","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"antrikshdhand"},"content":"    protected Pawn pawnPromoted;","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"antrikshdhand"},"content":"    public PromoteMove(Coordinate coord, Pawn pawnPromoted, ChessPiece newPiece) {","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"antrikshdhand"},"content":"        super(coord, coord, newPiece);","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"antrikshdhand"},"content":"        this.pawnPromoted \u003d pawnPromoted;","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"antrikshdhand"},"content":"        this.newPiece \u003d newPiece;","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"ken-ruster"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"ken-ruster"},"content":"     * Converts the move to a format to be saved in the .txt file.","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"antrikshdhand"},"content":"     * Only called after the piece has been promoted to.","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"ken-ruster"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"antrikshdhand"},"content":"     * @return String representing the move in the format of the .txt file","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"ken-ruster"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"ken-ruster"},"content":"    @Override","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"ken-ruster"},"content":"    public String toFileString() {","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"antrikshdhand"},"content":"        String out \u003d String.format(PROMOTE_MOVE_STRING, this.getTo(), this.getPieceMoved().toString());","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"ken-ruster"},"content":"        return out;","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"antrikshdhand"},"content":"    public ChessPiece getNewPiece() {","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"antrikshdhand"},"content":"        return newPiece;","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"antrikshdhand"},"content":"    public Pawn getPawnPromoted() {","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"antrikshdhand"},"content":"        return pawnPromoted;","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"ken-ruster"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"ken-ruster":17,"antrikshdhand":27}},{"path":"src/main/java/chessmaster/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.commands.Command;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.commands.ExitCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.commands.HelpCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.commands.HistoryCommand;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.commands.InvalidCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.commands.LegendCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.commands.MoveCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.commands.RestartCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.commands.RulesCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.commands.ShowCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.commands.ShowMovesCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.commands.StepbackCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.commands.CapturedCommand;","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.exceptions.MoveOpponentPieceException;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.exceptions.NullPieceException;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.exceptions.ParseColorException;","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.exceptions.ParseCoordinateException;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Color;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.Move;","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.MoveFactory;","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.pieces.Bishop;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.pieces.ChessPiece;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.pieces.EmptyPiece;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.pieces.King;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.pieces.Knight;","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.pieces.Pawn;","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.pieces.Queen;","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.pieces.Rook;","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"public class Parser {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"ken-ruster"},"content":"    //@@author ken-ruster","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"ken-ruster"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"ken-ruster"},"content":"     * Parses a string telling which chess piece the user wants to promote his piece","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"ken-ruster"},"content":"     * to, and promotes the relevant piece","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"ken-ruster"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"ken-ruster"},"content":"     * @param promoteFrom Chess piece to be promoted.","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"ken-ruster"},"content":"     * @param promoteTo   String representing the type of piece to be promoted to.","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"ken-ruster"},"content":"     * @return Promoted chess piece.","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"ken-ruster"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"ken-ruster"},"content":"    public static ChessPiece parsePromote(ChessPiece promoteFrom, String promoteTo) {","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"ken-ruster"},"content":"        Color color \u003d promoteFrom.getColor();","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"ken-ruster"},"content":"        Coordinate position \u003d promoteFrom.getPosition();","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"ken-ruster"},"content":"        switch (promoteTo) {","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"ken-ruster"},"content":"        case Bishop.BISHOP_WHITE:","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"ken-ruster"},"content":"            return new Bishop(position.getY(), position.getX(), color);","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"ken-ruster"},"content":"        case Queen.QUEEN_WHITE:","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"ken-ruster"},"content":"            return new Queen(position.getY(), position.getX(), color);","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"ken-ruster"},"content":"        case Knight.KNIGHT_WHITE:","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"ken-ruster"},"content":"            return new Knight(position.getY(), position.getX(), color);","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"ken-ruster"},"content":"        case Rook.ROOK_WHITE:","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"ken-ruster"},"content":"            return new Rook(position.getY(), position.getX(), color);","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"ken-ruster"},"content":"        default:","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"ken-ruster"},"content":"            return promoteFrom;","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"TongZhengHong"},"content":"    //@@author TongZhengHong","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"TongZhengHong"},"content":"     * Parses a chess move from user input and creates a Move object. Used to read","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"TongZhengHong"},"content":"     * user inputs during the chess game.","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"TongZhengHong"},"content":"     * @param in    The user input string with 2 algebraic coordinate notations","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"TongZhengHong"},"content":"     *              (e.g., \"e2 e4\").","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"TongZhengHong"},"content":"     * @param board The ChessBoard where the move is taking place.","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"TongZhengHong"},"content":"     * @return Move object containing information about the move to be made.","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"TongZhengHong"},"content":"     * ","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"TongZhengHong"},"content":"     * @throws ParseCoordinateException   If the string entered is not in the","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"TongZhengHong"},"content":"     *                                    algebraic coordinate notation.","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"TongZhengHong"},"content":"     * @throws NullPieceException","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"TongZhengHong"},"content":"     * @throws MoveOpponentPieceException","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"TongZhengHong"},"content":"    public static Move parseMove(String in, ChessBoard board, boolean isPlayerTurn) throws ParseCoordinateException,","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"TongZhengHong"},"content":"            NullPieceException, MoveOpponentPieceException {","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"TongZhengHong"},"content":"        String[] parseArray \u003d in.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"TongZhengHong"},"content":"        if (parseArray.length \u003c 2) {","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"TongZhengHong"},"content":"            throw new ParseCoordinateException();","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate from \u003d Coordinate.parseAlgebraicCoor(parseArray[0]);","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate to \u003d Coordinate.parseAlgebraicCoor(parseArray[1]);","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"TongZhengHong"},"content":"        ChessPiece pieceMoved \u003d board.getPieceAtCoor(from);","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"TongZhengHong"},"content":"        if (pieceMoved.isEmptyPiece()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"TongZhengHong"},"content":"            throw new NullPieceException(from);","lastModifiedDate":"2023-11-05"},{"lineNumber":92,"author":{"gitId":"TongZhengHong"},"content":"        } else if (isPlayerTurn \u0026\u0026 board.isPieceOpponent(pieceMoved)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"TongZhengHong"},"content":"            throw new MoveOpponentPieceException();","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"TongZhengHong"},"content":"        return MoveFactory.createMove(board, from, to);","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"TongZhengHong"},"content":"     * Parses an input string and creates a ChessPiece object at the specified row","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"TongZhengHong"},"content":"     * and column. Used for loading ChessPiece(s) from storage file or loading","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"TongZhengHong"},"content":"     * starting ChessBoard. Returns null for recognised input string to signify that","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"TongZhengHong"},"content":"     * piece is empty (for ChessTile)","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"TongZhengHong"},"content":"     * @param pieceString The string representation of the chess piece, e.g., \"bB\"","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"TongZhengHong"},"content":"     *                    for black bishop.","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"TongZhengHong"},"content":"     * @param row         The row where the piece is located.","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"TongZhengHong"},"content":"     * @param col         The column where the piece is located.","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"TongZhengHong"},"content":"     * @return A ChessPiece object representing the parsed chess piece, or null if","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"TongZhengHong"},"content":"     *         the pieceString is not recognized.","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"TongZhengHong"},"content":"    public static ChessPiece parseChessPiece(String pieceString, int row, int col) {","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"TongZhengHong"},"content":"        switch (pieceString) {","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"TongZhengHong"},"content":"        case Bishop.BISHOP_BLACK:","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"TongZhengHong"},"content":"            return new Bishop(row, col, Color.BLACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"TongZhengHong"},"content":"        case Bishop.BISHOP_WHITE:","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"TongZhengHong"},"content":"            return new Bishop(row, col, Color.WHITE);","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"TongZhengHong"},"content":"        case King.KING_BLACK:","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"TongZhengHong"},"content":"            return new King(row, col, Color.BLACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"TongZhengHong"},"content":"        case King.KING_WHITE:","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"TongZhengHong"},"content":"            return new King(row, col, Color.WHITE);","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"TongZhengHong"},"content":"        case Queen.QUEEN_BLACK:","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"TongZhengHong"},"content":"            return new Queen(row, col, Color.BLACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"TongZhengHong"},"content":"        case Queen.QUEEN_WHITE:","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"TongZhengHong"},"content":"            return new Queen(row, col, Color.WHITE);","lastModifiedDate":"2023-10-22"},{"lineNumber":126,"author":{"gitId":"TongZhengHong"},"content":"        case Knight.KNIGHT_BLACK:","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"TongZhengHong"},"content":"            return new Knight(row, col, Color.BLACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":128,"author":{"gitId":"TongZhengHong"},"content":"        case Knight.KNIGHT_WHITE:","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"TongZhengHong"},"content":"            return new Knight(row, col, Color.WHITE);","lastModifiedDate":"2023-10-22"},{"lineNumber":130,"author":{"gitId":"TongZhengHong"},"content":"        case Pawn.PAWN_BLACK:","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"TongZhengHong"},"content":"            return new Pawn(row, col, Color.BLACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":132,"author":{"gitId":"TongZhengHong"},"content":"        case Pawn.PAWN_WHITE:","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"TongZhengHong"},"content":"            return new Pawn(row, col, Color.WHITE);","lastModifiedDate":"2023-10-22"},{"lineNumber":134,"author":{"gitId":"TongZhengHong"},"content":"        case Rook.ROOK_BLACK:","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"TongZhengHong"},"content":"            return new Rook(row, col, Color.BLACK);","lastModifiedDate":"2023-10-22"},{"lineNumber":136,"author":{"gitId":"TongZhengHong"},"content":"        case Rook.ROOK_WHITE:","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"TongZhengHong"},"content":"            return new Rook(row, col, Color.WHITE);","lastModifiedDate":"2023-10-22"},{"lineNumber":138,"author":{"gitId":"TongZhengHong"},"content":"        default:","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"TongZhengHong"},"content":"            return new EmptyPiece(row, col);","lastModifiedDate":"2023-10-22"},{"lineNumber":140,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":143,"author":{"gitId":"TongZhengHong"},"content":"    //@@author","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"ken-ruster"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":146,"author":{"gitId":"ken-ruster"},"content":"     * Parses the user\u0027s input to return the appropriate Command.","lastModifiedDate":"2023-11-10"},{"lineNumber":147,"author":{"gitId":"ken-ruster"},"content":"     * Returns an InvalidCommand if the input does not match any of the expected patterns.","lastModifiedDate":"2023-11-10"},{"lineNumber":148,"author":{"gitId":"ken-ruster"},"content":"     * Used to discern the program\u0027s appropriate response to the user\u0027s input.","lastModifiedDate":"2023-11-10"},{"lineNumber":149,"author":{"gitId":"ken-ruster"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":150,"author":{"gitId":"ken-ruster"},"content":"     * @param in User\u0027s input, stored as a String","lastModifiedDate":"2023-11-10"},{"lineNumber":151,"author":{"gitId":"ken-ruster"},"content":"     * @return A command corresponding to user input, or InvalidCommand if the input is not recognised","lastModifiedDate":"2023-11-10"},{"lineNumber":152,"author":{"gitId":"ken-ruster"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":153,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":154,"author":{"gitId":"TongZhengHong"},"content":"    public static Command parseCommand(String in) {","lastModifiedDate":"2023-10-22"},{"lineNumber":155,"author":{"gitId":"TongZhengHong"},"content":"        String[] splitInputStrings \u003d in.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-10-22"},{"lineNumber":156,"author":{"gitId":"TongZhengHong"},"content":"        String commandString \u003d splitInputStrings[0];","lastModifiedDate":"2023-10-22"},{"lineNumber":157,"author":{"gitId":"TongZhengHong"},"content":"        String payload \u003d splitInputStrings.length \u003e 1 ? splitInputStrings[1] : \"\"; // Remaining input text","lastModifiedDate":"2023-11-04"},{"lineNumber":158,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":159,"author":{"gitId":"TongZhengHong"},"content":"        switch (commandString) {","lastModifiedDate":"2023-10-22"},{"lineNumber":160,"author":{"gitId":"antrikshdhand"},"content":"        case MoveCommand.MOVE_COMMAND_STRING:","lastModifiedDate":"2023-11-07"},{"lineNumber":161,"author":{"gitId":"TongZhengHong"},"content":"            return new MoveCommand(payload);","lastModifiedDate":"2023-11-05"},{"lineNumber":162,"author":{"gitId":"TongZhengHong"},"content":"        case ShowMovesCommand.SHOW_MOVES_COMMAND_STRING:","lastModifiedDate":"2023-11-04"},{"lineNumber":163,"author":{"gitId":"TongZhengHong"},"content":"            return new ShowMovesCommand(payload);","lastModifiedDate":"2023-11-04"},{"lineNumber":164,"author":{"gitId":"antrikshdhand"},"content":"        case ShowCommand.SHOW_COMMAND_STRING:","lastModifiedDate":"2023-11-07"},{"lineNumber":165,"author":{"gitId":"TriciaBK"},"content":"            return new ShowCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"antrikshdhand"},"content":"        case RulesCommand.RULES_COMMAND_STRING:","lastModifiedDate":"2023-11-07"},{"lineNumber":167,"author":{"gitId":"TriciaBK"},"content":"            return new RulesCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"antrikshdhand"},"content":"        case HelpCommand.HELP_COMMAND_STRING:","lastModifiedDate":"2023-11-07"},{"lineNumber":169,"author":{"gitId":"onx001"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"TriciaBK"},"content":"        case LegendCommand.LEGEND_COMMAND_STRING:","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"TriciaBK"},"content":"            return new LegendCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"TriciaBK"},"content":"        case ExitCommand.EXIT_COMMAND_STRING:","lastModifiedDate":"2023-11-09"},{"lineNumber":173,"author":{"gitId":"TriciaBK"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":174,"author":{"gitId":"TriciaBK"},"content":"        case RestartCommand.RESTART_COMMAND_STRING:","lastModifiedDate":"2023-11-09"},{"lineNumber":175,"author":{"gitId":"TriciaBK"},"content":"            return new RestartCommand();","lastModifiedDate":"2023-11-08"},{"lineNumber":176,"author":{"gitId":"antrikshdhand"},"content":"        case HistoryCommand.HISTORY_COMMAND_STRING:","lastModifiedDate":"2023-11-07"},{"lineNumber":177,"author":{"gitId":"antrikshdhand"},"content":"            return new HistoryCommand();","lastModifiedDate":"2023-11-07"},{"lineNumber":178,"author":{"gitId":"antrikshdhand"},"content":"        case StepbackCommand.STEPBACK_COMMAND_STRING:","lastModifiedDate":"2023-11-09"},{"lineNumber":179,"author":{"gitId":"antrikshdhand"},"content":"            return new StepbackCommand(payload);","lastModifiedDate":"2023-11-09"},{"lineNumber":180,"author":{"gitId":"antrikshdhand"},"content":"        case CapturedCommand.CAPTURED_COMMAND_STRING:","lastModifiedDate":"2023-11-12"},{"lineNumber":181,"author":{"gitId":"antrikshdhand"},"content":"            return new CapturedCommand();","lastModifiedDate":"2023-11-12"},{"lineNumber":182,"author":{"gitId":"onx001"},"content":"        default:","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"TongZhengHong"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-11-05"},{"lineNumber":184,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":186,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"TongZhengHong"},"content":"    //@@author TongZhengHong","lastModifiedDate":"2023-10-27"},{"lineNumber":188,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":189,"author":{"gitId":"TongZhengHong"},"content":"     * Parses a player\u0027s color from a provided string and returns the corresponding Color enumeration.","lastModifiedDate":"2023-11-03"},{"lineNumber":190,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":191,"author":{"gitId":"TongZhengHong"},"content":"     * This method takes an input color string and converts it into the appropriate Color enumeration value, ","lastModifiedDate":"2023-11-03"},{"lineNumber":192,"author":{"gitId":"TongZhengHong"},"content":"     * which can be either \u0027WHITE\u0027 or \u0027BLACK\u0027. ","lastModifiedDate":"2023-11-03"},{"lineNumber":193,"author":{"gitId":"TongZhengHong"},"content":"     * ","lastModifiedDate":"2023-11-03"},{"lineNumber":194,"author":{"gitId":"TongZhengHong"},"content":"     * It ensures that the provided color is valid and not \u0027EMPTY\u0027 since a player color can only be black or white.","lastModifiedDate":"2023-11-03"},{"lineNumber":195,"author":{"gitId":"TongZhengHong"},"content":"     * If the input does not match any valid color, a ParseColorException is thrown.","lastModifiedDate":"2023-11-03"},{"lineNumber":196,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":197,"author":{"gitId":"TongZhengHong"},"content":"     * @param inputColorString A string representing the player\u0027s color (\u0027WHITE\u0027 or \u0027BLACK\u0027).","lastModifiedDate":"2023-11-03"},{"lineNumber":198,"author":{"gitId":"TongZhengHong"},"content":"     * @return The Color enumeration corresponding to the parsed color.","lastModifiedDate":"2023-11-03"},{"lineNumber":199,"author":{"gitId":"TongZhengHong"},"content":"     * @throws ParseColorException If the input color is not valid or if it is \u0027EMPTY\u0027.","lastModifiedDate":"2023-11-03"},{"lineNumber":200,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":201,"author":{"gitId":"TongZhengHong"},"content":"    public static Color parsePlayerColor(String inputColorString) throws ParseColorException {","lastModifiedDate":"2023-10-23"},{"lineNumber":202,"author":{"gitId":"TongZhengHong"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":203,"author":{"gitId":"TongZhengHong"},"content":"            Color color \u003d Color.valueOf(inputColorString);","lastModifiedDate":"2023-11-03"},{"lineNumber":204,"author":{"gitId":"TongZhengHong"},"content":"            if (color.isEmpty()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":205,"author":{"gitId":"TongZhengHong"},"content":"                throw new ParseColorException();","lastModifiedDate":"2023-11-03"},{"lineNumber":206,"author":{"gitId":"TongZhengHong"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":207,"author":{"gitId":"TongZhengHong"},"content":"            return color;","lastModifiedDate":"2023-11-03"},{"lineNumber":208,"author":{"gitId":"TongZhengHong"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"TongZhengHong"},"content":"            throw new ParseColorException();","lastModifiedDate":"2023-10-22"},{"lineNumber":210,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":211,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":212,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":213,"author":{"gitId":"onx001"},"content":"    //@@author onx001","lastModifiedDate":"2023-11-01"},{"lineNumber":214,"author":{"gitId":"onx001"},"content":"    public static int parseDifficulty(String inputDifficultyString) throws NumberFormatException {","lastModifiedDate":"2023-11-01"},{"lineNumber":215,"author":{"gitId":"onx001"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":216,"author":{"gitId":"onx001"},"content":"            return Integer.parseInt(inputDifficultyString);","lastModifiedDate":"2023-11-01"},{"lineNumber":217,"author":{"gitId":"onx001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":218,"author":{"gitId":"onx001"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2023-11-01"},{"lineNumber":219,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":220,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":221,"author":{"gitId":"onx001"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ken-ruster":40,"antrikshdhand":16,"TriciaBK":18,"onx001":15,"TongZhengHong":132}},{"path":"src/main/java/chessmaster/pieces/Bishop.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.pieces;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Color;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"public class Bishop extends ChessPiece {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"    public static final String BISHOP_WHITE \u003d \"b\"; // ♗","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"    public static final String BISHOP_BLACK \u003d \"B\"; // ♝","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"    public static final int[][] DIRECTIONS \u003d {","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"        UP_LEFT, UP_RIGHT, DOWN_LEFT, DOWN_RIGHT,","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"    };","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"    ","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"onx001"},"content":"    protected static int points \u003d 30;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"onx001"},"content":"    protected static int[][] boardWeight \u003d ","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"onx001"},"content":"        {{-2,-1,-1,-1,-1,-1,-1,-2},","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"onx001"},"content":"        {-1,0,0,0,0,0,0,-1},","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"onx001"},"content":"        {-1,0,1,1,1,1,0,-1},","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"onx001"},"content":"        {-1,0,1,1,1,1,0,-1},","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"onx001"},"content":"        {-1,0,1,1,1,1,0,-1},","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"onx001"},"content":"        {-1,0,1,1,1,1,0,-1},","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"onx001"},"content":"        {-1,0,0,0,0,0,0,-1},","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"onx001"},"content":"        {-2,-1,-1,-1,-1,-1,-1,-2}};","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"    public Bishop(int row, int col, Color color) {","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"        super(row, col, color);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"onx001"},"content":"        this.setPoints(points);","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"onx001"},"content":"        this.setBoardWeight(boardWeight);","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"        assert color !\u003d Color.EMPTY : \"Bishop piece should have either black or white color\";","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"onx001"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"onx001"},"content":"     * Returns available coordinates in multiple diagonal directions from the current position. ","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"onx001"},"content":"     * @param board the current board","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"onx001"},"content":"     * @return available coordinates in a 2D array. The first index is of the direction and the second","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"onx001"},"content":"     *     is of the coordinates in that direction.","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"onx001"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"    public Coordinate[] getPseudoLegalCoordinates(ChessBoard board) {","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate[][] result \u003d new Coordinate[DIRECTIONS.length][0];","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"        for (int dir \u003d 0; dir \u003c DIRECTIONS.length; dir++) {","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"            int offsetX \u003d DIRECTIONS[dir][0];","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"            int offsetY \u003d DIRECTIONS[dir][1];","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"            int multiplier \u003d 1;","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"onx001"},"content":"            boolean isBlocked \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"            ArrayList\u003cCoordinate\u003e possibleCoordInDirection \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"            ","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"            while (!isBlocked \u0026\u0026 multiplier \u003c ChessBoard.SIZE \u0026\u0026 position.isOffsetWithinBoard(offsetX, offsetY)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"                Coordinate possibleCoord \u003d position.addOffsetToCoordinate(offsetX, offsetY);","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"ken-ruster"},"content":"                ChessPiece destPiece \u003d board.getPieceAtCoor(possibleCoord);","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"TongZhengHong"},"content":"                isBlocked \u003d !destPiece.isEmptyPiece();","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"TongZhengHong"},"content":"                if (destPiece.isEmptyPiece() || isOpponent(destPiece)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"onx001"},"content":"                    possibleCoordInDirection.add(possibleCoord);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"onx001"},"content":"                } ","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"TongZhengHong"},"content":"                multiplier++;","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"TongZhengHong"},"content":"                offsetX \u003d DIRECTIONS[dir][0] * multiplier;","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"TongZhengHong"},"content":"                offsetY \u003d DIRECTIONS[dir][1] * multiplier;","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"TongZhengHong"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"TongZhengHong"},"content":"            // Convert arraylist to array","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"TongZhengHong"},"content":"            result[dir] \u003d possibleCoordInDirection.toArray(new Coordinate[0]);","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"TongZhengHong"},"content":"        return flattenArray(result);","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"TongZhengHong"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"TongZhengHong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"TongZhengHong"},"content":"        return color \u003d\u003d Color.BLACK ? BISHOP_BLACK : BISHOP_WHITE;","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ken-ruster":1,"onx001":21,"TongZhengHong":56}},{"path":"src/main/java/chessmaster/pieces/ChessPiece.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.pieces;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Color;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.Move;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"onx001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"public abstract class ChessPiece {","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"    public static final int[] CASTLE_LEFT \u003d {-2, 0};","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"    public static final int[] CASTLE_RIGHT \u003d {2, 0};","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"onx001"},"content":"    public static final int[] UP_UP \u003d {0, -2}; ","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"onx001"},"content":"    public static final int[] DOWN_DOWN \u003d {0, 2};","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"    ","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"    protected static final int[] UP_UP_LEFT \u003d {1, -2}; ","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"    protected static final int[] UP_UP_RIGHT \u003d {-1, -2}; ","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"    protected static final int[] DOWN_DOWN_LEFT \u003d {1, 2}; ","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"    protected static final int[] DOWN_DOWN_RIGHT \u003d {-1, 2}; ","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"    protected static final int[] LEFT_UP_LEFT \u003d {2, -1}; ","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"    protected static final int[] LEFT_DOWN_LEFT \u003d {2, 1}; ","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"    protected static final int[] RIGHT_UP_RIGHT \u003d {-2, -1}; ","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"    protected static final int[] RIGHT_DOWN_RIGHT \u003d {-2, 1}; ","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"    protected static final int[] UP \u003d {0, -1}; ","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"    protected static final int[] DOWN \u003d {0, 1}; ","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"    protected static final int[] LEFT \u003d {1, 0};","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"    protected static final int[] RIGHT \u003d {-1, 0};","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"    protected static final int[] UP_LEFT \u003d {1, -1}; ","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"    protected static final int[] UP_RIGHT \u003d {-1, -1}; ","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"    protected static final int[] DOWN_LEFT \u003d {1, 1}; ","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"    protected static final int[] DOWN_RIGHT \u003d {-1, 1};","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"    protected static final String NO_AVAILABLE_MOVES_STRING \u003d ","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"        \"There aren\u0027t any moves available for %s at %s!\";","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"    protected static final String AVAILABLE_MOVES_STRING \u003d ","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"        \"Available coordinates for %s at %s: \";","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"    protected Color color;","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"    protected Coordinate position;","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"onx001"},"content":"    protected boolean hasMoved \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"    protected boolean isCaptured \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"onx001"},"content":"    protected boolean isEnPassant \u003d false;","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"onx001"},"content":"    protected int points \u003d 0;","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"onx001"},"content":"    ","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"onx001"},"content":"    //initialise empty boardweights of 0 for parent class to be used for the AI","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"onx001"},"content":"    private int[][] boardWeight \u003d ","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"onx001"},"content":"        {{0,0,0,0,0,0,0,0},","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"onx001"},"content":"        {0,0,0,0,0,0,0,0},","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"onx001"},"content":"        {0,0,0,0,0,0,0,0},","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"onx001"},"content":"        {0,0,0,0,0,0,0,0},","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"onx001"},"content":"        {0,0,0,0,0,0,0,0},","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"onx001"},"content":"        {0,0,0,0,0,0,0,0},","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"onx001"},"content":"        {0,0,0,0,0,0,0,0},","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"onx001"},"content":"        {0,0,0,0,0,0,0,0}};","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"TongZhengHong"},"content":"    public ChessPiece(int row, int col, Color color) {","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"TongZhengHong"},"content":"        this.position \u003d new Coordinate(col, row);","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"TongZhengHong"},"content":"        this.color \u003d color;","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"ken-ruster"},"content":"    //@@author ken-ruster","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"ken-ruster"},"content":"    public boolean isSameAs(ChessPiece other) {","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"ken-ruster"},"content":"        return (this.toString().equals(other.toString()));","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"ken-ruster"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"ken-ruster"},"content":"     * Gets an array of pseudo-legal coordinates for potential moves.","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"ken-ruster"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"ken-ruster"},"content":"     * This abstract method is meant to be implemented by subclasses to provide an array of pseudo-legal ","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"ken-ruster"},"content":"     * coordinates representing potential moves for a specific chess piece. The coordinates are based on ","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"ken-ruster"},"content":"     * the piece\u0027s movement rules and the current state of the chessboard.","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"ken-ruster"},"content":"     * ","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"ken-ruster"},"content":"     * @param board The current state of the chessboard.","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"ken-ruster"},"content":"     * @return An array of Coordinate objects, each representing a pseudo-legal move or destination for the chess piece.","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"ken-ruster"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"ken-ruster"},"content":"    public abstract Coordinate[] getPseudoLegalCoordinates(ChessBoard board);","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"ken-ruster"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"ken-ruster"},"content":"     * Flatten a 2D array of coordinates into a 1D array.","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"ken-ruster"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"ken-ruster"},"content":"     * This method takes a 2D array of coordinates, representing various directions, ","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"ken-ruster"},"content":"     * and flattens it into a 1D array for easy access and processing.","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"ken-ruster"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"ken-ruster"},"content":"     * @param coordInDirections A 2D array of coordinates to be flattened.","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"ken-ruster"},"content":"     * @return A 1D array of coordinates, combining all coordinates from the input directions.","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"ken-ruster"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"ken-ruster"},"content":"    public Coordinate[] flattenArray(Coordinate[][] coordInDirections) {","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"ken-ruster"},"content":"        ArrayList\u003cCoordinate\u003e flattenedCoordinates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"ken-ruster"},"content":"        for (Coordinate[] direction : coordInDirections) {","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"ken-ruster"},"content":"            for (Coordinate coordinate : direction) {","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"ken-ruster"},"content":"                flattenedCoordinates.add(coordinate);","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"ken-ruster"},"content":"        return flattenedCoordinates.toArray(new Coordinate[0]);","lastModifiedDate":"2023-11-07"},{"lineNumber":98,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"onx001"},"content":"    //@@author onx001","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"onx001"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"onx001"},"content":"     * Gets an array of legal coordinates representing potential moves that adhere to game rules.","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"onx001"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"onx001"},"content":"     * This method calculates and provides an array of legal coordinates, which represent potential ","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"onx001"},"content":"     * moves for the chess piece, based on its movement rules and the current state of the chessboard. ","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"onx001"},"content":"     * These coordinates are filtered to ensure they adhere to the game rules, including preventing ","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"onx001"},"content":"     * moves that result in the player\u0027s own king being in check.","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"onx001"},"content":"     * ","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"onx001"},"content":"     * @param board The current state of the chessboard.","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"onx001"},"content":"     * @return An array of Coordinate objects, each representing a legal move or destination for the chess piece.","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"onx001"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"onx001"},"content":"    public Coordinate[] getLegalCoordinates(ChessBoard board) {","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"onx001"},"content":"        Coordinate[] pseudoLegalCoordinates \u003d getPseudoLegalCoordinates(board);","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"onx001"},"content":"        Move[] allLegalMoves \u003d board.getLegalMoves(this.color);","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":116,"author":{"gitId":"onx001"},"content":"        ArrayList\u003cCoordinate\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"onx001"},"content":"        for (Move legalMove : allLegalMoves) {","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"onx001"},"content":"            for (Coordinate destCoor : pseudoLegalCoordinates) {","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"onx001"},"content":"                Move pseudoLegalMove \u003d new Move(this.position, destCoor, this);","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"onx001"},"content":"                if (pseudoLegalMove.equals(legalMove)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":121,"author":{"gitId":"onx001"},"content":"                    result.add(destCoor);","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"onx001"},"content":"                }","lastModifiedDate":"2023-11-07"},{"lineNumber":123,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":124,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":125,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"onx001"},"content":"        return result.toArray(new Coordinate[0]);","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"onx001"},"content":"    //@@author","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"onx001"},"content":"    public boolean isWhiteKing() {","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"onx001"},"content":"        return this instanceof King \u0026\u0026 this.isWhite();","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"onx001"},"content":"    public boolean isBlackKing() {","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"onx001"},"content":"        return this instanceof King \u0026\u0026 this.isBlack();","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"onx001"},"content":"    public void clearEnPassant() {","lastModifiedDate":"2023-11-06"},{"lineNumber":139,"author":{"gitId":"onx001"},"content":"        this.isEnPassant \u003d false;","lastModifiedDate":"2023-11-06"},{"lineNumber":140,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":141,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":142,"author":{"gitId":"onx001"},"content":"    public boolean isEnPassant() {","lastModifiedDate":"2023-11-06"},{"lineNumber":143,"author":{"gitId":"onx001"},"content":"        return this.isEnPassant;","lastModifiedDate":"2023-11-06"},{"lineNumber":144,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":145,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":146,"author":{"gitId":"onx001"},"content":"    public void setEnPassant() {","lastModifiedDate":"2023-11-06"},{"lineNumber":147,"author":{"gitId":"onx001"},"content":"        this.isEnPassant \u003d true;","lastModifiedDate":"2023-11-06"},{"lineNumber":148,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":149,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":150,"author":{"gitId":"ken-ruster"},"content":"    //@@author ken-ruster","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"ken-ruster"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":152,"author":{"gitId":"ken-ruster"},"content":"     * Convert all the possible moves of the piece into a String.","lastModifiedDate":"2023-11-10"},{"lineNumber":153,"author":{"gitId":"ken-ruster"},"content":"     * Returns a message saying that there are no moves available if there are no legal moves the piece can make.","lastModifiedDate":"2023-11-10"},{"lineNumber":154,"author":{"gitId":"ken-ruster"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":155,"author":{"gitId":"ken-ruster"},"content":"     * @param board Board the piece is located on","lastModifiedDate":"2023-11-10"},{"lineNumber":156,"author":{"gitId":"ken-ruster"},"content":"     * @return A String containing the coordinates the piece is able to move to","lastModifiedDate":"2023-11-10"},{"lineNumber":157,"author":{"gitId":"ken-ruster"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":158,"author":{"gitId":"ken-ruster"},"content":"    public String[] getAvailableCoordinatesString(ChessBoard board) {","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"ken-ruster"},"content":"        StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"ken-ruster"},"content":"        Coordinate[] legalCoordinates \u003d getLegalCoordinates(board);","lastModifiedDate":"2023-11-09"},{"lineNumber":161,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"ken-ruster"},"content":"        if (legalCoordinates.length \u003d\u003d 0) {","lastModifiedDate":"2023-11-09"},{"lineNumber":163,"author":{"gitId":"ken-ruster"},"content":"            return new String[] {","lastModifiedDate":"2023-11-04"},{"lineNumber":164,"author":{"gitId":"ken-ruster"},"content":"                String.format(NO_AVAILABLE_MOVES_STRING, getPieceName(), this.position)","lastModifiedDate":"2023-11-04"},{"lineNumber":165,"author":{"gitId":"ken-ruster"},"content":"            };","lastModifiedDate":"2023-11-04"},{"lineNumber":166,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"ken-ruster"},"content":"        for (Coordinate possibleCoord : legalCoordinates) {","lastModifiedDate":"2023-11-09"},{"lineNumber":169,"author":{"gitId":"ken-ruster"},"content":"            out.append(possibleCoord + \" \");","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"ken-ruster"},"content":"        return new String[] {","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"ken-ruster"},"content":"            String.format(AVAILABLE_MOVES_STRING, getPieceName(), this.position),","lastModifiedDate":"2023-11-04"},{"lineNumber":174,"author":{"gitId":"ken-ruster"},"content":"            out.toString()","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"ken-ruster"},"content":"        };","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"onx001"},"content":"    //@@author onx001","lastModifiedDate":"2023-11-07"},{"lineNumber":178,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"onx001"},"content":"    public Coordinate getPosition() {","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"onx001"},"content":"        return this.position;","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"onx001"},"content":"    public void updatePosition(Coordinate newCoordinate) {","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"onx001"},"content":"        this.position \u003d newCoordinate;","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"onx001"},"content":"    public void setHasMoved() {","lastModifiedDate":"2023-10-22"},{"lineNumber":188,"author":{"gitId":"onx001"},"content":"        this.hasMoved \u003d true;","lastModifiedDate":"2023-10-22"},{"lineNumber":189,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"onx001"},"content":"    public boolean getHasMoved() {","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"onx001"},"content":"        return this.hasMoved;","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"onx001"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":196,"author":{"gitId":"onx001"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":197,"author":{"gitId":"onx001"},"content":"        return \"ChessPiece [color\u003d\" + color + \", position\u003d\" + position + \"]\";","lastModifiedDate":"2023-10-22"},{"lineNumber":198,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":200,"author":{"gitId":"onx001"},"content":"    public Color getColor() {","lastModifiedDate":"2023-10-22"},{"lineNumber":201,"author":{"gitId":"onx001"},"content":"        return color;","lastModifiedDate":"2023-10-22"},{"lineNumber":202,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":203,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":204,"author":{"gitId":"onx001"},"content":"    public boolean getIsCaptured() {","lastModifiedDate":"2023-10-22"},{"lineNumber":205,"author":{"gitId":"onx001"},"content":"        return this.isCaptured;","lastModifiedDate":"2023-10-22"},{"lineNumber":206,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":208,"author":{"gitId":"onx001"},"content":"    public void setIsCaptured() {","lastModifiedDate":"2023-10-22"},{"lineNumber":209,"author":{"gitId":"onx001"},"content":"        this.isCaptured \u003d true;","lastModifiedDate":"2023-10-22"},{"lineNumber":210,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":212,"author":{"gitId":"onx001"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"onx001"},"content":"     * Returns the points of the ChessPiece object. ","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"onx001"},"content":"     * The points are calculated based on the ChessPiece\u0027s position","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"onx001"},"content":"     * @param isUpright Whether the chess board is aligned to the player it is processed for.","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"onx001"},"content":"     * @return The points of the ChessPiece object.","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"onx001"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"onx001"},"content":"    public int getPoints(boolean isUpright) {","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"onx001"},"content":"        int boardPoints;","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"onx001"},"content":"        if (isUpright) {","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"onx001"},"content":"            //finds board weight points of a friendly piece","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"onx001"},"content":"            boardPoints \u003d boardWeight[position.getX()][position.getY()];","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"onx001"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"onx001"},"content":"            //finds board weight points of an opponent piece","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"onx001"},"content":"            boardPoints \u003d boardWeight[7 - position.getX()][position.getY()];","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"onx001"},"content":"        //adds the board weight points to the piece\u0027s points","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"onx001"},"content":"        int points \u003d this.points + boardPoints;","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"onx001"},"content":"        return points;","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":231,"author":{"gitId":"onx001"},"content":"    //@@author","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":233,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":234,"author":{"gitId":"TongZhengHong"},"content":"     * Checks if the ChessPiece object has the same color as a given color.","lastModifiedDate":"2023-10-22"},{"lineNumber":235,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":236,"author":{"gitId":"TongZhengHong"},"content":"     * @param color The color to compare with the ChessPiece\u0027s color.","lastModifiedDate":"2023-10-22"},{"lineNumber":237,"author":{"gitId":"TongZhengHong"},"content":"     * @return true if the ChessPiece has the same color as the provided color; false otherwise.","lastModifiedDate":"2023-10-22"},{"lineNumber":238,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":239,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isSameColorAs(Color color) {","lastModifiedDate":"2023-10-22"},{"lineNumber":240,"author":{"gitId":"TongZhengHong"},"content":"        if (isEmptyPiece()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":241,"author":{"gitId":"TongZhengHong"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":242,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":243,"author":{"gitId":"TongZhengHong"},"content":"        return this.color \u003d\u003d color;","lastModifiedDate":"2023-10-22"},{"lineNumber":244,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":245,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":246,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":247,"author":{"gitId":"TongZhengHong"},"content":"     * Checks if the ChessPiece object is WHTIE.","lastModifiedDate":"2023-10-22"},{"lineNumber":248,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":249,"author":{"gitId":"TongZhengHong"},"content":"     * @return true if the ChessPiece is white; false otherwise.","lastModifiedDate":"2023-10-22"},{"lineNumber":250,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":251,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isWhite() {","lastModifiedDate":"2023-10-22"},{"lineNumber":252,"author":{"gitId":"TongZhengHong"},"content":"        if (isEmptyPiece()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":253,"author":{"gitId":"TongZhengHong"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":254,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":255,"author":{"gitId":"TongZhengHong"},"content":"        return this.color \u003d\u003d Color.WHITE;","lastModifiedDate":"2023-10-22"},{"lineNumber":256,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":257,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":258,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":259,"author":{"gitId":"TongZhengHong"},"content":"     * Checks if the ChessPiece object is BLACK.","lastModifiedDate":"2023-10-22"},{"lineNumber":260,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":261,"author":{"gitId":"TongZhengHong"},"content":"     * @return true if the ChessPiece is white; false otherwise.","lastModifiedDate":"2023-10-22"},{"lineNumber":262,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":263,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isBlack() {","lastModifiedDate":"2023-10-22"},{"lineNumber":264,"author":{"gitId":"TongZhengHong"},"content":"        if (isEmptyPiece()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":265,"author":{"gitId":"TongZhengHong"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":266,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":267,"author":{"gitId":"TongZhengHong"},"content":"        return this.color \u003d\u003d Color.BLACK;","lastModifiedDate":"2023-10-22"},{"lineNumber":268,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":269,"author":{"gitId":"antrikshdhand"},"content":"    ","lastModifiedDate":"2023-10-19"},{"lineNumber":270,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":271,"author":{"gitId":"TongZhengHong"},"content":"     * Checks if the provided ChessPiece object is friendly (has the same color) as the current ChessPiece.","lastModifiedDate":"2023-10-22"},{"lineNumber":272,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":273,"author":{"gitId":"TongZhengHong"},"content":"     * @param chessPiece The ChessPiece to compare with.","lastModifiedDate":"2023-10-22"},{"lineNumber":274,"author":{"gitId":"TongZhengHong"},"content":"     * @return true if the provided ChessPiece is friendly; false otherwise.","lastModifiedDate":"2023-10-22"},{"lineNumber":275,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":276,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isFriendly(ChessPiece chessPiece) {","lastModifiedDate":"2023-10-22"},{"lineNumber":277,"author":{"gitId":"TongZhengHong"},"content":"        if (isEmptyPiece()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":278,"author":{"gitId":"TongZhengHong"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":279,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":280,"author":{"gitId":"TongZhengHong"},"content":"        return chessPiece.color \u003d\u003d this.color;","lastModifiedDate":"2023-10-22"},{"lineNumber":281,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":282,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":283,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":284,"author":{"gitId":"TongZhengHong"},"content":"     * Checks if the provided ChessPiece is an opponent (has a different color) compared to the current ChessPiece.","lastModifiedDate":"2023-10-22"},{"lineNumber":285,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":286,"author":{"gitId":"TongZhengHong"},"content":"     * @param chessPiece The ChessPiece to compare with.","lastModifiedDate":"2023-10-22"},{"lineNumber":287,"author":{"gitId":"TongZhengHong"},"content":"     * @return true if the provided ChessPiece is an opponent; false otherwise.","lastModifiedDate":"2023-10-22"},{"lineNumber":288,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":289,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isOpponent(ChessPiece chessPiece) {","lastModifiedDate":"2023-10-22"},{"lineNumber":290,"author":{"gitId":"TongZhengHong"},"content":"        if (isEmptyPiece()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":291,"author":{"gitId":"TongZhengHong"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":292,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":293,"author":{"gitId":"TongZhengHong"},"content":"        return chessPiece.color !\u003d this.color;","lastModifiedDate":"2023-10-22"},{"lineNumber":294,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":295,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":296,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isEmptyPiece() {","lastModifiedDate":"2023-10-22"},{"lineNumber":297,"author":{"gitId":"TongZhengHong"},"content":"        return this instanceof EmptyPiece;","lastModifiedDate":"2023-10-22"},{"lineNumber":298,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":299,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":300,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isPawn() {","lastModifiedDate":"2023-10-31"},{"lineNumber":301,"author":{"gitId":"TongZhengHong"},"content":"        return this instanceof Pawn;","lastModifiedDate":"2023-10-31"},{"lineNumber":302,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":303,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":304,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isPromotionPiece() {","lastModifiedDate":"2023-10-22"},{"lineNumber":305,"author":{"gitId":"TongZhengHong"},"content":"        return this instanceof Queen || this instanceof Rook ","lastModifiedDate":"2023-10-22"},{"lineNumber":306,"author":{"gitId":"TongZhengHong"},"content":"            || this instanceof Bishop || this instanceof Knight;","lastModifiedDate":"2023-10-22"},{"lineNumber":307,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":308,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":309,"author":{"gitId":"TongZhengHong"},"content":"    public String getPieceName() {","lastModifiedDate":"2023-10-27"},{"lineNumber":310,"author":{"gitId":"TongZhengHong"},"content":"        return this.getClass().getSimpleName();","lastModifiedDate":"2023-10-27"},{"lineNumber":311,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":312,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":313,"author":{"gitId":"onx001"},"content":"    protected void setPoints(int points) {","lastModifiedDate":"2023-10-23"},{"lineNumber":314,"author":{"gitId":"onx001"},"content":"        this.points \u003d points;","lastModifiedDate":"2023-10-23"},{"lineNumber":315,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":316,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":317,"author":{"gitId":"onx001"},"content":"    protected void setBoardWeight(int[][] boardWeight) {","lastModifiedDate":"2023-10-26"},{"lineNumber":318,"author":{"gitId":"onx001"},"content":"        this.boardWeight \u003d boardWeight;","lastModifiedDate":"2023-10-26"},{"lineNumber":319,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":320,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ken-ruster":65,"antrikshdhand":4,"onx001":134,"TongZhengHong":117}},{"path":"src/main/java/chessmaster/pieces/EmptyPiece.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ken-ruster"},"content":"package chessmaster.pieces;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Color;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"ken-ruster"},"content":"public class EmptyPiece extends ChessPiece {","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"    public static final String EMPTY_PIECE \u003d \".\";","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"    public EmptyPiece(int row, int col) {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"        super(row, col, Color.EMPTY);","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"ken-ruster"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"    public Coordinate[] getPseudoLegalCoordinates(ChessBoard board) {","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"        return new Coordinate[0];","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"    // An empty piece will never be moved","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"    @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"    public boolean getHasMoved() {","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"        return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"onx001"},"content":"    //returns the string representation of the empty piece for cloning","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"onx001"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"onx001"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"onx001"},"content":"        return EMPTY_PIECE;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"onx001"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"ken-ruster":13,"onx001":6,"TongZhengHong":12}},{"path":"src/main/java/chessmaster/pieces/King.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.pieces;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Color;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"public class King extends ChessPiece {","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"    public static final String KING_WHITE \u003d \"k\"; // ♔","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"    public static final String KING_BLACK \u003d \"K\"; // ♚","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"onx001"},"content":"    public static final int POINTS \u003d 1000;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"onx001"},"content":"    public static final int[][] BOARDWEIGHT \u003d ","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"onx001"},"content":"        {{-3,-4,-4,-5,-5,-4,-4,-3},","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"onx001"},"content":"        {-3,-4,-4,-5,-5,-4,-4,-3},","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"onx001"},"content":"        {-3,-4,-4,-5,-5,-4,-4,-3},","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"onx001"},"content":"        {-3,-4,-4,-5,-5,-4,-4,-3},","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"onx001"},"content":"        {-2,-3,-3,-4,-4,-3,-3,-2},","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"onx001"},"content":"        {-1,-2,-2,-2,-2,-2,-2,-1},","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"onx001"},"content":"        {2,2,0,0,0,0,2,2},","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"onx001"},"content":"        {2,3,1,0,0,1,3,2}};","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"        ","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"    public static final int[][] DIRECTIONS \u003d {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"onx001"},"content":"        UP, DOWN, LEFT, RIGHT, UP_LEFT, UP_RIGHT, DOWN_LEFT, DOWN_RIGHT, CASTLE_LEFT, CASTLE_RIGHT","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"    };","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"ken-ruster"},"content":"    protected static int points \u003d 1000;","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"    public King(int row, int col, Color color) {","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"        super(row, col, color);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"onx001"},"content":"        this.setPoints(points);","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"onx001"},"content":"        this.setBoardWeight(BOARDWEIGHT);","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"        assert color !\u003d Color.EMPTY : \"King piece should have either black or white color\";","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"    ","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"    public Coordinate[] getPseudoLegalCoordinates(ChessBoard board) {","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate[][] result \u003d new Coordinate[DIRECTIONS.length][0];","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"        for (int dir \u003d 0; dir \u003c DIRECTIONS.length; dir++) {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"            int offsetX \u003d DIRECTIONS[dir][0];","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"            int offsetY \u003d DIRECTIONS[dir][1];","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"            if (!position.isOffsetWithinBoard(offsetX, offsetY)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"                continue; // Possible coordinate out of board","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"            Coordinate newCoor \u003d position.addOffsetToCoordinate(offsetX, offsetY);","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"            ChessPiece destPiece \u003d board.getPieceAtCoor(newCoor);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"            if (DIRECTIONS[dir] \u003d\u003d CASTLE_LEFT) {","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"ken-ruster"},"content":"                Coordinate pos1 \u003d position.addOffsetToCoordinate(-1, 0);","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"ken-ruster"},"content":"                Coordinate pos2 \u003d position.addOffsetToCoordinate(-2, 0);","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"ken-ruster"},"content":"                Coordinate pos3 \u003d position.addOffsetToCoordinate(-3, 0);","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"                Coordinate rookPos \u003d position.addOffsetToCoordinate(-4, 0);","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"TongZhengHong"},"content":"                boolean hasRookMoved \u003d board.getPieceAtCoor(rookPos).hasMoved;","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"TongZhengHong"},"content":"                boolean isSidesEmpty \u003d board.getPieceAtCoor(pos1).isEmptyPiece() ","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"TongZhengHong"},"content":"                    \u0026\u0026 board.getPieceAtCoor(pos2).isEmptyPiece() ","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"TongZhengHong"},"content":"                    \u0026\u0026 board.getPieceAtCoor(pos3).isEmptyPiece();","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"TongZhengHong"},"content":"                if (isSidesEmpty \u0026\u0026 !hasRookMoved \u0026\u0026 !hasMoved) {","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"TongZhengHong"},"content":"                    result[dir] \u003d new Coordinate[]{ newCoor };","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"onx001"},"content":"                }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"TongZhengHong"},"content":"            } else if (DIRECTIONS[dir] \u003d\u003d CASTLE_RIGHT) {","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"ken-ruster"},"content":"                Coordinate pos1 \u003d position.addOffsetToCoordinate(+1, 0);","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"ken-ruster"},"content":"                Coordinate pos2 \u003d position.addOffsetToCoordinate(+2, 0);","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"TongZhengHong"},"content":"                Coordinate rookPos \u003d position.addOffsetToCoordinate(+3, 0);","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"TongZhengHong"},"content":"                boolean hasRookMoved \u003d board.getPieceAtCoor(rookPos).hasMoved;","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"TongZhengHong"},"content":"                boolean isSidesEmpty \u003d board.getPieceAtCoor(pos1).isEmptyPiece() ","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"TongZhengHong"},"content":"                    \u0026\u0026 board.getPieceAtCoor(pos2).isEmptyPiece();","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"TongZhengHong"},"content":"                if (isSidesEmpty \u0026\u0026 !hasRookMoved  \u0026\u0026 !hasMoved) {","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"TongZhengHong"},"content":"                    result[dir] \u003d new Coordinate[]{ newCoor };","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"onx001"},"content":"                }","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"TongZhengHong"},"content":"                ","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"TongZhengHong"},"content":"            } else { // Normal or capture move","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"TongZhengHong"},"content":"                if (destPiece.isEmptyPiece() || isOpponent(destPiece)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"TongZhengHong"},"content":"                    result[dir] \u003d new Coordinate[] { position.addOffsetToCoordinate(offsetX, offsetY) };","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"onx001"},"content":"                }","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"TongZhengHong"},"content":"        return flattenArray(result);","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"TongZhengHong"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"TongZhengHong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"TongZhengHong"},"content":"        return color \u003d\u003d Color.BLACK ? KING_BLACK : KING_WHITE;","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ken-ruster":14,"onx001":17,"TongZhengHong":62}},{"path":"src/main/java/chessmaster/pieces/Knight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.pieces;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Color;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"public class Knight extends ChessPiece {","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"    public static final String KNIGHT_WHITE \u003d \"n\"; // ♘","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"    public static final String KNIGHT_BLACK \u003d \"N\"; // ♞","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"    public static final int[][] DIRECTIONS \u003d {","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"        UP_UP_LEFT, UP_UP_RIGHT, DOWN_DOWN_LEFT, DOWN_DOWN_RIGHT,","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"        LEFT_UP_LEFT, LEFT_DOWN_LEFT, RIGHT_UP_RIGHT, RIGHT_DOWN_RIGHT,","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"    };","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"    ","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"onx001"},"content":"    protected static int points \u003d 30;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"onx001"},"content":"    protected static int[][] boardWeight \u003d ","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"onx001"},"content":"        {{-5,-4,-3,-3,-3,-3,-4,-5},","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"onx001"},"content":"        {-4,-2,0,0,0,0,-2,-4},","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"onx001"},"content":"        {-3,0,1,2,2,1,0,-3},","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"onx001"},"content":"        {-3,1,2,3,3,2,1,-3},","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"onx001"},"content":"        {-3,0,2,3,3,2,0,-3},","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"onx001"},"content":"        {-3,1,1,2,2,1,1,-3},","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"onx001"},"content":"        {-4,-2,0,1,1,0,-2,-4},","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"onx001"},"content":"        {-5,-4,-3,-3,-3,-3,-4,-5}};","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"    public Knight(int row, int col, Color color) {","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"        super(row, col, color);","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"onx001"},"content":"        this.setPoints(points);","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"onx001"},"content":"        this.setBoardWeight(boardWeight);","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"        assert color !\u003d Color.EMPTY : \"Knight piece should have either black or white color\";","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"onx001"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"onx001"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"        return color \u003d\u003d Color.BLACK ? KNIGHT_BLACK : KNIGHT_WHITE;","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"    public Coordinate[] getPseudoLegalCoordinates(ChessBoard board) {","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate[][] result \u003d new Coordinate[DIRECTIONS.length][0];","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"        for (int dir \u003d 0; dir \u003c DIRECTIONS.length; dir++) {","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"            int offsetX \u003d DIRECTIONS[dir][0];","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"            int offsetY \u003d DIRECTIONS[dir][1];","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"            if (!position.isOffsetWithinBoard(offsetX, offsetY)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"                continue; // Possible coordinate out of board","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"            Coordinate newCoor \u003d position.addOffsetToCoordinate(offsetX, offsetY);","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"            ChessPiece destPiece \u003d board.getPieceAtCoor(newCoor);","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"            if (destPiece.isEmptyPiece() || isOpponent(destPiece)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"TongZhengHong"},"content":"                result[dir] \u003d new Coordinate[]{ newCoor };","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"TongZhengHong"},"content":"        return flattenArray(result);","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ken-ruster":3,"onx001":17,"TongZhengHong":42}},{"path":"src/main/java/chessmaster/pieces/Pawn.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.pieces;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Color;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"public class Pawn extends ChessPiece {","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"    public static final String PAWN_WHITE \u003d \"p\"; // ♙","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"    public static final String PAWN_BLACK \u003d \"P\"; // ♟","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"    public static final int[][] DIRECTIONS_UP \u003d {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"        UP_LEFT, UP_RIGHT, UP, UP_UP,","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"    };","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"    public static final int[][] DIRECTIONS_DOWN \u003d {","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"onx001"},"content":"        DOWN_LEFT, DOWN_RIGHT, DOWN, DOWN_DOWN,","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"onx001"},"content":"    };","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"onx001"},"content":"    protected static int points \u003d 10;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"onx001"},"content":"    protected static int[][] boardWeight \u003d ","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"onx001"},"content":"        {{0,0,0,0,0,0,0,0},","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"onx001"},"content":"        {5,5,5,5,5,5,5,5},","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"onx001"},"content":"        {1,1,2,3,3,2,1,1},","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"onx001"},"content":"        {1,1,1,4,4,1,1,1},","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"onx001"},"content":"        {0,0,0,3,3,0,0,0},","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"onx001"},"content":"        {1,-1,-1,0,0,-1,-1,1},","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"onx001"},"content":"        {1,1,1,-2,-2,1,1,1},","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"onx001"},"content":"        {0,0,0,0,0,0,0,0}};","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"    protected boolean enPassed \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"    public Pawn(int row, int col, Color color) {","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"        super(row, col, color);","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"onx001"},"content":"        this.setPoints(points);","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"onx001"},"content":"        this.setBoardWeight(boardWeight);","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"        assert color !\u003d Color.EMPTY : \"Pawn piece should have either black or white color\";","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"    public Coordinate[] getPseudoLegalCoordinates(ChessBoard board) {","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate[][] result \u003d new Coordinate[DIRECTIONS_UP.length][0];","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"        int[][] directions \u003d board.isPieceFriendly(this) ? DIRECTIONS_UP : DIRECTIONS_DOWN;","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"        ","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"onx001"},"content":"        boolean canEnPassant \u003d false;","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"onx001"},"content":"        Coordinate enPassantCoor \u003d null;","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"        for (int dir \u003d 0; dir \u003c DIRECTIONS_UP.length; dir++) {","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"ken-ruster"},"content":"            int offsetX \u003d directions[dir][0];","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"ken-ruster"},"content":"            int offsetY \u003d directions[dir][1];","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"            if (!position.isOffsetWithinBoard(offsetX, offsetY)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"                continue; // Possible coordinate out of board","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"            Coordinate newCoor \u003d position.addOffsetToCoordinate(offsetX, offsetY);","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"            ChessPiece destPiece \u003d board.getPieceAtCoor(newCoor);","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"onx001"},"content":"            boolean isThisPlayerEat \u003d directions[dir] \u003d\u003d UP_LEFT || directions[dir] \u003d\u003d UP_RIGHT;","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"onx001"},"content":"            boolean isOpponentEat \u003d directions[dir] \u003d\u003d DOWN_LEFT || directions[dir] \u003d\u003d DOWN_RIGHT;","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"onx001"},"content":"            if (isThisPlayerEat || isOpponentEat) {","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"onx001"},"content":"                if (board.hasEnPassant()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"onx001"},"content":"                    enPassantCoor \u003d board.getEnPassantCoor();","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"onx001"},"content":"                    ChessPiece enPassantPiece \u003d board.getEnPassantPiece();","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"onx001"},"content":"                    canEnPassant \u003d newCoor.equals(enPassantCoor) \u0026\u0026 isOpponent(enPassantPiece);","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"onx001"},"content":"                }","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"onx001"},"content":"                // Diagonal move: Destination tile has opponent piece","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"onx001"},"content":"                if ( (!destPiece.isEmptyPiece() \u0026\u0026 isOpponent(destPiece)) || canEnPassant) {","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"TongZhengHong"},"content":"                    result[dir] \u003d new Coordinate[]{ newCoor };","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"onx001"},"content":"                }","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"onx001"},"content":"                ","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"onx001"},"content":"            ","lastModifiedDate":"2023-11-07"},{"lineNumber":75,"author":{"gitId":"TongZhengHong"},"content":"            } else if (directions[dir] \u003d\u003d UP || directions[dir] \u003d\u003d DOWN) {","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"TongZhengHong"},"content":"                // Normal move: when destination tile is empty","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"TongZhengHong"},"content":"                if (destPiece.isEmptyPiece()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"TongZhengHong"},"content":"                    result[dir] \u003d new Coordinate[]{ newCoor };","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"onx001"},"content":"                }","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"TongZhengHong"},"content":"            } else if (directions[dir] \u003d\u003d UP_UP || directions[dir] \u003d\u003d DOWN_DOWN) {","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"TongZhengHong"},"content":"                // Double move: first move AND when destination empty AND no blocking piece","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"TongZhengHong"},"content":"                Coordinate blockPos \u003d board.isPieceFriendly(this)","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"TongZhengHong"},"content":"                    ? position.addOffsetToCoordinate(UP[0], UP[1])","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"TongZhengHong"},"content":"                    : position.addOffsetToCoordinate(DOWN[0], DOWN[1]);","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"ken-ruster"},"content":"                ChessPiece blockPiece \u003d board.getPieceAtCoor(blockPos);","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"TongZhengHong"},"content":"                if (!hasMoved \u0026\u0026 blockPiece.isEmptyPiece() \u0026\u0026 destPiece.isEmptyPiece()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"TongZhengHong"},"content":"                    result[dir] \u003d new Coordinate[]{ newCoor };","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"onx001"},"content":"                }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"TongZhengHong"},"content":"        return flattenArray(result);","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"TongZhengHong"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"TongZhengHong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"TongZhengHong"},"content":"        return color \u003d\u003d Color.BLACK ? PAWN_BLACK : PAWN_WHITE;","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ken-ruster":5,"onx001":44,"TongZhengHong":53}},{"path":"src/main/java/chessmaster/pieces/Queen.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.pieces;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Color;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"public class Queen extends ChessPiece {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"    public static final String QUEEN_WHITE \u003d \"q\"; // ♕","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"    public static final String QUEEN_BLACK \u003d \"Q\"; // ♛","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"    public static final int[][] DIRECTIONS \u003d {","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"        UP, DOWN, LEFT, RIGHT, UP_LEFT, UP_RIGHT, DOWN_LEFT, DOWN_RIGHT,","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"    };","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"    ","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"onx001"},"content":"    protected static int points \u003d 90;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"onx001"},"content":"    protected static int[][] boardWeight \u003d ","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"onx001"},"content":"        {{-2,-1,-1,-1,-1,-1,-1,-2},","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"onx001"},"content":"        {-1,0,0,0,0,0,0,-1},","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"onx001"},"content":"        {-1,0,1,1,1,1,0,-1},","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"onx001"},"content":"        {-1,0,1,1,1,1,0,-1},","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"onx001"},"content":"        {-1,0,1,1,1,1,0,-1},","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"onx001"},"content":"        {-1,0,1,1,1,1,0,-1},","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"onx001"},"content":"        {-1,0,0,0,0,0,0,-1},","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"onx001"},"content":"        {-2,-1,-1,-1,-1,-1,-1,-2}};","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"    public Queen(int row, int col, Color color) {","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"        super(row, col, color);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"onx001"},"content":"        this.setPoints(points);","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"onx001"},"content":"        this.setBoardWeight(boardWeight);","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"        assert color !\u003d Color.EMPTY : \"Queen piece should have either black or white color\";","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"    public Coordinate[] getPseudoLegalCoordinates(ChessBoard board) {","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate[][] result \u003d new Coordinate[DIRECTIONS.length][0];","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"        for (int dir \u003d 0; dir \u003c DIRECTIONS.length; dir++) {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"            int offsetX \u003d DIRECTIONS[dir][0];","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"            int offsetY \u003d DIRECTIONS[dir][1];","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"            int multiplier \u003d 1;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"            boolean isBlocked \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"            ArrayList\u003cCoordinate\u003e possibleCoordInDirection \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"            while (!isBlocked \u0026\u0026 multiplier \u003c ChessBoard.SIZE \u0026\u0026 position.isOffsetWithinBoard(offsetX, offsetY)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"                Coordinate possibleCoord \u003d position.addOffsetToCoordinate(offsetX, offsetY);","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"ken-ruster"},"content":"                ChessPiece destPiece \u003d board.getPieceAtCoor(possibleCoord);","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"                isBlocked \u003d !destPiece.isEmptyPiece();","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"                if (destPiece.isEmptyPiece() || isOpponent(destPiece)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"onx001"},"content":"                    possibleCoordInDirection.add(possibleCoord);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"onx001"},"content":"                } ","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"TongZhengHong"},"content":"                multiplier++;","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"TongZhengHong"},"content":"                offsetX \u003d DIRECTIONS[dir][0] * multiplier;","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"TongZhengHong"},"content":"                offsetY \u003d DIRECTIONS[dir][1] * multiplier;","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"TongZhengHong"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"TongZhengHong"},"content":"            // Convert arraylist to array","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"TongZhengHong"},"content":"            result[dir] \u003d possibleCoordInDirection.toArray(new Coordinate[0]);","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"TongZhengHong"},"content":"        return flattenArray(result);","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"TongZhengHong"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"TongZhengHong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"TongZhengHong"},"content":"        return color \u003d\u003d Color.BLACK ? QUEEN_BLACK : QUEEN_WHITE;","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ken-ruster":1,"onx001":14,"TongZhengHong":58}},{"path":"src/main/java/chessmaster/pieces/Rook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.pieces;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Color;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"public class Rook extends ChessPiece {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"    public static final String ROOK_WHITE \u003d \"r\"; // ♖","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"    public static final String ROOK_BLACK \u003d \"R\"; // ♜","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"    public static final int[][] DIRECTIONS \u003d {","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"        UP, DOWN, LEFT, RIGHT,","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"    };","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"onx001"},"content":"    protected static int points \u003d 50;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"onx001"},"content":"    protected static int[][] boardWeight \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"onx001"},"content":"        {{0,0,0,0,0,0,0,0},","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"onx001"},"content":"        {1,2,2,2,2,2,2,1},","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"onx001"},"content":"        {-1,0,0,0,0,0,0,-1},","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"onx001"},"content":"        {-1,0,0,0,0,0,0,-1},","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"onx001"},"content":"        {-1,0,0,0,0,0,0,-1},","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"onx001"},"content":"        {-1,0,0,0,0,0,0,-1},","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"onx001"},"content":"        {-1,0,0,0,0,0,0,-1},","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"onx001"},"content":"        {0,0,0,1,1,0,0,0}};","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"    public Rook(int row, int col, Color color) {","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"        super(row, col, color);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"onx001"},"content":"        this.setPoints(points);","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"onx001"},"content":"        this.setBoardWeight(boardWeight);","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"        assert color !\u003d Color.EMPTY : \"Rook piece should have either black or white color\";","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"    public Coordinate[] getPseudoLegalCoordinates(ChessBoard board) {","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate[][] result \u003d new Coordinate[DIRECTIONS.length][0];","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"        for (int dir \u003d 0; dir \u003c DIRECTIONS.length; dir++) {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"            int offsetX \u003d DIRECTIONS[dir][0];","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"            int offsetY \u003d DIRECTIONS[dir][1];","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"            int multiplier \u003d 1;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"onx001"},"content":"            boolean isBlocked \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"            ArrayList\u003cCoordinate\u003e possibleCoordInDirection \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"            while (!isBlocked \u0026\u0026 multiplier \u003c ChessBoard.SIZE \u0026\u0026 position.isOffsetWithinBoard(offsetX, offsetY)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"                Coordinate possibleCoord \u003d position.addOffsetToCoordinate(offsetX, offsetY);","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"ken-ruster"},"content":"                ChessPiece destPiece \u003d board.getPieceAtCoor(possibleCoord);","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"                ","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"                isBlocked \u003d !destPiece.isEmptyPiece();","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"                if (destPiece.isEmptyPiece() || isOpponent(destPiece)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"onx001"},"content":"                    possibleCoordInDirection.add(possibleCoord);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"onx001"},"content":"                } ","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"TongZhengHong"},"content":"                multiplier++;","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"TongZhengHong"},"content":"                offsetX \u003d DIRECTIONS[dir][0] * multiplier;","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"TongZhengHong"},"content":"                offsetY \u003d DIRECTIONS[dir][1] * multiplier;","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"TongZhengHong"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"TongZhengHong"},"content":"            // Convert arraylist to array","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"TongZhengHong"},"content":"            result[dir] \u003d possibleCoordInDirection.toArray(new Coordinate[0]);","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"TongZhengHong"},"content":"        return flattenArray(result);","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"TongZhengHong"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"TongZhengHong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"TongZhengHong"},"content":"        return color \u003d\u003d Color.BLACK ? ROOK_BLACK : ROOK_WHITE;","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ken-ruster":1,"onx001":15,"TongZhengHong":57}},{"path":"src/main/java/chessmaster/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TriciaBK"},"content":"package chessmaster.storage;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.exceptions.LoadBoardException;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.exceptions.SaveBoardException;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"TriciaBK"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Color;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.parser.Parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.user.CPU;","lastModifiedDate":"2023-11-05"},{"lineNumber":10,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.user.Human;","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.user.Player;","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"TriciaBK"},"content":"import java.io.File;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"TriciaBK"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"TriciaBK"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"TriciaBK"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"ken-ruster"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"ken-ruster"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"TriciaBK"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"TriciaBK"},"content":"public class Storage {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"ken-ruster"},"content":"    //@@author ken_ruster","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"ken-ruster"},"content":"    // private static final String LOAD_BOARD_MISMATCH_STRING \u003d","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"ken-ruster"},"content":"    //         \"Board state does not match state dictated by move history!\";","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"ken-ruster"},"content":"    private static final String PATH_EMPTY_STRING \u003d \"File path cannot be empty or null\";","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"TriciaBK"},"content":"    //@@author TriciaBK","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"TriciaBK"},"content":"    private String filePathString;","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"TriciaBK"},"content":"    private File storageFile;","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"TriciaBK"},"content":"    // private Coordinate lastMove;","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"TriciaBK"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"TriciaBK"},"content":"        filePathString \u003d filePath;","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"TriciaBK"},"content":"        storageFile \u003d new File(filePath);","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"TriciaBK"},"content":"        assert !filePathString.isEmpty() \u0026\u0026 filePath !\u003d null : PATH_EMPTY_STRING;","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"TriciaBK"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"    //@@author TongZhengHong","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"     * Creates a ChessMaster program file to store game state, including necessary","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"     * parent directories.","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"     * @throws ChessMasterException If there is an error creating the file or parent","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"     *                              directories.","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"    private void createChessMasterFile() throws ChessMasterException {","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"        // Create the necessary parent directories for new file","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"        if (!storageFile.exists()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"            storageFile.getParentFile().mkdirs();","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"        // Create file if it does not exist","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"            storageFile.createNewFile();","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"TongZhengHong"},"content":"            throw new ChessMasterException(\"Fatal: Error creating file: \" + filePathString);","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"TriciaBK"},"content":"    //@@author TriciaBK","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"TriciaBK"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"TriciaBK"},"content":"     * Saves the state of the ChessBoard to a file. Writes the player\u0027s color to the","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"TriciaBK"},"content":"     * first line","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"TriciaBK"},"content":"     * and subsequently chess pieces in a 8 x 8 format.","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"TriciaBK"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"TriciaBK"},"content":"     * @param board       The ChessBoard to save.","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"TriciaBK"},"content":"     * @throws ChessMasterException If there is an error saving the board to a file.","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"TriciaBK"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"TriciaBK"},"content":"    public void saveBoard(ChessBoard board, Color currentColor, Human human, CPU cpu) throws ChessMasterException {","lastModifiedDate":"2023-11-05"},{"lineNumber":69,"author":{"gitId":"TriciaBK"},"content":"        createChessMasterFile();","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"TriciaBK"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"TriciaBK"},"content":"            FileWriter fileWriter \u003d new FileWriter(storageFile);","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"TriciaBK"},"content":"            fileWriter.write(board.getPlayerColor().name());","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"TriciaBK"},"content":"            fileWriter.write(System.lineSeparator());","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"TriciaBK"},"content":"            fileWriter.write(String.valueOf(board.getDifficulty()));","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"TriciaBK"},"content":"            fileWriter.write(System.lineSeparator());","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"TriciaBK"},"content":"            fileWriter.write(currentColor.name());","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"TriciaBK"},"content":"            fileWriter.write(System.lineSeparator());","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"ken-ruster"},"content":"            //@@author ken_ruster","lastModifiedDate":"2023-11-05"},{"lineNumber":83,"author":{"gitId":"ken-ruster"},"content":"            // Save human moves","lastModifiedDate":"2023-11-05"},{"lineNumber":84,"author":{"gitId":"ken-ruster"},"content":"            fileWriter.write(human.movesToString());","lastModifiedDate":"2023-11-05"},{"lineNumber":85,"author":{"gitId":"ken-ruster"},"content":"            fileWriter.write(System.lineSeparator());","lastModifiedDate":"2023-11-05"},{"lineNumber":86,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":87,"author":{"gitId":"ken-ruster"},"content":"            // Save cpu moves","lastModifiedDate":"2023-11-05"},{"lineNumber":88,"author":{"gitId":"ken-ruster"},"content":"            fileWriter.write(cpu.movesToString());","lastModifiedDate":"2023-11-05"},{"lineNumber":89,"author":{"gitId":"ken-ruster"},"content":"            fileWriter.write(System.lineSeparator());","lastModifiedDate":"2023-11-05"},{"lineNumber":90,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":91,"author":{"gitId":"TriciaBK"},"content":"            //@@author TriciaBK","lastModifiedDate":"2023-11-05"},{"lineNumber":92,"author":{"gitId":"TriciaBK"},"content":"            /*for (int row \u003d 0; row \u003c ChessBoard.SIZE; row++) {","lastModifiedDate":"2023-11-14"},{"lineNumber":93,"author":{"gitId":"TriciaBK"},"content":"                for (int col \u003d 0; col \u003c ChessBoard.SIZE; col++) {","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"TriciaBK"},"content":"                    ChessPiece piece \u003d board.getPieceAtCoor(new Coordinate(col, row));","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"TriciaBK"},"content":"                    fileWriter.write(piece.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"TriciaBK"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"TriciaBK"},"content":"                fileWriter.write(System.lineSeparator());","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"TriciaBK"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"TriciaBK"},"content":"            for (int row \u003d 0; row \u003c ChessBoard.SIZE; row++) {","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"TriciaBK"},"content":"                for (int col \u003d 0; col \u003c ChessBoard.SIZE; col++) {","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"TriciaBK"},"content":"                    ChessPiece piece \u003d board.getPieceAtCoor(new Coordinate(col, row));","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"TriciaBK"},"content":"                    String hasMovedString \u003d piece.getHasMoved() ? \"1\" : \"0\";","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"TriciaBK"},"content":"                    fileWriter.write(hasMovedString);","lastModifiedDate":"2023-11-03"},{"lineNumber":105,"author":{"gitId":"TriciaBK"},"content":"                }","lastModifiedDate":"2023-11-03"},{"lineNumber":106,"author":{"gitId":"TriciaBK"},"content":"                fileWriter.write(System.lineSeparator());","lastModifiedDate":"2023-11-03"},{"lineNumber":107,"author":{"gitId":"TriciaBK"},"content":"            }*/","lastModifiedDate":"2023-11-14"},{"lineNumber":108,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"TriciaBK"},"content":"            fileWriter.close();","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"TriciaBK"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"TriciaBK"},"content":"            throw new SaveBoardException();","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"TriciaBK"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"TriciaBK"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"TongZhengHong"},"content":"    //@@author TongZhengHong","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"TongZhengHong"},"content":"    public void resetBoard() throws ChessMasterException {","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"TongZhengHong"},"content":"        createChessMasterFile();","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"TongZhengHong"},"content":"        try {","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"TongZhengHong"},"content":"            FileWriter fileWriter \u003d new FileWriter(storageFile);","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"TongZhengHong"},"content":"            fileWriter.write(\"\");","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"TongZhengHong"},"content":"            fileWriter.close();","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"TongZhengHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"TongZhengHong"},"content":"            throw new SaveBoardException();","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":128,"author":{"gitId":"TriciaBK"},"content":"    //@@author TriciaBK","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"TriciaBK"},"content":"    // /**","lastModifiedDate":"2023-11-14"},{"lineNumber":130,"author":{"gitId":"TriciaBK"},"content":"    //  * Loads the state of the chessboard from a file.","lastModifiedDate":"2023-11-14"},{"lineNumber":131,"author":{"gitId":"TriciaBK"},"content":"    //  * Ignores the first line player color information as it can be retrieved with","lastModifiedDate":"2023-11-14"},{"lineNumber":132,"author":{"gitId":"TriciaBK"},"content":"    //  * loadPlayerColor() method","lastModifiedDate":"2023-11-14"},{"lineNumber":133,"author":{"gitId":"TriciaBK"},"content":"    //  *","lastModifiedDate":"2023-11-14"},{"lineNumber":134,"author":{"gitId":"TriciaBK"},"content":"    //  * @return A 2D array of ChessTile objects representing the loaded chessboard.","lastModifiedDate":"2023-11-14"},{"lineNumber":135,"author":{"gitId":"TriciaBK"},"content":"    //  * @throws ChessMasterException If there is an error loading the board from the","lastModifiedDate":"2023-11-14"},{"lineNumber":136,"author":{"gitId":"TriciaBK"},"content":"    //  *                              file.","lastModifiedDate":"2023-11-14"},{"lineNumber":137,"author":{"gitId":"TriciaBK"},"content":"    //  */","lastModifiedDate":"2023-11-14"},{"lineNumber":138,"author":{"gitId":"TriciaBK"},"content":"    /* public ChessTile[][] loadBoard() throws ChessMasterException {","lastModifiedDate":"2023-11-14"},{"lineNumber":139,"author":{"gitId":"TriciaBK"},"content":"        createChessMasterFile();","lastModifiedDate":"2023-10-22"},{"lineNumber":140,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"TriciaBK"},"content":"        blackPieceNum \u003d 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":142,"author":{"gitId":"TriciaBK"},"content":"        whitePieceNum \u003d 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":143,"author":{"gitId":"TriciaBK"},"content":"        blackKingPresent \u003d false;","lastModifiedDate":"2023-11-03"},{"lineNumber":144,"author":{"gitId":"TriciaBK"},"content":"        whiteKingPresent \u003d false;","lastModifiedDate":"2023-11-03"},{"lineNumber":145,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"TriciaBK"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"TriciaBK"},"content":"            fileScanner \u003d new Scanner(storageFile);","lastModifiedDate":"2023-10-22"},{"lineNumber":148,"author":{"gitId":"TriciaBK"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":149,"author":{"gitId":"TriciaBK"},"content":"            throw new LoadBoardException(\"Invalid file path: \" + filePathString);","lastModifiedDate":"2023-10-22"},{"lineNumber":150,"author":{"gitId":"TriciaBK"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"TriciaBK"},"content":"        // Skip first five lines","lastModifiedDate":"2023-11-05"},{"lineNumber":153,"author":{"gitId":"TriciaBK"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2023-11-05"},{"lineNumber":154,"author":{"gitId":"TriciaBK"},"content":"            if (fileScanner.hasNext()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"TriciaBK"},"content":"                fileScanner.nextLine();","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"TriciaBK"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"TriciaBK"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"TriciaBK"},"content":"        int rowIndex \u003d 0;","lastModifiedDate":"2023-10-22"},{"lineNumber":160,"author":{"gitId":"TriciaBK"},"content":"        ChessTile[][] boardTiles \u003d new ChessTile[ChessBoard.SIZE][ChessBoard.SIZE];","lastModifiedDate":"2023-10-22"},{"lineNumber":161,"author":{"gitId":"TriciaBK"},"content":"        while (rowIndex \u003c ChessBoard.SIZE \u0026\u0026 fileScanner.hasNext()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":162,"author":{"gitId":"TriciaBK"},"content":"            String chessRowLine \u003d fileScanner.nextLine().trim();","lastModifiedDate":"2023-11-14"},{"lineNumber":163,"author":{"gitId":"TriciaBK"},"content":"            if (chessRowLine.length() !\u003d ChessBoard.SIZE) {","lastModifiedDate":"2023-10-22"},{"lineNumber":164,"author":{"gitId":"TriciaBK"},"content":"                fileScanner.close();","lastModifiedDate":"2023-10-22"},{"lineNumber":165,"author":{"gitId":"TriciaBK"},"content":"                throw new LoadBoardException();","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"TriciaBK"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"TriciaBK"},"content":"            for (int col \u003d 0; col \u003c ChessBoard.SIZE; col++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"TriciaBK"},"content":"                String chessPieceString \u003d String.valueOf(chessRowLine.charAt(col));","lastModifiedDate":"2023-10-22"},{"lineNumber":170,"author":{"gitId":"TriciaBK"},"content":"                ChessPiece initialPiece \u003d Parser.parseChessPiece(chessPieceString, rowIndex, col);","lastModifiedDate":"2023-10-22"},{"lineNumber":171,"author":{"gitId":"onx001"},"content":"                //@@author onx001","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"onx001"},"content":"                if (!this.isPieceValid(initialPiece)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":173,"author":{"gitId":"onx001"},"content":"                    fileScanner.close();","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"onx001"},"content":"                    throw new LoadBoardException();","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"onx001"},"content":"                }","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"TriciaBK"},"content":"                //@@author TriciaBK","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"TriciaBK"},"content":"                boardTiles[rowIndex][col] \u003d new ChessTile(initialPiece);","lastModifiedDate":"2023-10-22"},{"lineNumber":178,"author":{"gitId":"TriciaBK"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"TriciaBK"},"content":"            rowIndex++;","lastModifiedDate":"2023-10-22"},{"lineNumber":180,"author":{"gitId":"TriciaBK"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"TriciaBK"},"content":"        boolean hasBothKings \u003d blackKingPresent \u0026\u0026 whiteKingPresent;","lastModifiedDate":"2023-11-03"},{"lineNumber":183,"author":{"gitId":"TriciaBK"},"content":"        if (!hasBothKings) {","lastModifiedDate":"2023-11-03"},{"lineNumber":184,"author":{"gitId":"TriciaBK"},"content":"            fileScanner.close();","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"TriciaBK"},"content":"            throw new LoadBoardException();","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"TriciaBK"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"TriciaBK"},"content":"        rowIndex \u003d 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":189,"author":{"gitId":"TriciaBK"},"content":"        while (rowIndex \u003c ChessBoard.SIZE \u0026\u0026 fileScanner.hasNext()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":190,"author":{"gitId":"TriciaBK"},"content":"            String chessRowLine \u003d fileScanner.nextLine().trim();","lastModifiedDate":"2023-11-14"},{"lineNumber":191,"author":{"gitId":"TriciaBK"},"content":"            if (chessRowLine.length() !\u003d ChessBoard.SIZE) {","lastModifiedDate":"2023-11-03"},{"lineNumber":192,"author":{"gitId":"TriciaBK"},"content":"                fileScanner.close();","lastModifiedDate":"2023-11-03"},{"lineNumber":193,"author":{"gitId":"TriciaBK"},"content":"                throw new LoadBoardException();","lastModifiedDate":"2023-11-03"},{"lineNumber":194,"author":{"gitId":"TriciaBK"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":195,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":196,"author":{"gitId":"TriciaBK"},"content":"            for (int col \u003d 0; col \u003c ChessBoard.SIZE; col++) {","lastModifiedDate":"2023-11-03"},{"lineNumber":197,"author":{"gitId":"TriciaBK"},"content":"                boolean hasMoved \u003d Character.getNumericValue(chessRowLine.charAt(col)) \u003e 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":198,"author":{"gitId":"TriciaBK"},"content":"                if (hasMoved) {","lastModifiedDate":"2023-11-03"},{"lineNumber":199,"author":{"gitId":"TriciaBK"},"content":"                    boardTiles[rowIndex][col].getChessPiece().setHasMoved();","lastModifiedDate":"2023-11-03"},{"lineNumber":200,"author":{"gitId":"TriciaBK"},"content":"                }","lastModifiedDate":"2023-11-03"},{"lineNumber":201,"author":{"gitId":"TriciaBK"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":202,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":203,"author":{"gitId":"TriciaBK"},"content":"            rowIndex++;","lastModifiedDate":"2023-11-03"},{"lineNumber":204,"author":{"gitId":"TriciaBK"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":205,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":206,"author":{"gitId":"TriciaBK"},"content":"        fileScanner.close();","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"TriciaBK"},"content":"        return boardTiles;","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"TriciaBK"},"content":"    } */","lastModifiedDate":"2023-11-14"},{"lineNumber":209,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":210,"author":{"gitId":"ken-ruster"},"content":"    //@@author ken-ruster","lastModifiedDate":"2023-11-14"},{"lineNumber":211,"author":{"gitId":"ken-ruster"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":212,"author":{"gitId":"ken-ruster"},"content":"     * Executes moves saved in the txt file so that it can be checked against the save board state.","lastModifiedDate":"2023-11-10"},{"lineNumber":213,"author":{"gitId":"ken-ruster"},"content":"     * Also stores the saved move history of both the human and CPU.","lastModifiedDate":"2023-11-10"},{"lineNumber":214,"author":{"gitId":"ken-ruster"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":215,"author":{"gitId":"ken-ruster"},"content":"     * @param playerColor The color which the player is playing as","lastModifiedDate":"2023-11-10"},{"lineNumber":216,"author":{"gitId":"ken-ruster"},"content":"     * @param human Object representing information about the human player","lastModifiedDate":"2023-11-10"},{"lineNumber":217,"author":{"gitId":"ken-ruster"},"content":"     * @param cpu Object representing information about the computer-controlled player","lastModifiedDate":"2023-11-10"},{"lineNumber":218,"author":{"gitId":"ken-ruster"},"content":"     * @throws ChessMasterException","lastModifiedDate":"2023-11-10"},{"lineNumber":219,"author":{"gitId":"ken-ruster"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":220,"author":{"gitId":"ken-ruster"},"content":"    public ChessBoard executeSavedMoves(Color playerColor,","lastModifiedDate":"2023-11-13"},{"lineNumber":221,"author":{"gitId":"ken-ruster"},"content":"                                  ChessBoard board,","lastModifiedDate":"2023-11-13"},{"lineNumber":222,"author":{"gitId":"ken-ruster"},"content":"                                  Human human,","lastModifiedDate":"2023-11-07"},{"lineNumber":223,"author":{"gitId":"ken-ruster"},"content":"                                  CPU cpu) throws ChessMasterException {","lastModifiedDate":"2023-11-07"},{"lineNumber":224,"author":{"gitId":"ken-ruster"},"content":"        ArrayList\u003cString\u003e moveStringList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-11-14"},{"lineNumber":225,"author":{"gitId":"ken-ruster"},"content":"        ArrayList\u003cString\u003e humanMoves \u003d loadHumanMoves();","lastModifiedDate":"2023-11-07"},{"lineNumber":226,"author":{"gitId":"ken-ruster"},"content":"        ArrayList\u003cString\u003e cpuMoves \u003d loadCPUMoves();","lastModifiedDate":"2023-11-07"},{"lineNumber":227,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":228,"author":{"gitId":"ken-ruster"},"content":"        if (cpuMoves.size() \u003e humanMoves.size() \u0026\u0026 playerColor.isWhite()","lastModifiedDate":"2023-11-14"},{"lineNumber":229,"author":{"gitId":"ken-ruster"},"content":"            || cpuMoves.size() \u003c humanMoves.size() \u0026\u0026 playerColor.isBlack()) {","lastModifiedDate":"2023-11-14"},{"lineNumber":230,"author":{"gitId":"ken-ruster"},"content":"            throw new ChessMasterException(","lastModifiedDate":"2023-11-14"},{"lineNumber":231,"author":{"gitId":"ken-ruster"},"content":"                    \"Moves in save file are invalid! Please start a new game or correct the error\");","lastModifiedDate":"2023-11-14"},{"lineNumber":232,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":233,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":234,"author":{"gitId":"ken-ruster"},"content":"        // Merge move string arrays into a singular array","lastModifiedDate":"2023-11-07"},{"lineNumber":235,"author":{"gitId":"ken-ruster"},"content":"        boolean isPlayerTurn \u003d playerColor.isWhite();","lastModifiedDate":"2023-11-14"},{"lineNumber":236,"author":{"gitId":"ken-ruster"},"content":"        int noOfMoves \u003d humanMoves.size() + cpuMoves.size();","lastModifiedDate":"2023-11-14"},{"lineNumber":237,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":238,"author":{"gitId":"ken-ruster"},"content":"        for (int i \u003d 0; i \u003c noOfMoves; i ++) {","lastModifiedDate":"2023-11-14"},{"lineNumber":239,"author":{"gitId":"ken-ruster"},"content":"            int turnIndex \u003d i / 2;","lastModifiedDate":"2023-11-14"},{"lineNumber":240,"author":{"gitId":"ken-ruster"},"content":"            if (isPlayerTurn \u0026\u0026 humanMoves.size() \u003e\u003d turnIndex + 1) {","lastModifiedDate":"2023-11-14"},{"lineNumber":241,"author":{"gitId":"ken-ruster"},"content":"                moveStringList.add(humanMoves.get(turnIndex));","lastModifiedDate":"2023-11-14"},{"lineNumber":242,"author":{"gitId":"ken-ruster"},"content":"            } else if (cpuMoves.size() \u003e\u003d turnIndex + 1) {","lastModifiedDate":"2023-11-14"},{"lineNumber":243,"author":{"gitId":"ken-ruster"},"content":"                moveStringList.add(cpuMoves.get(turnIndex));","lastModifiedDate":"2023-11-14"},{"lineNumber":244,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-11-14"},{"lineNumber":245,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":246,"author":{"gitId":"ken-ruster"},"content":"            isPlayerTurn \u003d !isPlayerTurn;","lastModifiedDate":"2023-11-14"},{"lineNumber":247,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":248,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":249,"author":{"gitId":"ken-ruster"},"content":"        /*","lastModifiedDate":"2023-11-14"},{"lineNumber":250,"author":{"gitId":"ken-ruster"},"content":"        if (playerColor.isWhite() \u0026\u0026 humanMoves.size() \u003d\u003d cpuMoves.size()) {","lastModifiedDate":"2023-11-14"},{"lineNumber":251,"author":{"gitId":"ken-ruster"},"content":"            for (String move : humanMoves) {","lastModifiedDate":"2023-11-14"},{"lineNumber":252,"author":{"gitId":"ken-ruster"},"content":"                moveStringList.add(move);","lastModifiedDate":"2023-11-14"},{"lineNumber":253,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-11-14"},{"lineNumber":254,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":255,"author":{"gitId":"ken-ruster"},"content":"            for (int i \u003d 0; i \u003c cpuMoves.size(); i ++) {","lastModifiedDate":"2023-11-14"},{"lineNumber":256,"author":{"gitId":"ken-ruster"},"content":"                moveStringList.add(2 * i + 1, cpuMoves.get(i));","lastModifiedDate":"2023-11-14"},{"lineNumber":257,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-11-14"},{"lineNumber":258,"author":{"gitId":"ken-ruster"},"content":"        } else if (playerColor.isBlack() \u0026\u0026 humanMoves.size() \u003d\u003d cpuMoves.size()) {","lastModifiedDate":"2023-11-14"},{"lineNumber":259,"author":{"gitId":"ken-ruster"},"content":"            for (String move : cpuMoves) {","lastModifiedDate":"2023-11-14"},{"lineNumber":260,"author":{"gitId":"ken-ruster"},"content":"                moveStringList.add(move);","lastModifiedDate":"2023-11-14"},{"lineNumber":261,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-11-14"},{"lineNumber":262,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":263,"author":{"gitId":"ken-ruster"},"content":"            for (int i \u003d 0; i \u003c humanMoves.size(); i ++) {","lastModifiedDate":"2023-11-14"},{"lineNumber":264,"author":{"gitId":"ken-ruster"},"content":"                moveStringList.add(2 * i + 1, humanMoves.get(i));","lastModifiedDate":"2023-11-14"},{"lineNumber":265,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-11-14"},{"lineNumber":266,"author":{"gitId":"ken-ruster"},"content":"        } else if (playerColor.isWhite() \u0026\u0026 humanMoves.size() \u003e cpuMoves.size()) {","lastModifiedDate":"2023-11-14"},{"lineNumber":267,"author":{"gitId":"ken-ruster"},"content":"            for (String move : humanMoves) {","lastModifiedDate":"2023-11-07"},{"lineNumber":268,"author":{"gitId":"ken-ruster"},"content":"                moveStringList.add(move);","lastModifiedDate":"2023-11-07"},{"lineNumber":269,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":270,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":271,"author":{"gitId":"ken-ruster"},"content":"            for (int i \u003d 0; i \u003c cpuMoves.size(); i ++) {","lastModifiedDate":"2023-11-07"},{"lineNumber":272,"author":{"gitId":"ken-ruster"},"content":"                moveStringList.add(2 * i + 1, cpuMoves.get(i));","lastModifiedDate":"2023-11-07"},{"lineNumber":273,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":274,"author":{"gitId":"ken-ruster"},"content":"        } else if (playerColor.isBlack() \u0026\u0026 humanMoves.size() \u003e cpuMoves.size()) {","lastModifiedDate":"2023-11-14"},{"lineNumber":275,"author":{"gitId":"ken-ruster"},"content":"            for (String move : cpuMoves) {","lastModifiedDate":"2023-11-07"},{"lineNumber":276,"author":{"gitId":"ken-ruster"},"content":"                moveStringList.add(move);","lastModifiedDate":"2023-11-07"},{"lineNumber":277,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":278,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":279,"author":{"gitId":"ken-ruster"},"content":"            for (int i \u003d 0; i \u003c humanMoves.size(); i ++) {","lastModifiedDate":"2023-11-07"},{"lineNumber":280,"author":{"gitId":"ken-ruster"},"content":"                moveStringList.add(2 * i + 1, humanMoves.get(i));","lastModifiedDate":"2023-11-07"},{"lineNumber":281,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":282,"author":{"gitId":"ken-ruster"},"content":"        } else {","lastModifiedDate":"2023-11-07"},{"lineNumber":283,"author":{"gitId":"ken-ruster"},"content":"            throw new LoadBoardException();","lastModifiedDate":"2023-11-07"},{"lineNumber":284,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":285,"author":{"gitId":"ken-ruster"},"content":"         */","lastModifiedDate":"2023-11-14"},{"lineNumber":286,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":287,"author":{"gitId":"ken-ruster"},"content":"        //Execute move string Array","lastModifiedDate":"2023-11-12"},{"lineNumber":288,"author":{"gitId":"ken-ruster"},"content":"        board.executeMoveArray(moveStringList, human, cpu);","lastModifiedDate":"2023-11-07"},{"lineNumber":289,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":290,"author":{"gitId":"onx001"},"content":"        //@@author onx001","lastModifiedDate":"2023-11-12"},{"lineNumber":291,"author":{"gitId":"onx001"},"content":"        // get the destination coordinate of the last move","lastModifiedDate":"2023-11-12"},{"lineNumber":292,"author":{"gitId":"onx001"},"content":"        /*try {","lastModifiedDate":"2023-11-14"},{"lineNumber":293,"author":{"gitId":"onx001"},"content":"            String lastMoveString \u003d moveStringList.get(moveStringList.size() - 1);","lastModifiedDate":"2023-11-12"},{"lineNumber":294,"author":{"gitId":"onx001"},"content":"            String[] lastMoveArray \u003d lastMoveString.split(\"\\\\s+\");","lastModifiedDate":"2023-11-14"},{"lineNumber":295,"author":{"gitId":"onx001"},"content":"            if (lastMoveArray.length \u003c 2) {","lastModifiedDate":"2023-11-14"},{"lineNumber":296,"author":{"gitId":"onx001"},"content":"                throw new LoadBoardException();","lastModifiedDate":"2023-11-14"},{"lineNumber":297,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-14"},{"lineNumber":298,"author":{"gitId":"onx001"},"content":"            lastMove \u003d Coordinate.parseAlgebraicCoor(lastMoveArray[1]);","lastModifiedDate":"2023-11-12"},{"lineNumber":299,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":300,"author":{"gitId":"onx001"},"content":"            if (otherBoard.getPieceAtCoor(lastMove).isPawn()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":301,"author":{"gitId":"onx001"},"content":"                otherBoard.getPieceAtCoor(lastMove).setEnPassant();","lastModifiedDate":"2023-11-12"},{"lineNumber":302,"author":{"gitId":"onx001"},"content":"                board.getPieceAtCoor(lastMove).setEnPassant();","lastModifiedDate":"2023-11-12"},{"lineNumber":303,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":304,"author":{"gitId":"onx001"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-12"},{"lineNumber":305,"author":{"gitId":"onx001"},"content":"            assert moveStringList.size() \u003d\u003d 0 : \"Last move should be empty\";","lastModifiedDate":"2023-11-12"},{"lineNumber":306,"author":{"gitId":"onx001"},"content":"            throw new LoadBoardException();","lastModifiedDate":"2023-11-14"},{"lineNumber":307,"author":{"gitId":"onx001"},"content":"        }*/","lastModifiedDate":"2023-11-14"},{"lineNumber":308,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":309,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":310,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":311,"author":{"gitId":"TriciaBK"},"content":"        //@@author TriciaBK","lastModifiedDate":"2023-11-12"},{"lineNumber":312,"author":{"gitId":"TriciaBK"},"content":"        // Check obtained board with loaded board state","lastModifiedDate":"2023-11-07"},{"lineNumber":313,"author":{"gitId":"TriciaBK"},"content":"        /*if (!board.equals(otherBoard)) {","lastModifiedDate":"2023-11-14"},{"lineNumber":314,"author":{"gitId":"TriciaBK"},"content":"            throw new LoadBoardException(LOAD_BOARD_MISMATCH_STRING);","lastModifiedDate":"2023-11-10"},{"lineNumber":315,"author":{"gitId":"TriciaBK"},"content":"        }*/","lastModifiedDate":"2023-11-14"},{"lineNumber":316,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":317,"author":{"gitId":"TriciaBK"},"content":"        return board;","lastModifiedDate":"2023-11-13"},{"lineNumber":318,"author":{"gitId":"TriciaBK"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":319,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":320,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":321,"author":{"gitId":"onx001"},"content":"    //@@author onx001","lastModifiedDate":"2023-11-03"},{"lineNumber":322,"author":{"gitId":"onx001"},"content":"    /*private boolean isPieceValid(ChessPiece initialPiece) {","lastModifiedDate":"2023-11-14"},{"lineNumber":323,"author":{"gitId":"onx001"},"content":"        if (initialPiece.isBlackKing()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":324,"author":{"gitId":"onx001"},"content":"            if (blackKingPresent) {","lastModifiedDate":"2023-11-03"},{"lineNumber":325,"author":{"gitId":"onx001"},"content":"                return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":326,"author":{"gitId":"onx001"},"content":"            } else {","lastModifiedDate":"2023-11-03"},{"lineNumber":327,"author":{"gitId":"onx001"},"content":"                blackKingPresent \u003d true;","lastModifiedDate":"2023-11-03"},{"lineNumber":328,"author":{"gitId":"onx001"},"content":"                blackPieceNum++;","lastModifiedDate":"2023-11-03"},{"lineNumber":329,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":330,"author":{"gitId":"onx001"},"content":"        } else if (initialPiece.isWhiteKing()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":331,"author":{"gitId":"onx001"},"content":"            if (whiteKingPresent) {","lastModifiedDate":"2023-11-03"},{"lineNumber":332,"author":{"gitId":"onx001"},"content":"                return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":333,"author":{"gitId":"onx001"},"content":"            } else {","lastModifiedDate":"2023-11-03"},{"lineNumber":334,"author":{"gitId":"onx001"},"content":"                whiteKingPresent \u003d true;","lastModifiedDate":"2023-11-03"},{"lineNumber":335,"author":{"gitId":"onx001"},"content":"                whitePieceNum++;","lastModifiedDate":"2023-11-03"},{"lineNumber":336,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":337,"author":{"gitId":"onx001"},"content":"        } else if (initialPiece.isBlack()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":338,"author":{"gitId":"onx001"},"content":"            if (blackPieceNum \u003e\u003d ChessBoard.MAX_PIECES) {","lastModifiedDate":"2023-11-03"},{"lineNumber":339,"author":{"gitId":"onx001"},"content":"                return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":340,"author":{"gitId":"onx001"},"content":"            } else {","lastModifiedDate":"2023-11-03"},{"lineNumber":341,"author":{"gitId":"onx001"},"content":"                blackPieceNum++;","lastModifiedDate":"2023-11-03"},{"lineNumber":342,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":343,"author":{"gitId":"onx001"},"content":"        } else if (initialPiece.isWhite()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":344,"author":{"gitId":"onx001"},"content":"            if (whitePieceNum \u003e\u003d ChessBoard.MAX_PIECES) {","lastModifiedDate":"2023-11-03"},{"lineNumber":345,"author":{"gitId":"onx001"},"content":"                return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":346,"author":{"gitId":"onx001"},"content":"            } else {","lastModifiedDate":"2023-11-03"},{"lineNumber":347,"author":{"gitId":"onx001"},"content":"                whitePieceNum++;","lastModifiedDate":"2023-11-03"},{"lineNumber":348,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":349,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":350,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":351,"author":{"gitId":"onx001"},"content":"        return true;","lastModifiedDate":"2023-11-03"},{"lineNumber":352,"author":{"gitId":"onx001"},"content":"    }*/","lastModifiedDate":"2023-11-14"},{"lineNumber":353,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":354,"author":{"gitId":"TongZhengHong"},"content":"    //@@author TongZhengHong","lastModifiedDate":"2023-10-27"},{"lineNumber":355,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":356,"author":{"gitId":"TongZhengHong"},"content":"     * Loads the player\u0027s color from a file.","lastModifiedDate":"2023-10-23"},{"lineNumber":357,"author":{"gitId":"TongZhengHong"},"content":"     * Expects the player color information on the first line of text file.","lastModifiedDate":"2023-10-23"},{"lineNumber":358,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":359,"author":{"gitId":"TongZhengHong"},"content":"     * @return The player\u0027s color as a Color enumeration.","lastModifiedDate":"2023-10-23"},{"lineNumber":360,"author":{"gitId":"TongZhengHong"},"content":"     * @throws ChessMasterException If there is an error loading the player\u0027s color","lastModifiedDate":"2023-10-23"},{"lineNumber":361,"author":{"gitId":"TongZhengHong"},"content":"     *                              from the file.","lastModifiedDate":"2023-10-23"},{"lineNumber":362,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":363,"author":{"gitId":"TongZhengHong"},"content":"    public Color loadPlayerColor() throws ChessMasterException {","lastModifiedDate":"2023-10-23"},{"lineNumber":364,"author":{"gitId":"TongZhengHong"},"content":"        createChessMasterFile();","lastModifiedDate":"2023-10-23"},{"lineNumber":365,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":366,"author":{"gitId":"TongZhengHong"},"content":"        Scanner fileScanner;","lastModifiedDate":"2023-10-23"},{"lineNumber":367,"author":{"gitId":"TongZhengHong"},"content":"        try {","lastModifiedDate":"2023-10-23"},{"lineNumber":368,"author":{"gitId":"TongZhengHong"},"content":"            fileScanner \u003d new Scanner(storageFile);","lastModifiedDate":"2023-10-23"},{"lineNumber":369,"author":{"gitId":"TongZhengHong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-10-23"},{"lineNumber":370,"author":{"gitId":"TongZhengHong"},"content":"            throw new LoadBoardException(\"Invalid file path: \" + filePathString);","lastModifiedDate":"2023-10-23"},{"lineNumber":371,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":372,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":373,"author":{"gitId":"TongZhengHong"},"content":"        if (fileScanner.hasNext()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":374,"author":{"gitId":"TongZhengHong"},"content":"            String colorLine \u003d fileScanner.nextLine().trim();","lastModifiedDate":"2023-11-14"},{"lineNumber":375,"author":{"gitId":"TongZhengHong"},"content":"            Color playerColor \u003d Parser.parsePlayerColor(colorLine.toUpperCase());","lastModifiedDate":"2023-11-14"},{"lineNumber":376,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":377,"author":{"gitId":"TongZhengHong"},"content":"            fileScanner.close();","lastModifiedDate":"2023-10-23"},{"lineNumber":378,"author":{"gitId":"TongZhengHong"},"content":"            return playerColor;","lastModifiedDate":"2023-10-23"},{"lineNumber":379,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":380,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":381,"author":{"gitId":"TongZhengHong"},"content":"        fileScanner.close();","lastModifiedDate":"2023-10-23"},{"lineNumber":382,"author":{"gitId":"TongZhengHong"},"content":"        throw new LoadBoardException();","lastModifiedDate":"2023-10-23"},{"lineNumber":383,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":384,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":385,"author":{"gitId":"onx001"},"content":"    //@@author onx001","lastModifiedDate":"2023-11-01"},{"lineNumber":386,"author":{"gitId":"onx001"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":387,"author":{"gitId":"onx001"},"content":"     * Loads the difficulty from a file.","lastModifiedDate":"2023-11-01"},{"lineNumber":388,"author":{"gitId":"onx001"},"content":"     * Expects the difficulty information on the second line of text file.","lastModifiedDate":"2023-11-01"},{"lineNumber":389,"author":{"gitId":"onx001"},"content":"     * @return The difficulty as an integer.","lastModifiedDate":"2023-11-01"},{"lineNumber":390,"author":{"gitId":"onx001"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":391,"author":{"gitId":"onx001"},"content":"    public int loadDifficulty() throws ChessMasterException {","lastModifiedDate":"2023-11-01"},{"lineNumber":392,"author":{"gitId":"onx001"},"content":"        createChessMasterFile();","lastModifiedDate":"2023-11-01"},{"lineNumber":393,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":394,"author":{"gitId":"onx001"},"content":"        Scanner fileScanner;","lastModifiedDate":"2023-11-01"},{"lineNumber":395,"author":{"gitId":"onx001"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":396,"author":{"gitId":"onx001"},"content":"            fileScanner \u003d new Scanner(storageFile);","lastModifiedDate":"2023-11-01"},{"lineNumber":397,"author":{"gitId":"onx001"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":398,"author":{"gitId":"onx001"},"content":"            throw new LoadBoardException(\"Invalid file path: \" + filePathString);","lastModifiedDate":"2023-11-01"},{"lineNumber":399,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":400,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":401,"author":{"gitId":"onx001"},"content":"        // Skip player color first line","lastModifiedDate":"2023-11-03"},{"lineNumber":402,"author":{"gitId":"onx001"},"content":"        if (fileScanner.hasNext()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":403,"author":{"gitId":"onx001"},"content":"            fileScanner.nextLine();","lastModifiedDate":"2023-11-01"},{"lineNumber":404,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":405,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":406,"author":{"gitId":"onx001"},"content":"        if (fileScanner.hasNext()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":407,"author":{"gitId":"onx001"},"content":"            try {","lastModifiedDate":"2023-11-01"},{"lineNumber":408,"author":{"gitId":"onx001"},"content":"                String difficultyLine \u003d fileScanner.nextLine().trim();","lastModifiedDate":"2023-11-14"},{"lineNumber":409,"author":{"gitId":"onx001"},"content":"                int difficulty \u003d Parser.parseDifficulty(difficultyLine);","lastModifiedDate":"2023-11-01"},{"lineNumber":410,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":411,"author":{"gitId":"onx001"},"content":"                fileScanner.close();","lastModifiedDate":"2023-11-01"},{"lineNumber":412,"author":{"gitId":"onx001"},"content":"                if (difficulty \u003c 1 || difficulty \u003e 3) {","lastModifiedDate":"2023-11-03"},{"lineNumber":413,"author":{"gitId":"onx001"},"content":"                    throw new LoadBoardException();","lastModifiedDate":"2023-11-03"},{"lineNumber":414,"author":{"gitId":"onx001"},"content":"                }","lastModifiedDate":"2023-11-03"},{"lineNumber":415,"author":{"gitId":"onx001"},"content":"                return difficulty;","lastModifiedDate":"2023-11-01"},{"lineNumber":416,"author":{"gitId":"onx001"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":417,"author":{"gitId":"onx001"},"content":"                throw new LoadBoardException();","lastModifiedDate":"2023-11-01"},{"lineNumber":418,"author":{"gitId":"onx001"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":419,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":420,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":421,"author":{"gitId":"onx001"},"content":"        fileScanner.close();","lastModifiedDate":"2023-11-01"},{"lineNumber":422,"author":{"gitId":"onx001"},"content":"        throw new LoadBoardException();","lastModifiedDate":"2023-11-01"},{"lineNumber":423,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":424,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":425,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":426,"author":{"gitId":"TriciaBK"},"content":"    //@@author TriciaBK","lastModifiedDate":"2023-11-02"},{"lineNumber":427,"author":{"gitId":"TriciaBK"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":428,"author":{"gitId":"TriciaBK"},"content":"     * Loads the current turn player\u0027s","lastModifiedDate":"2023-11-02"},{"lineNumber":429,"author":{"gitId":"TriciaBK"},"content":"     * @return The difficulty as an integer.","lastModifiedDate":"2023-11-02"},{"lineNumber":430,"author":{"gitId":"TriciaBK"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":431,"author":{"gitId":"TriciaBK"},"content":"    public Color loadCurrentColor() throws ChessMasterException {","lastModifiedDate":"2023-11-02"},{"lineNumber":432,"author":{"gitId":"TriciaBK"},"content":"        createChessMasterFile();","lastModifiedDate":"2023-11-02"},{"lineNumber":433,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":434,"author":{"gitId":"TriciaBK"},"content":"        Scanner fileScanner;","lastModifiedDate":"2023-11-02"},{"lineNumber":435,"author":{"gitId":"TriciaBK"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":436,"author":{"gitId":"TriciaBK"},"content":"            fileScanner \u003d new Scanner(storageFile);","lastModifiedDate":"2023-11-02"},{"lineNumber":437,"author":{"gitId":"TriciaBK"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":438,"author":{"gitId":"TriciaBK"},"content":"            throw new LoadBoardException(\"Invalid file path: \" + filePathString);","lastModifiedDate":"2023-11-02"},{"lineNumber":439,"author":{"gitId":"TriciaBK"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":440,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":441,"author":{"gitId":"TriciaBK"},"content":"        if (fileScanner.hasNext()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":442,"author":{"gitId":"TriciaBK"},"content":"            fileScanner.nextLine();","lastModifiedDate":"2023-11-02"},{"lineNumber":443,"author":{"gitId":"TriciaBK"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":444,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":445,"author":{"gitId":"TriciaBK"},"content":"        if (fileScanner.hasNext()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":446,"author":{"gitId":"TriciaBK"},"content":"            fileScanner.nextLine();","lastModifiedDate":"2023-11-02"},{"lineNumber":447,"author":{"gitId":"TriciaBK"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":448,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":449,"author":{"gitId":"TriciaBK"},"content":"        if (fileScanner.hasNext()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":450,"author":{"gitId":"TriciaBK"},"content":"            String currentColorString \u003d fileScanner.nextLine().trim();","lastModifiedDate":"2023-11-14"},{"lineNumber":451,"author":{"gitId":"TriciaBK"},"content":"            Color color \u003d Parser.parsePlayerColor(currentColorString.toUpperCase());","lastModifiedDate":"2023-11-14"},{"lineNumber":452,"author":{"gitId":"TriciaBK"},"content":"            fileScanner.close();","lastModifiedDate":"2023-11-03"},{"lineNumber":453,"author":{"gitId":"TriciaBK"},"content":"            return color;","lastModifiedDate":"2023-11-03"},{"lineNumber":454,"author":{"gitId":"TriciaBK"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":455,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":456,"author":{"gitId":"TriciaBK"},"content":"        fileScanner.close();","lastModifiedDate":"2023-11-02"},{"lineNumber":457,"author":{"gitId":"TriciaBK"},"content":"        throw new LoadBoardException();","lastModifiedDate":"2023-11-02"},{"lineNumber":458,"author":{"gitId":"TriciaBK"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":459,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":460,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":461,"author":{"gitId":"TriciaBK"},"content":"    public String getFilePath() {","lastModifiedDate":"2023-11-07"},{"lineNumber":462,"author":{"gitId":"TriciaBK"},"content":"        return this.filePathString;","lastModifiedDate":"2023-11-07"},{"lineNumber":463,"author":{"gitId":"TriciaBK"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":464,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":465,"author":{"gitId":"ken-ruster"},"content":"    //@@author ken-ruster","lastModifiedDate":"2023-11-14"},{"lineNumber":466,"author":{"gitId":"ken-ruster"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":467,"author":{"gitId":"ken-ruster"},"content":"     * Loads the history of moves made by the human player in the saved game.","lastModifiedDate":"2023-11-10"},{"lineNumber":468,"author":{"gitId":"ken-ruster"},"content":"     * Parses the moves into Move objects, and returns a null array if no moves were found.","lastModifiedDate":"2023-11-10"},{"lineNumber":469,"author":{"gitId":"ken-ruster"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":470,"author":{"gitId":"ken-ruster"},"content":"     * @return ArrayList containing the move history of the human player","lastModifiedDate":"2023-11-10"},{"lineNumber":471,"author":{"gitId":"ken-ruster"},"content":"     * @throws ChessMasterException","lastModifiedDate":"2023-11-10"},{"lineNumber":472,"author":{"gitId":"ken-ruster"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":473,"author":{"gitId":"ken-ruster"},"content":"    public ArrayList\u003cString\u003e loadHumanMoves() throws ChessMasterException {","lastModifiedDate":"2023-11-07"},{"lineNumber":474,"author":{"gitId":"ken-ruster"},"content":"        createChessMasterFile();","lastModifiedDate":"2023-11-05"},{"lineNumber":475,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":476,"author":{"gitId":"ken-ruster"},"content":"        Scanner fileScanner;","lastModifiedDate":"2023-11-05"},{"lineNumber":477,"author":{"gitId":"ken-ruster"},"content":"        try {","lastModifiedDate":"2023-11-05"},{"lineNumber":478,"author":{"gitId":"ken-ruster"},"content":"            fileScanner \u003d new Scanner(storageFile);","lastModifiedDate":"2023-11-05"},{"lineNumber":479,"author":{"gitId":"ken-ruster"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-11-05"},{"lineNumber":480,"author":{"gitId":"ken-ruster"},"content":"            throw new LoadBoardException(\"Invalid file path: \" + filePathString);","lastModifiedDate":"2023-11-05"},{"lineNumber":481,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":482,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":483,"author":{"gitId":"ken-ruster"},"content":"        // Skip first 3 lines","lastModifiedDate":"2023-11-05"},{"lineNumber":484,"author":{"gitId":"ken-ruster"},"content":"        for (int i \u003d 0; i \u003c 3; i ++) {","lastModifiedDate":"2023-11-05"},{"lineNumber":485,"author":{"gitId":"ken-ruster"},"content":"            if (fileScanner.hasNext()) {","lastModifiedDate":"2023-11-05"},{"lineNumber":486,"author":{"gitId":"ken-ruster"},"content":"                fileScanner.nextLine();","lastModifiedDate":"2023-11-05"},{"lineNumber":487,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-11-05"},{"lineNumber":488,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":489,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":490,"author":{"gitId":"ken-ruster"},"content":"        ArrayList\u003cString\u003e out \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-11-09"},{"lineNumber":491,"author":{"gitId":"ken-ruster"},"content":"        if (fileScanner.hasNext()) {","lastModifiedDate":"2023-11-05"},{"lineNumber":492,"author":{"gitId":"ken-ruster"},"content":"            String movesString \u003d fileScanner.nextLine().trim();","lastModifiedDate":"2023-11-14"},{"lineNumber":493,"author":{"gitId":"ken-ruster"},"content":"            String[] movesArray \u003d movesString.split(Player.MOVE_DELIMITER);","lastModifiedDate":"2023-11-14"},{"lineNumber":494,"author":{"gitId":"ken-ruster"},"content":"            Arrays.stream(movesArray)","lastModifiedDate":"2023-11-07"},{"lineNumber":495,"author":{"gitId":"ken-ruster"},"content":"                    .sequential()","lastModifiedDate":"2023-11-07"},{"lineNumber":496,"author":{"gitId":"ken-ruster"},"content":"                    .filter(x -\u003e !x.equals(\"\"))","lastModifiedDate":"2023-11-07"},{"lineNumber":497,"author":{"gitId":"ken-ruster"},"content":"                    .forEach(x -\u003e out.add(x.trim()));","lastModifiedDate":"2023-11-14"},{"lineNumber":498,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":499,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":500,"author":{"gitId":"ken-ruster"},"content":"        fileScanner.close();","lastModifiedDate":"2023-11-09"},{"lineNumber":501,"author":{"gitId":"ken-ruster"},"content":"        return out;","lastModifiedDate":"2023-11-07"},{"lineNumber":502,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":503,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":504,"author":{"gitId":"ken-ruster"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":505,"author":{"gitId":"ken-ruster"},"content":"     * Loads the history of moves made by the CPU player in the saved game.","lastModifiedDate":"2023-11-10"},{"lineNumber":506,"author":{"gitId":"ken-ruster"},"content":"     * Parses the moves into Move objects, and returns a null array if no moves were found.","lastModifiedDate":"2023-11-10"},{"lineNumber":507,"author":{"gitId":"ken-ruster"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":508,"author":{"gitId":"ken-ruster"},"content":"     * @return ArrayList containing the move history of the CPU player","lastModifiedDate":"2023-11-10"},{"lineNumber":509,"author":{"gitId":"ken-ruster"},"content":"     * @throws ChessMasterException","lastModifiedDate":"2023-11-10"},{"lineNumber":510,"author":{"gitId":"ken-ruster"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":511,"author":{"gitId":"ken-ruster"},"content":"    public ArrayList\u003cString\u003e loadCPUMoves() throws ChessMasterException {","lastModifiedDate":"2023-11-07"},{"lineNumber":512,"author":{"gitId":"ken-ruster"},"content":"        createChessMasterFile();","lastModifiedDate":"2023-11-05"},{"lineNumber":513,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":514,"author":{"gitId":"ken-ruster"},"content":"        Scanner fileScanner;","lastModifiedDate":"2023-11-05"},{"lineNumber":515,"author":{"gitId":"ken-ruster"},"content":"        try {","lastModifiedDate":"2023-11-05"},{"lineNumber":516,"author":{"gitId":"ken-ruster"},"content":"            fileScanner \u003d new Scanner(storageFile);","lastModifiedDate":"2023-11-05"},{"lineNumber":517,"author":{"gitId":"ken-ruster"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-11-05"},{"lineNumber":518,"author":{"gitId":"ken-ruster"},"content":"            throw new LoadBoardException(\"Invalid file path: \" + filePathString);","lastModifiedDate":"2023-11-05"},{"lineNumber":519,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":520,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":521,"author":{"gitId":"ken-ruster"},"content":"        // Skip first 4 lines","lastModifiedDate":"2023-11-05"},{"lineNumber":522,"author":{"gitId":"ken-ruster"},"content":"        for (int i \u003d 0; i \u003c 4; i ++) {","lastModifiedDate":"2023-11-05"},{"lineNumber":523,"author":{"gitId":"ken-ruster"},"content":"            if (fileScanner.hasNext()) {","lastModifiedDate":"2023-11-05"},{"lineNumber":524,"author":{"gitId":"ken-ruster"},"content":"                fileScanner.nextLine();","lastModifiedDate":"2023-11-05"},{"lineNumber":525,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-11-05"},{"lineNumber":526,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":527,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":528,"author":{"gitId":"ken-ruster"},"content":"        ArrayList\u003cString\u003e out \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-11-09"},{"lineNumber":529,"author":{"gitId":"ken-ruster"},"content":"        if (fileScanner.hasNext()) {","lastModifiedDate":"2023-11-05"},{"lineNumber":530,"author":{"gitId":"ken-ruster"},"content":"            String movesString \u003d fileScanner.nextLine().trim();","lastModifiedDate":"2023-11-14"},{"lineNumber":531,"author":{"gitId":"ken-ruster"},"content":"            String[] movesArray \u003d movesString.split(Player.MOVE_DELIMITER);","lastModifiedDate":"2023-11-14"},{"lineNumber":532,"author":{"gitId":"ken-ruster"},"content":"            Arrays.stream(movesArray)","lastModifiedDate":"2023-11-07"},{"lineNumber":533,"author":{"gitId":"ken-ruster"},"content":"                    .sequential()","lastModifiedDate":"2023-11-07"},{"lineNumber":534,"author":{"gitId":"ken-ruster"},"content":"                    .filter(x -\u003e !x.equals(\"\"))","lastModifiedDate":"2023-11-07"},{"lineNumber":535,"author":{"gitId":"ken-ruster"},"content":"                    .forEach(x -\u003e out.add(x.trim()));","lastModifiedDate":"2023-11-14"},{"lineNumber":536,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":537,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":538,"author":{"gitId":"ken-ruster"},"content":"        fileScanner.close();","lastModifiedDate":"2023-11-09"},{"lineNumber":539,"author":{"gitId":"ken-ruster"},"content":"        return out;","lastModifiedDate":"2023-11-07"},{"lineNumber":540,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":541,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":542,"author":{"gitId":"ken-ruster"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"ken-ruster":175,"TriciaBK":196,"onx001":101,"TongZhengHong":70}},{"path":"src/main/java/chessmaster/ui/ExceptionMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.ui;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"public class ExceptionMessages {","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"    public static final String MESSAGE_PARSE_CHESS_PIECE_EXCEPTION \u003d \"Unable to parse chess piece!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"    public static final String MESSAGE_PARSE_COORDINATE_EXCEPTION \u003d \"Unable to parse coordinate!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"TriciaBK"},"content":"    public static final String MESSAGE_SAVE_BOARD_EXCEPTION \u003d \"Unable to save board!\";","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"TriciaBK"},"content":"    public static final String MESSAGE_LOAD_BOARD_EXCEPTION \u003d \"Unable to load board!\";","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"ken-ruster"},"content":"    public static final String MESSAGE_INVALID_MOVE_EXCEPTION \u003d \"Oops, that move isn\u0027t valid!\";","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"    public static final String MESSAGE_NULL_PIECE_EXCEPTION \u003d \"No chess piece found at coordinate!\";","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"    public static final String MESSAGE_NULL_PIECE_COORDINATE_EXCEPTION \u003d ","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"        \"No chess piece found at coordinate %s!\";","lastModifiedDate":"2023-11-05"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"    public static final String MESSAGE_MOVE_OPPONENT_EXCEPTION \u003d \"You have chosen an opponent piece! \"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"            + \"Please choose your pieces!\";","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"    public static final String MESSAGE_PARSE_COLOR_EXCEPTION \u003d \"Unable to parse color!\";","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ken-ruster":1,"TriciaBK":2,"TongZhengHong":12}},{"path":"src/main/java/chessmaster/ui/TextUI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.commands.CommandResult;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.ChessTile;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.Move;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.pieces.ChessPiece;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.user.Player;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"antrikshdhand"},"content":"public final class TextUI {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"    private static final String CHESS_BOARD_TAB \u003d \" \".repeat(4);","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"    private static final String CHESS_BOARD_PADDING \u003d CHESS_BOARD_TAB.repeat(3);","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"    public static final String CHESS_BOARD_DIVIDER \u003d CHESS_BOARD_PADDING + CHESS_BOARD_TAB +","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"            \"_\".repeat(4 * ChessBoard.SIZE + 1);","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"    private static final String COLUMN_HEADER \u003d \"abcdefgh\";","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"    /** A platform independent line separator. */","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"    private static final String DIVIDER \u003d \"_\".repeat(65) + LS;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"     * Format of a comment input line. Comment lines are silently consumed when","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"     * reading user input.","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"    private static final String COMMENT_LINE_FORMAT_REGEX \u003d \"#.*\";","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"antrikshdhand"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"     * Prompts for the command and reads the text entered by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"     * Ignores empty, pure whitespace, and comment lines.","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"     * ","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"     * @return user input string in LOWER case","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"    public String getUserInput(boolean shouldIgnoreEmpty) {","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"        String fullInputLine \u003d \"\";","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"        if (scanner.hasNextLine()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"            fullInputLine \u003d scanner.nextLine().trim();","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"        if (shouldIgnoreEmpty) {","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"            // silently consume all ignored lines","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"            while (shouldIgnore(fullInputLine)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"                if (scanner.hasNextLine()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"                    fullInputLine \u003d scanner.nextLine().trim();","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"                }","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"TongZhengHong"},"content":"        return fullInputLine.toLowerCase();","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"TongZhengHong"},"content":"     * Returns true if the user input line should be ignored.","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"TongZhengHong"},"content":"     * Input should be ignored if it is parsed as a comment, is only whitespace, or","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"TongZhengHong"},"content":"     * is empty.","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"TongZhengHong"},"content":"     * @param rawInputLine full raw user input line.","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"TongZhengHong"},"content":"     * @return true if the entire user input line should be ignored.","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"TongZhengHong"},"content":"    private boolean shouldIgnore(String rawInputLine) {","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"TongZhengHong"},"content":"        boolean isCommentLine \u003d rawInputLine.trim().matches(COMMENT_LINE_FORMAT_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"TongZhengHong"},"content":"        return rawInputLine.trim().isEmpty() || isCommentLine;","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"TongZhengHong"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"TongZhengHong"},"content":"     * Prints one or more lines of text, surrounded by a divider, to the user","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"TongZhengHong"},"content":"     * console.","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"TongZhengHong"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"TongZhengHong"},"content":"     * @param texts The lines of text to be printed.","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"TongZhengHong"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"TongZhengHong"},"content":"    public void printText(String... texts) {","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"antrikshdhand"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-11-07"},{"lineNumber":81,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"TongZhengHong"},"content":"        for (String text : texts) {","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"antrikshdhand"},"content":"            System.out.println(text);","lastModifiedDate":"2023-11-07"},{"lineNumber":84,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"antrikshdhand"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-11-07"},{"lineNumber":87,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"TongZhengHong"},"content":"    //@@author TongZhengHong","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"TongZhengHong"},"content":"    public void printChessBoard(ChessTile[][] tiles) {","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"TongZhengHong"},"content":"        printChessBoardHeader();","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"TongZhengHong"},"content":"        printChessBoardDivider();","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"TongZhengHong"},"content":"        for (int i \u003d 0; i \u003c tiles.length; i++) {","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"TongZhengHong"},"content":"            ChessTile[] row \u003d tiles[i];","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"TongZhengHong"},"content":"            StringBuilder rowString \u003d new StringBuilder();","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"TongZhengHong"},"content":"            for (ChessTile tile : row) {","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"TongZhengHong"},"content":"                rowString.append(ChessTile.TILE_DIVIDER);","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"TongZhengHong"},"content":"                rowString.append(tile.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"TongZhengHong"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"TongZhengHong"},"content":"            int rowNum \u003d 8 - i;","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"TongZhengHong"},"content":"            printChessBoardRow(rowNum, rowString.toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"TongZhengHong"},"content":"        printChessBoardHeader();","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"TongZhengHong"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-11-07"},{"lineNumber":108,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"TongZhengHong"},"content":"    public void printChessBoardWithMove(ChessTile[][] tiles, Move move) {","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"TongZhengHong"},"content":"        printChessBoardHeader();","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"TongZhengHong"},"content":"        printChessBoardDivider();","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"TongZhengHong"},"content":"        for (int i \u003d 0; i \u003c tiles.length; i++) {","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"TongZhengHong"},"content":"            ChessTile[] row \u003d tiles[i];","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"TongZhengHong"},"content":"            StringBuilder rowString \u003d new StringBuilder();","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"TongZhengHong"},"content":"            for (int j \u003d 0; j \u003c tiles.length; j++) {","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"TongZhengHong"},"content":"                rowString.append(ChessTile.TILE_DIVIDER);","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"TongZhengHong"},"content":"                ChessTile tile \u003d row[j];","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"TongZhengHong"},"content":"                Coordinate coord \u003d new Coordinate(j, i);","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"TongZhengHong"},"content":"                boolean isPrevMove \u003d move.getFrom().equals(coord) || ","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"TongZhengHong"},"content":"                    move.getTo().equals(coord);","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"TongZhengHong"},"content":"                String pieceString \u003d isPrevMove ? tile.toStringPrevMove() : tile.toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"TongZhengHong"},"content":"                rowString.append(pieceString);","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"TongZhengHong"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"TongZhengHong"},"content":"            ","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"TongZhengHong"},"content":"            int rowNum \u003d 8 - i;","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"TongZhengHong"},"content":"            printChessBoardRow(rowNum, rowString.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"TongZhengHong"},"content":"        printChessBoardHeader();","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"TongZhengHong"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-11-07"},{"lineNumber":135,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"ken-ruster"},"content":"    //@@author ken-ruster","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"ken-ruster"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"ken-ruster"},"content":"     * Prints the chessboard along with highlighted moves for a specific chess piece.","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"ken-ruster"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"ken-ruster"},"content":"     * This method displays the chessboard, emphasizing available destination squares for a","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"ken-ruster"},"content":"     * selected piece and marking the selected piece itself.","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"ken-ruster"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"ken-ruster"},"content":"     * @param tiles The 2D array of ChessTile objects representing the chessboard.","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"ken-ruster"},"content":"     * @param piece The chess piece for which moves are highlighted.","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"ken-ruster"},"content":"     * @param coordinates An array of coordinates representing available destination squares.","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"ken-ruster"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"ken-ruster"},"content":"    public void printChessBoardAvailableMoves(ChessTile[][] tiles, ChessPiece piece, ","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"ken-ruster"},"content":"        Coordinate[] coordinates) {","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"ken-ruster"},"content":"        printChessBoardHeader();","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"ken-ruster"},"content":"        printChessBoardDivider();","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"ken-ruster"},"content":"        for (int i \u003d 0; i \u003c tiles.length; i++) {","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"ken-ruster"},"content":"            ChessTile[] row \u003d tiles[i];","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"ken-ruster"},"content":"            StringBuilder rowString \u003d new StringBuilder();","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"ken-ruster"},"content":"            for (int j \u003d 0; j \u003c tiles.length; j++) {","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"ken-ruster"},"content":"                rowString.append(ChessTile.TILE_DIVIDER);","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"ken-ruster"},"content":"                ChessTile tile \u003d row[j];","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"ken-ruster"},"content":"                Coordinate coord \u003d new Coordinate(j, i);","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"ken-ruster"},"content":"                String pieceString;","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"ken-ruster"},"content":"                if (Arrays.asList(coordinates).contains(coord)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"ken-ruster"},"content":"                    pieceString \u003d tile.toStringAvailableDest();","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"ken-ruster"},"content":"                } else if (piece.getPosition().equals(coord)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"ken-ruster"},"content":"                    pieceString \u003d tile.toStringSelected();","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"ken-ruster"},"content":"                } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"ken-ruster"},"content":"                    pieceString \u003d tile.toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"ken-ruster"},"content":"                }","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"ken-ruster"},"content":"                rowString.append(pieceString);","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"ken-ruster"},"content":"            int rowNum \u003d 8 - i;","lastModifiedDate":"2023-11-01"},{"lineNumber":176,"author":{"gitId":"ken-ruster"},"content":"            printChessBoardRow(rowNum, rowString.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"ken-ruster"},"content":"        printChessBoardHeader();","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"ken-ruster"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-11-07"},{"lineNumber":180,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"ken-ruster"},"content":"    //@@author","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"TongZhengHong"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"TongZhengHong"},"content":"        printText(UiMessages.WELCOME_MESSAGE);","lastModifiedDate":"2023-10-23"},{"lineNumber":185,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":186,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":187,"author":{"gitId":"TongZhengHong"},"content":"    public void printLoadBoardError() {","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"TongZhengHong"},"content":"        printText(UiMessages.LOAD_BOARD_ERROR_MESSAGE);","lastModifiedDate":"2023-10-23"},{"lineNumber":189,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":190,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":191,"author":{"gitId":"TongZhengHong"},"content":"    public void promptContinuePrevGame(boolean error) {","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"TongZhengHong"},"content":"        if (error) {","lastModifiedDate":"2023-10-23"},{"lineNumber":193,"author":{"gitId":"antrikshdhand"},"content":"            System.out.print(UiMessages.CONTINUE_PREV_GAME_ERROR_MESSAGE);","lastModifiedDate":"2023-11-07"},{"lineNumber":194,"author":{"gitId":"TongZhengHong"},"content":"        } else {","lastModifiedDate":"2023-10-23"},{"lineNumber":195,"author":{"gitId":"antrikshdhand"},"content":"            System.out.print(UiMessages.EXIST_PREV_GAME_MESSAGE);","lastModifiedDate":"2023-11-07"},{"lineNumber":196,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":198,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":199,"author":{"gitId":"onx001"},"content":"    public void promptDifficulty(boolean error) {","lastModifiedDate":"2023-11-01"},{"lineNumber":200,"author":{"gitId":"onx001"},"content":"        if (error) {","lastModifiedDate":"2023-11-01"},{"lineNumber":201,"author":{"gitId":"antrikshdhand"},"content":"            System.out.print(UiMessages.CHOOSE_DIFFICULTY_ERROR_MESSAGE);","lastModifiedDate":"2023-11-07"},{"lineNumber":202,"author":{"gitId":"onx001"},"content":"        } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"antrikshdhand"},"content":"            System.out.print(UiMessages.CHOOSE_DIFFICULTY_MESSAGE);","lastModifiedDate":"2023-11-07"},{"lineNumber":204,"author":{"gitId":"onx001"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":205,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":206,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":207,"author":{"gitId":"TongZhengHong"},"content":"    public void promptStartingColor(boolean error) {","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"TongZhengHong"},"content":"        if (error) {","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"antrikshdhand"},"content":"            System.out.print(UiMessages.CHOOSE_PLAYER_COLOR_ERROR_MESSAGE);","lastModifiedDate":"2023-11-07"},{"lineNumber":210,"author":{"gitId":"TongZhengHong"},"content":"        } else {","lastModifiedDate":"2023-10-23"},{"lineNumber":211,"author":{"gitId":"antrikshdhand"},"content":"            System.out.print(UiMessages.CHOOSE_PLAYER_COLOR_MESSAGE);","lastModifiedDate":"2023-11-07"},{"lineNumber":212,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":213,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":214,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":215,"author":{"gitId":"TongZhengHong"},"content":"    public void printStartNewGame(String colorString) {","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"TongZhengHong"},"content":"        String displayText \u003d String.format(UiMessages.START_NEW_GAME_MESSAGE, colorString);","lastModifiedDate":"2023-10-23"},{"lineNumber":217,"author":{"gitId":"TongZhengHong"},"content":"        printText(displayText);","lastModifiedDate":"2023-10-23"},{"lineNumber":218,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":219,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":220,"author":{"gitId":"TongZhengHong"},"content":"    public void printContinuePrevGame(String colorString, int difficulty) {","lastModifiedDate":"2023-11-06"},{"lineNumber":221,"author":{"gitId":"TongZhengHong"},"content":"        String displayText \u003d String.format(UiMessages.CONTINUE_PREV_GAME_MESSAGE, colorString, difficulty);","lastModifiedDate":"2023-11-06"},{"lineNumber":222,"author":{"gitId":"TongZhengHong"},"content":"        printText(displayText);","lastModifiedDate":"2023-10-23"},{"lineNumber":223,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":224,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":225,"author":{"gitId":"TongZhengHong"},"content":"    public void printPromotePrompt(Coordinate coord) {","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"ken-ruster"},"content":"        String message \u003d String.format(UiMessages.PROMPT_PROMOTE_MESSAGE, coord.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":227,"author":{"gitId":"antrikshdhand"},"content":"        System.out.print(message);","lastModifiedDate":"2023-11-07"},{"lineNumber":228,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":229,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":230,"author":{"gitId":"TongZhengHong"},"content":"    public void printPromoteInvalidMessage() {","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"antrikshdhand"},"content":"        System.out.print(UiMessages.PROMPT_PROMOTE_INVALID_MESSAGE);","lastModifiedDate":"2023-11-07"},{"lineNumber":232,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":233,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":234,"author":{"gitId":"TongZhengHong"},"content":"    public void printCPUThinkingMessage() {","lastModifiedDate":"2023-11-06"},{"lineNumber":235,"author":{"gitId":"antrikshdhand"},"content":"        System.out.println(UiMessages.CHESSMASTER_THINKING_MESSAGE);","lastModifiedDate":"2023-11-07"},{"lineNumber":236,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":237,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":238,"author":{"gitId":"TongZhengHong"},"content":"    public void printCPUMove(Move cpuMove) {","lastModifiedDate":"2023-10-31"},{"lineNumber":239,"author":{"gitId":"TriciaBK"},"content":"        String pieceString \u003d cpuMove.getPieceMoved().getClass().getSimpleName();","lastModifiedDate":"2023-11-09"},{"lineNumber":240,"author":{"gitId":"antrikshdhand"},"content":"        String returnString;","lastModifiedDate":"2023-11-08"},{"lineNumber":241,"author":{"gitId":"antrikshdhand"},"content":"        if (cpuMove.hasCapturedAPiece()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":242,"author":{"gitId":"antrikshdhand"},"content":"            returnString \u003d String.format(","lastModifiedDate":"2023-11-08"},{"lineNumber":243,"author":{"gitId":"antrikshdhand"},"content":"                    UiMessages.CPU_MOVE_AND_CAPTURE_MESSAGE,","lastModifiedDate":"2023-11-08"},{"lineNumber":244,"author":{"gitId":"antrikshdhand"},"content":"                    pieceString, cpuMove.getFrom(), cpuMove.getTo(), cpuMove.getPieceCaptured().getPieceName()","lastModifiedDate":"2023-11-08"},{"lineNumber":245,"author":{"gitId":"antrikshdhand"},"content":"            );","lastModifiedDate":"2023-11-08"},{"lineNumber":246,"author":{"gitId":"antrikshdhand"},"content":"        } else {","lastModifiedDate":"2023-11-08"},{"lineNumber":247,"author":{"gitId":"antrikshdhand"},"content":"            returnString \u003d String.format(UiMessages.CPU_MOVE_MESSAGE, pieceString, cpuMove.getFrom(), cpuMove.getTo());","lastModifiedDate":"2023-11-08"},{"lineNumber":248,"author":{"gitId":"antrikshdhand"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":249,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":250,"author":{"gitId":"antrikshdhand"},"content":"        printText(returnString);","lastModifiedDate":"2023-11-08"},{"lineNumber":251,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":252,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":253,"author":{"gitId":"antrikshdhand"},"content":"    private void printChessBoardDivider() {","lastModifiedDate":"2023-11-09"},{"lineNumber":254,"author":{"gitId":"antrikshdhand"},"content":"        System.out.println(CHESS_BOARD_DIVIDER);","lastModifiedDate":"2023-11-07"},{"lineNumber":255,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":256,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":257,"author":{"gitId":"antrikshdhand"},"content":"    private void printChessBoardHeader() {","lastModifiedDate":"2023-11-09"},{"lineNumber":258,"author":{"gitId":"antrikshdhand"},"content":"        System.out.print(CHESS_BOARD_PADDING + CHESS_BOARD_TAB);","lastModifiedDate":"2023-11-07"},{"lineNumber":259,"author":{"gitId":"TongZhengHong"},"content":"        for (int i \u003d 0; i \u003c COLUMN_HEADER.length(); i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":260,"author":{"gitId":"TongZhengHong"},"content":"            char col \u003d COLUMN_HEADER.charAt(i);","lastModifiedDate":"2023-10-15"},{"lineNumber":261,"author":{"gitId":"antrikshdhand"},"content":"            System.out.printf(\" (%s)\", col);","lastModifiedDate":"2023-11-07"},{"lineNumber":262,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":263,"author":{"gitId":"antrikshdhand"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-11-07"},{"lineNumber":264,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":265,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":266,"author":{"gitId":"antrikshdhand"},"content":"    private void printChessBoardRow(int rowNum, String chessBoardRow) {","lastModifiedDate":"2023-11-09"},{"lineNumber":267,"author":{"gitId":"antrikshdhand"},"content":"        System.out.print(CHESS_BOARD_PADDING);","lastModifiedDate":"2023-11-07"},{"lineNumber":268,"author":{"gitId":"antrikshdhand"},"content":"        System.out.print(String.format(\"(%d) \", rowNum));","lastModifiedDate":"2023-11-07"},{"lineNumber":269,"author":{"gitId":"antrikshdhand"},"content":"        System.out.print(chessBoardRow);","lastModifiedDate":"2023-11-07"},{"lineNumber":270,"author":{"gitId":"antrikshdhand"},"content":"        System.out.print(ChessTile.TILE_DIVIDER);","lastModifiedDate":"2023-11-07"},{"lineNumber":271,"author":{"gitId":"antrikshdhand"},"content":"        System.out.print(String.format(\" (%d)\", rowNum));","lastModifiedDate":"2023-11-07"},{"lineNumber":272,"author":{"gitId":"antrikshdhand"},"content":"        System.out.print(System.lineSeparator() + CHESS_BOARD_DIVIDER);","lastModifiedDate":"2023-11-07"},{"lineNumber":273,"author":{"gitId":"antrikshdhand"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-11-07"},{"lineNumber":274,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":275,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":276,"author":{"gitId":"TongZhengHong"},"content":"    public void printCommandResult(CommandResult result) {","lastModifiedDate":"2023-10-31"},{"lineNumber":277,"author":{"gitId":"TongZhengHong"},"content":"        String[] resultStrings \u003d result.getMessageStrings();","lastModifiedDate":"2023-10-31"},{"lineNumber":278,"author":{"gitId":"TongZhengHong"},"content":"        if (resultStrings !\u003d null \u0026\u0026 resultStrings.length \u003e 0) {","lastModifiedDate":"2023-10-31"},{"lineNumber":279,"author":{"gitId":"TongZhengHong"},"content":"            printText(resultStrings);","lastModifiedDate":"2023-10-31"},{"lineNumber":280,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":281,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":282,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":283,"author":{"gitId":"TongZhengHong"},"content":"    public void printErrorMessage(Exception e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":284,"author":{"gitId":"TongZhengHong"},"content":"        printText(e.getMessage());","lastModifiedDate":"2023-10-23"},{"lineNumber":285,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":286,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":287,"author":{"gitId":"TongZhengHong"},"content":"    public void printEndMessage(Player winner) {","lastModifiedDate":"2023-11-04"},{"lineNumber":288,"author":{"gitId":"TongZhengHong"},"content":"        String winningColorString \u003d winner.getColour().name();","lastModifiedDate":"2023-11-03"},{"lineNumber":289,"author":{"gitId":"TongZhengHong"},"content":"        if (winner.isHuman()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":290,"author":{"gitId":"TongZhengHong"},"content":"            printText(String.format(UiMessages.HUMAN_WIN_MESSAGE, winningColorString));","lastModifiedDate":"2023-11-06"},{"lineNumber":291,"author":{"gitId":"TongZhengHong"},"content":"        } else if (winner.isCPU()) { // Human lost","lastModifiedDate":"2023-11-04"},{"lineNumber":292,"author":{"gitId":"TongZhengHong"},"content":"            String playerColorString \u003d winner.getColour().getOppositeColour().name();","lastModifiedDate":"2023-11-04"},{"lineNumber":293,"author":{"gitId":"TongZhengHong"},"content":"            printText(String.format(UiMessages.CPU_WIN_MESSAGE, playerColorString));","lastModifiedDate":"2023-11-06"},{"lineNumber":294,"author":{"gitId":"TriciaBK"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":295,"author":{"gitId":"TriciaBK"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":296,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":297,"author":{"gitId":"TriciaBK"},"content":"    public void printRestartingGameMessage() {","lastModifiedDate":"2023-11-08"},{"lineNumber":298,"author":{"gitId":"TriciaBK"},"content":"        System.out.println(UiMessages.RESTARTING_GAME_MESSAGE);","lastModifiedDate":"2023-11-09"},{"lineNumber":299,"author":{"gitId":"TriciaBK"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":300,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":301,"author":{"gitId":"onx001"},"content":"    //@@author onx001","lastModifiedDate":"2023-11-12"},{"lineNumber":302,"author":{"gitId":"onx001"},"content":"    public void printDrawMessage() {","lastModifiedDate":"2023-11-12"},{"lineNumber":303,"author":{"gitId":"onx001"},"content":"        System.out.println(UiMessages.DRAW_MESSAGE);","lastModifiedDate":"2023-11-12"},{"lineNumber":304,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":305,"author":{"gitId":"onx001"},"content":"    ","lastModifiedDate":"2023-11-12"},{"lineNumber":306,"author":{"gitId":"TriciaBK"},"content":"    //@@author TriciaBK","lastModifiedDate":"2023-11-08"},{"lineNumber":307,"author":{"gitId":"TriciaBK"},"content":"    public void promptNewGame(boolean error) {","lastModifiedDate":"2023-11-08"},{"lineNumber":308,"author":{"gitId":"TriciaBK"},"content":"        if (error) {","lastModifiedDate":"2023-11-08"},{"lineNumber":309,"author":{"gitId":"TriciaBK"},"content":"            System.out.println(UiMessages.RESTART_GAME_ERROR_MESSAGE);","lastModifiedDate":"2023-11-09"},{"lineNumber":310,"author":{"gitId":"TriciaBK"},"content":"        } else {","lastModifiedDate":"2023-11-08"},{"lineNumber":311,"author":{"gitId":"TriciaBK"},"content":"            System.out.println(UiMessages.RESTART_GAME_MESSAGE);","lastModifiedDate":"2023-11-09"},{"lineNumber":312,"author":{"gitId":"TriciaBK"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":313,"author":{"gitId":"TriciaBK"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":314,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":315,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":316,"author":{"gitId":"TriciaBK"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ken-ruster":51,"antrikshdhand":41,"TriciaBK":18,"onx001":12,"TongZhengHong":194}},{"path":"src/main/java/chessmaster/ui/UiMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ken-ruster"},"content":"package chessmaster.ui;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ken-ruster"},"content":"public class UiMessages {","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"    public static final String[] WELCOME_MESSAGE \u003d { ","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"        \"Hey there, chess geek! You have stumbled upon the one and only: \",","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"        \"    ________                      __  ___           __           \",","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"        \"   / ____/ /_  ___  __________   /  |/  /___ ______/ /____  _____\",","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"        \"  / /   / __ \\\\/ _ \\\\/ ___/ ___/  / /|_/ / __ `/ ___/ __/ _ \\\\/ ___/\",","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"        \" / /___/ / / /  __(__  |__  )  / /  / / /_/ (__  ) /_/  __/ /    \",","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"        \" \\\\____/_/ /_/\\\\___/____/____/  /_/  /_/\\\\__,_/____/\\\\__/\\\\___/_/     \", \"\",","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"        \"where CHESS becomes an exciting journey of strategy and skill!\" };","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"    public static final String EXIST_PREV_GAME_MESSAGE \u003d ","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"antrikshdhand"},"content":"        \"You have an ongoing previous chess game. Continue game? [y/n/exit] \";","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"    public static final String CONTINUE_PREV_GAME_ERROR_MESSAGE \u003d ","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"        \"Invalid input! Please enter either \u0027y\u0027 for yes or \u0027n\u0027 for no: \";","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"    public static final String CONTINUE_PREV_GAME_MESSAGE \u003d \"Great! Continuing previous game as %s at difficulty %d\";","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"    public static final String CHOOSE_PLAYER_COLOR_MESSAGE \u003d ","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"        \"Choose your starting color to start new game! [b/w/exit] \";","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"    public static final String CHOOSE_PLAYER_COLOR_ERROR_MESSAGE \u003d ","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"        \"Invalid input! Please enter either \u0027b\u0027 for Black or \u0027w\u0027 for White: \";","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"    public static final String START_NEW_GAME_MESSAGE \u003d \"Great! Starting new game as %s\";","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"    public static final String LOAD_BOARD_ERROR_MESSAGE \u003d \"No valid previous game found. Starting new chess game...\";","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"    public static final String CPU_MOVE_MESSAGE \u003d \"ChessMaster moved %s from %s to %s\";","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"antrikshdhand"},"content":"    public static final String CPU_MOVE_AND_CAPTURE_MESSAGE \u003d \"ChessMaster moved %s from %s to %s \" +","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"antrikshdhand"},"content":"            \"and captured your %s!\";","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"    public static final String PROMPT_PROMOTE_MESSAGE \u003d ","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"        \"Promote the pawn at %s! Choose piece to promote to [b/q/r/n]: \";","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"    public static final String PROMPT_PROMOTE_INVALID_MESSAGE \u003d ","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"        \"Invalid piece! Enter b(Bishop), q(Queen), r(Rook) or n(Knight): \";","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"onx001"},"content":"    ","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"onx001"},"content":"    public static final String CHOOSE_DIFFICULTY_MESSAGE \u003d ","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"TriciaBK"},"content":"        \"Choose difficulty level [1/2/3/exit]: \";","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"onx001"},"content":"    public static final String CHOOSE_DIFFICULTY_ERROR_MESSAGE \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"onx001"},"content":"        \"Invalid input! Please enter either \u00271\u0027, \u00272\u0027 or \u00273\u0027: \";","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"    public static final String CHESSMASTER_THINKING_MESSAGE \u003d \"ChessMaster is thinking of a move...\";","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"    public static final String HUMAN_WIN_MESSAGE \u003d \"Congratulations! You have won as %s! :)\";","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"    public static final String CPU_WIN_MESSAGE \u003d \"Oh no! You have lost as %s. Please try harder next time :(\";","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"onx001"},"content":"    public static final String DRAW_MESSAGE \u003d \"It\u0027s a draw!\";","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"TriciaBK"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"TriciaBK"},"content":"    public static final String RESTART_GAME_MESSAGE \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"TriciaBK"},"content":"            \"Do you want to restart game? [y/n] \";","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"TriciaBK"},"content":"    public static final String RESTART_GAME_ERROR_MESSAGE \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"TriciaBK"},"content":"            \"Invalid input! Please enter either \u0027y\u0027 for yes or \u0027n\u0027 for no: \";","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"TriciaBK"},"content":"    public static final String RESTARTING_GAME_MESSAGE \u003d \"Great! Restarting a new game!\";","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"ken-ruster"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ken-ruster":4,"antrikshdhand":3,"TriciaBK":7,"onx001":5,"TongZhengHong":33}},{"path":"src/main/java/chessmaster/user/CPU.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshdhand"},"content":"package chessmaster.user;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.Color;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.MiniMax;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.Move;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.MoveFactory;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.pieces.ChessPiece;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"antrikshdhand"},"content":"import java.util.Random;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"antrikshdhand"},"content":"public class CPU extends Player {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"    private static final int MAX_LOOP_ITERATIONS \u003d 16;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"    private static final int RANDOM_SEED \u003d 100;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"    private final Random rand \u003d new Random(RANDOM_SEED);","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"    public CPU(Color colour, ChessBoard board) {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"        super(colour, board);","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"antrikshdhand"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"antrikshdhand"},"content":"     * The main function behind the CPU\u0027s logic, this function randomly selects an active (non-captured) piece","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"antrikshdhand"},"content":"     * from the CPU\u0027s pieces which has possible valid moves.","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"antrikshdhand"},"content":"     * @param board The board to extract the random move from.","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"antrikshdhand"},"content":"     * @return A random move","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"antrikshdhand"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"antrikshdhand"},"content":"    public Move getRandomMove(ChessBoard board) {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"antrikshdhand"},"content":"        // 1. Get a random piece that","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"antrikshdhand"},"content":"        //    - isn\u0027t captured","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"antrikshdhand"},"content":"        //    - has possible legal moves","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"antrikshdhand"},"content":"        ChessPiece randomPiece \u003d getRandomPiece();","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"antrikshdhand"},"content":"        // Need a cap on the number of pieces it checks to prevent an infinite loop when no moves are possible","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"antrikshdhand"},"content":"        // on the CPUs side.","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"antrikshdhand"},"content":"        int iter \u003d 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"antrikshdhand"},"content":"        while (iter \u003c MAX_LOOP_ITERATIONS","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"                \u0026\u0026 (randomPiece.getIsCaptured()","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"onx001"},"content":"                || randomPiece.getLegalCoordinates(board).length \u003d\u003d 0)) {","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"antrikshdhand"},"content":"            randomPiece \u003d getRandomPiece();","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"antrikshdhand"},"content":"            iter++;","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"antrikshdhand"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"antrikshdhand"},"content":"        return getRandomMoveFromPiece(randomPiece, board);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"onx001"},"content":"    //@@author onx001","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"onx001"},"content":"    public Move getBestMove(ChessBoard board, int maxDepth) {","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"onx001"},"content":"        MiniMax miniMax \u003d new MiniMax(board, this.colour, maxDepth, 0);","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"onx001"},"content":"        Move bestMove \u003d miniMax.getBestMove();","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"onx001"},"content":"        Coordinate from \u003d bestMove.getFrom();","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"onx001"},"content":"        ChessPiece piece \u003d board.getPieceAtCoor(from);","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"onx001"},"content":"        bestMove.setPieceMoved(piece);","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"onx001"},"content":"        return bestMove;","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"onx001"},"content":"    //@@author","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"antrikshdhand"},"content":"    private ChessPiece getRandomPiece() {","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"antrikshdhand"},"content":"        return this.pieces.get(rand.nextInt(pieces.size()));","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"antrikshdhand"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"antrikshdhand"},"content":"     * This function returns any random valid move that a given piece can make on a given board.","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"antrikshdhand"},"content":"     * @param piece The piece to extract a random move from.","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"antrikshdhand"},"content":"     * @param board The board the piece is currently on.","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"antrikshdhand"},"content":"     * @return A random move the given piece can make on the given board.","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"antrikshdhand"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"antrikshdhand"},"content":"    private Move getRandomMoveFromPiece(ChessPiece piece, ChessBoard board) {","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"onx001"},"content":"        Coordinate[] allPossibleMoves \u003d piece.getLegalCoordinates(board);","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"TongZhengHong"},"content":"        int randIndex \u003d rand.nextInt(allPossibleMoves.length);","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate randomDestination \u003d allPossibleMoves[randIndex];","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"antrikshdhand"},"content":"        return MoveFactory.createMove(board, piece.getPosition(), randomDestination);","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"antrikshdhand"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"antrikshdhand":56,"onx001":15,"TongZhengHong":9}},{"path":"src/main/java/chessmaster/user/Human.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshdhand"},"content":"package chessmaster.user;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Color;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.Move;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.MoveFactory;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.PromoteMove;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.parser.Parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.pieces.ChessPiece;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.pieces.Pawn;","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.ui.TextUI;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"antrikshdhand"},"content":"public class Human extends Player {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"    public Human(Color colour, ChessBoard board) {","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"        super(colour, board);","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"ken-ruster"},"content":"    //@@author ken-ruster","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"ken-ruster"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"ken-ruster"},"content":"     * Prompts the user to enter a type of piece to promote a pawn to. If the","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"ken-ruster"},"content":"     * promotion is not successful,","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"ken-ruster"},"content":"     * the user is prompted again. If successful, the pawn is replaced with the new","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"ken-ruster"},"content":"     * piece.","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"ken-ruster"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"ken-ruster"},"content":"     * @param board       Chessboard that the game is being played on.","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"ken-ruster"},"content":"     * @param move The piece being promoted.","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"ken-ruster"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"ken-ruster"},"content":"    public void handlePromote(ChessBoard board, TextUI ui, Move move) {","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"ken-ruster"},"content":"        ChessPiece pawnPiece \u003d move.getPieceMoved();","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"ken-ruster"},"content":"        if (!pawnPiece.isPawn()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"ken-ruster"},"content":"            return;","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"ken-ruster"},"content":"        Pawn pawnPromoted \u003d (Pawn) pawnPiece;","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"ken-ruster"},"content":"        ui.printChessBoard(board.getBoard());","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"ken-ruster"},"content":"        Coordinate coord \u003d pawnPiece.getPosition();","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"ken-ruster"},"content":"        boolean promoteFailure \u003d true;","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"ken-ruster"},"content":"        ui.printPromotePrompt(coord);","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"ken-ruster"},"content":"        String in \u003d ui.getUserInput(false);","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"ken-ruster"},"content":"        do {","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"ken-ruster"},"content":"            ChessPiece promotedPiece \u003d Parser.parsePromote(pawnPiece, in);","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"ken-ruster"},"content":"            promoteFailure \u003d promotedPiece.isPawn();","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"ken-ruster"},"content":"            if (promoteFailure) {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"ken-ruster"},"content":"                ui.printPromoteInvalidMessage();","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"ken-ruster"},"content":"                in \u003d ui.getUserInput(false);","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"ken-ruster"},"content":"            } else {","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"ken-ruster"},"content":"                promotedPiece.setHasMoved();","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"ken-ruster"},"content":"                this.pieces.add(promotedPiece);","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"ken-ruster"},"content":"                this.pieces.remove(pawnPiece);","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"ken-ruster"},"content":"                board.setPromotionPiece(coord, promotedPiece);","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"ken-ruster"},"content":"                PromoteMove promoteMove \u003d MoveFactory.createPromoteMove(coord, pawnPromoted, promotedPiece);","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"ken-ruster"},"content":"                this.addMove(promoteMove);","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"ken-ruster"},"content":"        } while (promoteFailure);","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"ken-ruster"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ken-ruster":42,"antrikshdhand":8,"TongZhengHong":11}},{"path":"src/main/java/chessmaster/user/Player.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshdhand"},"content":"package chessmaster.user;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Color;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.Move;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.pieces.ChessPiece;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"antrikshdhand"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"antrikshdhand"},"content":"public abstract class Player {","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"    public static final String MOVE_DELIMITER \u003d \",\";","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"antrikshdhand"},"content":"    protected ArrayList\u003cMove\u003e moves;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"antrikshdhand"},"content":"    protected ArrayList\u003cChessPiece\u003e pieces;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"    protected Color colour;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"antrikshdhand"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"     * A player is a dependency of the Game class. This class stores all move","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"     * history, all current pieces, and colour of each player. ","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"     * It also contains functions to request input from the user for the next ","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"     * move and to execute that move.","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"     * ","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"antrikshdhand"},"content":"     * @param colour The ChessPiece.Colour desired for this player.","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"antrikshdhand"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"    public Player(Color colour, ChessBoard board) {","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"        this.moves \u003d new ArrayList\u003cMove\u003e();","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"        this.pieces \u003d new ArrayList\u003cChessPiece\u003e();","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"antrikshdhand"},"content":"        this.colour \u003d colour;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"        initialisePieces(board);","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"antrikshdhand"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"antrikshdhand"},"content":"     * Adds a given move into the Player\u0027s move history.","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"     * ","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"antrikshdhand"},"content":"     * @param move The given move to be added to history.","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"antrikshdhand"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"antrikshdhand"},"content":"    public void addMove(Move move) {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"antrikshdhand"},"content":"        this.moves.add(move);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"    public Color getColour() {","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"        return this.colour;","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"antrikshdhand"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"     * Adds all the player\u0027s pieces to their ChessPiece array ","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"     * when Player is initialised.","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"     * ","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"antrikshdhand"},"content":"     * @param board The new ChessBoard containing all 32 chess pieces.","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"antrikshdhand"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"    private void initialisePieces(ChessBoard board) {","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"        for (int row \u003d 0; row \u003c ChessBoard.SIZE; row++) {","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"TongZhengHong"},"content":"            for (int col \u003d 0; col \u003c ChessBoard.SIZE; col++) {","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"antrikshdhand"},"content":"                ChessPiece piece \u003d board.getPieceAtCoor(new Coordinate(col, row));","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"TongZhengHong"},"content":"                if (piece.isSameColorAs(this.colour)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"antrikshdhand"},"content":"                    this.pieces.add(piece);","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"antrikshdhand"},"content":"                }","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"antrikshdhand"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"antrikshdhand"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"antrikshdhand"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"TongZhengHong"},"content":"     * Prints out all the player\u0027s pieces including whether it has been captured or","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"TongZhengHong"},"content":"     * not.","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"antrikshdhand"},"content":"     * Used for debugging purposes only.","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"antrikshdhand"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"antrikshdhand"},"content":"    public void printAllPieces() {","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"antrikshdhand"},"content":"        for (ChessPiece p : pieces) {","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"antrikshdhand"},"content":"            System.out.println(\"Piece: \" + p);","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"TongZhengHong"},"content":"            System.out.println(\"Colour: \" + p.getColor().toString());","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"TongZhengHong"},"content":"            System.out.println(\"Is captured: \" + p.getIsCaptured());","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"ken-ruster"},"content":"    /**","lastModifiedDate":"2023-11-05"},{"lineNumber":78,"author":{"gitId":"ken-ruster"},"content":"     * Converts the information in the moves array into a String, to be used in saving the game.","lastModifiedDate":"2023-11-05"},{"lineNumber":79,"author":{"gitId":"ken-ruster"},"content":"     *","lastModifiedDate":"2023-11-05"},{"lineNumber":80,"author":{"gitId":"ken-ruster"},"content":"     * @return String containing information about the player\u0027s past moves","lastModifiedDate":"2023-11-05"},{"lineNumber":81,"author":{"gitId":"ken-ruster"},"content":"     */","lastModifiedDate":"2023-11-05"},{"lineNumber":82,"author":{"gitId":"ken-ruster"},"content":"    public String movesToString() {","lastModifiedDate":"2023-11-05"},{"lineNumber":83,"author":{"gitId":"ken-ruster"},"content":"        String out \u003d new String();","lastModifiedDate":"2023-11-05"},{"lineNumber":84,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":85,"author":{"gitId":"ken-ruster"},"content":"        for (int i \u003d 0; i \u003c moves.size(); i \u003d i + 1) {","lastModifiedDate":"2023-11-05"},{"lineNumber":86,"author":{"gitId":"ken-ruster"},"content":"            Move move \u003d moves.get(i);","lastModifiedDate":"2023-11-05"},{"lineNumber":87,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":88,"author":{"gitId":"ken-ruster"},"content":"            if (i \u003c moves.size() - 1) {","lastModifiedDate":"2023-11-05"},{"lineNumber":89,"author":{"gitId":"ken-ruster"},"content":"                out \u003d out + move.toFileString() + MOVE_DELIMITER;","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"ken-ruster"},"content":"            } else {","lastModifiedDate":"2023-11-05"},{"lineNumber":91,"author":{"gitId":"ken-ruster"},"content":"                out \u003d out + move.toFileString();","lastModifiedDate":"2023-11-05"},{"lineNumber":92,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-11-05"},{"lineNumber":93,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":94,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":95,"author":{"gitId":"ken-ruster"},"content":"        return out;","lastModifiedDate":"2023-11-05"},{"lineNumber":96,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":97,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":98,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isHuman() {","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"TongZhengHong"},"content":"        return this instanceof Human;","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"TongZhengHong"},"content":"    public boolean isCPU() {","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"TongZhengHong"},"content":"        return this instanceof CPU;","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":106,"author":{"gitId":"antrikshdhand"},"content":"    public ArrayList\u003cMove\u003e getMoves() {","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"antrikshdhand"},"content":"        return this.moves;","lastModifiedDate":"2023-11-07"},{"lineNumber":108,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":109,"author":{"gitId":"antrikshdhand"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":110,"author":{"gitId":"antrikshdhand"},"content":"    public ArrayList\u003cChessPiece\u003e getPieces() {","lastModifiedDate":"2023-11-07"},{"lineNumber":111,"author":{"gitId":"antrikshdhand"},"content":"        return this.pieces;","lastModifiedDate":"2023-11-07"},{"lineNumber":112,"author":{"gitId":"antrikshdhand"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":113,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"ken-ruster"},"content":"    public int getMovesLength() {","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"ken-ruster"},"content":"        return this.moves.size();","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"antrikshdhand"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ken-ruster":26,"antrikshdhand":53,"TongZhengHong":38}},{"path":"src/test/java/chessmaster/ChessMasterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"onx001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"class ChessMasterTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"onx001"},"content":"        assertFalse(false);","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"onx001":2,"TongZhengHong":2,"-":10}},{"path":"src/test/java/chessmaster/commands/ShowMovesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ken-ruster"},"content":"package chessmaster.commands;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.exceptions.NullPieceException;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.game.Color;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.game.Game;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.storage.Storage;","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.ui.TextUI;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.user.CPU;","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.user.Human;","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"ken-ruster"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"ken-ruster"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"ken-ruster"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"ken-ruster"},"content":"public class ShowMovesCommandTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"ken-ruster"},"content":"    private static final String FILE_PATH_STRING \u003d \"data/ChessMaster.txt\";","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"ken-ruster"},"content":"    private static final String[] AVAILABLE_COORDINATES_STRING \u003d {\"Available coordinates for Pawn at e2: \", \"e3 e4 \" };","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"ken-ruster"},"content":"    private static final String[] NO_AVAILABLE_STRING \u003d {\"There aren\u0027t any moves available for King at e1!\"};","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"ken-ruster"},"content":"    private static final String[] NO_COORDINATE_FOUND_STRING \u003d","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"ken-ruster"},"content":"        {\"Oops! Looks like you forgot to specify a coordinate!\"","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"ken-ruster"},"content":"        , \"Format: moves [column][row]\"","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"ken-ruster"},"content":"        , \"Example: moves a2\"};","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"ken-ruster"},"content":"    private static final String AVAILABLE_COORDINATES_INPUT \u003d \"e2\";","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"ken-ruster"},"content":"    private static final String NO_AVAILABLE_INPUT \u003d \"e1\";","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"ken-ruster"},"content":"    private static final String NO_PIECE_INPUT \u003d \"e4\";","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"ken-ruster"},"content":"    public Game loadGame() {","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"ken-ruster"},"content":"        ChessBoard board \u003d new ChessBoard(Color.WHITE);","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"ken-ruster"},"content":"        Human human \u003d new Human(Color.WHITE, board);","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"ken-ruster"},"content":"        CPU cpu \u003d new CPU(Color.WHITE, board);","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"ken-ruster"},"content":"        Storage storage \u003d new Storage(FILE_PATH_STRING);","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"ken-ruster"},"content":"        TextUI ui \u003d new TextUI();","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"ken-ruster"},"content":"        Game game \u003d new Game(Color.WHITE, Color.WHITE, board, storage, ui, 1, human, cpu);","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"ken-ruster"},"content":"        return game;","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"ken-ruster"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"ken-ruster"},"content":"    public void testExecute_inputValid() throws ChessMasterException {","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"ken-ruster"},"content":"        Game game \u003d loadGame();","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"ken-ruster"},"content":"        ShowMovesCommand commandHasPiece \u003d new ShowMovesCommand(AVAILABLE_COORDINATES_INPUT);","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"ken-ruster"},"content":"        ShowMovesCommand commandNoPiece \u003d new ShowMovesCommand(NO_PIECE_INPUT);","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"ken-ruster"},"content":"        ShowMovesCommand commandNoMoves \u003d new ShowMovesCommand(NO_AVAILABLE_INPUT);","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"ken-ruster"},"content":"        String[] hasPiece \u003d commandHasPiece.execute(game).getMessageStrings();","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"ken-ruster"},"content":"        assertArrayEquals(hasPiece, AVAILABLE_COORDINATES_STRING);","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"ken-ruster"},"content":"        String[] noMoves \u003d commandNoMoves.execute(game).getMessageStrings();","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"ken-ruster"},"content":"        assertArrayEquals(noMoves, NO_AVAILABLE_STRING);","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"ken-ruster"},"content":"        assertThrows(NullPieceException.class,","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"ken-ruster"},"content":"                () -\u003e commandNoPiece.execute(game).getMessageStrings());","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"ken-ruster"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"ken-ruster"},"content":"    public void testExecute_inputEmpty() throws ChessMasterException {","lastModifiedDate":"2023-11-14"},{"lineNumber":59,"author":{"gitId":"ken-ruster"},"content":"        Game game \u003d loadGame();","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"ken-ruster"},"content":"        ShowMovesCommand commandNoInput \u003d new ShowMovesCommand(\"\");","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"ken-ruster"},"content":"        String[] noInput \u003d commandNoInput.execute(game).getMessageStrings();","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"ken-ruster"},"content":"        assertArrayEquals(noInput, NO_COORDINATE_FOUND_STRING);","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"ken-ruster"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"ken-ruster":66}},{"path":"src/test/java/chessmaster/game/ChessBoardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.game;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"onx001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"ken-ruster"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.parser.Parser;","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.pieces.ChessPiece;","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.user.CPU;","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.user.Human;","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"onx001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.ui.TextUI;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"ken-ruster"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"onx001"},"content":"public class ChessBoardTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"ken-ruster"},"content":"    private static final String[] MOVE_STRING_ARRAY \u003d","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"ken-ruster"},"content":"        {\"d2 d4\", \"g8 f6\", \"g1 f3\", \"b8 c6\", \"c1 f4\", \"d7 d5\",","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"ken-ruster"},"content":"        \"c2 c3\", \"f6 e4\", \"b1 d2\", \"e4 d2\", \"d1 d2\", \"f7 f5\"};","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"ken-ruster"},"content":"    private static final String[][] MOVED_CHESSBOARD \u003d {","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"ken-ruster"},"content":"            { \"R\", \".\", \"B\", \"Q\", \"K\", \"B\", \".\", \"R\" },","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"ken-ruster"},"content":"            { \"P\", \"P\", \"P\", \".\", \"P\", \".\", \"P\", \"P\" },","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"ken-ruster"},"content":"            { \".\", \".\", \"N\", \".\", \".\", \".\", \".\", \".\" },","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"ken-ruster"},"content":"            { \".\", \".\", \".\", \"P\", \".\", \"P\", \".\", \".\" },","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"ken-ruster"},"content":"            { \".\", \".\", \".\", \"p\", \".\", \"b\", \".\", \".\" },","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"ken-ruster"},"content":"            { \".\", \".\", \"p\", \".\", \".\", \"n\", \".\", \".\" },","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"ken-ruster"},"content":"            { \"p\", \"p\", \".\", \"q\", \"p\", \"p\", \"p\", \"p\" },","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"ken-ruster"},"content":"            { \"r\", \".\", \".\", \".\", \"k\", \"b\", \".\", \"r\" },","lastModifiedDate":"2023-11-14"},{"lineNumber":31,"author":{"gitId":"ken-ruster"},"content":"    };","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"ken-ruster"},"content":"    private ChessBoard loadChessBoard() {","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"ken-ruster"},"content":"        ChessTile[][] chessTiles \u003d new ChessTile[ChessBoard.SIZE][ChessBoard.SIZE];","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"ken-ruster"},"content":"        for (int row \u003d 0; row \u003c ChessBoard.SIZE; row++) {","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"ken-ruster"},"content":"            for (int col \u003d 0; col \u003c ChessBoard.SIZE; col++) {","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"ken-ruster"},"content":"                String chessPieceString \u003d MOVED_CHESSBOARD[row][col];","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"ken-ruster"},"content":"                ChessPiece initialPiece \u003d Parser.parseChessPiece(chessPieceString, row, col);","lastModifiedDate":"2023-11-14"},{"lineNumber":39,"author":{"gitId":"ken-ruster"},"content":"                chessTiles[row][col] \u003d new ChessTile(initialPiece);","lastModifiedDate":"2023-11-14"},{"lineNumber":40,"author":{"gitId":"ken-ruster"},"content":"                assert (chessTiles[row][col] !\u003d null);","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"ken-ruster"},"content":"            }","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"ken-ruster"},"content":"        return new ChessBoard(Color.WHITE, chessTiles);","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"onx001"},"content":"    // @@author onx001","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"onx001"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"onx001"},"content":"    public void pointTest() {","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"onx001"},"content":"        TextUI ui \u003d new TextUI();","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"onx001"},"content":"        ChessBoard board \u003d new ChessBoard(Color.WHITE);","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"onx001"},"content":"        ","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"onx001"},"content":"        ui.printChessBoard(board.getBoard());","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"onx001"},"content":"        int points \u003d board.getPoints(Color.WHITE);","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"onx001"},"content":"        assertEquals(0, points);","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"ken-ruster"},"content":"    //@@author ken_ruster","lastModifiedDate":"2023-11-14"},{"lineNumber":57,"author":{"gitId":"ken-ruster"},"content":"    @Test","lastModifiedDate":"2023-11-14"},{"lineNumber":58,"author":{"gitId":"ken-ruster"},"content":"    public void executeMoveArrayTest() throws ChessMasterException {","lastModifiedDate":"2023-11-14"},{"lineNumber":59,"author":{"gitId":"ken-ruster"},"content":"        ChessBoard board \u003d new ChessBoard(Color.WHITE);","lastModifiedDate":"2023-11-14"},{"lineNumber":60,"author":{"gitId":"ken-ruster"},"content":"        Human human \u003d new Human(Color.WHITE, board);","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"ken-ruster"},"content":"        CPU cpu \u003d new CPU(Color.BLACK, board);","lastModifiedDate":"2023-11-14"},{"lineNumber":62,"author":{"gitId":"ken-ruster"},"content":"        ArrayList\u003cString\u003e moveList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-11-14"},{"lineNumber":63,"author":{"gitId":"ken-ruster"},"content":"        for (String moveString: MOVE_STRING_ARRAY) {","lastModifiedDate":"2023-11-14"},{"lineNumber":64,"author":{"gitId":"ken-ruster"},"content":"            moveList.add(moveString);","lastModifiedDate":"2023-11-14"},{"lineNumber":65,"author":{"gitId":"ken-ruster"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":66,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":67,"author":{"gitId":"ken-ruster"},"content":"        board.executeMoveArray(moveList, human, cpu);","lastModifiedDate":"2023-11-14"},{"lineNumber":68,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":69,"author":{"gitId":"ken-ruster"},"content":"        ChessBoard otherBoard \u003d loadChessBoard();","lastModifiedDate":"2023-11-14"},{"lineNumber":70,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":71,"author":{"gitId":"ken-ruster"},"content":"        assertTrue(board.equals(otherBoard));","lastModifiedDate":"2023-11-14"},{"lineNumber":72,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":73,"author":{"gitId":"ken-ruster"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"ken-ruster":54,"onx001":16,"TongZhengHong":3}},{"path":"src/test/java/chessmaster/game/ColorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.game;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"public class ColorTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"    public void testGetOppositeColour() {","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"        assertEquals(Color.BLACK, Color.WHITE.getOppositeColour());","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"        assertEquals(Color.WHITE, Color.BLACK.getOppositeColour());","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"        assertEquals(Color.EMPTY, Color.EMPTY.getOppositeColour());","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"    public void testIsWhite() {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"        assertTrue(Color.WHITE.isWhite());","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"        assertFalse(Color.BLACK.isWhite());","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"        assertFalse(Color.EMPTY.isWhite());","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"    public void testIsBlack() {","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"        assertTrue(Color.BLACK.isBlack());","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"        assertFalse(Color.WHITE.isBlack());","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"        assertFalse(Color.EMPTY.isBlack());","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"TongZhengHong":30}},{"path":"src/test/java/chessmaster/game/CoordinateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.game;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.exceptions.ParseCoordinateException;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"public class CoordinateTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"    public void testIsOffsetWithinBoard() {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate coordinate \u003d new Coordinate(3, 4);","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"        assertTrue(coordinate.isOffsetWithinBoard(-1, 0));","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"        assertTrue(coordinate.isOffsetWithinBoard(0, -1));","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"        assertTrue(coordinate.isOffsetWithinBoard(1, 1));","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"        assertFalse(coordinate.isOffsetWithinBoard(8, 0));","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"        assertFalse(coordinate.isOffsetWithinBoard(0, 8));","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"        assertFalse(coordinate.isOffsetWithinBoard(-4, 0));","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"    public void testAddOffsetToCoordinate() {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate coordinate \u003d new Coordinate(2, 3);","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate newCoord1 \u003d coordinate.addOffsetToCoordinate(1, 2);","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate newCoord2 \u003d coordinate.addOffsetToCoordinate(-2, -3);","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate newCoord3 \u003d coordinate.addOffsetToCoordinate(0, 0);","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"        assertEquals(new Coordinate(3, 5), newCoord1);","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"        assertEquals(new Coordinate(0, 0), newCoord2);","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"        assertEquals(coordinate, newCoord3); // Should be the same coordinate","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"    public void testParseAlgebraicCoor() throws ParseCoordinateException {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate coordinate \u003d Coordinate.parseAlgebraicCoor(\"d5\");","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"        assertEquals(new Coordinate(3, 3), coordinate);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"        // Test invalid notations","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"        assertThrows(ParseCoordinateException.class, () -\u003e Coordinate.parseAlgebraicCoor(\"x3\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"        assertThrows(ParseCoordinateException.class, () -\u003e Coordinate.parseAlgebraicCoor(\"h0\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"        assertThrows(ParseCoordinateException.class, () -\u003e Coordinate.parseAlgebraicCoor(\"a9\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"    public void testCalculateOffsetFrom() {","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate coordinate1 \u003d new Coordinate(2, 3);","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate coordinate2 \u003d new Coordinate(4, 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"TongZhengHong"},"content":"        int[] offset \u003d coordinate1.calculateOffsetFrom(coordinate2);","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"TongZhengHong"},"content":"        assertEquals(-2, offset[0]);","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"TongZhengHong"},"content":"        assertEquals(2, offset[1]);","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"TongZhengHong"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate coordinate \u003d new Coordinate(1, 6);","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"TongZhengHong"},"content":"        assertEquals(\"b2\", coordinate.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"TongZhengHong"},"content":"    public void testEquals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate coordinate1 \u003d new Coordinate(2, 3);","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate coordinate2 \u003d new Coordinate(2, 3);","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate coordinate3 \u003d new Coordinate(4, 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"TongZhengHong"},"content":"        assertEquals(coordinate1, coordinate2);","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"TongZhengHong"},"content":"        assertNotEquals(coordinate1, coordinate3);","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"TongZhengHong":79}},{"path":"src/test/java/chessmaster/game/MiniMaxTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"onx001"},"content":"package chessmaster.game;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"onx001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.Move;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"onx001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"onx001"},"content":"public class MiniMaxTest {","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"onx001"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"onx001"},"content":"    public void testMiniMax() {","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"onx001"},"content":"        ChessBoard board \u003d new ChessBoard(Color.BLACK);","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"onx001"},"content":"        MiniMax miniMax \u003d new MiniMax(board, Color.BLACK, 3, 0);","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"onx001"},"content":"        Move move \u003d miniMax.getBestMove();","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"onx001"},"content":"        assertEquals(move.getFrom(), new Coordinate(6, 7));","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"onx001"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"onx001"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"onx001"},"content":"    //ChessBoard board, Color color, int maxDepth, int score","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"onx001"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"antrikshdhand":1,"onx001":17}},{"path":"src/test/java/chessmaster/parser/ParseMoveTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.exceptions.MoveOpponentPieceException;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.exceptions.NullPieceException;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.exceptions.ParseCoordinateException;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.ChessTile;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Color;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Coordinate;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"antrikshdhand"},"content":"import chessmaster.game.move.Move;","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.pieces.ChessPiece;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"public class ParseMoveTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"    private static final String[][] STARTING_CHESSBOARD_BLACK \u003d { ","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"        { \"r\", \"n\", \"b\", \"q\", \"k\", \"b\", \"n\", \"r\" }, ","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"        { \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\" }, ","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"        { \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\" }, ","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"        { \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\" }, ","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"        { \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\" }, ","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"        { \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\" }, ","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"        { \"P\", \"P\", \"P\", \"P\", \"P\", \"P\", \"P\", \"P\" }, ","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"        { \"R\", \"N\", \"B\", \"Q\", \"K\", \"B\", \"N\", \"R\" }, ","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"    };","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"    private ChessBoard loadChessBoard() {","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"        ChessTile[][] chessTiles \u003d new ChessTile[ChessBoard.SIZE][ChessBoard.SIZE];","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"        for (int row \u003d 0; row \u003c ChessBoard.SIZE; row++) {","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"            for (int col \u003d 0; col \u003c ChessBoard.SIZE; col++) {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"                String chessPieceString \u003d STARTING_CHESSBOARD_BLACK[row][col];","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"                ChessPiece initialPiece \u003d Parser.parseChessPiece(chessPieceString, row, col);","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"                chessTiles[row][col] \u003d new ChessTile(initialPiece);","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"                assert (chessTiles[row][col] !\u003d null);","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"        return new ChessBoard(Color.BLACK, chessTiles);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"    public void testParseMove_inputValidMove() throws ChessMasterException {","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"        String inputString \u003d \"h2 h4\";","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"        ChessBoard emptyBoard \u003d loadChessBoard();","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"ken-ruster"},"content":"        Move move \u003d Parser.parseMove(inputString, emptyBoard, true);","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate from \u003d new Coordinate(7, 6); // h2","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"        Coordinate to \u003d new Coordinate(7, 4);   // h4","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"        Move expectedMove \u003d new Move(from, to, emptyBoard.getPieceAtCoor(from));","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"        assertEquals(move, expectedMove);","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"TongZhengHong"},"content":"    public void testParseMove_inputCannotParseStart_expectParseException() throws ChessMasterException {","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"TongZhengHong"},"content":"        String inputString \u003d \"h2dasd h4\";","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"TongZhengHong"},"content":"        ChessBoard emptyBoard \u003d loadChessBoard();","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"TongZhengHong"},"content":"        assertThrows(ParseCoordinateException.class, () -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"ken-ruster"},"content":"            Parser.parseMove(inputString, emptyBoard, true);","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"TongZhengHong"},"content":"        });","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"TongZhengHong"},"content":"    public void testParseMove_inputCannotParseDest_expectParseException() throws ChessMasterException {","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"TongZhengHong"},"content":"        String inputString \u003d \"h2 h4dafsd\";","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"TongZhengHong"},"content":"        ChessBoard emptyBoard \u003d loadChessBoard();","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"TongZhengHong"},"content":"        assertThrows(ParseCoordinateException.class, () -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"ken-ruster"},"content":"            Parser.parseMove(inputString, emptyBoard, true);","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"TongZhengHong"},"content":"        });","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"TongZhengHong"},"content":"    public void testParseMove_inputMoreThan2Inputs_expectParseException() throws ChessMasterException {","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"TongZhengHong"},"content":"        String inputString \u003d \"h2 h4 a3\";","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"TongZhengHong"},"content":"        ChessBoard emptyBoard \u003d loadChessBoard();","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"TongZhengHong"},"content":"        assertThrows(ParseCoordinateException.class, () -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"ken-ruster"},"content":"            Parser.parseMove(inputString, emptyBoard, true);","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"TongZhengHong"},"content":"        });","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"TongZhengHong"},"content":"    public void testParseMove_inputOneInput_expectParseException() throws ChessMasterException {","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"TongZhengHong"},"content":"        String inputString \u003d \"h2\";","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"TongZhengHong"},"content":"        ChessBoard emptyBoard \u003d loadChessBoard();","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"TongZhengHong"},"content":"        assertThrows(ParseCoordinateException.class, () -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"ken-ruster"},"content":"            Parser.parseMove(inputString, emptyBoard, true);","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"TongZhengHong"},"content":"        });","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"TongZhengHong"},"content":"    public void testParseMove_inputEmptyPiece_expectNullPieceException() throws ChessMasterException {","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"TongZhengHong"},"content":"        String inputString \u003d \"d4 d5\";","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"TongZhengHong"},"content":"        ChessBoard emptyBoard \u003d loadChessBoard();","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"TongZhengHong"},"content":"        assertThrows(NullPieceException.class, () -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"ken-ruster"},"content":"            Parser.parseMove(inputString, emptyBoard, true);","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"TongZhengHong"},"content":"        });","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"TongZhengHong"},"content":"    public void testParseMove_inputNotFriendly_expectMoveOpponentException() throws ChessMasterException {","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"TongZhengHong"},"content":"        String inputString \u003d \"a7 a6\";","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"TongZhengHong"},"content":"        ChessBoard emptyBoard \u003d loadChessBoard();","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"TongZhengHong"},"content":"        assertThrows(MoveOpponentPieceException.class, () -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"ken-ruster"},"content":"            Parser.parseMove(inputString, emptyBoard, true);","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"TongZhengHong"},"content":"        });","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"ken-ruster":7,"antrikshdhand":1,"TongZhengHong":102}},{"path":"src/test/java/chessmaster/parser/ParsePlayerColorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TongZhengHong"},"content":"package chessmaster.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.exceptions.ParseColorException;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"TongZhengHong"},"content":"import chessmaster.game.Color;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"TongZhengHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"TongZhengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"TongZhengHong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"TongZhengHong"},"content":"public class ParsePlayerColorTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"TongZhengHong"},"content":"    public void testParsePlayerColor_inputValidColor() throws ParseColorException {","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"TongZhengHong"},"content":"        String inputWhiteString \u003d \"WHITE\";","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"TongZhengHong"},"content":"        Color whiteColor \u003d Parser.parsePlayerColor(inputWhiteString);","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"TongZhengHong"},"content":"        assertEquals(Color.WHITE, whiteColor);","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"        String inputBlackString \u003d \"BLACK\";","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"        Color blackColor \u003d Parser.parsePlayerColor(inputBlackString);","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"        assertEquals(Color.BLACK, blackColor);","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"    public void testParsePlayerColor_inputEmpty_expectParseException() throws ParseColorException {","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"        String inputEmptyString \u003d \"EMPTY\";","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"        assertThrows(ParseColorException.class, () -\u003e {","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"            Parser.parsePlayerColor(inputEmptyString);","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"TongZhengHong"},"content":"        });","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"    public void testParsePlayerColor_inputInvalid_expectParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"        String inputColorString \u003d \"dfljasdka\";","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"        assertThrows(ParseColorException.class, () -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"            Parser.parsePlayerColor(inputColorString);","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"        });","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"    public void testParsePlayerColor_inputLowerCase_expectParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"TongZhengHong"},"content":"        String inputColorString \u003d \"white\";","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"TongZhengHong"},"content":"        assertThrows(ParseColorException.class, () -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"TongZhengHong"},"content":"            Parser.parsePlayerColor(inputColorString);","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"TongZhengHong"},"content":"        });","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"TongZhengHong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"TongZhengHong"},"content":"    public void testParsePlayerColor_inputEmptyString_expectParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"TongZhengHong"},"content":"        String inputColorString \u003d \"\";","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"        assertThrows(ParseColorException.class, () -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"TongZhengHong"},"content":"            Parser.parsePlayerColor(inputColorString);","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"        });","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"TongZhengHong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"TongZhengHong"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"TongZhengHong":54}},{"path":"src/test/java/chessmaster/parser/ParsePromoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ken-ruster"},"content":"//@@author ken-ruster","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"ken-ruster"},"content":"package chessmaster.parser;","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.game.Color;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.pieces.Bishop;","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.pieces.ChessPiece;","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.pieces.Knight;","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.pieces.Pawn;","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.pieces.Queen;","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.pieces.Rook;","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"ken-ruster"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"ken-ruster"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"ken-ruster"},"content":"public class ParsePromoteTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"ken-ruster"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"ken-ruster"},"content":"    public void testPromote_inputValidPiece() {","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"ken-ruster"},"content":"        ChessPiece promotedQueenWhite \u003d Parser.parsePromote(new Pawn(0, 0, Color.WHITE), \"q\");","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"ken-ruster"},"content":"        assertEquals(promotedQueenWhite.toString(), Queen.QUEEN_WHITE);","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"ken-ruster"},"content":"        ChessPiece promotedQueenBlack \u003d Parser.parsePromote(new Pawn(0, 0, Color.BLACK), \"q\");","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"ken-ruster"},"content":"        assertEquals(promotedQueenBlack.toString(), Queen.QUEEN_BLACK);","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"ken-ruster"},"content":"        ChessPiece promotedRookWhite \u003d Parser.parsePromote(new Pawn(0, 0, Color.WHITE), \"r\");","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"ken-ruster"},"content":"        assertEquals(promotedRookWhite.toString(), Rook.ROOK_WHITE);","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"ken-ruster"},"content":"        ChessPiece promotedRookBlack \u003d Parser.parsePromote(new Pawn(0, 0, Color.BLACK), \"r\");","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"ken-ruster"},"content":"        assertEquals(promotedRookBlack.toString(), Rook.ROOK_BLACK);","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"ken-ruster"},"content":"        ChessPiece promotedKnightWhite \u003d Parser.parsePromote(new Pawn(0, 0, Color.WHITE), \"n\");","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"ken-ruster"},"content":"        assertEquals(promotedKnightWhite.toString(), Knight.KNIGHT_WHITE);","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"ken-ruster"},"content":"        ChessPiece promotedKnightBlack \u003d Parser.parsePromote(new Pawn(0, 0, Color.BLACK), \"n\");","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"ken-ruster"},"content":"        assertEquals(promotedKnightBlack.toString(), Knight.KNIGHT_BLACK);","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"ken-ruster"},"content":"        ChessPiece promotedBishopWhite \u003d Parser.parsePromote(new Pawn(0, 0, Color.WHITE), \"b\");","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"ken-ruster"},"content":"        assertEquals(promotedBishopWhite.toString(), Bishop.BISHOP_WHITE);","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"ken-ruster"},"content":"        ChessPiece promotedBishopBlack \u003d Parser.parsePromote(new Pawn(0, 0, Color.BLACK), \"b\");","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"ken-ruster"},"content":"        assertEquals(promotedBishopBlack.toString(), Bishop.BISHOP_BLACK);","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"ken-ruster"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"ken-ruster"},"content":"    public void testPromote_inputEmpty_expectReturnPawn() {","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"ken-ruster"},"content":"        ChessPiece promotedEmptyWhite \u003d Parser.parsePromote(new Pawn(0, 0, Color.WHITE), \"\");","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"ken-ruster"},"content":"        assertEquals(promotedEmptyWhite.toString(), Pawn.PAWN_WHITE);","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"ken-ruster"},"content":"        ChessPiece promotedEmptyBlack \u003d Parser.parsePromote(new Pawn(0, 0, Color.BLACK), \"\");","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"ken-ruster"},"content":"        assertEquals(promotedEmptyBlack.toString(), Pawn.PAWN_BLACK);","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"ken-ruster"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"ken-ruster"},"content":"    public void testPromote_inputInvalid_expectReturnPawn() {","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"ken-ruster"},"content":"        ChessPiece promotedEmptyWhite \u003d Parser.parsePromote(new Pawn(0, 0, Color.WHITE), \"isdjncv\");","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"ken-ruster"},"content":"        assertEquals(promotedEmptyWhite.toString(), Pawn.PAWN_WHITE);","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"ken-ruster"},"content":"        ChessPiece promotedEmptyBlack \u003d Parser.parsePromote(new Pawn(0, 0, Color.BLACK), \"jasdnc\");","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"ken-ruster"},"content":"        assertEquals(promotedEmptyBlack.toString(), Pawn.PAWN_BLACK);","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"ken-ruster"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"ken-ruster":62}},{"path":"src/test/java/chessmaster/storage/ExecuteSavedMovesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ken-ruster"},"content":"package chessmaster.storage;","lastModifiedDate":"2023-11-14"},{"lineNumber":2,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.exceptions.InvalidMoveException;","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.game.ChessBoard;","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.game.Color;","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.user.CPU;","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.user.Human;","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"ken-ruster"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"ken-ruster"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"ken-ruster"},"content":"public class ExecuteSavedMovesTest {","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"ken-ruster"},"content":"    private static final String FILE_PATH_STRING \u003d","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"ken-ruster"},"content":"            \"src/test/resources/storageTest.txt\";","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"ken-ruster"},"content":"    private static final String INVALID_FILE_PATH_STRING \u003d","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"ken-ruster"},"content":"            \"src/test/resources/storageTest_invalidMove.txt\";","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"TongZhengHong"},"content":"    // private static final String[][] MOVED_CHESSBOARD \u003d {","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"TongZhengHong"},"content":"    //         { \"R\", \".\", \"B\", \"Q\", \"K\", \"B\", \".\", \"R\" },","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"TongZhengHong"},"content":"    //         { \"P\", \"P\", \"P\", \".\", \"P\", \".\", \"P\", \"P\" },","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"TongZhengHong"},"content":"    //         { \".\", \".\", \"N\", \".\", \".\", \".\", \".\", \".\" },","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"TongZhengHong"},"content":"    //         { \".\", \".\", \".\", \"P\", \".\", \"P\", \".\", \".\" },","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"TongZhengHong"},"content":"    //         { \".\", \".\", \".\", \"p\", \".\", \"b\", \".\", \".\" },","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"TongZhengHong"},"content":"    //         { \".\", \".\", \"p\", \".\", \".\", \"n\", \".\", \".\" },","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"TongZhengHong"},"content":"    //         { \"p\", \"p\", \".\", \"q\", \"p\", \"p\", \"p\", \"p\" },","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"TongZhengHong"},"content":"    //         { \"r\", \".\", \".\", \".\", \"k\", \"b\", \".\", \"r\" },","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"TongZhengHong"},"content":"    // };","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"TongZhengHong"},"content":"    // private ChessBoard loadChessBoard() {","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"TongZhengHong"},"content":"    //     ChessTile[][] chessTiles \u003d new ChessTile[ChessBoard.SIZE][ChessBoard.SIZE];","lastModifiedDate":"2023-11-14"},{"lineNumber":31,"author":{"gitId":"TongZhengHong"},"content":"    //     for (int row \u003d 0; row \u003c ChessBoard.SIZE; row++) {","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"TongZhengHong"},"content":"    //         for (int col \u003d 0; col \u003c ChessBoard.SIZE; col++) {","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"TongZhengHong"},"content":"    //             String chessPieceString \u003d MOVED_CHESSBOARD[row][col];","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"TongZhengHong"},"content":"    //             ChessPiece initialPiece \u003d Parser.parseChessPiece(chessPieceString, row, col);","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"TongZhengHong"},"content":"    //             chessTiles[row][col] \u003d new ChessTile(initialPiece);","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"TongZhengHong"},"content":"    //             assert (chessTiles[row][col] !\u003d null);","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"TongZhengHong"},"content":"    //         }","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"TongZhengHong"},"content":"    //     }","lastModifiedDate":"2023-11-14"},{"lineNumber":39,"author":{"gitId":"TongZhengHong"},"content":"    //     return new ChessBoard(Color.WHITE, chessTiles);","lastModifiedDate":"2023-11-14"},{"lineNumber":40,"author":{"gitId":"TongZhengHong"},"content":"    // }","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"ken-ruster"},"content":"    @Test","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"ken-ruster"},"content":"    public void testExecuteSavedMoves_validMoves() throws ChessMasterException {","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"ken-ruster"},"content":"        Storage storage \u003d new Storage(FILE_PATH_STRING);","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"TongZhengHong"},"content":"        // ChessBoard otherBoard \u003d loadChessBoard();","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"ken-ruster"},"content":"        ChessBoard board \u003d new ChessBoard(Color.WHITE);","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"ken-ruster"},"content":"        Human human \u003d new Human(Color.WHITE, board);","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"ken-ruster"},"content":"        CPU cpu \u003d new CPU(Color.BLACK, board);","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":50,"author":{"gitId":"TongZhengHong"},"content":"        storage.executeSavedMoves(Color.WHITE, board, human, cpu);","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":52,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":53,"author":{"gitId":"ken-ruster"},"content":"    @Test","lastModifiedDate":"2023-11-14"},{"lineNumber":54,"author":{"gitId":"ken-ruster"},"content":"    public void testExecuteSavedMoves_invalidMoves_expectInvalidMoveException() throws ChessMasterException {","lastModifiedDate":"2023-11-14"},{"lineNumber":55,"author":{"gitId":"ken-ruster"},"content":"        Storage storage \u003d new Storage(INVALID_FILE_PATH_STRING);","lastModifiedDate":"2023-11-14"},{"lineNumber":56,"author":{"gitId":"TongZhengHong"},"content":"        // ChessBoard otherBoard \u003d loadChessBoard();","lastModifiedDate":"2023-11-14"},{"lineNumber":57,"author":{"gitId":"ken-ruster"},"content":"        ChessBoard board \u003d new ChessBoard(Color.WHITE);","lastModifiedDate":"2023-11-14"},{"lineNumber":58,"author":{"gitId":"ken-ruster"},"content":"        Human human \u003d new Human(Color.WHITE, board);","lastModifiedDate":"2023-11-14"},{"lineNumber":59,"author":{"gitId":"ken-ruster"},"content":"        CPU cpu \u003d new CPU(Color.BLACK, board);","lastModifiedDate":"2023-11-14"},{"lineNumber":60,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"ken-ruster"},"content":"        assertThrows(InvalidMoveException.class,","lastModifiedDate":"2023-11-14"},{"lineNumber":62,"author":{"gitId":"TongZhengHong"},"content":"                () -\u003e storage.executeSavedMoves(Color.WHITE, board, human, cpu));","lastModifiedDate":"2023-11-14"},{"lineNumber":63,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":64,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":65,"author":{"gitId":"TongZhengHong"},"content":"    // @Test","lastModifiedDate":"2023-11-14"},{"lineNumber":66,"author":{"gitId":"TongZhengHong"},"content":"    // public void testExecuteSavedMoves_boardMismatch_expectLoadBoardException() throws ChessMasterException {","lastModifiedDate":"2023-11-14"},{"lineNumber":67,"author":{"gitId":"TongZhengHong"},"content":"    //     Storage storage \u003d new Storage(FILE_PATH_STRING);","lastModifiedDate":"2023-11-14"},{"lineNumber":68,"author":{"gitId":"TongZhengHong"},"content":"    //     ChessBoard otherBoard \u003d new ChessBoard(Color.WHITE);","lastModifiedDate":"2023-11-14"},{"lineNumber":69,"author":{"gitId":"TongZhengHong"},"content":"    //     ChessBoard board \u003d new ChessBoard(Color.WHITE);","lastModifiedDate":"2023-11-14"},{"lineNumber":70,"author":{"gitId":"TongZhengHong"},"content":"    //     Human human \u003d new Human(Color.WHITE, board);","lastModifiedDate":"2023-11-14"},{"lineNumber":71,"author":{"gitId":"TongZhengHong"},"content":"    //     CPU cpu \u003d new CPU(Color.BLACK, board);","lastModifiedDate":"2023-11-14"},{"lineNumber":72,"author":{"gitId":"TongZhengHong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":73,"author":{"gitId":"TongZhengHong"},"content":"    //     assertThrows(LoadBoardException.class,","lastModifiedDate":"2023-11-14"},{"lineNumber":74,"author":{"gitId":"TongZhengHong"},"content":"    //             () -\u003e storage.executeSavedMoves(Color.WHITE, board, human, cpu));","lastModifiedDate":"2023-11-14"},{"lineNumber":75,"author":{"gitId":"TongZhengHong"},"content":"    // }","lastModifiedDate":"2023-11-14"},{"lineNumber":76,"author":{"gitId":"ken-ruster"},"content":"}","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"ken-ruster":38,"TongZhengHong":38}},{"path":"src/test/java/chessmaster/storage/LoadCpuMovesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ken-ruster"},"content":"package chessmaster.storage;","lastModifiedDate":"2023-11-14"},{"lineNumber":2,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"ken-ruster"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"ken-ruster"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"ken-ruster"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"ken-ruster"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"ken-ruster"},"content":"public class LoadCpuMovesTest {","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"ken-ruster"},"content":"    private static final String[] EXPECTED_LIST \u003d {\"g8 f6\", \"b8 c6\", \"d7 d5\", \"f6 e4\", \"e4 d2\", \"f7 f5\"};","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"ken-ruster"},"content":"    private static final String FILE_PATH_STRING \u003d \"src/test/resources/storageTest.txt\";","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"ken-ruster"},"content":"    Storage storage \u003d new Storage(FILE_PATH_STRING);","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"ken-ruster"},"content":"    @Test","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"ken-ruster"},"content":"    public void testLoadCPUMoves_validString() throws ChessMasterException {","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"ken-ruster"},"content":"        ArrayList\u003cString\u003e compareList \u003d storage.loadCPUMoves();","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"ken-ruster"},"content":"        assertTrue(compareList.equals(Arrays.asList(EXPECTED_LIST)));","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"ken-ruster"},"content":"}","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"ken-ruster":21}},{"path":"src/test/java/chessmaster/storage/LoadHumanMovesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ken-ruster"},"content":"package chessmaster.storage;","lastModifiedDate":"2023-11-14"},{"lineNumber":2,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"ken-ruster"},"content":"import chessmaster.exceptions.ChessMasterException;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"ken-ruster"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"ken-ruster"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"ken-ruster"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"ken-ruster"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"ken-ruster"},"content":"public class LoadHumanMovesTest {","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"ken-ruster"},"content":"    private static final String[] EXPECTED_LIST \u003d {\"d2 d4\", \"g1 f3\", \"c1 f4\", \"c2 c3\", \"b1 d2\", \"d1 d2\"};","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"ken-ruster"},"content":"    private static final String FILE_PATH_STRING \u003d \"src/test/resources/storageTest.txt\";","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"ken-ruster"},"content":"    Storage storage \u003d new Storage(FILE_PATH_STRING);","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"ken-ruster"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"ken-ruster"},"content":"    @Test","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"ken-ruster"},"content":"    public void testLoadHumanMoves_validString() throws ChessMasterException {","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"ken-ruster"},"content":"        ArrayList\u003cString\u003e compareList \u003d storage.loadHumanMoves();","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"ken-ruster"},"content":"        assertTrue(compareList.equals(Arrays.asList(EXPECTED_LIST)));","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"ken-ruster"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"ken-ruster"},"content":"}","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"ken-ruster":21}}]
