[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"    implementation group: \u0027com.google.code.gson\u0027, name: \u0027gson\u0027, version: \u00272.10.1\u0027","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName.set(\"duke\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"run {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"bljhty":5,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |       Name        |              Github Profile              | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"--------|:-----------------:|:----------------------------------------:|:---------:","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Cheung Ka Yuen   | [Github](https://github.com/KenCheung18) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Lee Jun Hao Bryan |   [Github](https://github.com/bljhty)    | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Lim Yuh Ching   | [Github](https://github.com/limyuhching) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |     John Roe      |      [Github](https://github.com/)       | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |      Don Roe      |      [Github](https://github.com/)       | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"limyuhching":1,"bljhty":2,"KenCheung18":1,"-":5}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"# Hi","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"{Give product intro here}","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"bljhty":1,"-":7}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"# KaChinnnng User Guide","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"welcome to KaChinnnng a personal finance tracker that helps you keep track of your expenses and income.","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"2. Download the latest version of `KaChinnnng` from [here](http://link.to/duke).","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"3. Copy the downloaded file to the folder you want to use as the home folder for your KaChinnnng.","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"4. open a command terminal and navigate to the folder where you have copied the file to.","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"5. type in the following to run the program","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"java -jar KaChinnnng.jar","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"6. if successful you should see the following output","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"Welcome to KaChinnnngggg! How may i assist you today?","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"7. type in desired commands and press enter to execute them. (note: commands are not case sensitive)","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"### View help : help","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"Shows basic commands executable by the program.","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"Format:","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"help","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"### Add an entry: add","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"Creates a new entry for income or expenses in the program.","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"Values of income and expense added has to be lower than 1000000.","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"Income and Expense values takes up to 2 decimal places.","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"To add an income:","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"add income /description \u003cdescription\u003e /date \u003cdate\u003e /amount \u003camount\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"To add an expense:","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"add expense /catergory \u003ccatergory\u003e /description \u003cdescription\u003e /date \u003cdate\u003e /amount \u003camount\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"Use case:","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"- Prompts users if any of the fields are empty.","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"- There are only 3 categories for expenses: `Food`, `Transport`, `Utilities`.","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"- Amount is takes up to 2 decimal places.","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"- by default, amount is set to SGD.","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"- format of date is `dd/mm/yyyy`.","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"- Date needs to be an existing date, and cannot be dates in the future.","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"add income /description salary /date 01/01/2020 /amount 1000","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"add expense /category Food /description lunch /date 01/01/2020 /amount 10.50","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"### List all entries: list","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"Shows a full list of both the expenses and income created by the user.","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"User can choose to view the list of income/expenses separately as well.","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"Format:","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"list","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"list income","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"list expense","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"### Delete an entry: delete","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"Deletes an entry from the list of income/expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"Format:","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"delete expense \u003cindex\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"delete income \u003cindex\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2020-05-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* Add todo `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"bljhty":78,"-":26}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.Balance;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.commands.ClearAll;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.commands.ClearExpenses;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.commands.ClearIncomes;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.DeleteExpenseCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.DeleteIncomeCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.commands.ExpenseLister;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.commands.ExpenseManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.commands.FindCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.IncomeLister;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.IncomeManager;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.ListCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.commands.UsageInstructions;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.storage.GetFromTxt;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.storage.SaveToTxt;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"import seedu.duke.parser.FindParser;","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":" * This class is the main class of the program.","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":" * It contains the main method that runs the program.","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"    private Ui ui;","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"    private ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"    private ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"KenCheung18"},"content":"    private String storagePath;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"KenCheung18"},"content":"    private SaveToTxt save;","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"KenCheung18"},"content":"    private GetFromTxt get;","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"    public Duke() {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"        incomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"        expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"KenCheung18"},"content":"        storagePath \u003d \"KaChinnnngggg.txt\";","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"KenCheung18"},"content":"        save \u003d new SaveToTxt(storagePath);","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"KenCheung18"},"content":"        get \u003d new GetFromTxt(storagePath);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"     * This method runs the program.","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"    public void run() {","lastModifiedDate":"2023-10-09"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2023-10-09"},{"lineNumber":54,"author":{"gitId":"KenCheung18"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"KenCheung18"},"content":"            get.getFromTextFile(incomes, expenses);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"KenCheung18"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"KenCheung18"},"content":"            System.out.println(\"\\tOOPS!!! File not found.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"        while (!isExit) {","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"            try {","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"                String command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"                String[] parts \u003d command.split(\"-\", 2);","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"                switch (parts[0]) {","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"                case \"exit\":","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"                    isExit \u003d true;","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"                    break;","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"                case \"add_income\":","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"                    try{","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"                        IncomeManager incomeCommand \u003d new IncomeManager(fullCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"                        incomeCommand.execute();","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"                        Income newIncome \u003d incomeCommand.getNewIncome();","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"                        incomes.add(newIncome);","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"                        Ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"                        ui.printIncomeAddedMessage(newIncome);","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"                        Ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"                    } catch (KaChinnnngException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"                        Ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"                        Ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"                    }","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"                    break;","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"                case \"list_income\":","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"                    Ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"                    new IncomeLister(incomes, ui).listIncomes();","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"                    break;","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"Hongzhii"},"content":"                case \"add_expense\":","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"Hongzhii"},"content":"                    try{","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"Hongzhii"},"content":"                        ExpenseManager expenseCommand \u003d new ExpenseManager(fullCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"Hongzhii"},"content":"                        expenseCommand.execute();","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"Hongzhii"},"content":"                        Expense newExpense \u003d expenseCommand.getNewExpense();","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"Hongzhii"},"content":"                        expenses.add(newExpense);","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"                        Ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"Hongzhii"},"content":"                        ui.printExpenseAddedMessage(newExpense);","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"                        Ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"Hongzhii"},"content":"                    } catch (KaChinnnngException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"                        Ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"Hongzhii"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"                        Ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"Hongzhii"},"content":"                    }","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"Hongzhii"},"content":"                    break;","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"Hongzhii"},"content":"                case \"list_expense\":","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"Hongzhii"},"content":"                    new ExpenseLister(expenses, ui).listExpenses();","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"KenCheung18"},"content":"                    break;","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"limyuhching"},"content":"                case \"list\":","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"limyuhching"},"content":"                    ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"limyuhching"},"content":"                    new ListCommand(incomes, expenses, ui).execute();","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"limyuhching"},"content":"                    ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"limyuhching"},"content":"                    break;","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"limyuhching"},"content":"                case \"delete_income\":","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"limyuhching"},"content":"                    ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"limyuhching"},"content":"                    new DeleteIncomeCommand().execute(incomes, fullCommand, ui);","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"limyuhching"},"content":"                    ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"limyuhching"},"content":"                    break;","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"limyuhching"},"content":"                case \"delete_expense\":","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"limyuhching"},"content":"                    ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"limyuhching"},"content":"                    new DeleteExpenseCommand().execute(expenses, fullCommand, ui);","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"limyuhching"},"content":"                    ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"limyuhching"},"content":"                    break;","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"KenCheung18"},"content":"                case \"help\":","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"KenCheung18"},"content":"                    new UsageInstructions(ui).getHelp();","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"KenCheung18"},"content":"                    break;","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"KenCheung18"},"content":"                case \"balance\":","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"                    Ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"KenCheung18"},"content":"                    new Balance(incomes, expenses).getBalanceMessage();","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"                    Ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":137,"author":{"gitId":"bljhty"},"content":"                    break;","lastModifiedDate":"2023-10-23"},{"lineNumber":138,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":139,"author":{"gitId":"bljhty"},"content":"                case \"find\":","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"bljhty"},"content":"                    try {","lastModifiedDate":"2023-10-23"},{"lineNumber":141,"author":{"gitId":"bljhty"},"content":"                        String[] parsedParameters \u003d FindParser.parseFindCommand(fullCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"bljhty"},"content":"                        FindCommand findCommand \u003d new FindCommand(","lastModifiedDate":"2023-10-23"},{"lineNumber":143,"author":{"gitId":"bljhty"},"content":"                                incomes, expenses,","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"bljhty"},"content":"                                parsedParameters[0], parsedParameters[1],","lastModifiedDate":"2023-10-23"},{"lineNumber":145,"author":{"gitId":"bljhty"},"content":"                                parsedParameters[2], parsedParameters[3], ui);","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"bljhty"},"content":"                        findCommand.execute();","lastModifiedDate":"2023-10-23"},{"lineNumber":147,"author":{"gitId":"bljhty"},"content":"                    } catch (KaChinnnngException e) {","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"bljhty"},"content":"                        Ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"bljhty"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"bljhty"},"content":"                    }","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"bljhty"},"content":"                    Ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":152,"author":{"gitId":"KenCheung18"},"content":"                    break;","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"KenCheung18"},"content":"                case \"clear_incomes\":","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"KenCheung18"},"content":"                    Ui.showLineDivider();","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"KenCheung18"},"content":"                    new ClearIncomes(incomes).clearAllIncomes();","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"KenCheung18"},"content":"                    Ui.showLineDivider();","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"KenCheung18"},"content":"                    break;","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"KenCheung18"},"content":"                case \"clear_expenses\":","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"KenCheung18"},"content":"                    Ui.showLineDivider();","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"KenCheung18"},"content":"                    new ClearExpenses(expenses).clearAllIncomes();","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"KenCheung18"},"content":"                    Ui.showLineDivider();","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"KenCheung18"},"content":"                    break;","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"KenCheung18"},"content":"                case \"clear_all\":","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"KenCheung18"},"content":"                    Ui.showLineDivider();","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"KenCheung18"},"content":"                    new ClearAll(incomes, expenses).clearAllIncomeAndExpense();","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"KenCheung18"},"content":"                    Ui.showLineDivider();","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"KenCheung18"},"content":"                    break;","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"bljhty"},"content":"                default:","lastModifiedDate":"2023-10-11"},{"lineNumber":169,"author":{"gitId":"bljhty"},"content":"                    Ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":170,"author":{"gitId":"bljhty"},"content":"                    System.out.println(\"Invalid command. Please try again.\");","lastModifiedDate":"2023-10-11"},{"lineNumber":171,"author":{"gitId":"bljhty"},"content":"                    Ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"bljhty"},"content":"                    break;","lastModifiedDate":"2023-10-11"},{"lineNumber":173,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-11"},{"lineNumber":174,"author":{"gitId":"bljhty"},"content":"            } catch (KaChinnnngException e) {","lastModifiedDate":"2023-10-11"},{"lineNumber":175,"author":{"gitId":"limyuhching"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-11"},{"lineNumber":177,"author":{"gitId":"KenCheung18"},"content":"            save.saveIncomeAndExpense(incomes,expenses);","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":179,"author":{"gitId":"bljhty"},"content":"        ui.printGoodbyeMessage();","lastModifiedDate":"2023-10-11"},{"lineNumber":180,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":181,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":182,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-09"},{"lineNumber":184,"author":{"gitId":"bljhty"},"content":"        new Duke().run();","lastModifiedDate":"2023-10-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":186,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"limyuhching":25,"bljhty":93,"Hongzhii":14,"KenCheung18":46,"-":9}},{"path":"src/main/java/seedu/duke/commands/Balance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":" * The `Balance` class represents a financial balance calculator","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":" * that calculates the balance between income and expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":" * It takes a list of income and expense records as input and provides methods to calculate and display the balance.","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":"public class Balance {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":"    private final ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"    private final ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":"    public Balance(ArrayList\u003cIncome\u003e incomes, ArrayList\u003cExpense\u003e expenses) {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"        this.incomes \u003d incomes;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"        this.expenses \u003d expenses;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"     * Calculates the financial balance by subtracting the total expenses from the total income.","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"KenCheung18"},"content":"     * @return The calculated financial balance.","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":"    public double getBalance() {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"KenCheung18"},"content":"        double totalIncome \u003d 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"KenCheung18"},"content":"        double totalExpense \u003d 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"KenCheung18"},"content":"        for (Income income : incomes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"            totalIncome +\u003d income.getAmount();","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"KenCheung18"},"content":"        for (Expense expense : expenses) {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"KenCheung18"},"content":"            totalExpense +\u003d expense.getAmount();","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"KenCheung18"},"content":"        return totalIncome - totalExpense;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"KenCheung18"},"content":"     * Prints a message to the console displaying the calculated financial balance.","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"KenCheung18"},"content":"    public void getBalanceMessage() {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Balance: \" + getBalance());","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"KenCheung18"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"KenCheung18":45}},{"path":"src/main/java/seedu/duke/commands/ClearAll.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":"public class ClearAll {","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":"    private ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"    private ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":"    public ClearAll(ArrayList\u003cIncome\u003e incomes, ArrayList\u003cExpense\u003e expenses) {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":"        this.incomes \u003d incomes;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"        this.expenses \u003d expenses;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"    public void clearAllIncomeAndExpense(){","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"        incomes.clear();","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"        expenses.clear();","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Both income and expense list cleared\");","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"KenCheung18":24}},{"path":"src/main/java/seedu/duke/commands/ClearExpenses.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"public class ClearExpenses {","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":"    private ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":"    public ClearExpenses(ArrayList\u003cExpense\u003e expenses) {","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":"        this.expenses \u003d expenses;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"    public void clearAllIncomes(){","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":"        expenses.clear();","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"You have cleared the expense list\");","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"KenCheung18":16}},{"path":"src/main/java/seedu/duke/commands/ClearIncomes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"public class ClearIncomes {","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":"    private ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":"    public ClearIncomes(ArrayList\u003cIncome\u003e incomes){","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":"        this.incomes \u003d incomes;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":"    public void clearAllIncomes(){","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":"        incomes.clear();","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"You have cleared the income list\");","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"KenCheung18":17}},{"path":"src/main/java/seedu/duke/commands/Commands.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":" * Represents the abstract class for all commands.","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":" * This class serves as a blueprint for all specific command classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":" *","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"public abstract class Commands {","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"     * This method is used to execute the command.","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"    public void execute() throws KaChinnnngException {","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"bljhty":17}},{"path":"src/main/java/seedu/duke/commands/DeleteExpenseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":" * The `DeleteExpenseCommand` class represents a command to delete an expense record from a list of expenses.","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":" * It extends the `Commands` class and is used to manage expense records in the application.","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"public class DeleteExpenseCommand extends Commands {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"     * Constructs a `DeleteExpenseCommand` object. This class does not have any specific constructor logic.","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"    public DeleteExpenseCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"     * Executes the `DeleteExpenseCommand` to remove an expense record from the list of expenses.","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"     * @param expenses     The list of expense records to be modified.","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"     * @param fullcommand  The full command entered by the user, including the index of the expense to be deleted.","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"     * @param ui           The user interface for displaying messages.","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"     * @throws KaChinnnngException If there is a problem with the command execution, such as missing arguments,","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"     *                            an invalid index, or a non-existent expense record.","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"    public void execute(ArrayList\u003cExpense\u003e expenses, String fullcommand, Ui ui) throws KaChinnnngException {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"            String[] tokens \u003d fullcommand.split(\" \", 3);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"            index \u003d Integer.parseInt(tokens[2]);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"            Expense removedExpense \u003d expenses.get(index-1);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"            expenses.remove(index-1);","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"Noted. This expense record has been deleted:\");","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"            System.out.println(removedExpense);","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"You\u0027re missing an argument\");","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"        } catch (NullPointerException | NumberFormatException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"Oops! An integer index is expected\");","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"Oops! Expense \" + index + \" does not exist\");","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"limyuhching":45}},{"path":"src/main/java/seedu/duke/commands/DeleteIncomeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":" * The DeleteIncomeCommand class is responsible for deleting an income record from the list of incomes.","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"public class DeleteIncomeCommand extends Commands {","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"     * Constructs a DeleteIncomeCommand object.","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"    public DeleteIncomeCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"     * Executes the DeleteIncomeCommand to remove an income record from the list of incomes.","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"     * @param incomes     The list of income records to be modified.","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"     * @param fullcommand The full command entered by the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"     * @param ui          The user interface for displaying messages.","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"     * @throws KaChinnnngException If there is a problem with the command execution, such as missing arguments,","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"     *                            invalid index, or a non-existent income record.","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"    public void execute(ArrayList\u003cIncome\u003e incomes, String fullcommand, Ui ui) throws KaChinnnngException {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"            String[] tokens \u003d fullcommand.split(\" \", 3);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"            index \u003d Integer.parseInt(tokens[2]);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"            Income removedIncome \u003d incomes.get(index-1);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"            incomes.remove(index-1);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"Noted. This income record has been deleted:\");","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"            System.out.println(removedIncome);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"You\u0027re missing an argument\");","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"        } catch (NullPointerException | NumberFormatException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"Oops! An integer index is expected\");","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"Oops! Income \" + index + \" does not exist\");","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"limyuhching":45}},{"path":"src/main/java/seedu/duke/commands/ExpenseLister.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":" * Represents the command that when executed, lists all expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Hongzhii"},"content":" * This class is a child class of the Command class.","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Hongzhii"},"content":" *","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Hongzhii"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Hongzhii"},"content":"public class ExpenseLister extends Commands {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Hongzhii"},"content":"    private final ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Hongzhii"},"content":"    private final Ui ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Hongzhii"},"content":"     * Constructor for ExpenseLister.","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Hongzhii"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Hongzhii"},"content":"     * @param expenses","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Hongzhii"},"content":"     * @param ui","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Hongzhii"},"content":"    public ExpenseLister(ArrayList\u003cExpense\u003e expenses, Ui ui) {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Hongzhii"},"content":"        this.expenses \u003d expenses;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Hongzhii"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Hongzhii"},"content":"     * This method is used to execute the command.","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Hongzhii"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Hongzhii"},"content":"    public void execute() {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Hongzhii"},"content":"        listExpenses();","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Hongzhii"},"content":"     * This method lists all incomes.","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Hongzhii"},"content":"    public void listExpenses() {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Hongzhii"},"content":"        if (expenses.isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Hongzhii"},"content":"            ui.showLineDivider();","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Hongzhii"},"content":"            System.out.println(\"You have no recorded expenses.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Hongzhii"},"content":"            ui.showLineDivider();","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Hongzhii"},"content":"            return;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Hongzhii"},"content":"        ui.showLineDivider();","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Hongzhii"},"content":"        System.out.println(\"Here are your expenses:\");","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Hongzhii"},"content":"        for (int i \u003d 0; i \u003c expenses.size(); i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Hongzhii"},"content":"            System.out.println((i + 1) + \". \" + expenses.get(i).toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Hongzhii"},"content":"        ui.showLineDivider();","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Hongzhii":53}},{"path":"src/main/java/seedu/duke/commands/ExpenseManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.parser.ExpenseParser;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":" * This is the class that manages the creation of new expense","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Hongzhii"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Hongzhii"},"content":"public class ExpenseManager extends Commands{","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Hongzhii"},"content":"    private final String details;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Hongzhii"},"content":"    private Expense newExpense;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Hongzhii"},"content":"    public ExpenseManager(String details) {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Hongzhii"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Hongzhii"},"content":"     * This method is used to execute the command","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Hongzhii"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Hongzhii"},"content":"     * @throws KaChinnnngException","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Hongzhii"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Hongzhii"},"content":"    public void execute() throws KaChinnnngException {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Hongzhii"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d extractExpenseFields(details);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Hongzhii"},"content":"        newExpense \u003d ExpenseParser.parseExpense(expenseFields);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Hongzhii"},"content":"     * This method returns new expense created","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Hongzhii"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Hongzhii"},"content":"     * @return","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Hongzhii"},"content":"    public Expense getNewExpense() {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Hongzhii"},"content":"        return newExpense;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Hongzhii"},"content":"     * This method extracts the fields of the expense.","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Hongzhii"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Hongzhii"},"content":"     * @param details String containing the details of the expense","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Hongzhii"},"content":"     * @return expenseFields HashMap containing the fields of the income","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Hongzhii"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Hongzhii"},"content":"    private HashMap\u003cString, String\u003e extractExpenseFields(String details) throws KaChinnnngException{","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Hongzhii"},"content":"        HashMap\u003cString,String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"        String[] parts \u003d details.split(\"/cat | /de | /date | /amt \");","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Hongzhii"},"content":"        if(parts.length !\u003d 5) {","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Hongzhii"},"content":"            throw new KaChinnnngException(\"Missing fields detected\");","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Hongzhii"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, parts[1].trim());","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Hongzhii"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, parts[2].trim());","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Hongzhii"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, parts[3].trim());","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Hongzhii"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, parts[4].trim());","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Hongzhii"},"content":"        return expenseFields;","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"bljhty":1,"Hongzhii":60}},{"path":"src/main/java/seedu/duke/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import java.time.Month;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import java.time.Year;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"import java.io.File;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"public class FindCommand extends Commands {","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(FindCommand.class.getName());","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"    private final ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"    private final ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"    private final String type;","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"    private final String category;","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"    private final String description;","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"    private final Ui ui;","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"    private boolean isSearchByMonth \u003d false;","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"    static {","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"            File dir \u003d new File(\"logs\");","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"                if(!dir.mkdirs()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"                    throw new KaChinnnngException(\"Failed to create directory \" + dir.getAbsolutePath());","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"            FileHandler fh \u003d new FileHandler(\"logs/FindCommand.log\", true);","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"            SimpleFormatter formatter \u003d new SimpleFormatter();","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"            fh.setFormatter(formatter);","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"            LOGGER.addHandler(fh);","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"            LOGGER.setLevel(Level.ALL);","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"            LOGGER.setUseParentHandlers(false);","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", e);","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"    public FindCommand(ArrayList\u003cIncome\u003e incomes, ArrayList\u003cExpense\u003e expenses, String type,","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"                       String category, String description, String dateString, Ui ui) throws KaChinnnngException {","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"        if (!type.equalsIgnoreCase(\"income\") \u0026\u0026 !type.equalsIgnoreCase(\"expense\")) {","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Invalid type. Please use \u0027income\u0027 or \u0027expense\u0027.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"        this.incomes \u003d incomes;","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"        this.expenses \u003d expenses;","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"        this.category \u003d category;","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"        this.date \u003d parseDate(dateString);  // Convert date string to LocalDate","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"        LOGGER.info(\"FindCommand initialised with type:\" + type);","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"    public void execute() throws KaChinnnngException {","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"        LOGGER.info(\"Executing FindCommand\");","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"        assert incomes !\u003d null : \"incomes should not be null\";","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"        assert expenses !\u003d null : \"expenses should not be null\";","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"        ArrayList\u003cExpense\u003e matchingExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"        ArrayList\u003cIncome\u003e matchingIncomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"        if (\"expense\".equalsIgnoreCase(type)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"            for (Expense e : expenses) {","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"                if (matchesCriteria(e)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"                    matchingExpenses.add(e);","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"            LOGGER.info(\"Found \" + matchingExpenses.size() + \" matching expenses\");","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"            ui.showMatchingExpenses(matchingExpenses);  // Assuming you have such a method in Ui","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"        } else if (\"income\".equalsIgnoreCase(type)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"            for (Income i : incomes) {","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"                if (matchesCriteria(i)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"                    matchingIncomes.add(i);","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"            LOGGER.info(\"Found \" + matchingIncomes.size() + \" matching incomes\");","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"            ui.showMatchingIncomes(matchingIncomes);  // Assuming you have such a method in Ui","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"        } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.WARNING, \"Invalid type: \" + type);","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"    private boolean matchesDate(LocalDate dateToCheck) {","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"        if (this.date !\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"            if (isSearchByMonth) {","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"                return dateToCheck.getMonthValue() \u003d\u003d this.date.getMonthValue();","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"            } else {","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"                return dateToCheck.isEqual(this.date);","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"bljhty"},"content":"        return true; // If this.date is null, then any date matches the criteria","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"    private boolean matchesCategory(String categoryToCheck) {","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"bljhty"},"content":"        return this.category \u003d\u003d null || (categoryToCheck !\u003d null \u0026\u0026 categoryToCheck.equalsIgnoreCase(this.category));","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"bljhty"},"content":"    private boolean matchesDescription(String descriptionToCheck) {","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"bljhty"},"content":"        if (this.description !\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"bljhty"},"content":"            String[] keywords \u003d this.description.split(\"\\\\s+\");","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"bljhty"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"bljhty"},"content":"                if (!descriptionToCheck.toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"bljhty"},"content":"                    return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":128,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"bljhty"},"content":"        return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":131,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"bljhty"},"content":"    private boolean matchesCriteria(Expense e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"bljhty"},"content":"        return matchesDate(e.getDate()) \u0026\u0026 matchesCategory(e.getCategory()) \u0026\u0026 matchesDescription(e.getDescription());","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"    private boolean matchesCriteria(Income i) {","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"bljhty"},"content":"        return matchesDate(i.getDate()) \u0026\u0026 matchesCategory(i.getCategory()) \u0026\u0026 matchesDescription(i.getDescription());","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":139,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":141,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"bljhty"},"content":"    private LocalDate parseDate(String dateString) throws KaChinnnngException {","lastModifiedDate":"2023-10-23"},{"lineNumber":143,"author":{"gitId":"bljhty"},"content":"        if (dateString \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"bljhty"},"content":"            return null;","lastModifiedDate":"2023-10-23"},{"lineNumber":145,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"bljhty"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MMM/yyyy\");","lastModifiedDate":"2023-10-23"},{"lineNumber":147,"author":{"gitId":"bljhty"},"content":"        LocalDate parsedDate \u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"bljhty"},"content":"            parsedDate \u003d LocalDate.parse(dateString, formatter);","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"bljhty"},"content":"            return parsedDate;","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"bljhty"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"bljhty"},"content":"            // Check if dateString is just a month","lastModifiedDate":"2023-10-23"},{"lineNumber":154,"author":{"gitId":"bljhty"},"content":"            for (Month month : Month.values()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":155,"author":{"gitId":"bljhty"},"content":"                if (month.getDisplayName(TextStyle.SHORT, Locale.ENGLISH).equalsIgnoreCase(dateString)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":156,"author":{"gitId":"bljhty"},"content":"                    isSearchByMonth \u003d true;","lastModifiedDate":"2023-10-23"},{"lineNumber":157,"author":{"gitId":"bljhty"},"content":"                    parsedDate \u003d LocalDate.of(Year.now().getValue(), month, 1);","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"bljhty"},"content":"                    assert parsedDate.getMonth() \u003d\u003d month : \"parsedDate month should be \" + month;","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"bljhty"},"content":"                    return parsedDate;","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":161,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":162,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.WARNING, \"failed to parse date\" + dateString);","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Invalid date format. Please use format like 20/Oct/2023.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":164,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":165,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":166,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"bljhty":167}},{"path":"src/main/java/seedu/duke/commands/IncomeLister.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":" * Represents the command that when executed, lists all incomes.","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":" * This class is a child class of the Command class.","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":" *","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"public class IncomeLister extends Commands {","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(IncomeLister.class.getName());","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    private final ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"    private final Ui ui;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"     * Constructor for IncomeLister.","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"     * @param incomes ArrayList of incomes","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"     * @param ui      Instance of Ui","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"    public IncomeLister(ArrayList\u003cIncome\u003e incomes, Ui ui) {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"        assert incomes !\u003d null : \"incomes should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"        this.incomes \u003d incomes;","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"        LOGGER.log(Level.INFO, (\"Initialised IncomeLister\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"     * This method is used to execute the command.","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"    public void execute() {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"        listIncomes();","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"     * This method lists all incomes.","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"    // Updated method name to follow Java naming conventions","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"    public void listIncomes() {","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"        if (incomes.isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"            ui.showLineDivider();","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"            System.out.println(\"You have no recorded incomes.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"            ui.showLineDivider();","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"            return;","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"        ui.showLineDivider();","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Here are your incomes:\");","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"        for (int i \u003d 0; i \u003c incomes.size(); i++) {","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"            System.out.println((i + 1) + \". \" + incomes.get(i).toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"        ui.showLineDivider();","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"        LOGGER.log(Level.INFO, (\"Incomes listed successfully\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"bljhty":64}},{"path":"src/main/java/seedu/duke/commands/IncomeManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import seedu.duke.parser.IncomeParser;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"import java.io.File;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":" * Represents the class that manages the creation of a new income.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":" * This class serves as a blueprint for all specific income creation classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":" *","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"public class IncomeManager extends Commands{","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"    // Logger instance to log events and issues that occur during the execution of this class.","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(IncomeManager.class.getName());","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"    private final String details;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    private Income newIncome;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"    static{","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"            File dir \u003d new File(\"logs\");","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"                if (!dir.mkdirs()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"                    throw new KaChinnnngException(\"Failed to create directory \" + dir.getAbsolutePath());","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"            FileHandler fh \u003d new FileHandler(\"logs/IncomeManager.log\", true);","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"            SimpleFormatter formatter \u003d new SimpleFormatter();","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"            fh.setFormatter(formatter);","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"            LOGGER.addHandler(fh);","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"            LOGGER.setLevel(Level.ALL);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"            LOGGER.setUseParentHandlers(false);","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", e);","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"    public IncomeManager(String details) {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"        assert details !\u003d null : \"details should not be null\"; // Ensure that details is not null","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"     * This method is used to execute the command.","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"    public void execute() throws KaChinnnngException {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e incomeFields \u003d extractIncomeFields(details);","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"        newIncome \u003d IncomeParser.parseIncome(incomeFields);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"        LOGGER.log(Level.INFO, \"successful parsing of income\"); // logging successful parsing of income","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"     * This method returns the new income created.","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"     * @return newIncome","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"    public Income getNewIncome() {","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"        return newIncome;","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"     * This method extracts the fields of the income.","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"     * @param details String containing the details of the income","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"     * @return incomeFields HashMap containing the fields of the income","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"    private HashMap\u003cString, String\u003e extractIncomeFields(String details) throws KaChinnnngException {","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"        assert details !\u003d null : \"details should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e incomeFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"        // Split the details string based on the field keywords","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"        String[] parts \u003d details.split(\"/de|/date|/amt\");","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"        // Check if all fields are present in the string","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"        if (parts.length !\u003d 4) {","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.WARNING, \"Missing or out-of-order fields detected in income details: \" + details);","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Expected fields `/description`, `/date`, and \" +","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"                    \"`/amount` are missing or improperly formatted.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"        // Populate the HashMap with extracted fields","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DESCRIPTION_FIELD, parts[1].trim());","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DATE_FIELD, parts[2].trim());","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.AMOUNT_FIELD, parts[3].trim());","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"        return incomeFields;","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"bljhty":97}},{"path":"src/main/java/seedu/duke/commands/KaChinnnngException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":" * Represents the exception thrown when there is an error in the command.","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"public class KaChinnnngException extends Exception{","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"    public KaChinnnngException(String message) {","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"        super(message);","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"bljhty":10}},{"path":"src/main/java/seedu/duke/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"public class ListCommand extends Commands {","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"    private ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"    private ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"    private Ui ui;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"    private double totalIncome;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"    private double totalExpenses;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"    public ListCommand(ArrayList\u003cIncome\u003e incomes, ArrayList\u003cExpense\u003e expenses, Ui ui) {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"        this.incomes \u003d incomes;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"        this.expenses \u003d expenses;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"        totalIncome \u003d 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"        totalExpenses \u003d 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"    public void execute() {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"        if (incomes.isEmpty() \u0026\u0026 expenses.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"You do not have any records.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"            return;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"        // Print incomes","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"        if (incomes.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"You have no recorded incomes.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"Here are your incomes:\");","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"            for (int i \u003d 0; i \u003c incomes.size(); i++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"                System.out.println((i + 1) + \". \" + incomes.get(i).toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"                totalIncome +\u003d incomes.get(i).getAmount();","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"            System.out.printf(\"Total income is: $%.2f.\\n\", totalIncome);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"        System.out.println();","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"        // Print expenses","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"        if (expenses.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"You have no recorded expenses.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"Here are your expenses:\");","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"limyuhching"},"content":"            for (int i \u003d 0; i \u003c expenses.size(); i++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"                System.out.println((i + 1) + \". \" + expenses.get(i).toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"                totalExpenses +\u003d expenses.get(i).getAmount();","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"            System.out.printf(\"Total expenses is: $%.2f.\\n\", totalExpenses);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"        System.out.printf(\"\\nTotal balance is: $%.2f.\\n\", totalIncome - totalExpenses);","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"limyuhching":55}},{"path":"src/main/java/seedu/duke/commands/UsageInstructions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"public class UsageInstructions {","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"    // Shows a message linking the user to the user guide of our app","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"    private final seedu.duke.ui.Ui ui;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":"     * The `UsageInstructions` class provides usage instructions for the application,","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"     * including command formats and a link to the user guide.","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"    public UsageInstructions(Ui ui) {","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"     * Displays usage instructions for the application, including command formats and a link to the user guide.","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    public void getHelp(){","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"        ui.showLineDivider();","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"        // Shows a message linking the user to the user guide of our app","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"You can access our user guide by \" +","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"                \"https://docs.google.com/document/d/1BOz_v4eYQ8y7Dje6Jm6nqymi9jmrsb9MAohLCL_sLvI/edit?usp\u003dsharing\\n\");","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"        // Displays the various commands that user can use including the respective formats of the commands","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Functions and their format:\\n\");","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Adding an entry: add\\nFormat:\\n\" + \"Add expense /category /description /value\\n\" +","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"                \"Add income /description /value\\n\");","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Listing all entries: list\\nFormat:\\n\" + \"list\\n\" + \"list income\\n\" +","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"                \"list expense\\n\");","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Deleting an entry: delete\\nFormat:\\ndelete income [index_pos]\\n\" +","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"                \"delete expense [index_pos]\\n\");","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Check balance of income: balance\\nFormat:\\n\" + \"balance\\n\");","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Exiting the program: exit\\nFormat:\\n\" + \"exit\");","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"        ui.showLineDivider();","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"bljhty":30,"KenCheung18":7}},{"path":"src/main/java/seedu/duke/financialrecords/Expense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":" * Implementation of the Expense class","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":" * Basic expense class inherits from FinancialRecord and does not include any additional attributes","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":" * Attribute \"amount\" contains a negative double which will make it easier to tally up the net total at the end","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.financialrecords;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Hongzhii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Hongzhii"},"content":"public class Expense extends FinancialRecord {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"    protected String category;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"Hongzhii"},"content":"    public Expense(String description, LocalDate date, double amount) throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Hongzhii"},"content":"        super(description, date, amount);","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"    public String getCategory() {","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"        return category;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"Hongzhii"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Hongzhii"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Hongzhii"},"content":"        return \"Expense: \" + getDescription() +","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Hongzhii"},"content":"                \" | Date: \" + getDateString() + \" | Amount: $\" + String.format(\"%.2f\", getAmount());","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"bljhty":7,"Hongzhii":20}},{"path":"src/main/java/seedu/duke/financialrecords/FinancialRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.financialrecords;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":" * Represents the abstract class for all financial records.","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":" * This class serves as a blueprint for all specific financial record classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":" *","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"public abstract class FinancialRecord{","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    // Logger instance to log events and issues that occur during the execution of this class.","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(FinancialRecord.class.getName());","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"    ","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    protected String description;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    protected double amount;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"     * This method is used to create a new financial record.","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record creation classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"     * @param description String containing the description of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"     * @param date LocalDate containing the date of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"     * @param amount double containing the amount of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"    public FinancialRecord(String description, LocalDate date, double amount) throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"        assert description !\u003d null : \"description should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"        assert date !\u003d null : \"date should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"            LOGGER.warning(\"Description is empty\");","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Description cannot be empty!\");","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"        if (amount \u003c 0) {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"            LOGGER.warning(\"Amount is negative\");","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Amount cannot be negative!\");","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"        if (date.isAfter(LocalDate.now())) {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"            LOGGER.warning(\"Date is in the future\");","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Date cannot be in the future!\");","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"     * This method is used to get the category of the financial record.","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"     * @return String containing the category of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"    public String getCategory() {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"        return \"\";","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"     * This method is used to get the description of the financial record.","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"     * @return String containing the description of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"    public String getDescription() {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"        return description;","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"     * This method is used to get the date of the financial record.","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"     * @return LocalDate containing the date of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"        return date;","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"     * This method is used to get the date of the financial record in a string format.","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"     * @return String containing the date of the financial record in a string format","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"    public String getDateString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MMM/yyyy\");","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"        return date.format(formatter);","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"     * This method is used to get the amount of the financial record.","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"     * @return double containing the amount of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"    public double getAmount() {","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"        return amount;","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"     * This method is used to set the description of the financial record.","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"     * @param description String containing the description of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"    public void setDescription(String description) throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"        assert description !\u003d null : \"description should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"bljhty"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Description cannot be empty!\");","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"bljhty"},"content":"     * This method is used to set the date of the financial record.","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"bljhty"},"content":"     * @param date LocalDate containing the date of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"bljhty"},"content":"    public void setDate(LocalDate date) throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"bljhty"},"content":"        assert date !\u003d null : \"date should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"bljhty"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"bljhty"},"content":"     * This method is used to set the amount of the financial record.","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"bljhty"},"content":"     * @param amount double containing the amount of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"bljhty"},"content":"    public void setAmount(double amount) throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"bljhty"},"content":"        assert amount \u003e\u003d 0 : \"amount should not be negative\";","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"bljhty"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"bljhty"},"content":"     * This method is used to get the category of the financial record.","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"bljhty"},"content":"     * @return String containing the category of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"bljhty"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"bljhty"},"content":"        return \"\";","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"bljhty":152}},{"path":"src/main/java/seedu/duke/financialrecords/Food.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.financialrecords;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.expensetypes.MealType;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":" * Food class that inherits from expense.","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Hongzhii"},"content":" * Represents food expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Hongzhii"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Hongzhii"},"content":"public class Food extends Expense {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Hongzhii"},"content":"    private MealType mealType;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Hongzhii"},"content":"     * Food class constructor","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Hongzhii"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Hongzhii"},"content":"     * @param description","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Hongzhii"},"content":"     * @param date","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Hongzhii"},"content":"     * @param amount","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Hongzhii"},"content":"     * @param mealType","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Hongzhii"},"content":"     * @throws KaChinnnngException","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Hongzhii"},"content":"    public Food(String description, LocalDate date, double amount, MealType mealType) throws KaChinnnngException {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Hongzhii"},"content":"        super(description, date, amount);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"        this.category \u003d \"food\";","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"Hongzhii"},"content":"        this.mealType \u003d mealType;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Hongzhii"},"content":"     * Returns meal type","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Hongzhii"},"content":"     * @return","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Hongzhii"},"content":"    public MealType getMealType() {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Hongzhii"},"content":"        return mealType;","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Hongzhii"},"content":"     * Returns a string that contains all the information on the expense record","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Hongzhii"},"content":"     * @return","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Hongzhii"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Hongzhii"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Hongzhii"},"content":"        return \"Food Expense: \" + getDescription() +","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Hongzhii"},"content":"                \" | Date: \" + getDateString() + \" | Amount: $\" + String.format(\"%.2f\", getAmount());","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"bljhty":1,"Hongzhii":45}},{"path":"src/main/java/seedu/duke/financialrecords/Income.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.financialrecords;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import java.io.File;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":" * Implementation of the Income class","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":" * Basic income class inherits from FinancialRecord and does not include any additional attributes","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"public class Income extends FinancialRecord {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"    // Logger instance to log events and issues that occur during the execution of this class.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(Income.class.getName());","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"    static {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"            File dir \u003d new File(\"logs\");","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"                if (!dir.mkdirs()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"                    throw new KaChinnnngException(\"Failed to create directory \" + dir.getAbsolutePath());","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"            FileHandler fh \u003d new FileHandler(\"logs/Income.log\", true);","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"            SimpleFormatter formatter \u003d new SimpleFormatter();","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"            fh.setFormatter(formatter);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"            LOGGER.addHandler(fh);","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"            LOGGER.setLevel(Level.ALL);","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"            LOGGER.setUseParentHandlers(false);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", e);","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"     * This method is used to create a new financial record.","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record creation classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"     * @param description String containing the description of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"     * @param date LocalDate containing the date of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"     * @param amount double containing the amount of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"    public Income(String description, LocalDate date, double amount) throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"        super(description, date, amount);","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"        LOGGER.log(Level.INFO,(\"Income created with description: \" +","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"                description + \" date: \" + date + \" amount: \" + amount));","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"     * This method is used to get the category of the financial record.","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"     * @return String containing the category of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"        return \"Income: \" + getDescription() + ","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"                \" | Date: \" + getDateString()+ \" | Amount: $\" + String.format(\"%.2f\", getAmount());","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"bljhty":64}},{"path":"src/main/java/seedu/duke/financialrecords/Transport.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.financialrecords;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.expensetypes.TransportationType;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":" * Transport class that inherits from expense.","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Hongzhii"},"content":" * Represents transportation expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Hongzhii"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Hongzhii"},"content":"public class Transport extends Expense {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Hongzhii"},"content":"    private TransportationType transportationType;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Hongzhii"},"content":"     * Transport class constructor","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Hongzhii"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Hongzhii"},"content":"     * @param description","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Hongzhii"},"content":"     * @param date","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Hongzhii"},"content":"     * @param amount","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Hongzhii"},"content":"     * @param transportationType","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Hongzhii"},"content":"     * @throws KaChinnnngException","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Hongzhii"},"content":"    public Transport(String description, LocalDate date, double amount,","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Hongzhii"},"content":"                     TransportationType transportationType) throws KaChinnnngException {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Hongzhii"},"content":"        super(description, date, amount);","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Hongzhii"},"content":"        this.transportationType \u003d transportationType;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Hongzhii"},"content":"     * Returns transportation type","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Hongzhii"},"content":"     * @return","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Hongzhii"},"content":"    public TransportationType getTransportationType() {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Hongzhii"},"content":"        return transportationType;","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Hongzhii"},"content":"     * Returns a string that contains all the information on the expense record","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Hongzhii"},"content":"     * @return","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Hongzhii"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Hongzhii"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Hongzhii"},"content":"        return \"Transportation Expense: \" + getDescription() +","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Hongzhii"},"content":"                \" | Date: \" + getDateString() + \" | Amount: $\" + String.format(\"%.2f\", getAmount());","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Hongzhii":46}},{"path":"src/main/java/seedu/duke/financialrecords/Utilities.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.financialrecords;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.expensetypes.UtilityType;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":" * Utilities class that inherits from expense.","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Hongzhii"},"content":" * Represents utility expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Hongzhii"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Hongzhii"},"content":"public class Utilities extends Expense {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Hongzhii"},"content":"    private UtilityType utilityType;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Hongzhii"},"content":"     * Utilities class constructor","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Hongzhii"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Hongzhii"},"content":"     * @param description","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Hongzhii"},"content":"     * @param date","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Hongzhii"},"content":"     * @param amount","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Hongzhii"},"content":"     * @param utilityType","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Hongzhii"},"content":"     * @throws KaChinnnngException","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Hongzhii"},"content":"    public Utilities(String description, LocalDate date, double amount,","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Hongzhii"},"content":"                     UtilityType utilityType) throws KaChinnnngException {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Hongzhii"},"content":"        super(description, date, amount);","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Hongzhii"},"content":"        this.utilityType \u003d utilityType;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Hongzhii"},"content":"     * Returns utility type","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Hongzhii"},"content":"     * @return","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Hongzhii"},"content":"    public UtilityType getUtilityType() {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Hongzhii"},"content":"        return utilityType;","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Hongzhii"},"content":"     * Returns a string that contains all the information on the expense record","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Hongzhii"},"content":"     * @return","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Hongzhii"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Hongzhii"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Hongzhii"},"content":"        return \"Utilities Expense: \" + getDescription() +","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Hongzhii"},"content":"                \" | Date: \" + getDateString() + \" | Amount: $\" + String.format(\"%.2f\", getAmount());","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Hongzhii":46}},{"path":"src/main/java/seedu/duke/financialrecords/expensetypes/MealType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.financialrecords.expensetypes;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":" * Enum class to represent meal types.","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"public enum MealType {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"    NONE, BREAKFAST, LUNCH, DINNER","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Hongzhii":8}},{"path":"src/main/java/seedu/duke/financialrecords/expensetypes/TransportationType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.financialrecords.expensetypes;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":" * Enum class that represents all transportation types.","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"public enum TransportationType {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"    NONE, TRAIN, BUS, TAXI, FUEL","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Hongzhii":8}},{"path":"src/main/java/seedu/duke/financialrecords/expensetypes/UtilityType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.financialrecords.expensetypes;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":" * Enum class that represents all utility types.","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"public enum UtilityType {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"    NONE, WATER, ELECTRICITY, GAS","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Hongzhii":8}},{"path":"src/main/java/seedu/duke/parser/ExpenseParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.Food;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.Transport;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.Utilities;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.expensetypes.MealType;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.expensetypes.TransportationType;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.expensetypes.UtilityType;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Hongzhii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Hongzhii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Hongzhii"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Hongzhii"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Hongzhii"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Hongzhii"},"content":"public class ExpenseParser {","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Hongzhii"},"content":"    public static final String CATEGORY_FIELD \u003d \"ca\";","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Hongzhii"},"content":"    public static final String DESCRIPTION_FIELD \u003d \"de\";","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Hongzhii"},"content":"    public static final String DATE_FIELD \u003d \"da\";","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Hongzhii"},"content":"    public static final String AMOUNT_FIELD \u003d \"am\";","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Hongzhii"},"content":"    public static final String INDEX_FIELD \u003d \"in\";","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Hongzhii"},"content":"    public static LocalDate parseDate(String expenseDateString) throws KaChinnnngException {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Hongzhii"},"content":"        LocalDate expenseDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Hongzhii"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/uuuu\")","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Hongzhii"},"content":"                .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Hongzhii"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Hongzhii"},"content":"            expenseDate \u003d LocalDate.parse(expenseDateString, formatter);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Hongzhii"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Hongzhii"},"content":"            throw new KaChinnnngException(\"Please enter a valid date in the format dd/MM/yyyy\");","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Hongzhii"},"content":"        if (expenseDate.isAfter(LocalDate.now())) {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Hongzhii"},"content":"            throw new KaChinnnngException(\"Please enter a date that is not in the future\");","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Hongzhii"},"content":"        return expenseDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Hongzhii"},"content":"    public static Expense parseExpense(HashMap\u003cString, String\u003e argumentsByField) throws KaChinnnngException {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Hongzhii"},"content":"        if (!argumentsByField.containsKey(CATEGORY_FIELD) ||","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Hongzhii"},"content":"                !argumentsByField.containsKey(DESCRIPTION_FIELD) ||","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Hongzhii"},"content":"                !argumentsByField.containsKey(DATE_FIELD) ||","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Hongzhii"},"content":"                !argumentsByField.containsKey(AMOUNT_FIELD)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Hongzhii"},"content":"            throw new KaChinnnngException(\"Missing fields detected\");","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Hongzhii"},"content":"        String expenseCategoryString \u003d argumentsByField.get(CATEGORY_FIELD).toLowerCase();","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Hongzhii"},"content":"        String expenseDescriptionString \u003d argumentsByField.get(DESCRIPTION_FIELD);","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Hongzhii"},"content":"        String expenseDateString \u003d argumentsByField.get(DATE_FIELD);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Hongzhii"},"content":"        String expenseAmountString \u003d argumentsByField.get(AMOUNT_FIELD);","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Hongzhii"},"content":"        LocalDate expenseDate \u003d parseDate(expenseDateString);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Hongzhii"},"content":"        double expenseAmount;","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Hongzhii"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Hongzhii"},"content":"            expenseAmount \u003d Double.parseDouble(expenseAmountString);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Hongzhii"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Hongzhii"},"content":"            throw new KaChinnnngException(\"Please enter a valid amount\");","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Hongzhii"},"content":"        if (expenseAmount \u003e 999999.99 || expenseAmount \u003c\u003d 0) {","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"Hongzhii"},"content":"            throw new KaChinnnngException(\"Expense amount must be between $0.01 and $999999.99\");","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"Hongzhii"},"content":"        if (expenseCategoryString.equals(\"food\")) {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"Hongzhii"},"content":"            return new Food(expenseDescriptionString, expenseDate, expenseAmount, MealType.NONE);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"Hongzhii"},"content":"        } else if (expenseCategoryString.equals(\"transport\")){","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Hongzhii"},"content":"            return new Transport(expenseDescriptionString, expenseDate, expenseAmount, TransportationType.NONE);","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"        } else if (expenseCategoryString.equals(\"utilities\")) {","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"Hongzhii"},"content":"            return new Utilities(expenseDescriptionString, expenseDate, expenseAmount, UtilityType.NONE);","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"        } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Please enter a valid category\");","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"Hongzhii"},"content":"    public static int getIndex(HashMap\u003cString, String\u003e argumentsByFields) throws KaChinnnngException {","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Hongzhii"},"content":"        if (!argumentsByFields.containsKey(INDEX_FIELD)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"Hongzhii"},"content":"            throw new KaChinnnngException(\"Missing index field detected\");","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"Hongzhii"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"Hongzhii"},"content":"            return Integer.parseInt(argumentsByFields.get(INDEX_FIELD));","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"Hongzhii"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"Hongzhii"},"content":"            throw new KaChinnnngException(\"Please enter a valid index\");","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"bljhty":3,"Hongzhii":83}},{"path":"src/main/java/seedu/duke/parser/FindParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"public class FindParser {","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"     * Parses the find command input.","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"     * @param fullCommand The full command string input by the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"     * @return An array of Strings containing the parsed parameters in the order: TYPE, CATEGORY, DESCRIPTION, DATE.","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException If the command format is invalid.","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"    public static String[] parseFindCommand(String fullCommand) throws KaChinnnngException {","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"        String[] tokens \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"        String[] parsedParameters \u003d new String[4];  // To store TYPE, CATEGORY, DESCRIPTION, DATE","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"        String[] validParameters \u003d {\"/t\", \"/cat\", \"/de\", \"/date\"};  // List of valid parameters","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"        for (String token : tokens) {","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"            if (token.startsWith(\"/\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"                boolean isValidParam \u003d false;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"                for (String validParam : validParameters) {","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"                    if (token.equals(validParam)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"                        isValidParam \u003d true;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"                        break;","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"                    }","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"                if (!isValidParam) {","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"                    throw new KaChinnnngException(\"Unrecognized parameter \\\"\" + token + \"\\\". \" +","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"                            \"Please refer to the help guide for valid parameters.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"        if (fullCommand.contains(\"/type\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Please use /t instead of /type for specifying the type.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"        if (fullCommand.contains(\"/category\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Please use /cat instead of /category for specifying the category.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"        if (fullCommand.contains(\"/description\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Please use /de instead of /description for specifying the description.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"        if (!fullCommand.contains(\"/t\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"The /t TYPE field is mandatory.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"        int typeIndex \u003d indexOf(tokens, \"/t\");","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"        if (typeIndex \u003d\u003d tokens.length - 1 || tokens[typeIndex + 1].startsWith(\"/\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"The value for /t TYPE cannot be empty.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"        parsedParameters[0] \u003d tokens[typeIndex + 1];","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"        if (fullCommand.contains(\"/cat\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"            int categoryIndex \u003d indexOf(tokens, \"/cat\");","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"            if (categoryIndex \u003d\u003d tokens.length - 1 || tokens[categoryIndex + 1].startsWith(\"/\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"                throw new KaChinnnngException(\"The value for /c CATEGORY cannot be empty.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"            parsedParameters[1] \u003d tokens[categoryIndex + 1];","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"        if (fullCommand.contains(\"/de\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"            int descriptionIndex \u003d indexOf(tokens, \"/de\");","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"            if (descriptionIndex \u003d\u003d tokens.length - 1 || tokens[descriptionIndex + 1].startsWith(\"/\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"                throw new KaChinnnngException(\"The value for /de DESCRIPTION cannot be empty.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"            parsedParameters[2] \u003d tokens[descriptionIndex + 1];","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"        if (fullCommand.contains(\"/date\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"            int dateIndex \u003d indexOf(tokens, \"/date\");","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"            if (dateIndex \u003d\u003d tokens.length - 1 || tokens[dateIndex + 1].startsWith(\"/\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"                throw new KaChinnnngException(\"The value for /da DATE cannot be empty.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"            parsedParameters[3] \u003d tokens[dateIndex + 1];","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"        // Check that at least one optional field is provided","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"        if (parsedParameters[1] \u003d\u003d null \u0026\u0026 parsedParameters[2] \u003d\u003d null \u0026\u0026 parsedParameters[3] \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"At least one of the optional fields [/c CATEGORY], \" +","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"                                            \"[/de DESCRIPTION], [/da DATE] must be provided.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"        return parsedParameters;","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"     * Helper method to find the index of a specific string in an array.","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"     * @param array The array to search.","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"     * @param value The string value to find.","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"     * @return The index of the value in the array, or -1 if not found.","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"    private static int indexOf(String[] array, String value) {","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"        for (int i \u003d 0; i \u003c array.length; i++) {","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"            if (array[i].equals(value)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"                return i;","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"        return -1;","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"bljhty":102}},{"path":"src/main/java/seedu/duke/parser/IncomeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import java.io.File;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":" * Represents the parser for the Income class.","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":" * This class serves to parse the user input into a format that the Income class can understand","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"public class IncomeParser {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"    public static final String DESCRIPTION_FIELD \u003d \"de\";","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"    public static final String DATE_FIELD \u003d \"da\";","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"    public static final String AMOUNT_FIELD \u003d \"am\";","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"    public static final String INDEX_FIELD \u003d \"in\";","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(IncomeParser.class.getName());","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"    static {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"            File dir \u003d new File(\"logs\");","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"                if (!dir.mkdirs()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"                    throw new KaChinnnngException(\"Failed to create directory \" + dir.getAbsolutePath());","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"            FileHandler fh \u003d new FileHandler(\"logs/IncomeParser.log\", true);","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"            SimpleFormatter formatter \u003d new SimpleFormatter();","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"            fh.setFormatter(formatter);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"            LOGGER.addHandler(fh);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"            LOGGER.setLevel(Level.ALL);","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"            LOGGER.setUseParentHandlers(false);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", e);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"     * This method is used to parse the date of the income.","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"     * This method is used by the IncomeParser class in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"     * This method is used by the IncomeManager class in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"     * @param incomeDateString String containing the date of the income","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"     * @return incomeDate LocalDate containing the date of the income","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"    public static LocalDate parseDate(String incomeDateString) throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"        assert incomeDateString !\u003d null : \"incomeDateString should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"        LocalDate incomeDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/uuuu\")","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"                .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"            incomeDate \u003d LocalDate.parse(incomeDateString, formatter);","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.WARNING, \"Invalid date format\" + incomeDateString, e);","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Please enter a valid date in the format dd/MM/yyyy\");","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"        if (incomeDate.isAfter(LocalDate.now())) {","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.WARNING, \"Date is in the future\" + incomeDateString);","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Please enter a date that is not in the future\");","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"        return incomeDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"     * This method is used to parse the fields of the income.","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"     * This method is used by the IncomeManager class in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"     * @param argumentsByField HashMap containing the description, date, and amount of the income","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"     * @return Income object created from the provided fields","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"    public static Income parseIncome(HashMap\u003cString, String\u003e argumentsByField) throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"        if (!argumentsByField.containsKey(DESCRIPTION_FIELD) ||","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"                !argumentsByField.containsKey(DATE_FIELD) ||","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"                !argumentsByField.containsKey(AMOUNT_FIELD)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Missing fields detected\");","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"        String incomeDescriptionString \u003d argumentsByField.get(DESCRIPTION_FIELD);","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"        String incomeDateString \u003d argumentsByField.get(DATE_FIELD);","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"        String incomeAmountString \u003d argumentsByField.get(AMOUNT_FIELD);","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"        LocalDate incomeDate \u003d parseDate(incomeDateString);","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"        double incomeAmount;","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"            incomeAmount \u003d Double.parseDouble(incomeAmountString);","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.WARNING, \"Invalid amount format\" + incomeAmountString, e);","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Please enter a valid amount\");","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"        if (incomeAmount \u003e 999999.99 || incomeAmount \u003c\u003d 0) {","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.WARNING, \"Invalid amount\" + incomeAmountString);","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Income amount must be between $0.01 and $999999.99\");","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"        return new Income(incomeDescriptionString, incomeDate, incomeAmount);","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"bljhty"},"content":"     * This method is used to get the index of the income.","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"     * This method is used by the IncomeDeleter class in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"bljhty"},"content":"     * @param argumentsByFields HashMap containing the index of the income","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"bljhty"},"content":"     * @return index int containing the index of the income","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"bljhty"},"content":"    public static int getIndex(HashMap\u003cString, String\u003e argumentsByFields) throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"bljhty"},"content":"        assert argumentsByFields !\u003d null : \"argumentsByFields should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"bljhty"},"content":"        if (!argumentsByFields.containsKey(INDEX_FIELD)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Missing index field detected\");","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"bljhty"},"content":"        int index;","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"bljhty"},"content":"            index \u003d Integer.parseInt(argumentsByFields.get(INDEX_FIELD));","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"bljhty"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Please enter a valid index\");","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"bljhty"},"content":"        if (index \u003c\u003d 0) {","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Please enter a valid index\");","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"        return index;","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"bljhty":138}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import java.io.File;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"/*","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":" * parser class to parse user input","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"public class Parser {","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"    //private static final Logger LOGGER \u003d Logger.getLogger(Parser.class.getName());","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(Parser.class.getName());","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"    static {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"            File dir \u003d new File(\"logs\");","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"                if (!dir.mkdirs()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"                    throw new KaChinnnngException(\"Failed to create directory \" + dir.getAbsolutePath());","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"            FileHandler fh \u003d new FileHandler(\"logs/Parser.log\", true);","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"            SimpleFormatter formatter \u003d new SimpleFormatter();","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"            fh.setFormatter(formatter);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"            LOGGER.addHandler(fh);","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"            LOGGER.setLevel(Level.ALL);","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"            LOGGER.setUseParentHandlers(false);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", e);","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"     * This method is used to parse the user input.","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"     * This method is used by the Main class in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"     * @param fullCommand String containing the user input","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"     * @return String containing the command to be executed","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"    public static String parse(String fullCommand) {","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"        assert fullCommand !\u003d null : \"fullCommand should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"        String trimmedCommand \u003d fullCommand.trim();","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"        String commandLowerCase \u003d trimmedCommand.toLowerCase();","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"        LOGGER.log(Level.INFO, (\"Parsing user input:\") + fullCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"        String resultCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"        if (commandLowerCase.equals(\"exit\")) {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"exit\";","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"        } else if (commandLowerCase.startsWith(\"add income\")) {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"add_income\";","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"        } else if (commandLowerCase.equals(\"list income\")) {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"list_income\";","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Hongzhii"},"content":"        } else if (commandLowerCase.startsWith(\"add expense\")) {","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"add_expense\";","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Hongzhii"},"content":"        } else if (commandLowerCase.equals((\"list expense\"))) {","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"list_expense\";","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"KenCheung18"},"content":"        } else if (commandLowerCase.equals(\"help\")) {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"help\";","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"limyuhching"},"content":"        } else if (commandLowerCase.equals(\"list\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"list\";","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"limyuhching"},"content":"        } else if (commandLowerCase.startsWith(\"delete income\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"delete_income\";","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"limyuhching"},"content":"        } else if (commandLowerCase.startsWith(\"delete expense\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"delete_expense\";","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"KenCheung18"},"content":"        } else if (commandLowerCase.equals(\"balance\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"balance\";","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"        } else if (commandLowerCase.startsWith(\"find\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"find\";","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"KenCheung18"},"content":"        } else if (commandLowerCase.startsWith(\"clear incomes\")) {","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"KenCheung18"},"content":"            resultCommand \u003d \"clear_incomes\";","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"KenCheung18"},"content":"        } else if (commandLowerCase.startsWith(\"clear expenses\")) {","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"KenCheung18"},"content":"            resultCommand \u003d \"clear_expenses\";","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"KenCheung18"},"content":"        } else if (commandLowerCase.startsWith(\"clear all\")) {","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"KenCheung18"},"content":"            resultCommand \u003d \"clear_all\";","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"        } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"invalid\";","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"        LOGGER.log(Level.INFO , (\"Parsed command: \") + resultCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"        return resultCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"limyuhching":3,"bljhty":77,"Hongzhii":2,"KenCheung18":8}},{"path":"src/main/java/seedu/duke/storage/GetFromTxt.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Food;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Utilities;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Transport;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.expensetypes.MealType;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.expensetypes.TransportationType;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.expensetypes.UtilityType;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"import java.io.File;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":" * The GetFromTxt class is responsible for reading financial records data from a text file.","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":" * It parses the contents of the file and populates two ArrayLists: one for Incomes and one for Expenses.","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":" *","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":" * This class handles exceptions for file creation errors, parsing errors, and other issues that may arise","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"KenCheung18"},"content":" * when reading data from the file.","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":"public class GetFromTxt {","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"KenCheung18"},"content":"    private static final String AMOUNT_NOT_SUPPORT_ERROR \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"KenCheung18"},"content":"            \"Amount field from this line is not supported from storage file \";","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"    private static final String DATE_TIME_FORMAT_ERROR \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"KenCheung18"},"content":"            \"Date time format incorrect on this line from storage file \";","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"KenCheung18"},"content":"    private static final String FILE_CREATION_ERROR \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"KenCheung18"},"content":"            \"Something went wrong while creating the file from storage file \";","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"KenCheung18"},"content":"    private static final String INDEX_OUT_OF_BOUND_FROM_FILE_ERROR \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"KenCheung18"},"content":"            \"Details missed on this line from storage file \";","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"KenCheung18"},"content":"    private static final String NUMBER_FROM_FILE_INCORRECT \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"KenCheung18"},"content":"            \"The expense type is incorrect on this line from storage file \";","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"KenCheung18"},"content":"    private final File file;","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"KenCheung18"},"content":"     * Construct a new object of the GetFromTxt class with the provided file path.","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"KenCheung18"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"KenCheung18"},"content":"     * @param path The path to the text file containing financial records data.","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"KenCheung18"},"content":"    public GetFromTxt(String path) {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"KenCheung18"},"content":"        file \u003d new File(path);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"KenCheung18"},"content":"     * Reads financial records data from the text file and add to the corresponding ArrayLists","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"KenCheung18"},"content":"     * with Income and Expense objects.","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"KenCheung18"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"KenCheung18"},"content":"     * @param incomes   The ArrayList to store Income objects.","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"KenCheung18"},"content":"     * @param expenses  The ArrayList to store Expense objects.","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"KenCheung18"},"content":"     * @throws FileNotFoundException If the file specified by the path cannot be found.","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"KenCheung18"},"content":"    public void getFromTextFile(ArrayList\u003cIncome\u003e incomes, ArrayList\u003cExpense\u003e expenses) throws FileNotFoundException {","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"KenCheung18"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"KenCheung18"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"KenCheung18"},"content":"                return; // If there is no such file in the directory, create the file and return without reading data.","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"KenCheung18"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"KenCheung18"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"KenCheung18"},"content":"            System.out.println(FILE_CREATION_ERROR);","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"KenCheung18"},"content":"        Scanner s \u003d new Scanner(file);                      // Create a Scanner using the File as the source","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"KenCheung18"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"KenCheung18"},"content":"            String textLine \u003d s.nextLine();","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"KenCheung18"},"content":"            try {","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"KenCheung18"},"content":"                // Parse the data from the text line","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"KenCheung18"},"content":"                int expenseType \u003d 0;","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"KenCheung18"},"content":"                String commandFromFile \u003d textLine.split(\" \\\\| \")[0];","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"KenCheung18"},"content":"                String descriptionFromFile \u003d textLine.split(\" \\\\| \")[1];","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"KenCheung18"},"content":"                double amountFromFile \u003d Double. parseDouble(textLine.split(\" \\\\| \")[2]);","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"KenCheung18"},"content":"                LocalDate dateFromFile \u003d  LocalDate.parse(textLine.split(\" \\\\| \")[3]);","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"KenCheung18"},"content":"                // Check for valid amount range","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"KenCheung18"},"content":"                if (amountFromFile \u003e 999999.99 || amountFromFile \u003c\u003d 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"KenCheung18"},"content":"                    throw new KaChinnnngException(\"Expense amount must be between $0.01 and $999999.99\");","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"KenCheung18"},"content":"                }","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"KenCheung18"},"content":"                if (!commandFromFile.equals(\"I\")){","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"KenCheung18"},"content":"                    expenseType \u003d Integer.parseInt(textLine.split(\" \\\\| \")[4]);","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"KenCheung18"},"content":"                }","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"KenCheung18"},"content":"                // Create appropriate objects based on the commandFromFile","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"KenCheung18"},"content":"                switch (commandFromFile) {","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"KenCheung18"},"content":"                case \"I\":","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"KenCheung18"},"content":"                    incomes.add(new Income(descriptionFromFile, dateFromFile, amountFromFile));","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"KenCheung18"},"content":"                    break;","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"KenCheung18"},"content":"                case \"EF\":","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"KenCheung18"},"content":"                    expenses.add(new Food(descriptionFromFile, dateFromFile,","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"KenCheung18"},"content":"                            amountFromFile, MealType.values()[expenseType]));","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"KenCheung18"},"content":"                    break;","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"KenCheung18"},"content":"                case \"ET\":","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"KenCheung18"},"content":"                    expenses.add(new Transport(descriptionFromFile, dateFromFile,","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"KenCheung18"},"content":"                            amountFromFile, TransportationType.values()[expenseType]));","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"KenCheung18"},"content":"                    break;","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"KenCheung18"},"content":"                case \"EU\":","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"KenCheung18"},"content":"                    expenses.add(new Utilities(descriptionFromFile, dateFromFile,","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"KenCheung18"},"content":"                            amountFromFile, UtilityType.values()[expenseType]));","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"KenCheung18"},"content":"                    break;","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"KenCheung18"},"content":"                default:","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"KenCheung18"},"content":"                    System.out.println(\"The format of this line is incorrect \" + \"\\\"\" + textLine + \"\\\"\");","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"KenCheung18"},"content":"                }","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"KenCheung18"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"KenCheung18"},"content":"                System.out.println(INDEX_OUT_OF_BOUND_FROM_FILE_ERROR + \"\\\"\" + textLine + \"\\\"\");","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"KenCheung18"},"content":"            } catch (KaChinnnngException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"KenCheung18"},"content":"                System.out.println(AMOUNT_NOT_SUPPORT_ERROR + \"\\\"\" + textLine + \"\\\"\");","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"KenCheung18"},"content":"            } catch (DateTimeParseException e){","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"KenCheung18"},"content":"                System.out.println(DATE_TIME_FORMAT_ERROR + \"\\\"\" + textLine + \"\\\"\");","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"KenCheung18"},"content":"            } catch(NumberFormatException e){","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"KenCheung18"},"content":"                System.out.println(NUMBER_FROM_FILE_INCORRECT + \"\\\"\" + textLine + \"\\\"\");","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"KenCheung18"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"KenCheung18"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"KenCheung18":118}},{"path":"src/main/java/seedu/duke/storage/SaveToTxt.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Food;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Utilities;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Transport;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":" * The SaveToTxt class is responsible for saving financial records data to a text file.","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":" * It can save both Income and Expense objects to the specified file.","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":" *","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":" * This class handles exceptions for IO errors that may occur during file operations.","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"public class SaveToTxt {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"    private static final String IO_ERROR_MESSAGE \u003d \"An error occurred while saving tasks to the file.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"    private final String path;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"     * Construct a new object of the SaveToTxt class with the file path.","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"KenCheung18"},"content":"     * @param path The path to the text file where data will be saved.","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":"    public SaveToTxt(String path) {","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"KenCheung18"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"KenCheung18"},"content":"     * Saves both Income and Expense objects to the specified text file.","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"KenCheung18"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"KenCheung18"},"content":"     * @param incomes   The ArrayList of Income objects to save.","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"KenCheung18"},"content":"     * @param expenses  The ArrayList of Expense objects to save.","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"KenCheung18"},"content":"    public void saveIncomeAndExpense(ArrayList\u003cIncome\u003e incomes, ArrayList\u003cExpense\u003e expenses){","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"KenCheung18"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"KenCheung18"},"content":"            saveIncomeToTextFile(incomes);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"KenCheung18"},"content":"            saveExpenseToTextFile(expenses);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"KenCheung18"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"KenCheung18"},"content":"            System.out.println(IO_ERROR_MESSAGE);","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"KenCheung18"},"content":"     * Saves Income objects to the text file. Each Income object is represented as a line in the txt file.","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"KenCheung18"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"KenCheung18"},"content":"     * @param incomes The ArrayList of Income objects to save.","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"KenCheung18"},"content":"     * @throws IOException If an IO error occurs during the file write operation.","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"KenCheung18"},"content":"    public void saveIncomeToTextFile(ArrayList\u003cIncome\u003e incomes) throws IOException {","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"KenCheung18"},"content":"        try (FileWriter fw \u003d new FileWriter(path)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"KenCheung18"},"content":"            for (Income income : incomes) {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"KenCheung18"},"content":"                String incomeDescription \u003d income.getDescription();","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"KenCheung18"},"content":"                String incomeDate \u003d String.valueOf(income.getDate());","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"KenCheung18"},"content":"                String incomeAmount \u003d String.valueOf(income.getAmount());","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"KenCheung18"},"content":"                String textToAdd \u003d \"I\" + \" | \" + incomeDescription + \" | \" + incomeAmount + \" | \" + incomeDate + \"\\n\";","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"KenCheung18"},"content":"                fw.write(textToAdd);","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"KenCheung18"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"KenCheung18"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"KenCheung18"},"content":"            System.out.println(IO_ERROR_MESSAGE);","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"KenCheung18"},"content":"     * Saves Expense objects to the text file. Each Expense object is represented as a line in the file,","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"KenCheung18"},"content":"     * and the type of Expense (Food, Transport, or Utilities) is specified in the line.","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"KenCheung18"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"KenCheung18"},"content":"     * @param expenses The ArrayList of Expense objects to save.","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"KenCheung18"},"content":"     * @throws IOException If an IO error occurs during the file write operation.","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"KenCheung18"},"content":"    public void saveExpenseToTextFile(ArrayList\u003cExpense\u003e expenses) throws IOException{","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"KenCheung18"},"content":"        try (FileWriter fw \u003d new FileWriter(path, true)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"KenCheung18"},"content":"            for (Expense expense : expenses) {","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"KenCheung18"},"content":"                String textToAdd \u003d \"\";","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"KenCheung18"},"content":"                String expenseDescription \u003d expense.getDescription();","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"KenCheung18"},"content":"                String expenseDate \u003d String.valueOf(expense.getDate());;","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"KenCheung18"},"content":"                String expenseAmount \u003d String.valueOf(expense.getAmount());","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"KenCheung18"},"content":"                // Determine the type of Expense and format the line accordingly","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"KenCheung18"},"content":"                if (expense.getClass() \u003d\u003d Food.class) {","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"KenCheung18"},"content":"                    textToAdd \u003d \"EF\" + \" | \" + expenseDescription + \" | \" + expenseAmount + \" | \"","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"KenCheung18"},"content":"                            + expenseDate + \" | \" + ((Food) expense).getMealType().ordinal() + \"\\n\";","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"KenCheung18"},"content":"                } else if (expense.getClass() \u003d\u003d Transport.class) {","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"KenCheung18"},"content":"                    textToAdd \u003d \"ET\" + \" | \" + expenseDescription + \" | \" + expenseAmount + \" | \"","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"KenCheung18"},"content":"                            + expenseDate + \" | \" + ((Transport) expense).getTransportationType().ordinal() + \"\\n\";","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"KenCheung18"},"content":"                } else if (expense.getClass() \u003d\u003d Utilities.class) {","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"KenCheung18"},"content":"                    textToAdd \u003d \"EU\" + \" | \" + expenseDescription + \" | \" + expenseAmount + \" | \"","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"KenCheung18"},"content":"                            + expenseDate + \" | \" + ((Utilities) expense).getUtilityType().ordinal() + \"\\n\";","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"KenCheung18"},"content":"                }","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"KenCheung18"},"content":"                fw.write(textToAdd);","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"KenCheung18"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"KenCheung18"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"KenCheung18"},"content":"            System.out.println(IO_ERROR_MESSAGE);","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"KenCheung18"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"KenCheung18":98}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"import java.util.List;","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":" * This class handles the user interface of the program.","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"public class Ui {","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"    private static final String lineDivider \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"    public Scanner scanner;","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"     * Constructor for Ui.","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    public Ui() {","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"     * This method reads the command input by the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"     * @return String containing the command input by the user","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is no input provided by the user","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"    public String readCommand() throws KaChinnnngException {","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"        if (scanner.hasNextLine()) {","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"            return scanner.nextLine();","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"        } else {","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"No input provided by the user.\");","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"     * This method prints the line divider.","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"    public static void showLineDivider() {","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"        System.out.println(lineDivider);","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"     * Prints the welcome message when the program starts.","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2023-10-09"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"        System.out.println(lineDivider);","lastModifiedDate":"2023-10-09"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Welcome to KaChinnnngggg! How may i assist you today?\");","lastModifiedDate":"2023-10-09"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"        System.out.println(lineDivider);","lastModifiedDate":"2023-10-09"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"     * Prints the goodbye message when the program ends.","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"    public void printGoodbyeMessage() {","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"        System.out.println(lineDivider);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-10-09"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"        System.out.println(lineDivider);","lastModifiedDate":"2023-10-09"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"     * prints the message when the user inputs his income","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"     * @param income Income object created from the provided fields","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"    public void printIncomeAddedMessage(Income income) {","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Got it. I\u0027ve added this income:\\n\" + income.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"     * Prints a message indicating the start of the income list display.","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"    public void printListIncomeMessage() {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Here are your incomes:\");","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"Hongzhii"},"content":"    public void printExpenseAddedMessage(Expense expense) {","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"Hongzhii"},"content":"        System.out.println(\"Got it. I\u0027ve added this expense:\\n\" + expense.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"Hongzhii"},"content":"    public void printListExpenseMessage() {","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"Hongzhii"},"content":"        System.out.println(\"Here are your expenses:\");","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"        System.out.println(message);","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"    public void showMatchingIncomes(List\u003cIncome\u003e matchingIncomes) {","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"        if(matchingIncomes.isEmpty()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"            System.out.println(\"No matching incomes found.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"        } else {","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"            System.out.println(\"Here are the matching incomes in your list:\");","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"            for (Income income : matchingIncomes) {","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"                System.out.println(income.toString());","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"    public void showMatchingExpenses(List\u003cExpense\u003e matchingExpenses) {","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"        if(matchingExpenses.isEmpty()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"            System.out.println(\"No matching expenses found.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"        } else {","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"            System.out.println(\"Here are the matching expenses in your list:\");","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"            for (Expense expense : matchingExpenses) {","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"                System.out.println(expense.toString());","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"limyuhching":2,"bljhty":101,"Hongzhii":9}},{"path":"src/test/java/seedu/duke/commands/BalanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":" * Tests for the {@link Balance} class.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":" * This test class provides test cases to check the calculation and reporting","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":" * of financial balance between income and expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"public class BalanceTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"    private ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    private ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"     * Sets up the test fixture.","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"     * Called before every test case method.","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"    public void setup() throws KaChinnnngException {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"        incomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"        expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"        incomes.add(new Income(\"Salary\", LocalDate.of(2023, 10, 10), 5000.0));","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"        incomes.add(new Income(\"Bonus\", LocalDate.of(2023, 10, 15), 1000.0));","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"        expenses.add(new Expense(\"Rent\", LocalDate.of(2023, 10, 5), 2000.0));","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"        expenses.add(new Expense(\"Groceries\", LocalDate.of(2023, 10, 7), 100.0));","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"     * Test the {@link Balance#getBalance()} method with both income and expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"     * This test case checks if the balance calculation correctly subtracts expenses from income.","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"    public void testGetBalance_withBothIncomeAndExpenses_returnsCorrectDifference() {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"        Balance balance \u003d new Balance(incomes, expenses);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"        assertEquals(3900.0, balance.getBalance());","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"     * Test the {@link Balance#getBalance()} method with no records.","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"     * This test case checks if the balance calculation correctly returns 0.","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"    public void testNoRecords() {","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"        Balance balance \u003d new Balance(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"        assertEquals(0, balance.getBalance(),","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"                \"Balance should be 0 when no records are present.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"     * Test the {@link Balance#getBalance()} method with no expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"     * This test case checks if the balance calculation correctly returns a positive value equal to income.","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"    public void testGetBalance_withNoExpenses_returnsIncomeValue()throws KaChinnnngException {","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"        ArrayList\u003cIncome\u003e incomesOnly \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"        incomesOnly.add(new Income(\"Salary\", LocalDate.of(2023, 10, 10), 5000.0));","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"        Balance balance \u003d new Balance(incomesOnly, new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"        assertEquals(5000.0, balance.getBalance(),","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"                \"Balance should equal sum of all incomes when no expenses are present.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"     * Test the {@link Balance#getBalance()} method with no incomes.","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"     * This test case checks if the balance calculation correctly returns a negative value equal to expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"    public void testGetBalance_withNoIncomes_returnsNegativeExpenseValue()throws KaChinnnngException {","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"        ArrayList\u003cExpense\u003e expensesOnly \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"        expensesOnly.add(new Expense(\"Rent\", LocalDate.of(2023, 10, 5), 2000.0));","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"        Balance balance \u003d new Balance(new ArrayList\u003c\u003e(), expensesOnly);","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"        assertEquals(-2000.0, balance.getBalance(),","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"                \"Balance should be negative sum of all expenses when no incomes are present.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"bljhty":85}},{"path":"src/test/java/seedu/duke/commands/DeleteExpenseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":" * This class contains JUnit tests for the DeleteExpenseCommand class.","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"public class DeleteExpenseCommandTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"    private DeleteExpenseCommand deleteExpenseCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"    private Ui ui;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"    private ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"        deleteExpenseCommand \u003d new DeleteExpenseCommand();","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"        expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"     * Test the execution of the DeleteExpenseCommand with valid input. The expense should be deleted.","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_validInput_expenseDeleted() throws KaChinnnngException {","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"        // Arrange","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"        Expense expense \u003d new Expense(\"Lunch\", LocalDate.now().minusDays(1), 20.00);","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"        expenses.add(expense);","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"        String fullCommand \u003d \"delete expense 1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"        // Act","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"        assertDoesNotThrow(() -\u003e deleteExpenseCommand.execute(expenses, fullCommand, ui));","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"        // Assert","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"        assertEquals(0, expenses.size());","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"limyuhching"},"content":"     * Test the execution of the DeleteExpenseCommand with missing arguments. It should throw a KaChinnnngException.","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_missingArgument_exceptionThrown() {","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"        // Arrange","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"        String fullCommand \u003d \"delete expense\";","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"        // Act and Assert","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e deleteExpenseCommand.execute(expenses, fullCommand, ui));","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"limyuhching"},"content":"     * Test the execution of the DeleteExpenseCommand with an invalid index. It should throw a KaChinnnngException.","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"limyuhching"},"content":"        // Arrange","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"limyuhching"},"content":"        String fullCommand \u003d \"delete expense 1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"limyuhching"},"content":"        // Act and Assert","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"limyuhching"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e deleteExpenseCommand.execute(expenses, fullCommand, ui));","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"limyuhching"},"content":"     * Test the execution of the DeleteExpenseCommand with a non-existent expense index.","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"limyuhching"},"content":"     * It should throw a KaChinnnngException.","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_nonExistentExpenseIndex_exceptionThrown() {","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"limyuhching"},"content":"        // Arrange","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"limyuhching"},"content":"        String fullCommand \u003d \"delete expense 1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"limyuhching"},"content":"        // Act and Assert","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"limyuhching"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e deleteExpenseCommand.execute(expenses, fullCommand, ui));","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"limyuhching":82}},{"path":"src/test/java/seedu/duke/commands/DeleteIncomeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":" * This class contains JUnit tests for the DeleteIncomeCommand class.","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"public class DeleteIncomeCommandTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"    private DeleteIncomeCommand deleteIncomeCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"    private Ui ui;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"    private ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"        deleteIncomeCommand \u003d new DeleteIncomeCommand();","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"        incomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"     * Test the execution of the DeleteIncomeCommand with valid input. The income should be deleted.","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_validInput_incomeDeleted() throws KaChinnnngException {","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"        // Arrange","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"        Income income \u003d new Income(\"Salary\",","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"                LocalDate.of(2023, 10, 12), 5000.00);","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"        incomes.add(income);","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"        String fullCommand \u003d \"delete income 1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"        // Act","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"        assertDoesNotThrow(() -\u003e deleteIncomeCommand.execute(incomes, fullCommand, ui));","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"        // Assert","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"        assertEquals(0, incomes.size());","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"     * Test the execution of the DeleteIncomeCommand with missing arguments. It should throw a KaChinnnngException.","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_missingArgument_exceptionThrown() {","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"        // Arrange","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"        String fullCommand \u003d \"delete income\";","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"        // Act and Assert","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e deleteIncomeCommand.execute(incomes, fullCommand, ui));","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"limyuhching"},"content":"     * Test the execution of the DeleteIncomeCommand with an invalid index. It should throw a KaChinnnngException.","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"limyuhching"},"content":"        // Arrange","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"limyuhching"},"content":"        String fullCommand \u003d \"delete income 1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"limyuhching"},"content":"        // Act and Assert","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"limyuhching"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e deleteIncomeCommand.execute(incomes, fullCommand, ui));","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"limyuhching"},"content":"     * Test the execution of the DeleteIncomeCommand with a non-existent income index.","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"limyuhching"},"content":"     * It should throw a KaChinnnngException.","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_nonExistentIncomeIndex_exceptionThrown() {","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"limyuhching"},"content":"        // Arrange","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"limyuhching"},"content":"        String fullCommand \u003d \"delete income 1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"limyuhching"},"content":"        // Act and Assert","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"limyuhching"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e deleteIncomeCommand.execute(incomes, fullCommand, ui));","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"limyuhching":83}},{"path":"src/test/java/seedu/duke/financialrecords/ExpenseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.financialrecords;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":" * Test suite for the {@link Expense} class.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":" * This class contains unit tests to validate the behavior of the Expense class and ensure","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":" * correctness in the representation and management of financial expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"public class ExpenseTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    private Expense expense;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"     * Initializes common test fixtures before each test execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"    void setUp() {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"            expense \u003d new Expense(\"Lunch\", LocalDate.now().minusDays(1), 20.00);","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"        } catch (KaChinnnngException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"            fail(\"Setup failed due to exception: \" + e.getMessage());","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"     * Tests if an exception is thrown when the description of an Expense object is empty.","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"    void testExpenseDescription_notEmpty(){","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e new Expense(\"\", LocalDate.now(), 20.00));","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"     * Tests if an exception is thrown when the amount of an Expense object is negative.","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"    void testExpenseAmount_notNegative(){","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e new Expense(\"Lunch\", LocalDate.now(), -20.00));","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"     * Tests if an exception is thrown when the date of an Expense object is in the future.","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"    void testExpenseDate_notFuture(){","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e new Expense(\"Lunch\", LocalDate.now().plusDays(1), 20.00));","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"     * Tests if the correct description of the Expense object is returned.","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"    void getDescription() {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"Lunch\", expense.getDescription());","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"     * Tests if the correct date of the Expense object is returned.","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"    void getDate() {","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"        assertEquals(LocalDate.now().minusDays(1), expense.getDate());","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"     * Tests if the correct amount of the Expense object is returned.","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"    void getAmount() {","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"        assertEquals(20.00, expense.getAmount());","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"     * Tests if the correct date string of the Expense object is returned.","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"    void getDateString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"        assertEquals(LocalDate.now().minusDays(1).format(DateTimeFormatter.ofPattern(\"dd/MMM/yyyy\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"                expense.getDateString());","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"     * Tests the string representation of the Expense object.","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"    void testToString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"Expense: Lunch | Date: \" +","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"                        LocalDate.now().minusDays(1).format(DateTimeFormatter.ofPattern(\"dd/MMM/yyyy\")) +","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"                        \" | Amount: $20.00\",","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"                expense.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"bljhty":101}},{"path":"src/test/java/seedu/duke/financialrecords/IncomeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.financialrecords;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"public class IncomeTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"    public void testIncomeCreation() throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"        Income income \u003d new Income(\"Salary\", LocalDate.of(2023, 10, 12), 5000.00);","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"        assertNotNull(income);","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"Salary\", income.getDescription());","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"        assertEquals(LocalDate.of(2023, 10, 12), income.getDate());","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"        assertEquals(5000.00, income.getAmount());","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"    public void testToString() throws KaChinnnngException{","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"        Income income \u003d new Income(\"Salary\", LocalDate.of(2023, 10, 12), 5000.00);","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"        String expected \u003d \"Income: Salary | Date: 12/Oct/2023 | Amount: $5000.00\";","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"        assertEquals(expected, income.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"    public void testInvalidDescription() {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"            new Income(\"\", LocalDate.of(2023, 10, 12), 5000.00);","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"    public void testInvalidAmount() {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"            new Income(\"Salary\", LocalDate.of(2023, 10, 12), -5000.00);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"bljhty":42}},{"path":"src/test/java/seedu/duke/parser/ExpenseParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Food;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Transport;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Utilities;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"public class ExpenseParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseDate method in ExpenseParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"     * Specifically, it tests if the date is parsed correctly.","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if the parsed date is invalid","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"    void parseDate_validDate_success() throws KaChinnnngException {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"        LocalDate expectedDate \u003d LocalDate.of(2020, 02, 29);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"        LocalDate actualDate \u003d ExpenseParser.parseDate(\"29/02/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"        assertEquals(expectedDate, actualDate);","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseDate method in ExpenseParser","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"     * Specifically, it tests if a KaChinnnngException is thrown when trying to parse an invalid day.","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"    void parseDate_invalidDay_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseDate(\"32/02/2020\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseDate method in ExpenseParser","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"     * Specifically, it tests if a KaChinnnngException is thrown when trying to parse an invalid year.","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"    void parseDate_invalidDate_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseDate(\"10/10/20202\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseDate method in ExpenseParser","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"     * Specifically, it tests if a KaChinnnngException is thrown when trying to parse a date that is in the future.","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"    void parseDate_futureDate_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseDate(\"10/10/3021\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseExpense method in ExpenseParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"     * It verifies if the food category are correctly parsed into an Expense object.","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException for invalid scenarios","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"    void testParseExpense_foodCategory_success() throws KaChinnnngException {","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"food\");","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"Chicken Rice\");","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"3.50\");","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"        assertTrue(ExpenseParser.parseExpense(expenseFields) instanceof Food);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseExpense method in ExpenseParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"     * It verifies if the transport category are correctly parsed into an Expense object.","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException for invalid scenarios","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"    void testParseExpense_transportCategory_success() throws KaChinnnngException {","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"transport\");","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"Bus\");","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"1.50\");","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"        assertTrue(ExpenseParser.parseExpense(expenseFields) instanceof Transport);","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseExpense method in ExpenseParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"     * It verifies if the utilities category are correctly parsed into an Expense object.","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException for invalid scenarios","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"    void testParseExpense_utilitiesCategory_success() throws KaChinnnngException {","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"utilities\");","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"Electricity\");","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"50.00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"        assertTrue(ExpenseParser.parseExpense(expenseFields) instanceof Utilities);","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseExpense method in ExpenseParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"     * Tests if the expense parsing method throws an exception for an unrecognized category.","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"    void testParseExpense_invalidCategory_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"invalid\");","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"Chicken Rice\");","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"3.50\");","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseExpense(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseExpense method in ExpenseParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"bljhty"},"content":"     * Tests if the expense parsing method throws an exception for missing amount fields.","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"bljhty"},"content":"    void testParseExpense_missingAmountField_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"food\");","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"Chicken Rice\");","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseExpense(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseExpense method in ExpenseParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"bljhty"},"content":"     * Tests if the expense parsing method throws an exception for missing description fields.","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"bljhty"},"content":"    void testParseExpense_missingDescriptionFields_success(){","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"food\");","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"3.50\");","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseExpense(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseExpense method in ExpenseParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"bljhty"},"content":"     * Tests if the expense parsing method throws an exception for missing date fields.","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"bljhty"},"content":"    void testParseExpense_missingDateField_success(){","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"food\");","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"Chicken Rice\");","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"3.50\");","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseExpense(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"bljhty"},"content":"     * Tests if the getIndex method in ExpenseParser throws an exception for a valid index format.","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"bljhty"},"content":"    void testGetIndexValid() throws KaChinnnngException {","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.INDEX_FIELD, \"1\");","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"bljhty"},"content":"        assertEquals(1, ExpenseParser.getIndex(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"bljhty"},"content":"     * Tests if the getIndex method in ExpenseParser throws an exception for an invalid index format.","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"bljhty"},"content":"    void testGetIndexInvalid() {","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.INDEX_FIELD, \"a\");","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.getIndex(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"bljhty"},"content":"     * Tests if the expense parsing method throws an exception when the provided amount exceeds the limit.","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"bljhty"},"content":"    void testParseAmount_aboveLimit_exceptionThrown(){","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"food\");","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"Chicken Rice\");","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"1000000.00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseExpense(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"bljhty"},"content":"     * Tests if the expense parsing method throws an exception when the category field is empty.","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"bljhty"},"content":"    void testParseCategory_emptyString_exceptionThrown(){","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"Chicken Rice\");","lastModifiedDate":"2023-10-18"},{"lineNumber":213,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":214,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"9999.00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseExpense(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"bljhty"},"content":"     * Tests if the expense parsing method throws an exception when the description field is empty.","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"bljhty"},"content":"    void testParseDescription_emptyString_exceptionThrown(){","lastModifiedDate":"2023-10-18"},{"lineNumber":224,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"food\");","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"9999.00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":230,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseExpense(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":232,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":233,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"bljhty"},"content":"     * Tests if the expense parsing method throws an exception when the date field is empty.","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":236,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":237,"author":{"gitId":"bljhty"},"content":"    void testParseDate_emptyString_exceptionThrown(){","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":239,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"food\");","lastModifiedDate":"2023-10-18"},{"lineNumber":240,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"Chicken Rice\");","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"9999.00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseExpense(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":245,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":247,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":248,"author":{"gitId":"bljhty"},"content":"     * Tests if the expense parsing method throws an exception when the amount field is empty.","lastModifiedDate":"2023-10-18"},{"lineNumber":249,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":250,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":251,"author":{"gitId":"bljhty"},"content":"    void testParseAmount_emptyString_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":252,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":253,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"food\");","lastModifiedDate":"2023-10-18"},{"lineNumber":254,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"Chicken Rice\");","lastModifiedDate":"2023-10-18"},{"lineNumber":255,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":256,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":257,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":258,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseExpense(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":259,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":260,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"bljhty":260}},{"path":"src/test/java/seedu/duke/parser/IncomeParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":" * JUnit test class for IncomeParser","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"public class IncomeParserTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseIncome method in IncomeParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"     * It verifies if the incomeFields are correctly parsed into an Income object.","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"    public void testParseIncome() throws KaChinnnngException {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e incomeFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DESCRIPTION_FIELD, \"Salary\");","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DATE_FIELD, \"12/10/2023\");","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.AMOUNT_FIELD, \"5000.00\");","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"        Income income \u003d IncomeParser.parseIncome(incomeFields);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"Salary\", income.getDescription());","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"        assertEquals(LocalDate.of(2023, 10, 12), income.getDate());","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"        assertEquals(5000.00, income.getAmount());","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseDate method in IncomeParser","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"     * Specifically, it tests if the date is parsed correctly.","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if the parsed date is invalid","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"    public void testParseDate_validDate() throws KaChinnnngException {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"        LocalDate result \u003d IncomeParser.parseDate(\"12/10/2023\");","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"        assertEquals(LocalDate.of(2023, 10, 12), result);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseDate method in IncomeParser","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"     * Specifically, it tests if a KaChinnnngException is thrown when trying to parse an invalid date.","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"     * @see KaChinnnngException if the parsed date is invalid","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"    public void testParseDate_invalidDate() {","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseDate(\"12/13/2023\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseDate method in IncomeParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"     * Specifically, it tests if a KaChinnnngException is thrown when trying to parse a date that is in the future.","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"    public void testParseDate_futureDate() {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseDate(\"12/10/2025\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseDate method in IncomeParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"     * Specifically, it tests if a KaChinnnngException is thrown when trying to parse an invalid day.","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"    void testParseDate_invalidDay(){","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseDate(\"32/10/2023\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"     * This method tests the getIndex method in IncomeParser when trying to get index from an empty input.","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"    public void testGetIndex_missingField() {","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e inputMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.getIndex(inputMap));","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"     * This method tests the behaviour when user inputs amount that is above the limit.","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"    void testParseAmount_aboveLimit_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e incomeFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DESCRIPTION_FIELD, \"Salary\");","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DATE_FIELD, \"12/10/2023\");","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.AMOUNT_FIELD, \"1000000000.00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseIncome(incomeFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"     * This method tests the behaviour when user inputs an empty string for description.","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"    void testParseDescription_emptyString_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e incomeFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DESCRIPTION_FIELD, \"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DATE_FIELD, \"12/10/2023\");","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.AMOUNT_FIELD, \"10.00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseIncome(incomeFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"bljhty"},"content":"     * This method tests the behaviour when user inputs an empty string for date.","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"bljhty"},"content":"    void testParseDate_emptyString_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e incomeFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DESCRIPTION_FIELD, \"Salary\");","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DATE_FIELD, \"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.AMOUNT_FIELD, \"10.00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseIncome(incomeFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"bljhty"},"content":"     * This method tests the behaviour when user inputs an empty string for amount.","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"bljhty"},"content":"    void testParseAmount_emptyString_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e incomeFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DESCRIPTION_FIELD, \"Salary\");","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DATE_FIELD, \"12/10/2023\");","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.AMOUNT_FIELD, \"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseIncome(incomeFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"bljhty"},"content":"     * This method tests the behaviour when user inputs an invalid index.","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"bljhty"},"content":"     * Specifically negative index","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"bljhty"},"content":"    void testGetIndex_negativeIndex_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e inputMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"bljhty"},"content":"        inputMap.put(IncomeParser.INDEX_FIELD, \"-1\");","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.getIndex(inputMap));","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"bljhty"},"content":"     * This method tests the behaviour when user inputs an invalid index.","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"bljhty"},"content":"     * Specifically zero index","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"bljhty"},"content":"    void testGetIndex_zeroIndex_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e inputMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"bljhty"},"content":"        inputMap.put(IncomeParser.INDEX_FIELD, \"0\");","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.getIndex(inputMap));","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"bljhty":167}}]
