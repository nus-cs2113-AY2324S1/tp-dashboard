[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"    implementation group: \u0027com.google.code.gson\u0027, name: \u0027gson\u0027, version: \u00272.10.1\u0027","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName.set(\"duke\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"run {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"bljhty":5,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"| Display                                             |       Name        |              Github Profile              |                                        Portfolio                                         |","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"|-----------------------------------------------------|:-----------------:|:----------------------------------------:|:----------------------------------------------------------------------------------------:|","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Cheung Ka Yuen   | [Github](https://github.com/KenCheung18) |                            [Portfolio](docs/team/johndoe.md)                             |","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) | Lee Jun Hao Bryan |   [Github](https://github.com/bljhty)    | [Portfolio](https://github.com/AY2324S1-CS2113-T18-3/tp/blob/master/docs/team/bljhty.md) |","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Lim Yuh Ching   | [Github](https://github.com/limyuhching) |                            [Portfolio](docs/team/johndoe.md)                             |","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |    Ee Hong Zhi    |  [Github](https://github.com/Hongzhii)   |                            [Portfolio](docs/team/johndoe.md)                             |","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |      Don Roe      |      [Github](https://github.com/)       |                            [Portfolio](docs/team/johndoe.md)                             |","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"bljhty":7,"-":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"We first give acknowledgement to Module Coordinator, Dr Akshay Narayan, and Teaching Assistant, Irving for guidance and supervision over the KaChinnnng project.","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"We utilised the following resources to aid us in the development of KaChinnnng:","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"-  [tp project](https://github.com/nus-cs2113-AY2324S1/tp) of the nus-cs2113-AY2324S1 organisation","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"-  [addressbook-level2](https://github.com/se-edu/addressbook-level2) \u0026 [addressbook-level3](https://github.com/se-edu/addressbook-level3) project by SE-EDU largely inspired the format and coding style of KaChinnnng.","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"Below are the design and implementation details of KaChinnnng.","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"### Design","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"The architectural diagram of KaChinnnng is as follows:","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"![ArchitectureDiagram.png](https://github.com/AY2324S1-CS2113-T18-3/tp/blob/master/images/ArchitectureDiagram.png?raw\u003dtrue)","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"The KaChinnnng program will first enter the `run` state where the `storage` class will be accessed and data will be retrieved if the application has been used before. If the application has not been used before, the `storage` class will create a new file to store the data.","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"Next, the `User` will input various `commands` via the `Ui` class. The `commands` will then be parsed by the `Parser` class and the relevant `managers` will be called to execute the `commands`.","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"Once the `User` inputs has been successfully executed, `commands` will make use of the `Ui` class to output the relevant information to the user.","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"When the `User` exits the program, the `storage` class will be called to save the data to the local storage.","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"`Storage` will read from the local storage when the program is run again.","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"Hongzhii"},"content":"### Expense Class Overview","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"Hongzhii"},"content":"The Expenses are divided into three categories. Transport, Utilities and Food.","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"Each of the categories inherits from a base Expense class which in turn","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"Hongzhii"},"content":"inherits from the FinancialRecord class.","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"KenCheung18"},"content":"![expense_class_diagram.png](https://github.com/AY2324S1-CS2113-T18-3/tp/blob/master/images/expense_class_diagram.png?raw\u003dtrue)","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"### IncomeManager","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"the IncomeManager is facilitated by `IncomeParser`, `IncomeManager`, `IncomeList` and `Ui`.","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"1. The user inputs the command to add income. This input is then passed to `IncomeParser` to be parsed.","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"2. `IncomeParser` then parses the input and returns a `Income` object.","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"3. `IncomeManager` then adds the `Income` object to the `IncomeList`.","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"4. `IncomeManager` then returns a `String` to `Ui` to be printed out to the user.","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"![IncomeManager_seqdiagram.drawio.png](https://github.com/AY2324S1-CS2113-T18-3/tp/blob/master/images/IncomeManager_SequenceDiagram(updated).png?raw\u003dtrue)","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"Hongzhii"},"content":"### ExpenseManager","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Hongzhii"},"content":"The ExpenseManager is facilitated by `ExpenseParser`,  `ExpenseManager`, `ExpenseList` and `Ui`","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Hongzhii"},"content":"1. The user inputs the command to add expense.","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Hongzhii"},"content":"2. This command is used to instantiate a ExpenseManager object which is executed.","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Hongzhii"},"content":"3. During execution, the command is passed to ExpenseParser which extracts and parses the input fields.","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"4. Input field information is passed to the relevant Expense constructor which returns an Expense object.","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"Hongzhii"},"content":"5. Expense object is returned to ExpenseManager from ExpenseParser.","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"6. Expense object is returned to Duke from ExpenseManager.","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"KenCheung18"},"content":"![expenseManager_sequence_diagram.png](https://github.com/AY2324S1-CS2113-T18-3/tp/blob/master/images/expenseManager_sequence_diagram.png?raw\u003dtrue)","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"### Find Command","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"The FindCommand is facilitated by `FindCommand`, `FindParser`, `Ui`,`ExpenseList` and `IncomeList`.","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"1. The user will first input the command to find the expense or income.","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"find /t \u003ctype\u003e /cat [category] /de [description] /date [date]","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"2. The inputs will then be passed to `FindParser` to get the necessary fields such as type, category, description and date.","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"3. The FindCommand is then instantiated with the necessary fields.","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"4. Users can choose to search through the expense list or income list.","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"5. If users searches through the income list, either the description or date will be used to search through the income list, category will be ignored.","lastModifiedDate":"2023-11-11"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"6. If users searches through the expense list, either the category, description or date will be used to search through the expense list.","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"7. The execute method will then be called to search through the list and return the list of expenses or incomes that matches the search criteria.","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"![FindCommand_SequenceDiagram.png](https://github.com/AY2324S1-CS2113-T18-3/tp/blob/master/images/FindCommand_SequenceDiagram(updated).drawio.png?raw\u003dtrue)","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"KenCheung18"},"content":"### GetFromTxt Command","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"KenCheung18"},"content":"The GetFromTxt Command is facilitated by `IOException`,`Scanner`, `KaChinnnnngException`, `IncomeList` and `ExpenseList`","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"KenCheung18"},"content":"1. The user start the program and the command will start automatically with a default path","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"2. Once the command executed, it will try to create a txt file on the default path","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"KenCheung18"},"content":"3. If file failed to create, throw an `IOException`","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"KenCheung18"},"content":"4. Catch the `IOExceotion` and print error messages","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"KenCheung18"},"content":"5. Create a `Scanner` Object s to get content from txt file","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"KenCheung18"},"content":"6. If amount in txt file exceed limit or incorrect, throw `KaChinnnningException`","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"KenCheung18"},"content":"7. Read the content on the file and add corresponding object to incomes or expenses list","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"KenCheung18"},"content":"![GetFromTxtCommands_SequenceDiagram.png](https://github.com/AY2324S1-CS2113-T18-3/tp/blob/master/images/GetFromTxt.png?raw\u003dtrue)","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"limyuhching"},"content":"### ExchangeRateManager","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"limyuhching"},"content":"The Sequence Diagram below shows how the components interact with each other for the scenario ","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"limyuhching"},"content":"where the user issues the command `update exchange rate USD 0.8`.","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"limyuhching"},"content":"1. The user input the command `update exchange rate USD 0.8`","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"limyuhching"},"content":"2. Duke will create the `UpdateExchangeRateCommand` object with the specified currency and rate","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"3. Duke will the execute the command object which will call `updateExchangeRate` in ExchangeRateManager","lastModifiedDate":"2023-11-11"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"4. If the currency specified is not a supported currency or the rate specified is not a decimal with 0.001 and 3,000,000,","lastModifiedDate":"2023-11-11"},{"lineNumber":98,"author":{"gitId":"limyuhching"},"content":"   a `KaChinnnningException` will be thrown","lastModifiedDate":"2023-11-06"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"5. Once the update is successful, Ui will be called to show the completion message","lastModifiedDate":"2023-11-11"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"6. Lastly, the updated exchange rates will be saved in the exchange rate file","lastModifiedDate":"2023-11-11"},{"lineNumber":101,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"KenCheung18"},"content":"![UpdateExchangeRate_SequenceDiagram.png](https://github.com/AY2324S1-CS2113-T18-3/tp/blob/master/images/UpdateExchangeRate_SequenceDiagram.png?raw\u003dtrue)","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"limyuhching"},"content":"This is facilitated by `Duke`, `Ui`, `UpdateExchangeRateCommand`, `ExchangeRateManager`\u0027and `ExchangeRateFileHandler`.","lastModifiedDate":"2023-11-06"},{"lineNumber":105,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"KenCheung18"},"content":"### SaveToTxt Command","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"KenCheung18"},"content":"The SaveToTxt Command is facilitated by `FileWriter` ,`IncomeList` and `ExpenseList`","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"KenCheung18"},"content":"1. The user start the program and the function will run everytime after user input a command","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"KenCheung18"},"content":"2. Once the command executed, the function saveIncomeAndExpense will run automatically","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"KenCheung18"},"content":"3. It will run the function saveIncomeToTextFile first, the saveIncomeToTextFile will create a FileWriter and loop through the incomes list","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"KenCheung18"},"content":"4. It will get description, date, and amount from the income list for every single income record in the list and save the information into the text file","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"KenCheung18"},"content":"5. After that, the saveIncomeToTextFile will then call the saveExpenseToTextFile function ","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"KenCheung18"},"content":"6. The saveExpenseToTextFile will create a new FileWriter and loop through the expenses list ","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"KenCheung18"},"content":"7. It will get description, date, amount and type from the expenses list for every single expense record in the list and save the information into the text file","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"KenCheung18"},"content":"![SaveToTxt_SequenceDiagram.png](https://github.com/AY2324S1-CS2113-T18-3/tp/blob/master/images/SaveToTxt.png?raw\u003dtrue)","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":120,"author":{"gitId":"limyuhching"},"content":"Target user profile:","lastModifiedDate":"2023-11-06"},{"lineNumber":121,"author":{"gitId":"limyuhching"},"content":"- has a need to manage one\u0027s finance and track their financial health","lastModifiedDate":"2023-11-06"},{"lineNumber":122,"author":{"gitId":"limyuhching"},"content":"- prefer desktop apps over mobile app/web app","lastModifiedDate":"2023-11-06"},{"lineNumber":123,"author":{"gitId":"limyuhching"},"content":"- can type fast","lastModifiedDate":"2023-11-06"},{"lineNumber":124,"author":{"gitId":"limyuhching"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2023-11-06"},{"lineNumber":125,"author":{"gitId":"limyuhching"},"content":"- is reasonably comfortable using CLI applications","lastModifiedDate":"2023-11-06"},{"lineNumber":126,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":127,"author":{"gitId":"limyuhching"},"content":"### Value proposition: manage finances faster than a GUI driven app","lastModifiedDate":"2023-11-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"| Version | As a ... | I want to ...                      | So that I can ...                                                     |","lastModifiedDate":"2020-05-24"},{"lineNumber":132,"author":{"gitId":"bljhty"},"content":"|---------|----------|------------------------------------|-----------------------------------------------------------------------|","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"| v1.0    | new user | see usage instructions             | refer to them when I forget how to use the application                |","lastModifiedDate":"2020-05-24"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"| v1.0    | user     | add new income entry               | track all my incomes                                                  |","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"bljhty"},"content":"| v1.0    | user     | add new expense entry              | track all of my expenses                                              |","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"| v1.0    | user     | delete income entry                | remove incomes that I no longer want to track                         |","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"bljhty"},"content":"| v1.0    | user     | delete expense entry               | remove expenses that I no longer want to track                        |","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"bljhty"},"content":"| v1.0    | user     | list both income and expense entry | view all my expenses and incomes                                      |","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"bljhty"},"content":"| v1.0    | user     | check my balance                   | better budget my expenditures                                         |","lastModifiedDate":"2023-11-11"},{"lineNumber":140,"author":{"gitId":"bljhty"},"content":"| v2.0    | user     | search for past inputs             | better find and track my past expenses                                |","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"bljhty"},"content":"| v2.0    | user     | be able to change the currency     | better track my expenses in different currencies when i am travelling |","lastModifiedDate":"2023-11-01"},{"lineNumber":142,"author":{"gitId":"bljhty"},"content":"| v2.0    | user     | be able to edit my inputs          | make necessary changes to my inputs when a mistake is made            |","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"bljhty"},"content":"| v2.0    | user     | be able to save and load my inputs | save my inputs so that I can access them the next time I use the app  |","lastModifiedDate":"2023-11-01"},{"lineNumber":144,"author":{"gitId":"bljhty"},"content":"| v2.0    | user     | reset my inputs                    | start afresh                                                          |","lastModifiedDate":"2023-11-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":147,"author":{"gitId":"bljhty"},"content":"- Domain rules:","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"bljhty"},"content":"    - The application should not crash under normal circumstances.","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"bljhty"},"content":"    - Dates can be entered in the format dd/mm/yyyy and should not be in the future.","lastModifiedDate":"2023-11-11"},{"lineNumber":150,"author":{"gitId":"bljhty"},"content":"    - Amount added should be in the format of 0.00 and should not be negative.","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"bljhty"},"content":"    - The application only accepts commands in English.","lastModifiedDate":"2023-11-01"},{"lineNumber":152,"author":{"gitId":"bljhty"},"content":"    - Users should refrain from using special characters in the description/category/type/date field.","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"bljhty"},"content":"    - Users should refrain from tampering with the storage and log files as it may result in unexpected issues.","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"bljhty"},"content":" ","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"bljhty"},"content":"- Constraints:","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"bljhty"},"content":"  - the total number of entries for Expense and Income should not exceed 10 000 each.","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"bljhty"},"content":"  - the amount input should be less than 1000000.","lastModifiedDate":"2023-11-11"},{"lineNumber":158,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"bljhty"},"content":"- Technical Requirements:","lastModifiedDate":"2023-11-01"},{"lineNumber":160,"author":{"gitId":"bljhty"},"content":"  - The application must be able to run on Windows, macOS and Linux.","lastModifiedDate":"2023-11-11"},{"lineNumber":161,"author":{"gitId":"bljhty"},"content":"- Technical Requirements:","lastModifiedDate":"2023-11-01"},{"lineNumber":162,"author":{"gitId":"bljhty"},"content":"  - KaChinnnng should be able to be used by users of all skill levels.","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"bljhty"},"content":"- Others:","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"bljhty"},"content":"  - Arguments should follow the format specified in the user guide.","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"bljhty"},"content":"  - Should the arguments not be in the provided format, the application will not execute the command.","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":171,"author":{"gitId":"bljhty"},"content":"| Term    | Definition                                                 |","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"bljhty"},"content":"|---------|------------------------------------------------------------|","lastModifiedDate":"2023-11-11"},{"lineNumber":173,"author":{"gitId":"bljhty"},"content":"| Income  | debit entry of user                                        |","lastModifiedDate":"2023-11-01"},{"lineNumber":174,"author":{"gitId":"bljhty"},"content":"| Expense | credit entry of user                                       |","lastModifiedDate":"2023-11-01"},{"lineNumber":175,"author":{"gitId":"bljhty"},"content":"| Balance | Net Amount                                                 |","lastModifiedDate":"2023-11-01"},{"lineNumber":176,"author":{"gitId":"bljhty"},"content":"| Ui      | User Interface, where user inputs commands and sees output |","lastModifiedDate":"2023-11-01"},{"lineNumber":177,"author":{"gitId":"bljhty"},"content":"| Parser  | Parses user input into commands                            |","lastModifiedDate":"2023-11-01"},{"lineNumber":178,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":182,"author":{"gitId":"bljhty"},"content":"Given below are the instructions for manual testing of KaChinnnng.","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"bljhty"},"content":"### Launching and exiting the application","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"bljhty"},"content":"1. launching the application","lastModifiedDate":"2023-11-11"},{"lineNumber":186,"author":{"gitId":"bljhty"},"content":"   1. download the jar file from the release page.","lastModifiedDate":"2023-11-01"},{"lineNumber":187,"author":{"gitId":"bljhty"},"content":"   2. open a terminal and navigate to the directory where the jar file is located.","lastModifiedDate":"2023-11-01"},{"lineNumber":188,"author":{"gitId":"bljhty"},"content":"   3. run the command `java -jar tp.jar`","lastModifiedDate":"2023-11-11"},{"lineNumber":189,"author":{"gitId":"bljhty"},"content":"2. exiting the application","lastModifiedDate":"2023-11-01"},{"lineNumber":190,"author":{"gitId":"bljhty"},"content":"   1. type `exit` in the command box and press enter.","lastModifiedDate":"2023-11-01"},{"lineNumber":191,"author":{"gitId":"bljhty"},"content":"   2. the application will exit.","lastModifiedDate":"2023-11-01"},{"lineNumber":192,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":193,"author":{"gitId":"bljhty"},"content":"### Adding an income/expense","lastModifiedDate":"2023-11-01"},{"lineNumber":194,"author":{"gitId":"bljhty"},"content":"adding an income/expense","lastModifiedDate":"2023-11-11"},{"lineNumber":195,"author":{"gitId":"bljhty"},"content":"1. Test case:","lastModifiedDate":"2023-11-01"},{"lineNumber":196,"author":{"gitId":"bljhty"},"content":"   - To add an income: `add income /de salary /date 31/10/2023 /amt 5000.00`","lastModifiedDate":"2023-11-11"},{"lineNumber":197,"author":{"gitId":"bljhty"},"content":"   - To add an expense: `add expense /cat food /type lunch /de sushi /date 31/10/2023 /amt 20.00`","lastModifiedDate":"2023-11-01"},{"lineNumber":198,"author":{"gitId":"bljhty"},"content":"   - `/type` for expense includes (`OTHER`, `BREAKFAST`, `LUNCH`, `DINNER`) for the `food` category, (`TRAIN`, `BUS`, `TAXI`, `FUEL`, `OTHER`) for the `TRANSPORT` category and (`OTHER`,  `WATER`, `ELECTRICITY`, `GAS`) for the `UTILITIES` category.","lastModifiedDate":"2023-11-11"},{"lineNumber":199,"author":{"gitId":"bljhty"},"content":"   - Expected outcome: the income/expense will be added to the list and the balance will be updated accordingly and the user will be notified.","lastModifiedDate":"2023-11-01"},{"lineNumber":200,"author":{"gitId":"bljhty"},"content":"   ","lastModifiedDate":"2023-11-01"},{"lineNumber":201,"author":{"gitId":"bljhty"},"content":"2. Test case:","lastModifiedDate":"2023-11-01"},{"lineNumber":202,"author":{"gitId":"bljhty"},"content":"   - income: `add income /de salary`","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"bljhty"},"content":"   - expense: `add expense /cat food /type lunnch`","lastModifiedDate":"2023-11-01"},{"lineNumber":204,"author":{"gitId":"bljhty"},"content":"   - Expected outcome: the income/expense will not be added to the list and the user will be notified with an error message.","lastModifiedDate":"2023-11-01"},{"lineNumber":205,"author":{"gitId":"bljhty"},"content":"   ","lastModifiedDate":"2023-11-01"},{"lineNumber":206,"author":{"gitId":"bljhty"},"content":"3. Test case:","lastModifiedDate":"2023-11-01"},{"lineNumber":207,"author":{"gitId":"bljhty"},"content":"   - Other invalid test cases includes:","lastModifiedDate":"2023-11-01"},{"lineNumber":208,"author":{"gitId":"bljhty"},"content":"   - income: `add income /de salary /date 31/11/2024 /amt 5000.00` where the date is in the future.","lastModifiedDate":"2023-11-11"},{"lineNumber":209,"author":{"gitId":"bljhty"},"content":"   - income: `add income /de salary /date 31-10-2023 /amt 5000.00` where the date is in the wrong format.","lastModifiedDate":"2023-11-01"},{"lineNumber":210,"author":{"gitId":"bljhty"},"content":"   - income: `add income /de salary /date 31/10/2023 /amt -5000.00` where the amount is negative.","lastModifiedDate":"2023-11-01"},{"lineNumber":211,"author":{"gitId":"bljhty"},"content":"   - expense: `add expense /cat food /type lunch /de lunch  /amt 5000.00` where there is missing fields","lastModifiedDate":"2023-11-01"},{"lineNumber":212,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":213,"author":{"gitId":"bljhty"},"content":"### updating exchange rate","lastModifiedDate":"2023-11-11"},{"lineNumber":214,"author":{"gitId":"bljhty"},"content":"updating exchange rate","lastModifiedDate":"2023-11-11"},{"lineNumber":215,"author":{"gitId":"bljhty"},"content":"To check the supported currencies, type `list currencies`","lastModifiedDate":"2023-11-11"},{"lineNumber":216,"author":{"gitId":"bljhty"},"content":"1. Test case:","lastModifiedDate":"2023-11-11"},{"lineNumber":217,"author":{"gitId":"bljhty"},"content":"   - To update exchange rate: `update exchange rate USD 0.8`","lastModifiedDate":"2023-11-11"},{"lineNumber":218,"author":{"gitId":"bljhty"},"content":"   - Expected outcome: the exchange rate will be updated and the user will be notified.","lastModifiedDate":"2023-11-11"},{"lineNumber":219,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":220,"author":{"gitId":"bljhty"},"content":"### Listing all incomes/expenses","lastModifiedDate":"2023-11-11"},{"lineNumber":221,"author":{"gitId":"bljhty"},"content":"pre-requisite: list should already contain income/expense.","lastModifiedDate":"2023-11-11"},{"lineNumber":222,"author":{"gitId":"bljhty"},"content":"1. Test case: If there is no income/expense","lastModifiedDate":"2023-11-11"},{"lineNumber":223,"author":{"gitId":"bljhty"},"content":"   - For income: `list incomes`","lastModifiedDate":"2023-11-11"},{"lineNumber":224,"author":{"gitId":"bljhty"},"content":"   - For expense: `list expenses`","lastModifiedDate":"2023-11-11"},{"lineNumber":225,"author":{"gitId":"bljhty"},"content":"   - Expected outcome: no income/expense should be listed.","lastModifiedDate":"2023-11-11"},{"lineNumber":226,"author":{"gitId":"bljhty"},"content":"2. Test case: If there is income/expense","lastModifiedDate":"2023-11-11"},{"lineNumber":227,"author":{"gitId":"bljhty"},"content":"    - For income: `list incomes`","lastModifiedDate":"2023-11-11"},{"lineNumber":228,"author":{"gitId":"bljhty"},"content":"    - For expense: `list expenses`","lastModifiedDate":"2023-11-11"},{"lineNumber":229,"author":{"gitId":"bljhty"},"content":"    - Expected outcome: all income/expense should be listed.","lastModifiedDate":"2023-11-11"},{"lineNumber":230,"author":{"gitId":"bljhty"},"content":"3. Test case: to list both income and expense","lastModifiedDate":"2023-11-11"},{"lineNumber":231,"author":{"gitId":"bljhty"},"content":"    - `list`","lastModifiedDate":"2023-11-11"},{"lineNumber":232,"author":{"gitId":"bljhty"},"content":"    - Expected outcome: all income/expense should be listed.","lastModifiedDate":"2023-11-11"},{"lineNumber":233,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":234,"author":{"gitId":"bljhty"},"content":"### Deleting an income/expense","lastModifiedDate":"2023-11-01"},{"lineNumber":235,"author":{"gitId":"limyuhching"},"content":"Deleting income/expense","lastModifiedDate":"2023-11-01"},{"lineNumber":236,"author":{"gitId":"bljhty"},"content":"pre-requisite: list should already contain income/expense. this can be checked via `list incomes`, `list expenses` or `list`","lastModifiedDate":"2023-11-11"},{"lineNumber":237,"author":{"gitId":"bljhty"},"content":"1. Test case: If there is index specified","lastModifiedDate":"2023-11-11"},{"lineNumber":238,"author":{"gitId":"bljhty"},"content":"   - For income/expense: `delete income \u003cindex\u003e`","lastModifiedDate":"2023-11-11"},{"lineNumber":239,"author":{"gitId":"bljhty"},"content":"   - Expected outcome: the income/expense will be deleted from the list and the balance will be updated accordingly and the user will be notified.","lastModifiedDate":"2023-11-11"},{"lineNumber":240,"author":{"gitId":"bljhty"},"content":"2. Test case: If the index specified is invalid","lastModifiedDate":"2023-11-11"},{"lineNumber":241,"author":{"gitId":"limyuhching"},"content":"    - For income/expense: `delete income \u003cinvalid_index\u003e`","lastModifiedDate":"2023-11-01"},{"lineNumber":242,"author":{"gitId":"limyuhching"},"content":"    - Expected outcome: `Oops! Income \u003cinvaldi_index\u003e does not exist`","lastModifiedDate":"2023-11-01"},{"lineNumber":243,"author":{"gitId":"bljhty"},"content":"3. Test case: If the index is missing","lastModifiedDate":"2023-11-11"},{"lineNumber":244,"author":{"gitId":"limyuhching"},"content":"    - For income/expense: `delete income`","lastModifiedDate":"2023-11-01"},{"lineNumber":245,"author":{"gitId":"limyuhching"},"content":"    - Expected outcome: `You\u0027re missing an argument`","lastModifiedDate":"2023-11-01"},{"lineNumber":246,"author":{"gitId":"bljhty"},"content":"4. Test case: If there index is not an integer","lastModifiedDate":"2023-11-11"},{"lineNumber":247,"author":{"gitId":"limyuhching"},"content":"    - For income/expense: `delete income abc`","lastModifiedDate":"2023-11-01"},{"lineNumber":248,"author":{"gitId":"limyuhching"},"content":"    - Expected outcome: `Oops! An integer index is expected`","lastModifiedDate":"2023-11-01"},{"lineNumber":249,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":250,"author":{"gitId":"bljhty"},"content":"### Clearing all incomes/expenses","lastModifiedDate":"2023-11-11"},{"lineNumber":251,"author":{"gitId":"bljhty"},"content":"Clearing all income/expense","lastModifiedDate":"2023-11-11"},{"lineNumber":252,"author":{"gitId":"bljhty"},"content":"pre-requisite: list should already contain income/expense. this can be checked via `list incomes`, `list expenses` or `list`","lastModifiedDate":"2023-11-11"},{"lineNumber":253,"author":{"gitId":"bljhty"},"content":"1. Test case: If there is income/expense","lastModifiedDate":"2023-11-11"},{"lineNumber":254,"author":{"gitId":"bljhty"},"content":"   - For income: `clear incomes`","lastModifiedDate":"2023-11-11"},{"lineNumber":255,"author":{"gitId":"bljhty"},"content":"   - For expense: `clear expenses`","lastModifiedDate":"2023-11-11"},{"lineNumber":256,"author":{"gitId":"bljhty"},"content":"   - Expected outcome: all income/expense will be deleted from the list and the balance will be updated accordingly and the user will be notified.","lastModifiedDate":"2023-11-11"},{"lineNumber":257,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":258,"author":{"gitId":"bljhty"},"content":"2. Test case: To clear both income and expense","lastModifiedDate":"2023-11-11"},{"lineNumber":259,"author":{"gitId":"bljhty"},"content":"   - `clear all`","lastModifiedDate":"2023-11-11"},{"lineNumber":260,"author":{"gitId":"bljhty"},"content":"   - Expected outcome: all income/expense will be deleted from the list and the balance will be updated accordingly and the user will be notified.","lastModifiedDate":"2023-11-11"},{"lineNumber":261,"author":{"gitId":"bljhty"},"content":"### Editing an income/expense","lastModifiedDate":"2023-11-01"},{"lineNumber":262,"author":{"gitId":"limyuhching"},"content":"Editing income/expense","lastModifiedDate":"2023-11-01"},{"lineNumber":263,"author":{"gitId":"bljhty"},"content":"pre-requisite: list should already contain income/expense. this can be checked via `list incomes`, `list expenses` or `list`","lastModifiedDate":"2023-11-11"},{"lineNumber":264,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":265,"author":{"gitId":"bljhty"},"content":"1. Test case: If there is index specified","lastModifiedDate":"2023-11-11"},{"lineNumber":266,"author":{"gitId":"bljhty"},"content":"   - For income/expense: `edit income \u003cindex\u003e income /de \u003cdescription\u003e /date \u003cDD/MM/YYYY\u003e /amt \u003camount\u003e`","lastModifiedDate":"2023-11-11"},{"lineNumber":267,"author":{"gitId":"bljhty"},"content":"   - Expected outcome: the income/expense will be edited and the balance will be updated accordingly and the user will be notified.","lastModifiedDate":"2023-11-11"},{"lineNumber":268,"author":{"gitId":"bljhty"},"content":"2. Test case: If there is index specified invalid","lastModifiedDate":"2023-11-11"},{"lineNumber":269,"author":{"gitId":"limyuhching"},"content":"   - For income/expense: `edit income \u003cinvalid_index\u003e income /de \u003cdescription\u003e /date \u003cDD/MM/YYYY\u003e /amt \u003camount\u003e`","lastModifiedDate":"2023-11-01"},{"lineNumber":270,"author":{"gitId":"limyuhching"},"content":"   - Expected outcome: `Oops! Income \u003cinvaldi_index\u003e does not exist`","lastModifiedDate":"2023-11-01"},{"lineNumber":271,"author":{"gitId":"bljhty"},"content":"3. Test case: Missing arguments","lastModifiedDate":"2023-11-11"},{"lineNumber":272,"author":{"gitId":"limyuhching"},"content":"    Assuming Income 1 and Expense 1 exist:","lastModifiedDate":"2023-11-01"},{"lineNumber":273,"author":{"gitId":"limyuhching"},"content":"    - income: `edit income 1 /de salary`","lastModifiedDate":"2023-11-01"},{"lineNumber":274,"author":{"gitId":"limyuhching"},"content":"    - expense: `edit expense 1 /cat food /type lunnch`","lastModifiedDate":"2023-11-01"},{"lineNumber":275,"author":{"gitId":"limyuhching"},"content":"    - Expected outcome: the income/expense will not be edited and the user will be notified with an error message.","lastModifiedDate":"2023-11-01"},{"lineNumber":276,"author":{"gitId":"limyuhching"},"content":"   ","lastModifiedDate":"2023-11-01"},{"lineNumber":277,"author":{"gitId":"limyuhching"},"content":"4. Test case: Other invalid test cases includes:","lastModifiedDate":"2023-11-01"},{"lineNumber":278,"author":{"gitId":"limyuhching"},"content":"    Assuming index Income 1 exist:","lastModifiedDate":"2023-11-01"},{"lineNumber":279,"author":{"gitId":"limyuhching"},"content":"    - income: `edit income 1 /de salary /date 31/11/2023 /amt 5000.00` where the date is in the future.","lastModifiedDate":"2023-11-01"},{"lineNumber":280,"author":{"gitId":"limyuhching"},"content":"    - income: `edit income 1 /de salary /date 31-10-2023 /amt 5000.00` where the date is in the wrong format.","lastModifiedDate":"2023-11-01"},{"lineNumber":281,"author":{"gitId":"limyuhching"},"content":"    - income: `edit income 1 /de salary /date 31/10/2023 /amt -5000.00` where the amount is negative.","lastModifiedDate":"2023-11-01"},{"lineNumber":282,"author":{"gitId":"limyuhching"},"content":"    - expense: `edit expense 1 /cat food /type lunch /de lunch /amt 5000.00` where there is missing fields","lastModifiedDate":"2023-11-01"},{"lineNumber":283,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":284,"author":{"gitId":"bljhty"},"content":"### Finding an income/expense","lastModifiedDate":"2023-11-01"},{"lineNumber":285,"author":{"gitId":"bljhty"},"content":"Finding income/expense:","lastModifiedDate":"2023-11-11"},{"lineNumber":286,"author":{"gitId":"KenCheung18"},"content":"1. Pre-requisite: list should already contain income/expense. this can be checked via `list incomes`, `list expenses` or `list`","lastModifiedDate":"2023-11-07"},{"lineNumber":287,"author":{"gitId":"bljhty"},"content":"2. For income, at least one of the 2 optional fields have to be used to search for the income.","lastModifiedDate":"2023-11-11"},{"lineNumber":288,"author":{"gitId":"bljhty"},"content":"3. For expense, at least one of the 3 optional fields have to be used to search for the expense.","lastModifiedDate":"2023-11-11"},{"lineNumber":289,"author":{"gitId":"bljhty"},"content":"4. Test case:","lastModifiedDate":"2023-11-11"},{"lineNumber":290,"author":{"gitId":"bljhty"},"content":"   - For income: `find /t income /de salary`","lastModifiedDate":"2023-11-01"},{"lineNumber":291,"author":{"gitId":"bljhty"},"content":"   - For expense: `find /t expense /cat food /de sushi /date 31/10/2023`","lastModifiedDate":"2023-11-01"},{"lineNumber":292,"author":{"gitId":"bljhty"},"content":"   - Expected outcome: all income with description containing \"salary\" should be listed. all expense containing \"food\" in the category, \"sushi\" in the description and \"31/10/2023\" in the date should be listed.","lastModifiedDate":"2023-11-01"},{"lineNumber":293,"author":{"gitId":"bljhty"},"content":"   - ","lastModifiedDate":"2023-11-11"},{"lineNumber":294,"author":{"gitId":"bljhty"},"content":"5. Test case: If there is no matching income/expenses","lastModifiedDate":"2023-11-11"},{"lineNumber":295,"author":{"gitId":"bljhty"},"content":"   - Income: `find /t income /de bonus`","lastModifiedDate":"2023-11-01"},{"lineNumber":296,"author":{"gitId":"bljhty"},"content":"   - Expense: `find /t expense /cat food /de burger /date 31/10/2023`","lastModifiedDate":"2023-11-01"},{"lineNumber":297,"author":{"gitId":"bljhty"},"content":"   - Expected outcome: no income/expense should be listed.","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"limyuhching":41,"bljhty":186,"Hongzhii":15,"KenCheung18":26,"-":29}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"# KaChinnnng","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"Kachinnnng is a Command Line Intterfacer financial management tool which allows users to keep track of their expenses and income. There is also an option for users to update to their desired currency for travellers.","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"bljhty":2,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"# KaChinnnng User Guide","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"Welcome to KaChinnnng a personal finance tracker that helps you keep track of your expenses and income.","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":"2. Download the latest version of `KaChinnnng` from [here](https://github.com/AY2324S1-CS2113-T18-3/tp/releases).","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"3. Copy the downloaded file to the folder you want to use as the home folder that allow to write access for your KaChinnnng.","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"4. Open a command terminal and navigate to the folder where you have copied the file to.","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":"5. Type in the following to run the program","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"java -jar tp.jar","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":"6. If successful you should see the following output","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"Welcome to KaChinnnngggg! How may i assist you today?","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"7. Type in desired commands and press enter to execute them. (note: commands are not case-sensitive)","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"8. \"[ ]\" denotes optional parameters","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"9. Do not add additional characters behind the command e.g. `add incomeabc /de salary /date 01/01/2020 /amt 1000`.","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"### View help : help","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"Shows basic commands executable by the program. ","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"User can choose to view the help function of individual command separately as well, which shows the description and format of that command","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"Format:","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"help","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"KenCheung18"},"content":"help add","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"KenCheung18"},"content":"help list","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"KenCheung18"},"content":"help delete","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"KenCheung18"},"content":"help edit","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"KenCheung18"},"content":"help balance","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"KenCheung18"},"content":"help update exchange rate","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"KenCheung18"},"content":"help find","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"KenCheung18"},"content":"help clear","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"KenCheung18"},"content":"help exit","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"### Add an entry: add","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"Creates a new entry for income or expenses in the program.","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"Values of income and expense added has to be lower than 1000000.","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"Income and Expense values takes up to 2 decimal places.","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"KenCheung18"},"content":"To add an income (with foreign currency):","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"limyuhching"},"content":"add income /de \u003cdescription\u003e /date \u003cdate\u003e /amt [currency] \u003camount\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"limyuhching"},"content":"Note:","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"limyuhching"},"content":"- Fields `/de`, `/date`, and `/amt` are case-sensitive and should be in the specified order.","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"limyuhching"},"content":"- Users should not use \"|\" in the description as it is used as a delimiter in the storage file.","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"KenCheung18"},"content":"To add an expense (with foreign currency):","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"KenCheung18"},"content":"add expense /cat \u003ccategory\u003e /type \u003ctype\u003e /de \u003cdescription\u003e /date \u003cdate\u003e /amt [currency] \u003camount\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"limyuhching"},"content":"Note:","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"limyuhching"},"content":"- Fields `/cat`, `/type`, `/de`, `date`, and `amt` are case-sensitive and should be in the specified order.","lastModifiedDate":"2023-11-06"},{"lineNumber":85,"author":{"gitId":"limyuhching"},"content":"- Should users enter `/cat`, `/type` or the other fields that is case-sensitive, system will take it as missing field.","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"limyuhching"},"content":"- Users should not use \"|\" in the description as it is used as a delimiter in the storage file.","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"- There are only 3 categories for expenses: `Food`, `Transport`, `Utilities`.","lastModifiedDate":"2023-11-04"},{"lineNumber":88,"author":{"gitId":"Hongzhii"},"content":"- There are 3 types associated with `Food` category: `Breakfast`, `Lunch`, `Dinner`, else it will default to `OTHER`.","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"Hongzhii"},"content":"- There are 4 types associated with `Transport` category: `Bus`, `Train`, `Taxi`, `Fuel`, else it will default to `OTHER`.","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"Hongzhii"},"content":"- There are 3 types associated with `Utilities` category: `Water`, `Electricity`, `Gas`, else it will default to `OTHER`.","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"Use case:","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"- Prompts users if any of the fields are empty.","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"limyuhching"},"content":"- Amount takes up to 2 decimal places.","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"KenCheung18"},"content":"- format of date is `dd/MM/yyyy`.","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"- Date needs to be an existing date, and cannot be dates in the future.","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"limyuhching"},"content":"- By default, amount is set to SGD.","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"limyuhching"},"content":"- User can specify the currency. Refer to the supported currencies for valid currency.","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"limyuhching"},"content":"- Currency specified must have been updated. Refer to list exchange rates for more details.","lastModifiedDate":"2023-11-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2020-05-24"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"limyuhching"},"content":"add income /de salary /date 01/01/2020 /amt 1000","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"add expense /cat transport /type taxi /de taxi to school /date 10/10/2023 /amt 10.00","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"limyuhching"},"content":"add expense /cat Food /type lunch /de lunch /date 01/01/2020 /amt 10.50","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"limyuhching"},"content":"add expense /cat Food /type breakfast /de chicken sandwich /date 01/01/2020 /amt USD 10.50","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-11-04"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"add expense /cat transport /type train /de train to school /date 10/10/2023 /amt 10.00","lastModifiedDate":"2023-11-04"},{"lineNumber":117,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-11-04"},{"lineNumber":118,"author":{"gitId":"KenCheung18"},"content":"Expected output after successfully add income to the list:","lastModifiedDate":"2023-11-07"},{"lineNumber":119,"author":{"gitId":"KenCheung18"},"content":"![clear_all.png](https://github.com/AY2324S1-CS2113-T18-3/tp/blob/master/images/income_expected.png?raw\u003dtrue)","lastModifiedDate":"2023-11-07"},{"lineNumber":120,"author":{"gitId":"KenCheung18"},"content":"Expected output after successfully add expense to the list:","lastModifiedDate":"2023-11-07"},{"lineNumber":121,"author":{"gitId":"KenCheung18"},"content":"![clear_all.png](https://github.com/AY2324S1-CS2113-T18-3/tp/blob/master/images/expense_expected.png?raw\u003dtrue)","lastModifiedDate":"2023-11-07"},{"lineNumber":122,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":123,"author":{"gitId":"bljhty"},"content":"### List all entries: list","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"bljhty"},"content":"Shows a full list of both the expenses and income created by the user.","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"bljhty"},"content":"User can choose to view the list of income/expenses separately as well.","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"bljhty"},"content":"Format:","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"bljhty"},"content":"list","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"KenCheung18"},"content":"list incomes","lastModifiedDate":"2023-11-07"},{"lineNumber":133,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"KenCheung18"},"content":"list expenses","lastModifiedDate":"2023-11-07"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"bljhty"},"content":"### Delete an entry: delete","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"bljhty"},"content":"Deletes an entry from the list of income/expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"bljhty"},"content":"Format:","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"bljhty"},"content":"delete expense \u003cindex\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"bljhty"},"content":"delete income \u003cindex\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":149,"author":{"gitId":"bljhty"},"content":"Use case:","lastModifiedDate":"2023-11-05"},{"lineNumber":150,"author":{"gitId":"bljhty"},"content":"- Prompts users if index is empty.","lastModifiedDate":"2023-11-05"},{"lineNumber":151,"author":{"gitId":"limyuhching"},"content":"- `\u003cindex\u003e` should not be negative.","lastModifiedDate":"2023-11-06"},{"lineNumber":152,"author":{"gitId":"limyuhching"},"content":"- `\u003cindex\u003e` should not be out of bounds.","lastModifiedDate":"2023-11-06"},{"lineNumber":153,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":154,"author":{"gitId":"KenCheung18"},"content":"Expected output after successfully delete income from the list:","lastModifiedDate":"2023-11-07"},{"lineNumber":155,"author":{"gitId":"KenCheung18"},"content":"![clear_all.png](https://github.com/AY2324S1-CS2113-T18-3/tp/blob/master/images/delete_expected.png?raw\u003dtrue)","lastModifiedDate":"2023-11-07"},{"lineNumber":156,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":157,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":158,"author":{"gitId":"bljhty"},"content":"### Find an entry: find","lastModifiedDate":"2023-11-05"},{"lineNumber":159,"author":{"gitId":"bljhty"},"content":"Find an entry from the existing list of income/expenses.","lastModifiedDate":"2023-11-05"},{"lineNumber":160,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":161,"author":{"gitId":"bljhty"},"content":"Format:","lastModifiedDate":"2023-11-05"},{"lineNumber":162,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-11-05"},{"lineNumber":163,"author":{"gitId":"bljhty"},"content":"find /t income /de [description] /date [date]","lastModifiedDate":"2023-11-05"},{"lineNumber":164,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-11-05"},{"lineNumber":165,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-11-05"},{"lineNumber":166,"author":{"gitId":"bljhty"},"content":"find /t expense /cat [category] /de [description] /date [date]","lastModifiedDate":"2023-11-05"},{"lineNumber":167,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-11-05"},{"lineNumber":168,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":169,"author":{"gitId":"bljhty"},"content":"Example of usage:","lastModifiedDate":"2023-11-05"},{"lineNumber":170,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-11-05"},{"lineNumber":171,"author":{"gitId":"bljhty"},"content":"find /t income /de salary","lastModifiedDate":"2023-11-05"},{"lineNumber":172,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-11-05"},{"lineNumber":173,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-11-05"},{"lineNumber":174,"author":{"gitId":"bljhty"},"content":"find /t expense /cat food /de sushi","lastModifiedDate":"2023-11-05"},{"lineNumber":175,"author":{"gitId":"bljhty"},"content":"```","lastModifiedDate":"2023-11-05"},{"lineNumber":176,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":177,"author":{"gitId":"bljhty"},"content":"Note:","lastModifiedDate":"2023-11-05"},{"lineNumber":178,"author":{"gitId":"limyuhching"},"content":"- Fields `/t`, `/cat`, `/de`, `date` are case-sensitive and should be in the specified order.","lastModifiedDate":"2023-11-06"},{"lineNumber":179,"author":{"gitId":"limyuhching"},"content":"- Field `/cat` is only applicable for expenses.","lastModifiedDate":"2023-11-06"},{"lineNumber":180,"author":{"gitId":"limyuhching"},"content":"- Field `/t` is compulsory.","lastModifiedDate":"2023-11-06"},{"lineNumber":181,"author":{"gitId":"bljhty"},"content":"- Should users add additional characters behind find e.g. findABCDE, the system will still recognise it as find.","lastModifiedDate":"2023-11-06"},{"lineNumber":182,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":183,"author":{"gitId":"bljhty"},"content":"Use case:","lastModifiedDate":"2023-11-05"},{"lineNumber":184,"author":{"gitId":"bljhty"},"content":"- Prompts users if `/t \u003ctype\u003e` field is empty.","lastModifiedDate":"2023-11-05"},{"lineNumber":185,"author":{"gitId":"bljhty"},"content":"- Prompts users if all the optional fields `cat`, `/de`, `/date`. are empty.","lastModifiedDate":"2023-11-06"},{"lineNumber":186,"author":{"gitId":"bljhty"},"content":"- Format of date is `dd/mm/yyyy`. Users can also opt to search for entries by month `mm/yyyy`.","lastModifiedDate":"2023-11-05"},{"lineNumber":187,"author":{"gitId":"bljhty"},"content":"- Date needs to be an existing date, and cannot be dates in the future.","lastModifiedDate":"2023-11-05"},{"lineNumber":188,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":189,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":190,"author":{"gitId":"bljhty"},"content":"Note: \u003cindex\u003e must be a positive integer that corresponds to an income/expense entry","lastModifiedDate":"2023-11-06"},{"lineNumber":191,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":192,"author":{"gitId":"KenCheung18"},"content":"### Clear all entries: Clear","lastModifiedDate":"2023-11-07"},{"lineNumber":193,"author":{"gitId":"KenCheung18"},"content":"Clear the expenses/income created by the user.","lastModifiedDate":"2023-11-07"},{"lineNumber":194,"author":{"gitId":"KenCheung18"},"content":"User can choose to clear both list as well.","lastModifiedDate":"2023-11-07"},{"lineNumber":195,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":196,"author":{"gitId":"KenCheung18"},"content":"Format:","lastModifiedDate":"2023-11-06"},{"lineNumber":197,"author":{"gitId":"KenCheung18"},"content":"```agsl","lastModifiedDate":"2023-11-07"},{"lineNumber":198,"author":{"gitId":"KenCheung18"},"content":"clear income","lastModifiedDate":"2023-11-07"},{"lineNumber":199,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":201,"author":{"gitId":"KenCheung18"},"content":"```agsl","lastModifiedDate":"2023-11-07"},{"lineNumber":202,"author":{"gitId":"KenCheung18"},"content":"clear expense","lastModifiedDate":"2023-11-07"},{"lineNumber":203,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":205,"author":{"gitId":"KenCheung18"},"content":"```agsl","lastModifiedDate":"2023-11-07"},{"lineNumber":206,"author":{"gitId":"KenCheung18"},"content":"clear all","lastModifiedDate":"2023-11-06"},{"lineNumber":207,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":209,"author":{"gitId":"KenCheung18"},"content":"Example of successfully clear income list:","lastModifiedDate":"2023-11-07"},{"lineNumber":210,"author":{"gitId":"KenCheung18"},"content":"![clear_all.png](https://github.com/AY2324S1-CS2113-T18-3/tp/blob/master/images/clear_income.png?raw\u003dtrue)","lastModifiedDate":"2023-11-07"},{"lineNumber":211,"author":{"gitId":"KenCheung18"},"content":"Example of successfully clear expense list:","lastModifiedDate":"2023-11-07"},{"lineNumber":212,"author":{"gitId":"KenCheung18"},"content":"![clear_all.png](https://github.com/AY2324S1-CS2113-T18-3/tp/blob/master/images/clear_expense.png?raw\u003dtrue)","lastModifiedDate":"2023-11-07"},{"lineNumber":213,"author":{"gitId":"KenCheung18"},"content":"Example of successfully clear both income and expense list:","lastModifiedDate":"2023-11-07"},{"lineNumber":214,"author":{"gitId":"KenCheung18"},"content":"![clear_all.png](https://github.com/AY2324S1-CS2113-T18-3/tp/blob/master/images/clear_all.png?raw\u003dtrue)","lastModifiedDate":"2023-11-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":217,"author":{"gitId":"KenCheung18"},"content":"### Check balance: balance","lastModifiedDate":"2023-11-01"},{"lineNumber":218,"author":{"gitId":"KenCheung18"},"content":"Check the balance for current financial records","lastModifiedDate":"2023-11-01"},{"lineNumber":219,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":220,"author":{"gitId":"KenCheung18"},"content":"Format:","lastModifiedDate":"2023-11-01"},{"lineNumber":221,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":222,"author":{"gitId":"KenCheung18"},"content":"balance","lastModifiedDate":"2023-11-01"},{"lineNumber":223,"author":{"gitId":"KenCheung18"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":224,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":225,"author":{"gitId":"limyuhching"},"content":"### Edit an entry: edit ","lastModifiedDate":"2023-11-01"},{"lineNumber":226,"author":{"gitId":"limyuhching"},"content":"Edit an entry from the list of income/expenses.","lastModifiedDate":"2023-11-01"},{"lineNumber":227,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":228,"author":{"gitId":"limyuhching"},"content":"Format:","lastModifiedDate":"2023-11-01"},{"lineNumber":229,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":230,"author":{"gitId":"limyuhching"},"content":"edit income \u003cindex\u003e /de \u003cdescription\u003e /date \u003cdate\u003e /amt [currency] \u003camount\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":231,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":232,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":233,"author":{"gitId":"KenCheung18"},"content":"edit expense \u003cindex\u003e /cat \u003ccategory\u003e /type \u003ctype\u003e /de \u003cdescription\u003e /date \u003cdate\u003e /amt [currency] \u003camount\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":234,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":235,"author":{"gitId":"limyuhching"},"content":"Note:","lastModifiedDate":"2023-11-06"},{"lineNumber":236,"author":{"gitId":"limyuhching"},"content":"- `index` must be a positive integer that corresponds to an income/expense entry","lastModifiedDate":"2023-11-06"},{"lineNumber":237,"author":{"gitId":"limyuhching"},"content":"- Format of income/expense entry applies. Refer to the \"Note\" of add income and add expense feature","lastModifiedDate":"2023-11-06"},{"lineNumber":238,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":239,"author":{"gitId":"limyuhching"},"content":"Example of usage:","lastModifiedDate":"2023-11-01"},{"lineNumber":240,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":241,"author":{"gitId":"limyuhching"},"content":"edit income 1 /de end of year bonus /date 02/10/2023 /amt HKD 3000.00","lastModifiedDate":"2023-11-01"},{"lineNumber":242,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":243,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":244,"author":{"gitId":"limyuhching"},"content":"edit expense 2 /cat food /type dinner /de dinner /date 01/10/2023 /amt 10.00","lastModifiedDate":"2023-11-01"},{"lineNumber":245,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":246,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":247,"author":{"gitId":"bljhty"},"content":"Note:","lastModifiedDate":"2023-11-05"},{"lineNumber":248,"author":{"gitId":"limyuhching"},"content":"- Fields `/cat`, `/type`, `/de`, `date`, and `amt` are case-sensitive and should be in the specified order.","lastModifiedDate":"2023-11-06"},{"lineNumber":249,"author":{"gitId":"limyuhching"},"content":"- Should users enter `/cat`, `/type` or the other fields that is case-sensitive, system will take it as missing field.","lastModifiedDate":"2023-11-06"},{"lineNumber":250,"author":{"gitId":"limyuhching"},"content":"- `\u003cindex\u003e` should not be negative.","lastModifiedDate":"2023-11-06"},{"lineNumber":251,"author":{"gitId":"limyuhching"},"content":"- `\u003cindex\u003e` should not be out of bounds.","lastModifiedDate":"2023-11-06"},{"lineNumber":252,"author":{"gitId":"limyuhching"},"content":"- `\u003camount\u003e` takes up to 2 decimal places.","lastModifiedDate":"2023-11-06"},{"lineNumber":253,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":254,"author":{"gitId":"bljhty"},"content":"Use case:","lastModifiedDate":"2023-11-05"},{"lineNumber":255,"author":{"gitId":"bljhty"},"content":"- Prompts users if index is empty.","lastModifiedDate":"2023-11-05"},{"lineNumber":256,"author":{"gitId":"bljhty"},"content":"- Prompts users if any of the fields are empty.","lastModifiedDate":"2023-11-05"},{"lineNumber":257,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":258,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":259,"author":{"gitId":"limyuhching"},"content":"### List the supported currencies: list currencies","lastModifiedDate":"2023-11-01"},{"lineNumber":260,"author":{"gitId":"KenCheung18"},"content":"Show the foreign currencies supported by KaChinnnngggg.","lastModifiedDate":"2023-11-07"},{"lineNumber":261,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":262,"author":{"gitId":"limyuhching"},"content":"Note: The default currency is SGD.","lastModifiedDate":"2023-11-01"},{"lineNumber":263,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":264,"author":{"gitId":"limyuhching"},"content":"Format:","lastModifiedDate":"2023-11-01"},{"lineNumber":265,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":266,"author":{"gitId":"limyuhching"},"content":"list currencies","lastModifiedDate":"2023-11-01"},{"lineNumber":267,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":268,"author":{"gitId":"limyuhching"},"content":"Example output:","lastModifiedDate":"2023-11-01"},{"lineNumber":269,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":270,"author":{"gitId":"limyuhching"},"content":"These are the supported currencies:","lastModifiedDate":"2023-11-01"},{"lineNumber":271,"author":{"gitId":"limyuhching"},"content":"MYR USD JPY KRW EUR THB HKD INR IDR AUD GBP CNY CAD TWD VND PHP","lastModifiedDate":"2023-11-01"},{"lineNumber":272,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":273,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":274,"author":{"gitId":"bljhty"},"content":"### List existing exchange rates: list exchange rates","lastModifiedDate":"2023-11-06"},{"lineNumber":275,"author":{"gitId":"limyuhching"},"content":"List all updated exchange rates. All exchange rates that are updated or loaded","lastModifiedDate":"2023-11-01"},{"lineNumber":276,"author":{"gitId":"limyuhching"},"content":"from ExchangeRate.txt will be shown. User can call the update exchange rates function to ","lastModifiedDate":"2023-11-01"},{"lineNumber":277,"author":{"gitId":"limyuhching"},"content":"register new exchange rates into their KaChinnnng.","lastModifiedDate":"2023-11-01"},{"lineNumber":278,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":279,"author":{"gitId":"limyuhching"},"content":"Note: Exchange rates are shown in SGD/{other currency}.","lastModifiedDate":"2023-11-01"},{"lineNumber":280,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":281,"author":{"gitId":"limyuhching"},"content":"Format:","lastModifiedDate":"2023-11-01"},{"lineNumber":282,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":283,"author":{"gitId":"limyuhching"},"content":"list exchange rates","lastModifiedDate":"2023-11-01"},{"lineNumber":284,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":285,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":286,"author":{"gitId":"KenCheung18"},"content":"### Update exchange rate","lastModifiedDate":"2023-11-10"},{"lineNumber":287,"author":{"gitId":"limyuhching"},"content":"Update exchange rate of a specific foreign currency. Exchange rates will be saved upon","lastModifiedDate":"2023-11-01"},{"lineNumber":288,"author":{"gitId":"limyuhching"},"content":"successful update.","lastModifiedDate":"2023-11-01"},{"lineNumber":289,"author":{"gitId":"limyuhching"},"content":"  ","lastModifiedDate":"2023-11-01"},{"lineNumber":290,"author":{"gitId":"limyuhching"},"content":"Format:","lastModifiedDate":"2023-11-01"},{"lineNumber":291,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":292,"author":{"gitId":"limyuhching"},"content":"update exchange rate \u003csupported_currency\u003e \u003crate\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":293,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":294,"author":{"gitId":"limyuhching"},"content":"Example of usage:","lastModifiedDate":"2023-11-06"},{"lineNumber":295,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":296,"author":{"gitId":"limyuhching"},"content":"update exchange rate USD 0.8","lastModifiedDate":"2023-11-01"},{"lineNumber":297,"author":{"gitId":"limyuhching"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":298,"author":{"gitId":"limyuhching"},"content":"Note:","lastModifiedDate":"2023-11-06"},{"lineNumber":299,"author":{"gitId":"limyuhching"},"content":"- `\u003ccurrency\u003e` must be one of the foreign currencies supported by KaChinnnng.","lastModifiedDate":"2023-11-06"},{"lineNumber":300,"author":{"gitId":"limyuhching"},"content":"- User may view the supported foreign currencies with `list currencies`.","lastModifiedDate":"2023-11-06"},{"lineNumber":301,"author":{"gitId":"limyuhching"},"content":"- `\u003crate\u003e` specified should be in SGD/{foreign currency}.","lastModifiedDate":"2023-11-06"},{"lineNumber":302,"author":{"gitId":"limyuhching"},"content":"- `\u003crate\u003e` must be a positive decimal that is between 0.001 and 3,000,000.","lastModifiedDate":"2023-11-06"},{"lineNumber":303,"author":{"gitId":"limyuhching"},"content":"- The update of a previously used exchange rate will not retroactively affect entries made prior to the update.","lastModifiedDate":"2023-11-06"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":305,"author":{"gitId":"KenCheung18"},"content":"### Storage for income and expense entries","lastModifiedDate":"2023-11-07"},{"lineNumber":306,"author":{"gitId":"KenCheung18"},"content":"Save all the income and expense entries to the KaChinnnngggg.txt","lastModifiedDate":"2023-11-07"},{"lineNumber":307,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":308,"author":{"gitId":"KenCheung18"},"content":"All income and expense entries will be update to the file for every command input.","lastModifiedDate":"2023-11-07"},{"lineNumber":309,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":310,"author":{"gitId":"KenCheung18"},"content":"There is no command to save to file manually since it\u0027s updating after every command","lastModifiedDate":"2023-11-07"},{"lineNumber":311,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":312,"author":{"gitId":"KenCheung18"},"content":"### Retrieve entries from text file and save to the income and expense list","lastModifiedDate":"2023-11-07"},{"lineNumber":313,"author":{"gitId":"KenCheung18"},"content":"Retrieve all the income and expense entries from the KaChinnnngggg.txt","lastModifiedDate":"2023-11-07"},{"lineNumber":314,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":315,"author":{"gitId":"KenCheung18"},"content":"At the beginning of executing the program, KaChinnnngggg will automatically retrieve all the entries storied in the KaChinnnngggg.txt","lastModifiedDate":"2023-11-07"},{"lineNumber":316,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":317,"author":{"gitId":"KenCheung18"},"content":"There is no command to get from file manually since it will run once at the beginning of program.","lastModifiedDate":"2023-11-07"},{"lineNumber":318,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":321,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":324,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":326,"author":{"gitId":"KenCheung18"},"content":"**A**: Move the txt file from the folder where the jar file located, ","lastModifiedDate":"2023-11-01"},{"lineNumber":327,"author":{"gitId":"KenCheung18"},"content":"to the folder where the jar file located in the new computer ","lastModifiedDate":"2023-11-01"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":329,"author":{"gitId":"bljhty"},"content":"**Q**: What do I need to do when I see the `format incorrect from storage file` at the beginning of running the program","lastModifiedDate":"2023-11-06"},{"lineNumber":330,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":331,"author":{"gitId":"KenCheung18"},"content":"**A**: The system will automatically remove that line from the txt after you give the first command to the bot, ","lastModifiedDate":"2023-11-01"},{"lineNumber":332,"author":{"gitId":"KenCheung18"},"content":"if you don\u0027t want to remove that line, just terminate the program using control/command c right after you see the error,","lastModifiedDate":"2023-11-01"},{"lineNumber":333,"author":{"gitId":"KenCheung18"},"content":"and change the line in txt file to the correct format.","lastModifiedDate":"2023-11-01"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":335,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":338,"author":{"gitId":"bljhty"},"content":"| Action               | Format, Examples                                                                                                                                                                                            |","lastModifiedDate":"2023-11-01"},{"lineNumber":339,"author":{"gitId":"bljhty"},"content":"|----------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-06"},{"lineNumber":340,"author":{"gitId":"bljhty"},"content":"| Help                 | `help`                                                                                                                                                                                                      |","lastModifiedDate":"2023-11-01"},{"lineNumber":341,"author":{"gitId":"bljhty"},"content":"| Add Income           | `add income /de \u003cdescription\u003e /date \u003cdate\u003e /amt [currency] \u003camount\u003e` \u003cbr\u003e e.g., `add income /de salary /date 01/01/2020 /amt 1000`                                                                          |","lastModifiedDate":"2023-11-01"},{"lineNumber":342,"author":{"gitId":"bljhty"},"content":"| Add Expense          | `add expense /cat \u003ccatergory\u003e /type \u003ctype\u003e /de \u003cdescription\u003e /date \u003cdate\u003e /amt [currency] \u003camount\u003e` \u003cbr\u003e e.g., `add expense /cat Food /type lunch /de sushi /date 01/01/2020 /amt 10.50`                    |","lastModifiedDate":"2023-11-01"},{"lineNumber":343,"author":{"gitId":"KenCheung18"},"content":"| List                 | `list` \u003cbr\u003e `list incomes` \u003cbr\u003e `list expenses` \u003cbr\u003e `list currencies` \u003cbr\u003e `list exchange rates`                                                                                                             |","lastModifiedDate":"2023-11-07"},{"lineNumber":344,"author":{"gitId":"bljhty"},"content":"| Delete               | `delete expense \u003cindex\u003e` \u003cbr\u003e `delete income \u003cindex\u003e`                                                                                                                                                       |","lastModifiedDate":"2023-11-01"},{"lineNumber":345,"author":{"gitId":"bljhty"},"content":"| Edit                 | `edit income \u003cindex\u003e /de \u003cdescription\u003e /date \u003cdate\u003e /amt [currency] \u003camount\u003e` \u003cbr\u003e `edit expense \u003cindex\u003e /cat \u003ccatergory\u003e /type \u003ctype\u003e /de \u003cdescription\u003e /date \u003cdate\u003e /amt [currency] \u003camount\u003e`             |","lastModifiedDate":"2023-11-01"},{"lineNumber":346,"author":{"gitId":"limyuhching"},"content":"| Update Exchange Rate | `update exchange rate \u003csupported_currency\u003e \u003crate\u003e`                                                                                                                                                          |","lastModifiedDate":"2023-11-01"},{"lineNumber":347,"author":{"gitId":"bljhty"},"content":"| Clear                | `clear income`\u003cbr/\u003e `clear expense`\u003cbr/\u003e`clear all`                                                                                                                                                         |","lastModifiedDate":"2023-11-05"},{"lineNumber":348,"author":{"gitId":"bljhty"},"content":"| Find                 | `find /t income /de [description] /date [date]`\u003cbr/\u003e e.g. `find /t income /de salary` \u003cbr/\u003e`find /t expense /cat [category] /de [description] /date [date]`\u003cbr/\u003e e.g. `find /t expense /cat food /de sushi` |","lastModifiedDate":"2023-11-05"},{"lineNumber":349,"author":{"gitId":"bljhty"},"content":"| Balance              | `balance`                                                                                                                                                                                                   |","lastModifiedDate":"2023-11-05"},{"lineNumber":350,"author":{"gitId":"limyuhching"},"content":"| Exit                 | `exit`                                                                                                                                                                                                      |","lastModifiedDate":"2023-11-01"},{"lineNumber":351,"author":{"gitId":"bljhty"},"content":"                                                                                                                                                                                              |","lastModifiedDate":"2023-11-05"},{"lineNumber":352,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":353,"author":{"gitId":"bljhty"},"content":"                                                                                                                                                                                       |","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"limyuhching":98,"bljhty":122,"Hongzhii":3,"KenCheung18":100,"-":30}},{"path":"docs/team/Hongzhii.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"# Ee Hong Zhi - Project Portfolio Page","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"### Project: KaChinnnng","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":"KaChinnnng is a financial tracker that seeks to improve one\u0027s financial health. Through logging and monitoring of the user\u0027s inflow and outflow, the user can better understand their current financial state and make more informed financial decision","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2113-ay2324s1.github.io/tp-dashboard/?search\u003d18-3\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dHongzhii\u0026tabRepo\u003dAY2324S1-CS2113-T18-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"Hongzhii"},"content":"* **Enchancements added**:","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"Hongzhii"},"content":"  * Implemented `Expense` class which included amount, date and description","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"Hongzhii"},"content":"  * Implemented Expense categories which includes `Food`, `Transport` and `Utilities` classes","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"Hongzhii"},"content":"  * Implemented Expense types for `Food`, `Transport` and `Utilities` expense categories","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"Hongzhii"},"content":"  * Implemented the `ExpenseParser` class","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"Hongzhii"},"content":"  * Implemented the `ExpenseManager` class","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"Hongzhii"},"content":"  * Contributed to `Ui` and `Duke` classes","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"Hongzhii"},"content":"  * Implemented JUnit tests for `ExpenseManager`","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"Hongzhii"},"content":"* **Documentation**:","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"Hongzhii"},"content":"  * Developer Guide:","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"Hongzhii"},"content":"    * Added implementation details for `ExpenseManager` class","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"Hongzhii"},"content":"    * Added UML sequence diagram for `ExpenseManager` class","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"Hongzhii"},"content":"    ![expenseManager_sequence_diagram.png](https://github.com/AY2324S1-CS2113-T18-3/tp/blob/master/images/expenseManager_sequence_diagram.png?raw\u003dtrue)","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"Hongzhii"},"content":"    * Added UML class diagram for `Expense` class","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"Hongzhii"},"content":"      ![expense_class_diagram.png](https://github.com/AY2324S1-CS2113-T18-3/tp/blob/master/images/expense_class_diagram.png?raw\u003dtrue)","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"Hongzhii"},"content":"      ","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"Hongzhii"},"content":"      ","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"Hongzhii":27}},{"path":"docs/team/bljhty.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"# Lee Jun Hao Bryan - Project Portfolio Page","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"## Overview","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"KaChinnnng is a Command Line Interface financial management tool which allows users to keep track of their expenses and income. There is also an option for users to update to their desired currency for travellers.","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"### Summary of Contributions","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"### Code Contributed","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"[RepoSense Link](https://nus-cs2113-ay2324s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dbljhty\u0026tabRepo\u003dAY2324S1-CS2113-T18-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"### Project management:","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"- Managed release of v1.0, v2.0 and v2.1 on GitHub.","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"- Maintained the entire issue tracker with the necessary tags and labels.","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"### Enhancements implemented:","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"- Created parser to parse user inputs into commands and arguments.","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"- Created the main Command class where all the commands inherit from.","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"- Created the KaChinnnng exception class to handle exceptions.","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"- Created the Ui class where all the user interface methods are stored.","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"- Created the IncomeManager class to allow users to add and track their income.","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"- Created the IncomeParser class to parse the add income commands into the specific arguments.","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"- Created the main FinancialRecord class where all the expenses and income inherit from.","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"- Created the Income class to allow users to add and track their income.","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"- Created the FindCommand and FindParser class to allow users to find specific expenses and incomes.","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"- Created the ListIncome class to allow users to list all their income.","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"- Contributed to the UsageInstructions class to allow users to view the usage instructions.","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"- Contributed to the Duke class to allow users to run the program.","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"- Done up JUnit tests for `IncomeManager`, `IncomeParser`, `Income`, `Ui`, `FindCommand`, `FindParser`, `ListIncome`, `Duke`, `IncomeLister`, `Expense`, `ExpenseParser`, `Parser`,`MockUi`","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"### Contributions to UserGuide:","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"- Added the `Quick  Start` guide.","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"- Added the `Help` feature.","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"- Added the `Add` sections for `Income` and `Expense`.","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"- Added the `list` feature","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"- Contributed to the `Delete` feature.","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"- Added the `Clear` feature.","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"- Added the`Find` feature.","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"- Contributed to the `edit feature`.","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"- Added the `Command Summary` section.","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"### Contributions to DeveloperGuide:","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"- Added the `Architecture` section.","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"- Added Architecture Diagram for KaChinnnng.","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"- Added Design details for KaChinnnng.","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"- Added implementation details and sequence diagrams for `IncomeManager`.","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"- Added implementation details and sequence diagrams for `FindCommand`.","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"- Added `User Stories` section.","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"- Added `Non-Functional Requirements` section.","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"- Added `Glossary` section.","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"- Added `Instructions for Manual Testing` section.","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"bljhty":51}},{"path":"docs/team/kencheung18.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"# Cheung Ka Yuen - Project Portfolio Page","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"## Overview","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"KaChinnngggg is a advanced financial management tool that operated through Command Line Interface (CLI), ","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"providing users a robust platform to effectively monitor their expenses and income. ","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"Furthermore, it offers a convenient feature that allows travelers to effortlessly update their preferred currency.","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":"### Concise Overview","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":"Given below are contributions that I made to this project.","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"### Code Contributed","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"[RepoSense Link](https://nus-cs2113-ay2324s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dKenCheung18\u0026tabRepo\u003dAY2324S1-CS2113-T18-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":"### Project management:","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"- Maintained issue tracker by linking issue with pull requests.","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":"### Enhancements implemented:","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"- Created the SaveToTxt class that store all the incomes and expenses from the incomes and expenses list.","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"- Created the GetFromTxt class that retrieve all the financial record stored in the file to the incomes and expenses list.","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"- Created the UsageInstruction class that help the user to use our product when facing difficulties.","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":"- Created the ClearIncomes class that allow user to clear all the financial records stored in the income list.","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":"- Created the ClearExpenses class that allow user to clear all the financial records stored in the expenses list.","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"- Created the ClearAll class that allow user to clear all the entries stored in both incomes and expenses list.","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":"- Created the Balance function which allow user to check the balance on current financial record.","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"KenCheung18"},"content":"- Contributed to the Duke class to allow user\u0027s command actually execute the way they expected.","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":"- Contributed to the Parser class to make sure user\u0027s input is parse to a command that the Duke class can understand.","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":"- Contributed to the EditIncomeCommand and EditExpenseCommand to create a better UI.","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"KenCheung18"},"content":"- Done up JUnit tests for `SaveToTxt`, `GetFromTxt`, `UsageInstruction`, `ClearIncomes`, `ClearExpenses`, `ClearAll`, `Balance`.","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"KenCheung18"},"content":"- Contributed to JUnit tests for `Duke`, `DeleteExpenseCommand`, `DeleteIncomeCommand`.","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"### Contributions to UserGuide:","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"KenCheung18"},"content":"- Checked and improve the grammar and typo for UG..","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"KenCheung18"},"content":"- Added expected output image for add, delete and clear feature.","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"KenCheung18"},"content":"- Bug fix for the links.","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"KenCheung18"},"content":"- Added the `Balance` feature.","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"KenCheung18"},"content":"- Added the `storage` feature.","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"KenCheung18"},"content":"- Added the Q \u0026 A section.","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"KenCheung18"},"content":"- Improved the `Help` feature.","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"KenCheung18"},"content":"- Improved and finalised the `Clear` feature..","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"KenCheung18"},"content":"- Contributed to `add expense` and `edit expense` feature.","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"KenCheung18"},"content":"- Contributed to the `Command Summary` section.","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"KenCheung18"},"content":"### Contributions to DeveloperGuide:","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"KenCheung18"},"content":"- Fixed bug on image not showing up on DG webpage","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"KenCheung18"},"content":"- Added implementation detail and sequence diagram for `GetFromTxt`.","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"KenCheung18"},"content":"- Added implementation detail and sequence diagram for `SaveToTxt`.","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"KenCheung18":46}},{"path":"docs/team/limyuhching.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"# Lim Yuh Ching - Project Portfolio Page","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"### Project: KaChinnnng","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"KaChinnnng is a financial tracker that seeks to improve one\u0027s financial health. Through logging and monitoring of the user\u0027s inflow and outflow, the user can better understand their current financial state and make more informed financial decision","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2113-ay2324s1.github.io/tp-dashboard/?search\u003d18-3\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dlimyuhching\u0026tabRepo\u003dAY2324S1-CS2113-T18-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"* **Enchancement Feature**:","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"  * Implemented `list` command feature that list all financial records","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"  * Implemented `delete` feature","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"  * Implemented `edit` feature","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"  * Implemented currency conversion feature to `add income` and `add expense`","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"  * Implemented `ExchangeRateManager` class to manager exchange rates","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"  * Implemented `ExchangeRateFileHandler` class for saving and loading of exchange rates from a .txt file","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"  * Implemented JUnit test for the above features","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"  * Contributed to `Duke`, `Parser`, `Ui`","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"* **Documentation**:","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"  * User Guide:","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"    * Added documentation for the features `delete`, `edit`, `update exchange rate`, `list currencies`, `list exchange rates`","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"  * Developer Guide:","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"    * Added implementation details of the `ExchangeRateManager` feature.","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"limyuhching":25}},{"path":"images/SaveToTxt.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"@startuml","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"actor Duke","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"create \":SaveToTxt\"","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"Duke -\u003e \":SaveToTxt\" : SaveToTxt(path)","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"Activate \":SaveToTxt\"","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"\":SaveToTxt\" --\u003e Duke","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":"Deactivate \":SaveToTxt\"","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":"Duke -\u003e \":SaveToTxt\" : saveIncomeAndExpense(incomes:IncomeList, expenses:ExpenseList)","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"Activate \":SaveToTxt\"","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"\":SaveToTxt\" -\u003e \":SaveToTxt\" : saveIncomeToTextFile(incomes)","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":"Activate \":SaveToTxt\"","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":"create \"fw:FileWriter\"","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"\":SaveToTxt\" -\u003e \"fw:FileWriter\" : FileWriter(path)","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":"activate \"fw:FileWriter\"","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":"\"fw:FileWriter\" --\u003e \":SaveToTxt\"","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"deactivate \"fw:FileWriter\"","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"loop income : incomes","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"    \":SaveToTxt\" -\u003e \"incomes:IncomeList\" : income.getDescription()","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":"    activate \"incomes:IncomeList\"","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":"    \"incomes:IncomeList\" --\u003e \":SaveToTxt\"","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"    deactivate \"incomes:IncomeList\"","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":"    \":SaveToTxt\" -\u003e \"incomes:IncomeList\" : income.getDate()","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"KenCheung18"},"content":"    activate \"incomes:IncomeList\"","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":"    \"incomes:IncomeList\" --\u003e \":SaveToTxt\"","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":"    deactivate \"incomes:IncomeList\"","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"KenCheung18"},"content":"    \":SaveToTxt\" -\u003e \"incomes:IncomeList\" : income.getAmount()","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"KenCheung18"},"content":"    activate \"incomes:IncomeList\"","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"KenCheung18"},"content":"    \"incomes:IncomeList\" --\u003e \":SaveToTxt\"","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"    deactivate \"incomes:IncomeList\"","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"KenCheung18"},"content":"    \":SaveToTxt\" -\u003e \"fw:FileWriter\": write(textToAdd)","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"KenCheung18"},"content":"end loop","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"KenCheung18"},"content":"Deactivate \":SaveToTxt\"","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"KenCheung18"},"content":"destroy \"fw:FileWriter\"","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"KenCheung18"},"content":"\":SaveToTxt\" -\u003e \":SaveToTxt\" : saveExpenseToTextFile(expenses)","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"KenCheung18"},"content":"Activate \":SaveToTxt\"","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"KenCheung18"},"content":"create \"fwe:FileWriter\"","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"KenCheung18"},"content":"\":SaveToTxt\" -\u003e \"fwe:FileWriter\" : FileWriter(path)","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"KenCheung18"},"content":"activate \"fwe:FileWriter\"","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"KenCheung18"},"content":"\"fwe:FileWriter\" --\u003e \":SaveToTxt\"","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"KenCheung18"},"content":"deactivate \"fwe:FileWriter\"","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"KenCheung18"},"content":"loop expense : expenses","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"KenCheung18"},"content":"    \":SaveToTxt\" -\u003e \"expenses:ExpenseList\" : expense.getDescription()","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"KenCheung18"},"content":"    activate \"expenses:ExpenseList\"","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"KenCheung18"},"content":"    \"expenses:ExpenseList\" --\u003e \":SaveToTxt\"","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"KenCheung18"},"content":"    deactivate \"expenses:ExpenseList\"","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"KenCheung18"},"content":"    \":SaveToTxt\" -\u003e \"expenses:ExpenseList\" : expense.getDate()","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"KenCheung18"},"content":"    activate \"expenses:ExpenseList\"","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"KenCheung18"},"content":"    \"expenses:ExpenseList\" --\u003e \":SaveToTxt\"","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"KenCheung18"},"content":"    deactivate \"expenses:ExpenseList\"","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"KenCheung18"},"content":"    \":SaveToTxt\" -\u003e \"expenses:ExpenseList\" : expense.getAmount()","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"KenCheung18"},"content":"    activate \"expenses:ExpenseList\"","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"KenCheung18"},"content":"    \"expenses:ExpenseList\" --\u003e \":SaveToTxt\"","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"KenCheung18"},"content":"    deactivate \"expenses:ExpenseList\"","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"KenCheung18"},"content":"    \":SaveToTxt\" -\u003e \"expenses:ExpenseList\" : expense.getType()","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"KenCheung18"},"content":"    activate \"expenses:ExpenseList\"","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"KenCheung18"},"content":"    \"expenses:ExpenseList\" -\u003e \":SaveToTxt\"","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"KenCheung18"},"content":"    deactivate \"expenses:ExpenseList\"","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"KenCheung18"},"content":"    \":SaveToTxt\" -\u003e \"fwe:FileWriter\": write(textToAdd)","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"KenCheung18"},"content":"end loop","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"KenCheung18"},"content":"Deactivate \":SaveToTxt\"","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"KenCheung18"},"content":"destroy \"fwe:FileWriter\"","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"KenCheung18"},"content":"@enduml","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"KenCheung18":68}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.Balance;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.commands.ClearAll;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.commands.ClearExpenses;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.commands.ClearIncomes;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.DeleteExpenseCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.DeleteIncomeCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.commands.EditExpenseCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.commands.EditIncomeCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.commands.ExpenseLister;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.commands.ExpenseManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.commands.FindCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.IncomeLister;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.IncomeManager;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.ListCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.commands.UpdateExchangeRateCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.commands.UsageInstructions;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.ExchangeRateManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.storage.ExchangeRateFileHandler;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.storage.GetFromTxt;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.storage.SaveToTxt;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"import seedu.duke.parser.FindParser;","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"KenCheung18"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":" * This class is the main class of the program.","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":" * It contains the main method that runs the program.","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"    private final Ui ui;","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"    private final ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"    private final ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-11-05"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"    private final SaveToTxt save;","lastModifiedDate":"2023-11-05"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"    private final GetFromTxt get;","lastModifiedDate":"2023-11-05"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"    private final ExchangeRateManager exchangeRateManager;","lastModifiedDate":"2023-11-05"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"    private final ExchangeRateFileHandler exchangeRateFileHandler;","lastModifiedDate":"2023-11-05"},{"lineNumber":47,"author":{"gitId":"KenCheung18"},"content":"    private final UsageInstructions usageInstructions;","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"    public Duke() {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"        incomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"        expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"        String storagePath \u003d \"KaChinnnngggg.txt\";","lastModifiedDate":"2023-11-05"},{"lineNumber":54,"author":{"gitId":"KenCheung18"},"content":"        save \u003d new SaveToTxt(storagePath);","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"KenCheung18"},"content":"        get \u003d new GetFromTxt(storagePath);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"        exchangeRateManager \u003d ExchangeRateManager.getInstance();","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"        exchangeRateFileHandler \u003d new ExchangeRateFileHandler(\"./data/ExchangeRates.txt\");","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"KenCheung18"},"content":"        usageInstructions \u003d new UsageInstructions();","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"     * This method runs the program.","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"    public void run() {","lastModifiedDate":"2023-10-09"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"        loadData();","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"limyuhching"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"        while (!isExit) {","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"            try {","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"                if (\"exit\".equals(fullCommand)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"                    isExit \u003d true;","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"                    continue;","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"                executeCommand(fullCommand);","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"                saveData();","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"            } catch (KaChinnnngException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"                Ui.showLineDivider();","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"                Ui.showLineDivider();","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"        ui.printGoodbyeMessage();","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"    protected void loadData() {","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"KenCheung18"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"KenCheung18"},"content":"            get.getFromTextFile(incomes, expenses);","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"limyuhching"},"content":"            exchangeRateFileHandler.load();","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"KenCheung18"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"KenCheung18"},"content":"            System.out.println(\"\\tOOPS!!! File not found.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"limyuhching"},"content":"        } catch (KaChinnnngException e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-05"},{"lineNumber":95,"author":{"gitId":"limyuhching"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-05"},{"lineNumber":97,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"    protected void executeCommand(String fullCommand) throws KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"        String command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-10-11"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"        String[] parts \u003d command.split(\"-\", 2);","lastModifiedDate":"2023-10-11"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"        // ... (switch-case structure extracted from the original `run()` method)","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"        switch (parts[0]) {","lastModifiedDate":"2023-10-11"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"        case \"exit\":","lastModifiedDate":"2023-10-11"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"            break;","lastModifiedDate":"2023-10-11"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"        case \"add_income\":","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"            IncomeManager incomeCommand \u003d new IncomeManager(fullCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"            incomeCommand.execute();","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"            Income newIncome \u003d incomeCommand.getNewIncome();","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"bljhty"},"content":"            incomes.add(newIncome);","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"            Ui.printIncomeAddedMessage(newIncome);","lastModifiedDate":"2023-10-29"},{"lineNumber":115,"author":{"gitId":"bljhty"},"content":"            break;","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"KenCheung18"},"content":"        case \"list_incomes\":","lastModifiedDate":"2023-11-07"},{"lineNumber":118,"author":{"gitId":"bljhty"},"content":"            new IncomeLister(incomes, ui).listIncomes();","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"bljhty"},"content":"            break;","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"Hongzhii"},"content":"        case \"add_expense\":","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"Hongzhii"},"content":"            ExpenseManager expenseCommand \u003d new ExpenseManager(fullCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"Hongzhii"},"content":"            expenseCommand.execute();","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"Hongzhii"},"content":"            Expense newExpense \u003d expenseCommand.getNewExpense();","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"Hongzhii"},"content":"            expenses.add(newExpense);","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"bljhty"},"content":"            Ui.printExpenseAddedMessage(newExpense);","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"Hongzhii"},"content":"            break;","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"KenCheung18"},"content":"        case \"list_expenses\":","lastModifiedDate":"2023-11-07"},{"lineNumber":130,"author":{"gitId":"Hongzhii"},"content":"            new ExpenseLister(expenses, ui).listExpenses();","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"KenCheung18"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"limyuhching"},"content":"        case \"list\":","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"limyuhching"},"content":"            new ListCommand(incomes, expenses, ui).execute();","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"limyuhching"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"limyuhching"},"content":"        case \"delete_income\":","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":141,"author":{"gitId":"KenCheung18"},"content":"            new DeleteIncomeCommand().execute(incomes, fullCommand, ui);","lastModifiedDate":"2023-11-07"},{"lineNumber":142,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":143,"author":{"gitId":"limyuhching"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"limyuhching"},"content":"        case \"delete_expense\":","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":147,"author":{"gitId":"KenCheung18"},"content":"            new DeleteExpenseCommand().execute(expenses, fullCommand, ui);","lastModifiedDate":"2023-11-07"},{"lineNumber":148,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":149,"author":{"gitId":"limyuhching"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"KenCheung18"},"content":"        case \"help\":","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":153,"author":{"gitId":"KenCheung18"},"content":"            usageInstructions.getHelp();","lastModifiedDate":"2023-11-07"},{"lineNumber":154,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":155,"author":{"gitId":"KenCheung18"},"content":"            break;","lastModifiedDate":"2023-11-07"},{"lineNumber":156,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":157,"author":{"gitId":"KenCheung18"},"content":"        case \"help_add\":","lastModifiedDate":"2023-11-07"},{"lineNumber":158,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":159,"author":{"gitId":"KenCheung18"},"content":"            usageInstructions.getHelpAddFunction();","lastModifiedDate":"2023-11-07"},{"lineNumber":160,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":161,"author":{"gitId":"KenCheung18"},"content":"            break;","lastModifiedDate":"2023-11-07"},{"lineNumber":162,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":163,"author":{"gitId":"KenCheung18"},"content":"        case \"help_list\":","lastModifiedDate":"2023-11-07"},{"lineNumber":164,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":165,"author":{"gitId":"KenCheung18"},"content":"            usageInstructions.getHelpListFunction();","lastModifiedDate":"2023-11-07"},{"lineNumber":166,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":167,"author":{"gitId":"KenCheung18"},"content":"            break;","lastModifiedDate":"2023-11-07"},{"lineNumber":168,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":169,"author":{"gitId":"KenCheung18"},"content":"        case \"help_delete\":","lastModifiedDate":"2023-11-07"},{"lineNumber":170,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":171,"author":{"gitId":"KenCheung18"},"content":"            usageInstructions.getHelpDeleteFunction();","lastModifiedDate":"2023-11-07"},{"lineNumber":172,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":173,"author":{"gitId":"KenCheung18"},"content":"            break;","lastModifiedDate":"2023-11-07"},{"lineNumber":174,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":175,"author":{"gitId":"KenCheung18"},"content":"        case \"help_find\":","lastModifiedDate":"2023-11-07"},{"lineNumber":176,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":177,"author":{"gitId":"KenCheung18"},"content":"            usageInstructions.getHelpFindFunction();","lastModifiedDate":"2023-11-07"},{"lineNumber":178,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":179,"author":{"gitId":"KenCheung18"},"content":"            break;","lastModifiedDate":"2023-11-07"},{"lineNumber":180,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":181,"author":{"gitId":"KenCheung18"},"content":"        case \"help_edit\":","lastModifiedDate":"2023-11-07"},{"lineNumber":182,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":183,"author":{"gitId":"KenCheung18"},"content":"            usageInstructions.getHelpEditFunction();","lastModifiedDate":"2023-11-07"},{"lineNumber":184,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":185,"author":{"gitId":"KenCheung18"},"content":"            break;","lastModifiedDate":"2023-11-07"},{"lineNumber":186,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":187,"author":{"gitId":"KenCheung18"},"content":"        case \"help_update_exchange_rate\":","lastModifiedDate":"2023-11-07"},{"lineNumber":188,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":189,"author":{"gitId":"KenCheung18"},"content":"            usageInstructions.getHelpUpdateExchangeRateFunction();","lastModifiedDate":"2023-11-07"},{"lineNumber":190,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":191,"author":{"gitId":"KenCheung18"},"content":"            break;","lastModifiedDate":"2023-11-07"},{"lineNumber":192,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":193,"author":{"gitId":"KenCheung18"},"content":"        case \"help_clear\":","lastModifiedDate":"2023-11-07"},{"lineNumber":194,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":195,"author":{"gitId":"KenCheung18"},"content":"            usageInstructions.getHelpClearFunction();","lastModifiedDate":"2023-11-07"},{"lineNumber":196,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":197,"author":{"gitId":"KenCheung18"},"content":"            break;","lastModifiedDate":"2023-11-07"},{"lineNumber":198,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":199,"author":{"gitId":"KenCheung18"},"content":"        case \"help_balance\":","lastModifiedDate":"2023-11-07"},{"lineNumber":200,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":201,"author":{"gitId":"KenCheung18"},"content":"            usageInstructions.getHelpBalanceFunction();","lastModifiedDate":"2023-11-07"},{"lineNumber":202,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":203,"author":{"gitId":"KenCheung18"},"content":"            break;","lastModifiedDate":"2023-11-07"},{"lineNumber":204,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":205,"author":{"gitId":"KenCheung18"},"content":"        case \"help_exit\":","lastModifiedDate":"2023-11-07"},{"lineNumber":206,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":207,"author":{"gitId":"KenCheung18"},"content":"            usageInstructions.getHelpExitFunction();","lastModifiedDate":"2023-11-07"},{"lineNumber":208,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":209,"author":{"gitId":"KenCheung18"},"content":"            break;","lastModifiedDate":"2023-10-16"},{"lineNumber":210,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":211,"author":{"gitId":"KenCheung18"},"content":"        case \"balance\":","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"bljhty"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":213,"author":{"gitId":"KenCheung18"},"content":"            new Balance(incomes, expenses).getBalanceMessage();","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"bljhty"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-10-23"},{"lineNumber":215,"author":{"gitId":"bljhty"},"content":"            break;","lastModifiedDate":"2023-10-23"},{"lineNumber":216,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"bljhty"},"content":"        case \"find\":","lastModifiedDate":"2023-10-23"},{"lineNumber":218,"author":{"gitId":"bljhty"},"content":"            String[] parsedParameters \u003d FindParser.parseFindCommand(fullCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":219,"author":{"gitId":"limyuhching"},"content":"            FindCommand findCommand \u003d new FindCommand(incomes, expenses,","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"bljhty"},"content":"                        parsedParameters[0], parsedParameters[1],","lastModifiedDate":"2023-10-23"},{"lineNumber":221,"author":{"gitId":"bljhty"},"content":"                        parsedParameters[2], parsedParameters[3], ui);","lastModifiedDate":"2023-10-23"},{"lineNumber":222,"author":{"gitId":"bljhty"},"content":"            findCommand.execute();","lastModifiedDate":"2023-10-23"},{"lineNumber":223,"author":{"gitId":"KenCheung18"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"KenCheung18"},"content":"        case \"clear_incomes\":","lastModifiedDate":"2023-10-25"},{"lineNumber":226,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-10-25"},{"lineNumber":227,"author":{"gitId":"KenCheung18"},"content":"            new ClearIncomes(incomes).clearAllIncomes();","lastModifiedDate":"2023-10-25"},{"lineNumber":228,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-10-25"},{"lineNumber":229,"author":{"gitId":"KenCheung18"},"content":"            break;","lastModifiedDate":"2023-10-25"},{"lineNumber":230,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"KenCheung18"},"content":"        case \"clear_expenses\":","lastModifiedDate":"2023-10-25"},{"lineNumber":232,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-10-25"},{"lineNumber":233,"author":{"gitId":"KenCheung18"},"content":"            new ClearExpenses(expenses).clearAllExpenses();","lastModifiedDate":"2023-10-31"},{"lineNumber":234,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-10-25"},{"lineNumber":235,"author":{"gitId":"KenCheung18"},"content":"            break;","lastModifiedDate":"2023-10-25"},{"lineNumber":236,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"KenCheung18"},"content":"        case \"clear_all\":","lastModifiedDate":"2023-10-25"},{"lineNumber":238,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-10-25"},{"lineNumber":239,"author":{"gitId":"KenCheung18"},"content":"            new ClearAll(incomes, expenses).clearAllIncomeAndExpense();","lastModifiedDate":"2023-10-25"},{"lineNumber":240,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-10-25"},{"lineNumber":241,"author":{"gitId":"KenCheung18"},"content":"            break;","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":243,"author":{"gitId":"limyuhching"},"content":"        case \"edit_income\":","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":245,"author":{"gitId":"limyuhching"},"content":"            new EditIncomeCommand(incomes, fullCommand).execute();","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":247,"author":{"gitId":"limyuhching"},"content":"            break;","lastModifiedDate":"2023-10-26"},{"lineNumber":248,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"limyuhching"},"content":"        case \"edit_expense\":","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":251,"author":{"gitId":"limyuhching"},"content":"            new EditExpenseCommand(expenses, fullCommand).execute();","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"KenCheung18"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":253,"author":{"gitId":"limyuhching"},"content":"            break;","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":255,"author":{"gitId":"limyuhching"},"content":"        case \"list_currencies\":","lastModifiedDate":"2023-10-27"},{"lineNumber":256,"author":{"gitId":"limyuhching"},"content":"            exchangeRateManager.showSupportedCurrencies();","lastModifiedDate":"2023-10-27"},{"lineNumber":257,"author":{"gitId":"limyuhching"},"content":"            break;","lastModifiedDate":"2023-10-27"},{"lineNumber":258,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":259,"author":{"gitId":"limyuhching"},"content":"        case \"list_exchange_rates\":","lastModifiedDate":"2023-10-27"},{"lineNumber":260,"author":{"gitId":"limyuhching"},"content":"            exchangeRateManager.showExchangeRates();","lastModifiedDate":"2023-10-27"},{"lineNumber":261,"author":{"gitId":"limyuhching"},"content":"            break;","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":263,"author":{"gitId":"limyuhching"},"content":"        case \"update_exchange_rate\":","lastModifiedDate":"2023-10-27"},{"lineNumber":264,"author":{"gitId":"limyuhching"},"content":"            Command c \u003d new UpdateExchangeRateCommand(fullCommand, exchangeRateFileHandler, ui);","lastModifiedDate":"2023-11-06"},{"lineNumber":265,"author":{"gitId":"limyuhching"},"content":"            c.execute();","lastModifiedDate":"2023-10-27"},{"lineNumber":266,"author":{"gitId":"limyuhching"},"content":"            break;","lastModifiedDate":"2023-10-27"},{"lineNumber":267,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":268,"author":{"gitId":"bljhty"},"content":"        default:","lastModifiedDate":"2023-10-11"},{"lineNumber":269,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Invalid command. Please try again.\"","lastModifiedDate":"2023-10-31"},{"lineNumber":270,"author":{"gitId":"bljhty"},"content":"                    + \"\\nType \u0027help\u0027 to see the list of commands available.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":271,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":272,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":273,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":274,"author":{"gitId":"bljhty"},"content":"    private void saveData() {","lastModifiedDate":"2023-10-31"},{"lineNumber":275,"author":{"gitId":"KenCheung18"},"content":"        save.saveIncomeAndExpense(incomes, expenses);","lastModifiedDate":"2023-10-25"},{"lineNumber":276,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":277,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":278,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-09"},{"lineNumber":280,"author":{"gitId":"bljhty"},"content":"        new Duke().run();","lastModifiedDate":"2023-10-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":283,"author":{"gitId":"bljhty"},"content":"    public int getIncomesSize() {","lastModifiedDate":"2023-10-31"},{"lineNumber":284,"author":{"gitId":"bljhty"},"content":"        return this.incomes.size();","lastModifiedDate":"2023-10-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":286,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":287,"author":{"gitId":"bljhty"},"content":"    public int getExpensesSize() {","lastModifiedDate":"2023-10-31"},{"lineNumber":288,"author":{"gitId":"bljhty"},"content":"        return this.expenses.size();","lastModifiedDate":"2023-10-31"},{"lineNumber":289,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":290,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"limyuhching":47,"bljhty":111,"Hongzhii":8,"KenCheung18":114,"-":11}},{"path":"src/main/java/seedu/duke/commands/Balance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":" * The `Balance` class represents a financial balance calculator","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":" * that calculates the balance between income and expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":" * It takes a list of income and expense records as input and provides methods to calculate and display the balance.","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":"public class Balance {","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"    private static final DecimalFormat df \u003d new DecimalFormat(\"0.00\");","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":"    private final ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":"    private final ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"    public Balance(ArrayList\u003cIncome\u003e incomes, ArrayList\u003cExpense\u003e expenses) {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"        assert incomes !\u003d null : \"incomes should not be null\";","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":"        assert expenses !\u003d null : \"expenses should not be null\";","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":"        this.incomes \u003d incomes;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"        this.expenses \u003d expenses;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":"     * Calculates the financial balance by subtracting the total expenses from the total income.","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"KenCheung18"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"KenCheung18"},"content":"     * @return The calculated financial balance.","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"    public double getBalance() {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"KenCheung18"},"content":"        double totalIncome \u003d 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"KenCheung18"},"content":"        double totalExpense \u003d 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"KenCheung18"},"content":"        for (Income income : incomes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"KenCheung18"},"content":"            totalIncome +\u003d income.getAmount();","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"KenCheung18"},"content":"        for (Expense expense : expenses) {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"KenCheung18"},"content":"            totalExpense +\u003d expense.getAmount();","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"KenCheung18"},"content":"        return totalIncome - totalExpense;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"KenCheung18"},"content":"     * Prints a message to the console displaying the calculated financial balance.","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"KenCheung18"},"content":"    public void getBalanceMessage() {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"KenCheung18"},"content":"        System.out.printf(\"Balance: \" + df.format(getBalance()));","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"KenCheung18"},"content":"        System.out.println();","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"KenCheung18"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"KenCheung18":50}},{"path":"src/main/java/seedu/duke/commands/ClearAll.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":" * The ClearAll class is responsible for clearing both the list of incomes and expenses.","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":" * It provides a method to clear all incomes and expenses from the corresponding list.","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"public class ClearAll {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":"    private final ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":"    private final ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":"     * Constructs a ClearAll object with the given lists of incomes and expenses.","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"     * @param incomes   The list of incomes to be cleared.","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"     * @param expenses  The list of expenses to be cleared.","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":"    public ClearAll(ArrayList\u003cIncome\u003e incomes, ArrayList\u003cExpense\u003e expenses) {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"        assert incomes !\u003d null : \"incomes should not be null\";","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":"        assert expenses !\u003d null : \"expenses should not be null\";","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"KenCheung18"},"content":"        this.incomes \u003d incomes;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":"        this.expenses \u003d expenses;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"KenCheung18"},"content":"     * Clears all incomes and expenses from their respective lists and prints a message to confirm the action.","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"KenCheung18"},"content":"    public void clearAllIncomeAndExpense() {","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"KenCheung18"},"content":"        incomes.clear();","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"KenCheung18"},"content":"        expenses.clear();","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Both income and expense lists cleared\");","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"KenCheung18"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"KenCheung18":37}},{"path":"src/main/java/seedu/duke/commands/ClearExpenses.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":" * The ClearExpenses class is responsible for clearing the list of expenses.","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":" * It provides a method to clear all expenses from the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"public class ClearExpenses {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"    private ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"     * Constructs a ClearExpenses object with the given list of expenses.","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":"     * @param expenses The list of expenses to be cleared.","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"    public ClearExpenses(ArrayList\u003cExpense\u003e expenses) {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"        assert expenses !\u003d null : \"expenses should not be null\";","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":"        this.expenses \u003d expenses;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"KenCheung18"},"content":"     * Clears all expenses from the list and prints a message to confirm the action.","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":"    public void clearAllExpenses(){","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"KenCheung18"},"content":"        expenses.clear();","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"You have cleared the expense list\");","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"KenCheung18":31}},{"path":"src/main/java/seedu/duke/commands/ClearIncomes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":" * The ClearIncomes class is responsible for clearing the list of incomes.","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":" * It provides a method to clear all incomes from the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"public class ClearIncomes {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"    private ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"     * Constructs a ClearIncomes object with the given list of incomes.","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":"     * @param incomes The list of incomes to be cleared.","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"    public ClearIncomes(ArrayList\u003cIncome\u003e incomes) {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"        assert incomes !\u003d null : \"incomes should not be null\";","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":"        this.incomes \u003d incomes;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"KenCheung18"},"content":"     * Clears all incomes from the list and prints a message to confirm the action.","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":"    public void clearAllIncomes() {","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"KenCheung18"},"content":"        incomes.clear();","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"You have cleared the income list\");","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"KenCheung18":33}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":" * Represents the abstract class for all commands.","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":" * This class serves as a blueprint for all specific command classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":" *","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"public abstract class Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"     * This method is used to execute the command.","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"    public void execute() throws KaChinnnngException {","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"limyuhching":2,"bljhty":16}},{"path":"src/main/java/seedu/duke/commands/DeleteExpenseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":" * The `DeleteExpenseCommand` class represents a command to delete an expense record from a list of expenses.","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":" * It extends the `Commands` class and is used to manage expense records in the application.","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"public class DeleteExpenseCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"     * Constructs a `DeleteExpenseCommand` object. This class does not have any specific constructor logic.","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"    public DeleteExpenseCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"     * Executes the `DeleteExpenseCommand` to remove an expense record from the list of expenses.","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"     * @param expenses     The list of expense records to be modified.","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"     * @param fullcommand  The full command entered by the user, including the index of the expense to be deleted.","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":"     * @param ui           The user interface for displaying messages.","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"     * @throws KaChinnnngException If there is a problem with the command execution, such as missing arguments,","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"     *                            an invalid index, or a non-existent expense record.","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"KenCheung18"},"content":"    public void execute(ArrayList\u003cExpense\u003e expenses, String fullcommand, Ui ui) throws KaChinnnngException {","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"            String[] tokens \u003d fullcommand.split(\" \", 3);","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"            index \u003d Integer.parseInt(tokens[2])-1;","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"            Expense removedExpense \u003d expenses.get(index);","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"            expenses.remove(index);","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"Noted. This expense record has been deleted:\");","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"            System.out.println(removedExpense);","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"You\u0027re missing an argument\");","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"        } catch (NullPointerException | NumberFormatException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"Oops! An integer index is expected\");","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"Oops! Expense \" + (index+1) + \" does not exist\");","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"limyuhching":41,"KenCheung18":4}},{"path":"src/main/java/seedu/duke/commands/DeleteIncomeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":" * The DeleteIncomeCommand class is responsible for deleting an income record from the list of incomes.","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"public class DeleteIncomeCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"     * Constructs a DeleteIncomeCommand object.","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"    public DeleteIncomeCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"     * Executes the DeleteIncomeCommand to remove an income record from the list of incomes.","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"     * @param incomes     The list of income records to be modified.","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":"     * @param fullcommand The full command entered by the user.","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"     * @param ui          The user interface for displaying messages.","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"     * @throws KaChinnnngException If there is a problem with the command execution, such as missing arguments,","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"     *                            invalid index, or a non-existent income record.","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":"    public void execute(ArrayList\u003cIncome\u003e incomes, String fullcommand, Ui ui) throws KaChinnnngException {","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"KenCheung18"},"content":"            String[] tokens \u003d fullcommand.split(\" \", 3);","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"            index \u003d Integer.parseInt(tokens[2])-1;","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"            Income removedIncome \u003d incomes.get(index);","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"            incomes.remove(index);","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"Noted. This income record has been deleted:\");","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"            System.out.println(removedIncome);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"You\u0027re missing an argument\");","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"        } catch (NullPointerException | NumberFormatException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"Oops! An integer index is expected\");","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"Oops! Income \" + (index+1) + \" does not exist\");","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"limyuhching":41,"KenCheung18":4}},{"path":"src/main/java/seedu/duke/commands/EditExpenseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"public class EditExpenseCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"    private static final String EXPECTED_FORMAT \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"            \"edit expense \u003cindex\u003e /cat \u003ccategory\u003e /type \u003ctype\u003e /de \u003cdescription\u003e \" +","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"            \"/date \u003cDD/MM/YYYY\u003e /amt [currency] \u003camount\u003e\";","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"    ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"    String fullCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"    int index;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"     * Constructs an EditExpenseCommand with the specified expense records and full command.","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"     * @param expenses     The ArrayList of Expense objects containing expense records.","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"     * @param fullCommand  The full command string entered by the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"     * @throws KaChinnnngException If there is an error in the command creation, such as missing arguments.","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"    public EditExpenseCommand(ArrayList\u003cExpense\u003e expenses, String fullCommand) throws KaChinnnngException {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"        this.expenses \u003d expenses;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"     * Executes the edit expense command. It parses the user input, retrieves the new expense information,","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"     * updates the expense record, and prints the changes.","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"     * @throws KaChinnnngException If there is an error in executing the command, such as missing arguments,","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"     *                            incorrect index, or if the specified expense record does not exist.","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"    public void execute() throws KaChinnnngException  {","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"        assert expenses !\u003d null : \"Incomes ArrayList must not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"        assert fullCommand !\u003d null : \"Full command string must not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"            index \u003d getIndex(fullCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"            if (index \u003c 0) {","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"                throw new KaChinnnngException(\"Oops! Index has to be a positive integer\");","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"            ExpenseManager expenseCommand \u003d new ExpenseManager(fullCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"            expenseCommand.execute();","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"limyuhching"},"content":"            Expense newExpense \u003d expenseCommand.getNewExpense();","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"            Expense removedExpense \u003d expenses.get(index);","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"            expenses.set(index, newExpense);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"Noted. The expense record you\u0027ve specified has been changed:\");","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"Before: \" + removedExpense);","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"After: \" + newExpense);","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"Oops! Expense \" + (index+1) + \" does not exist\");","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"limyuhching"},"content":"     * Extracts and returns the index from the full command string.","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"limyuhching"},"content":"     * @param fullCommand The full command string.","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"limyuhching"},"content":"     * @return The index of the income record to be edited.","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"limyuhching"},"content":"     * @throws KaChinnnngException If there is an error in extracting the index, such as missing arguments","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"limyuhching"},"content":"     *                            or if the index is not a valid integer.","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"limyuhching"},"content":"    private int getIndex(String fullCommand) throws KaChinnnngException {","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"limyuhching"},"content":"            String[] tokens \u003d fullCommand.split(\" \", 4);","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"limyuhching"},"content":"            assert tokens.length \u003e\u003d 4 : \"Command must have at least 4 tokens\";","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"limyuhching"},"content":"            return Integer.parseInt(tokens[2])-1;","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"limyuhching"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"You\u0027re missing an argument.\\nExpected: \"+EXPECTED_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"limyuhching"},"content":"        } catch (NullPointerException | NumberFormatException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"Oops! An integer index is expected\");","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"limyuhching":77}},{"path":"src/main/java/seedu/duke/commands/EditIncomeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"public class EditIncomeCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"    private static final String EXPECTED_FORMAT \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"            \"edit income \u003cindex\u003e /de \u003cdescription\u003e /date \u003cDD/MM/YYYY\u003e /amt [currency] \u003camount\u003e\";","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"    ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"    String fullCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"    int index;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"     * Constructs an EditIncomeCommand with the specified income records and full command.","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"     * @param incomes      The ArrayList of Income objects containing income records.","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"     * @param fullCommand  The full command string entered by the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"    public EditIncomeCommand(ArrayList\u003cIncome\u003e incomes, String fullCommand) {","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"        this.incomes \u003d incomes;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"     * Executes the edit income command. It parses the user input, retrieves the new income information,","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"     * updates the income record, and prints the changes.","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"     * @throws KaChinnnngException If there is an error in executing the command, such as missing arguments,","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"     *                            incorrect index, or if the specified income record does not exist.","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"    public void execute() throws KaChinnnngException  {","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"        assert incomes !\u003d null : \"Incomes ArrayList must not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"        assert fullCommand !\u003d null : \"Full command string must not be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"            index \u003d getIndex(fullCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"            if (index \u003c 0) {","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"                throw new KaChinnnngException(\"Oops! Index has to be a positive integer\");","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"            IncomeManager incomeCommand \u003d new IncomeManager(fullCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"limyuhching"},"content":"            incomeCommand.execute();","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"            Income newIncome \u003d incomeCommand.getNewIncome();","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"            Income removedIncome \u003d incomes.get(index);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"            incomes.set(index, newIncome);","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"Noted. The income record you\u0027ve specified has been changed:\");","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"Before: \" + removedIncome);","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"After: \" + newIncome);","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"Oops! Income \" + (index+1) + \" does not exist\");","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"limyuhching"},"content":"     * Extracts and returns the index from the full command string.","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"limyuhching"},"content":"     * @param fullCommand The full command string.","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"limyuhching"},"content":"     * @return The index of the income record to be edited.","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"limyuhching"},"content":"     * @throws KaChinnnngException If there is an error in extracting the index, such as missing arguments","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"limyuhching"},"content":"     *                            or if the index is not a valid integer.","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"limyuhching"},"content":"    private int getIndex(String fullCommand) throws KaChinnnngException {","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"limyuhching"},"content":"            String[] tokens \u003d fullCommand.split(\" \", 4);","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"limyuhching"},"content":"            assert tokens.length \u003e\u003d 4 : \"Command must have at least 4 tokens\";","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"limyuhching"},"content":"            return Integer.parseInt(tokens[2])-1;","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"limyuhching"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"You\u0027re missing an argument.\\nExpected: \"+EXPECTED_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"limyuhching"},"content":"        } catch (NullPointerException | NumberFormatException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"Oops! An integer index is expected\");","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"limyuhching":78}},{"path":"src/main/java/seedu/duke/commands/ExpenseLister.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":" * Represents the command that when executed, lists all expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Hongzhii"},"content":" * This class is a child class of the Command class.","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Hongzhii"},"content":" *","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Hongzhii"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"public class ExpenseLister extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Hongzhii"},"content":"    private final ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Hongzhii"},"content":"    private final Ui ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Hongzhii"},"content":"     * Constructor for ExpenseLister.","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Hongzhii"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Hongzhii"},"content":"     * @param expenses","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Hongzhii"},"content":"     * @param ui","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Hongzhii"},"content":"    public ExpenseLister(ArrayList\u003cExpense\u003e expenses, Ui ui) {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Hongzhii"},"content":"        this.expenses \u003d expenses;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Hongzhii"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Hongzhii"},"content":"     * This method is used to execute the command.","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Hongzhii"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Hongzhii"},"content":"    public void execute() {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Hongzhii"},"content":"        listExpenses();","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Hongzhii"},"content":"     * This method lists all incomes.","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Hongzhii"},"content":"    public void listExpenses() {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Hongzhii"},"content":"        if (expenses.isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Hongzhii"},"content":"            ui.showLineDivider();","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Hongzhii"},"content":"            System.out.println(\"You have no recorded expenses.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Hongzhii"},"content":"            ui.showLineDivider();","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Hongzhii"},"content":"            return;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Hongzhii"},"content":"        ui.showLineDivider();","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Hongzhii"},"content":"        System.out.println(\"Here are your expenses:\");","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Hongzhii"},"content":"        for (int i \u003d 0; i \u003c expenses.size(); i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Hongzhii"},"content":"            System.out.println((i + 1) + \". \" + expenses.get(i).toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Hongzhii"},"content":"        ui.showLineDivider();","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"limyuhching":1,"Hongzhii":52}},{"path":"src/main/java/seedu/duke/commands/ExpenseManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.parser.ExpenseParser;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":" * This is the class that manages the creation of new expense","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Hongzhii"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"public class ExpenseManager extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Hongzhii"},"content":"    private final String details;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Hongzhii"},"content":"    private Expense newExpense;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Hongzhii"},"content":"    public ExpenseManager(String details) {","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Hongzhii"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Hongzhii"},"content":"     * This method is used to execute the command","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Hongzhii"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Hongzhii"},"content":"     * @throws KaChinnnngException","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Hongzhii"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Hongzhii"},"content":"    public void execute() throws KaChinnnngException {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Hongzhii"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d extractExpenseFields(details);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Hongzhii"},"content":"        newExpense \u003d ExpenseParser.parseExpense(expenseFields);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Hongzhii"},"content":"     * This method returns new expense created","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Hongzhii"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Hongzhii"},"content":"     * @return","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Hongzhii"},"content":"    public Expense getNewExpense() {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Hongzhii"},"content":"        return newExpense;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Hongzhii"},"content":"     * This method extracts the fields of the expense.","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Hongzhii"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Hongzhii"},"content":"     * @param details String containing the details of the expense","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Hongzhii"},"content":"     * @return expenseFields HashMap containing the fields of the income","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Hongzhii"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Hongzhii"},"content":"    private HashMap\u003cString, String\u003e extractExpenseFields(String details) throws KaChinnnngException{","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Hongzhii"},"content":"        HashMap\u003cString,String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Hongzhii"},"content":"        String[] parts \u003d details.split(\"/cat | /type | /de | /date | /amt \");","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Hongzhii"},"content":"        if(parts.length !\u003d 6) {","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Hongzhii"},"content":"            throw new KaChinnnngException(\"Missing fields detected\");","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Hongzhii"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, parts[1].trim());","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Hongzhii"},"content":"        expenseFields.put(ExpenseParser.TYPE_FIELD, parts[2].trim());","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Hongzhii"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, parts[3].trim());","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Hongzhii"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, parts[4].trim());","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Hongzhii"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, parts[5].trim());","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Hongzhii"},"content":"        return expenseFields;","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"limyuhching":2,"Hongzhii":60}},{"path":"src/main/java/seedu/duke/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import java.time.YearMonth;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"import java.io.File;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":" * Represents a command to find and display financial records (either incomes or expenses) based on specific criteria.","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":" * The criteria include type (income/expense), category, description, and date.","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":" * This command supports searching by a specific date or by a month. If a date isn\u0027t provided, it will not be used","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":" * as a filter. Similarly, if the category or description isn\u0027t provided, they won\u0027t be used as filters.","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(FindCommand.class.getName());","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"    private static final List\u003cString\u003e VALID_EXPENSE_CAT \u003d Arrays.asList(\"food\", \"transport\", \"utilities\");","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"    private final ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"    private final ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"    private final String type;","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"    private final String category;","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"    private final String description;","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"    private final Ui ui;","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"    private boolean isSearchByMonth \u003d false;","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"    static {","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"            File dir \u003d new File(\"logs\");","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"                if(!dir.mkdirs()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"                    throw new KaChinnnngException(\"Failed to create directory \" + dir.getAbsolutePath());","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"            FileHandler fh \u003d new FileHandler(\"logs/FindCommand.log\", true);","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"            SimpleFormatter formatter \u003d new SimpleFormatter();","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"            fh.setFormatter(formatter);","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"            LOGGER.addHandler(fh);","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"            LOGGER.setLevel(Level.ALL);","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"            LOGGER.setUseParentHandlers(false);","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"        } catch (SecurityException se) {","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", se);","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"            System.err.println(\"Insufficient permissions to create logs directory. Please check your permissions or \" +","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"                    \"run the program in a different directory.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", e);","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"     * Constructs a new FindCommand with the given criteria.","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"     * @param incomes      The list of incomes to search from.","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"     * @param expenses     The list of expenses to search from.","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"     * @param type         The type of financial record to search for (either \"income\" or \"expense\").","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"     * @param category     The category to filter the results by.","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"     * @param description  The description to filter the results by.","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"     * @param dateString   The date (or month) to filter the results by. Expected format: dd/MMM/yyyy.","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"     * @param ui           The UI component to display results.","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException If an invalid type is provided or if there\u0027s an error parsing the date.","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"    public FindCommand(ArrayList\u003cIncome\u003e incomes, ArrayList\u003cExpense\u003e expenses, String type,","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"                       String category, String description, String dateString, Ui ui) throws KaChinnnngException {","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"        if (type \u003d\u003d null || !type.equalsIgnoreCase(\"income\") \u0026\u0026","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"                !type.equalsIgnoreCase(\"expense\")) {","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Invalid type. Please use \u0027income\u0027 or \u0027expense\u0027.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"        if (\"expense\".equalsIgnoreCase(type) \u0026\u0026 category !\u003d null \u0026\u0026","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"                !VALID_EXPENSE_CAT.contains(category.toLowerCase())) {","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Invalid expense category provided! Allowed categories are: \"","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"                    + VALID_EXPENSE_CAT);","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"        this.incomes \u003d incomes;","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"        this.expenses \u003d expenses;","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"        this.category \u003d category;","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"        this.date \u003d parseDate(dateString);  // Convert date string to LocalDate","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"        LOGGER.log(Level.INFO, String.format(\"FindCommand initialised with type: %s\", type));","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"     * Executes the find command. Searches through the provided list of incomes or expenses and displays","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"     * matching results based on the given criteria.","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException If there\u0027s an error during execution, such as an invalid type.","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"    public void execute() throws KaChinnnngException {","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"bljhty"},"content":"        LOGGER.info(\"Executing FindCommand\");","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"bljhty"},"content":"        assert incomes !\u003d null : \"incomes should not be null\";","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"        assert expenses !\u003d null : \"expenses should not be null\";","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"bljhty"},"content":"        ArrayList\u003cExpense\u003e matchingExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"bljhty"},"content":"        ArrayList\u003cIncome\u003e matchingIncomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"bljhty"},"content":"        if (\"expense\".equalsIgnoreCase(type)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"bljhty"},"content":"            for (Expense e : expenses) {","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"bljhty"},"content":"                if (matchesCriteria(e)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"bljhty"},"content":"                    matchingExpenses.add(e);","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.INFO, String.format(\"Found %d matching expenses\", matchingExpenses.size()));","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"bljhty"},"content":"            if (matchingExpenses.isEmpty()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":129,"author":{"gitId":"bljhty"},"content":"                Ui.showLineDivider();","lastModifiedDate":"2023-10-29"},{"lineNumber":130,"author":{"gitId":"bljhty"},"content":"                ui.printMessage(\"No matching expenses found.\");","lastModifiedDate":"2023-10-29"},{"lineNumber":131,"author":{"gitId":"bljhty"},"content":"            } else {","lastModifiedDate":"2023-10-29"},{"lineNumber":132,"author":{"gitId":"bljhty"},"content":"                ui.showMatchingExpenses(matchingExpenses);","lastModifiedDate":"2023-10-29"},{"lineNumber":133,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"        } else if (\"income\".equalsIgnoreCase(type)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"bljhty"},"content":"            for (Income i : incomes) {","lastModifiedDate":"2023-10-23"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"                if (matchesCriteria(i)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":137,"author":{"gitId":"bljhty"},"content":"                    matchingIncomes.add(i);","lastModifiedDate":"2023-10-23"},{"lineNumber":138,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":139,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.INFO,String.format(\"Found %d matching incomes\", matchingIncomes.size()));","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"bljhty"},"content":"            if (matchingIncomes.isEmpty()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":142,"author":{"gitId":"bljhty"},"content":"                Ui.showLineDivider();","lastModifiedDate":"2023-10-29"},{"lineNumber":143,"author":{"gitId":"bljhty"},"content":"                ui.printMessage(\"No matching incomes found.\");","lastModifiedDate":"2023-10-29"},{"lineNumber":144,"author":{"gitId":"bljhty"},"content":"            } else {","lastModifiedDate":"2023-10-29"},{"lineNumber":145,"author":{"gitId":"bljhty"},"content":"                ui.showMatchingIncomes(matchingIncomes);","lastModifiedDate":"2023-10-29"},{"lineNumber":146,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":147,"author":{"gitId":"bljhty"},"content":"        } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.WARNING, \"Invalid type: \" + type);","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":152,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"bljhty"},"content":"     * Determines if a given date matches the criteria specified in the command.","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"bljhty"},"content":"     * @param dateToCheck  The date to be checked.","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"bljhty"},"content":"     * @return True if the date matches the criteria, false otherwise.","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"bljhty"},"content":"    private boolean matchesDate(LocalDate dateToCheck) {","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"bljhty"},"content":"        if (this.date !\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":160,"author":{"gitId":"bljhty"},"content":"            if (isSearchByMonth) {","lastModifiedDate":"2023-10-23"},{"lineNumber":161,"author":{"gitId":"bljhty"},"content":"                return dateToCheck.getMonthValue() \u003d\u003d this.date.getMonthValue()","lastModifiedDate":"2023-10-29"},{"lineNumber":162,"author":{"gitId":"bljhty"},"content":"                        \u0026\u0026 dateToCheck.getYear() \u003d\u003d this.date.getYear();","lastModifiedDate":"2023-10-29"},{"lineNumber":163,"author":{"gitId":"bljhty"},"content":"            } else {","lastModifiedDate":"2023-10-23"},{"lineNumber":164,"author":{"gitId":"bljhty"},"content":"                return dateToCheck.isEqual(this.date);","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"bljhty"},"content":"        return true; // If this.date is null, then any date matches the criteria","lastModifiedDate":"2023-10-24"},{"lineNumber":168,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":170,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"bljhty"},"content":"     * Determines if a given category matches the criteria specified in the command.","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"bljhty"},"content":"     * @param categoryToCheck The category to be checked.","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"bljhty"},"content":"     * @return True if the category matches the criteria, false otherwise.","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"bljhty"},"content":"    private boolean matchesCategory(String categoryToCheck) {","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"bljhty"},"content":"        return this.category \u003d\u003d null || (categoryToCheck !\u003d null \u0026\u0026 categoryToCheck.equalsIgnoreCase(this.category));","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":179,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"bljhty"},"content":"     * Determines if a given description matches the criteria specified in the command.","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"bljhty"},"content":"     * The description matches if it contains all the keywords specified in the command.","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"bljhty"},"content":"     * If no description is specified in the command, then any description matches the criteria.","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"bljhty"},"content":"     * @param descriptionToCheck The description to be checked.","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"bljhty"},"content":"     * @return True if the description matches the criteria, false otherwise.","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"bljhty"},"content":"    private boolean matchesDescription(String descriptionToCheck) {","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"bljhty"},"content":"        if (this.description !\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":190,"author":{"gitId":"bljhty"},"content":"            String[] keywords \u003d this.description.split(\"\\\\s+\");","lastModifiedDate":"2023-10-23"},{"lineNumber":191,"author":{"gitId":"bljhty"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"bljhty"},"content":"                if (!descriptionToCheck.toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2023-10-24"},{"lineNumber":193,"author":{"gitId":"bljhty"},"content":"                    return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":194,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":195,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":196,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"bljhty"},"content":"        return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":198,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":199,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":200,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"bljhty"},"content":"     * Determines if a given expense matches the criteria specified in the command.","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"bljhty"},"content":"     * @param e The expense to be checked.","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"bljhty"},"content":"     * @return True if the expense matches the criteria, false otherwise.","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"bljhty"},"content":"    private boolean matchesCriteria(Expense e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":207,"author":{"gitId":"bljhty"},"content":"        return matchesDate(e.getDate()) \u0026\u0026","lastModifiedDate":"2023-10-29"},{"lineNumber":208,"author":{"gitId":"bljhty"},"content":"                matchesCategory(e.getCategory()) \u0026\u0026","lastModifiedDate":"2023-10-29"},{"lineNumber":209,"author":{"gitId":"bljhty"},"content":"                matchesDescription(e.getDescription()) \u0026\u0026","lastModifiedDate":"2023-10-29"},{"lineNumber":210,"author":{"gitId":"bljhty"},"content":"                e.getAmount() !\u003d 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":211,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":212,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":213,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"bljhty"},"content":"     * Determines if a given income matches the criteria specified in the command.","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"bljhty"},"content":"     * @param i The income to be checked.","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"bljhty"},"content":"     * @return True if the income matches the criteria, false otherwise.","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"bljhty"},"content":"    private boolean matchesCriteria(Income i) {","lastModifiedDate":"2023-10-24"},{"lineNumber":220,"author":{"gitId":"bljhty"},"content":"        return matchesDate(i.getDate()) \u0026\u0026","lastModifiedDate":"2023-10-29"},{"lineNumber":221,"author":{"gitId":"bljhty"},"content":"                matchesCategory(i.getCategory()) \u0026\u0026","lastModifiedDate":"2023-10-29"},{"lineNumber":222,"author":{"gitId":"bljhty"},"content":"                matchesDescription(i.getDescription()) \u0026\u0026","lastModifiedDate":"2023-10-29"},{"lineNumber":223,"author":{"gitId":"bljhty"},"content":"                i.getAmount() !\u003d 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":224,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":225,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":226,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":227,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"bljhty"},"content":"     * Converts a date string into a LocalDate object. Supports full date strings and month names.","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"bljhty"},"content":"     * @param dateString Date as a string in the format dd/MMM/yyyy or as a month name.","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"bljhty"},"content":"     * @return LocalDate representation of the provided dateString.","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException If the date string is in an invalid format.","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"bljhty"},"content":"    private LocalDate parseDate(String dateString) throws KaChinnnngException {","lastModifiedDate":"2023-10-23"},{"lineNumber":235,"author":{"gitId":"bljhty"},"content":"        if (dateString \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":236,"author":{"gitId":"bljhty"},"content":"            return null;","lastModifiedDate":"2023-10-23"},{"lineNumber":237,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":238,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":239,"author":{"gitId":"bljhty"},"content":"        DateTimeFormatter formatterDayMMM \u003d DateTimeFormatter.ofPattern(\"dd/MMM/yyyy\");","lastModifiedDate":"2023-10-29"},{"lineNumber":240,"author":{"gitId":"bljhty"},"content":"        DateTimeFormatter formatterDayMM \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-10-29"},{"lineNumber":241,"author":{"gitId":"bljhty"},"content":"        DateTimeFormatter formatterMonthMM \u003d DateTimeFormatter.ofPattern(\"MM/yyyy\");","lastModifiedDate":"2023-10-29"},{"lineNumber":242,"author":{"gitId":"bljhty"},"content":"        DateTimeFormatter formatterMonthMMM \u003d DateTimeFormatter.ofPattern(\"MMM/yyyy\");","lastModifiedDate":"2023-10-29"},{"lineNumber":243,"author":{"gitId":"bljhty"},"content":"        LocalDate parsedDate \u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":244,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":245,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-23"},{"lineNumber":246,"author":{"gitId":"bljhty"},"content":"            parsedDate \u003d LocalDate.parse(dateString, formatterDayMMM);","lastModifiedDate":"2023-10-29"},{"lineNumber":247,"author":{"gitId":"bljhty"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2023-10-29"},{"lineNumber":248,"author":{"gitId":"bljhty"},"content":"            try {","lastModifiedDate":"2023-10-29"},{"lineNumber":249,"author":{"gitId":"bljhty"},"content":"                parsedDate \u003d LocalDate.parse(dateString, formatterDayMM);","lastModifiedDate":"2023-10-29"},{"lineNumber":250,"author":{"gitId":"bljhty"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2023-10-29"},{"lineNumber":251,"author":{"gitId":"bljhty"},"content":"                try {","lastModifiedDate":"2023-10-29"},{"lineNumber":252,"author":{"gitId":"bljhty"},"content":"                    parsedDate \u003d YearMonth.parse(dateString, formatterMonthMM).atDay(1);","lastModifiedDate":"2023-10-29"},{"lineNumber":253,"author":{"gitId":"bljhty"},"content":"                    isSearchByMonth \u003d true;","lastModifiedDate":"2023-10-23"},{"lineNumber":254,"author":{"gitId":"bljhty"},"content":"                } catch (DateTimeParseException e3) {","lastModifiedDate":"2023-10-29"},{"lineNumber":255,"author":{"gitId":"bljhty"},"content":"                    try {","lastModifiedDate":"2023-10-29"},{"lineNumber":256,"author":{"gitId":"bljhty"},"content":"                        parsedDate \u003d YearMonth.parse(dateString, formatterMonthMMM).atDay(1);","lastModifiedDate":"2023-10-29"},{"lineNumber":257,"author":{"gitId":"bljhty"},"content":"                        isSearchByMonth \u003d true;","lastModifiedDate":"2023-10-29"},{"lineNumber":258,"author":{"gitId":"bljhty"},"content":"                    } catch (DateTimeParseException e4) {","lastModifiedDate":"2023-10-29"},{"lineNumber":259,"author":{"gitId":"bljhty"},"content":"                        LOGGER.log(Level.WARNING, \"Failed to parse date \" + dateString, e4);","lastModifiedDate":"2023-10-29"},{"lineNumber":260,"author":{"gitId":"bljhty"},"content":"                        throw new KaChinnnngException(\"Invalid date format. \" +","lastModifiedDate":"2023-10-29"},{"lineNumber":261,"author":{"gitId":"bljhty"},"content":"                                \"Please use formats like 20/Oct/2023, 20/10/2023, 10/2023, or Oct/2023.\");","lastModifiedDate":"2023-10-29"},{"lineNumber":262,"author":{"gitId":"bljhty"},"content":"                    }","lastModifiedDate":"2023-10-23"},{"lineNumber":263,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":264,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":265,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":266,"author":{"gitId":"bljhty"},"content":"        return parsedDate;","lastModifiedDate":"2023-10-29"},{"lineNumber":267,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":268,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"limyuhching":1,"bljhty":267}},{"path":"src/main/java/seedu/duke/commands/IncomeLister.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import java.io.File;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":" * Represents the command that when executed, lists all incomes.","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":" * This class is a child class of the Command class.","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":" *","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"public class IncomeLister extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(IncomeLister.class.getName());","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"    private final ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    private final Ui ui;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"    static {","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"            File dir \u003d new File(\"logs\");","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"                if (!dir.mkdirs()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"                    throw new KaChinnnngException(\"Failed to create directory \" + dir.getAbsolutePath());","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"            FileHandler fh \u003d new FileHandler(\"logs/IncomeLister.log\", true);","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"            SimpleFormatter formatter \u003d new SimpleFormatter();","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"            fh.setFormatter(formatter);","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"            LOGGER.addHandler(fh);","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"            LOGGER.setLevel(Level.ALL);","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"            LOGGER.setUseParentHandlers(false);","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"        } catch (SecurityException se) {","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", se);","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"            System.err.println(\"Insufficient permissions to create logs directory. Please check your permissions or \" +","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"                    \"run the program in a different directory.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", e);","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"     * Constructor for IncomeLister.","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"     * @param incomes ArrayList of incomes","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"     * @param ui      Instance of Ui","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"    public IncomeLister(ArrayList\u003cIncome\u003e incomes, Ui ui) {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"        assert incomes !\u003d null : \"incomes should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"        this.incomes \u003d incomes;","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"        LOGGER.log(Level.INFO, (\"Initialised IncomeLister\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"     * This method is used to execute the command.","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"    public void execute() {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"        listIncomes();","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"     * This method lists all incomes.","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"    // Updated method name to follow Java naming conventions","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"    public void listIncomes() {","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"        if (incomes.isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"            ui.printMessage(\"You have no recorded incomes.\");","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"            Ui.showLineDivider();","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"            return;","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"        Ui.showLineDivider();","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"        ui.printMessage(\"Here are your incomes:\");","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"        for (int i \u003d 0; i \u003c incomes.size(); i++) {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"            ui.printMessage((i + 1) + \". \" + incomes.get(i).toString());","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"        Ui.showLineDivider();","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"        LOGGER.log(Level.INFO, (\"Incomes listed successfully\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"limyuhching":1,"bljhty":90}},{"path":"src/main/java/seedu/duke/commands/IncomeManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import seedu.duke.parser.IncomeParser;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"import java.io.File;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":" * Represents the class that manages the creation of a new income.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":" * This class serves as a blueprint for all specific income creation classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":" *","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"public class IncomeManager extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"    // Logger instance to log events and issues that occur during the execution of this class.","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(IncomeManager.class.getName());","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"    private final String details;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    private Income newIncome;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"    static{","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"            File dir \u003d new File(\"logs\");","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"                if (!dir.mkdirs()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"                    throw new KaChinnnngException(\"Failed to create directory \" + dir.getAbsolutePath());","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"            FileHandler fh \u003d new FileHandler(\"logs/IncomeManager.log\", true);","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"            SimpleFormatter formatter \u003d new SimpleFormatter();","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"            fh.setFormatter(formatter);","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"            LOGGER.addHandler(fh);","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"            LOGGER.setLevel(Level.ALL);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"            LOGGER.setUseParentHandlers(false);","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"        }catch (SecurityException se) {","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", se);","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"            System.err.println(\"Insufficient permissions to create logs directory. Please check your permissions or \" +","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"                    \"run the program in a different directory.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", e);","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"    public IncomeManager(String details) {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"        assert details !\u003d null : \"details should not be null\"; // Ensure that details is not null","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"     * This method is used to execute the command.","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"    public void execute() throws KaChinnnngException {","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e incomeFields \u003d extractIncomeFields(details);","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"        newIncome \u003d IncomeParser.parseIncome(incomeFields);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"        LOGGER.log(Level.INFO, \"successful parsing of income\"); // logging successful parsing of income","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"     * This method returns the new income created.","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"     * @return newIncome","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"    public Income getNewIncome() {","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"        return newIncome;","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"     * This method extracts the fields of the income.","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"     * @param details String containing the details of the income","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"     * @return incomeFields HashMap containing the fields of the income","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"    private HashMap\u003cString, String\u003e extractIncomeFields(String details) throws KaChinnnngException {","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"        assert details !\u003d null : \"details should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e incomeFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"        // Split the details string based on the field keywords","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"        String[] parts \u003d details.split(\"/de |/date |/amt \");","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"        // Check if all fields are present in the string","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"        if (parts.length !\u003d 4) {","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.WARNING, \"Missing or out-of-order fields detected in income details: \" + details);","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Expected fields `/de`, `/date`, and \" +","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"                    \"`/amt` are missing or improperly formatted.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"        // Populate the HashMap with extracted fields","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DESCRIPTION_FIELD, parts[1].trim());","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DATE_FIELD, parts[2].trim());","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.AMOUNT_FIELD, parts[3].trim());","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"        return incomeFields;","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"limyuhching":1,"bljhty":102}},{"path":"src/main/java/seedu/duke/commands/KaChinnnngException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":" * Represents the exception thrown when there is an error in the command.","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"public class KaChinnnngException extends Exception{","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"    public KaChinnnngException(String message) {","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"        super(message);","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"bljhty":10}},{"path":"src/main/java/seedu/duke/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":" * The `ListCommand` class is responsible for displaying a list of income and expense records,","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":" * along with the total income, total expenses, and the total balance.","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":" * It extends the `Commands` class and is used to provide a summary of financial records to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"    private ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"    private ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"    private Ui ui;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"    private double totalIncome;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"    private double totalExpenses;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"     * Constructs a `ListCommand` object with the specified income and expense lists and a user interface.","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"     * @param incomes   The list of income records to be displayed.","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"     * @param expenses  The list of expense records to be displayed.","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"     * @param ui        The user interface for displaying messages and financial records.","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"    public ListCommand(ArrayList\u003cIncome\u003e incomes, ArrayList\u003cExpense\u003e expenses, Ui ui) {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"        this.incomes \u003d incomes;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"        this.expenses \u003d expenses;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"        totalIncome \u003d 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"        totalExpenses \u003d 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"     * Executes the `ListCommand` to display a summary of income and expense records,","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"     * along with the total balance.","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"    public void execute() {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"        if (incomes.isEmpty() \u0026\u0026 expenses.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"You do not have any records.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"            return;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"        // Print incomes","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"        if (incomes.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"You have no recorded incomes.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"Here are your incomes:\");","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"            for (int i \u003d 0; i \u003c incomes.size(); i++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"                System.out.println((i + 1) + \". \" + incomes.get(i).toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"                totalIncome +\u003d incomes.get(i).getAmount();","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"            System.out.printf(\"Total income is: $%.2f.\\n\", totalIncome);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"limyuhching"},"content":"        System.out.println();","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"limyuhching"},"content":"        // Print expenses","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"limyuhching"},"content":"        if (expenses.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"You have no recorded expenses.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"limyuhching"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"Here are your expenses:\");","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"limyuhching"},"content":"            for (int i \u003d 0; i \u003c expenses.size(); i++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"limyuhching"},"content":"                System.out.println((i + 1) + \". \" + expenses.get(i).toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"limyuhching"},"content":"                totalExpenses +\u003d expenses.get(i).getAmount();","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"limyuhching"},"content":"            System.out.printf(\"Total expenses is: $%.2f.\\n\", totalExpenses);","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"limyuhching"},"content":"        System.out.printf(\"\\nTotal balance is: $%.2f.\\n\", totalIncome - totalExpenses);","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"limyuhching":73}},{"path":"src/main/java/seedu/duke/commands/UpdateExchangeRateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.ExchangeRateManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.storage.ExchangeRateFileHandler;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"import java.io.File;","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"public class UpdateExchangeRateCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"    // Logger instance to log events and issues that occur during the execution of this class.","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(IncomeManager.class.getName());","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"    static{","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"            File dir \u003d new File(\"logs\");","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"                if (!dir.mkdirs()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"                    throw new KaChinnnngException(\"Failed to create directory \" + dir.getAbsolutePath());","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"                }","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"            FileHandler fh \u003d new FileHandler(\"logs/UpdateExchangeRateCommand.log\", true);","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"            SimpleFormatter formatter \u003d new SimpleFormatter();","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"            fh.setFormatter(formatter);","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"            LOGGER.addHandler(fh);","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"            LOGGER.setLevel(Level.ALL);","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"            LOGGER.setUseParentHandlers(false);","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", e);","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"    private static final String EXPECTED_FORMAT \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"            \"update exchange rate \u003csupported_currency\u003e \u003crate\u003e\";","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"    private static final String INVALID_RATE_ERROR","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"            \u003d \"Invalid \u003crate\u003e: \u003crate\u003e must be a positive decimal between 0.001 and 3,000,000\";","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"    ExchangeRateFileHandler exchangeRateFileHandler;","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"    Ui ui;","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"    String currency;","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"    double rate;","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"limyuhching"},"content":"    public UpdateExchangeRateCommand(String fullCommand,","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"                                     ExchangeRateFileHandler exchangeRateFileHandler,","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"                                     Ui ui)","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"            throws KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"            this.exchangeRateFileHandler \u003d exchangeRateFileHandler;","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"            this.ui \u003d ui;","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"            String[] args \u003d parse(fullCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"            currency \u003d args[0].trim().toUpperCase();","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"            LOGGER.log(Level.INFO, \"successful parsing of currency\"); // logging successful parsing of currency","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"            rate \u003d Double.parseDouble(args[1]);","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"            LOGGER.log(Level.INFO, \"successful parsing of rate\"); // logging successful parsing of rate","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"limyuhching"},"content":"        } catch (NumberFormatException | NullPointerException e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(INVALID_RATE_ERROR);","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"limyuhching"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"limyuhching"},"content":"    public void execute() throws KaChinnnngException {","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"limyuhching"},"content":"        ExchangeRateManager exchangeRateManager \u003d ExchangeRateManager.getInstance();","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"limyuhching"},"content":"        exchangeRateManager.updateExchangeRate(currency, rate);","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"limyuhching"},"content":"        LOGGER.log(Level.INFO, \"Successful update of currency rate\");","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"limyuhching"},"content":"        ui.showUpdateExchangeRateMessage(currency, rate);","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"limyuhching"},"content":"        exchangeRateFileHandler.save(exchangeRateManager.getExchangeRates());","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"limyuhching"},"content":"    private static String[] parse(String fullCommand) throws KaChinnnngException {","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"limyuhching"},"content":"        String[] args \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"limyuhching"},"content":"        if (args.length !\u003d 5) {","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"limyuhching"},"content":"            LOGGER.log(Level.WARNING, \"Missing or out-of-place argument(s) detected in user input: \"","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"limyuhching"},"content":"                    + fullCommand);","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"Invalid command: missing argument(s).\\nExpected: \"+EXPECTED_FORMAT);","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"limyuhching"},"content":"        return Arrays.copyOfRange(args,3, 5);","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"limyuhching":82}},{"path":"src/main/java/seedu/duke/commands/UsageInstructions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"/**","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":" * The `UsageInstructions` class provides usage instructions for the application,","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":" */","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"public class UsageInstructions {","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":"     * Initializes a new instance of the `UsageInstructions` class.","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"    public UsageInstructions() {","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"     * Displays usage instructions and a link to the user guide.","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    public void getHelp() {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"You can access our user guide by \" +","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"                \"https://ay2324s1-cs2113-t18-3.github.io/tp/UserGuide.html\\n\");","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Available functions for KaChinnnngggg:\");","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Adding an entry: add\");","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Listing all entries: list\");","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Deleting an entry: delete\");","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Edit an entry: edit\");","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Check balance: balance\");","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Update exchange rate: update exchange rate\");","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Finding an entry: find\");","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Clearing all entries: clear\");","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Exit the program: exit\");","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"All the date input is in the format dd/MM/yyyy\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"If you need assistance with individual commands, use the help function\");","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Format: help \u003ccommand\u003e\");","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"KenCheung18"},"content":"     * Displays usage instructions for the \u0027add\u0027 command.","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"KenCheung18"},"content":"    public void getHelpAddFunction() {","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Creates a new entry for income or expenses in the program.\");","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Values of income and expense added have to be lower than 1000000.\");","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Income and Expense values take up to 2 decimal places.\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Format:\");","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"add income /de \u003cdescription\u003e /date \u003cdate\u003e /amt [currency] \u003camount\u003e\");","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"add expense /cat \u003ccategory\u003e /type \u003ctype\u003e /de \u003cdescription\u003e /date \u003cdate\u003e /amt \u003camount\u003e\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"There are only 3 categories for expenses: Food, Transport, Utilities.\");","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"There are 3 types associated with Food category: Breakfast, Lunch, Dinner, \" +","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"KenCheung18"},"content":"                \"else it will default to OTHER.\");","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"There are 4 types associated with Transport category: Bus, Train, Taxi, Fuel, \" +","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"KenCheung18"},"content":"                \"else it will default to OTHER.\");","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"There are 3 types associated with Food category: Breakfast, Lunch, Dinner, \" +","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"KenCheung18"},"content":"                \"else it will default to OTHER.\");","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"KenCheung18"},"content":"     * Displays usage instructions for the \u0027list\u0027 command.","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"KenCheung18"},"content":"    public void getHelpListFunction() {","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Shows a full list of both the expenses and income created by the user.\");","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"User can choose to view the list of income/expenses separately as well.\");","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Show the foreign currencies supported by KaChinnnngggg.\");","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"List all updated exchange rates.\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Format:\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"KenCheung18"},"content":"                \"list\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"KenCheung18"},"content":"                \"list incomes\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"KenCheung18"},"content":"                \"list expenses\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"KenCheung18"},"content":"                \"list currencies\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"KenCheung18"},"content":"                \"list exchange rates\");","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":70,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"KenCheung18"},"content":"     * Displays usage instructions for the \u0027delete\u0027 command.","lastModifiedDate":"2023-11-07"},{"lineNumber":72,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":73,"author":{"gitId":"KenCheung18"},"content":"    public void getHelpDeleteFunction() {","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Deletes an entry from the list of income/expenses.\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":75,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Format:\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":76,"author":{"gitId":"KenCheung18"},"content":"                \"delete income \u003cindex_pos\u003e\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":77,"author":{"gitId":"KenCheung18"},"content":"                \"delete expense \u003cindex_pos\u003e\");","lastModifiedDate":"2023-11-07"},{"lineNumber":78,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":79,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":80,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":81,"author":{"gitId":"KenCheung18"},"content":"     * Displays usage instructions for the \u0027edit\u0027 command.","lastModifiedDate":"2023-11-07"},{"lineNumber":82,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":83,"author":{"gitId":"KenCheung18"},"content":"    public void getHelpEditFunction() {","lastModifiedDate":"2023-11-07"},{"lineNumber":84,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Edit an entry from the list of income/expenses.\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":85,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Format:\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":86,"author":{"gitId":"KenCheung18"},"content":"                \"edit income \u003cindex\u003e /de \u003cdescription\u003e /date \u003cdate\u003e /amt [currency] \u003camount\u003e\\n\" +","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"KenCheung18"},"content":"                \"edit expense \u003cindex\u003e /cat \u003ccategory\u003e /type \u003ctype\u003e \" +","lastModifiedDate":"2023-11-07"},{"lineNumber":88,"author":{"gitId":"KenCheung18"},"content":"                \"/de \u003cdescription\u003e /date \u003cdate\u003e /amt [currency] \u003camount\u003e\");","lastModifiedDate":"2023-11-07"},{"lineNumber":89,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":90,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":91,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":92,"author":{"gitId":"KenCheung18"},"content":"     * Displays usage instructions for the \u0027balance\u0027 command.","lastModifiedDate":"2023-11-07"},{"lineNumber":93,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":94,"author":{"gitId":"KenCheung18"},"content":"    public void getHelpBalanceFunction() {","lastModifiedDate":"2023-11-07"},{"lineNumber":95,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Check the balance for current financial records\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":96,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Format: balance\");","lastModifiedDate":"2023-11-07"},{"lineNumber":97,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":98,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":99,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":100,"author":{"gitId":"KenCheung18"},"content":"     * Displays usage instructions for the \u0027update exchange rate\u0027 command.","lastModifiedDate":"2023-11-07"},{"lineNumber":101,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":102,"author":{"gitId":"KenCheung18"},"content":"    public void getHelpUpdateExchangeRateFunction() {","lastModifiedDate":"2023-11-07"},{"lineNumber":103,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Update exchange rate of a specific foreign currency.\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":104,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Format: update exchange rate \u003csupported_currency\u003e \u003crate\u003e\");","lastModifiedDate":"2023-11-07"},{"lineNumber":105,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":106,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":108,"author":{"gitId":"KenCheung18"},"content":"     * Displays usage instructions for the \u0027find\u0027 command.","lastModifiedDate":"2023-11-07"},{"lineNumber":109,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":110,"author":{"gitId":"KenCheung18"},"content":"    public void getHelpFindFunction() {","lastModifiedDate":"2023-11-07"},{"lineNumber":111,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Find an entry from the existing list of income/expenses.\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":112,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Format:\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":113,"author":{"gitId":"bljhty"},"content":"                \"find /t income /de [description] /date [date]\\n\" +","lastModifiedDate":"2023-11-05"},{"lineNumber":114,"author":{"gitId":"KenCheung18"},"content":"                \"find /t expense /cat [category] /de [description] /date [date]\");","lastModifiedDate":"2023-11-07"},{"lineNumber":115,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":116,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":117,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":118,"author":{"gitId":"KenCheung18"},"content":"     * Displays usage instructions for the \u0027clear\u0027 command.","lastModifiedDate":"2023-11-07"},{"lineNumber":119,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":120,"author":{"gitId":"KenCheung18"},"content":"    public void getHelpClearFunction() {","lastModifiedDate":"2023-11-07"},{"lineNumber":121,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Clearing all entries from the list of income/expenses.\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":122,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Format:\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":123,"author":{"gitId":"KenCheung18"},"content":"                \"clear incomes/expenses\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":124,"author":{"gitId":"KenCheung18"},"content":"                \"clear all\");","lastModifiedDate":"2023-11-07"},{"lineNumber":125,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":126,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":128,"author":{"gitId":"KenCheung18"},"content":"     * Displays usage instructions for the \u0027exit\u0027 command.","lastModifiedDate":"2023-11-07"},{"lineNumber":129,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":130,"author":{"gitId":"KenCheung18"},"content":"    public void getHelpExitFunction() {","lastModifiedDate":"2023-11-07"},{"lineNumber":131,"author":{"gitId":"KenCheung18"},"content":"        System.out.println(\"Format: exit\");","lastModifiedDate":"2023-11-07"},{"lineNumber":132,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"bljhty":10,"KenCheung18":123}},{"path":"src/main/java/seedu/duke/financialrecords/ExchangeRateManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"package seedu.duke.financialrecords;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":" * The `ExchangeRateManager` class is responsible for managing exchange rates between the Singapore Dollar (SGD) and","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":" * various foreign currencies.","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":" * It provides functionality to update, retrieve, and save exchange rates, as well as convert currencies.","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":" * The class uses a singleton pattern to ensure a single instance of `ExchangeRateManager` throughout the application.","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":" * Exchange rates are stored in a `HashMap`, and the data is read from and saved to a text file.","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"public class ExchangeRateManager {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"    private static ExchangeRateManager exchangeRateManager \u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"    private static final List\u003cString\u003e SUPPORTED_CURRENCIES \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"            Arrays.asList(","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"                    \"MYR\", \"USD\", \"JPY\", \"KRW\", \"EUR\", \"THB\", \"HKD\", \"INR\", \"IDR\",","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"                    \"AUD\", \"GBP\", \"CNY\", \"CAD\", \"TWD\", \"VND\", \"PHP\"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"            );","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"    private static final String CURRENCY_NOT_SUPPORTED_ERROR","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"            \u003d \"Invalid \u003ccurrency\u003e: This currency is not supported.\\n\" +","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"            \"To see the supported currencies, you can use \\\"list currencies\\\"\";","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"    private static final String INVALID_RATE_ERROR","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"            \u003d \"Invalid \u003crate\u003e: \u003crate\u003e must be a positive decimal between 0.001 and 3,000,000\";","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"    private HashMap\u003cString, Double\u003e exchangeRates;","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"    private ExchangeRateManager() {","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"        exchangeRates \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"    public HashMap\u003cString, Double\u003e getExchangeRates() {","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"        return exchangeRates;","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"    public static List\u003cString\u003e getSupportedCurrencies() {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"        return SUPPORTED_CURRENCIES;","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"     * Gets the singleton instance of `ExchangeRateManager`.","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"limyuhching"},"content":"     * @return The singleton instance of `ExchangeRateManager`.","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"    public static ExchangeRateManager getInstance() {","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"        if (exchangeRateManager \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"            exchangeRateManager \u003d new ExchangeRateManager();","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"        return exchangeRateManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"    public double getExchangeRate(String currency) throws KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"        currency \u003d currency.toUpperCase();","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"        if (!SUPPORTED_CURRENCIES.contains(currency)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"This currency is not supported\");","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"limyuhching"},"content":"        return exchangeRates.get(currency);","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"limyuhching"},"content":"    public void clear() {","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"limyuhching"},"content":"        exchangeRates \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"limyuhching"},"content":"     * Displays the list of supported currencies.","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"limyuhching"},"content":"    public void showSupportedCurrencies() {","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"limyuhching"},"content":"        Ui.showLineDivider();","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"limyuhching"},"content":"        System.out.println(\"These are the supported currencies:\");","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"limyuhching"},"content":"        for (String currency : SUPPORTED_CURRENCIES) {","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"limyuhching"},"content":"            System.out.print(currency + \" \");","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"limyuhching"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"limyuhching"},"content":"        Ui.showLineDivider();","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"limyuhching"},"content":"     * Displays the exchange rates for supported currencies.","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"limyuhching"},"content":"    public void showExchangeRates() {","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"limyuhching"},"content":"        Ui.showLineDivider();","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"limyuhching"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"limyuhching"},"content":"        for (Map.Entry\u003cString, Double\u003e entry : exchangeRates.entrySet()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"limyuhching"},"content":"            String currency \u003d entry.getKey();","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"limyuhching"},"content":"            Double rate \u003d entry.getValue();","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"limyuhching"},"content":"            if (rate !\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"limyuhching"},"content":"                if (count \u003d\u003d 0) {","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"limyuhching"},"content":"                    System.out.println(\"Here are the exchange rate(s):\");","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"limyuhching"},"content":"                }","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"limyuhching"},"content":"                System.out.printf(\"%s, %s\\n\", currency, rate);","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"limyuhching"},"content":"                count +\u003d 1;","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"limyuhching"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"limyuhching"},"content":"            System.out.println(\"No exchange rate has been updated\");","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"limyuhching"},"content":"        Ui.showLineDivider();","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"limyuhching"},"content":"     * Displays a message about currency conversion for a specific currency.","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"limyuhching"},"content":"     * @param currency The currency to convert.","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"limyuhching"},"content":"    public void showCurrencyConversionMessage(String currency) {","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"KenCheung18"},"content":"        Ui.showLineDivider();","lastModifiedDate":"2023-11-07"},{"lineNumber":111,"author":{"gitId":"limyuhching"},"content":"        currency \u003d currency.toUpperCase();","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"limyuhching"},"content":"        System.out.printf(\"We have converted %s to SGD at the SGD/%s rate of %s\\n\",","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"limyuhching"},"content":"                currency, currency, exchangeRates.get(currency));","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"limyuhching"},"content":"        Ui.showLineDivider();","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"limyuhching"},"content":"     * Converts an amount from a foreign currency to SGD using the specified currency\u0027s exchange rate.","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"limyuhching"},"content":"     * @param currency The currency to convert from.","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"limyuhching"},"content":"     * @param amount   The amount to convert.","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"limyuhching"},"content":"     * @return The converted amount in SGD.","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"limyuhching"},"content":"     * @throws KaChinnnngException If the currency is not supported or the exchange rate is not available.","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"limyuhching"},"content":"    public double convertCurrency(String currency, double amount) throws KaChinnnngException {","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"limyuhching"},"content":"        currency \u003d currency.toUpperCase();","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"limyuhching"},"content":"        if (!SUPPORTED_CURRENCIES.contains(currency)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(CURRENCY_NOT_SUPPORTED_ERROR);","lastModifiedDate":"2023-11-06"},{"lineNumber":128,"author":{"gitId":"limyuhching"},"content":"        } else if (exchangeRates.get(currency) \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"Please update the exchange rate for \" + currency);","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"limyuhching"},"content":"        return amount / exchangeRates.get(currency);","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"limyuhching"},"content":"    };","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"limyuhching"},"content":"     * Updates the exchange rate for a specific currency.","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"limyuhching"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"limyuhching"},"content":"     * @param currency The currency to update.","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"limyuhching"},"content":"     * @param rate     The new exchange rate.","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"limyuhching"},"content":"     * @throws KaChinnnngException If the currency is not supported or the rate is invalid.","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"limyuhching"},"content":"    public void updateExchangeRate(String currency, double rate) throws KaChinnnngException {","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"limyuhching"},"content":"        if (!SUPPORTED_CURRENCIES.contains(currency)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(CURRENCY_NOT_SUPPORTED_ERROR);","lastModifiedDate":"2023-11-06"},{"lineNumber":144,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":145,"author":{"gitId":"limyuhching"},"content":"        if (rate \u003e 3000000.00 || rate \u003c 0.001) {","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(INVALID_RATE_ERROR);","lastModifiedDate":"2023-11-06"},{"lineNumber":147,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"limyuhching"},"content":"        exchangeRates.put(currency, rate);","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":151,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"limyuhching":150,"KenCheung18":1}},{"path":"src/main/java/seedu/duke/financialrecords/Expense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":" * Implementation of the Expense class","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":" * Basic expense class inherits from FinancialRecord and does not include any additional attributes","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":" * Attribute \"amount\" contains a negative double which will make it easier to tally up the net total at the end","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.financialrecords;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Hongzhii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Hongzhii"},"content":"public class Expense extends FinancialRecord {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"    protected String category;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"Hongzhii"},"content":"    public Expense(String description, LocalDate date, double amount) throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Hongzhii"},"content":"        super(description, date, amount);","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"    public String getCategory() {","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"        return category;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"Hongzhii"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Hongzhii"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Hongzhii"},"content":"        return \"Expense: \" + getDescription() +","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Hongzhii"},"content":"                \" | Date: \" + getDateString() + \" | Amount: $\" + String.format(\"%.2f\", getAmount());","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"bljhty":7,"Hongzhii":20}},{"path":"src/main/java/seedu/duke/financialrecords/FinancialRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.financialrecords;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":" * Represents the abstract class for all financial records.","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":" * This class serves as a blueprint for all specific financial record classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":" *","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"public abstract class FinancialRecord{","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    // Logger instance to log events and issues that occur during the execution of this class.","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(FinancialRecord.class.getName());","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"    ","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    protected String description;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    protected double amount;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"     * Constructs a new financial record.","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"     * @param description Description of the financial record.","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"     * @param date Date of the financial record.","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"     * @param amount Amount of the financial record.","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there are validation errors.","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"    public FinancialRecord(String description, LocalDate date, double amount) throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"        assert description !\u003d null : \"description should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"        assert date !\u003d null : \"date should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"            LOGGER.warning(\"Description is empty\");","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Description cannot be empty!\");","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"        if (amount \u003c 0) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"            LOGGER.warning(\"Amount is negative\");","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Amount cannot be negative!\");","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"        if (date.isAfter(LocalDate.now())) {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"            LOGGER.warning(\"Date is in the future\");","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Date cannot be in the future!\");","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"     * Returns the category of the financial record.","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"     * @return Category of the financial record.","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"    public String getCategory() {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"        return \"\";","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"     * This method is used to get the description of the financial record.","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"     * @return String containing the description of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"    public String getDescription() {","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"        return description;","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"     * This method is used to get the date of the financial record.","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"     * @return LocalDate containing the date of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"        return date;","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"     * This method is used to get the date of the financial record in a string format.","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"     * @return String containing the date of the financial record in a string format","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"    public String getDateString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MMM/yyyy\");","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"        return date.format(formatter);","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"     * This method is used to get the amount of the financial record.","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"     * @return double containing the amount of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"    public double getAmount() {","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"        return amount;","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"     * Sets the description of the financial record.","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"     * @param description Description of the financial record.","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if description is empty or null.","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"    public void setDescription(String description) throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"        assert description !\u003d null : \"description should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Description cannot be empty!\");","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"bljhty"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"bljhty"},"content":"     * This method is used to set the date of the financial record.","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"bljhty"},"content":"     * @param date LocalDate containing the date of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"bljhty"},"content":"    public void setDate(LocalDate date) throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"bljhty"},"content":"        assert date !\u003d null : \"date should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"bljhty"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"bljhty"},"content":"     * This method is used to set the amount of the financial record.","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"bljhty"},"content":"     * @param amount double containing the amount of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"bljhty"},"content":"    public void setAmount(double amount) throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"        assert amount \u003e\u003d 0 : \"amount should not be negative\";","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"bljhty"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"bljhty"},"content":"     * Provides a string representation of the financial record.","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"bljhty"},"content":"     * @return String representation of the financial record.","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"bljhty"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"bljhty"},"content":"        return \"\";","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"bljhty":148}},{"path":"src/main/java/seedu/duke/financialrecords/Food.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.financialrecords;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.expensetypes.MealType;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":" * Food class that inherits from expense.","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Hongzhii"},"content":" * Represents food expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Hongzhii"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Hongzhii"},"content":"public class Food extends Expense {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Hongzhii"},"content":"    private MealType mealType;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Hongzhii"},"content":"     * Food class constructor","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Hongzhii"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Hongzhii"},"content":"     * @param description","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Hongzhii"},"content":"     * @param date","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Hongzhii"},"content":"     * @param amount","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Hongzhii"},"content":"     * @param mealType","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Hongzhii"},"content":"     * @throws KaChinnnngException","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Hongzhii"},"content":"    public Food(String description, LocalDate date, double amount, MealType mealType) throws KaChinnnngException {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Hongzhii"},"content":"        super(description, date, amount);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"        this.category \u003d \"food\";","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"Hongzhii"},"content":"        this.mealType \u003d mealType;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Hongzhii"},"content":"     * Returns meal type","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Hongzhii"},"content":"     * @return","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Hongzhii"},"content":"    public MealType getMealType() {","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Hongzhii"},"content":"        return mealType;","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Hongzhii"},"content":"     * Returns a string that contains all the information on the expense record","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Hongzhii"},"content":"     * @return","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Hongzhii"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Hongzhii"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Hongzhii"},"content":"        return \"Food Expense (\" + getMealType()  + \"): \" + getDescription() +","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Hongzhii"},"content":"                \" | Date: \" + getDateString() + \" | Amount: $\" + String.format(\"%.2f\", getAmount());","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"bljhty":1,"Hongzhii":45}},{"path":"src/main/java/seedu/duke/financialrecords/Income.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.financialrecords;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import java.io.File;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":" * Implementation of the Income class","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":" * Basic income class inherits from FinancialRecord and does not include any additional attributes","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"public class Income extends FinancialRecord {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"    // Logger instance to log events and issues that occur during the execution of this class.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(Income.class.getName());","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"    static {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"            File dir \u003d new File(\"logs\");","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"                if (!dir.mkdirs()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"                    throw new KaChinnnngException(\"Failed to create directory \" + dir.getAbsolutePath());","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"            FileHandler fh \u003d new FileHandler(\"logs/Income.log\", true);","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"            SimpleFormatter formatter \u003d new SimpleFormatter();","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"            fh.setFormatter(formatter);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"            LOGGER.addHandler(fh);","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"            LOGGER.setLevel(Level.ALL);","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"            LOGGER.setUseParentHandlers(false);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"        } catch (SecurityException se) {","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", se);","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"            System.err.println(\"Insufficient permissions to create logs directory. Please check your permissions or \" +","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"                    \"run the program in a different directory.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", e);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"     * This method is used to create a new financial record.","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record creation classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"     * @param description String containing the description of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"     * @param date LocalDate containing the date of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"     * @param amount double containing the amount of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"    public Income(String description, LocalDate date, double amount) throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"        super(description, date, amount);","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"        LOGGER.log(Level.INFO,(\"Income created with description: \" +","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"                description + \" date: \" + date + \" amount: \" + amount));","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"     * This method is used to get the category of the financial record.","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"     * This method is used by all specific financial record classes in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"     * @return String containing the category of the financial record","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"        return \"Income: \" + getDescription() + ","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"                \" | Date: \" + getDateString()+ \" | Amount: $\" + String.format(\"%.2f\", getAmount());","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"bljhty":68}},{"path":"src/main/java/seedu/duke/financialrecords/Transport.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.financialrecords;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.expensetypes.TransportationType;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":" * Transport class that inherits from expense.","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Hongzhii"},"content":" * Represents transportation expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Hongzhii"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Hongzhii"},"content":"public class Transport extends Expense {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Hongzhii"},"content":"    private TransportationType transportationType;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Hongzhii"},"content":"     * Transport class constructor","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Hongzhii"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Hongzhii"},"content":"     * @param description","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Hongzhii"},"content":"     * @param date","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Hongzhii"},"content":"     * @param amount","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Hongzhii"},"content":"     * @param transportationType","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Hongzhii"},"content":"     * @throws KaChinnnngException","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Hongzhii"},"content":"    public Transport(String description, LocalDate date, double amount,","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Hongzhii"},"content":"                     TransportationType transportationType) throws KaChinnnngException {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Hongzhii"},"content":"        super(description, date, amount);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Hongzhii"},"content":"        this.transportationType \u003d transportationType;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"        this.category \u003d \"Transport\";","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Hongzhii"},"content":"     * Returns transportation type","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Hongzhii"},"content":"     * @return","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Hongzhii"},"content":"    public TransportationType getTransportationType() {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Hongzhii"},"content":"        return transportationType;","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Hongzhii"},"content":"     * Returns a string that contains all the information on the expense record","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Hongzhii"},"content":"     * @return","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Hongzhii"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Hongzhii"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Hongzhii"},"content":"        return \"Transportation Expense (\" + getTransportationType() + \"): \" + getDescription() +","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Hongzhii"},"content":"                \" | Date: \" + getDateString() + \" | Amount: $\" + String.format(\"%.2f\", getAmount());","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"bljhty":1,"Hongzhii":45}},{"path":"src/main/java/seedu/duke/financialrecords/Utilities.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.financialrecords;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.expensetypes.UtilityType;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":" * Utilities class that inherits from expense.","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Hongzhii"},"content":" * Represents utility expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Hongzhii"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Hongzhii"},"content":"public class Utilities extends Expense {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Hongzhii"},"content":"    private UtilityType utilityType;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Hongzhii"},"content":"     * Utilities class constructor","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Hongzhii"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Hongzhii"},"content":"     * @param description","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Hongzhii"},"content":"     * @param date","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Hongzhii"},"content":"     * @param amount","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Hongzhii"},"content":"     * @param utilityType","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Hongzhii"},"content":"     * @throws KaChinnnngException","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Hongzhii"},"content":"    public Utilities(String description, LocalDate date, double amount,","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Hongzhii"},"content":"                     UtilityType utilityType) throws KaChinnnngException {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Hongzhii"},"content":"        super(description, date, amount);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Hongzhii"},"content":"        this.utilityType \u003d utilityType;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"        this.category \u003d \"Utilities\";","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Hongzhii"},"content":"     * Returns utility type","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Hongzhii"},"content":"     * @return","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Hongzhii"},"content":"    public UtilityType getUtilityType() {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Hongzhii"},"content":"        return utilityType;","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Hongzhii"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Hongzhii"},"content":"     * Returns a string that contains all the information on the expense record","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Hongzhii"},"content":"     * @return","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Hongzhii"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Hongzhii"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Hongzhii"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Hongzhii"},"content":"        return \"Utilities Expense(\" + getUtilityType() + \"): \" + getDescription() +","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Hongzhii"},"content":"                \" | Date: \" + getDateString() + \" | Amount: $\" + String.format(\"%.2f\", getAmount());","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"bljhty":1,"Hongzhii":45}},{"path":"src/main/java/seedu/duke/financialrecords/expensetypes/MealType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.financialrecords.expensetypes;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":" * Enum class to represent meal types.","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"public enum MealType {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"    OTHER, BREAKFAST, LUNCH, DINNER","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Hongzhii":8}},{"path":"src/main/java/seedu/duke/financialrecords/expensetypes/TransportationType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.financialrecords.expensetypes;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":" * Enum class that represents all transportation types.","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"public enum TransportationType {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"    OTHER, TRAIN, BUS, TAXI, FUEL","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Hongzhii":8}},{"path":"src/main/java/seedu/duke/financialrecords/expensetypes/UtilityType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.financialrecords.expensetypes;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":" * Enum class that represents all utility types.","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"public enum UtilityType {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"    OTHER, WATER, ELECTRICITY, GAS","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Hongzhii":8}},{"path":"src/main/java/seedu/duke/parser/ExpenseParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.ExchangeRateManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.Food;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.Transport;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.Utilities;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.expensetypes.MealType;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.expensetypes.TransportationType;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.expensetypes.UtilityType;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Hongzhii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Hongzhii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Hongzhii"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Hongzhii"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Hongzhii"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Hongzhii"},"content":"public class ExpenseParser {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Hongzhii"},"content":"    public static final String CATEGORY_FIELD \u003d \"ca\";","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Hongzhii"},"content":"    public static final String TYPE_FIELD \u003d \"ty\";","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Hongzhii"},"content":"    public static final String DESCRIPTION_FIELD \u003d \"de\";","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Hongzhii"},"content":"    public static final String DATE_FIELD \u003d \"da\";","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Hongzhii"},"content":"    public static final String AMOUNT_FIELD \u003d \"am\";","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Hongzhii"},"content":"    public static final String INDEX_FIELD \u003d \"in\";","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Hongzhii"},"content":"    public static LocalDate parseDate(String expenseDateString) throws KaChinnnngException {","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Hongzhii"},"content":"        LocalDate expenseDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Hongzhii"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/uuuu\")","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Hongzhii"},"content":"                .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Hongzhii"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Hongzhii"},"content":"            expenseDate \u003d LocalDate.parse(expenseDateString, formatter);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Hongzhii"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Please enter a valid date in the format dd/MM/yyyydon\");","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Hongzhii"},"content":"        if (expenseDate.isAfter(LocalDate.now())) {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Hongzhii"},"content":"            throw new KaChinnnngException(\"Please enter a date that is not in the future\");","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Hongzhii"},"content":"        return expenseDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Hongzhii"},"content":"    public static Expense parseExpense(HashMap\u003cString, String\u003e argumentsByField) throws KaChinnnngException {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Hongzhii"},"content":"        if (!argumentsByField.containsKey(CATEGORY_FIELD) ||","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Hongzhii"},"content":"                !argumentsByField.containsKey(TYPE_FIELD) ||","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Hongzhii"},"content":"                !argumentsByField.containsKey(DESCRIPTION_FIELD) ||","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Hongzhii"},"content":"                !argumentsByField.containsKey(DATE_FIELD) ||","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Hongzhii"},"content":"                !argumentsByField.containsKey(AMOUNT_FIELD)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Hongzhii"},"content":"            throw new KaChinnnngException(\"Missing fields detected\");","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Hongzhii"},"content":"        String expenseCategoryString \u003d argumentsByField.get(CATEGORY_FIELD).toLowerCase();","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Hongzhii"},"content":"        String expenseTypeString \u003d argumentsByField.get(TYPE_FIELD).toLowerCase();","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Hongzhii"},"content":"        String expenseDescriptionString \u003d argumentsByField.get(DESCRIPTION_FIELD);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Hongzhii"},"content":"        String expenseDateString \u003d argumentsByField.get(DATE_FIELD);","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Hongzhii"},"content":"        String expenseAmountString \u003d argumentsByField.get(AMOUNT_FIELD);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Hongzhii"},"content":"        LocalDate expenseDate \u003d parseDate(expenseDateString);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Hongzhii"},"content":"        double expenseAmount;","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Hongzhii"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"limyuhching"},"content":"            if (!isOtherCurrency(expenseAmountString)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Hongzhii"},"content":"                expenseAmount \u003d Double.parseDouble(expenseAmountString);","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"limyuhching"},"content":"            } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"limyuhching"},"content":"                // Convert Currency to SGD","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"limyuhching"},"content":"                ExchangeRateManager exchangeRateManager \u003d ExchangeRateManager.getInstance();","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"limyuhching"},"content":"                String[] tokens \u003d expenseAmountString.split(\" \");","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"limyuhching"},"content":"                String currency \u003d tokens[0].trim();","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"limyuhching"},"content":"                expenseAmount \u003d Double.parseDouble(tokens[1].trim());","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"limyuhching"},"content":"                expenseAmount \u003d exchangeRateManager.convertCurrency(currency, expenseAmount);","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"limyuhching"},"content":"                exchangeRateManager.showCurrencyConversionMessage(currency);","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"Hongzhii"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Hongzhii"},"content":"            throw new KaChinnnngException(\"Please enter a valid amount\");","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Hongzhii"},"content":"        if (expenseAmount \u003e 999999.99 || expenseAmount \u003c\u003d 0) {","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"Hongzhii"},"content":"            throw new KaChinnnngException(\"Expense amount must be between $0.01 and $999999.99\");","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"Hongzhii"},"content":"        if (expenseCategoryString.equals(\"food\")) {","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"Hongzhii"},"content":"            if (expenseTypeString.equals(\"breakfast\")) {","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Hongzhii"},"content":"                return new Food(expenseDescriptionString, expenseDate, expenseAmount, MealType.BREAKFAST);","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Hongzhii"},"content":"            } else if (expenseTypeString.equals(\"lunch\")) {","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Hongzhii"},"content":"                return new Food(expenseDescriptionString, expenseDate, expenseAmount, MealType.LUNCH);","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"Hongzhii"},"content":"            } else if (expenseTypeString.equals(\"dinner\")) {","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"Hongzhii"},"content":"                return new Food(expenseDescriptionString, expenseDate, expenseAmount, MealType.DINNER);","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"Hongzhii"},"content":"            } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"Hongzhii"},"content":"                return new Food(expenseDescriptionString, expenseDate, expenseAmount, MealType.OTHER);","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"Hongzhii"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"Hongzhii"},"content":"        } else if (expenseCategoryString.equals(\"transport\")){","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"Hongzhii"},"content":"            if (expenseTypeString.equals(\"train\")) {","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"Hongzhii"},"content":"                return new Transport(expenseDescriptionString, expenseDate, expenseAmount,","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"Hongzhii"},"content":"                        TransportationType.TRAIN);","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"Hongzhii"},"content":"            } else if (expenseTypeString.equals(\"bus\")) {","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"Hongzhii"},"content":"                return new Transport(expenseDescriptionString, expenseDate, expenseAmount,","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"Hongzhii"},"content":"                        TransportationType.BUS);","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"Hongzhii"},"content":"            } else if (expenseTypeString.equals(\"taxi\")) {","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"Hongzhii"},"content":"                return new Transport(expenseDescriptionString, expenseDate, expenseAmount,","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"Hongzhii"},"content":"                        TransportationType.TAXI);","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Hongzhii"},"content":"            } else if (expenseTypeString.equals(\"fuel\")) {","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Hongzhii"},"content":"                return new Transport(expenseDescriptionString, expenseDate, expenseAmount,","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Hongzhii"},"content":"                        TransportationType.FUEL);","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"Hongzhii"},"content":"            } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Hongzhii"},"content":"                return new Transport(expenseDescriptionString, expenseDate, expenseAmount,","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Hongzhii"},"content":"                        TransportationType.OTHER);","lastModifiedDate":"2023-11-06"},{"lineNumber":105,"author":{"gitId":"Hongzhii"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"        } else if (expenseCategoryString.equals(\"utilities\")) {","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"Hongzhii"},"content":"            if (expenseTypeString.equals(\"water\")) {","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"Hongzhii"},"content":"                return new Utilities(expenseDescriptionString, expenseDate, expenseAmount, UtilityType.WATER);","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"Hongzhii"},"content":"            } else if (expenseTypeString.equals(\"electricity\")) {","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"Hongzhii"},"content":"                return new Utilities(expenseDescriptionString, expenseDate, expenseAmount, UtilityType.ELECTRICITY);","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"Hongzhii"},"content":"            } else if (expenseTypeString.equals(\"gas\")) {","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"Hongzhii"},"content":"                return new Utilities(expenseDescriptionString, expenseDate, expenseAmount, UtilityType.GAS);","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"Hongzhii"},"content":"            } else{","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"Hongzhii"},"content":"                return new Utilities(expenseDescriptionString, expenseDate, expenseAmount, UtilityType.OTHER);","lastModifiedDate":"2023-11-06"},{"lineNumber":115,"author":{"gitId":"Hongzhii"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"        } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Please enter a valid category\");","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"Hongzhii"},"content":"    public static int getIndex(HashMap\u003cString, String\u003e argumentsByFields) throws KaChinnnngException {","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"Hongzhii"},"content":"        if (!argumentsByFields.containsKey(INDEX_FIELD)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"Hongzhii"},"content":"            throw new KaChinnnngException(\"Missing index field detected\");","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"Hongzhii"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"Hongzhii"},"content":"            return Integer.parseInt(argumentsByFields.get(INDEX_FIELD));","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"Hongzhii"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"Hongzhii"},"content":"            throw new KaChinnnngException(\"Please enter a valid index\");","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"Hongzhii"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"limyuhching"},"content":"    private static boolean isOtherCurrency(String amount) {","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"limyuhching"},"content":"        return (amount.split(\" \").length \u003e 1);","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"limyuhching":15,"bljhty":4,"Hongzhii":116}},{"path":"src/main/java/seedu/duke/parser/FindParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"public class FindParser {","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"     * Parses the find command input.","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"     * @param fullCommand The full command string input by the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"     * @return An array of Strings containing the parsed parameters in the order: TYPE, CATEGORY, DESCRIPTION, DATE.","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException If the command format is invalid.","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"    public static String[] parseFindCommand(String fullCommand) throws KaChinnnngException {","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"        String[] tokens \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"        String[] parsedParameters \u003d new String[4];  // To store TYPE, CATEGORY, DESCRIPTION, DATE","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"        String[] validParameters \u003d {\"/t\", \"/cat\", \"/de\", \"/date\"};  // List of valid parameters","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"        for (String token : tokens) {","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"            if (token.startsWith(\"/\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"                boolean isValidParam \u003d false;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"                for (String validParam : validParameters) {","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"                    if (token.equals(validParam)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"                        isValidParam \u003d true;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"                        break;","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"                    }","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"                if (!isValidParam) {","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"                    throw new KaChinnnngException(\"Unrecognized parameter \\\"\" + token + \"\\\". \" +","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"                            \"Please refer to the help guide for valid parameters.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"        if (fullCommand.contains(\"/type\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Please use /t instead of /type for specifying the type.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"        if (fullCommand.contains(\"/category\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Please use /cat instead of /category for specifying the category.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"        if (fullCommand.contains(\"/description\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Please use /de instead of /description for specifying the description.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"        if (!fullCommand.contains(\"/t\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"The /t TYPE field is mandatory.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"        int typeIndex \u003d indexOf(tokens, \"/t\");","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"        if (typeIndex \u003d\u003d tokens.length - 1 || tokens[typeIndex + 1].startsWith(\"/\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"The value for /t TYPE cannot be empty.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"        parsedParameters[0] \u003d tokens[typeIndex + 1];","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"        if(\"income\".equalsIgnoreCase(parsedParameters[0])) {","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"            if (fullCommand.contains(\"/cat\")) {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"                throw new KaChinnnngException(\"The /cat CATEGORY field is not applicable for income.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"        if (fullCommand.contains(\"/cat\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"            int categoryIndex \u003d indexOf(tokens, \"/cat\");","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"            if (categoryIndex \u003d\u003d tokens.length - 1 || tokens[categoryIndex + 1].startsWith(\"/\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"                throw new KaChinnnngException(\"The value for /c CATEGORY cannot be empty.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"            parsedParameters[1] \u003d tokens[categoryIndex + 1];","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"        if (fullCommand.contains(\"/de\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"            int descriptionIndex \u003d indexOf(tokens, \"/de\");","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"            if (descriptionIndex \u003d\u003d tokens.length - 1 || tokens[descriptionIndex + 1].startsWith(\"/\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"                throw new KaChinnnngException(\"The value for /de DESCRIPTION cannot be empty.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"            parsedParameters[2] \u003d tokens[descriptionIndex + 1];","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"        if (fullCommand.contains(\"/date\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"            int dateIndex \u003d indexOf(tokens, \"/date\");","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"            if (dateIndex \u003d\u003d tokens.length - 1 || tokens[dateIndex + 1].startsWith(\"/\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"                throw new KaChinnnngException(\"The value for /da DATE cannot be empty.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"            parsedParameters[3] \u003d tokens[dateIndex + 1];","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"        // Check that at least one optional field is provided","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"        if (parsedParameters[1] \u003d\u003d null \u0026\u0026 parsedParameters[2] \u003d\u003d null \u0026\u0026 parsedParameters[3] \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"At least one of the optional fields [/c CATEGORY], \" +","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"                                            \"[/de DESCRIPTION], [/da DATE] must be provided.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"        return parsedParameters;","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"     * Helper method to find the index of a specific string in an array.","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"     * @param array The array to search.","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"     * @param value The string value to find.","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"     * @return The index of the value in the array, or -1 if not found.","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"    private static int indexOf(String[] array, String value) {","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"        for (int i \u003d 0; i \u003c array.length; i++) {","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"            if (array[i].equals(value)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"                return i;","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"        return -1;","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"bljhty":108}},{"path":"src/main/java/seedu/duke/parser/IncomeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.ExchangeRateManager;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import java.io.File;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":" * Represents the parser for the Income class.","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":" * This class serves to parse the user input into a format that the Income class can understand","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"public class IncomeParser {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"    public static final String DESCRIPTION_FIELD \u003d \"de\";","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"    public static final String DATE_FIELD \u003d \"da\";","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"    public static final String AMOUNT_FIELD \u003d \"am\";","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"    public static final String INDEX_FIELD \u003d \"in\";","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(IncomeParser.class.getName());","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"    static {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"            File dir \u003d new File(\"logs\");","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"                if (!dir.mkdirs()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"                    throw new KaChinnnngException(\"Failed to create directory \" + dir.getAbsolutePath());","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"            FileHandler fh \u003d new FileHandler(\"logs/IncomeParser.log\", true);","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"            SimpleFormatter formatter \u003d new SimpleFormatter();","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"            fh.setFormatter(formatter);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"            LOGGER.addHandler(fh);","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"            LOGGER.setLevel(Level.ALL);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"            LOGGER.setUseParentHandlers(false);","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"        } catch (SecurityException se) {","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", se);","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"            System.err.println(\"Insufficient permissions to create logs directory. Please check your permissions or \" +","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"                    \"run the program in a different directory.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", e);","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"     * This method is used to parse the date of the income.","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"     * This method is used by the IncomeParser class in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"     * This method is used by the IncomeManager class in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"     * @param incomeDateString String containing the date of the income","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"     * @return incomeDate LocalDate containing the date of the income","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"    public static LocalDate parseDate(String incomeDateString) throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"        assert incomeDateString !\u003d null : \"incomeDateString should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"        LocalDate incomeDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/uuuu\")","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"                .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"            incomeDate \u003d LocalDate.parse(incomeDateString, formatter);","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.WARNING, \"Invalid date format\" + incomeDateString, e);","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Please enter a valid date in the format dd/MM/yyyy\");","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"        if (incomeDate.isAfter(LocalDate.now())) {","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.WARNING, \"Date is in the future\" + incomeDateString);","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Please enter a date that is not in the future\");","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"        if (incomeDate.getYear() \u003c 0) {","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.WARNING, \"Invalid year\" + incomeDateString);","lastModifiedDate":"2023-11-04"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Year should not be negative, Please enter a valid year\");","lastModifiedDate":"2023-11-04"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"        return incomeDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"     * This method is used to parse the fields of the income.","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"     * This method is used by the IncomeManager class in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"     * @param argumentsByField HashMap containing the description, date, and amount of the income","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"     * @return Income object created from the provided fields","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"    public static Income parseIncome(HashMap\u003cString, String\u003e argumentsByField) throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"        if (argumentsByField \u003d\u003d null) {","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Income fields cannot be null\");","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"        if (!argumentsByField.containsKey(DESCRIPTION_FIELD) ||","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"                !argumentsByField.containsKey(DATE_FIELD) ||","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"                !argumentsByField.containsKey(AMOUNT_FIELD)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Missing fields detected\");","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"        String incomeDescriptionString \u003d argumentsByField.get(DESCRIPTION_FIELD);","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"        String incomeDateString \u003d argumentsByField.get(DATE_FIELD);","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"        String incomeAmountString \u003d argumentsByField.get(AMOUNT_FIELD);","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"        LocalDate incomeDate \u003d parseDate(incomeDateString);","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"        double incomeAmount;","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"limyuhching"},"content":"            if (!isOtherCurrency(incomeAmountString)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"                incomeAmount \u003d Double.parseDouble(incomeAmountString);","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"limyuhching"},"content":"            } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"limyuhching"},"content":"                // Convert Currency to SGD","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"limyuhching"},"content":"                ExchangeRateManager exchangeRateManager \u003d ExchangeRateManager.getInstance();","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"limyuhching"},"content":"                String[] tokens \u003d incomeAmountString.split(\" \");","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"limyuhching"},"content":"                String currency \u003d tokens[0].trim();","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"limyuhching"},"content":"                incomeAmount \u003d Double.parseDouble(tokens[1].trim());","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"limyuhching"},"content":"                incomeAmount \u003d exchangeRateManager.convertCurrency(currency, incomeAmount);","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"limyuhching"},"content":"                exchangeRateManager.showCurrencyConversionMessage(currency);","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"bljhty"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.WARNING, \"Invalid amount format\" + incomeAmountString, e);","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Please enter a valid amount\");","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"bljhty"},"content":"        if (incomeAmount \u003e 999999.99 || incomeAmount \u003c\u003d 0) {","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.WARNING, \"Invalid amount\" + incomeAmountString);","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Income amount must be between $0.01 and $999999.99\");","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"bljhty"},"content":"        return new Income(incomeDescriptionString, incomeDate, incomeAmount);","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"bljhty"},"content":"     * This method is used to get the index of the income.","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"bljhty"},"content":"     * This method is used by the IncomeDeleter class in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"bljhty"},"content":"     * @param argumentsByFields HashMap containing the index of the income","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"bljhty"},"content":"     * @return index int containing the index of the income","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is an error in the command","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"bljhty"},"content":"    public static int getIndex(HashMap\u003cString, String\u003e argumentsByFields) throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"bljhty"},"content":"        assert argumentsByFields !\u003d null : \"argumentsByFields should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"bljhty"},"content":"        if (!argumentsByFields.containsKey(INDEX_FIELD)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Missing index field detected\");","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"bljhty"},"content":"        int index;","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"bljhty"},"content":"            index \u003d Integer.parseInt(argumentsByFields.get(INDEX_FIELD));","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"bljhty"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Please enter a valid index\");","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"bljhty"},"content":"        if (index \u003c\u003d 0) {","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"Please enter a valid index\");","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"bljhty"},"content":"        return index;","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":161,"author":{"gitId":"limyuhching"},"content":"    private static boolean isOtherCurrency(String amount) {","lastModifiedDate":"2023-11-01"},{"lineNumber":162,"author":{"gitId":"limyuhching"},"content":"        return (amount.split(\" \").length \u003e 1);","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"limyuhching":15,"bljhty":149}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import java.io.File;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"/*","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":" * parser class to parse user input","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"public class Parser {","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(Parser.class.getName());","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"    static {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"            File dir \u003d new File(\"logs\");","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"                if (!dir.mkdirs()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"                    throw new KaChinnnngException(\"Failed to create directory \" + dir.getAbsolutePath());","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"                }","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"            FileHandler fh \u003d new FileHandler(\"logs/Parser.log\", true);","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"            SimpleFormatter formatter \u003d new SimpleFormatter();","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"            fh.setFormatter(formatter);","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"            LOGGER.addHandler(fh);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"            LOGGER.setLevel(Level.ALL);","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"            LOGGER.setUseParentHandlers(false);","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"        } catch (SecurityException se) {","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", se);","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"            System.err.println(\"Insufficient permissions to create logs directory. Please check your permissions or \" +","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"                    \"run the program in a different directory.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", e);","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"     * This method is used to parse the user input.","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"     * This method is used by the Main class in the application","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"     * @param fullCommand String containing the user input","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"     * @return String containing the command to be executed","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"    public static String parse(String fullCommand) {","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"        assert fullCommand !\u003d null : \"fullCommand should not be null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"        String trimmedCommand \u003d fullCommand.trim();","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"        String commandLowerCase \u003d trimmedCommand.toLowerCase();","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"        LOGGER.log(Level.INFO, (\"Parsing user input:\") + fullCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"        String resultCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"        if (commandLowerCase.equals(\"exit\")) {","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"exit\";","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"        } else if (commandLowerCase.startsWith(\"add income \")) {","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"add_income\";","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"KenCheung18"},"content":"        } else if (commandLowerCase.equals(\"list incomes\")) {","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"KenCheung18"},"content":"            resultCommand \u003d \"list_incomes\";","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"Hongzhii"},"content":"        } else if (commandLowerCase.startsWith(\"add expense \")) {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"add_expense\";","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"KenCheung18"},"content":"        } else if (commandLowerCase.equals((\"list expenses\"))) {","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"KenCheung18"},"content":"            resultCommand \u003d \"list_expenses\";","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"KenCheung18"},"content":"        } else if (commandLowerCase.equals(\"help\")) {","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"help\";","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"limyuhching"},"content":"        } else if (commandLowerCase.equals(\"list\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"list\";","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"limyuhching"},"content":"        } else if (commandLowerCase.startsWith(\"delete income \")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"delete_income\";","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"limyuhching"},"content":"        } else if (commandLowerCase.startsWith(\"delete expense \")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"delete_expense\";","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"KenCheung18"},"content":"        } else if (commandLowerCase.equals(\"balance\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"balance\";","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"        } else if (commandLowerCase.startsWith(\"find \")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"find\";","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"limyuhching"},"content":"        } else if (commandLowerCase.equals(\"clear incomes\")) {","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"KenCheung18"},"content":"            resultCommand \u003d \"clear_incomes\";","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"limyuhching"},"content":"        } else if (commandLowerCase.equals(\"clear expenses\")) {","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"KenCheung18"},"content":"            resultCommand \u003d \"clear_expenses\";","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"limyuhching"},"content":"        } else if (commandLowerCase.equals(\"clear all\")) {","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"KenCheung18"},"content":"            resultCommand \u003d \"clear_all\";","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"limyuhching"},"content":"        } else if (commandLowerCase.startsWith(\"edit income \")) {","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"limyuhching"},"content":"            resultCommand \u003d \"edit_income\";","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"limyuhching"},"content":"        } else if (commandLowerCase.startsWith(\"edit expense \")) {","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"limyuhching"},"content":"            resultCommand \u003d \"edit_expense\";","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"limyuhching"},"content":"        } else if (commandLowerCase.equals(\"list currencies\")) {","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"limyuhching"},"content":"            resultCommand \u003d \"list_currencies\";","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"limyuhching"},"content":"        } else if (commandLowerCase.equals(\"list exchange rates\")) {","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"limyuhching"},"content":"            resultCommand \u003d \"list_exchange_rates\";","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"limyuhching"},"content":"        } else if (commandLowerCase.startsWith(\"update exchange rate \")) {","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"limyuhching"},"content":"            resultCommand \u003d \"update_exchange_rate\";","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"KenCheung18"},"content":"        } else if (commandLowerCase.startsWith(\"help add\")) {","lastModifiedDate":"2023-11-07"},{"lineNumber":98,"author":{"gitId":"KenCheung18"},"content":"            resultCommand \u003d \"help_add\";","lastModifiedDate":"2023-11-07"},{"lineNumber":99,"author":{"gitId":"KenCheung18"},"content":"        } else if (commandLowerCase.startsWith(\"help list\")) {","lastModifiedDate":"2023-11-07"},{"lineNumber":100,"author":{"gitId":"KenCheung18"},"content":"            resultCommand \u003d \"help_list\";","lastModifiedDate":"2023-11-07"},{"lineNumber":101,"author":{"gitId":"KenCheung18"},"content":"        } else if (commandLowerCase.startsWith(\"help delete\")) {","lastModifiedDate":"2023-11-07"},{"lineNumber":102,"author":{"gitId":"KenCheung18"},"content":"            resultCommand \u003d \"help_delete\";","lastModifiedDate":"2023-11-07"},{"lineNumber":103,"author":{"gitId":"KenCheung18"},"content":"        } else if (commandLowerCase.startsWith(\"help edit\")) {","lastModifiedDate":"2023-11-07"},{"lineNumber":104,"author":{"gitId":"KenCheung18"},"content":"            resultCommand \u003d \"help_edit\";","lastModifiedDate":"2023-11-07"},{"lineNumber":105,"author":{"gitId":"KenCheung18"},"content":"        } else if (commandLowerCase.startsWith(\"help balance\")) {","lastModifiedDate":"2023-11-07"},{"lineNumber":106,"author":{"gitId":"KenCheung18"},"content":"            resultCommand \u003d \"help_balance\";","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"KenCheung18"},"content":"        } else if (commandLowerCase.startsWith(\"help update exchange rate\")) {","lastModifiedDate":"2023-11-07"},{"lineNumber":108,"author":{"gitId":"KenCheung18"},"content":"            resultCommand \u003d \"help_update_exchange_rate\";","lastModifiedDate":"2023-11-07"},{"lineNumber":109,"author":{"gitId":"KenCheung18"},"content":"        } else if (commandLowerCase.startsWith(\"help find\")) {","lastModifiedDate":"2023-11-07"},{"lineNumber":110,"author":{"gitId":"KenCheung18"},"content":"            resultCommand \u003d \"help_find\";","lastModifiedDate":"2023-11-07"},{"lineNumber":111,"author":{"gitId":"KenCheung18"},"content":"        } else if (commandLowerCase.startsWith(\"help clear\")) {","lastModifiedDate":"2023-11-07"},{"lineNumber":112,"author":{"gitId":"KenCheung18"},"content":"            resultCommand \u003d \"help_clear\";","lastModifiedDate":"2023-11-07"},{"lineNumber":113,"author":{"gitId":"KenCheung18"},"content":"        } else if (commandLowerCase.startsWith(\"help exit\")) {","lastModifiedDate":"2023-11-07"},{"lineNumber":114,"author":{"gitId":"KenCheung18"},"content":"            resultCommand \u003d \"help_exit\";","lastModifiedDate":"2023-11-07"},{"lineNumber":115,"author":{"gitId":"bljhty"},"content":"        } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"            resultCommand \u003d \"invalid\";","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":118,"author":{"gitId":"bljhty"},"content":"        LOGGER.log(Level.INFO , (\"Parsed command: \") + resultCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"bljhty"},"content":"        return resultCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":121,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"limyuhching":16,"bljhty":77,"Hongzhii":1,"KenCheung18":27}},{"path":"src/main/java/seedu/duke/storage/ExchangeRateFileHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.ExchangeRateManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"import java.io.File;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"public class ExchangeRateFileHandler {","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"    private static final String WRONG_FORMAT_ERROR \u003d \"Invalid row in exchange rate file\";","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"    private String filePath;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"    public  ExchangeRateFileHandler(String filePath) {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"    public void load() throws KaChinnnngException, FileNotFoundException {","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"        ExchangeRateManager exchangeRateManager \u003d ExchangeRateManager.getInstance();","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"        if (createFile(filePath)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"            return; // File not found, created new file","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"        Scanner s \u003d new Scanner(file); // Create a Scanner using the File as the source","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"            String textLine \u003d s.nextLine();","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"            try {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"                String[] tokens \u003d textLine.split(\",\");","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"                String currency \u003d tokens[0].toUpperCase().trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"                double rate \u003d Double.parseDouble(tokens[1].trim());","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"                exchangeRateManager.updateExchangeRate(currency, rate);","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"            } catch (IndexOutOfBoundsException | NumberFormatException | NullPointerException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"                // Skip line if rate is not a double","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"                System.out.println(WRONG_FORMAT_ERROR + \" : \" + textLine);","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"    public void save(HashMap\u003cString, Double\u003e exchangeRates) throws KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"            for (Map.Entry\u003cString, Double\u003e entry : exchangeRates.entrySet()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"                String currency \u003d entry.getKey();","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"                Double rate \u003d entry.getValue();","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"                fw.write(currency + \",\" + rate + \"\\n\");","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"Something went wrong when saving exchange rates\");","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"    private boolean createFile(String filePath) throws KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"                return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"            if (!file.getParentFile().exists()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"limyuhching"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"limyuhching"},"content":"            return file.createNewFile();","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"limyuhching"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"Cannot create file; reason: \" + e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"limyuhching":66}},{"path":"src/main/java/seedu/duke/storage/GetFromTxt.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Food;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Utilities;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Transport;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.expensetypes.MealType;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.expensetypes.TransportationType;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.expensetypes.UtilityType;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":"import java.io.File;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"KenCheung18"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"KenCheung18"},"content":" * The GetFromTxt class is responsible for reading financial records data from a text file.","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"KenCheung18"},"content":" * It parses the contents of the file and populates two ArrayLists: one for Incomes and one for Expenses.","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"KenCheung18"},"content":" *","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":" * This class handles exceptions for file creation errors, parsing errors, and other issues that may arise","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"KenCheung18"},"content":" * when reading data from the file.","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"KenCheung18"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"KenCheung18"},"content":"public class GetFromTxt {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"KenCheung18"},"content":"    private static final String AMOUNT_NOT_SUPPORT_ERROR \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"KenCheung18"},"content":"            \"Amount field from this line is not supported from storage file \";","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"KenCheung18"},"content":"    private static final String DATE_TIME_FORMAT_ERROR \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"KenCheung18"},"content":"            \"Date time format incorrect on this line from storage file \";","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"KenCheung18"},"content":"    private static final String FILE_ACCESS_MESSAGE \u003d \"You should put the jar file in \" +","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"KenCheung18"},"content":"            \"a folder with read and write access\";","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"KenCheung18"},"content":"    private static final String FILE_CREATION_ERROR \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"KenCheung18"},"content":"            \"Something went wrong while creating the file from storage file \";","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"KenCheung18"},"content":"    private static final String INDEX_OUT_OF_BOUND_FROM_FILE_ERROR \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"KenCheung18"},"content":"            \"Details missed on this line from storage file \";","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"KenCheung18"},"content":"    private static final String NUMBER_FROM_FILE_INCORRECT \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"KenCheung18"},"content":"            \"The expense type is incorrect on this line from storage file \";","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"KenCheung18"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(Parser.class.getName());","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"KenCheung18"},"content":"    private final File file;","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"KenCheung18"},"content":"    static {","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"KenCheung18"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"KenCheung18"},"content":"            File dir \u003d new File(\"logs\");","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"KenCheung18"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"KenCheung18"},"content":"                if (!dir.mkdirs()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"KenCheung18"},"content":"                    throw new KaChinnnngException(\"Failed to create directory \" + dir.getAbsolutePath());","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"KenCheung18"},"content":"                }","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"KenCheung18"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"KenCheung18"},"content":"            FileHandler fh \u003d new FileHandler(\"logs/GetFromTxt.log\", true);","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"KenCheung18"},"content":"            SimpleFormatter formatter \u003d new SimpleFormatter();","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"KenCheung18"},"content":"            fh.setFormatter(formatter);","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.addHandler(fh);","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.setLevel(Level.ALL);","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.setUseParentHandlers(false);","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"KenCheung18"},"content":"        } catch (SecurityException se) {","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", se);","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"KenCheung18"},"content":"            System.err.println(\"Insufficient permissions to create logs directory. Please check your permissions or \" +","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"KenCheung18"},"content":"                    \"run the program in a different directory.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"KenCheung18"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", e);","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"KenCheung18"},"content":"     * Construct a new object of the GetFromTxt class with the provided file path.","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"KenCheung18"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"KenCheung18"},"content":"     * @param path The path to the text file containing financial records data.","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"KenCheung18"},"content":"    public GetFromTxt(String path) {","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"KenCheung18"},"content":"        assert path !\u003d null: \"path should not be null\";","lastModifiedDate":"2023-11-07"},{"lineNumber":86,"author":{"gitId":"KenCheung18"},"content":"        file \u003d new File(path);","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"KenCheung18"},"content":"     * Exception handling for file creation and file accessing, read every line of the txt file and","lastModifiedDate":"2023-11-07"},{"lineNumber":91,"author":{"gitId":"KenCheung18"},"content":"     * call the execute function to store all the data in","lastModifiedDate":"2023-11-07"},{"lineNumber":92,"author":{"gitId":"KenCheung18"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"KenCheung18"},"content":"     * @param incomes   The ArrayList to store Income objects.","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"KenCheung18"},"content":"     * @param expenses  The ArrayList to store Expense objects.","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"KenCheung18"},"content":"     * @throws FileNotFoundException If the file specified by the path cannot be found.","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"KenCheung18"},"content":"    public void getFromTextFile(ArrayList\u003cIncome\u003e incomes, ArrayList\u003cExpense\u003e expenses) throws FileNotFoundException,","lastModifiedDate":"2023-11-07"},{"lineNumber":98,"author":{"gitId":"KenCheung18"},"content":"            KaChinnnngException {","lastModifiedDate":"2023-11-07"},{"lineNumber":99,"author":{"gitId":"KenCheung18"},"content":"        assert incomes !\u003d null : \"incomes should not be null\";","lastModifiedDate":"2023-11-07"},{"lineNumber":100,"author":{"gitId":"KenCheung18"},"content":"        assert expenses !\u003d null : \"expenses should not be null\";","lastModifiedDate":"2023-11-07"},{"lineNumber":101,"author":{"gitId":"KenCheung18"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"KenCheung18"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"KenCheung18"},"content":"                return; // If there is no such file in the directory, create the file and return without reading data.","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"KenCheung18"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"KenCheung18"},"content":"        } catch(AccessDeniedException e){","lastModifiedDate":"2023-11-06"},{"lineNumber":106,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.log(Level.WARNING, \"Insufficient permissions to access the folder \", e);","lastModifiedDate":"2023-11-06"},{"lineNumber":107,"author":{"gitId":"KenCheung18"},"content":"            System.out.println(FILE_ACCESS_MESSAGE);","lastModifiedDate":"2023-11-06"},{"lineNumber":108,"author":{"gitId":"KenCheung18"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.log(Level.WARNING, \"Error accessing storage file \", e);","lastModifiedDate":"2023-11-06"},{"lineNumber":110,"author":{"gitId":"KenCheung18"},"content":"            System.out.println(FILE_CREATION_ERROR);","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"KenCheung18"},"content":"        Scanner s;","lastModifiedDate":"2023-11-07"},{"lineNumber":113,"author":{"gitId":"KenCheung18"},"content":"        try {","lastModifiedDate":"2023-11-07"},{"lineNumber":114,"author":{"gitId":"KenCheung18"},"content":"            s \u003d new Scanner(file);                      // Create a Scanner using the File as the source","lastModifiedDate":"2023-11-07"},{"lineNumber":115,"author":{"gitId":"KenCheung18"},"content":"        } catch(IOException e){","lastModifiedDate":"2023-11-07"},{"lineNumber":116,"author":{"gitId":"KenCheung18"},"content":"            throw new KaChinnnngException(\"Access denied when accessing KaChinnnngggg.txt\");","lastModifiedDate":"2023-11-07"},{"lineNumber":117,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":118,"author":{"gitId":"KenCheung18"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"KenCheung18"},"content":"            String textLine \u003d s.nextLine();","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"KenCheung18"},"content":"            execute(textLine, incomes, expenses);","lastModifiedDate":"2023-11-07"},{"lineNumber":121,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":122,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":123,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":124,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":125,"author":{"gitId":"KenCheung18"},"content":"     * Reads financial records data from the text file and add to the corresponding ArrayLists","lastModifiedDate":"2023-11-07"},{"lineNumber":126,"author":{"gitId":"KenCheung18"},"content":"     * with Income and Expense objects.","lastModifiedDate":"2023-11-07"},{"lineNumber":127,"author":{"gitId":"KenCheung18"},"content":"     *","lastModifiedDate":"2023-11-07"},{"lineNumber":128,"author":{"gitId":"KenCheung18"},"content":"     * @param incomes   The ArrayList to store Income objects.","lastModifiedDate":"2023-11-07"},{"lineNumber":129,"author":{"gitId":"KenCheung18"},"content":"     * @param expenses  The ArrayList to store Expense objects.","lastModifiedDate":"2023-11-07"},{"lineNumber":130,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":131,"author":{"gitId":"KenCheung18"},"content":"    public void execute(String textLine, ArrayList\u003cIncome\u003e incomes, ArrayList\u003cExpense\u003e expenses){","lastModifiedDate":"2023-11-07"},{"lineNumber":132,"author":{"gitId":"KenCheung18"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"KenCheung18"},"content":"            // Parse the data from the text line","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"KenCheung18"},"content":"            int expenseType \u003d 0;","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"KenCheung18"},"content":"            String commandFromFile \u003d textLine.split(\" \\\\|de \")[0];","lastModifiedDate":"2023-11-06"},{"lineNumber":136,"author":{"gitId":"KenCheung18"},"content":"            String descriptionFromFile \u003d textLine.split(\" \\\\|de \")[1];","lastModifiedDate":"2023-11-06"},{"lineNumber":137,"author":{"gitId":"KenCheung18"},"content":"            descriptionFromFile \u003d descriptionFromFile.split(\" \\\\|amt \")[0];","lastModifiedDate":"2023-11-06"},{"lineNumber":138,"author":{"gitId":"KenCheung18"},"content":"            String stringAmount \u003d textLine.split(\" \\\\|amt \")[1];","lastModifiedDate":"2023-11-06"},{"lineNumber":139,"author":{"gitId":"KenCheung18"},"content":"            stringAmount \u003d stringAmount.split(\" \\\\|date \")[0];","lastModifiedDate":"2023-11-06"},{"lineNumber":140,"author":{"gitId":"KenCheung18"},"content":"            double amountFromFile \u003d Double.parseDouble(stringAmount);","lastModifiedDate":"2023-11-06"},{"lineNumber":141,"author":{"gitId":"KenCheung18"},"content":"            String stringDate \u003d textLine.split(\" \\\\|date \")[1];","lastModifiedDate":"2023-11-06"},{"lineNumber":142,"author":{"gitId":"KenCheung18"},"content":"            LocalDate dateFromFile;","lastModifiedDate":"2023-11-06"},{"lineNumber":143,"author":{"gitId":"KenCheung18"},"content":"            // Check for valid amount range","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"KenCheung18"},"content":"            if (amountFromFile \u003e 999999.99 || amountFromFile \u003c\u003d 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"KenCheung18"},"content":"                throw new KaChinnnngException(\"Expense amount must be between $0.01 and $999999.99\");","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"KenCheung18"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"KenCheung18"},"content":"            if (!commandFromFile.equals(\"I\")){","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"KenCheung18"},"content":"                dateFromFile \u003d LocalDate.parse(stringDate.split(\" \\\\|type \")[0]);","lastModifiedDate":"2023-11-06"},{"lineNumber":149,"author":{"gitId":"KenCheung18"},"content":"                expenseType \u003d Integer.parseInt(textLine.split(\" \\\\|type \")[1]);","lastModifiedDate":"2023-11-06"},{"lineNumber":150,"author":{"gitId":"KenCheung18"},"content":"            } else{","lastModifiedDate":"2023-11-07"},{"lineNumber":151,"author":{"gitId":"KenCheung18"},"content":"                dateFromFile \u003d LocalDate.parse(stringDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":152,"author":{"gitId":"KenCheung18"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"KenCheung18"},"content":"            // Create appropriate objects based on the commandFromFile","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"KenCheung18"},"content":"            switch (commandFromFile) {","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"KenCheung18"},"content":"            case \"I\":","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"KenCheung18"},"content":"                incomes.add(new Income(descriptionFromFile, dateFromFile, amountFromFile));","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"KenCheung18"},"content":"                LOGGER.log(Level.INFO , (\"Income added: \") + descriptionFromFile + amountFromFile);","lastModifiedDate":"2023-11-06"},{"lineNumber":158,"author":{"gitId":"KenCheung18"},"content":"                break;","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"KenCheung18"},"content":"            case \"EF\":","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"KenCheung18"},"content":"                expenses.add(new Food(descriptionFromFile, dateFromFile,","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"KenCheung18"},"content":"                        amountFromFile, MealType.values()[expenseType]));","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"KenCheung18"},"content":"                LOGGER.log(Level.INFO , (\"Food type Expense added: \") +","lastModifiedDate":"2023-11-06"},{"lineNumber":163,"author":{"gitId":"KenCheung18"},"content":"                        descriptionFromFile + \" with amount $ \" + amountFromFile);","lastModifiedDate":"2023-11-06"},{"lineNumber":164,"author":{"gitId":"KenCheung18"},"content":"                break;","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"KenCheung18"},"content":"            case \"ET\":","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"KenCheung18"},"content":"                expenses.add(new Transport(descriptionFromFile, dateFromFile,","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"KenCheung18"},"content":"                        amountFromFile, TransportationType.values()[expenseType]));","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"KenCheung18"},"content":"                LOGGER.log(Level.INFO , (\"Transport type Expense added: \") +","lastModifiedDate":"2023-11-06"},{"lineNumber":169,"author":{"gitId":"KenCheung18"},"content":"                        descriptionFromFile + \" with amount $ \" + amountFromFile);","lastModifiedDate":"2023-11-06"},{"lineNumber":170,"author":{"gitId":"KenCheung18"},"content":"                break;","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"KenCheung18"},"content":"            case \"EU\":","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"KenCheung18"},"content":"                expenses.add(new Utilities(descriptionFromFile, dateFromFile,","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"KenCheung18"},"content":"                        amountFromFile, UtilityType.values()[expenseType]));","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"KenCheung18"},"content":"                LOGGER.log(Level.INFO , (\"Utility type Expense added: \") +","lastModifiedDate":"2023-11-06"},{"lineNumber":175,"author":{"gitId":"KenCheung18"},"content":"                        descriptionFromFile + \" with amount $ \" + amountFromFile);","lastModifiedDate":"2023-11-06"},{"lineNumber":176,"author":{"gitId":"KenCheung18"},"content":"                break;","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"KenCheung18"},"content":"            default:","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"KenCheung18"},"content":"                System.out.println(\"The format of this line is incorrect \" + \"\\\"\" + textLine + \"\\\"\");","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"KenCheung18"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"KenCheung18"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.log(Level.WARNING, \"Details missed from the line of storage file \", e);","lastModifiedDate":"2023-11-06"},{"lineNumber":182,"author":{"gitId":"KenCheung18"},"content":"            System.out.println(INDEX_OUT_OF_BOUND_FROM_FILE_ERROR + \"\\\"\" + textLine + \"\\\"\");","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"KenCheung18"},"content":"        } catch (KaChinnnngException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.log(Level.WARNING, \"Invalid amount in the storage file \", e);","lastModifiedDate":"2023-11-06"},{"lineNumber":185,"author":{"gitId":"KenCheung18"},"content":"            System.out.println(AMOUNT_NOT_SUPPORT_ERROR + \"\\\"\" + textLine + \"\\\"\");","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"KenCheung18"},"content":"        } catch (DateTimeParseException e){","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.log(Level.WARNING, \"Invalid date format \", e);","lastModifiedDate":"2023-11-06"},{"lineNumber":188,"author":{"gitId":"KenCheung18"},"content":"            System.out.println(DATE_TIME_FORMAT_ERROR + \"\\\"\" + textLine + \"\\\"\");","lastModifiedDate":"2023-10-25"},{"lineNumber":189,"author":{"gitId":"KenCheung18"},"content":"        } catch(NumberFormatException e){","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.log(Level.WARNING, \"Non-integer for the expense type \", e);","lastModifiedDate":"2023-11-06"},{"lineNumber":191,"author":{"gitId":"KenCheung18"},"content":"            System.out.println(NUMBER_FROM_FILE_INCORRECT + \"\\\"\" + textLine + \"\\\"\");","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"KenCheung18"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"KenCheung18":194}},{"path":"src/main/java/seedu/duke/storage/SaveToTxt.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Food;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Utilities;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Transport;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"import java.io.File;","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":" * The SaveToTxt class is responsible for saving financial records data to a text file.","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":" * It can save both Income and Expense objects to the specified file.","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"KenCheung18"},"content":" *","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":" * This class handles exceptions for IO errors that may occur during file operations.","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"KenCheung18"},"content":"public class SaveToTxt {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"KenCheung18"},"content":"    private static final DecimalFormat df \u003d new DecimalFormat(\"0.00\");","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"KenCheung18"},"content":"    private static final String IO_ERROR_MESSAGE \u003d \"An error occurred while saving tasks to the file.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"    private static final String INCOME_FILE_ACCESS_MESSAGE \u003d \"Error accessing file to save incomes\" + \"You should \" +","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"KenCheung18"},"content":"            \"put the jar file in a folder with read and write access\";","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"KenCheung18"},"content":"    private static final String EXPENSE_FILE_ACCESS_MESSAGE \u003d \"Error accessing file to save expenses\" + \"You should \" +","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"KenCheung18"},"content":"            \"put the jar file in a folder with read and write access\";","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"KenCheung18"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(Parser.class.getName());","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"KenCheung18"},"content":"    private final String path;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"KenCheung18"},"content":"    static {","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"KenCheung18"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"KenCheung18"},"content":"            File dir \u003d new File(\"logs\");","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"KenCheung18"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"KenCheung18"},"content":"                if (!dir.mkdirs()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"KenCheung18"},"content":"                    throw new KaChinnnngException(\"Failed to create directory \" + dir.getAbsolutePath());","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"KenCheung18"},"content":"                }","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"KenCheung18"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"KenCheung18"},"content":"            FileHandler fh \u003d new FileHandler(\"logs/SaveToTxt.log\", true);","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"KenCheung18"},"content":"            SimpleFormatter formatter \u003d new SimpleFormatter();","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"KenCheung18"},"content":"            fh.setFormatter(formatter);","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.addHandler(fh);","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.setLevel(Level.ALL);","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.setUseParentHandlers(false);","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"KenCheung18"},"content":"        } catch (SecurityException se) {","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", se);","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"KenCheung18"},"content":"            System.err.println(\"Insufficient permissions to create logs directory. Please check your permissions or \" +","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"KenCheung18"},"content":"                    \"run the program in a different directory.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"KenCheung18"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.log(Level.SEVERE, \"Error creating log file\", e);","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"KenCheung18"},"content":"     * Construct a new object of the SaveToTxt class with the file path.","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"KenCheung18"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"KenCheung18"},"content":"     * @param path The path to the text file where data will be saved.","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"KenCheung18"},"content":"    public SaveToTxt(String path) {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"KenCheung18"},"content":"        assert path !\u003d null : \"incomes should not be null\";","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"KenCheung18"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"KenCheung18"},"content":"     * Saves both Income and Expense objects to the specified text file.","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"KenCheung18"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"KenCheung18"},"content":"     * @param incomes   The ArrayList of Income objects to save.","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"KenCheung18"},"content":"     * @param expenses  The ArrayList of Expense objects to save.","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"KenCheung18"},"content":"    public void saveIncomeAndExpense(ArrayList\u003cIncome\u003e incomes, ArrayList\u003cExpense\u003e expenses){","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"KenCheung18"},"content":"        assert incomes !\u003d null : \"incomes should not be null\";","lastModifiedDate":"2023-11-07"},{"lineNumber":79,"author":{"gitId":"KenCheung18"},"content":"        assert expenses !\u003d null : \"expenses should not be null\";","lastModifiedDate":"2023-11-07"},{"lineNumber":80,"author":{"gitId":"KenCheung18"},"content":"        saveIncomeToTextFile(incomes);","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"KenCheung18"},"content":"        saveExpenseToTextFile(expenses);","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"KenCheung18"},"content":"     * Saves Income objects to the text file. Each Income object is represented as a line in the txt file.","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"KenCheung18"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"KenCheung18"},"content":"     * @param incomes The ArrayList of Income objects to save.","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"KenCheung18"},"content":"     * @throws IOException If an IO error occurs during the file write operation.","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"KenCheung18"},"content":"    public void saveIncomeToTextFile(ArrayList\u003cIncome\u003e incomes)  {","lastModifiedDate":"2023-11-07"},{"lineNumber":91,"author":{"gitId":"KenCheung18"},"content":"        assert incomes !\u003d null : \"incomes should not be null\";","lastModifiedDate":"2023-11-07"},{"lineNumber":92,"author":{"gitId":"KenCheung18"},"content":"        try (FileWriter fw \u003d new FileWriter(path)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"KenCheung18"},"content":"            for (Income income : incomes) {","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"KenCheung18"},"content":"                String incomeDescription \u003d income.getDescription();","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"KenCheung18"},"content":"                String incomeDate \u003d String.valueOf(income.getDate());","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"KenCheung18"},"content":"                String incomeAmount \u003d df.format(income.getAmount());","lastModifiedDate":"2023-11-06"},{"lineNumber":97,"author":{"gitId":"KenCheung18"},"content":"                String textToAdd \u003d \"I\" + \" |de \" + incomeDescription + \" |amt \" + incomeAmount + \" |date \" +","lastModifiedDate":"2023-11-06"},{"lineNumber":98,"author":{"gitId":"KenCheung18"},"content":"                        incomeDate + \"\\n\";","lastModifiedDate":"2023-11-06"},{"lineNumber":99,"author":{"gitId":"KenCheung18"},"content":"                fw.write(textToAdd);","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"KenCheung18"},"content":"                LOGGER.log(Level.INFO , (\"Income added to file: \") +","lastModifiedDate":"2023-11-06"},{"lineNumber":101,"author":{"gitId":"KenCheung18"},"content":"                        incomeDescription + \" with amount $ \" + incomeAmount);","lastModifiedDate":"2023-11-06"},{"lineNumber":102,"author":{"gitId":"KenCheung18"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"KenCheung18"},"content":"        } catch (AccessDeniedException e){","lastModifiedDate":"2023-11-06"},{"lineNumber":104,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.log(Level.WARNING, \"No access to the folder\", e);","lastModifiedDate":"2023-11-07"},{"lineNumber":105,"author":{"gitId":"KenCheung18"},"content":"            System.out.println(INCOME_FILE_ACCESS_MESSAGE);","lastModifiedDate":"2023-11-06"},{"lineNumber":106,"author":{"gitId":"KenCheung18"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.log(Level.WARNING, \"Error while saving file \", e);","lastModifiedDate":"2023-11-07"},{"lineNumber":108,"author":{"gitId":"KenCheung18"},"content":"            System.out.println(IO_ERROR_MESSAGE);","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"KenCheung18"},"content":"     * Saves Expense objects to the text file. Each Expense object is represented as a line in the file,","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"KenCheung18"},"content":"     * and the type of Expense (Food, Transport, or Utilities) is specified in the line.","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"KenCheung18"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"KenCheung18"},"content":"     * @param expenses The ArrayList of Expense objects to save.","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"KenCheung18"},"content":"     * @throws IOException If an IO error occurs during the file write operation.","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"KenCheung18"},"content":"    public void saveExpenseToTextFile(ArrayList\u003cExpense\u003e expenses){","lastModifiedDate":"2023-11-07"},{"lineNumber":120,"author":{"gitId":"KenCheung18"},"content":"        assert expenses !\u003d null : \"expenses should not be null\";","lastModifiedDate":"2023-11-07"},{"lineNumber":121,"author":{"gitId":"KenCheung18"},"content":"        try (FileWriter fw \u003d new FileWriter(path, true)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"KenCheung18"},"content":"            for (Expense expense : expenses) {","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"KenCheung18"},"content":"                String textToAdd \u003d \"\";","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"KenCheung18"},"content":"                String expenseDescription \u003d expense.getDescription();","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"KenCheung18"},"content":"                String expenseDate \u003d String.valueOf(expense.getDate());;","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"KenCheung18"},"content":"                String expenseAmount \u003d df.format(expense.getAmount());","lastModifiedDate":"2023-11-06"},{"lineNumber":127,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"KenCheung18"},"content":"                // Determine the type of Expense and format the line accordingly","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"KenCheung18"},"content":"                if (expense.getClass() \u003d\u003d Food.class) {","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"KenCheung18"},"content":"                    textToAdd \u003d \"EF\" + \" |de \" + expenseDescription + \" |amt \" + expenseAmount + \" |date \"","lastModifiedDate":"2023-11-06"},{"lineNumber":131,"author":{"gitId":"KenCheung18"},"content":"                            + expenseDate + \" |type \" + ((Food) expense).getMealType().ordinal() + \"\\n\";","lastModifiedDate":"2023-11-06"},{"lineNumber":132,"author":{"gitId":"KenCheung18"},"content":"                } else if (expense.getClass() \u003d\u003d Transport.class) {","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"KenCheung18"},"content":"                    textToAdd \u003d \"ET\" + \" |de \" + expenseDescription + \" |amt \" + expenseAmount + \" |date \"","lastModifiedDate":"2023-11-06"},{"lineNumber":134,"author":{"gitId":"KenCheung18"},"content":"                            + expenseDate + \" |type \" + ((Transport) expense).getTransportationType().ordinal() + \"\\n\";","lastModifiedDate":"2023-11-06"},{"lineNumber":135,"author":{"gitId":"KenCheung18"},"content":"                } else if (expense.getClass() \u003d\u003d Utilities.class) {","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"KenCheung18"},"content":"                    textToAdd \u003d \"EU\" + \" |de \" + expenseDescription + \" |amt \" + expenseAmount + \" |date \"","lastModifiedDate":"2023-11-06"},{"lineNumber":137,"author":{"gitId":"KenCheung18"},"content":"                            + expenseDate + \" |type \" + ((Utilities) expense).getUtilityType().ordinal() + \"\\n\";","lastModifiedDate":"2023-11-06"},{"lineNumber":138,"author":{"gitId":"KenCheung18"},"content":"                }","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"KenCheung18"},"content":"                fw.write(textToAdd);","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"KenCheung18"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"KenCheung18"},"content":"        } catch (AccessDeniedException e){","lastModifiedDate":"2023-11-06"},{"lineNumber":142,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.log(Level.WARNING, \"Error accessing file \", e);","lastModifiedDate":"2023-11-06"},{"lineNumber":143,"author":{"gitId":"KenCheung18"},"content":"            System.out.println(EXPENSE_FILE_ACCESS_MESSAGE);","lastModifiedDate":"2023-11-06"},{"lineNumber":144,"author":{"gitId":"KenCheung18"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"KenCheung18"},"content":"            LOGGER.log(Level.WARNING, \"Error creating file \", e);","lastModifiedDate":"2023-11-06"},{"lineNumber":146,"author":{"gitId":"KenCheung18"},"content":"            System.out.println(IO_ERROR_MESSAGE);","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"KenCheung18"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"KenCheung18":149}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"import java.util.List;","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":" * This class handles the user interface of the program.","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"public class Ui {","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"    private static final String lineDivider \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"    public Scanner scanner;","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"     * Constructor for Ui.","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    public Ui() {","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"     * This method reads the command input by the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"     * @return String containing the command input by the user","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if there is no input provided by the user","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"    public String readCommand() throws KaChinnnngException {","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"        if (scanner.hasNextLine()) {","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"            return scanner.nextLine();","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"        } else {","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"            throw new KaChinnnngException(\"No input provided by the user.\");","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"     * This method prints the line divider.","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"    public static void showLineDivider() {","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"        System.out.println(lineDivider);","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"     * Prints the welcome message when the program starts.","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2023-10-09"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"        System.out.println(lineDivider);","lastModifiedDate":"2023-10-09"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Welcome to KaChinnnngggg! How may i assist you today?\");","lastModifiedDate":"2023-10-09"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"        System.out.println(lineDivider);","lastModifiedDate":"2023-10-09"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"     * Prints the goodbye message when the program ends.","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"    public void printGoodbyeMessage() {","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"        System.out.println(lineDivider);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-10-09"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"        System.out.println(lineDivider);","lastModifiedDate":"2023-10-09"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"     * prints the message when the user inputs his income","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"     * @param income Income object created from the provided fields","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"    public static void printIncomeAddedMessage(Income income) {","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"limyuhching"},"content":"        showLineDivider();","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Got it. I\u0027ve added this income:\\n\" + income.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"limyuhching"},"content":"        showLineDivider();","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"     * Prints a message indicating the start of the income list display.","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"    public void printListIncomeMessage() {","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"        System.out.println(\"Here are your incomes:\");","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"    public static void printExpenseAddedMessage(Expense expense) {","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"limyuhching"},"content":"        showLineDivider();","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Hongzhii"},"content":"        System.out.println(\"Got it. I\u0027ve added this expense:\\n\" + expense.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"limyuhching"},"content":"        showLineDivider();","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"Hongzhii"},"content":"    public void printListExpenseMessage() {","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"Hongzhii"},"content":"        System.out.println(\"Here are your expenses:\");","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"        System.out.println(message);","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"    public void showMatchingIncomes(List\u003cIncome\u003e matchingIncomes) {","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"        if(matchingIncomes \u003d\u003d null || matchingIncomes.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"            System.out.print(\"No matching incomes found.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"        } else {","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"            System.out.println(\"Here are the matching incomes in your list:\");","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"            for (Income income : matchingIncomes) {","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"                System.out.println(income.toString());","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"    public void showMatchingExpenses(List\u003cExpense\u003e matchingExpenses) {","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"        if (matchingExpenses \u003d\u003d null || matchingExpenses.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"            System.out.print(\"No matching expenses found.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"        } else {","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"            System.out.println(\"Here are the matching expenses in your list:\");","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"            for (Expense expense : matchingExpenses) {","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"                System.out.println(expense.toString());","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":116,"author":{"gitId":"limyuhching"},"content":"    public void showUpdateExchangeRateMessage(String currency, double rate) {","lastModifiedDate":"2023-11-06"},{"lineNumber":117,"author":{"gitId":"limyuhching"},"content":"        showLineDivider();","lastModifiedDate":"2023-11-06"},{"lineNumber":118,"author":{"gitId":"limyuhching"},"content":"        System.out.printf(\"The SGD/%s rate has been updated to %s.\\n\", currency, rate);","lastModifiedDate":"2023-11-06"},{"lineNumber":119,"author":{"gitId":"limyuhching"},"content":"        showLineDivider();","lastModifiedDate":"2023-11-06"},{"lineNumber":120,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":121,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"limyuhching":11,"bljhty":102,"Hongzhii":8}},{"path":"src/test/java/seedu/duke/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.io.File;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"class DukeTest {","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    Duke duke;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    void setUp() {","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"        duke \u003d new Duke();","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"    void loadData_noFileExists_createsFile() {","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"        File file \u003d new File(\"KaChinnnngggg.txt\");","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"            boolean isDeleted \u003d file.delete();","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"            assertTrue(isDeleted, \"File should have been deleted before the test.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"        duke.loadData();","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"        assertTrue(file.exists(), \"File should have been created\");","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"    void loadData_fileExists_loadsData() {","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"        File file \u003d new File(\"KaChinnnngggg.txt\");","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"            boolean isDeleted \u003d file.delete();","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"            assertTrue(isDeleted, \"File should have been deleted before the test.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"        duke.loadData();","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"        assertTrue(file.exists(), \"File should have been created\");","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"    void executeCommand_validCommand_noExceptionThrown() {","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"                duke.executeCommand(\"income /de Salary /date 12/10/2023 /amt 5000.00\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"    void executeCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"                duke.executeCommand(\"income /de Salary /date 12/10/2023 /amt 5000.00\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"    void executeCommand_addIncome_increasesSizeOfIncomeList() throws KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"        int initialSize \u003d duke.getIncomesSize();","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"        duke.executeCommand(\"add income /de Bonus /date 01/10/2023 /amt 1000.00\");","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"        assertEquals(initialSize + 1, duke.getIncomesSize());","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"    void addIncome_invalidIncome_exception() {","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"                duke.executeCommand(\"add income /de Bonus /date 01/10/2024 /amt 1000.00\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"    void executeCommand_addExpense_increasesSizeOfExpenseList() throws KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"        int initialSize \u003d duke.getExpensesSize();","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"        duke.executeCommand(\"add expense /cat food /type lunch\" +","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"                \" /de chicken sandwich /date 01/10/2023 /amt 10.00\");","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"        assertEquals(initialSize + 1, duke.getExpensesSize());","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"    void addExpense_invalidExpense_exception() {","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e duke.executeCommand(\"add expense /cat food /type lunch\" +","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"                \" /de chicken sandwich /date 01/10/2024 /amt 10.00\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"    void executeCommand_deleteIncome_decreasesSizeOfIncomeList() throws KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"        duke.executeCommand(\"add income /de Bonus /date 03/10/2023 /amt 1000.00\");","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"        int sizeAfterAddition \u003d duke.getIncomesSize();","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"        duke.executeCommand(\"delete income 1\");  // Assuming index 1 exists for this test","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"        assertEquals(sizeAfterAddition - 1, duke.getIncomesSize());","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"    void executeCommand_deleteExpense_decreasesSizeOfExpenseList() throws KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"        duke.executeCommand(\"add expense /cat food /type lunch\" +","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"                \" /de chicken sandwich /date 03/10/2023 /amt 10.00\");","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"        int sizeAfterAddition \u003d duke.getExpensesSize();","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"        duke.executeCommand(\"delete expense 1\");  // Assuming index 1 exists for this test","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"        assertEquals(sizeAfterAddition - 1, duke.getExpensesSize());","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":103,"author":{"gitId":"KenCheung18"},"content":"    void executeCommand_clearIncome_incomeListSizeBeZero() throws KaChinnnngException {","lastModifiedDate":"2023-11-07"},{"lineNumber":104,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"add income /de Bonus /date 03/10/2023 /amt 1000.00\");","lastModifiedDate":"2023-11-07"},{"lineNumber":105,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"add income /de Bonus /date 03/10/2023 /amt 1000.00\");","lastModifiedDate":"2023-11-07"},{"lineNumber":106,"author":{"gitId":"KenCheung18"},"content":"        int sizeAfterAddition \u003d duke.getIncomesSize();","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(2, sizeAfterAddition);","lastModifiedDate":"2023-11-07"},{"lineNumber":108,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"clear incomes\");  // Assuming clear income command called","lastModifiedDate":"2023-11-07"},{"lineNumber":109,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(0, duke.getExpensesSize());","lastModifiedDate":"2023-11-07"},{"lineNumber":110,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":111,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":112,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":113,"author":{"gitId":"KenCheung18"},"content":"    void executeCommand_clearExpense_expenseListSizeBeZero() throws KaChinnnngException {","lastModifiedDate":"2023-11-07"},{"lineNumber":114,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"add expense /cat food /type lunch\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":115,"author":{"gitId":"KenCheung18"},"content":"                \" /de chicken sandwich /date 03/10/2023 /amt 10.00\");","lastModifiedDate":"2023-11-07"},{"lineNumber":116,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"add expense /cat food /type lunch\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":117,"author":{"gitId":"KenCheung18"},"content":"                \" /de chicken sandwich /date 03/10/2023 /amt 10.00\");","lastModifiedDate":"2023-11-07"},{"lineNumber":118,"author":{"gitId":"KenCheung18"},"content":"        int sizeAfterAddition \u003d duke.getExpensesSize();","lastModifiedDate":"2023-11-07"},{"lineNumber":119,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(2, sizeAfterAddition);","lastModifiedDate":"2023-11-07"},{"lineNumber":120,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"clear expenses\");  // Assuming clear income command called","lastModifiedDate":"2023-11-07"},{"lineNumber":121,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(0, duke.getExpensesSize());","lastModifiedDate":"2023-11-07"},{"lineNumber":122,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":123,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":124,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":125,"author":{"gitId":"KenCheung18"},"content":"    void executeCommand_clearAll_bothExpenseAndIncomeListSizeBeZero() throws KaChinnnngException {","lastModifiedDate":"2023-11-07"},{"lineNumber":126,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"add income /de Bonus /date 03/10/2023 /amt 1000.00\");","lastModifiedDate":"2023-11-07"},{"lineNumber":127,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"add income /de Bonus /date 03/10/2023 /amt 1000.00\");","lastModifiedDate":"2023-11-07"},{"lineNumber":128,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"add expense /cat food /type lunch\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":129,"author":{"gitId":"KenCheung18"},"content":"                \" /de chicken sandwich /date 03/10/2023 /amt 10.00\");","lastModifiedDate":"2023-11-07"},{"lineNumber":130,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"add expense /cat food /type lunch\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":131,"author":{"gitId":"KenCheung18"},"content":"                \" /de chicken sandwich /date 03/10/2023 /amt 10.00\");","lastModifiedDate":"2023-11-07"},{"lineNumber":132,"author":{"gitId":"KenCheung18"},"content":"        int sizeAfterAddition \u003d duke.getExpensesSize() + duke.getIncomesSize();","lastModifiedDate":"2023-11-07"},{"lineNumber":133,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(4, sizeAfterAddition);","lastModifiedDate":"2023-11-07"},{"lineNumber":134,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"clear all\");  // Assuming clear income command called","lastModifiedDate":"2023-11-07"},{"lineNumber":135,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(0, duke.getExpensesSize());","lastModifiedDate":"2023-11-07"},{"lineNumber":136,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":137,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":138,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":139,"author":{"gitId":"KenCheung18"},"content":"    void executeCommand_allHelpFunction_makeSureCommandIsCorrectlyReturned() throws KaChinnnngException {","lastModifiedDate":"2023-11-07"},{"lineNumber":140,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"help\");                // If test case passed mean all the command being accepted","lastModifiedDate":"2023-11-07"},{"lineNumber":141,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"help add\");            // If one of the command not accepted then will throw","lastModifiedDate":"2023-11-07"},{"lineNumber":142,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"help delete\");         // KaChinnnngException","lastModifiedDate":"2023-11-07"},{"lineNumber":143,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"help list\");","lastModifiedDate":"2023-11-07"},{"lineNumber":144,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"help find\");","lastModifiedDate":"2023-11-07"},{"lineNumber":145,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"help edit\");","lastModifiedDate":"2023-11-07"},{"lineNumber":146,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"help update exchange rate\");","lastModifiedDate":"2023-11-07"},{"lineNumber":147,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"help clear\");","lastModifiedDate":"2023-11-07"},{"lineNumber":148,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"help balance\");","lastModifiedDate":"2023-11-07"},{"lineNumber":149,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"help exit\");","lastModifiedDate":"2023-11-07"},{"lineNumber":150,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":151,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":152,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":153,"author":{"gitId":"KenCheung18"},"content":"    void executeCommand_allListFunction_makeSureCommandIsCorrectlyParsed() throws KaChinnnngException {","lastModifiedDate":"2023-11-07"},{"lineNumber":154,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"list\");                // If test case passed mean all the command being accepted","lastModifiedDate":"2023-11-07"},{"lineNumber":155,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"list incomes\");         // If one of the command not accepted then will throw","lastModifiedDate":"2023-11-07"},{"lineNumber":156,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"list expenses\");        // KaChinnnngException","lastModifiedDate":"2023-11-07"},{"lineNumber":157,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"list currencies\");","lastModifiedDate":"2023-11-07"},{"lineNumber":158,"author":{"gitId":"KenCheung18"},"content":"        duke.executeCommand(\"list exchange rates\");","lastModifiedDate":"2023-11-07"},{"lineNumber":159,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":160,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"bljhty"},"content":"    void executeCommand_balance_correctOutput() throws KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"bljhty"},"content":"        // Backup the original system out","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"bljhty"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"bljhty"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"bljhty"},"content":"        PrintStream captureStream \u003d new PrintStream(outputStream);","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"bljhty"},"content":"        System.setOut(captureStream);","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"bljhty"},"content":"        // Assuming the list starts empty, and you add an income and an expense","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"bljhty"},"content":"        duke.executeCommand(\"add income /de Bonus /date 03/10/2023 /amt 1000.00\");","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"bljhty"},"content":"        duke.executeCommand(\"add expense /cat food /type lunch \" +","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"bljhty"},"content":"                \"/de chicken sandwich /date 01/10/2023 /amt 10.00\");","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"bljhty"},"content":"        // Clear the outputStream to only capture the balance output","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"bljhty"},"content":"        outputStream.reset();","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"bljhty"},"content":"        // Capture balance output","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"bljhty"},"content":"        duke.executeCommand(\"balance\");","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"bljhty"},"content":"        String balanceOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"bljhty"},"content":"        // The expected output based on the given additions","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"bljhty"},"content":"        String expectedBalanceOutput \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"bljhty"},"content":"                \"____________________________________________________________\" + System.lineSeparator() +","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"KenCheung18"},"content":"                        \"Balance: 990.00\" + System.lineSeparator() +","lastModifiedDate":"2023-11-06"},{"lineNumber":185,"author":{"gitId":"bljhty"},"content":"                        \"____________________________________________________________\";","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"bljhty"},"content":"        assertEquals(expectedBalanceOutput, balanceOutput);","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"bljhty"},"content":"        // Restore the original System.out","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"bljhty"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"bljhty":124,"KenCheung18":59,"-":9}},{"path":"src/test/java/seedu/duke/commands/BalanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":" * Tests for the {@link Balance} class.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":" * This test class provides test cases to check the calculation and reporting","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":" * of financial balance between income and expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"public class BalanceTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"    private ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    private ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"     * Sets up the test fixture.","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"     * Called before every test case method.","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"    public void setup() throws KaChinnnngException {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"        incomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"        expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"        incomes.add(new Income(\"Salary\", LocalDate.of(2023, 10, 10), 5000.0));","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"        incomes.add(new Income(\"Bonus\", LocalDate.of(2023, 10, 15), 1000.0));","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"        expenses.add(new Expense(\"Rent\", LocalDate.of(2023, 10, 5), 2000.0));","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"        expenses.add(new Expense(\"Groceries\", LocalDate.of(2023, 10, 7), 100.0));","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"     * Test the {@link Balance#getBalance()} method with both income and expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"     * This test case checks if the balance calculation correctly subtracts expenses from income.","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"    public void testGetBalance_withBothIncomeAndExpenses_returnsCorrectDifference() {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"        Balance balance \u003d new Balance(incomes, expenses);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"        assertEquals(3900.0, balance.getBalance());","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"     * Test the {@link Balance#getBalance()} method with no records.","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"     * This test case checks if the balance calculation correctly returns 0.","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"    public void testNoRecords() {","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"        Balance balance \u003d new Balance(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"        assertEquals(0, balance.getBalance(),","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"                \"Balance should be 0 when no records are present.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"     * Test the {@link Balance#getBalance()} method with no expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"     * This test case checks if the balance calculation correctly returns a positive value equal to income.","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"    public void testGetBalance_withNoExpenses_returnsIncomeValue()throws KaChinnnngException {","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"        ArrayList\u003cIncome\u003e incomesOnly \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"        incomesOnly.add(new Income(\"Salary\", LocalDate.of(2023, 10, 10), 5000.0));","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"        Balance balance \u003d new Balance(incomesOnly, new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"        assertEquals(5000.0, balance.getBalance(),","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"                \"Balance should equal sum of all incomes when no expenses are present.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"     * Test the {@link Balance#getBalance()} method with no incomes.","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"     * This test case checks if the balance calculation correctly returns a negative value equal to expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"    public void testGetBalance_withNoIncomes_returnsNegativeExpenseValue()throws KaChinnnngException {","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"        ArrayList\u003cExpense\u003e expensesOnly \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"        expensesOnly.add(new Expense(\"Rent\", LocalDate.of(2023, 10, 5), 2000.0));","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"        Balance balance \u003d new Balance(new ArrayList\u003c\u003e(), expensesOnly);","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"        assertEquals(-2000.0, balance.getBalance(),","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"                \"Balance should be negative sum of all expenses when no incomes are present.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"bljhty":85}},{"path":"src/test/java/seedu/duke/commands/ClearAllTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":" * Tests for the {@link ClearAll} class.","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":" * This test class provides test cases to check the deletion of records in","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":" * both incomes and expenses record list","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"public class ClearAllTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"    private ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"    private ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"     * Sets up the test fixture.","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":"     * Called before every test case method.","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":"    public void setup() throws KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"KenCheung18"},"content":"        incomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"KenCheung18"},"content":"        expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"        incomes.add(new Income(\"Salary\", LocalDate.of(2023, 10, 10),","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"KenCheung18"},"content":"                5000.0));","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"KenCheung18"},"content":"        incomes.add(new Income(\"Bonus\", LocalDate.of(2023, 10, 15),","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"KenCheung18"},"content":"                1000.0));","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"KenCheung18"},"content":"        expenses.add(new Expense(\"Rent\", LocalDate.of(2023, 10, 5),","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"KenCheung18"},"content":"                2000.0));","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"KenCheung18"},"content":"        expenses.add(new Expense(\"Groceries\", LocalDate.of(2023, 10, 7),","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"KenCheung18"},"content":"                100.0));","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"KenCheung18"},"content":"     * Test the {@link ClearAll#clearAllIncomeAndExpense()} method with both incomes and expenses.","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"KenCheung18"},"content":"     * This test case checks if the clear all function correctly delete all the record in the income and expenses list.","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"KenCheung18"},"content":"    public void testClearAll_withIncomesAndExpenses() {","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cIncome\u003e testIncomes \u003d new ArrayList\u003c\u003e(incomes);","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cExpense\u003e testExpenses \u003d new ArrayList\u003c\u003e(expenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"KenCheung18"},"content":"        ClearAll clearAll \u003d new ClearAll(testIncomes, testExpenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"KenCheung18"},"content":"        clearAll.clearAllIncomeAndExpense();","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(0, testIncomes.size());","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(0, testExpenses.size());","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"KenCheung18"},"content":"     * Test the {@link ClearAll#clearAllIncomeAndExpense()} method with only incomes but not expenses.","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"KenCheung18"},"content":"     * This test case checks if the clear all function correctly","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"KenCheung18"},"content":"     * delete all the record in the both list without error.","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"KenCheung18"},"content":"    public void testClearAll_withIncomesNoExpenses() {","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cIncome\u003e testIncomes \u003d new ArrayList\u003c\u003e(incomes);","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cExpense\u003e testExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"KenCheung18"},"content":"        ClearAll clearAll \u003d new ClearAll(testIncomes, testExpenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"KenCheung18"},"content":"        clearAll.clearAllIncomeAndExpense();","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(0, testIncomes.size());","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(0, testExpenses.size());","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"KenCheung18"},"content":"     * Test the {@link ClearAll#clearAllIncomeAndExpense()} method with only expenses but no incomes.","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"KenCheung18"},"content":"     * This test case checks if the clear all function correctly","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"KenCheung18"},"content":"     * delete all the record in the both list without error.","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"KenCheung18"},"content":"    public void testClearAll_withExpensesNoIncomes() {","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cIncome\u003e testIncomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cExpense\u003e testExpenses \u003d new ArrayList\u003c\u003e(expenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"KenCheung18"},"content":"        ClearAll clearAll \u003d new ClearAll(testIncomes, testExpenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"KenCheung18"},"content":"        clearAll.clearAllIncomeAndExpense();","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(0, testIncomes.size());","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(0, testExpenses.size());","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"KenCheung18"},"content":"     * Test the {@link ClearAll#clearAllIncomeAndExpense()} method with no records.","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"KenCheung18"},"content":"     * This test case checks if there is an empty list, whether clear income function will still process correctly","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"KenCheung18"},"content":"    public void testNoIncomesAndExpenses() {","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cIncome\u003e testIncomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cExpense\u003e testExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"KenCheung18"},"content":"        ClearAll clearAll \u003d new ClearAll(testIncomes, testExpenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"KenCheung18"},"content":"        clearAll.clearAllIncomeAndExpense();","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(0, testIncomes.size());","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(0, testExpenses.size());","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"KenCheung18"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"KenCheung18":99}},{"path":"src/test/java/seedu/duke/commands/ClearExpensesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":" * Tests for the {@link ClearExpenses} class.","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":" * This test class provides test cases to check the deletion of records in","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":" * expenses record list","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":"public class ClearExpensesTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"    private ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":"     * Sets up the test fixture.","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":"     * Called before every test case method.","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"KenCheung18"},"content":"    public void setup() throws KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":"        expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"KenCheung18"},"content":"        expenses.add(new Expense(\"Rent\", LocalDate.of(2023, 10, 5), 2000.0));","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"KenCheung18"},"content":"        expenses.add(new Expense(\"Groceries\", LocalDate.of(2023, 10, 7),","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"KenCheung18"},"content":"                100.0));","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"KenCheung18"},"content":"     * Test the {@link ClearExpenses#clearAllExpenses()} method with expenses.","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"KenCheung18"},"content":"     * This test case checks if the clear incomes function correctly delete all the record in the income list.","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"KenCheung18"},"content":"    public void testClearExpenses_withExpenses() {","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cExpense\u003e testExpenses \u003d new ArrayList\u003c\u003e(expenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"KenCheung18"},"content":"        ClearExpenses clearExpenses \u003d new ClearExpenses(testExpenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"KenCheung18"},"content":"        clearExpenses.clearAllExpenses();","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(0, testExpenses.size());","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"KenCheung18"},"content":"    public void testClearExpenses_whenPassNullArrayList() {","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"KenCheung18"},"content":"        ClearExpenses clearExpenses;","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"KenCheung18"},"content":"        assertThrows(AssertionError.class, () -\u003e new ClearExpenses(null));","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"KenCheung18"},"content":"     * Test the {@link ClearExpenses#clearAllExpenses()} method with no records.","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"KenCheung18"},"content":"     * This test case checks if there is an empty list, whether clear income function will still process correctly","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"KenCheung18"},"content":"    public void testNoExpenses() throws KaChinnnngException{","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cExpense\u003e testExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"KenCheung18"},"content":"        ClearExpenses clearExpenses \u003d new ClearExpenses(testExpenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"KenCheung18"},"content":"        clearExpenses.clearAllExpenses();","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(0, testExpenses.size());","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"KenCheung18"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"KenCheung18":63}},{"path":"src/test/java/seedu/duke/commands/ClearIncomesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":" * Tests for the {@link ClearAll} class.","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":" * This test class provides test cases to check the deletion of records in","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":" * both incomes and expenses record list","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":"public class ClearIncomesTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":"    private ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"    private ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":"     * Sets up the test fixture.","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":"     * Called before every test case method.","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"KenCheung18"},"content":"    public void setup() throws KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":"        incomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"KenCheung18"},"content":"        incomes.add(new Income(\"Salary\", LocalDate.of(2023, 10, 10), 5000.0));","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"KenCheung18"},"content":"        incomes.add(new Income(\"Bonus\", LocalDate.of(2023, 10, 15), 1000.0));","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"KenCheung18"},"content":"     * Test the {@link ClearIncomes#clearAllIncomes()} method with incomes.","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"KenCheung18"},"content":"     * This test case checks if the clear incomes function correctly delete all the record in the income list.","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"KenCheung18"},"content":"    public void testClearIncome_withIncomes() {","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cIncome\u003e testIncome \u003d new ArrayList\u003c\u003e(incomes);","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"KenCheung18"},"content":"        ClearIncomes clearTestIncome \u003d new ClearIncomes(testIncome);","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"KenCheung18"},"content":"        clearTestIncome.clearAllIncomes();","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(0, testIncome.size());","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"KenCheung18"},"content":"     * Test the {@link ClearIncomes#clearAllIncomes()} method with no records.","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"KenCheung18"},"content":"     * This test case checks if there is an empty list, whether clear income function will still process correctly","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"KenCheung18"},"content":"    public void testNoIncomes() {","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cIncome\u003e testIncome \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"KenCheung18"},"content":"        ClearIncomes clearTestIncome \u003d new ClearIncomes(testIncome);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"KenCheung18"},"content":"        clearTestIncome.clearAllIncomes();","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(0, testIncome.size());","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"KenCheung18"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"KenCheung18":57}},{"path":"src/test/java/seedu/duke/commands/DeleteExpenseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":" * This class contains JUnit tests for the DeleteExpenseCommand class.","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"public class DeleteExpenseCommandTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"    private DeleteExpenseCommand deleteExpenseCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"    private Ui ui;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"    private ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"        deleteExpenseCommand \u003d new DeleteExpenseCommand();","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"        expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"     * Test the execution of the DeleteExpenseCommand with valid input. The expense should be deleted.","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_validInput_expenseDeleted() throws KaChinnnngException {","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"        // Arrange","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"        Expense expense \u003d new Expense(\"Lunch\", LocalDate.now().minusDays(1), 20.00);","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"        expenses.add(expense);","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"        String fullCommand \u003d \"delete expense 1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"        // Act","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"KenCheung18"},"content":"        assertDoesNotThrow(() -\u003e deleteExpenseCommand.execute(expenses, fullCommand, ui));","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"        // Assert","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"        assertEquals(0, expenses.size());","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"limyuhching"},"content":"     * Test the execution of the DeleteExpenseCommand with missing arguments. It should throw a KaChinnnngException.","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_missingArgument_exceptionThrown() {","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"        // Arrange","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"        String fullCommand \u003d \"delete expense\";","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"        // Act and Assert","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"KenCheung18"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e deleteExpenseCommand.execute(expenses, fullCommand, ui));","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"limyuhching"},"content":"     * Test the execution of the DeleteExpenseCommand with an invalid index. It should throw a KaChinnnngException.","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"limyuhching"},"content":"        // Arrange","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"limyuhching"},"content":"        String fullCommand \u003d \"delete expense 1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"limyuhching"},"content":"        // Act and Assert","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"KenCheung18"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e deleteExpenseCommand.execute(expenses, fullCommand, ui));","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"limyuhching"},"content":"     * Test the execution of the DeleteExpenseCommand with a non-existent expense index.","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"limyuhching"},"content":"     * It should throw a KaChinnnngException.","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_nonExistentExpenseIndex_exceptionThrown() {","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"limyuhching"},"content":"        // Arrange","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"limyuhching"},"content":"        String fullCommand \u003d \"delete expense 1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"limyuhching"},"content":"        // Act and Assert","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"KenCheung18"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e deleteExpenseCommand.execute(expenses, fullCommand, ui));","lastModifiedDate":"2023-11-07"},{"lineNumber":81,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"limyuhching":78,"KenCheung18":4}},{"path":"src/test/java/seedu/duke/commands/DeleteIncomeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":" * This class contains JUnit tests for the DeleteIncomeCommand class.","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"public class DeleteIncomeCommandTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"    private DeleteIncomeCommand deleteIncomeCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"    private Ui ui;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"    private ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"        deleteIncomeCommand \u003d new DeleteIncomeCommand();","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"        incomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"     * Test the execution of the DeleteIncomeCommand with valid input. The income should be deleted.","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_validInput_incomeDeleted() throws KaChinnnngException {","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"        // Arrange","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"        Income income \u003d new Income(\"Salary\",","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"                LocalDate.of(2023, 10, 12), 5000.00);","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"        incomes.add(income);","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"        String fullCommand \u003d \"delete income 1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"        // Act","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"KenCheung18"},"content":"        assertDoesNotThrow(() -\u003e deleteIncomeCommand.execute(incomes, fullCommand, ui));","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"        // Assert","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"        assertEquals(0, incomes.size());","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"     * Test the execution of the DeleteIncomeCommand with missing arguments. It should throw a KaChinnnngException.","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_missingArgument_exceptionThrown() {","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"        // Arrange","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"        String fullCommand \u003d \"delete income\";","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"        // Act and Assert","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"KenCheung18"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e deleteIncomeCommand.execute(incomes, fullCommand, ui));","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"limyuhching"},"content":"     * Test the execution of the DeleteIncomeCommand with an invalid index. It should throw a KaChinnnngException.","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"limyuhching"},"content":"        // Arrange","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"limyuhching"},"content":"        String fullCommand \u003d \"delete income 1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"limyuhching"},"content":"        // Act and Assert","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"KenCheung18"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e deleteIncomeCommand.execute(incomes, fullCommand, ui));","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"limyuhching"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"limyuhching"},"content":"     * Test the execution of the DeleteIncomeCommand with a non-existent income index.","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"limyuhching"},"content":"     * It should throw a KaChinnnngException.","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"limyuhching"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_nonExistentIncomeIndex_exceptionThrown() {","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"limyuhching"},"content":"        // Arrange","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"limyuhching"},"content":"        String fullCommand \u003d \"delete income 1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"limyuhching"},"content":"        // Act and Assert","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"KenCheung18"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e deleteIncomeCommand.execute(incomes, fullCommand, ui));","lastModifiedDate":"2023-11-07"},{"lineNumber":82,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"limyuhching":79,"KenCheung18":4}},{"path":"src/test/java/seedu/duke/commands/EditExpenseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"public class EditExpenseCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"    private ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"    private String fullCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"    public void setUp() throws KaChinnnngException {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"        // Initialize the expenses and fullCommand for testing","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"        expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"        expenses.add(new Expense(\"Rent\", LocalDate.of(2023, 10, 5), 2000.0));","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"        expenses.add(new Expense(\"Groceries\", LocalDate.of(2023, 10, 7), 100.0));","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_invalidIndex_exceptionThrown() throws KaChinnnngException {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Hongzhii"},"content":"        fullCommand \u003d \"edit expense 3 expense /cat food /type lunch /de chicken sandwich /date 01/10/2023 /amt 10.00\";","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"        EditExpenseCommand editExpenseCommand \u003d new EditExpenseCommand(expenses, fullCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"            // This test checks if the execute method throws an exception when the index is out of bounds","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"            editExpenseCommand.execute();","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"        });","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_validInput_expenseEdited() throws KaChinnnngException {","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Hongzhii"},"content":"        fullCommand \u003d \"edit expense 1 expense /cat food /type lunch /de chicken rice /date 01/10/2023 /amt 10.00\";","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"        EditExpenseCommand editExpenseCommand \u003d new EditExpenseCommand(expenses, fullCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"        // Test if the execute method changes the expense and prints the changes","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"        assertDoesNotThrow(() -\u003e editExpenseCommand.execute());","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"        // Verify if the expense was updated correctly","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"        Expense updatedExpense \u003d expenses.get(0);","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Hongzhii"},"content":"        assertEquals(\"Food Expense (LUNCH): chicken rice | Date: 01/Oct/2023 | Amount: $10.00\",","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Hongzhii"},"content":"                updatedExpense.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_invalidExpense_exceptionThrown() throws KaChinnnngException {","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"        // Test if execute method throws a KaChinnnngException for an invalid command","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"        fullCommand \u003d \"edit expense 1 invalid expense command\";","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"        EditExpenseCommand editExpenseCommand \u003d new EditExpenseCommand(expenses, fullCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e editExpenseCommand.execute());","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"limyuhching":54,"Hongzhii":4}},{"path":"src/test/java/seedu/duke/commands/EditIncomeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"public class EditIncomeCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"    private EditIncomeCommand editIncomeCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"    private ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"    private String fullCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"    public void setUp() throws KaChinnnngException {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"        // Initialize the incomes and fullCommand for testing","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"        incomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"        incomes.add(new Income(\"Salary\", LocalDate.of(2023, 10, 10), 5000.0));","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"        incomes.add(new Income(\"Bonus\", LocalDate.of(2023, 10, 15), 1000.0));","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_invalidIndex_exceptionThrown() throws KaChinnnngException {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"        fullCommand \u003d \"edit income 3 income /de salary for October /date 01/10/2023 /amt 5000.00\";","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"        editIncomeCommand \u003d new EditIncomeCommand(incomes, fullCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"            // This test checks if the execute method throws an exception when the index is out of bounds","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"            editIncomeCommand.execute();","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"        });","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_validInput_incomeEdited() throws KaChinnnngException {","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"        fullCommand \u003d \"edit income 1 income /de salary for October /date 01/10/2023 /amt 5000.00\";","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"        editIncomeCommand \u003d new EditIncomeCommand(incomes, fullCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"        // Test if the execute method changes the income and prints the changes","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"        assertDoesNotThrow(() -\u003e editIncomeCommand.execute());","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"        // Verify if the income was updated correctly","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"limyuhching"},"content":"        Income updatedincome \u003d incomes.get(0);","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"        assertEquals(\"Income: salary for October | Date: 01/Oct/2023 | Amount: $5000.00\",","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"                updatedincome.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"    public void testExecute_invalidIncome_exceptionThrown() throws KaChinnnngException {","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"        // Test if execute method throws a KaChinnnngException for an invalid command","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"        fullCommand \u003d \"edit income 1 invalid income command\";","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"        editIncomeCommand \u003d new EditIncomeCommand(incomes, fullCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e editIncomeCommand.execute());","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"limyuhching":59}},{"path":"src/test/java/seedu/duke/commands/ExpenseManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hongzhii"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Hongzhii"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Hongzhii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Hongzhii"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Hongzhii"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Hongzhii"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Hongzhii"},"content":"public class ExpenseManagerTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Hongzhii"},"content":"    private ExpenseManager expenseManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Hongzhii"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Hongzhii"},"content":"    public void setUp() throws KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Hongzhii"},"content":"        // Initialize the expense manager","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Hongzhii"},"content":"        expenseManager \u003d new ExpenseManager(\"/cat food /type lunch /de chicken rice \" +","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Hongzhii"},"content":"                \"/date 01/01/2001 /amt 100\");","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Hongzhii"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Hongzhii"},"content":"    public void testConstructor_objectCreated() {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Hongzhii"},"content":"        assertNotNull(expenseManager);","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Hongzhii"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Hongzhii"},"content":"    public void testExecute_getNewExpense() throws KaChinnnngException{","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Hongzhii"},"content":"        expenseManager.execute();","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Hongzhii"},"content":"        Expense expense \u003d expenseManager.getNewExpense();","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Hongzhii"},"content":"        assertNotNull(expense);","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Hongzhii"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Hongzhii"},"content":"    public void testExecute_missingFields_exceptionThrown() {","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Hongzhii"},"content":"        ExpenseManager expenseManagerMissingFields \u003d new ExpenseManager(\"/type lunch /de chicken rice \" +","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Hongzhii"},"content":"                \"/date 01/01/2001 /amt 100\");","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Hongzhii"},"content":"        assertThrows(KaChinnnngException.class, expenseManagerMissingFields::execute);","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Hongzhii"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Hongzhii"},"content":"    public void testExecute_extraFields_exceptionThrown() {","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Hongzhii"},"content":"        ExpenseManager expenseManagerExtraFields \u003d new ExpenseManager(\"/cat food /type lunch \" +","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Hongzhii"},"content":"                \"/de chicken rice /date 01/01/2001 /amt 100 /extra extra\");","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Hongzhii"},"content":"        assertThrows(KaChinnnngException.class, expenseManagerExtraFields::execute);","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Hongzhii"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Hongzhii"},"content":"    public void testExecute_wrongOrder_exceptionThrown() {","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Hongzhii"},"content":"        ExpenseManager expenseManagerWrongOrder \u003d new ExpenseManager(\"/type lunch /cat food \" +","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Hongzhii"},"content":"                \"/de chicken rice /date 01/01/2001 /amt 100\");","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Hongzhii"},"content":"        assertThrows(KaChinnnngException.class, expenseManagerWrongOrder::execute);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Hongzhii"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Hongzhii"},"content":"    public void testExecute_upperAndLowerCase_correctParsing() {","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Hongzhii"},"content":"        ExpenseManager expenseManagerUpperLowerCase \u003d new ExpenseManager(\"/cat fOoD /type lUNcH \" +","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Hongzhii"},"content":"                \"/de chicken rice /date 01/01/2001 /amt 100\");","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Hongzhii"},"content":"        assertNotNull(expenseManagerUpperLowerCase);","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Hongzhii"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"Hongzhii"},"content":"    public void testExecute_invalidDate_exceptionThrown() {","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Hongzhii"},"content":"        ExpenseManager expenseManagerInvalidDate \u003d new ExpenseManager(\"/cat food /type lunch \" +","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"Hongzhii"},"content":"                \"/de chicken rice /date 13/13/2000 /amt 100\");","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"Hongzhii"},"content":"        assertThrows(KaChinnnngException.class, expenseManagerInvalidDate::execute);","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"Hongzhii"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"Hongzhii"},"content":"    public void testExecute_incorrectDateFormat_exceptionThrown() {","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Hongzhii"},"content":"        ExpenseManager expenseManagerIncorrectDateFormat \u003d new ExpenseManager(\"/cat food /type lunch\" +","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Hongzhii"},"content":"                \"/de chicken rice /date 01-01-2003 /amt 100\");","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Hongzhii"},"content":"        assertThrows(KaChinnnngException.class, expenseManagerIncorrectDateFormat::execute);","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"Hongzhii"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Hongzhii"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"Hongzhii"},"content":"    public void testExecute_incorrectAmountFormat_exceptionThrown() {","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"Hongzhii"},"content":"        ExpenseManager expenseManagerIncorrectAmountFormat \u003d new ExpenseManager(\"/cat food /type lunch\" +","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"Hongzhii"},"content":"                \"/de chicken rice /date 01/01/2003 /amt one hundred\");","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"Hongzhii"},"content":"        assertThrows(KaChinnnngException.class, expenseManagerIncorrectAmountFormat::execute);","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Hongzhii"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Hongzhii"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Hongzhii":85}},{"path":"src/test/java/seedu/duke/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Food;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Transport;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Utilities;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.expensetypes.MealType;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.expensetypes.TransportationType;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.expensetypes.UtilityType;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"import seedu.duke.ui.MockUi;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"public class FindCommandTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"    private ArrayList\u003cIncome\u003e testIncomes;","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"    private ArrayList\u003cExpense\u003e testExpenses;","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"    private MockUi mockUi;","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"    void setUp() {","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"        testIncomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"        testExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"        mockUi \u003d new MockUi(); // Assuming MockUi has a parameterless constructor.","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"    void testValidFindCommandExpenseByCategory() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"        Food foodExpense \u003d new Food(\"Burger\",","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"                LocalDate.of(2023, 10, 10), 5.0, MealType.LUNCH);","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(foodExpense);","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"        FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses, \"expense\", \"Food\",","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"                null, null, mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"        findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"        String expectedOutput \u003d \"[Food Expense (LUNCH): Burger | Date: 10/Oct/2023 | Amount: $5.00]\";","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"        assertEquals(expectedOutput, mockUi.getShowExpenses().get(0));","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"    void testValidFindCommandExpenseByDescription() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"        Food foodExpense \u003d new Food(\"Burger\",","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"                LocalDate.of(2023, 10, 10), 5.0, MealType.LUNCH);","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(foodExpense);","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"        FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses, \"expense\", null,","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"                \"Burger\", null, mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"        findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"        String expectedOutput \u003d \"[Food Expense (LUNCH): Burger | Date: 10/Oct/2023 | Amount: $5.00]\";","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"        assertEquals(expectedOutput, mockUi.getShowExpenses().get(0));","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"    void testValidFindCommandExpenseByDate() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"        Food foodExpense \u003d new Food(\"Burger\",","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"                LocalDate.of(2023, 10, 10), 5.0, MealType.LUNCH);","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(foodExpense);","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"        FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses, \"expense\", null,","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"                null, \"10/Oct/2023\", mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"        findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"        String expectedOutput \u003d \"[Food Expense (LUNCH): Burger | Date: 10/Oct/2023 | Amount: $5.00]\";","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"        assertEquals(expectedOutput, mockUi.getShowExpenses().get(0));","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"    void testValidFindCommandExpenseByMonth() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"        // Adding multiple expenses in October","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"        Food foodExpense1 \u003d new Food(\"Burger\", LocalDate.of(2023, 10, 10), 5.0, MealType.LUNCH);","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"        Food foodExpense2 \u003d new Food(\"Pizza\", LocalDate.of(2023, 10, 15), 8.0, MealType.DINNER);","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"        Food foodExpense3 \u003d new Food(\"Sandwich\", LocalDate.of(2023, 10, 28), 3.0, MealType.BREAKFAST);","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"        // Adding an expense from another month for control","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"        Food foodExpenseOutsideMonth \u003d new Food(\"Salad\", LocalDate.of(2023, 9, 30), 4.0, MealType.DINNER);","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(foodExpense1);","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(foodExpense2);","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(foodExpense3);","lastModifiedDate":"2023-10-29"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(foodExpenseOutsideMonth);","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"        FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses, \"expense\", null, null, \"Oct/2023\", mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"        findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"        String expectedOutput \u003d \"[Food Expense (LUNCH): Burger | Date: 10/Oct/2023 | Amount: $5.00, \"","lastModifiedDate":"2023-10-29"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"                + \"Food Expense (DINNER): Pizza | Date: 15/Oct/2023 | Amount: $8.00, \"","lastModifiedDate":"2023-10-29"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"                + \"Food Expense (BREAKFAST): Sandwich | Date: 28/Oct/2023 | Amount: $3.00]\";","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"        assertEquals(expectedOutput, mockUi.getShowExpenses().get(0));","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"    void testValidFindCommandExpenseByDate2() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"        Food foodExpense \u003d new Food(\"Burger\",","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"                LocalDate.of(2023, 10, 10), 5.0, MealType.LUNCH);","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(foodExpense);","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"        FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses, \"expense\", null,","lastModifiedDate":"2023-10-29"},{"lineNumber":115,"author":{"gitId":"bljhty"},"content":"                null, \"10/10/2023\", mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":117,"author":{"gitId":"bljhty"},"content":"        findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":118,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"bljhty"},"content":"        String expectedOutput \u003d \"[Food Expense (LUNCH): Burger | Date: 10/Oct/2023 | Amount: $5.00]\";","lastModifiedDate":"2023-10-29"},{"lineNumber":120,"author":{"gitId":"bljhty"},"content":"        assertEquals(expectedOutput, mockUi.getShowExpenses().get(0));","lastModifiedDate":"2023-10-29"},{"lineNumber":121,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":122,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":123,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":124,"author":{"gitId":"bljhty"},"content":"    void testMultipleMatchingExpenses() throws Exception{","lastModifiedDate":"2023-10-29"},{"lineNumber":125,"author":{"gitId":"bljhty"},"content":"        Food foodExpense1 \u003d new Food (\"Burger\",","lastModifiedDate":"2023-10-29"},{"lineNumber":126,"author":{"gitId":"bljhty"},"content":"                LocalDate.of(2023, 10, 10), 5.0, MealType.LUNCH);","lastModifiedDate":"2023-10-29"},{"lineNumber":127,"author":{"gitId":"bljhty"},"content":"        Food foodExpense2 \u003d new Food (\"Burger\",","lastModifiedDate":"2023-10-29"},{"lineNumber":128,"author":{"gitId":"bljhty"},"content":"                LocalDate.of(2023,10,11), 5.0, MealType.DINNER);","lastModifiedDate":"2023-10-29"},{"lineNumber":129,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(foodExpense1);","lastModifiedDate":"2023-10-29"},{"lineNumber":130,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(foodExpense2);","lastModifiedDate":"2023-10-29"},{"lineNumber":131,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":132,"author":{"gitId":"bljhty"},"content":"        FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses, \"expense\", null,","lastModifiedDate":"2023-10-29"},{"lineNumber":133,"author":{"gitId":"bljhty"},"content":"                \"Burger\", null, mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"        findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":135,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"        String expectedOutput \u003d \"[Food Expense (LUNCH): Burger | Date: 10/Oct/2023 | Amount: $5.00, \"","lastModifiedDate":"2023-10-29"},{"lineNumber":137,"author":{"gitId":"bljhty"},"content":"                + \"Food Expense (DINNER): Burger | Date: 11/Oct/2023 | Amount: $5.00]\";","lastModifiedDate":"2023-10-29"},{"lineNumber":138,"author":{"gitId":"bljhty"},"content":"        assertEquals(expectedOutput, mockUi.getShowExpenses().get(0));","lastModifiedDate":"2023-10-29"},{"lineNumber":139,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":140,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":141,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":142,"author":{"gitId":"bljhty"},"content":"    void testNoMatchingExpenses() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":143,"author":{"gitId":"bljhty"},"content":"        FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses, \"expense\", null,","lastModifiedDate":"2023-10-29"},{"lineNumber":144,"author":{"gitId":"bljhty"},"content":"                \"NonexistentItem\", null, mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":145,"author":{"gitId":"bljhty"},"content":"        findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":146,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":147,"author":{"gitId":"bljhty"},"content":"        assertTrue(mockUi.getPrintedMessages().contains(\"No matching expenses found.\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":148,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":149,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":150,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":151,"author":{"gitId":"bljhty"},"content":"    void testInvalidDateFormat() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":152,"author":{"gitId":"bljhty"},"content":"        Food foodExpense \u003d new Food(\"Burger\", LocalDate.of(2023, 10, 10), 5.0, MealType.LUNCH);","lastModifiedDate":"2023-10-29"},{"lineNumber":153,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(foodExpense);","lastModifiedDate":"2023-10-29"},{"lineNumber":154,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":155,"author":{"gitId":"bljhty"},"content":"        Exception exception \u003d assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":156,"author":{"gitId":"bljhty"},"content":"            FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses, \"expense\", null,","lastModifiedDate":"2023-10-29"},{"lineNumber":157,"author":{"gitId":"bljhty"},"content":"                    null, \"20231010\", mockUi);  // Invalid date format","lastModifiedDate":"2023-10-29"},{"lineNumber":158,"author":{"gitId":"bljhty"},"content":"            findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":159,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-29"},{"lineNumber":160,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":161,"author":{"gitId":"bljhty"},"content":"        assertTrue(exception.getMessage().contains(\"Invalid date format.\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":162,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":163,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":164,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":165,"author":{"gitId":"bljhty"},"content":"    void testNullValues() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":166,"author":{"gitId":"bljhty"},"content":"        Food foodExpense \u003d new Food(\"Burger\", LocalDate.of(2023, 10, 10), 5.0, MealType.LUNCH);","lastModifiedDate":"2023-10-29"},{"lineNumber":167,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(foodExpense);","lastModifiedDate":"2023-10-29"},{"lineNumber":168,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":169,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":170,"author":{"gitId":"bljhty"},"content":"            FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses,","lastModifiedDate":"2023-10-29"},{"lineNumber":171,"author":{"gitId":"bljhty"},"content":"                    null, null, null, null, mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":172,"author":{"gitId":"bljhty"},"content":"            findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":173,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-29"},{"lineNumber":174,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":175,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":176,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":177,"author":{"gitId":"bljhty"},"content":"    void testValidFindCommandIncomeByDescription() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":178,"author":{"gitId":"bljhty"},"content":"        Income income \u003d new Income(\"Salary\", LocalDate.of(2023, 10, 10), 5000.0);","lastModifiedDate":"2023-10-29"},{"lineNumber":179,"author":{"gitId":"bljhty"},"content":"        testIncomes.add(income);","lastModifiedDate":"2023-10-29"},{"lineNumber":180,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":181,"author":{"gitId":"bljhty"},"content":"        FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses, \"income\", null,","lastModifiedDate":"2023-10-29"},{"lineNumber":182,"author":{"gitId":"bljhty"},"content":"                \"Salary\", null, mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":183,"author":{"gitId":"bljhty"},"content":"        findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":184,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":185,"author":{"gitId":"bljhty"},"content":"        String expectedOutput \u003d \"[Income: Salary | Date: 10/Oct/2023 | Amount: $5000.00]\";","lastModifiedDate":"2023-10-29"},{"lineNumber":186,"author":{"gitId":"bljhty"},"content":"        assertEquals(expectedOutput, mockUi.getShowIncomes().get(0));","lastModifiedDate":"2023-10-29"},{"lineNumber":187,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":188,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":189,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":190,"author":{"gitId":"bljhty"},"content":"    void testValidFindCommandIncomeByDate() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":191,"author":{"gitId":"bljhty"},"content":"        Income income \u003d new Income(\"Salary\", LocalDate.of(2023, 10, 10), 5000.0);","lastModifiedDate":"2023-10-29"},{"lineNumber":192,"author":{"gitId":"bljhty"},"content":"        testIncomes.add(income);","lastModifiedDate":"2023-10-29"},{"lineNumber":193,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":194,"author":{"gitId":"bljhty"},"content":"        FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses, \"income\", null,","lastModifiedDate":"2023-10-29"},{"lineNumber":195,"author":{"gitId":"bljhty"},"content":"                null, \"10/Oct/2023\", mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":196,"author":{"gitId":"bljhty"},"content":"        findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":197,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":198,"author":{"gitId":"bljhty"},"content":"        String expectedOutput \u003d \"[Income: Salary | Date: 10/Oct/2023 | Amount: $5000.00]\";","lastModifiedDate":"2023-10-29"},{"lineNumber":199,"author":{"gitId":"bljhty"},"content":"        assertEquals(expectedOutput, mockUi.getShowIncomes().get(0));","lastModifiedDate":"2023-10-29"},{"lineNumber":200,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":201,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":202,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":203,"author":{"gitId":"bljhty"},"content":"    void testMultipleIncomeMatches() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":204,"author":{"gitId":"bljhty"},"content":"        Income income1 \u003d new Income(\"Salary\", LocalDate.of(2023, 10, 10), 5000.0);","lastModifiedDate":"2023-10-29"},{"lineNumber":205,"author":{"gitId":"bljhty"},"content":"        Income income2 \u003d new Income(\"Salary\", LocalDate.of(2023, 10, 11), 5000.0);","lastModifiedDate":"2023-10-29"},{"lineNumber":206,"author":{"gitId":"bljhty"},"content":"        testIncomes.add(income1);","lastModifiedDate":"2023-10-29"},{"lineNumber":207,"author":{"gitId":"bljhty"},"content":"        testIncomes.add(income2);","lastModifiedDate":"2023-10-29"},{"lineNumber":208,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":209,"author":{"gitId":"bljhty"},"content":"        FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses, \"income\", null,","lastModifiedDate":"2023-10-29"},{"lineNumber":210,"author":{"gitId":"bljhty"},"content":"                \"Salary\", null, mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":211,"author":{"gitId":"bljhty"},"content":"        findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":212,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":213,"author":{"gitId":"bljhty"},"content":"        String expectedOutput \u003d \"[Income: Salary | Date: 10/Oct/2023 | Amount: $5000.00, \"","lastModifiedDate":"2023-10-29"},{"lineNumber":214,"author":{"gitId":"bljhty"},"content":"                + \"Income: Salary | Date: 11/Oct/2023 | Amount: $5000.00]\";","lastModifiedDate":"2023-10-29"},{"lineNumber":215,"author":{"gitId":"bljhty"},"content":"        assertEquals(expectedOutput, mockUi.getShowIncomes().get(0));","lastModifiedDate":"2023-10-29"},{"lineNumber":216,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":217,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":218,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":219,"author":{"gitId":"bljhty"},"content":"    void testNoMatchingIncomes() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":220,"author":{"gitId":"bljhty"},"content":"        FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses, \"income\", null,","lastModifiedDate":"2023-10-29"},{"lineNumber":221,"author":{"gitId":"bljhty"},"content":"                \"NonexistentItem\", null, mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":222,"author":{"gitId":"bljhty"},"content":"        findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":223,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":224,"author":{"gitId":"bljhty"},"content":"        assertTrue(mockUi.getPrintedMessages().contains(\"No matching incomes found.\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":225,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":226,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":227,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":228,"author":{"gitId":"bljhty"},"content":"    void testIncomesByMonth() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":229,"author":{"gitId":"bljhty"},"content":"        Income income1 \u003d new Income(\"Salary\", LocalDate.of(2023, 10, 10), 5000.0);","lastModifiedDate":"2023-10-29"},{"lineNumber":230,"author":{"gitId":"bljhty"},"content":"        Income income2 \u003d new Income(\"Salary\", LocalDate.of(2023, 10, 11), 5000.0);","lastModifiedDate":"2023-10-29"},{"lineNumber":231,"author":{"gitId":"bljhty"},"content":"        Income income3 \u003d new Income(\"Salary\", LocalDate.of(2023, 9, 11), 5000.0);","lastModifiedDate":"2023-10-29"},{"lineNumber":232,"author":{"gitId":"bljhty"},"content":"        testIncomes.add(income1);","lastModifiedDate":"2023-10-29"},{"lineNumber":233,"author":{"gitId":"bljhty"},"content":"        testIncomes.add(income2);","lastModifiedDate":"2023-10-29"},{"lineNumber":234,"author":{"gitId":"bljhty"},"content":"        testIncomes.add(income3);","lastModifiedDate":"2023-10-29"},{"lineNumber":235,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":236,"author":{"gitId":"bljhty"},"content":"        FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses, \"income\", null,","lastModifiedDate":"2023-10-29"},{"lineNumber":237,"author":{"gitId":"bljhty"},"content":"                null, \"Oct/2023\", mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":238,"author":{"gitId":"bljhty"},"content":"        findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":239,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":240,"author":{"gitId":"bljhty"},"content":"        String expectedOutput \u003d \"[Income: Salary | Date: 10/Oct/2023 | Amount: $5000.00, \"","lastModifiedDate":"2023-10-29"},{"lineNumber":241,"author":{"gitId":"bljhty"},"content":"                + \"Income: Salary | Date: 11/Oct/2023 | Amount: $5000.00]\";","lastModifiedDate":"2023-10-29"},{"lineNumber":242,"author":{"gitId":"bljhty"},"content":"        assertEquals(expectedOutput, mockUi.getShowIncomes().get(0));","lastModifiedDate":"2023-10-29"},{"lineNumber":243,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":244,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":245,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":246,"author":{"gitId":"bljhty"},"content":"    void testIncomeFutureDate() {","lastModifiedDate":"2023-10-29"},{"lineNumber":247,"author":{"gitId":"bljhty"},"content":"        Exception exception \u003d assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":248,"author":{"gitId":"bljhty"},"content":"            Income futureIncome \u003d new Income(\"Bonus\", LocalDate.of(2025, 10, 10), 7000.0);","lastModifiedDate":"2023-10-29"},{"lineNumber":249,"author":{"gitId":"bljhty"},"content":"            testIncomes.add(futureIncome);","lastModifiedDate":"2023-10-29"},{"lineNumber":250,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-29"},{"lineNumber":251,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":252,"author":{"gitId":"bljhty"},"content":"        assertTrue(exception.getMessage().contains(\"Date cannot be in the future!\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":253,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":254,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":255,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":256,"author":{"gitId":"bljhty"},"content":"    void testFindExpenseByDescriptionAndDate() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":257,"author":{"gitId":"bljhty"},"content":"        Food foodExpense1 \u003d new Food(\"Burger\", LocalDate.of(2023, 10, 10), 5.0, MealType.LUNCH);","lastModifiedDate":"2023-10-29"},{"lineNumber":258,"author":{"gitId":"bljhty"},"content":"        Food foodExpense2 \u003d new Food(\"Burger\", LocalDate.of(2023, 10, 11), 5.0, MealType.DINNER);","lastModifiedDate":"2023-10-29"},{"lineNumber":259,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(foodExpense1);","lastModifiedDate":"2023-10-29"},{"lineNumber":260,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(foodExpense2);","lastModifiedDate":"2023-10-29"},{"lineNumber":261,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":262,"author":{"gitId":"bljhty"},"content":"        FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses, \"expense\", null,","lastModifiedDate":"2023-10-29"},{"lineNumber":263,"author":{"gitId":"bljhty"},"content":"                \"Burger\", \"10/Oct/2023\", mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":264,"author":{"gitId":"bljhty"},"content":"        findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":265,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":266,"author":{"gitId":"bljhty"},"content":"        String expectedOutput \u003d \"[Food Expense (LUNCH): Burger | Date: 10/Oct/2023 | Amount: $5.00]\";","lastModifiedDate":"2023-10-29"},{"lineNumber":267,"author":{"gitId":"bljhty"},"content":"        assertEquals(expectedOutput, mockUi.getShowExpenses().get(0));","lastModifiedDate":"2023-10-29"},{"lineNumber":268,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":269,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":270,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":271,"author":{"gitId":"bljhty"},"content":"    void testFindExpenseByDescriptionAndCategory() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":272,"author":{"gitId":"bljhty"},"content":"        Food foodExpense1 \u003d new Food(\"Burger\", LocalDate.of(2023, 10, 10), 5.0, MealType.LUNCH);","lastModifiedDate":"2023-10-29"},{"lineNumber":273,"author":{"gitId":"bljhty"},"content":"        Food foodExpense2 \u003d new Food(\"Pizza\", LocalDate.of(2023, 10, 11), 5.0, MealType.DINNER);","lastModifiedDate":"2023-10-29"},{"lineNumber":274,"author":{"gitId":"bljhty"},"content":"        Transport transportExpense \u003d new Transport(\"Bus\",","lastModifiedDate":"2023-10-29"},{"lineNumber":275,"author":{"gitId":"bljhty"},"content":"                LocalDate.of(2023, 10, 11), 5.0, TransportationType.BUS);","lastModifiedDate":"2023-10-29"},{"lineNumber":276,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(foodExpense1);","lastModifiedDate":"2023-10-29"},{"lineNumber":277,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(foodExpense2);","lastModifiedDate":"2023-10-29"},{"lineNumber":278,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(transportExpense);","lastModifiedDate":"2023-10-29"},{"lineNumber":279,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":280,"author":{"gitId":"bljhty"},"content":"        FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses, \"expense\", \"Food\",","lastModifiedDate":"2023-10-29"},{"lineNumber":281,"author":{"gitId":"bljhty"},"content":"                \"Burger\", null, mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":282,"author":{"gitId":"bljhty"},"content":"        findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":283,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":284,"author":{"gitId":"bljhty"},"content":"        String expectedOutput \u003d \"[Food Expense (LUNCH): Burger | Date: 10/Oct/2023 | Amount: $5.00]\";","lastModifiedDate":"2023-10-29"},{"lineNumber":285,"author":{"gitId":"bljhty"},"content":"        assertEquals(expectedOutput, mockUi.getShowExpenses().get(0));","lastModifiedDate":"2023-10-29"},{"lineNumber":286,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":287,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":288,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":289,"author":{"gitId":"bljhty"},"content":"    void testFindExpenseByDateAndCategory() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":290,"author":{"gitId":"bljhty"},"content":"        Transport transportExpense1 \u003d new Transport(\"Bus\",","lastModifiedDate":"2023-10-29"},{"lineNumber":291,"author":{"gitId":"bljhty"},"content":"                LocalDate.of(2023, 10, 11), 5.0, TransportationType.BUS);","lastModifiedDate":"2023-10-29"},{"lineNumber":292,"author":{"gitId":"bljhty"},"content":"        Utilities utilitiesExpense \u003d new Utilities(\"Electricity\",","lastModifiedDate":"2023-10-29"},{"lineNumber":293,"author":{"gitId":"bljhty"},"content":"                LocalDate.of(2023, 10, 11), 5.0, UtilityType.WATER);","lastModifiedDate":"2023-10-29"},{"lineNumber":294,"author":{"gitId":"bljhty"},"content":"        Transport transportExpense2 \u003d new Transport(\"Bus\",","lastModifiedDate":"2023-10-29"},{"lineNumber":295,"author":{"gitId":"bljhty"},"content":"                LocalDate.of(2023, 10, 11), 5.0, TransportationType.TAXI);","lastModifiedDate":"2023-10-29"},{"lineNumber":296,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(transportExpense1);","lastModifiedDate":"2023-10-29"},{"lineNumber":297,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(utilitiesExpense);","lastModifiedDate":"2023-10-29"},{"lineNumber":298,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(transportExpense2);","lastModifiedDate":"2023-10-29"},{"lineNumber":299,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":300,"author":{"gitId":"bljhty"},"content":"        FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses, \"expense\", \"Transport\",","lastModifiedDate":"2023-10-29"},{"lineNumber":301,"author":{"gitId":"bljhty"},"content":"                null, \"11/Oct/2023\", mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":302,"author":{"gitId":"bljhty"},"content":"        findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":303,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":304,"author":{"gitId":"bljhty"},"content":"        String expectedOutput \u003d \"[Transportation Expense (BUS): Bus | Date: 11/Oct/2023 | Amount: $5.00, \"","lastModifiedDate":"2023-10-29"},{"lineNumber":305,"author":{"gitId":"bljhty"},"content":"                + \"Transportation Expense (TAXI): Bus | Date: 11/Oct/2023 | Amount: $5.00]\";","lastModifiedDate":"2023-10-29"},{"lineNumber":306,"author":{"gitId":"bljhty"},"content":"        assertTrue(mockUi.getShowExpenses().contains(expectedOutput));","lastModifiedDate":"2023-10-29"},{"lineNumber":307,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":308,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":309,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":310,"author":{"gitId":"bljhty"},"content":"    void testFindExpenseByDescriptionAndDateAndCategory() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":311,"author":{"gitId":"bljhty"},"content":"        Utilities utilitiesExpense1 \u003d new Utilities(\"Electricity\",","lastModifiedDate":"2023-10-29"},{"lineNumber":312,"author":{"gitId":"bljhty"},"content":"                LocalDate.of(2023, 10, 11), 5.0, UtilityType.ELECTRICITY);","lastModifiedDate":"2023-10-29"},{"lineNumber":313,"author":{"gitId":"bljhty"},"content":"        Utilities utilitiesExpense2 \u003d new Utilities(\"Water\",","lastModifiedDate":"2023-10-29"},{"lineNumber":314,"author":{"gitId":"bljhty"},"content":"                LocalDate.of(2023, 10, 11), 5.0, UtilityType.WATER);","lastModifiedDate":"2023-10-29"},{"lineNumber":315,"author":{"gitId":"bljhty"},"content":"        Food foodExpense \u003d new Food(\"Burger\",","lastModifiedDate":"2023-10-29"},{"lineNumber":316,"author":{"gitId":"bljhty"},"content":"                LocalDate.of(2023, 10, 11), 5.0, MealType.LUNCH);","lastModifiedDate":"2023-10-29"},{"lineNumber":317,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(utilitiesExpense1);","lastModifiedDate":"2023-10-29"},{"lineNumber":318,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(utilitiesExpense2);","lastModifiedDate":"2023-10-29"},{"lineNumber":319,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(foodExpense);","lastModifiedDate":"2023-10-29"},{"lineNumber":320,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":321,"author":{"gitId":"bljhty"},"content":"        FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses, \"expense\", \"Utilities\",","lastModifiedDate":"2023-10-29"},{"lineNumber":322,"author":{"gitId":"bljhty"},"content":"                \"Electricity\", \"11/Oct/2023\", mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":323,"author":{"gitId":"bljhty"},"content":"        findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":324,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":325,"author":{"gitId":"bljhty"},"content":"        String expectedOutput \u003d \"[Utilities Expense(ELECTRICITY): Electricity | Date: 11/Oct/2023 | Amount: $5.00]\";","lastModifiedDate":"2023-10-29"},{"lineNumber":326,"author":{"gitId":"bljhty"},"content":"        assertEquals(expectedOutput, mockUi.getShowExpenses().get(0));","lastModifiedDate":"2023-10-29"},{"lineNumber":327,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":328,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":329,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":330,"author":{"gitId":"bljhty"},"content":"    void testIncomeByDescriptionAndDate() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":331,"author":{"gitId":"bljhty"},"content":"        Income income1 \u003d new Income(\"Salary\", LocalDate.of(2023, 10, 10), 5000.0);","lastModifiedDate":"2023-10-29"},{"lineNumber":332,"author":{"gitId":"bljhty"},"content":"        Income income2 \u003d new Income(\"Salary\", LocalDate.of(2023, 10, 11), 5000.0);","lastModifiedDate":"2023-10-29"},{"lineNumber":333,"author":{"gitId":"bljhty"},"content":"        testIncomes.add(income1);","lastModifiedDate":"2023-10-29"},{"lineNumber":334,"author":{"gitId":"bljhty"},"content":"        testIncomes.add(income2);","lastModifiedDate":"2023-10-29"},{"lineNumber":335,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":336,"author":{"gitId":"bljhty"},"content":"        FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses, \"income\", null,","lastModifiedDate":"2023-10-29"},{"lineNumber":337,"author":{"gitId":"bljhty"},"content":"                \"Salary\", \"10/Oct/2023\", mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":338,"author":{"gitId":"bljhty"},"content":"        findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":339,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":340,"author":{"gitId":"bljhty"},"content":"        String expectedOutput \u003d \"[Income: Salary | Date: 10/Oct/2023 | Amount: $5000.00]\";","lastModifiedDate":"2023-10-29"},{"lineNumber":341,"author":{"gitId":"bljhty"},"content":"        assertEquals(expectedOutput, mockUi.getShowIncomes().get(0));","lastModifiedDate":"2023-10-29"},{"lineNumber":342,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":343,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":344,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":345,"author":{"gitId":"bljhty"},"content":"    void testNegativeIncomeAmount() {","lastModifiedDate":"2023-10-29"},{"lineNumber":346,"author":{"gitId":"bljhty"},"content":"        Exception exception \u003d assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":347,"author":{"gitId":"bljhty"},"content":"            Income negativeIncome \u003d new Income(\"Salary\", LocalDate.of(2023, 10, 10), -5000.0);","lastModifiedDate":"2023-10-29"},{"lineNumber":348,"author":{"gitId":"bljhty"},"content":"            testIncomes.add(negativeIncome);","lastModifiedDate":"2023-10-29"},{"lineNumber":349,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-29"},{"lineNumber":350,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":351,"author":{"gitId":"bljhty"},"content":"        assertTrue(exception.getMessage().contains(\"Amount cannot be negative!\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":352,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":353,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":354,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":355,"author":{"gitId":"bljhty"},"content":"    void testNegativeExpenseAmount() {","lastModifiedDate":"2023-10-29"},{"lineNumber":356,"author":{"gitId":"bljhty"},"content":"        Exception exception \u003d assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":357,"author":{"gitId":"bljhty"},"content":"            Food negativeExpense \u003d new Food(\"Burger\",","lastModifiedDate":"2023-10-29"},{"lineNumber":358,"author":{"gitId":"bljhty"},"content":"                    LocalDate.of(2023, 10, 10), -5.0, MealType.LUNCH);","lastModifiedDate":"2023-10-29"},{"lineNumber":359,"author":{"gitId":"bljhty"},"content":"            testExpenses.add(negativeExpense);","lastModifiedDate":"2023-10-29"},{"lineNumber":360,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-29"},{"lineNumber":361,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":362,"author":{"gitId":"bljhty"},"content":"        assertTrue(exception.getMessage().contains(\"Amount cannot be negative!\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":363,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":364,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":365,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":366,"author":{"gitId":"bljhty"},"content":"    void testEmptyIncomeDescription() {","lastModifiedDate":"2023-10-29"},{"lineNumber":367,"author":{"gitId":"bljhty"},"content":"        Exception exception \u003d assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":368,"author":{"gitId":"bljhty"},"content":"            Income emptyDescriptionIncome \u003d new Income(\"\",","lastModifiedDate":"2023-10-29"},{"lineNumber":369,"author":{"gitId":"bljhty"},"content":"                    LocalDate.of(2023, 10, 10), 5000.0);","lastModifiedDate":"2023-10-29"},{"lineNumber":370,"author":{"gitId":"bljhty"},"content":"            testIncomes.add(emptyDescriptionIncome);","lastModifiedDate":"2023-10-29"},{"lineNumber":371,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-29"},{"lineNumber":372,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":373,"author":{"gitId":"bljhty"},"content":"        assertTrue(exception.getMessage().contains(\"Description cannot be empty!\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":374,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":375,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":376,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":377,"author":{"gitId":"bljhty"},"content":"    void testEmptyExpenseDescription() {","lastModifiedDate":"2023-10-29"},{"lineNumber":378,"author":{"gitId":"bljhty"},"content":"        Exception exception \u003d assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":379,"author":{"gitId":"bljhty"},"content":"            Food emptyDescriptionExpense \u003d new Food(\"\",","lastModifiedDate":"2023-10-29"},{"lineNumber":380,"author":{"gitId":"bljhty"},"content":"                    LocalDate.of(2023, 10, 10), 5.0, MealType.LUNCH);","lastModifiedDate":"2023-10-29"},{"lineNumber":381,"author":{"gitId":"bljhty"},"content":"            testExpenses.add(emptyDescriptionExpense);","lastModifiedDate":"2023-10-29"},{"lineNumber":382,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-29"},{"lineNumber":383,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":384,"author":{"gitId":"bljhty"},"content":"        assertTrue(exception.getMessage().contains(\"Description cannot be empty!\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":385,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":386,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":387,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":388,"author":{"gitId":"bljhty"},"content":"    void testInvalidExpenseCategory() {","lastModifiedDate":"2023-10-29"},{"lineNumber":389,"author":{"gitId":"bljhty"},"content":"        Exception exception \u003d assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":390,"author":{"gitId":"bljhty"},"content":"            // Assuming \u0027Gaming\u0027 is not a valid category in your application","lastModifiedDate":"2023-10-29"},{"lineNumber":391,"author":{"gitId":"bljhty"},"content":"            FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses,","lastModifiedDate":"2023-10-29"},{"lineNumber":392,"author":{"gitId":"bljhty"},"content":"                    \"expense\", \"Gaming\", null, null, mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":393,"author":{"gitId":"bljhty"},"content":"            findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":394,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-29"},{"lineNumber":395,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":396,"author":{"gitId":"bljhty"},"content":"        assertTrue(exception.getMessage().contains(\"Invalid expense category provided! Allowed categories are: \"));","lastModifiedDate":"2023-10-29"},{"lineNumber":397,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":398,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":399,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":400,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":401,"author":{"gitId":"bljhty"},"content":"    void testFindCommandWithZeroAmountExpense() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":402,"author":{"gitId":"bljhty"},"content":"        Expense zeroAmountExpense \u003d new Expense(\"Zero Amount Expense\", LocalDate.now(), 0.0);","lastModifiedDate":"2023-10-29"},{"lineNumber":403,"author":{"gitId":"bljhty"},"content":"        testExpenses.add(zeroAmountExpense);","lastModifiedDate":"2023-10-29"},{"lineNumber":404,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":405,"author":{"gitId":"bljhty"},"content":"        FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses,","lastModifiedDate":"2023-10-29"},{"lineNumber":406,"author":{"gitId":"bljhty"},"content":"                \"expense\", \"Food\", null, null, mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":407,"author":{"gitId":"bljhty"},"content":"        findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":408,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":409,"author":{"gitId":"bljhty"},"content":"        assertFalse(mockUi.getShowExpenses().contains(\"Zero Amount Expense\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":410,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":411,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":412,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":413,"author":{"gitId":"bljhty"},"content":"    void testFindCommandWithZeroIncome() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":414,"author":{"gitId":"bljhty"},"content":"        Income zeroAmountIncome \u003d new Income(\"Zero Amount Income\", LocalDate.now(), 0.0);","lastModifiedDate":"2023-10-29"},{"lineNumber":415,"author":{"gitId":"bljhty"},"content":"        testIncomes.add(zeroAmountIncome);","lastModifiedDate":"2023-10-29"},{"lineNumber":416,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":417,"author":{"gitId":"bljhty"},"content":"        FindCommand findCommand \u003d new FindCommand(testIncomes, testExpenses,","lastModifiedDate":"2023-10-29"},{"lineNumber":418,"author":{"gitId":"bljhty"},"content":"                \"income\", null, null, null, mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":419,"author":{"gitId":"bljhty"},"content":"        findCommand.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":420,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":421,"author":{"gitId":"bljhty"},"content":"        assertFalse(mockUi.getShowIncomes().contains(\"Zero Amount Income\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":422,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":423,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":424,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"bljhty":424}},{"path":"src/test/java/seedu/duke/commands/IncomeListerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import seedu.duke.ui.MockUi;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"import java.io.File;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"public class IncomeListerTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"    private ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    private MockUi mockUi;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"    void setUp() {","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"        incomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"        mockUi \u003d new MockUi();","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"    void listIncomes_emptyList_displayNoIncomes() {","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"        IncomeLister incomeLister \u003d new IncomeLister(incomes, mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"        incomeLister.listIncomes();","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"        List\u003cString\u003e messages \u003d mockUi.getPrintedMessages();","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"        assertEquals(1, messages.size());","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"You have no recorded incomes.\", messages.get(0));","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"    void listIncomes_nonEmptyList_displaysAllIncomes() {","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"            LocalDate date1 \u003d LocalDate.parse(\"01/01/2023\", formatter);","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"            LocalDate date2 \u003d LocalDate.parse(\"02/01/2023\", formatter);","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"            incomes.add(new Income(\"Description 1\", date1, 50.0));","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"            incomes.add(new Income(\"Description 2\", date2, 100.0));","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"            IncomeLister incomeLister \u003d new IncomeLister(incomes, mockUi);","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"            incomeLister.listIncomes();","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"            List\u003cString\u003e messages \u003d mockUi.getPrintedMessages();","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"            assertEquals(3, messages.size()); // Three messages: header and two income details","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"            assertEquals(\"Here are your incomes:\", messages.get(0));","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"            assertEquals(\"1. \" + incomes.get(0).toString(), messages.get(1));","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"            assertEquals(\"2. \" + incomes.get(1).toString(), messages.get(2));","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"        } catch (KaChinnnngException e) {","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"            fail(\"Unexpected exception: \" + e.getMessage());","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"    void testIncomeConstructor_negativeAmount() {","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"        Exception exception \u003d assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"            new Income(\"Test\", LocalDate.now(), -50.0);","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"        String expectedMessage \u003d \"Amount cannot be negative!\";","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"        assertEquals(expectedMessage, actualMessage);  // Using assertEquals for clarity","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"    void testToString_validIncome() throws KaChinnnngException {","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"        Income income \u003d new Income(\"Test\", LocalDate.of(2023, 1, 1), 50.0);","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"        String expected \u003d \"Income: Test | Date: 01/Jan/2023 | Amount: $50.00\";","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"        assertEquals(expected, income.toString());","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"    void testLoggerFileCreation() throws KaChinnnngException {","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"        new Income(\"Logger Test\", LocalDate.now(), 50.0);","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"        File logFile \u003d new File(\"logs/Income.log\");","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"        assertTrue(logFile.exists());","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"bljhty":88}},{"path":"src/test/java/seedu/duke/commands/IncomeManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"public class IncomeManagerTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"    private IncomeManager incomeManager;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    void setUp() {","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"        incomeManager \u003d new IncomeManager(\"/de Grocery /date 29/10/2023 /amt 50.0\");","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    void constructor_initializesCorrectly() {","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"        assertNotNull(incomeManager);","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"    void execute_parsesIncomeSuccessfully() throws KaChinnnngException {","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"        incomeManager.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"        Income income \u003d incomeManager.getNewIncome();","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"        assertNotNull(income);","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"        // You may also want to check the properties of `income` to ensure it\u0027s been parsed correctly.","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"    void execute_missingFields_throwsException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"        IncomeManager managerWithMissingFields \u003d new IncomeManager(\"/de Grocery /date 29/10/2023\");","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, managerWithMissingFields::execute);","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"    void execute_extraFields_throwsException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"        IncomeManager managerWithExtraFields \u003d new IncomeManager(\"/de Grocery /date 29/10/2023 \" +","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"                \"/amt 50.0 /extraField Something\");","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, managerWithExtraFields::execute);","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"    void constructor_nullDetails_throwsAssertionError() {","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"        assertThrows(AssertionError.class, () -\u003e new IncomeManager(null));","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"    void execute_incorrectFieldOrder_throwsException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"        IncomeManager managerWithIncorrectOrder \u003d new IncomeManager(\"/amt 50.0 /de Grocery /date 29/10/2023\");","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, managerWithIncorrectOrder::execute);","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"    void execute_spacesInFields_parsedCorrectly() throws KaChinnnngException {","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"        IncomeManager managerWithSpaces \u003d new IncomeManager(\"/de Grocery Store /date 29/10/2023 /amt 50.0\");","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"        managerWithSpaces.execute();","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"        Income income \u003d managerWithSpaces.getNewIncome();","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"        assertNotNull(income);","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"    void execute_incorrectDateFormat_throwsException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"        IncomeManager managerWithBadDate \u003d new IncomeManager(\"/de Grocery /date 29-10-2023 /amt 50.0\");","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, managerWithBadDate::execute);","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"    void execute_incorrectAmountFormat_throwsException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"        IncomeManager managerWithBadAmount \u003d new IncomeManager(\"/de Grocery /date 29/10/2023 /amt fifty\");","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, managerWithBadAmount::execute);","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"bljhty":78}},{"path":"src/test/java/seedu/duke/commands/UsageInstructionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"/**","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":" * Tests for the {@link UsageInstructions} class.","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":" * This test class provides test cases to check whether each function can be call without error","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":" */","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":"public class UsageInstructionTest {","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"    private UsageInstructions helpFunction;","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"     * Sets up the UsageInstructions object","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"    public void setup() throws KaChinnnngException {","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"        helpFunction \u003d new UsageInstructions();","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"    public void executeAllCommands(){","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":"        helpFunction.getHelp();         // Make sure all the function works well","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"KenCheung18"},"content":"        helpFunction.getHelpUpdateExchangeRateFunction();","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":"        helpFunction.getHelpFindFunction();","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":"        helpFunction.getHelpExitFunction();","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"KenCheung18"},"content":"        helpFunction.getHelpEditFunction();","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"KenCheung18"},"content":"        helpFunction.getHelpDeleteFunction();","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"KenCheung18"},"content":"        helpFunction.getHelpListFunction();","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"        helpFunction.getHelpBalanceFunction();","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"KenCheung18"},"content":"        helpFunction.getHelpAddFunction();","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"KenCheung18"},"content":"        helpFunction.getHelpClearFunction();","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"KenCheung18"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"KenCheung18":35}},{"path":"src/test/java/seedu/duke/financialrecords/ExchangeRateManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"package seedu.duke.financialrecords;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"public class ExchangeRateManagerTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"    private ExchangeRateManager exchangeRateManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"        exchangeRateManager \u003d ExchangeRateManager.getInstance();","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"    public void testGetInstance() {","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"        // Ensure that getInstance returns the same instance of ExchangeRateManager","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"        ExchangeRateManager instance1 \u003d ExchangeRateManager.getInstance();","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"        ExchangeRateManager instance2 \u003d ExchangeRateManager.getInstance();","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"        assertSame(instance1, instance2);","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"    public void testSupportedCurrencies() {","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"        // Ensure that the list of supported currencies is not empty","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"        assertFalse(ExchangeRateManager.getSupportedCurrencies().isEmpty());","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"    public void testUpdateExchangeRate_validInput_updateSameAsRetrieved() {","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"        String currency \u003d \"USD\";","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"        double rate \u003d 1.3;","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"        // Update the exchange rate","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"            exchangeRateManager.updateExchangeRate(currency, rate);","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"        } catch (KaChinnnngException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"            fail(\"Should not throw an exception\");","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"        // Retrieve and compare the exchange rate","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"limyuhching"},"content":"        double retrievedRate \u003d exchangeRateManager.getExchangeRates().get(currency);","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"        assertEquals(rate, retrievedRate);","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"    public void testConvertCurrency() throws KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"        String currency \u003d \"USD\";","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"        double rate \u003d 1.3;","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"        double amount \u003d 100.0;","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"        // Update the exchange rate","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"limyuhching"},"content":"            exchangeRateManager.updateExchangeRate(currency, rate);","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"limyuhching"},"content":"        } catch (KaChinnnngException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"limyuhching"},"content":"            fail(\"Should not throw an exception\");","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"limyuhching"},"content":"        // Convert currency and check the result","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"limyuhching"},"content":"        double convertedAmount \u003d exchangeRateManager.convertCurrency(currency, amount);","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"limyuhching"},"content":"        assertEquals(76.923, convertedAmount, 0.001);","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"limyuhching":68}},{"path":"src/test/java/seedu/duke/financialrecords/ExpenseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.financialrecords;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":" * Test suite for the {@link Expense} class.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":" * This class contains unit tests to validate the behavior of the Expense class and ensure","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":" * correctness in the representation and management of financial expenses.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"public class ExpenseTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    private Expense expense;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"     * Initializes common test fixtures before each test execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"    void setUp() {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"            expense \u003d new Expense(\"Lunch\", LocalDate.now().minusDays(1), 20.00);","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"        } catch (KaChinnnngException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"            fail(\"Setup failed due to exception: \" + e.getMessage());","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"     * Tests if an exception is thrown when the description of an Expense object is empty.","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"    void testExpenseDescription_notEmpty(){","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e new Expense(\"\", LocalDate.now(), 20.00));","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"     * Tests if an exception is thrown when the amount of an Expense object is negative.","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"    void testExpenseAmount_notNegative(){","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e new Expense(\"Lunch\", LocalDate.now(), -20.00));","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"     * Tests if an exception is thrown when the date of an Expense object is in the future.","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"    void testExpenseDate_notFuture(){","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e new Expense(\"Lunch\", LocalDate.now().plusDays(1), 20.00));","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"     * Tests if the correct description of the Expense object is returned.","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"    void getDescription() {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"Lunch\", expense.getDescription());","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"     * Tests if the correct date of the Expense object is returned.","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"    void getDate() {","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"        assertEquals(LocalDate.now().minusDays(1), expense.getDate());","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"     * Tests if the correct amount of the Expense object is returned.","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"    void getAmount() {","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"        assertEquals(20.00, expense.getAmount());","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"     * Tests if the correct date string of the Expense object is returned.","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"    void getDateString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"        assertEquals(LocalDate.now().minusDays(1).format(DateTimeFormatter.ofPattern(\"dd/MMM/yyyy\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"                expense.getDateString());","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"     * Tests the string representation of the Expense object.","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"    void testToString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"Expense: Lunch | Date: \" +","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"                        LocalDate.now().minusDays(1).format(DateTimeFormatter.ofPattern(\"dd/MMM/yyyy\")) +","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"                        \" | Amount: $20.00\",","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"                expense.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"bljhty":101}},{"path":"src/test/java/seedu/duke/financialrecords/IncomeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.financialrecords;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"public class IncomeTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"    public void testIncomeCreation() throws KaChinnnngException {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"        Income income \u003d new Income(\"Salary\", LocalDate.of(2023, 10, 12), 5000.00);","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"        assertNotNull(income);","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"Salary\", income.getDescription());","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"        assertEquals(LocalDate.of(2023, 10, 12), income.getDate());","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"        assertEquals(5000.00, income.getAmount());","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"    public void testToString() throws KaChinnnngException{","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"        Income income \u003d new Income(\"Salary\", LocalDate.of(2023, 10, 12), 5000.00);","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"        String expected \u003d \"Income: Salary | Date: 12/Oct/2023 | Amount: $5000.00\";","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"        assertEquals(expected, income.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"    public void testInvalidDescription() {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"            new Income(\"\", LocalDate.of(2023, 10, 12), 5000.00);","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"    public void testInvalidAmount() {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"            new Income(\"Salary\", LocalDate.of(2023, 10, 12), -5000.00);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"bljhty":42}},{"path":"src/test/java/seedu/duke/parser/ExpenseParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Food;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Transport;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Utilities;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"public class ExpenseParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseDate method in ExpenseParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"     * Specifically, it tests if the date is parsed correctly.","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if the parsed date is invalid","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"    void parseDate_validDate_success() throws KaChinnnngException {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"        LocalDate expectedDate \u003d LocalDate.of(2020, 02, 29);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"        LocalDate actualDate \u003d ExpenseParser.parseDate(\"29/02/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"        assertEquals(expectedDate, actualDate);","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseDate method in ExpenseParser","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"     * Specifically, it tests if a KaChinnnngException is thrown when trying to parse an invalid day.","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"    void parseDate_invalidDay_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseDate(\"32/02/2020\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseDate method in ExpenseParser","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"     * Specifically, it tests if a KaChinnnngException is thrown when trying to parse an invalid year.","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"    void parseDate_invalidDate_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseDate(\"10/10/20202\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseDate method in ExpenseParser","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"     * Specifically, it tests if a KaChinnnngException is thrown when trying to parse a date that is in the future.","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"    void parseDate_futureDate_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseDate(\"10/10/3021\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseExpense method in ExpenseParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"     * It verifies if the food category are correctly parsed into an Expense object.","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException for invalid scenarios","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"    void testParseExpense_foodCategory_success() throws KaChinnnngException {","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"food\");","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Hongzhii"},"content":"        expenseFields.put(ExpenseParser.TYPE_FIELD, \"lunch\");","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"Chicken Rice\");","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"3.50\");","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"        assertTrue(ExpenseParser.parseExpense(expenseFields) instanceof Food);","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseExpense method in ExpenseParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"     * It verifies if the transport category are correctly parsed into an Expense object.","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException for invalid scenarios","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"    void testParseExpense_transportCategory_success() throws KaChinnnngException {","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"transport\");","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"Hongzhii"},"content":"        expenseFields.put(ExpenseParser.TYPE_FIELD, \"bus\");","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"Hongzhii"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"from nus to changi\");","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"1.50\");","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"        assertTrue(ExpenseParser.parseExpense(expenseFields) instanceof Transport);","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseExpense method in ExpenseParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"     * It verifies if the utilities category are correctly parsed into an Expense object.","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException for invalid scenarios","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"    void testParseExpense_utilitiesCategory_success() throws KaChinnnngException {","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"utilities\");","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"Hongzhii"},"content":"        expenseFields.put(ExpenseParser.TYPE_FIELD, \"electricity\");","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Hongzhii"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"air con bill\");","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"50.00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"        assertTrue(ExpenseParser.parseExpense(expenseFields) instanceof Utilities);","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseExpense method in ExpenseParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"bljhty"},"content":"     * Tests if the expense parsing method throws an exception for an unrecognized category.","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"bljhty"},"content":"    void testParseExpense_invalidCategory_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"invalid\");","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"Chicken Rice\");","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"3.50\");","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseExpense(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseExpense method in ExpenseParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"bljhty"},"content":"     * Tests if the expense parsing method throws an exception for missing amount fields.","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"bljhty"},"content":"    void testParseExpense_missingAmountField_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"food\");","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"Chicken Rice\");","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseExpense(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseExpense method in ExpenseParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"bljhty"},"content":"     * Tests if the expense parsing method throws an exception for missing description fields.","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"bljhty"},"content":"    void testParseExpense_missingDescriptionFields_success(){","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"food\");","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"3.50\");","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseExpense(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseExpense method in ExpenseParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"bljhty"},"content":"     * Tests if the expense parsing method throws an exception for missing date fields.","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"bljhty"},"content":"    void testParseExpense_missingDateField_success(){","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"food\");","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"Chicken Rice\");","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"3.50\");","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseExpense(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"bljhty"},"content":"     * Tests if the getIndex method in ExpenseParser throws an exception for a valid index format.","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"bljhty"},"content":"    void testGetIndexValid() throws KaChinnnngException {","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.INDEX_FIELD, \"1\");","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"bljhty"},"content":"        assertEquals(1, ExpenseParser.getIndex(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"bljhty"},"content":"     * Tests if the getIndex method in ExpenseParser throws an exception for an invalid index format.","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"bljhty"},"content":"    void testGetIndexInvalid() {","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.INDEX_FIELD, \"a\");","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.getIndex(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"bljhty"},"content":"     * Tests if the expense parsing method throws an exception when the provided amount exceeds the limit.","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"bljhty"},"content":"    void testParseAmount_aboveLimit_exceptionThrown(){","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"food\");","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"Chicken Rice\");","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"1000000.00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseExpense(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"bljhty"},"content":"     * Tests if the expense parsing method throws an exception when the category field is empty.","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"bljhty"},"content":"    void testParseCategory_emptyString_exceptionThrown(){","lastModifiedDate":"2023-10-18"},{"lineNumber":213,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":214,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"Chicken Rice\");","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"9999.00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseExpense(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"bljhty"},"content":"     * Tests if the expense parsing method throws an exception when the description field is empty.","lastModifiedDate":"2023-10-18"},{"lineNumber":224,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"bljhty"},"content":"    void testParseDescription_emptyString_exceptionThrown(){","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"food\");","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":230,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"9999.00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":232,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":233,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseExpense(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":236,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":237,"author":{"gitId":"bljhty"},"content":"     * Tests if the expense parsing method throws an exception when the date field is empty.","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":239,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":240,"author":{"gitId":"bljhty"},"content":"    void testParseDate_emptyString_exceptionThrown(){","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"food\");","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"Chicken Rice\");","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":245,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"9999.00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":247,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseExpense(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":248,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":249,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":250,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":251,"author":{"gitId":"bljhty"},"content":"     * Tests if the expense parsing method throws an exception when the amount field is empty.","lastModifiedDate":"2023-10-18"},{"lineNumber":252,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":253,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":254,"author":{"gitId":"bljhty"},"content":"    void testParseAmount_emptyString_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":255,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e expenseFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":256,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.CATEGORY_FIELD, \"food\");","lastModifiedDate":"2023-10-18"},{"lineNumber":257,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DESCRIPTION_FIELD, \"Chicken Rice\");","lastModifiedDate":"2023-10-18"},{"lineNumber":258,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.DATE_FIELD, \"12/10/2020\");","lastModifiedDate":"2023-10-18"},{"lineNumber":259,"author":{"gitId":"bljhty"},"content":"        expenseFields.put(ExpenseParser.AMOUNT_FIELD, \"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":260,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":261,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e ExpenseParser.parseExpense(expenseFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":262,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":263,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"bljhty":258,"Hongzhii":5}},{"path":"src/test/java/seedu/duke/parser/FindParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":" * JUnit test class for FindParser.","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":" * This class tests if the find command is parsed correctly.","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":" * It also tests if the correct exceptions are thrown when the command is invalid.","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"public class FindParserTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"     * This method tests if the find command is parsed correctly.","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"     * Specifically, it tests if the parameters are parsed correctly.","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if the command format is invalid","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"    public void validFindCommand_parsedCorrectly() throws KaChinnnngException{","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"        String[] expected \u003d {\"expense\", \"food\", \"lunch\", \"12/Oct/2023\"};","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"        String[] result \u003d FindParser.parseFindCommand(\"/t expense /cat food /de lunch /date 12/Oct/2023\");","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"        assertArrayEquals(expected, result);","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"     * This method tests if the correct exception is thrown when the type is missing.","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"    public void missingMandatoryTypeField_throwsException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"            FindParser.parseFindCommand(\"/cat food /de lunch /date 12/Oct/2023\");","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"     * This method tests if the correct exception is thrown when the type is invalid.","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"     * Specifically, it tests if the correct exception is thrown when the type is not \"expense\" or \"income\".","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"    public void usingInvalidParameter_throwsException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"            FindParser.parseFindCommand(\"/t expense /cat food /de lunch /date 12/Oct/2023 /invalid\");","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"     * Tests if the correct exception is thrown when the full word for type is used instead of the shortcut.","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"    public void usingFullWordTypeInsteadOfShortcut_throwsException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"            FindParser.parseFindCommand(\"/type expense /cat food /de lunch /date 12/Oct/2023\");","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"     * Tests if the correct exception is thrown when only the mandatory type parameter is provided,","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"     * and all other optional parameters are missing.","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"    public void missingAllOptionalFields_throwsException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"            FindParser.parseFindCommand(\"/t expense\");","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"     * Tests if the correct exception is thrown when a parameter is provided without its corresponding value.","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"    public void missingValueForParameter_throwsException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"            FindParser.parseFindCommand(\"/t \");","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"            FindParser.parseFindCommand(\"/t expense /cat \");","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"     * Tests the correct parsing of a valid find command with the \"income\" type and no category.","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"     * Expects successful parsing into an array of parameters.","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if the command format is invalid","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"    public void validFindCommandWithIncomeType_noCategoryParsed() throws KaChinnnngException {","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"        String[] expected \u003d {\"income\", null, \"bonus\", \"15/Oct/2023\"};","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"        String[] result \u003d FindParser.parseFindCommand(\"/t income /de bonus /date 15/Oct/2023\");","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"        assertArrayEquals(expected, result);","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"     * Tests the correct parsing of a valid find command with only type and category.","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"     * Expects successful parsing into an array of parameters.","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if the command format is invalid","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"    public void validFindCommandWithOnlyTypeAndCategory_parsedCorrectly() throws KaChinnnngException {","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"        String[] expected \u003d {\"expense\", \"food\", null, null};","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"        String[] result \u003d FindParser.parseFindCommand(\"/t expense /cat food\");","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"        assertArrayEquals(expected, result);","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"     * Tests if the correct exception is thrown when deprecated parameter names are used.","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"    public void usingOldParameterNames_throwsException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"            FindParser.parseFindCommand(\"/t expense /description value\");","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"bljhty"},"content":"            FindParser.parseFindCommand(\"/t expense /category food\");","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"bljhty"},"content":"     * Tests if the correct exception is thrown for an empty command string.","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"bljhty"},"content":"    public void emptyCommand_throwsException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"bljhty"},"content":"            FindParser.parseFindCommand(\"\");","lastModifiedDate":"2023-10-30"},{"lineNumber":128,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":130,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"bljhty"},"content":"     * Tests if the correct exception is thrown for a command string consisting only of spaces.","lastModifiedDate":"2023-10-30"},{"lineNumber":133,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"bljhty"},"content":"    public void commandWithOnlySpaces_throwsException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"bljhty"},"content":"            FindParser.parseFindCommand(\"    \");","lastModifiedDate":"2023-10-30"},{"lineNumber":138,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":140,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"bljhty"},"content":"     * Tests if the correct exception is thrown for a command containing a parameter that doesn\u0027t exist.","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":145,"author":{"gitId":"bljhty"},"content":"    public void findCommandWithNonexistentParameter_throwsException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"bljhty"},"content":"            FindParser.parseFindCommand(\"/t expense /nonexistent value\");","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"bljhty"},"content":"        });","lastModifiedDate":"2023-10-30"},{"lineNumber":149,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"bljhty":150}},{"path":"src/test/java/seedu/duke/parser/IncomeParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":" * Contains JUnit tests for the {@code IncomeParser} class. This class ensures that the parsing methods","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":" * related to incomes function as expected and handle invalid inputs gracefully.","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"public class IncomeParserTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseIncome method in IncomeParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"     * It verifies if the incomeFields are correctly parsed into an Income object.","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"    public void testParseIncome() throws KaChinnnngException {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e incomeFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DESCRIPTION_FIELD, \"Salary\");","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DATE_FIELD, \"12/10/2023\");","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.AMOUNT_FIELD, \"5000.00\");","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"        Income income \u003d IncomeParser.parseIncome(incomeFields);","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"Salary\", income.getDescription());","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"        assertEquals(LocalDate.of(2023, 10, 12), income.getDate());","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"        assertEquals(5000.00, income.getAmount());","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseDate method in IncomeParser","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"     * Specifically, it tests if the date is parsed correctly.","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"     * @throws KaChinnnngException if the parsed date is invalid","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"    public void testParseDate_validDate() throws KaChinnnngException {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"        LocalDate result \u003d IncomeParser.parseDate(\"12/10/2023\");","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"        assertEquals(LocalDate.of(2023, 10, 12), result);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseDate method in IncomeParser","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"     * Specifically, it tests if a KaChinnnngException is thrown when trying to parse an invalid date.","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"     * @see KaChinnnngException if the parsed date is invalid","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"    public void testParseDate_invalidDate() {","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseDate(\"12/13/2023\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseDate method in IncomeParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"     * Specifically, it tests if a KaChinnnngException is thrown when trying to parse a date that is in the future.","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"    public void testParseDate_futureDate() {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseDate(\"12/10/2025\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"     * This method tests the parseDate method in IncomeParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"     * Specifically, it tests if a KaChinnnngException is thrown when trying to parse an invalid day.","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"    void testParseDate_invalidDay(){","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseDate(\"32/10/2023\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"     * This method tests the getIndex method in IncomeParser when trying to get index from an empty input.","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"    public void testGetIndex_missingField() {","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e inputMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.getIndex(inputMap));","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"     * This method tests the behaviour when user inputs amount that is above the limit.","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"    void testParseAmount_aboveLimit_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e incomeFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DESCRIPTION_FIELD, \"Salary\");","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DATE_FIELD, \"12/10/2023\");","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.AMOUNT_FIELD, \"1000000000.00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseIncome(incomeFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"     * This method tests the behaviour when user inputs an empty string for description.","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"    void testParseDescription_emptyString_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e incomeFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DESCRIPTION_FIELD, \"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DATE_FIELD, \"12/10/2023\");","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.AMOUNT_FIELD, \"10.00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseIncome(incomeFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"bljhty"},"content":"     * This method tests the behaviour when user inputs an empty string for date.","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"bljhty"},"content":"    void testParseDate_emptyString_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e incomeFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DESCRIPTION_FIELD, \"Salary\");","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DATE_FIELD, \"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.AMOUNT_FIELD, \"10.00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseIncome(incomeFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"bljhty"},"content":"     * This method tests the behaviour when user inputs an empty string for amount.","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"bljhty"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"    void testParseAmount_emptyString_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e incomeFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DESCRIPTION_FIELD, \"Salary\");","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DATE_FIELD, \"12/10/2023\");","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.AMOUNT_FIELD, \"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseIncome(incomeFields));","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"bljhty"},"content":"     * This method tests the behaviour when user inputs an invalid index.","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"bljhty"},"content":"     * Specifically negative index","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"bljhty"},"content":"    void testGetIndex_negativeIndex_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e inputMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"bljhty"},"content":"        inputMap.put(IncomeParser.INDEX_FIELD, \"-1\");","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.getIndex(inputMap));","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"bljhty"},"content":"     * This method tests the behaviour when user inputs an invalid index.","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"bljhty"},"content":"     * Specifically zero index","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"bljhty"},"content":"    void testGetIndex_zeroIndex_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e inputMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"bljhty"},"content":"        inputMap.put(IncomeParser.INDEX_FIELD, \"0\");","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.getIndex(inputMap));","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":169,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":170,"author":{"gitId":"bljhty"},"content":"     * Tests for an exception when a zero index is provided in the input data.","lastModifiedDate":"2023-10-30"},{"lineNumber":171,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":172,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":173,"author":{"gitId":"bljhty"},"content":"    void testParseIncome_nullArguments_exceptionThrown() {","lastModifiedDate":"2023-10-29"},{"lineNumber":174,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseIncome(null));","lastModifiedDate":"2023-10-29"},{"lineNumber":175,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":176,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":177,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":178,"author":{"gitId":"bljhty"},"content":"     * Checks if an exception is thrown when null arguments are passed to the {@code parseIncome} method.","lastModifiedDate":"2023-10-30"},{"lineNumber":179,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":180,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":181,"author":{"gitId":"bljhty"},"content":"    void testParseIncome_missingDescription_exceptionThrown() {","lastModifiedDate":"2023-10-29"},{"lineNumber":182,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e incomeFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":183,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DATE_FIELD, \"12/10/2023\");","lastModifiedDate":"2023-10-29"},{"lineNumber":184,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.AMOUNT_FIELD, \"5000.00\");","lastModifiedDate":"2023-10-29"},{"lineNumber":185,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseIncome(incomeFields));","lastModifiedDate":"2023-10-29"},{"lineNumber":186,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":187,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":188,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":189,"author":{"gitId":"bljhty"},"content":"     * Tests if an exception is thrown when the date is missing in incomeFields.","lastModifiedDate":"2023-10-30"},{"lineNumber":190,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":191,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":192,"author":{"gitId":"bljhty"},"content":"    void testParseIncome_missingDate_exceptionThrown() {","lastModifiedDate":"2023-10-29"},{"lineNumber":193,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e incomeFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":194,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DESCRIPTION_FIELD, \"Salary\");","lastModifiedDate":"2023-10-29"},{"lineNumber":195,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.AMOUNT_FIELD, \"5000.00\");","lastModifiedDate":"2023-10-29"},{"lineNumber":196,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseIncome(incomeFields));","lastModifiedDate":"2023-10-29"},{"lineNumber":197,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":198,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":199,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":200,"author":{"gitId":"bljhty"},"content":"     * Checks if an exception is thrown when the amount is missing in incomeFields.","lastModifiedDate":"2023-10-30"},{"lineNumber":201,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":202,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":203,"author":{"gitId":"bljhty"},"content":"    void testParseIncome_missingAmount_exceptionThrown() {","lastModifiedDate":"2023-10-29"},{"lineNumber":204,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e incomeFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":205,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DESCRIPTION_FIELD, \"Salary\");","lastModifiedDate":"2023-10-29"},{"lineNumber":206,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DATE_FIELD, \"12/10/2023\");","lastModifiedDate":"2023-10-29"},{"lineNumber":207,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseIncome(incomeFields));","lastModifiedDate":"2023-10-29"},{"lineNumber":208,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":209,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":210,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":211,"author":{"gitId":"bljhty"},"content":"     * Validates that an exception is thrown when the amount in incomeFields has an invalid format.","lastModifiedDate":"2023-10-30"},{"lineNumber":212,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":213,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":214,"author":{"gitId":"bljhty"},"content":"    void testParseAmount_invalidFormat_exceptionThrown() {","lastModifiedDate":"2023-10-29"},{"lineNumber":215,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e incomeFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":216,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DESCRIPTION_FIELD, \"Salary\");","lastModifiedDate":"2023-10-29"},{"lineNumber":217,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.DATE_FIELD, \"12/10/2023\");","lastModifiedDate":"2023-10-29"},{"lineNumber":218,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(IncomeParser.AMOUNT_FIELD, \"5,000.00\");  // Comma is not expected","lastModifiedDate":"2023-10-29"},{"lineNumber":219,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseIncome(incomeFields));","lastModifiedDate":"2023-10-29"},{"lineNumber":220,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":221,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":222,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":223,"author":{"gitId":"bljhty"},"content":"     * Tests for an exception when a non-numeric value is provided for the index in the input data.","lastModifiedDate":"2023-10-30"},{"lineNumber":224,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":225,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":226,"author":{"gitId":"bljhty"},"content":"    void testGetIndex_invalidFormat_exceptionThrown() {","lastModifiedDate":"2023-10-29"},{"lineNumber":227,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e inputMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":228,"author":{"gitId":"bljhty"},"content":"        inputMap.put(IncomeParser.INDEX_FIELD, \"abc\");","lastModifiedDate":"2023-10-29"},{"lineNumber":229,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.getIndex(inputMap));","lastModifiedDate":"2023-10-29"},{"lineNumber":230,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":231,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":232,"author":{"gitId":"bljhty"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":233,"author":{"gitId":"bljhty"},"content":"     * Checks if an exception is thrown when an unrecognized field is provided in incomeFields.","lastModifiedDate":"2023-10-30"},{"lineNumber":234,"author":{"gitId":"bljhty"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":235,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":236,"author":{"gitId":"bljhty"},"content":"    void testParseIncome_nonExistingField_exceptionThrown() {","lastModifiedDate":"2023-10-29"},{"lineNumber":237,"author":{"gitId":"bljhty"},"content":"        HashMap\u003cString, String\u003e incomeFields \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":238,"author":{"gitId":"bljhty"},"content":"        incomeFields.put(\"nonExistingField\", \"Value\");","lastModifiedDate":"2023-10-29"},{"lineNumber":239,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, () -\u003e IncomeParser.parseIncome(incomeFields));","lastModifiedDate":"2023-10-29"},{"lineNumber":240,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":241,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":242,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"bljhty":242}},{"path":"src/test/java/seedu/duke/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":" * JUnit test class for Parser.","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":" * This class tests if the commands are parsed correctly.","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":" * It also tests if the correct exceptions are thrown when the command is invalid.","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"public class ParserTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"    public void testParse_exitCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"exit\", Parser.parse(\"exit\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"    public void testParse_addExpenseCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"add_expense\",","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"                Parser.parse(\"add Expense /de lunch /amt 5.00 /cat food /date 12/Oct/2023\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"    public void testParse_addIncomeCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"add_income\",","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"                Parser.parse(\"add Income /de salary /amt 5000.00 /date 12/Oct/2023\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"    public void testParse_listExpenseCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"list_expenses\", Parser.parse(\"list Expenses\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"    public void testParse_listIncomeCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"list_incomes\", Parser.parse(\"list Incomes\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"    public void testParse_deleteExpenseCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"delete_expense\", Parser.parse(\"delete Expense /i 1\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"    public void testParse_deleteIncomeCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"delete_income\", Parser.parse(\"delete Income /i 1\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"    public void testParse_findCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"find\", Parser.parse(\"find /t expense /cat food /de lunch /date 12/Oct/2023\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"    public void testParse_helpCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"help\", Parser.parse(\"help\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"    public void testParse_invalidCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"invalid\", Parser.parse(\"invalid\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"    public void testParse_listCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"list\", Parser.parse(\"list\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"    public void testParse_balanceCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"balance\", Parser.parse(\"balance\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"    public void testParse_clearIncomesCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"clear_incomes\", Parser.parse(\"clear incomes\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"    public void testParse_clearExpensesCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"clear_expenses\", Parser.parse(\"clear expenses\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"    public void testParse_clearAllCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"clear_all\", Parser.parse(\"clear all\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"    public void testParse_editIncomeCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"edit_income\", Parser.parse(\"edit income /i 1 /de salary /amt 5000.00 /date 12/Oct/2023\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"    public void testParse_editExpenseCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"edit_expense\", Parser.parse(\"edit expense /i 1 /de lunch /amt 5.00 /cat food /date 12/Oct/2023\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"bljhty":99,"KenCheung18":2}},{"path":"src/test/java/seedu/duke/storage/ExchangeRateFileHandlerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limyuhching"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"limyuhching"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"limyuhching"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"limyuhching"},"content":"import seedu.duke.financialrecords.ExchangeRateManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"limyuhching"},"content":"import java.io.File;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"limyuhching"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"limyuhching"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"limyuhching"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"limyuhching"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"limyuhching"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"limyuhching"},"content":"public class ExchangeRateFileHandlerTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"limyuhching"},"content":"    private ExchangeRateFileHandler fileHandler;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"limyuhching"},"content":"    private ExchangeRateManager exchangeRateManager \u003d ExchangeRateManager.getInstance();","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"limyuhching"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"limyuhching"},"content":"    public void setup() throws KaChinnnngException {","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"limyuhching"},"content":"        exchangeRateManager.clear();","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"limyuhching"},"content":"    public void testLoad_validFileFormat_exchangeRateMatches() throws FileNotFoundException, KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"limyuhching"},"content":"        fileHandler \u003d new ExchangeRateFileHandler(\"./src/test/testData/ExchangeRatesTestLoad.txt\");","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"limyuhching"},"content":"        fileHandler.load();","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"limyuhching"},"content":"        // Verify that the loaded exchange rates match the original ones","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"limyuhching"},"content":"        assertEquals(1.0, exchangeRateManager.getExchangeRate(\"USD\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"limyuhching"},"content":"        assertEquals(0.85, exchangeRateManager.getExchangeRate(\"EUR\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"limyuhching"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"limyuhching"},"content":"    public void testSave_validInput_fileContentMatches() throws KaChinnnngException, FileNotFoundException {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"limyuhching"},"content":"        // load or create filepath","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"limyuhching"},"content":"        String filePath \u003d \"./src/test/testData/ExchangeRatesTestSave.txt\";","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"limyuhching"},"content":"        createFile(filePath);","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"limyuhching"},"content":"        new PrintWriter(filePath).close(); // clears the file","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"limyuhching"},"content":"        fileHandler \u003d new ExchangeRateFileHandler(filePath);","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"limyuhching"},"content":"        fileHandler.load();","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"limyuhching"},"content":"        // Define test data","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"limyuhching"},"content":"        exchangeRateManager.updateExchangeRate(\"USD\", 1.0);","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"limyuhching"},"content":"        // Save the exchange rates to the file","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"limyuhching"},"content":"        fileHandler.save(exchangeRateManager.getExchangeRates());","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"limyuhching"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"limyuhching"},"content":"        Scanner s \u003d new Scanner(file); // Create a Scanner using the File as the source","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"limyuhching"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"limyuhching"},"content":"            String textLine \u003d s.nextLine();","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"limyuhching"},"content":"            assertEquals(\"USD,1.0\", textLine);","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"limyuhching"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"limyuhching"},"content":"    private boolean createFile(String filePath) throws KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"limyuhching"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"limyuhching"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"limyuhching"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"limyuhching"},"content":"                return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"limyuhching"},"content":"            if (!file.getParentFile().exists()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"limyuhching"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"limyuhching"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"limyuhching"},"content":"            return file.createNewFile();","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"limyuhching"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"limyuhching"},"content":"            throw new KaChinnnngException(\"Cannot create file; reason: \" + e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"limyuhching"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"limyuhching"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"limyuhching"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"limyuhching":69}},{"path":"src/test/java/seedu/duke/storage/GetFromTxtTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.commands.ClearAll;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Utilities;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Food;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Transport;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.expensetypes.MealType;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.expensetypes.TransportationType;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.expensetypes.UtilityType;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"public class GetFromTxtTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":"    private ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"KenCheung18"},"content":"    private ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":"    private String path;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":"    private String []lines \u003d new String[10];","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"KenCheung18"},"content":"     * Sets up the test fixture.","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"KenCheung18"},"content":"     * Called before every test case method.","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"KenCheung18"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"KenCheung18"},"content":"    public void setup() throws KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"KenCheung18"},"content":"        incomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"KenCheung18"},"content":"        expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"KenCheung18"},"content":"        path \u003d \"Test.txt\";","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"KenCheung18"},"content":"     * Test the {@link SaveToTxt#saveIncomeToTextFile(ArrayList)} method with multiple incomes records without expenses,","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"KenCheung18"},"content":"     * This test case checks whether the more than one income from the txt file save to the list correctly","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"KenCheung18"},"content":"    public void testGetFromTxtWithMoreThanOneIncomes() throws KaChinnnngException, IOException {","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"KenCheung18"},"content":"        SaveToTxt test \u003d new SaveToTxt(path);","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"KenCheung18"},"content":"        new ClearAll(incomes,expenses).clearAllIncomeAndExpense();","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"KenCheung18"},"content":"        test.saveIncomeAndExpense(incomes, expenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"KenCheung18"},"content":"        incomes.add(new Income(\"Salary\", LocalDate.of(2023, 10, 10), 5000.0));","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"KenCheung18"},"content":"        incomes.add(new Income(\"Bonus\", LocalDate.of(2023, 10, 15), 1000.0));","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"KenCheung18"},"content":"        test.saveIncomeToTextFile(incomes);","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cIncome\u003e newIncomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cExpense\u003e newExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"KenCheung18"},"content":"        GetFromTxt getFromTxt \u003d new GetFromTxt(path);","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"KenCheung18"},"content":"        getFromTxt.getFromTextFile(newIncomes, newExpenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"Salary\", newIncomes.get(0).getDescription());","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"Bonus\", newIncomes.get(1).getDescription());","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(LocalDate.of(2023, 10, 10),  newIncomes.get(0).getDate());","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(LocalDate.of(2023, 10, 15),  newIncomes.get(1).getDate());","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(5000.0, newIncomes.get(0).getAmount());","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(1000.0, newIncomes.get(1).getAmount());","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"KenCheung18"},"content":"     * Test the {@link GetFromTxt#getFromTextFile(ArrayList, ArrayList)} method","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"KenCheung18"},"content":"     * with different expense type without incomes, This test case checks whether the different type of expenses","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"KenCheung18"},"content":"     * from the txt file save to the list correctly","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"KenCheung18"},"content":"    public void testGetFromTxtWithDifferentExpenseType() throws KaChinnnngException, IOException {","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"KenCheung18"},"content":"        SaveToTxt test \u003d new SaveToTxt(path);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"KenCheung18"},"content":"        new ClearAll(incomes,expenses).clearAllIncomeAndExpense();","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"KenCheung18"},"content":"        test.saveIncomeAndExpense(incomes, expenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"KenCheung18"},"content":"        expenses.add(new Food(\"chicken sandwich\",","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"KenCheung18"},"content":"                LocalDate.of(2023, 10, 1),10.0, MealType.LUNCH));","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"KenCheung18"},"content":"        expenses.add(new Transport(\"Taxi\",","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"KenCheung18"},"content":"                LocalDate.of(2023, 10, 2),50.0, TransportationType.FUEL));","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"KenCheung18"},"content":"        expenses.add(new Utilities(\"Electricity\",","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"KenCheung18"},"content":"                LocalDate.of(2023, 10, 3),100.0, UtilityType.ELECTRICITY));","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"KenCheung18"},"content":"        test.saveExpenseToTextFile(expenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cIncome\u003e newIncomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cExpense\u003e newExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"KenCheung18"},"content":"        GetFromTxt getFromTxt \u003d new GetFromTxt(path);","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"KenCheung18"},"content":"        getFromTxt.getFromTextFile(newIncomes, newExpenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"chicken sandwich\", newExpenses.get(0).getDescription());","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"Taxi\", newExpenses.get(1).getDescription());","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"Electricity\", newExpenses.get(2).getDescription());","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(LocalDate.of(2023, 10, 1),  newExpenses.get(0).getDate());","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(LocalDate.of(2023, 10, 2),  newExpenses.get(1).getDate());","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(LocalDate.of(2023, 10, 3),  newExpenses.get(2).getDate());","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(10.0, newExpenses.get(0).getAmount());","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(50.0, newExpenses.get(1).getAmount());","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(100.0, newExpenses.get(2).getAmount());","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(MealType.LUNCH, ((Food) newExpenses.get(0)).getMealType());","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(TransportationType.FUEL, ((Transport) newExpenses.get(1)).getTransportationType());","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(UtilityType.ELECTRICITY, ((Utilities) newExpenses.get(2)).getUtilityType());","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"KenCheung18"},"content":"     * Test the {@link GetFromTxt#getFromTextFile(ArrayList, ArrayList)} method with different expense type and incomes.","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"KenCheung18"},"content":"     * This test case checks whether the different type of expenses and income record get from","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"KenCheung18"},"content":"     * the txt file save to the list correctly","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"KenCheung18"},"content":"    public void testGetFromTxtWithDifferentIncomesAndExpenses() throws KaChinnnngException, IOException {","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"KenCheung18"},"content":"        SaveToTxt test \u003d new SaveToTxt(path);","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"KenCheung18"},"content":"        new ClearAll(incomes,expenses).clearAllIncomeAndExpense();","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"KenCheung18"},"content":"        test.saveIncomeAndExpense(incomes, expenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"KenCheung18"},"content":"        expenses.add(new Food(\"chicken sandwich\",","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"KenCheung18"},"content":"                LocalDate.of(2023, 10, 1),10.0, MealType.LUNCH));","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"KenCheung18"},"content":"        expenses.add(new Transport(\"Taxi\",","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"KenCheung18"},"content":"                LocalDate.of(2023, 10, 2),50.0, TransportationType.FUEL));","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"KenCheung18"},"content":"        expenses.add(new Utilities(\"Electricity\",","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"KenCheung18"},"content":"                LocalDate.of(2023, 10, 3),100.0, UtilityType.ELECTRICITY));","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"KenCheung18"},"content":"        incomes.add(new Income(\"Salary\",","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"KenCheung18"},"content":"                LocalDate.of(2023, 10, 10), 5000.0));","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"KenCheung18"},"content":"        incomes.add(new Income(\"Bonus\",","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"KenCheung18"},"content":"                LocalDate.of(2023, 10, 15), 1000.0));","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"KenCheung18"},"content":"        test.saveIncomeAndExpense(incomes,expenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cIncome\u003e newIncomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cExpense\u003e newExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"KenCheung18"},"content":"        GetFromTxt getFromTxt \u003d new GetFromTxt(path);","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"KenCheung18"},"content":"        getFromTxt.getFromTextFile(newIncomes, newExpenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"chicken sandwich\", newExpenses.get(0).getDescription());","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"Taxi\", newExpenses.get(1).getDescription());","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"Electricity\", newExpenses.get(2).getDescription());","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(LocalDate.of(2023, 10, 1),  newExpenses.get(0).getDate());","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(LocalDate.of(2023, 10, 2),  newExpenses.get(1).getDate());","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(LocalDate.of(2023, 10, 3),  newExpenses.get(2).getDate());","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(10.0, newExpenses.get(0).getAmount());","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(50.0, newExpenses.get(1).getAmount());","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(100.0, newExpenses.get(2).getAmount());","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(MealType.LUNCH, ((Food) newExpenses.get(0)).getMealType());","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(TransportationType.FUEL, ((Transport) newExpenses.get(1)).getTransportationType());","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(UtilityType.ELECTRICITY, ((Utilities) newExpenses.get(2)).getUtilityType());","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"Salary\", newIncomes.get(0).getDescription());","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"Bonus\", newIncomes.get(1).getDescription());","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(LocalDate.of(2023, 10, 10),  newIncomes.get(0).getDate());","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(LocalDate.of(2023, 10, 15),  newIncomes.get(1).getDate());","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(5000.0, newIncomes.get(0).getAmount());","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(1000.0, newIncomes.get(1).getAmount());","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"KenCheung18"},"content":"     * Test the {@link GetFromTxt#getFromTextFile(ArrayList, ArrayList)} method with Both incorrect format.","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"KenCheung18"},"content":"     * This test case checks whether the program still working when user changes the txt file.","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"KenCheung18"},"content":"    public void testGetFromTxtWithWrongFormat() throws KaChinnnngException, IOException {","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"KenCheung18"},"content":"        try (FileWriter fw \u003d new FileWriter(path)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"KenCheung18"},"content":"            fw.write(\"nothing special\");","lastModifiedDate":"2023-11-07"},{"lineNumber":151,"author":{"gitId":"KenCheung18"},"content":"            fw.write(\"EF |de chicken sandwich |amt 10000000000.0 |date 2023-10-01 |type 2\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":152,"author":{"gitId":"KenCheung18"},"content":"            fw.write(\"I |de Salary |amt 5000.00 |date 2023-10-\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":153,"author":{"gitId":"KenCheung18"},"content":"            fw.write(\"EF |de chicken sandwich |amt -1 |date 2023-10/01 |type 2\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":154,"author":{"gitId":"KenCheung18"},"content":"            fw.write(\"EF \\n\");","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"KenCheung18"},"content":"            fw.write(\"ABC |de chicken sandwich |amt 1000.0 |date 2023-10-01 |type 1\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":156,"author":{"gitId":"KenCheung18"},"content":"            fw.write(\"EF |de chicken sandwich |amt 1000.0 |date 2023-10-01 |type asdf\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":157,"author":{"gitId":"KenCheung18"},"content":"            fw.write(\"EF |de chicken sandwich |amt 10000000000.0 |date 2023-10-01 |type 32\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":158,"author":{"gitId":"KenCheung18"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"KenCheung18"},"content":"            System.out.println(\"Error\");","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cIncome\u003e newIncomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"KenCheung18"},"content":"        ArrayList\u003cExpense\u003e newExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"KenCheung18"},"content":"        GetFromTxt getFromTxt \u003d new GetFromTxt(path);","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"KenCheung18"},"content":"        getFromTxt.getFromTextFile(newIncomes, newExpenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(0, newIncomes.size());","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(0, newExpenses.size());","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"KenCheung18"},"content":"    ","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"KenCheung18"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"KenCheung18":169}},{"path":"src/test/java/seedu/duke/storage/SaveToTxtTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KenCheung18"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"KenCheung18"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"KenCheung18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.commands.ClearAll;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Utilities;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Food;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.Transport;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.expensetypes.MealType;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.expensetypes.TransportationType;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"KenCheung18"},"content":"import seedu.duke.financialrecords.expensetypes.UtilityType;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"KenCheung18"},"content":"import java.io.File;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"KenCheung18"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"KenCheung18"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"KenCheung18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"KenCheung18"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"KenCheung18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"KenCheung18"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"KenCheung18"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"KenCheung18"},"content":" * Tests for the {@link SaveToTxt} class.","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"KenCheung18"},"content":" * This test class provides test cases to check whether incomes and expenses records","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"KenCheung18"},"content":" * are saved correctly to the txt file","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"KenCheung18"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"KenCheung18"},"content":"public class SaveToTxtTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"KenCheung18"},"content":"    private ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"KenCheung18"},"content":"    private ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"KenCheung18"},"content":"    private String path;","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"KenCheung18"},"content":"    private String []lines \u003d new String[10];","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"KenCheung18"},"content":"     * Sets up the test fixture.","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"KenCheung18"},"content":"     * Called before every test case method.","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"KenCheung18"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"KenCheung18"},"content":"    public void setup() throws KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"KenCheung18"},"content":"        incomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"KenCheung18"},"content":"        expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"KenCheung18"},"content":"        path \u003d \"Test.txt\";","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"KenCheung18"},"content":"     * Test the {@link SaveToTxt#saveIncomeToTextFile(ArrayList)} method with income only.","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"KenCheung18"},"content":"     * This test case checks whether the one incomes record can save correctly.","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"KenCheung18"},"content":"    public void testSaveToTxtWithOneIncome() throws KaChinnnngException, IOException {","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"KenCheung18"},"content":"        SaveToTxt test \u003d new SaveToTxt(path);","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"KenCheung18"},"content":"        new ClearAll(incomes,expenses).clearAllIncomeAndExpense();","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"KenCheung18"},"content":"        test.saveIncomeAndExpense(incomes, expenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"KenCheung18"},"content":"        incomes.add(new Income(\"Salary\", LocalDate.of(2023, 10, 10), 5000.0));","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"KenCheung18"},"content":"        test.saveIncomeToTextFile(incomes);","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"KenCheung18"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"KenCheung18"},"content":"        Scanner s \u003d new Scanner(file);                      // Create a Scanner using the File as the source","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"KenCheung18"},"content":"        String line \u003d s.nextLine();","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"I |de Salary |amt 5000.00 |date 2023-10-10\", line);","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"KenCheung18"},"content":"        new ClearAll(incomes,expenses).clearAllIncomeAndExpense();","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"KenCheung18"},"content":"        test.saveIncomeAndExpense(incomes, expenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"KenCheung18"},"content":"     * Test the {@link SaveToTxt#saveIncomeToTextFile(ArrayList)} method with incomes only.","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"KenCheung18"},"content":"     * This test case checks whether the multiple incomes record can save correctly.","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"KenCheung18"},"content":"    public void testSaveToTxtWithMoreThanOneIncomes() throws KaChinnnngException, IOException {","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"KenCheung18"},"content":"        SaveToTxt test \u003d new SaveToTxt(path);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"KenCheung18"},"content":"        new ClearAll(incomes,expenses).clearAllIncomeAndExpense();","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"KenCheung18"},"content":"        test.saveIncomeAndExpense(incomes, expenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"KenCheung18"},"content":"        incomes.add(new Income(\"Salary\", LocalDate.of(2023, 10, 10), 5000.0));","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"KenCheung18"},"content":"        incomes.add(new Income(\"Bonus\", LocalDate.of(2023, 10, 15), 1000.0));","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"KenCheung18"},"content":"        test.saveIncomeToTextFile(incomes);","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"KenCheung18"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"KenCheung18"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"KenCheung18"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"KenCheung18"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"KenCheung18"},"content":"            lines[i] \u003d s.nextLine();","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"KenCheung18"},"content":"            i++;","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"I |de Salary |amt 5000.00 |date 2023-10-10\", lines[0]);","lastModifiedDate":"2023-11-06"},{"lineNumber":85,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"I |de Bonus |amt 1000.00 |date 2023-10-15\" ,lines[1]);","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"KenCheung18"},"content":"     * Test the {@link SaveToTxt#saveExpenseToTextFile(ArrayList)} method with expense of Food type only.","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"KenCheung18"},"content":"     * This test case checks whether the Food expenses record can save correctly.","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"KenCheung18"},"content":"    public void testSaveToTxtWithOneExpense() throws KaChinnnngException, IOException {","lastModifiedDate":"2023-11-07"},{"lineNumber":93,"author":{"gitId":"KenCheung18"},"content":"        SaveToTxt test \u003d new SaveToTxt(path);","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"KenCheung18"},"content":"        new ClearAll(incomes,expenses).clearAllIncomeAndExpense();","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"KenCheung18"},"content":"        test.saveIncomeAndExpense(incomes, expenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"KenCheung18"},"content":"        expenses.add(new Food(\"chicken sandwich\", LocalDate.of(2023, 10, 1),10.0, MealType.LUNCH));","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"KenCheung18"},"content":"        test.saveExpenseToTextFile(expenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"KenCheung18"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"KenCheung18"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"KenCheung18"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"KenCheung18"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"KenCheung18"},"content":"            lines[i] \u003d s.nextLine();","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"KenCheung18"},"content":"            i++;","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"EF |de chicken sandwich |amt 10.00 |date 2023-10-01 |type 2\", lines[0]);","lastModifiedDate":"2023-11-06"},{"lineNumber":106,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"KenCheung18"},"content":"     * Test the {@link SaveToTxt#saveExpenseToTextFile(ArrayList)} method with different expense type but no incomes.","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"KenCheung18"},"content":"     * This test case checks whether the different type of expenses record can save correctly.","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"KenCheung18"},"content":"    public void testSaveToTxtWithDifferentExpenseType() throws KaChinnnngException, IOException {","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"KenCheung18"},"content":"        SaveToTxt test \u003d new SaveToTxt(path);","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"KenCheung18"},"content":"        new ClearAll(incomes,expenses).clearAllIncomeAndExpense();","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"KenCheung18"},"content":"        test.saveIncomeAndExpense(incomes, expenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"KenCheung18"},"content":"        expenses.add(new Food(\"chicken sandwich\", LocalDate.of(2023, 10, 1),10.0, MealType.LUNCH));","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"KenCheung18"},"content":"        expenses.add(new Transport(\"Taxi\", LocalDate.of(2023, 10, 1),50.0, TransportationType.FUEL));","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"KenCheung18"},"content":"        expenses.add(new Utilities(\"Electricity\", LocalDate.of(2023, 10, 3),100.0, UtilityType.ELECTRICITY));","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"KenCheung18"},"content":"        test.saveExpenseToTextFile(expenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"KenCheung18"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"KenCheung18"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"KenCheung18"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"KenCheung18"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"KenCheung18"},"content":"            lines[i] \u003d s.nextLine();","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"KenCheung18"},"content":"            i++;","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"EF |de chicken sandwich |amt 10.00 |date 2023-10-01 |type 2\", lines[0]);","lastModifiedDate":"2023-11-06"},{"lineNumber":129,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"ET |de Taxi |amt 50.00 |date 2023-10-01 |type 4\", lines[1]);","lastModifiedDate":"2023-11-06"},{"lineNumber":130,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"EU |de Electricity |amt 100.00 |date 2023-10-03 |type 2\", lines[2]);","lastModifiedDate":"2023-11-06"},{"lineNumber":131,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"KenCheung18"},"content":"     * Test the {@link SaveToTxt#saveIncomeAndExpense(ArrayList, ArrayList)} method with both incomes and expenses.","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"KenCheung18"},"content":"     * This test case checks whether both incomes and expenses can save correctly","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"KenCheung18"},"content":"    public void testSaveToTxtWithDifferentExpensesAndIncomes() throws KaChinnnngException, IOException {","lastModifiedDate":"2023-11-07"},{"lineNumber":139,"author":{"gitId":"KenCheung18"},"content":"        // Since it\u0027s two separate function so need to test whether they work together","lastModifiedDate":"2023-11-07"},{"lineNumber":140,"author":{"gitId":"KenCheung18"},"content":"        SaveToTxt test \u003d new SaveToTxt(path);","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"KenCheung18"},"content":"        new ClearAll(incomes,expenses).clearAllIncomeAndExpense();","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"KenCheung18"},"content":"        test.saveIncomeAndExpense(incomes, expenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"KenCheung18"},"content":"        incomes.add(new Income(\"Salary\", LocalDate.of(2023, 10, 10), 5000.0));","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"KenCheung18"},"content":"        incomes.add(new Income(\"Bonus\", LocalDate.of(2023, 10, 15), 1000.0));","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"KenCheung18"},"content":"        expenses.add(new Food(\"chicken sandwich\", LocalDate.of(2023, 10, 1),10.0, MealType.LUNCH));","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"KenCheung18"},"content":"        expenses.add(new Transport(\"Taxi\", LocalDate.of(2023, 10, 1),50.0, TransportationType.FUEL));","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"KenCheung18"},"content":"        expenses.add(new Utilities(\"Electricity\", LocalDate.of(2023, 10, 3),100.0, UtilityType.ELECTRICITY));","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"KenCheung18"},"content":"        test.saveIncomeAndExpense(incomes,expenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"KenCheung18"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"KenCheung18"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"KenCheung18"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"KenCheung18"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"KenCheung18"},"content":"            lines[i] \u003d s.nextLine();","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"KenCheung18"},"content":"            i++;","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"I |de Salary |amt 5000.00 |date 2023-10-10\", lines[0]);","lastModifiedDate":"2023-11-06"},{"lineNumber":157,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"I |de Bonus |amt 1000.00 |date 2023-10-15\" ,lines[1]);","lastModifiedDate":"2023-11-06"},{"lineNumber":158,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"EF |de chicken sandwich |amt 10.00 |date 2023-10-01 |type 2\", lines[2]);","lastModifiedDate":"2023-11-06"},{"lineNumber":159,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"ET |de Taxi |amt 50.00 |date 2023-10-01 |type 4\", lines[3]);","lastModifiedDate":"2023-11-06"},{"lineNumber":160,"author":{"gitId":"KenCheung18"},"content":"        assertEquals(\"EU |de Electricity |amt 100.00 |date 2023-10-03 |type 2\", lines[4]);","lastModifiedDate":"2023-11-06"},{"lineNumber":161,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":163,"author":{"gitId":"KenCheung18"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":164,"author":{"gitId":"KenCheung18"},"content":"     * Test the {@link SaveToTxt#saveExpenseToTextFile(ArrayList)} and disable write access.","lastModifiedDate":"2023-11-07"},{"lineNumber":165,"author":{"gitId":"KenCheung18"},"content":"     * This test case checks whether SaveToTxt function produce error when write access is disabled.","lastModifiedDate":"2023-11-07"},{"lineNumber":166,"author":{"gitId":"KenCheung18"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":167,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":168,"author":{"gitId":"KenCheung18"},"content":"    public void testNoAccessDirectory() throws KaChinnnngException, IOException {","lastModifiedDate":"2023-11-07"},{"lineNumber":169,"author":{"gitId":"KenCheung18"},"content":"        SaveToTxt test \u003d new SaveToTxt(path);","lastModifiedDate":"2023-11-07"},{"lineNumber":170,"author":{"gitId":"KenCheung18"},"content":"        new ClearAll(incomes,expenses).clearAllIncomeAndExpense();","lastModifiedDate":"2023-11-07"},{"lineNumber":171,"author":{"gitId":"KenCheung18"},"content":"        test.saveIncomeAndExpense(incomes, expenses);","lastModifiedDate":"2023-11-07"},{"lineNumber":172,"author":{"gitId":"KenCheung18"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-11-07"},{"lineNumber":173,"author":{"gitId":"KenCheung18"},"content":"        file.setWritable(false);","lastModifiedDate":"2023-11-07"},{"lineNumber":174,"author":{"gitId":"KenCheung18"},"content":"        expenses.add(new Food(\"chicken sandwich\", LocalDate.of(2023, 10, 1),10.0, MealType.LUNCH));","lastModifiedDate":"2023-11-07"},{"lineNumber":175,"author":{"gitId":"KenCheung18"},"content":"        test.saveExpenseToTextFile(expenses);","lastModifiedDate":"2023-11-07"},{"lineNumber":176,"author":{"gitId":"KenCheung18"},"content":"        file.setWritable(true);","lastModifiedDate":"2023-11-07"},{"lineNumber":177,"author":{"gitId":"KenCheung18"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-11-07"},{"lineNumber":178,"author":{"gitId":"KenCheung18"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-11-07"},{"lineNumber":179,"author":{"gitId":"KenCheung18"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-11-07"},{"lineNumber":180,"author":{"gitId":"KenCheung18"},"content":"            lines[i] \u003d s.nextLine();","lastModifiedDate":"2023-11-07"},{"lineNumber":181,"author":{"gitId":"KenCheung18"},"content":"            i++;","lastModifiedDate":"2023-11-07"},{"lineNumber":182,"author":{"gitId":"KenCheung18"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":183,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":184,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":185,"author":{"gitId":"KenCheung18"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":186,"author":{"gitId":"KenCheung18"},"content":"    public void testPassNullArrayList() {","lastModifiedDate":"2023-11-07"},{"lineNumber":187,"author":{"gitId":"KenCheung18"},"content":"        assertThrows(AssertionError.class, () -\u003e new SaveToTxt(null));","lastModifiedDate":"2023-11-07"},{"lineNumber":188,"author":{"gitId":"KenCheung18"},"content":"        assertThrows(AssertionError.class, () -\u003e new SaveToTxt(path).saveIncomeAndExpense(null, expenses));","lastModifiedDate":"2023-11-07"},{"lineNumber":189,"author":{"gitId":"KenCheung18"},"content":"        assertThrows(AssertionError.class, () -\u003e new SaveToTxt(path).saveIncomeAndExpense(incomes, null));","lastModifiedDate":"2023-11-07"},{"lineNumber":190,"author":{"gitId":"KenCheung18"},"content":"        assertThrows(AssertionError.class, () -\u003e new SaveToTxt(path).saveIncomeToTextFile(null));","lastModifiedDate":"2023-11-07"},{"lineNumber":191,"author":{"gitId":"KenCheung18"},"content":"        assertThrows(AssertionError.class, () -\u003e new SaveToTxt(path).saveIncomeToTextFile(null));","lastModifiedDate":"2023-11-07"},{"lineNumber":192,"author":{"gitId":"KenCheung18"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":193,"author":{"gitId":"KenCheung18"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":194,"author":{"gitId":"KenCheung18"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"KenCheung18":194}},{"path":"src/test/java/seedu/duke/ui/MockUi.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.ui;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import  seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"public class MockUi extends Ui{","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"    private List\u003cString\u003e printedMessages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"    private List\u003cString\u003e showIncomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"    private List\u003cString\u003e showExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"        printedMessages.add(message);","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    public void showMatchingIncomes(List\u003cIncome\u003e matchingIncomes) {","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"        showIncomes.add(matchingIncomes.toString());","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"    public void showMatchingExpenses(List\u003cExpense\u003e matchingExpenses) {","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"        showExpenses.add(matchingExpenses.toString());","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"    public List\u003cString\u003e getPrintedMessages() {","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"        return printedMessages;","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"    public List\u003cString\u003e getShowIncomes() {","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"        return showIncomes;","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"    public List\u003cString\u003e getShowExpenses() {","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"        return showExpenses;","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"bljhty":40}},{"path":"src/test/java/seedu/duke/ui/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bljhty"},"content":"package seedu.duke.ui;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"bljhty"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"bljhty"},"content":"import seedu.duke.commands.KaChinnnngException;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Income;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"bljhty"},"content":"import seedu.duke.financialrecords.Expense;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"bljhty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"bljhty"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"bljhty"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"bljhty"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"bljhty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"bljhty"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"bljhty"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"bljhty"},"content":"public class UiTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"bljhty"},"content":"    public void readCommand_validInput_commandReturned() throws KaChinnnngException {","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"bljhty"},"content":"        // Set up simulated user input","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"bljhty"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(\"testCommand\".getBytes());","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"bljhty"},"content":"        System.setIn(in);","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"bljhty"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"bljhty"},"content":"        // Act","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"bljhty"},"content":"        String command \u003d ui.readCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"bljhty"},"content":"        // Assert","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"testCommand\", command);","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"bljhty"},"content":"    public void readCommand_noInput_exceptionThrown() {","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"bljhty"},"content":"        // Set up simulated user input with no data","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"bljhty"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(\"\".getBytes());","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"bljhty"},"content":"        System.setIn(in);","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"bljhty"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"bljhty"},"content":"        // Act and Assert","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"bljhty"},"content":"        assertThrows(KaChinnnngException.class, ui::readCommand);","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"bljhty"},"content":"    public void printWelcomeMessage_validInput_messagePrinted() {","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"bljhty"},"content":"        // Set up simulated output stream","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"bljhty"},"content":"        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"bljhty"},"content":"        System.setOut(new PrintStream(out));","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"bljhty"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"bljhty"},"content":"        // Assert","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"____________________________________________________________\"+ System.lineSeparator()","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"bljhty"},"content":"                + \"Welcome to KaChinnnngggg! How may i assist you today?\"+ System.lineSeparator()","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"bljhty"},"content":"                + \"____________________________________________________________\"+ System.lineSeparator(),","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"bljhty"},"content":"                out.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"bljhty"},"content":"    public void printGoodbyeMessage_validInput_messagePrinted() {","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"bljhty"},"content":"        // Set up simulated output stream","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"bljhty"},"content":"        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"bljhty"},"content":"        System.setOut(new PrintStream(out));","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"bljhty"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"bljhty"},"content":"        ui.printGoodbyeMessage();","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"bljhty"},"content":"        // Assert","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"____________________________________________________________\" + System.lineSeparator()","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"bljhty"},"content":"                + \"Bye. Hope to see you again soon!\" + System.lineSeparator()","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"bljhty"},"content":"                + \"____________________________________________________________\" + System.lineSeparator()","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"bljhty"},"content":"                , out.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"bljhty"},"content":"    public void showLineDivider_validInput_messagePrinted() {","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"bljhty"},"content":"        // Set up simulated output stream","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"bljhty"},"content":"        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"bljhty"},"content":"        System.setOut(new PrintStream(out));","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"bljhty"},"content":"        Ui.showLineDivider();","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"bljhty"},"content":"        // Assert","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"____________________________________________________________\"+ System.lineSeparator(),","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"bljhty"},"content":"                out.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"bljhty"},"content":"    ","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"bljhty"},"content":"    public void printListIncomeMessage_validInput_messagePrinted() {","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"bljhty"},"content":"        // Set up simulated output stream","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"bljhty"},"content":"        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"bljhty"},"content":"        System.setOut(new PrintStream(out));","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"bljhty"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"bljhty"},"content":"        ui.printListIncomeMessage();","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"bljhty"},"content":"        // Assert","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"Here are your incomes:\" + System.lineSeparator(), out.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"bljhty"},"content":"    public void printListExpenseMessage_validInput_messagePrinted() {","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"bljhty"},"content":"        // Set up simulated output stream","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"bljhty"},"content":"        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"bljhty"},"content":"        System.setOut(new PrintStream(out));","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"bljhty"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"bljhty"},"content":"        ui.printListExpenseMessage();","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"bljhty"},"content":"        // Assert","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"Here are your expenses:\" + System.lineSeparator(), out.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"bljhty"},"content":"    public void showMatchingIncomes_nullTest() {","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"bljhty"},"content":"        // Set up simulated output stream","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"bljhty"},"content":"        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"bljhty"},"content":"        System.setOut(new PrintStream(out));","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"bljhty"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"bljhty"},"content":"        ui.showMatchingIncomes(null);","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"bljhty"},"content":"        // Assert","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"No matching incomes found.\", out.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"bljhty"},"content":"    public void showMatchingIncome_correctTest(){","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"bljhty"},"content":"        // Set up simulated output stream","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"bljhty"},"content":"        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"bljhty"},"content":"        System.setOut(new PrintStream(out));","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"bljhty"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"bljhty"},"content":"        Income income \u003d null;","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"bljhty"},"content":"        List\u003cIncome\u003e incomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"bljhty"},"content":"            income \u003d new Income(\"Test Description\", LocalDate.now(), 100.0);","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"bljhty"},"content":"            incomes.add(income);","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"bljhty"},"content":"        } catch (KaChinnnngException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"bljhty"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"bljhty"},"content":"        ui.showMatchingIncomes(incomes);","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"bljhty"},"content":"        // Assert","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"Here are the matching incomes in your list:\" + System.lineSeparator()","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"bljhty"},"content":"                + income.toString() + System.lineSeparator(), out.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"bljhty"},"content":"    public void showMatchingExpenses_nullTest() {","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"bljhty"},"content":"        // Set up simulated output stream","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"bljhty"},"content":"        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"bljhty"},"content":"        System.setOut(new PrintStream(out));","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"bljhty"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"bljhty"},"content":"        ui.showMatchingExpenses(null);","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"bljhty"},"content":"        // Assert","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"No matching expenses found.\", out.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"bljhty"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"bljhty"},"content":"    public void showMatchingExpenses_correctTest(){","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"bljhty"},"content":"        // Set up simulated output stream","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"bljhty"},"content":"        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"bljhty"},"content":"        System.setOut(new PrintStream(out));","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"bljhty"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"bljhty"},"content":"        Expense expense \u003d null;","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"bljhty"},"content":"        List\u003cExpense\u003e expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"bljhty"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"bljhty"},"content":"            expense \u003d new Expense(\"Test Description\", LocalDate.now(), 100.0);","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"bljhty"},"content":"            expenses.add(expense);","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"bljhty"},"content":"        } catch (KaChinnnngException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"bljhty"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"bljhty"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"bljhty"},"content":"        ui.showMatchingExpenses(expenses);","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"bljhty"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"bljhty"},"content":"        // Assert","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"bljhty"},"content":"        assertEquals(\"Here are the matching expenses in your list:\"","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"bljhty"},"content":"                + System.lineSeparator() + expense.toString() + System.lineSeparator(), out.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"bljhty"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"bljhty"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"bljhty":185}}]
