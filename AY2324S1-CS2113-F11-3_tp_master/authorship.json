[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"wendelinwemhoener":1,"-":64}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName.set(\"duke\")","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wendelinwemhoener":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Display |        Name        | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"--------|:------------------:|:--------------:|:---------:","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"![](https://media.licdn.com/dms/image/C4D03AQGTLbALYjG82Q/profile-displayphoto-shrink_800_800/0/1580629728751?e\u003d1701907200\u0026v\u003dbeta\u0026t\u003dPEfw_qZfZA39rJRfo5_Pg4o_RmbPwdneiPX3ftNt9dA) | Wendelin Wemhoener | [Github](https://github.com/wendelinwemhoener/) | [Portfolio](docs/team/wendelinwemhoener.md)","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Cheezeblokz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |     Zhu Jingxi     | [Github](https://github.com/Cheezeblokz) | [Portfolio](docs/team/zhujingxi.md)","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"![](/Users/brian/Desktop/Colgate/NUS Fall 2023/CS2113/Team Project/docs/photo/kherlenbayasgalan.jpg) | Kherlen Bayasgalan | [Github](https://github.com/Brian030601) | [Portfolio](docs/team/kherlenbayasgalan.md)","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Bang Junhyeong   | [Github](https://github.com/junhyeong0411) | [Portfolio](docs/team/bangjunhyeong.md)","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |      Don Roe       | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"wendelinwemhoener":2,"Cheezeblokz":2,"-":4,"junhyeong0411":1,"Brian030601":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":"### Storage Components","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"API: `FlashcardStorage.java`","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"![Flashcard Storage Sequance Diagram](photo/FlashcardStorage-0.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"The `FlashcardStorage` component,","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"* can save flashcards in `flashcard.txt` in specific text format","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"* saves automatically when changes occur.","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"* component loads automatically when the program starts.  ","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"* component can check if the saved txt file has been damaged.","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"`EventStorage` has same structure.","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"Brian030601"},"content":"### Calendar Components","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Brian030601"},"content":"#### Command Package","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"Brian030601"},"content":"+ The package has 7 files in it for users to command their calendar. Those files are ","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"Brian030601"},"content":"  AddEventCommand, DeleteAllEventsCommand, DeleteEventCommand, EventCommand, FindEventCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"Brian030601"},"content":"  ListEventCommand, and UnknownCommand. The other 6 commands extend EventCommand, which is","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"Brian030601"},"content":"  an abstract class that forces other 6 commands to have an execute method.","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"Brian030601"},"content":"+ Each command files execute its own commands. The UnknownCommand file handles the exceptions,","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"Brian030601"},"content":"  such as if the user commands something that doesn\u0027t exist","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"Brian030601"},"content":"#### Calendar Package","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"Brian030601"},"content":"+ The calendar package excluding the command package has another 8 files.","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"Brian030601"},"content":"  The empty calendar class is reserved for adding future implementations.","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"Brian030601"},"content":"  The CalendarManager, EventStorage, \u0026 CalendarCommandParser manages user input, saves, and loads them.","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"Brian030601"},"content":"  The classes are associated with one another through instant accesses and other means. The ","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"Brian030601"},"content":"  CalendarManager directs the events and event list, which then are run on Duke.","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"TaskLinker is tailored towards university students who use flashcards to ","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"study for their courses and need an easy way to schedule and plan the ","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"studying of their flashcards.","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"TaskLinker is a CLI tool and as such, it is tailored towards students who ","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Brian030601"},"content":"type fast and prefer a functional, but bare-bones app that runs in the ","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"terminal over a GUI that looks more impressive but is slower to use. ","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"As such, computer science students represent good target users of TaskLinker.","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"TaskLinker is a CLI-tool for helping university students memorize flashcards","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"and track their flashcard and general academic progress in the courses they are","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"taking. ","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"| Version | As a ...                  | I want to ...                                                  | So that I can ...                                                                             |","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"Brian030601"},"content":"|---------|---------------------------|----------------------------------------------------------------|-----------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"Brian030601"},"content":"| v1.0    | user                      | Delete event from my Calendar                                  | remove unnecessary events from the Calendar                                                   |","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"Brian030601"},"content":"| v1.0    | user                      | Add event to my Calendar                                       | create new necessary events on my Calendar                                                    |","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"Brian030601"},"content":"| v1.0    | user                      | List all events in my Calendar                                 | keep track of all my events and deadlines                                                     |","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"| v1.0    | user                      | list all my flashcards                                         | get a quick overview of my flashcard collection                                               |","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"Brian030601"},"content":"| v1.0    | user                      | create new flashcards                                          | add new knowledge I want to study                                                             |","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"| v1.0    | user                      | review my flashcards                                           | so that I can memorize their contents                                                         |","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"| v2.0    | new user                  | be able to invoke a help command                               | get advice/tips for how to use TaskLinker if I don\u0027 know how                                  |","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"Brian030601"},"content":"| v2.0    | user reviewing flashcards | rate how hard it was to remember their content                 | see harder flashcards more often and easy flashcards less frequently during reviews           |","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"Brian030601"},"content":"| v2.0    | experienced user          | use the delete and review feature by typing a one-line command | be faster than having to go through the prompt-answer workflow these features usually require |","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"Brian030601"},"content":"| v2.0    | user                      | find events from my Calendar                                   | find events without listing them all                                                          |","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"Brian030601"},"content":"| v2.0    | user                      | delete all events from my Calendar                             | don\u0027t need to remove events one by one                                                        |","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"wendelinwemhoener":15,"-":34,"junhyeong0411":15,"Brian030601":30}},{"path":"docs/Diagrams/FlashcardStorage.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"@startuml","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"participant \":FlashcardComponent\" as fc","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"participant \":FlashcardDirectory\" as fd","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"participant \":FlashcardStorage\" as fs","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"participant \":FlashcardList\" as fl2","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"participant \":FlashcardList\" as fl","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"participant \":FlashcardStorageParser\" as fp","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":"activate fc","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"create fd","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"fc-\u003efd ++: new","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"return directory:FlashcardDirectory()","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"destroy fd","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"create fs","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"fc-\u003efs ++: FlashcardStorage(directory)","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"return : FlashcardStorage","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"fc-\u003efs++ : loadFlashcards()","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"alt default","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"create fl","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"fs-\u003efl ++: FlashcardList()","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"return :FlashcardList","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"    loop for all lines in file","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"        fs-\u003efp++ : loadFlashcard()","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"        return flashcard:Flashcard","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"        fs-\u003efl ++: add(flashcard)","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"        return","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"    end","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"    return :FlashcardList","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"else FileNotFoundException","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"junhyeong0411"},"content":"    fs--\u003efc","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"junhyeong0411"},"content":"    create fl2","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"junhyeong0411"},"content":"    fc-\u003efl2 ++: FlashcardList(emptyArray)","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"junhyeong0411"},"content":"    return :FlashcardList","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"junhyeong0411"},"content":"end","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"junhyeong0411"},"content":"@enduml","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"junhyeong0411":61}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"# TaskLinker","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"TaskLinker is a CLI-tool for helping university students memorize flashcards","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"and track their flashcard and general academic progress in the courses they are","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"taking.","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":6,"Brian030601":4}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"TaskLinker is a CLI-tool for helping university students memorize flashcards ","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"and track their flashcard and general academic progress in the courses they are","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"taking.","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"2. Down the latest jar from [the latest release on GitHub](https://github.com/AY2324S1-CS2113-F11-3/tp/releases).","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"3. Run the jar via `java -jar duke.jar`","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"### Flashcard-related features","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"#### General explanation of flashcards","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"#### Listing all flashcards: `list flashcards`","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"Prints out a list of all flashcards that shows each flashcard\u0027s front text ","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"and back text as well as its id and current difficulty level.","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"Format: `list flashcards`","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"#### Creating a new flashcard: `create flashcard`","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"Starts the process of adding a new flashcard.","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"After entering this command, you are prompted to first input the front page","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"text (once you have typed it out, submit it by pressing \u003cENTER\u003e) and then the","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"back page text (once you have typed it out, submit it by pressing \u003cENTER\u003e) of","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"your new flashcard.","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"After you\u0027ve done this, a success message will be printed out. This","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"indicates that a new flashcard has been successfully created and saved.","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"Format: `create flashcard`","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"#### Reviewing your flashcards: `review flashcards`","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"Starts the process of reviewing flashcard.","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"After entering this command, you are prompted to select your exact review","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"mode from two choices:","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"- `random mode`: Randomly selects flashcards to review","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"- `spaced repetition mode`: Which flashcards are shown depends on how well","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"  you previously knew them. Flashcards which you couldn\u0027t remember well are","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"  shown more often, while flashcards which you remembered well are shown","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"  less often.","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"Input `a` to choose `random mode`, or input `b` to choose `spaced repetition","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"mode`.","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"Once you\u0027ve selected a review mode, the actual review begins: the front page","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"of a flashcard is shown to you. You should now try and think of the answer","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"(the text on the back page of the flashcard); and once you\u0027re ready, press","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"\u003cENTER\u003e to compare it to the actual back page.","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"In spaced repetition mode, after you have revealed the back page of a ","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"flashcard, you are prompted to rate how to difficult it was to remember. ","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"Select `E` if it was easy, `M` if it was moderately hard and `H` if it was ","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"quite hard. This information is used to adjust the difficulty of the ","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"flashcard you just reviewed.","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"Now, the process repeats and the next flashcard is shown to you.","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"If you want to quit the review process, simply input `q` or `quit` instead","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"of pressing \u003cENTER\u003e to reveal the back page.","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"Format: `create flashcard`","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"#### Deleting a flashcard","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"Starts the process of deleting a flashcard.","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"After entering this command, you are prompted to input the id of the ","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"flashcard you want to delete. Input it into the terminal and then press enter.","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"If it was a valid id, the flashcard with that id is deleted; otherwise, an ","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"error message is shown and you are prompted to retry.","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"wendelinwemhoener"},"content":"Format: `delete flashcard`","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"wendelinwemhoener"},"content":"#### Deleting all flashcards: `delete all flashcards`","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"wendelinwemhoener"},"content":"Deletes all flashcards that you have added so far.","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"wendelinwemhoener"},"content":"Format: `delete all flashcards`","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"wendelinwemhoener"},"content":"### General Explanation of Calendar Features","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"Brian030601"},"content":"Here is your features list:","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"Brian030601"},"content":"+ `add event` , `delete event`","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"Brian030601"},"content":"+ `list events` , `find event`","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"Brian030601"},"content":"+ `delete all events`","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"Brian030601"},"content":"Users can use the above features to handle their events","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"wendelinwemhoener"},"content":"#### Adding a todo: `todo`","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Adds a new item to the list of todo items.","lastModifiedDate":"2023-11-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Format: `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2023-11-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* The `DEADLINE` can be in a natural language format.","lastModifiedDate":"2023-11-03"},{"lineNumber":114,"author":{"gitId":"wendelinwemhoener"},"content":"* The `TODO_NAME` cannot contain punctuation.","lastModifiedDate":"2023-11-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":116,"author":{"gitId":"wendelinwemhoener"},"content":"Example of usage:","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"`todo n/Write the rest of the User Guide d/next week`","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`","lastModifiedDate":"2023-11-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":122,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":123,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":124,"author":{"gitId":"wendelinwemhoener"},"content":"#### Add an Event to the Calendar","lastModifiedDate":"2023-11-03"},{"lineNumber":125,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"Brian030601"},"content":"**Adds an event to the calendar with start and end time** ","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"Brian030601"},"content":"#### Usage","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"Brian030601"},"content":"+ Format: `add event` [Command]","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"Brian030601"},"content":"+ What\u0027s the event?: `Event name` [Event name]","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"Brian030601"},"content":"+ When does it start?: `yyyy-mm-ddThh:mm:ss` [Start time]","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"Brian030601"},"content":"+ When does it end?: `yyyy-mm-ddThh:mm:ss` [End time]","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"Brian030601"},"content":"**Example of usage**:","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"Brian030601"},"content":"+ `Enter your command: add event`","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"Brian030601"},"content":"+ `What\u0027s the event?: Do HW`","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"Brian030601"},"content":"+ `When does it start?: 2023-12-20T12:30:30`","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"Brian030601"},"content":"+ `When does it end?: 2023-12-20T12:40:30`","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"wendelinwemhoener"},"content":"#### Delete an Event From the Calendar","lastModifiedDate":"2023-11-03"},{"lineNumber":143,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"Brian030601"},"content":"**deletes an event from the calendar with event name**","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"Brian030601"},"content":"#### Usage","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"Brian030601"},"content":"+ Format: `delete event` ","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"Brian030601"},"content":"+ Enter the event name: `Event name` [Event name]","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"Brian030601"},"content":"**Example of usage**:","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"Brian030601"},"content":"+ `Enter your command: delete event`","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"Brian030601"},"content":"+ `Enter the event name: Do HW`","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"wendelinwemhoener"},"content":"#### Delete All Events From the Calendar","lastModifiedDate":"2023-11-03"},{"lineNumber":157,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"Brian030601"},"content":"**deletes all events from the calendar**","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"Brian030601"},"content":"#### Usage","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"Brian030601"},"content":"+ Format: `delete all events`","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"Brian030601"},"content":"**Example of usage**:","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"Brian030601"},"content":"+ `Enter your command: delete all events`","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"wendelinwemhoener"},"content":"#### Find an Event From the Calendar","lastModifiedDate":"2023-11-03"},{"lineNumber":169,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"Brian030601"},"content":"**finds an event from the calendar**","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"wendelinwemhoener"},"content":"##### Usage","lastModifiedDate":"2023-11-03"},{"lineNumber":173,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"Brian030601"},"content":"+ Format: `find event`","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"Brian030601"},"content":"+ What event are you looking for?: `event name`","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"Brian030601"},"content":"**Example of usage**:","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"Brian030601"},"content":"+ `Enter your command: find event`","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"Brian030601"},"content":"+ `What event are you looking for?: Do HW`","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"wendelinwemhoener"},"content":"#### List All Events From the Calendar","lastModifiedDate":"2023-11-03"},{"lineNumber":183,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"Brian030601"},"content":"**Lists all events from the calendar**","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"Brian030601"},"content":"#### Usage","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"Brian030601"},"content":"+ Format: `list events`","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"Brian030601"},"content":"**Example of usage**:","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"Brian030601"},"content":"+ `Enter your command: find event`","lastModifiedDate":"2023-11-02"},{"lineNumber":193,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":196,"author":{"gitId":"junhyeong0411"},"content":"**Q**: Where can I find my flashcard and caldendar data?","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"junhyeong0411"},"content":"**A**: You can find it in `data/flashcards` and `data/events` folder.","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"junhyeong0411"},"content":"Every event and flashcard are automatically save after each command.","lastModifiedDate":"2023-11-02"},{"lineNumber":201,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":204,"author":{"gitId":"junhyeong0411"},"content":"**A**: You can transfer your data by copying \u0026 pasting the data folder.","lastModifiedDate":"2023-11-02"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":208,"author":{"gitId":"wendelinwemhoener"},"content":"* List all flashcards: `list flashcards`","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"wendelinwemhoener"},"content":"* Create a new flashcard: `create flashcard`","lastModifiedDate":"2023-10-23"},{"lineNumber":210,"author":{"gitId":"wendelinwemhoener"},"content":"* Review your flashcards: `review flashcards`","lastModifiedDate":"2023-10-23"},{"lineNumber":211,"author":{"gitId":"Brian030601"},"content":"* Create an event: `add event`","lastModifiedDate":"2023-11-02"},{"lineNumber":212,"author":{"gitId":"Brian030601"},"content":"* Delete an event: `delete event`","lastModifiedDate":"2023-11-02"},{"lineNumber":213,"author":{"gitId":"Brian030601"},"content":"* Delete all events: `delete all events`","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"Brian030601"},"content":"* Find an event: `find event`","lastModifiedDate":"2023-11-02"},{"lineNumber":215,"author":{"gitId":"Brian030601"},"content":"* List events: `list events` ","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"wendelinwemhoener":94,"-":36,"junhyeong0411":7,"Brian030601":78}},{"path":"docs/team/bangjunhyeong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"# Bang Junhyeong - Project Portfolio Page","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"## Overview","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"junhyeong0411":6}},{"path":"docs/team/kherlenbayasgalan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"# Kherlen Bayasgalan - Project Portfolio Page","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"## Overview","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Brian030601":6}},{"path":"docs/team/wendelinwemhoener.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"# Wendelin Wemhoener - Project Portfolio Page","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"## Overview","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"wendelinwemhoener":6}},{"path":"docs/team/zhujingxi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Cheezeblokz"},"content":"# Zhu Jingxi - Project Portfolio Page","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Cheezeblokz":1,"-":5}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.calendar.CalendarManager;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardComponent;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"    public Duke() {}","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"        new Duke().run();","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"    private void run() {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"        FlashcardComponent fc \u003d new FlashcardComponent();","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"        CalendarManager cm \u003d new CalendarManager(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"        String input;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"        boolean shouldTerminate \u003d false;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"        while (!shouldTerminate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.print(\"Enter your command: \");","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"            if (fc.isResponsible(input)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"                fc.processInput(input);","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"            } else if (cm.isResponsible(input)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"                cm.processInput(input);","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"            } else if (input.equals(\"exit\")) {","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"                System.out.println(\"    You are exiting TaskLinker! Bye!\");","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"                break;","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"            } else if (input.startsWith(\"help\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"                printHelp();","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"            } else {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"                System.out.println(\"    Invalid command! Please try again.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"    private void printHelp() {","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    If you need help, please consult our \" +","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"                \"user guide at https://ay2324s1-cs2113-f11-3.github\" +","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"                \".io/tp/UserGuide.html\");","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println();","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Here is a quick overview over all available \" +","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"                \"commands: \");","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"        String[] commandFormats \u003d new String[] {","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"            \"list flashcards\",","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"            \"create flashcard\",","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"            \"review flashcards\",","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"            \"help\",","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"            \"add event\",","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"            \"delete event\",","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"            \"delete all events\",","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"            \"find event\",","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"            \"list events\",","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"            \"exit\",","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"        };","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"        for (String commandFormat : commandFormats) {","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    - \" + commandFormat);","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"wendelinwemhoener":72}},{"path":"src/main/java/seedu/duke/calendar/Calendar.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@ kherlenbayasgalan \u0026 jingxizhu","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Cheezeblokz"},"content":"package seedu.duke.calendar;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Cheezeblokz"},"content":"public class Calendar {","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"     * The class is here for integrating Flashcard goals with the Calendar.","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"     * Any other features related to the Calendar can be added here in the future.","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"    EventList eventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Cheezeblokz"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Cheezeblokz":4,"Brian030601":8}},{"path":"src/main/java/seedu/duke/calendar/CalendarCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@ kherlenbayasgalan \u0026 jingxizhu","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Cheezeblokz"},"content":"package seedu.duke.calendar;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.AddEventCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.DeleteAllEventsCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.DeleteEventCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.EventCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.UnknownCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.FindEventCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.ListCalendarEventsCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.Exceptions.AddEventException;","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.Exceptions.DeleteEventException;","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.Exceptions.DeleteAllException;","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.Exceptions.FindEventException;","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.Exceptions.ListEventException;","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"Brian030601"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"Cheezeblokz"},"content":"public class CalendarCommandParser {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"Brian030601"},"content":"     * The manageException method is used to throw exceptions if those exceptions have","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"Brian030601"},"content":"     * been encountered. Each if case handles different exception errors. The method","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"Brian030601"},"content":"     * has one parameter (String userInput), which is used to check if the input has","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"Brian030601"},"content":"     * anything else after it.","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"Brian030601"},"content":"     * @param userInput is taken to check if the condition matches the exception.","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"Brian030601"},"content":"     * @throws AddEventException is thrown if the user only inputs add and nothing else.","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"Brian030601"},"content":"     * @throws DeleteEventException is thrown if the user only inputs delete all and nothing else.","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"Brian030601"},"content":"     * @throws DeleteAllException is thrown if the user only inputs delete and nothing else.","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"Brian030601"},"content":"     * @throws FindEventException is thrown if the user only inputs find and nothing else.","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"Brian030601"},"content":"     * @throws ListEventException is thrown if the user only inputs list and nothing else.","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"Brian030601"},"content":"    public static void manageException(String userInput) throws AddEventException, DeleteEventException,","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"Brian030601"},"content":"            DeleteAllException, FindEventException, ListEventException {","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"Brian030601"},"content":"        Scanner input \u003d new Scanner(userInput);","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"Brian030601"},"content":"        String command \u003d input.next();","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"Brian030601"},"content":"        if (command.equals(\"add\") \u0026\u0026 !input.hasNext()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"Brian030601"},"content":"            throw new AddEventException();","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"Brian030601"},"content":"        if (command.equals(\"delete all\") \u0026\u0026 !input.hasNext()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"Brian030601"},"content":"            throw new DeleteAllException();","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"Brian030601"},"content":"        if (command.equals(\"delete\") \u0026\u0026 !input.hasNext()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"Brian030601"},"content":"            throw new DeleteEventException();","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"Brian030601"},"content":"        if (command.equals(\"find\") \u0026\u0026 !input.hasNext()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"Brian030601"},"content":"            throw new FindEventException();","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"Brian030601"},"content":"        if (command.equals(\"list\") \u0026\u0026 !input.hasNext()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"Brian030601"},"content":"            throw new ListEventException();","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"Brian030601"},"content":"     * The parseInput method is used to catch any exceptions that could occur. The method","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"Brian030601"},"content":"     * has one parameter (String input). The input is used for asserting that it is not null.","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"Brian030601"},"content":"     * If any exceptions are caught, then the corresponding messages are displayed.","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"Brian030601"},"content":"     * Last resort unknown command will run if the command is not recognized.","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"Brian030601"},"content":"     * @param input is used to check whether input is null or not.","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"Brian030601"},"content":"     * @return runs the commands","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"Brian030601"},"content":"    public EventCommand parseInput(String input) {","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Brian030601"},"content":"        // using asser to check whether the input is null.","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"Brian030601"},"content":"        assert input !\u003d null : \"input is null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Brian030601"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"Brian030601"},"content":"            manageException(input);","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"Brian030601"},"content":"            if (input.startsWith(\"add event\")) {","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Brian030601"},"content":"                return new AddEventCommand();","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"Brian030601"},"content":"            } else if (input.startsWith(\"delete event\")) {","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Brian030601"},"content":"                return new DeleteEventCommand();","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"Brian030601"},"content":"            } else if (input.startsWith(\"list events\")) {","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"Brian030601"},"content":"                return new ListCalendarEventsCommand();","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"Brian030601"},"content":"            } else if (input.startsWith(\"delete all events\")) {","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"Brian030601"},"content":"                return new DeleteAllEventsCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"Brian030601"},"content":"            } else if (input.startsWith(\"find event\")) {","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"Brian030601"},"content":"                return new FindEventCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"Brian030601"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"Brian030601"},"content":"        } catch (AddEventException exception) {","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"☹ OOPS!!! The description of an add cannot be empty.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"Brian030601"},"content":"        } catch (DeleteAllException exception) {","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"☹ OOPS!!! The description of a delete all cannot be empty.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"Brian030601"},"content":"        } catch (DeleteEventException exception) {","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"☹ OOPS!!! The description of a delete cannot be empty.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"Brian030601"},"content":"        } catch (FindEventException exception) {","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"☹ OOPS!!! The description of an find cannot be empty.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"Brian030601"},"content":"        } catch (ListEventException exception) {","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"☹ OOPS!!! The description of a list cannot.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":97,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":98,"author":{"gitId":"Brian030601"},"content":"        return new UnknownCommand();","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"Cheezeblokz"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Cheezeblokz":4,"Brian030601":96}},{"path":"src/main/java/seedu/duke/calendar/CalendarManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@ kherlenbayasgalan \u0026 jingxizhu","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Cheezeblokz"},"content":"package seedu.duke.calendar;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.EventCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.UnknownCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Cheezeblokz"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Cheezeblokz"},"content":"public class CalendarManager {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Cheezeblokz"},"content":"    Calendar calendar;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Cheezeblokz"},"content":"    CalendarUi calendarUi;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"    EventList eventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Cheezeblokz"},"content":"    CalendarCommandParser calendarCommandParser;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Cheezeblokz"},"content":"    Scanner scanner;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"    private EventStorage storage;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"Brian030601"},"content":"     * The CalendarManager initializes the accesses to other classes.","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"Brian030601"},"content":"     * It also loads events from the storage.","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"Brian030601"},"content":"     * @param events is used to initialize the EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"Brian030601"},"content":"    public CalendarManager(ArrayList\u003cEvent\u003e events) {","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"        EventDirectory eventdirectory \u003d new EventDirectory();","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"        eventdirectory.listEventFiles();","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"        storage \u003d new EventStorage(eventdirectory.defaultDirectory());","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"        try{","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"            eventList \u003d storage.loadEvents();","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"        } catch (FileNotFoundException e){","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"Making new file for Events\");","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"Brian030601"},"content":"            eventList \u003d new EventList(events);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Cheezeblokz"},"content":"        calendar \u003d new Calendar();","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Brian030601"},"content":"        calendarUi \u003d new CalendarUi(eventList);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Cheezeblokz"},"content":"        calendarCommandParser \u003d new CalendarCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Cheezeblokz"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"Brian030601"},"content":"    // getStorage is used for getting the storage","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"    public EventStorage getStorage(){","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"        return this.storage;","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"Brian030601"},"content":"     * validCommand is used for checking whether the command is valid, and","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"Brian030601"},"content":"     * not an instance of UnknownCommand.","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"Brian030601"},"content":"     * @param input is used for converting the input into command.","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"Brian030601"},"content":"     * @return returns whether the command is instance of UnknownCommand or not.","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"Brian030601"},"content":"    public boolean validCommand(String input) {","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"Brian030601"},"content":"        EventCommand command \u003d calendarCommandParser.parseInput(input);","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"Brian030601"},"content":"        return !(command instanceof UnknownCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"Brian030601"},"content":"    // isResponsible calls the validCommand method.","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"    public boolean isResponsible(String input) {","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"        return validCommand(input);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"Brian030601"},"content":"    // processInput is used for saving the events in the EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"    public void processInput(String input) {","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"        startCalendar(input);","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"junhyeong0411"},"content":"        storage.saveEvents(eventList.getEvent());","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"Brian030601"},"content":"     * startCalender starts the Calendar features and uses the input as a command.","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"Brian030601"},"content":"     * @param input is used for converting the input into command.","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"Brian030601"},"content":"    public void startCalendar(String input) {","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"Brian030601"},"content":"        EventCommand command \u003d calendarCommandParser.parseInput(input);","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"Brian030601"},"content":"        assert !(command instanceof seedu.duke.calendar.command.UnknownCommand) :","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"Brian030601"},"content":"                \"Command cannot be \" + \"unknown\";","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"Brian030601"},"content":"        calendarUi.executeCommand(command);","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"Brian030601"},"content":"        //calendarCommandParser.parseInput(command);","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"Cheezeblokz"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"wendelinwemhoener":8,"Cheezeblokz":17,"junhyeong0411":22,"Brian030601":43}},{"path":"src/main/java/seedu/duke/calendar/CalendarUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cheezeblokz"},"content":"package seedu.duke.calendar;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.EventCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Cheezeblokz"},"content":"public class CalendarUi {","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"    private EventList eventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"    // CalendarUi is the constructor method for CalendarUi class.","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"    public CalendarUi (EventList eventList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Brian030601"},"content":"        this.eventList \u003d eventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"Brian030601"},"content":"     * executeCommand is used for starting the calendar part of the program.","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"Brian030601"},"content":"     * @param command is used for relaying the command entered by the user.","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"Brian030601"},"content":"    public void executeCommand(EventCommand command) {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Brian030601"},"content":"        command.execute(scanner, eventList);","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Cheezeblokz"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Cheezeblokz":5,"Brian030601":20}},{"path":"src/main/java/seedu/duke/calendar/EventDirectory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"package seedu.duke.calendar;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"import java.io.File;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":" * directory for directory","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":" * can list-up txt files in text folder","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":" * In version 1, using only event.txt","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":" * In version 2, can select or create","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"public class EventDirectory {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"    private static Logger logger; // for logging","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"    String path;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"    File file;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"    public EventDirectory(){","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"        logger \u003d Logger.getLogger(\"flashDir\");","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"        String dataPath \u003d \"./data\";","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"        File dataFolder \u003d new File(dataPath);","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"        if(!dataFolder.exists()){","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"            if(dataFolder.mkdir()){","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, \"Created data directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"    Created events directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"            } else{","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, \"Failed to create data directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"    Failed to create directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"        } else{","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"            logger.log(Level.INFO, \"Using data directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"    Using data/events directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"        path \u003d \"./data/events\";","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"        file \u003d new File(path);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"        if(!file.exists()){","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"            if(file.mkdir()){","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, \"Created events directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"    Created events directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"            } else{","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, \"Failed to create directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"    Failed to create directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"        } else{","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"junhyeong0411"},"content":"            logger.log(Level.INFO, \"Using data/events directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"    Using data/events directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"junhyeong0411"},"content":"     * list-up saved files","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"junhyeong0411"},"content":"     * selecting file is for version 2","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"junhyeong0411"},"content":"    public void listEventFiles(){","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"junhyeong0411"},"content":"        String[] eventFiles \u003d file.list();","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"junhyeong0411"},"content":"        if(eventFiles \u003d\u003d null){","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"junhyeong0411"},"content":"            logger.log(Level.INFO, \"Failed to find files\");","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"Failed to find files\");","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"junhyeong0411"},"content":"        } else if(eventFiles.length \u003d\u003d 0){","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"junhyeong0411"},"content":"            logger.log(Level.INFO, \"No files exist\");","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"No files exist\");","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"junhyeong0411"},"content":"        } else{","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"junhyeong0411"},"content":"            for(String eventFile : eventFiles){","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, eventFile);","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"        \"+eventFile);","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"junhyeong0411"},"content":"     * return default directory","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"junhyeong0411"},"content":"     * for version 1","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"junhyeong0411"},"content":"     * @return directory for flashcard txt file","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"junhyeong0411"},"content":"    public String defaultDirectory() {","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"junhyeong0411"},"content":"        return this.path + \"/event.txt\";","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"junhyeong0411"},"content":"     * return directory of flashcard txt file","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"junhyeong0411"},"content":"     * for version 2","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"Brian030601"},"content":"     * @param path is used for storing file path","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"Brian030601"},"content":"     * @return is used to get the path to the file","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"junhyeong0411"},"content":"    public String eventDirectory(String path) {","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"junhyeong0411"},"content":"        return this.path + path;","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"junhyeong0411":93,"Brian030601":2}},{"path":"src/main/java/seedu/duke/calendar/EventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@ kherlenbayasgalan","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"public class EventList {","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"    private ArrayList\u003cEvent\u003e eventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"    // EventList is a constructor method","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"    public EventList(ArrayList\u003cEvent\u003e eventList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"        this.eventList \u003d eventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"    // addEvent is used for adding an event to the EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"Brian030601"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Brian030601"},"content":"        eventList.add(event);","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Brian030601"},"content":"    // getEvent is used to get an event from the EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"Brian030601"},"content":"    public ArrayList\u003cEvent\u003e getEvent() {","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Brian030601"},"content":"        return eventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Brian030601"},"content":"    // getSize is used for getting the size of EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"Brian030601"},"content":"    public int getSize() {","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"Brian030601"},"content":"        return eventList.size();","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"Brian030601"},"content":"    // findEvent is used for finding a specific event from the EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"Brian030601"},"content":"    public int findEvent(String keyword) {","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"Brian030601"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"Brian030601"},"content":"        for (Event event: eventList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"Brian030601"},"content":"            if (event.getName().contains(keyword)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"Cheezeblokz"},"content":"                System.out.println((++count) + \". \" + event);","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"Brian030601"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"Brian030601"},"content":"        return count;","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Brian030601"},"content":"    // deleteEvent is used for deleting an event from the EventList","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"Brian030601"},"content":"    public int deleteEvent(String name) {","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"Brian030601"},"content":"        int size \u003d eventList.size();","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"Brian030601"},"content":"        if (size \u003e 0) {","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"Brian030601"},"content":"            eventList.removeIf(event -\u003e event.getName().equals(name));","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"Brian030601"},"content":"        } else {","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"The Calendar is empty\");","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"Brian030601"},"content":"        return size;","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"Brian030601"},"content":"    // deleteAllEvents is used for deleting all events in the EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"Brian030601"},"content":"    public void deleteAllEvents() {","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"Brian030601"},"content":"        eventList.clear();","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"Brian030601"},"content":"    // toString formats the print version of EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"Brian030601"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"Brian030601"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"Brian030601"},"content":"        return \"EventStorage{\" +","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"Brian030601"},"content":"                \"events\u003d\" + eventList +","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"Brian030601"},"content":"                \u0027}\u0027;","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"Cheezeblokz":1,"junhyeong0411":1,"Brian030601":64}},{"path":"src/main/java/seedu/duke/calendar/EventStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"package seedu.duke.calendar;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"import java.io.File;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":" * storage for Events","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":" * One storage manages one file","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"public class EventStorage {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"    private static Logger logger; // for logging","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"    protected String path;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"    public EventStorage(String path){","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"        logger \u003d Logger.getLogger(\"event\");","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"    public boolean isStorageAvailable(){","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"        File f \u003d new File(this.path);","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"        return f.exists();","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"Brian030601"},"content":"     * load an event from certain format","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"     * Tokens includes attributes of Event","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Brian030601"},"content":"     * @param tokens is used to get event name","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"     * @return Event object","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"    private Event loadEvent(String[] tokens){","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"        assert tokens.length \u003d\u003d 3: \"Token length should be 3\";","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"        String name \u003d tokens[0].trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(tokens[1].trim());","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(tokens[2].trim());","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"junhyeong0411"},"content":"        return new Event(name, from, to);","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"junhyeong0411"},"content":"     * load list of events","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"junhyeong0411"},"content":"     * from this.path","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"junhyeong0411"},"content":"     * @return list of Events","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"Brian030601"},"content":"     * @throws FileNotFoundException is used if the file is not in the path","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"junhyeong0411"},"content":"    public EventList loadEvents() throws FileNotFoundException{","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"junhyeong0411"},"content":"        EventList eventList \u003d new EventList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"junhyeong0411"},"content":"        File f \u003d new File (this.path);","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"junhyeong0411"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"junhyeong0411"},"content":"        while(s.hasNext()){","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"junhyeong0411"},"content":"            String[] eventTokens \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"junhyeong0411"},"content":"            eventList.addEvent(loadEvent(eventTokens));","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"junhyeong0411"},"content":"        logger.log(Level.INFO, String.format(","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"junhyeong0411"},"content":"                \"    There are currently %d events in the save file\",","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"junhyeong0411"},"content":"                eventList.getSize()));","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"junhyeong0411"},"content":"        return eventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"junhyeong0411"},"content":"     * saveEvents method","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"junhyeong0411"},"content":"     * save all events to file","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"Brian030601"},"content":"     * @param eventList is used to access the list","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"junhyeong0411"},"content":"    public void saveEvents(ArrayList\u003cEvent\u003e eventList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"junhyeong0411"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"junhyeong0411"},"content":"            FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"Brian030601"},"content":"            for (Event event : eventList) {","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"junhyeong0411"},"content":"                fw.write(String.format(\"%s | %s | %s \\r\\n\",","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"junhyeong0411"},"content":"                        event.getName(), event.getFrom(), event.getTo()));","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"junhyeong0411"},"content":"            fw.close();","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"junhyeong0411"},"content":"        } catch (IOException e){","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"Failed to save.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"junhyeong0411"},"content":"            logger.log(Level.WARNING, \"problem: failed to save\");","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"junhyeong0411":95,"Brian030601":5}},{"path":"src/main/java/seedu/duke/calendar/Exceptions/AddEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar.Exceptions;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"/**","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":" * The AddEventException class is used for handling exceptions related with adding an event","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":" */","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"public class AddEventException extends Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"Brian030601":9}},{"path":"src/main/java/seedu/duke/calendar/Exceptions/DeleteAllException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar.Exceptions;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"/**","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":" * The DeleteAllException class is used for handling exceptions related with deleting all events.","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":" */","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"public class DeleteAllException extends Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"Brian030601":9}},{"path":"src/main/java/seedu/duke/calendar/Exceptions/DeleteEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar.Exceptions;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"/**","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":" * The DeleteEventException class is used for handling exceptions related with deleting an event","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":" */","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"public class DeleteEventException extends Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"Brian030601":9}},{"path":"src/main/java/seedu/duke/calendar/Exceptions/FindEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar.Exceptions;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"/**","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":" * The FindEventException class is used for handling exceptions related with finding an event.","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":" */","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"public class FindEventException extends Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"Brian030601":9}},{"path":"src/main/java/seedu/duke/calendar/Exceptions/ListEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar.Exceptions;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"/**","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":" * The ListEventException class is used for handling exceptions related with listing events.","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":" */","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"public class ListEventException extends Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"Brian030601":9}},{"path":"src/main/java/seedu/duke/calendar/command/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@ kherlenbayasgalan","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Cheezeblokz"},"content":"package seedu.duke.calendar.command;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.Event;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.EventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"Cheezeblokz"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"public class AddEventCommand extends EventCommand {","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"Brian030601"},"content":"     * The execute method is used to add an event to the calendar. It has two parameters (Scanner, EventList).","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"Brian030601"},"content":"     * The EventList is used to add an event to the list. The scanner is used to get the user\u0027s event name input.","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"Brian030601"},"content":"     * The method first takes the event name, then through parseDateTimeInput, it gets an acceptable date/time","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"Brian030601"},"content":"     * from the user. If the user inserts acceptable inputs, the event will be added. If the user doesn\u0027t,","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"Brian030601"},"content":"     * either one of DateTimeParseException or Invalid input exception.","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"Brian030601"},"content":"     * @param scanner is used to get user\u0027s event name.","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"Brian030601"},"content":"     * @param eventList is used to add an event to the list.","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"Brian030601"},"content":"    public void execute(Scanner scanner, EventList eventList) {","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"Brian030601"},"content":"        System.out.print(\"What\u0027s the event?: \");","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Cheezeblokz"},"content":"        String eventName \u003d scanner.nextLine();","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"Brian030601"},"content":"        // checks if the acceptable format is given by the user to prevent program crash","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"Brian030601"},"content":"        LocalDateTime startTime \u003d parseDateTimeInput(scanner, \"When does it start? (yyyy-MM-ddTHH:mm:ss) (e.g., 2023-12-20T12:30:30): \");","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"Brian030601"},"content":"        LocalDateTime endTime \u003d parseDateTimeInput(scanner, \"When does it end? (yyyy-MM-ddTHH:mm:ss) (e.g., 2023-12-20T12:30:30): \");","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Brian030601"},"content":"        if (endTime.isAfter(startTime)) {","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"Brian030601"},"content":"            Event event \u003d new Event(eventName, startTime, endTime);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Brian030601"},"content":"            eventList.addEvent(event);","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Cheezeblokz"},"content":"            System.out.println(event + \" has been added to your Calendar\");","lastModifiedDate":"2023-11-05"},{"lineNumber":39,"author":{"gitId":"Brian030601"},"content":"        } else {","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"    End time is before or equal to the start time. Please enter the correct end time.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"Brian030601"},"content":"     * The parseDateTimeInput takes two parameters (Scanner , String) and through those parameters","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"Brian030601"},"content":"     * the method gets user\u0027s input. Using exception handling of LocalDateTime, the user checks if the","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"Brian030601"},"content":"     * input is in correct date/time format. If it is not in the specified \"yyyy-MM-ddTHH:mm:ss\" format","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"Brian030601"},"content":"     * the method will throw DateTimeParseException. If it is in right format, the method will return","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"Brian030601"},"content":"     * the input when it is called.","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"Brian030601"},"content":"     * @param scanner is used to get user\u0027s date/time input.","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"Brian030601"},"content":"     * @param prompt is given to instruct the user on an acceptable date/time format.","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"Brian030601"},"content":"     * @return returns an acceptable time/date input.","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"Brian030601"},"content":"    private LocalDateTime parseDateTimeInput(Scanner scanner, String prompt) {","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"Brian030601"},"content":"        while (true) {","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"Brian030601"},"content":"            System.out.print(prompt);","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"Brian030601"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"Brian030601"},"content":"            try {","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"Brian030601"},"content":"                // checks if the acceptable format is given by the user to prevent program crash","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"Brian030601"},"content":"                return LocalDateTime.parse(userInput, DateTimeFormatter.ofPattern(\"yyyy-MM-ddTHH:mm:ss\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"Brian030601"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"Brian030601"},"content":"                System.out.println(\"    Invalid date and time format. Please try again.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"Brian030601"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"Cheezeblokz"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Cheezeblokz":9,"Brian030601":58}},{"path":"src/main/java/seedu/duke/calendar/command/DeleteAllEventsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@ kherlenbayasgalan","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar.command;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.EventList;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"public class DeleteAllEventsCommand extends EventCommand {","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"     * The execute method is used to delete all events from the EventList. The method takes two","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"     * parameters (Scanner , EventList). However, scanner is not used here. It\u0027s given because","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"Brian030601"},"content":"     * of the abstract class. The EventList is used to clear the list.","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"     * @param scanner is not used. Given due to the abstract class","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"Brian030601"},"content":"     * @param eventList is used to delete all events in the EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"Brian030601"},"content":"    public void execute(Scanner scanner, EventList eventList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"Brian030601"},"content":"        eventList.deleteAllEvents();","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"Brian030601"},"content":"        System.out.println(\"    All your events have been successfully \" +","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"Brian030601"},"content":"                \"deleted from the Calendar.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"Brian030601":25}},{"path":"src/main/java/seedu/duke/calendar/command/FindEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@ kherlenbayasgalan","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar.command;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.Event;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.EventList;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"public class FindEventCommand extends EventCommand {","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"     * The execute method is to search and find an event from the EventList. The method has two","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"Brian030601"},"content":"     * parameters (Scanner , EventList). Scanner takes the name of the event that the user","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"     * wants to find. EventList is accessed to search the event from the list. If the given","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"Brian030601"},"content":"     * input or part of it is not in the event list, \"no such event\" message will be displayed.","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"Brian030601"},"content":"     * @param scanner is used to get user\u0027s input on what event to search for.","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"Brian030601"},"content":"     * @param eventList is used to access EventList and find the specified event.","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"Brian030601"},"content":"    public void execute(Scanner scanner, EventList eventList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"Brian030601"},"content":"        System.out.print(\"What event are you looking for?: \");","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"Brian030601"},"content":"        String eventName \u003d scanner.nextLine();","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"Brian030601"},"content":"        int count \u003d eventList.findEvent(eventName);","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"Brian030601"},"content":"        if (count \u003e 0) {","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"    These events have been found\");","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"Brian030601"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"    No such event found\");","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"Brian030601":33}},{"path":"src/main/java/seedu/duke/calendar/command/ListCalendarEventsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@ kherlenbayasgalan \u0026 jingxizhu","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Cheezeblokz"},"content":"package seedu.duke.calendar.command;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.Event;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.EventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Cheezeblokz"},"content":"public class ListCalendarEventsCommand extends EventCommand{","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"     * The execute method is used to list all the events in the EventList. The method","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"Brian030601"},"content":"     * has two parameters (Scanner , EventList). The scanner doesn\u0027t do anything here","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"     * but is given due to the abstract class. EventList is used for getting access to","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"Brian030601"},"content":"     * all the events in the list. If the EventList is empty, \"The Calendar is empty\"","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"Brian030601"},"content":"     * message will be displayed.","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"Brian030601"},"content":"     * @param scanner is not used. Given due to the abstract class","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"Brian030601"},"content":"     * @param eventList is used to access EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"Brian030601"},"content":"    public void execute(Scanner scanner, EventList eventList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Brian030601"},"content":"        if (eventList.getSize() \u003e 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"Here is a list of all your events: \");","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Brian030601"},"content":"            printLine();","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Brian030601"},"content":"            int count \u003d 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"Brian030601"},"content":"            for (Event event : eventList.getEvent()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Cheezeblokz"},"content":"                System.out.println((++count) + \". \" + event);","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"Brian030601"},"content":"                printLine();","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Brian030601"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Brian030601"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"    The Calendar is empty\");","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Brian030601"},"content":"    public void printLine() {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Brian030601"},"content":"        System.out.println(\"-\".repeat(80));","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Cheezeblokz"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Cheezeblokz":5,"Brian030601":35}},{"path":"src/main/java/seedu/duke/calendar/command/UnknownCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@ kherlenbayasgalan \u0026 jingxizhu","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Cheezeblokz"},"content":"package seedu.duke.calendar.command;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.EventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Cheezeblokz"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Cheezeblokz"},"content":"public class UnknownCommand extends EventCommand{","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"     * The execute method prints an unknown command message when an unknown command","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"     * is entered by the user. The two parameters (Scanner , EventList) are not","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"Brian030601"},"content":"     * user by the method. But its there due to the abstract class.","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"     * @param scanner is not used. Given due to the abstract class","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"Brian030601"},"content":"     * @param eventList is not used. Given due to the abstract class","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"Brian030601"},"content":"    public void execute(Scanner scanner, EventList eventList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Brian030601"},"content":"        System.out.println(\"Unknown command! Please enter a valid command.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Cheezeblokz"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Cheezeblokz":8,"Brian030601":14}},{"path":"src/main/java/seedu/duke/flashcard/Flashcard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":" * Represents a flashcard with its associated front and back text as well as","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":" * its id and current difficulty.","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"public class Flashcard {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"    private static int globalMaxId \u003d 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"    private String frontText;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"    private String backText;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"    private int id;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"    private int difficulty;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"     * Instantiates and returns a flashcard with the given front and back text.","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"     * Its id and difficulty (which is 5) are automatically set.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param frontText The text on the front of the flashcard.","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param backText The text on the back of the flashcard.","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"    public Flashcard(String frontText, String backText) {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"        this.frontText \u003d frontText;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"        this.backText \u003d backText;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"        difficulty \u003d 5;  // initial difficulty of a flashcard","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"        globalMaxId +\u003d 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"        id \u003d globalMaxId;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"     * Updates globalMaxId to be greater than the id of all passed flashcards.","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList List of flashcard to calculate the max id over.","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"    public static void calculateAndUpdateGlobalMaxId(","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"            FlashcardList flashcardList) {","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"        int currentMax \u003d 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"        for (Flashcard flashcard : flashcardList.getFlashcards()){","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"            if (flashcard.getId() \u003e currentMax) {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"                currentMax \u003d flashcard.getId();","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"        globalMaxId \u003d currentMax + 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"    public int getId() {","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"        return id;","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"junhyeong0411"},"content":"    //@@author junhyeong0411","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"junhyeong0411"},"content":"    public void setId (int id) {","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"junhyeong0411"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"junhyeong0411"},"content":"    public String getFrontText() {","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"junhyeong0411"},"content":"        return frontText;","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"junhyeong0411"},"content":"    public void setDifficulty(int difficulty) {","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"junhyeong0411"},"content":"        this.difficulty \u003d difficulty;","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"junhyeong0411"},"content":"    public String getBackText() {","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"junhyeong0411"},"content":"        return backText;","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"    //@@author wendelinwemhoener","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"     * Returns a string representation of this flashcard.","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return Front and back text as well as id and difficulty.","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"        return \"front text: \" + frontText + System.lineSeparator()","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"                + \"back text: \" + backText + System.lineSeparator()","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"                + \"id: \" + id","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"                + \"difficulty: \" + difficulty + System.lineSeparator();","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"wendelinwemhoener"},"content":"     * Adjusts (increases) the difficulty of this flashcard.","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param difficultyChange The amount to increase the difficulty by.","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"wendelinwemhoener"},"content":"    public void applyDifficultyChange(int difficultyChange) {","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"wendelinwemhoener"},"content":"        difficulty +\u003d difficultyChange;","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"wendelinwemhoener"},"content":"    public int getDifficulty() {","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"wendelinwemhoener"},"content":"        return difficulty;","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":80,"junhyeong0411":18}},{"path":"src/main/java/seedu/duke/flashcard/FlashcardCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.FlashcardCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.CreateFlashcardCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.ListFlashcardsCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.StartReviewCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.DeleteAllFlashcardsCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.DeleteFlashcardCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.UnknownCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":" * Parses input entered by the user into a FlashcardCommand for further","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":" * processing.","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"public class FlashcardCommandParser {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"     * Returns the FlashcardCommand corresponding to the passed input.","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param input The text inputted by the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return The FlashcardCommand corresponding to input","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"    public FlashcardCommand parseInput(String input) {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"        assert input !\u003d null : \"input is null\";","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"        if (input.startsWith(\"create flashcard\")) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"            return new CreateFlashcardCommand();","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (input.startsWith(\"list flashcards\")) {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"            return new ListFlashcardsCommand();","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (input.startsWith(\"review flashcards\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"            return new StartReviewCommand(input);","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (input.startsWith(\"delete all flashcards\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"            return new DeleteAllFlashcardsCommand();","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (input.startsWith(\"delete flashcard\")) {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"            return new DeleteFlashcardCommand(input);","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"        return new UnknownCommand();","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":41}},{"path":"src/main/java/seedu/duke/flashcard/FlashcardComponent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.FlashcardCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.UnknownCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":" * Encapsulates all classes needed for the flashcard functionality and","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":" * allows access to them via one unified API.","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"public class FlashcardComponent {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"    private FlashcardCommandParser parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"    private FlashcardList flashcardList;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"    private FlashcardUi ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"    private FlashcardStorage storage;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"    //@@author junhyeong0411","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"    public FlashcardComponent() {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"        parser \u003d new FlashcardCommandParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"        FlashcardDirectory flashcarddirectory \u003d new FlashcardDirectory();","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"        flashcarddirectory.listFlashcardFiles();","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"        storage \u003d new FlashcardStorage(flashcarddirectory.defaultDirectory());","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"            flashcardList \u003d storage.loadFlashcards();","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"        } catch (FileNotFoundException e){","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"Making New file for Flashcards\");","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"            flashcardList \u003d new FlashcardList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"        Flashcard.calculateAndUpdateGlobalMaxId(flashcardList);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"        ui \u003d new FlashcardUi(flashcardList);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"    public FlashcardStorage getStorage(){","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"        return this.storage;","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"    public FlashcardList getFlashcardList(){","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"        return this.flashcardList;","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"     * get FlashcardUi method","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"     * for test","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"junhyeong0411"},"content":"     * @return","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"junhyeong0411"},"content":"    public FlashcardUi getUi(){","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"junhyeong0411"},"content":"        return ui;","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"    //@@author wendelinwemhoener","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"     * Returns if FlashcardComponent is responsible for handling this input.","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param input The text inputted by the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return Whether FlashcardComponent is responsible for handling the input.","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"    public boolean isResponsible(String input) {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"        FlashcardCommand command \u003d parser.parseInput(input);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"        if (command instanceof UnknownCommand) {","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"        } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"     * Processes user input by parsing it and executing the resulting command.","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param input The text inputted by the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"    public void processInput(String input) {","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"        FlashcardCommand command \u003d parser.parseInput(input);","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"        assert !(command instanceof UnknownCommand) : \"Command cannot be \" +","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"                \"unknown\";","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"        ui.executeCommand(command);","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"junhyeong0411"},"content":"        //@@author junhyeong0411","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"junhyeong0411"},"content":"        // save after every commands","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"junhyeong0411"},"content":"        storage.saveFlashcards(flashcardList.getFlashcards());","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":49,"junhyeong0411":41}},{"path":"src/main/java/seedu/duke/flashcard/FlashcardDirectory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"package seedu.duke.flashcard;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"import java.io.File;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":" * directory for flashcards","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":" * can list-up txt files in text folder","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":" * In version 1, using only flashcard.txt","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":" * In version 2, can select or create","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"public class FlashcardDirectory {","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"    private static Logger logger; // for logging","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"    String path;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"    File file;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"    public FlashcardDirectory(){","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"        logger \u003d Logger.getLogger(\"flashDir\");","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"        path \u003d \"./data/flashcards\";","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"        String dataPath \u003d \"./data\";","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"        File dataFolder \u003d new File(dataPath);","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"        if(!dataFolder.exists()){","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"            if(dataFolder.mkdir()){","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, \"Created data directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"    Created events directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"            } else{","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, \"Failed to create data directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"    Failed to create directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"        } else{","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"            logger.log(Level.INFO, \"Using data directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"    Using data/events directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"        file \u003d new File(path);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"        if(!file.exists()){","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"            if(file.mkdir()){","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, \"Created flashcards directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"    Created flashcards directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"            } else{","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, \"Failed to create directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"    Failed to create directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"junhyeong0411"},"content":"        } else{","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"junhyeong0411"},"content":"            logger.log(Level.INFO, \"Using data/flashcards directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"    Using data/flashcards directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"junhyeong0411"},"content":"     * list-up saved files","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"junhyeong0411"},"content":"     * selecting file is for version 2","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"junhyeong0411"},"content":"    public void listFlashcardFiles(){","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"junhyeong0411"},"content":"        String[] flashcardFiles \u003d file.list();","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"junhyeong0411"},"content":"        if(flashcardFiles \u003d\u003d null){","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"junhyeong0411"},"content":"            logger.log(Level.INFO, \"Failed to find files\");","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"Failed to find files\");","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"junhyeong0411"},"content":"        } else if(flashcardFiles.length \u003d\u003d 0){","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"junhyeong0411"},"content":"            logger.log(Level.INFO, \"No files exist\");","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"No files exist\");","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"        } else{","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"junhyeong0411"},"content":"            for(String flashcardFile : flashcardFiles){","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, flashcardFile);","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"        \"+flashcardFile);","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"junhyeong0411"},"content":"     * return default directory","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"junhyeong0411"},"content":"     * for version 1","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"junhyeong0411"},"content":"     * @return directory for flashcard txt file","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"junhyeong0411"},"content":"    public String defaultDirectory() {","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"junhyeong0411"},"content":"        return this.path + \"/flashcard.txt\";","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"junhyeong0411"},"content":"     * return directory of flashcard txt file","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"junhyeong0411"},"content":"     * for version 2","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"junhyeong0411"},"content":"     * @param path","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"junhyeong0411"},"content":"     * @return","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"junhyeong0411"},"content":"    public String flashcardDirectory(String path) {","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"junhyeong0411"},"content":"        return this.path + path;","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"wendelinwemhoener":1,"junhyeong0411":95}},{"path":"src/main/java/seedu/duke/flashcard/FlashcardList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":" * Container class for a list of flashcards.","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":" * Exposes a simple, unified API for dealing with a list of flashcards.","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"public class FlashcardList {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"    private ArrayList\u003cFlashcard\u003e flashcards;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"     * Instantiates and returns a FlashcardList holding the passed flashcards.","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcards The flashcards to be contained by the FlashcardList.","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"    public FlashcardList(ArrayList\u003cFlashcard\u003e flashcards) {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"        this.flashcards \u003d flashcards;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"    public ArrayList\u003cFlashcard\u003e getFlashcards() {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"        return flashcards;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"     * Returns the amount of flashcards held by the FlashcardList.","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return The size of the FlashcardList.","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"    public int getSize(){","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"        return flashcards.size();","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"     * Adds a flashcard to the FlashcardList.","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcard The flashcard that shall be added.","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"    public void add(Flashcard flashcard) {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"        flashcards.add(flashcard);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"     * Deletes all flashcards in the FlashcardList, effectively emptying it.","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"    public void deleteAllFlashcards() {","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"        flashcards.clear();","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"     * Returns whether the FlashcardList contains any flashcards or not.","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return If the FlashcardList is empty.","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"        return flashcards.isEmpty();","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"     * Attempts to delete a flashcard by the passed id.","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"     * If no flashcard with the passed id exists, returns false.","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardId The id of the flashcard to delete.","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return Whether the deletion was successful (true if successful).","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"    public boolean deleteFlashcardById(int flashcardId) {","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"        int indexToDeleteAt \u003d -1;","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"        for (int i \u003d 0; i \u003c flashcards.size(); i++) {","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"            if (flashcards.get(i).getId() \u003d\u003d flashcardId) {","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"                indexToDeleteAt \u003d i;","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"        if (indexToDeleteAt \u003d\u003d -1) {","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"            flashcards.remove(indexToDeleteAt);","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":84}},{"path":"src/main/java/seedu/duke/flashcard/FlashcardStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"package seedu.duke.flashcard;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"import java.io.File;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":" * storage for flashcards","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":" * One storage manages one file","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"public class FlashcardStorage {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"    // simply implemented for save \u0026 load first","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"    private static Logger flashlogger; // for logging","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"    protected String path;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"    FlashcardStorageParser parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"    public FlashcardStorage(String path){","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"        flashlogger \u003d Logger.getLogger(\"flash\");","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"        flashlogger.setLevel(Level.WARNING);","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"    public boolean isStorageAvailable(){","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"        File f \u003d new File(this.path);","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"        return f.exists();","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"     * load list of flashcards","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"     * from this.path","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"     * @return list of Flashcards","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"    public FlashcardList loadFlashcards() throws FileNotFoundException{","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"        flashlogger.log(Level.INFO, \"loading flashcard\");","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"        FlashcardList flashcardList \u003d new FlashcardList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"        File f \u003d new File (this.path);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"junhyeong0411"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"        while(s.hasNext()){","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"junhyeong0411"},"content":"            String[] flashTokens \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"junhyeong0411"},"content":"            flashcardList.add(FlashcardStorageParser.loadFlashcard(flashTokens));","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"junhyeong0411"},"content":"            flashlogger.log(Level.INFO, \"added flashcard\");","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"junhyeong0411"},"content":"        flashlogger.log(Level.INFO, String.format(","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"                \"There are currently %d flashcards in the savefile\",","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"                flashcardList.getSize()));","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"junhyeong0411"},"content":"        return flashcardList;","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"junhyeong0411"},"content":"     * saveFlashcards method","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"junhyeong0411"},"content":"     * save all flashcard data to file","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"junhyeong0411"},"content":"     * @param flashcardList","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"junhyeong0411"},"content":"    public boolean saveFlashcards(ArrayList\u003cFlashcard\u003e flashcardList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"junhyeong0411"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"junhyeong0411"},"content":"            FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"junhyeong0411"},"content":"            for (int i \u003d 0; i \u003c flashcardList.size(); i++) {","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"junhyeong0411"},"content":"                // get info from a flashcard","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"junhyeong0411"},"content":"                Flashcard flashcard \u003d flashcardList.get(i);","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"junhyeong0411"},"content":"                int id \u003d flashcard.getId();","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"junhyeong0411"},"content":"                String frontText \u003d flashcard.getFrontText();","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"junhyeong0411"},"content":"                String backText \u003d flashcard.getBackText();","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"junhyeong0411"},"content":"                int difficulty \u003d flashcard.getDifficulty();","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"junhyeong0411"},"content":"                fw.write(String.format(\"%d | %s | %s | %d \\r\\n\",","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"junhyeong0411"},"content":"                        id, frontText, backText, difficulty));","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"junhyeong0411"},"content":"            fw.close();","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"junhyeong0411"},"content":"            return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"junhyeong0411"},"content":"        } catch (IOException e){","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"junhyeong0411"},"content":"            flashlogger.log(Level.WARNING, \"problem: failed to save\");","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"junhyeong0411"},"content":"            return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"wendelinwemhoener":2,"junhyeong0411":98}},{"path":"src/main/java/seedu/duke/flashcard/FlashcardStorageParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"package seedu.duke.flashcard;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":" * FlashcardStorageParser class","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":" * Utility class for parsing","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":"public final class FlashcardStorageParser {","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"    private static Logger flashlogger; // for logging","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"     * load a flash card from certain format","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"     * Tokens includes attributes of Flashcard","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"     * @param tokens","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"     * @return Flashcard object","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"    public static Flashcard loadFlashcard(String[] tokens){","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"        flashlogger \u003d Logger.getLogger(\"flash\");","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"        flashlogger.setLevel(Level.WARNING);","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"        assert tokens.length \u003d\u003d 4 : \"Token length should be 4\";","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"        flashlogger.log(Level.INFO, \"token length is\", tokens.length);","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"        int id \u003d Integer.parseInt(tokens[0].trim());","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"        String frontText \u003d tokens[1].trim();","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"        String backText \u003d tokens[2].trim();","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"        int difficulty \u003d Integer.parseInt(tokens[3].trim());","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"        Flashcard flashcard \u003d new Flashcard(frontText, backText);","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"        flashcard.setId(id);","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"        flashcard.setDifficulty(difficulty);","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"        flashlogger.log(Level.INFO, \"loaded flashcard\");","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"        return flashcard;","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"junhyeong0411":45}},{"path":"src/main/java/seedu/duke/flashcard/FlashcardUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.FlashcardCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":" * Responsible for interfacing with the user by managing the dispatching of","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":" * commands to be executed and show to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"public class FlashcardUi {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"    private FlashcardList flashcardList;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"     * Instantiates and returns a new FlashcardUi.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList The flashcards to be used for this Ui.","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"    public FlashcardUi(FlashcardList flashcardList) {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"        this.flashcardList \u003d flashcardList;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"     * Executes a command and provides it with the appropriate context.","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"     * This context consists of a scanner for handling input and a","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"     * FlashcardList to execute actions on.","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param command The command that shall be executed.","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"    public void executeCommand(FlashcardCommand command) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"        command.execute(scanner, flashcardList);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"     * Set scanner method","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"     * for using bytearrayinputstream in test","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"    public void setScanner(Scanner scanner){","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"        this.scanner \u003d scanner;","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":46}},{"path":"src/main/java/seedu/duke/flashcard/command/CreateFlashcardCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.command;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.Flashcard;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":" * This command allows creating a new flashcard by inputting its front and","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":" * back text.","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"public class CreateFlashcardCommand extends FlashcardCommand {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"     * Creates a new flashcard.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"     * The user is asked to input the front and back text of the new","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"     * flashcard, and then it is added to the flashcardList.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner Scanner that allows handling user input.","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList Which flashcards to perform actions on.","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"    public void execute(Scanner scanner, FlashcardList flashcardList) {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.print(\"    Enter the front page text: \");","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"        String frontPageText \u003d scanner.nextLine();","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.print(\"    Enter the back page text: \");","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"        String backPageText \u003d scanner.nextLine();","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"        Flashcard flashcard \u003d new Flashcard(frontPageText, backPageText);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"        flashcardList.add(flashcard);","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println();","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Success! Flashcard has been added to your \" +","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"                \"collection.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":37}},{"path":"src/main/java/seedu/duke/flashcard/command/DeleteAllFlashcardsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.command;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":" * This command allows deleting all current flashcards.","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"public class DeleteAllFlashcardsCommand extends FlashcardCommand {","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"     * Deletes all flashcards from the flashcardList.","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner Scanner that allows handling user input.","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList Which flashcards to perform actions on.","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"    public void execute(Scanner scanner, FlashcardList flashcardList) {","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"        flashcardList.deleteAllFlashcards();","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    All your flashcards have been successfully \" +","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"                \"deleted .\");","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"wendelinwemhoener":23}},{"path":"src/main/java/seedu/duke/flashcard/command/DeleteFlashcardCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.command;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"public class DeleteFlashcardCommand extends DualFlashcardCommand {","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"    public DeleteFlashcardCommand(String input) {","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"        beginnerCommandLength \u003d 2;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"        expertCommandLength \u003d 3;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"        syntaxString \u003d \"delete flashcard FLASHCARD_ID\";","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"    protected void executeBeginnerMode(Scanner scanner,","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"                                    FlashcardList flashcardList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Enter id of the flashcard you want to delete:\" +","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"                \" \");","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"        int flashcardId;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"            flashcardId \u003d Integer.parseInt(input);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Invalid input! Id must be an integer\");","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"            return;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"        deleteFlashcardById(flashcardId, flashcardList);","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"    protected void executeExpertMode(Scanner scanner,","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"                                  FlashcardList flashcardList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"        String[] commandParts \u003d input.split(\" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"            int flashcardId \u003d Integer.parseInt(commandParts[2]);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"            deleteFlashcardById(flashcardId, flashcardList);","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Invalid id! Id must be an integer\");","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"    private void deleteFlashcardById(int flashcardId, FlashcardList flashcardList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"        boolean deletionWasSuccessful \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"                flashcardList.deleteFlashcardById(flashcardId);","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"        if (deletionWasSuccessful) {","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Flashcard with id \" + flashcardId + \" has been \" +","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"                    \"successfully deleted.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Couldn\u0027t find a flashcard with id \" + flashcardId);","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    No deletion has been performed. Please \" +","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"                    \"try again with a valid id.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"wendelinwemhoener":61}},{"path":"src/main/java/seedu/duke/flashcard/command/DualFlashcardCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.command;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"public abstract class DualFlashcardCommand extends FlashcardCommand {","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"    protected int beginnerCommandLength;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"    protected int expertCommandLength;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"    protected String input;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"    protected String syntaxString;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"    protected abstract void executeBeginnerMode(Scanner scanner, FlashcardList flashcardList);","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"    protected abstract void executeExpertMode(Scanner scanner,","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"                                         FlashcardList flashcardList);","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"    public void execute(Scanner scanner, FlashcardList flashcardList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"        String[] commandParts \u003d input.split(\" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"        if (commandParts.length \u003d\u003d beginnerCommandLength) {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"            executeBeginnerMode(scanner, flashcardList);","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (commandParts.length \u003d\u003d expertCommandLength) {","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"            executeExpertMode(scanner, flashcardList);","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Invalid syntax! The syntax is \u0027\" + syntaxString + \"\u0027\");","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Please try again.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"wendelinwemhoener":32}},{"path":"src/main/java/seedu/duke/flashcard/command/FlashcardCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.command;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":" * Abstract class that provides the interface for executing commands by using","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":" * a Scanner for input and a FlashcardList to perform actions on as command","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":" * execution context.","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"public abstract class FlashcardCommand {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"     * Executes a command, given the appropriate context.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"     * This context consists of a scanner for handling input and a","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"     * FlashcardList to execute actions on.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner Scanner that allows handling user input.","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList Which flashcards to perform actions on.","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"    public abstract void execute(Scanner scanner, FlashcardList flashcardList);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":24}},{"path":"src/main/java/seedu/duke/flashcard/command/ListFlashcardsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.command;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.Flashcard;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":" * This command allows listing all current flashcards.","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"public class ListFlashcardsCommand extends FlashcardCommand {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"     * Prints out a list of all current flashcards.","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"     * Handles the scenario that there are no flashcards by printing an","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"     * appropriate \"You dont\u0027t have any flashcards yet!\" message.","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner Scanner that allows handling user input.","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList Which flashcards to perform actions on.","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"    public void execute(Scanner scanner, FlashcardList flashcardList) {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"        if (flashcardList.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    You dont\u0027t have any flashcards yet! \");","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"            return;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Here is a list of all your flashcards: \");","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println();","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"-\".repeat(80));","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"        for (Flashcard flashcard : flashcardList.getFlashcards()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.print(flashcard);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"-\".repeat(80));","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println();","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Those were all your flashcards.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":40}},{"path":"src/main/java/seedu/duke/flashcard/command/StartReviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.command;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.review.RandomReviewMode;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.review.ReviewMode;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.review.SpacedRepetitionReviewMode;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"public class StartReviewCommand extends DualFlashcardCommand {","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"    private final ArrayList\u003cString\u003e choices \u003d new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"            \"a\", \"b\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"    public StartReviewCommand(String input) {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"        beginnerCommandLength \u003d 2;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"        expertCommandLength \u003d 3;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"        syntaxString \u003d \"review flashcards REVIEW_MODE\";","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"    private String getUserChoiceReviewMode(Scanner scanner) {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    How do you want to review your flashcards?\");","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"        a) random mode\");","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"        b) spaced repetition mode\");","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"    protected void executeBeginnerMode(Scanner scanner,","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"                                     FlashcardList flashcardList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"        String choice \u003d getUserChoiceReviewMode(scanner);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"        while (!choices.contains(choice.toLowerCase())) {","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Invalid choice! Your choice must be a or \" +","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"                    \"b! Please try again.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"            choice \u003d getUserChoiceReviewMode(scanner);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"        startReview(scanner, flashcardList, choice);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"    protected void executeExpertMode(Scanner scanner,","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"                                     FlashcardList flashcardList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"        String[] commandParts \u003d input.split(\" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"            String choice \u003d commandParts[2].toLowerCase();","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"            if (!choices.contains(choice)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"                System.out.println(\"    Invalid choice! Your choice must be a\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"                        \" or b! Please try again.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"                return;","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"            startReview(scanner, flashcardList, choice);","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Invalid syntax! The syntax is \u0027review \" +","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"                    \"flashcards REVIEW_MODE\u0027\");","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Please try again.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"    private void startReview(Scanner scanner,","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"                             FlashcardList flashcardList,","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"                             String choice) {","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"        ReviewMode reviewMode \u003d createReviewMode(choice.toLowerCase(), flashcardList);","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"        reviewMode.startReviewSession(scanner);","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"    private ReviewMode createReviewMode(String choice, FlashcardList flashcardList) {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"        ReviewMode reviewMode \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"        if (choice.equals(\"a\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"            reviewMode \u003d new RandomReviewMode(flashcardList);","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (choice.equals(\"b\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"            reviewMode \u003d new SpacedRepetitionReviewMode(flashcardList);","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"wendelinwemhoener"},"content":"        assert reviewMode !\u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"wendelinwemhoener"},"content":"        return reviewMode;","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":90}},{"path":"src/main/java/seedu/duke/flashcard/command/UnknownCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.command;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":" * This command represents an unknown command.","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"public class UnknownCommand extends FlashcardCommand {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"     * Prints an error message and returns.","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner Scanner that allows handling user input.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList Which flashcards to perform actions on.","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"    public void execute(Scanner scanner, FlashcardList flashcardList) {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"Unknown command! Please try again.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":22}},{"path":"src/main/java/seedu/duke/flashcard/review/RandomReviewMode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.review;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.Flashcard;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Random;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"public class RandomReviewMode extends ReviewMode {","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"    public RandomReviewMode(FlashcardList flashcardList) {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"        super(flashcardList);","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"    public String getReviewModeName() {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"        return \"random review mode\";","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"    protected Flashcard pickFlashcard() {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"        ArrayList\u003cFlashcard\u003e flashcards \u003d flashcardList.getFlashcards();","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"        return flashcards.get(random.nextInt(flashcards.size()));","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"wendelinwemhoener":26}},{"path":"src/main/java/seedu/duke/flashcard/review/ReviewMode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.review;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.Flashcard;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"public abstract class ReviewMode {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"    protected FlashcardList flashcardList;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"    public ReviewMode(FlashcardList flashcardList) {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"        this.flashcardList \u003d flashcardList;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"    public abstract String getReviewModeName();","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"    public void startReviewSession(Scanner scanner) {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    You have started a review session in \"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"                + getReviewModeName() + System.lineSeparator());","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"        if (flashcardList.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    You have no flashcards to review!\");","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Add some flashcards and try again.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"            return;","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"        while (true) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"            Flashcard flashcardToReview \u003d pickFlashcard();","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"            printFlashcardFrontTextPrompt(flashcardToReview);","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"            boolean shouldTerminate \u003d input.startsWith(\"quit\") || input.equals(\"q\");","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"            if (shouldTerminate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"                break;","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    The actual back text is: \" + flashcardToReview.getBackText());","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println();","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"            if (getReviewModeName().equals(\"spaced repetition mode\")) {","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"                letUserRateReviewDifficulty(scanner, flashcardToReview);","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Success! You have ended this review session.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"    protected abstract Flashcard pickFlashcard();","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"    protected void printFlashcardFrontTextPrompt(Flashcard flashcardToReview) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    \" + \"-\".repeat(76));","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    The front text is: \" + flashcardToReview.getFrontText());","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println();","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    [Think of the answer (the back text) in \" +","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"                \"your head]\");","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    [Press \u003cENTER\u003e when you are ready to \" +","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"                \"compare it, or enter \u0027q\u0027/\u0027quit\u0027 to end this \" +","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"                \"review session]\");","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"    protected void letUserRateReviewDifficulty(Scanner scanner,","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"                                               Flashcard flashcard) {","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    How hard was it to remeber the back page of \" +","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"                \"this flashcard?\");","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Press \u003cE\u003e if it was easy, \u003cM\u003e if it was \" +","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"                \"moderately challenging or \u003cH\u003e if it was quite hard.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"        final ArrayList\u003cString\u003e choices \u003d new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"                \"e\", \"m\", \"h\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"        String choice \u003d scanner.nextLine();","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"        while (!choices.contains(choice)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Invalid choice! Your choice must be e, m \" +","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"                    \"or h! Please try again.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"            choice \u003d scanner.nextLine();","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"wendelinwemhoener"},"content":"        int difficultyChange;","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"wendelinwemhoener"},"content":"        switch (choice.toLowerCase()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"wendelinwemhoener"},"content":"        case \"e\":","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"wendelinwemhoener"},"content":"            difficultyChange \u003d -1;","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"wendelinwemhoener"},"content":"            break;","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"wendelinwemhoener"},"content":"        case \"m\":","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"wendelinwemhoener"},"content":"            difficultyChange \u003d 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"wendelinwemhoener"},"content":"            break;","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"wendelinwemhoener"},"content":"        default:","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"wendelinwemhoener"},"content":"            difficultyChange \u003d +1;","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"wendelinwemhoener"},"content":"            break;","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"wendelinwemhoener"},"content":"        flashcard.applyDifficultyChange(difficultyChange);","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"wendelinwemhoener":100}},{"path":"src/main/java/seedu/duke/flashcard/review/SpacedRepetitionReviewMode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.review;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.Flashcard;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"public class SpacedRepetitionReviewMode extends ReviewMode {","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"    public SpacedRepetitionReviewMode(FlashcardList flashcardList) {","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"        super(flashcardList);","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"    public String getReviewModeName() {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"        return \"spaced repetition mode\";","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"    protected Flashcard pickFlashcard() {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"        ArrayList\u003cFlashcard\u003e flashcards \u003d flashcardList.getFlashcards();","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"        int maxDifficulty \u003d Integer.MIN_VALUE;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"        Flashcard maxDifficultyFlashcard \u003d null;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"        for (Flashcard flashcard : flashcards) {","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"            if (flashcard.getDifficulty() \u003e maxDifficulty) {","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"                maxDifficulty \u003d flashcard.getDifficulty();","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"                maxDifficultyFlashcard \u003d flashcard;","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"        assert maxDifficultyFlashcard !\u003d null : \"there should be a flashcard\";","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"        return maxDifficultyFlashcard;","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"wendelinwemhoener":36}},{"path":"src/test/java/seedu/duke/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.calendar.CalendarManager;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.calendar.EventStorage;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.flashcard.FlashcardComponent;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.flashcard.FlashcardStorage;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.flashcard.FlashcardUi;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class DukeTest {","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"    public void testFlashcardComponent_isResponsible_notResponsible() {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"        FlashcardComponent flashcardComponent \u003d new FlashcardComponent();","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"        assertFalse(flashcardComponent.isResponsible(\"dfdfdfdfdf\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"        assertFalse(flashcardComponent.isResponsible(\"help me\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"        assertFalse(flashcardComponent.isResponsible(\" \"));","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"    public void testFlashcardComponent_isResponsible_responsible() {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"        FlashcardComponent flashcardComponent \u003d new FlashcardComponent();","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"        assertTrue(flashcardComponent.isResponsible(\"create flashcard\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"        assertTrue(flashcardComponent.isResponsible(\"create flashcard  \"));","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"        assertTrue(flashcardComponent.isResponsible(\"list flashcards\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"    public void testFlashcardStorage_isAvailable(){","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"        FlashcardComponent flashcardComponent \u003d new FlashcardComponent();","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"        FlashcardStorage storage \u003d flashcardComponent.getStorage();","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"junhyeong0411"},"content":"        assertTrue(storage.isStorageAvailable());","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"junhyeong0411"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"junhyeong0411"},"content":"    public void testEventStorage_isAvailable(){","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"junhyeong0411"},"content":"        CalendarManager calendarManager \u003d new CalendarManager(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"junhyeong0411"},"content":"        EventStorage storage \u003d calendarManager.getStorage();","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"junhyeong0411"},"content":"        assertTrue(storage.isStorageAvailable());","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"junhyeong0411"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"junhyeong0411"},"content":"    public void testFlashcardStorage_isSavingCorrectly(){","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"junhyeong0411"},"content":"        String input \u003d \"create flashcard\\n\";","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"junhyeong0411"},"content":"        input +\u003d \"Hello\\n\";","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"junhyeong0411"},"content":"        input +\u003d \"Duke\\n\";","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"junhyeong0411"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"junhyeong0411"},"content":"        System.setIn(in);","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"junhyeong0411"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"junhyeong0411"},"content":"        FlashcardComponent flashcardComponent \u003d new FlashcardComponent();","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"junhyeong0411"},"content":"        FlashcardStorage storage \u003d flashcardComponent.getStorage();","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"junhyeong0411"},"content":"        FlashcardUi ui \u003d flashcardComponent.getUi();","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"junhyeong0411"},"content":"        ui.setScanner(scanner);","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"junhyeong0411"},"content":"        flashcardComponent.processInput(scanner.nextLine());","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"junhyeong0411"},"content":"        FlashcardList flashcardList \u003d flashcardComponent.getFlashcardList();","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"junhyeong0411"},"content":"        assertTrue(storage.saveFlashcards(flashcardList.getFlashcards()));","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"Brian030601"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"Brian030601"},"content":"    public void testCalendar() {","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"Brian030601"},"content":"        assertTrue(true);","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"wendelinwemhoener":17,"-":12,"junhyeong0411":52,"Brian030601":5}}]
