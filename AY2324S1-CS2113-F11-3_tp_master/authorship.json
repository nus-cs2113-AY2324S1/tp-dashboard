[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"wendelinwemhoener":1,"-":64}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName.set(\"duke\")","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wendelinwemhoener":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Display |        Name        | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"--------|:------------------:|:--------------:|:---------:","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"![](https://media.licdn.com/dms/image/C4D03AQGTLbALYjG82Q/profile-displayphoto-shrink_800_800/0/1580629728751?e\u003d1701907200\u0026v\u003dbeta\u0026t\u003dPEfw_qZfZA39rJRfo5_Pg4o_RmbPwdneiPX3ftNt9dA) | Wendelin Wemhoener | [Github](https://github.com/wendelinwemhoener/) | [Portfolio](https://ay2324s1-cs2113-f11-3.github.io/tp/team/wendelinwemhoener.html)","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"Cheezeblokz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |     Zhu Jingxi     | [Github](https://github.com/Cheezeblokz) | [Portfolio](docs/team/zhujingxi.md)","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"![](/Users/brian/Desktop/Colgate/NUS Fall 2023/CS2113/Team Project/docs/photo/kherlenbayasgalan.jpg) | Kherlen Bayasgalan | [Github](https://github.com/Brian030601) | [Portfolio](docs/team/brian030601.md)","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Bang Junhyeong   | [Github](https://github.com/junhyeong0411) | [Portfolio](docs/team/bangjunhyeong.md)","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"wendelinwemhoener":2,"Cheezeblokz":2,"-":3,"junhyeong0411":1,"Brian030601":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"# **Developer Guide**","lastModifiedDate":"2023-11-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"## **Acknowledgements**","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"+ Acknowledgement to the [CS2113 Website](https://nus-cs2113-ay2324s1.github.io/website/admin/tp-deliverables.html#deliverable-project-portfolio-page-ppp) for giving us design guidelines.","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"+ Acknowledgement to [Dr Akshay Narayan](https://www.comp.nus.edu.sg/cs/people/anarayan/), and Teaching Assistant for their guidance.","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"+ Acknowledgement to [team members](AboutUs.md) for their hard work.","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"+ Acknowledgement to the [diagram tool](https://app.diagrams.net) for facilitating drawing of diagrams","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"+ Acknowledgement to [Developer Guide Example](https://se-education.org/addressbook-level3/DeveloperGuide.html#acknowledgements) for illustration.","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"## **Design \u0026 implementation**","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"### **Design \u0026 Architecture**","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"Brian030601"},"content":"![High-level Design of TaskLinker](photo/OverallDesign.png)","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"Brian030601"},"content":"**Main components of the architecture**","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"Brian030601"},"content":"The two main classes of Duke are FlashcardComponent and CalendarManager.","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"Brian030601"},"content":"Those two classes carry out the bulk of the application. ","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"Brian030601"},"content":"Duke prompts for user input. Duke also has accesses to FlashcardComponent","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"Brian030601"},"content":"and CalendarManager. So, when the user input is given, duke decided which one","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"Brian030601"},"content":"to call based on the input.","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"Brian030601"},"content":"As the input is processed and called by one of the two main classes, ","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"Brian030601"},"content":"subsequent methods and features are called by children classes. The ","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"Brian030601"},"content":"low-class explanations will be given below.","lastModifiedDate":"2023-11-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"### **`flashcard` package**","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Package structure overview** ","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"The API of the `flashcard` package is defined in [`FlashcardComponent.java`](https://github.com/AY2324S1-CS2113-F11-3/tp/blob/master/src/main/java/seedu/duke/flashcard/FlashcardComponent.java).","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"The flashcard package is structured into multiple parts:","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"- [`Flashcard.java`](https://github.com/AY2324S1-CS2113-F11-3/tp/blob/master/src/main/java/seedu/duke/flashcard/Flashcard.java):","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"  Represents a single flashcard with front text, back text as well as ","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"  its unique id and current difficulty level.","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"- [`FlashcardCommandParser.java`](https://github.com/AY2324S1-CS2113-F11-3/tp/blob/master/src/main/java/seedu/duke/flashcard/FlashcardCommandParser.java):","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"  Parses user inputs into the corresponding commands.","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"- [`FlashcardComponent.java`](https://github.com/AY2324S1-CS2113-F11-3/tp/blob/master/src/main/java/seedu/duke/flashcard/FlashcardComponent.java):","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"  Encapsulates all functionality of the `flashcard` package and exposes it ","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"  in one single, unified API.","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"- [`FlashcardDirectory.java`](https://github.com/AY2324S1-CS2113-F11-3/tp/blob/master/src/main/java/seedu/duke/flashcard/FlashcardDirectory.java):","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"  Helper class needed for storing flashcards after TaskLinker has been ","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"  exited; see [the DG section about storage components](#storage-components).","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"- [`FlashcardList.java`](https://github.com/AY2324S1-CS2113-F11-3/tp/blob/master/src/main/java/seedu/duke/flashcard/FlashcardList.java):","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"  Container class for a list of flashcards. Exposes a simple, unified API ","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"  for dealing with a list of flashcards.","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"- [`FlashcardUi.java`](https://github.com/AY2324S1-CS2113-F11-3/tp/blob/master/src/main/java/seedu/duke/flashcard/FlashcardUi.java):","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"  Responsible for interfacing with the user: dispatches commands to be ","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"  executed and shows their output to the user.","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"- [`flashcard.command` package](https://github.com/AY2324S1-CS2113-F11-3/tp/tree/master/src/main/java/seedu/duke/flashcard/command):","lastModifiedDate":"2023-11-14"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"  Contains classes representing the different kinds of commands (`list ","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"  flashcards`, `create flashcard` etc.).","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"- [`flashcard.exceptions` package](https://github.com/AY2324S1-CS2113-F11-3/tp/tree/master/src/main/java/seedu/duke/flashcard/exceptions):","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"  Contains classes representing custom exceptions that are specific to the ","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"  `flashcards` package.","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"- [`flashcard.review` package](https://github.com/AY2324S1-CS2113-F11-3/tp/tree/master/src/main/java/seedu/duke/flashcard/review):","lastModifiedDate":"2023-11-14"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"  Contains classes representing the different flashcard review modes (random ","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"  mode and spaced repetition mode).","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"This class diagram provides a high-level overview of how the classes in the ","lastModifiedDate":"2023-11-14"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"top-level `flashcard` package integrate with each other:","lastModifiedDate":"2023-11-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"![class diagram of classes providing flashcard functionality](Diagrams/flashcard-diagrams/overview_classes.svg)","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Rough control flow overview**","lastModifiedDate":"2023-11-14"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"The process of processing the initial user input and figuring out which ","lastModifiedDate":"2023-11-14"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"command to  execute based on this user input is handled by the ","lastModifiedDate":"2023-11-14"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"`FlashcardComponent`, `FlashcardCommandParser` and `FlashcardUi` classes.","lastModifiedDate":"2023-11-14"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"During their operation, they create an instance of the appropriate ","lastModifiedDate":"2023-11-14"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"`FlashcardCommand` (from the `flashcard.command` package) and then execute ","lastModifiedDate":"2023-11-14"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"it; thereby performing the action the user wanted.","lastModifiedDate":"2023-11-14"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"Put into a sequence diagram flow, the above-mentioned workflow looks like this:","lastModifiedDate":"2023-11-14"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"![sequence diagram of processing the list flashcards input](Diagrams/flashcard-diagrams/overview_sequence.svg)","lastModifiedDate":"2023-11-14"},{"lineNumber":85,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"wendelinwemhoener"},"content":"This workflow is divided into multiple parts:","lastModifiedDate":"2023-11-14"},{"lineNumber":87,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":88,"author":{"gitId":"wendelinwemhoener"},"content":"1. When the user enters text (\"list flashcards\" in this specific case), `Duke` ","lastModifiedDate":"2023-11-14"},{"lineNumber":89,"author":{"gitId":"wendelinwemhoener"},"content":"   first tries to figure out whether the flashcard package is responsible for","lastModifiedDate":"2023-11-14"},{"lineNumber":90,"author":{"gitId":"wendelinwemhoener"},"content":"   handling it. To this end, `Duke` calls the `isResponsible` method of ","lastModifiedDate":"2023-11-14"},{"lineNumber":91,"author":{"gitId":"wendelinwemhoener"},"content":"   `FlashcardComponent`.","lastModifiedDate":"2023-11-14"},{"lineNumber":92,"author":{"gitId":"wendelinwemhoener"},"content":"2. The `isResponsible` method works by passing the input on to ","lastModifiedDate":"2023-11-14"},{"lineNumber":93,"author":{"gitId":"wendelinwemhoener"},"content":"   `FlashcardCommandParser` and checking whether it returns an ","lastModifiedDate":"2023-11-14"},{"lineNumber":94,"author":{"gitId":"wendelinwemhoener"},"content":"   UnknownCommand or not. In this specific case, `FlashcardCommandParser` ","lastModifiedDate":"2023-11-14"},{"lineNumber":95,"author":{"gitId":"wendelinwemhoener"},"content":"   recognizes the \"list flashcards\" input and returns a matching ","lastModifiedDate":"2023-11-14"},{"lineNumber":96,"author":{"gitId":"wendelinwemhoener"},"content":"   `ListFlashcardsCommand`. Thus, the `FlashcardComponent` knows that it ","lastModifiedDate":"2023-11-14"},{"lineNumber":97,"author":{"gitId":"wendelinwemhoener"},"content":"   can process the inputted text and thus is responsible for handling it. ","lastModifiedDate":"2023-11-14"},{"lineNumber":98,"author":{"gitId":"wendelinwemhoener"},"content":"   Thus, true is returned.","lastModifiedDate":"2023-11-14"},{"lineNumber":99,"author":{"gitId":"wendelinwemhoener"},"content":"3. Because `FlashcardComponent` has returned `true` as response to the call ","lastModifiedDate":"2023-11-14"},{"lineNumber":100,"author":{"gitId":"wendelinwemhoener"},"content":"   of its `isResponsbile` method, `Duke` passes the user input on to ","lastModifiedDate":"2023-11-14"},{"lineNumber":101,"author":{"gitId":"wendelinwemhoener"},"content":"   `FlashcardComponent` via the `processInput` method.","lastModifiedDate":"2023-11-14"},{"lineNumber":102,"author":{"gitId":"wendelinwemhoener"},"content":"4. Just like when executing the `isResponsible` method, `FlashcardComponent` ","lastModifiedDate":"2023-11-14"},{"lineNumber":103,"author":{"gitId":"wendelinwemhoener"},"content":"   passes the input on to `FlashcardCommandParser` and in this specific case ","lastModifiedDate":"2023-11-14"},{"lineNumber":104,"author":{"gitId":"wendelinwemhoener"},"content":"   gets back a `ListFlashcardsCommand`.","lastModifiedDate":"2023-11-14"},{"lineNumber":105,"author":{"gitId":"wendelinwemhoener"},"content":"5. `FlashcardComponent` now passes this `ListFlashcardsCommand` on to the ","lastModifiedDate":"2023-11-14"},{"lineNumber":106,"author":{"gitId":"wendelinwemhoener"},"content":"   `FlashcardUi` by invoking the latter\u0027s `executeCommand` method.","lastModifiedDate":"2023-11-14"},{"lineNumber":107,"author":{"gitId":"wendelinwemhoener"},"content":"6. The `FlashcardUi` in turn calls the `execute` method of the ","lastModifiedDate":"2023-11-14"},{"lineNumber":108,"author":{"gitId":"wendelinwemhoener"},"content":"   `ListFlashcardsCommand` it has just been passed.","lastModifiedDate":"2023-11-14"},{"lineNumber":109,"author":{"gitId":"wendelinwemhoener"},"content":"7. The `ListFlashcardsCommand` is executed, showing a list of all flashcards ","lastModifiedDate":"2023-11-14"},{"lineNumber":110,"author":{"gitId":"wendelinwemhoener"},"content":"   to the user, before control is returned to `Duke`.","lastModifiedDate":"2023-11-14"},{"lineNumber":111,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":112,"author":{"gitId":"wendelinwemhoener"},"content":"#### **`flashcard.command` package**","lastModifiedDate":"2023-11-14"},{"lineNumber":113,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"wendelinwemhoener"},"content":"The `flashcard.command` package contains the classes representing the ","lastModifiedDate":"2023-11-14"},{"lineNumber":115,"author":{"gitId":"wendelinwemhoener"},"content":"different flashcard commands.","lastModifiedDate":"2023-11-14"},{"lineNumber":116,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":117,"author":{"gitId":"wendelinwemhoener"},"content":"These are the classes representing the different commands:","lastModifiedDate":"2023-11-14"},{"lineNumber":118,"author":{"gitId":"wendelinwemhoener"},"content":"- [`CreateFlashcardCommand.java`](https://github.com/AY2324S1-CS2113-F11-3/tp/blob/master/src/main/java/seedu/duke/flashcard/command/CreateFlashcardCommand.java)","lastModifiedDate":"2023-11-14"},{"lineNumber":119,"author":{"gitId":"wendelinwemhoener"},"content":"  corresponds to the `create flashcards` command","lastModifiedDate":"2023-11-14"},{"lineNumber":120,"author":{"gitId":"wendelinwemhoener"},"content":"- [`DeleteAllFlashcardsCommand.java`](https://github.com/AY2324S1-CS2113-F11-3/tp/blob/master/src/main/java/seedu/duke/flashcard/command/DeleteAllFlashcardsCommand.java)","lastModifiedDate":"2023-11-14"},{"lineNumber":121,"author":{"gitId":"wendelinwemhoener"},"content":"  corresponds to the `delete all flashcards` command","lastModifiedDate":"2023-11-14"},{"lineNumber":122,"author":{"gitId":"wendelinwemhoener"},"content":"- [`DeleteFlashcardCommand.java`](https://github.com/AY2324S1-CS2113-F11-3/tp/blob/master/src/main/java/seedu/duke/flashcard/command/ListFlashcardsCommand.java)","lastModifiedDate":"2023-11-14"},{"lineNumber":123,"author":{"gitId":"wendelinwemhoener"},"content":"  corresponds to the `delete flashcard` command","lastModifiedDate":"2023-11-14"},{"lineNumber":124,"author":{"gitId":"wendelinwemhoener"},"content":"- [`ListFlashcardsCommand.java`](https://github.com/AY2324S1-CS2113-F11-3/tp/blob/master/src/main/java/seedu/duke/flashcard/command/ListFlashcardsCommand.java)","lastModifiedDate":"2023-11-14"},{"lineNumber":125,"author":{"gitId":"wendelinwemhoener"},"content":"  corresponds to the `list flashcards` command","lastModifiedDate":"2023-11-14"},{"lineNumber":126,"author":{"gitId":"wendelinwemhoener"},"content":"- [`StartReviewCommand.java`](https://github.com/AY2324S1-CS2113-F11-3/tp/blob/master/src/main/java/seedu/duke/flashcard/command/StartReviewCommand.java)","lastModifiedDate":"2023-11-14"},{"lineNumber":127,"author":{"gitId":"wendelinwemhoener"},"content":"  corresponds to the `review flashcards` command","lastModifiedDate":"2023-11-14"},{"lineNumber":128,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":129,"author":{"gitId":"wendelinwemhoener"},"content":"All these classes inherit from the abstract class `FlashcardCommand` and ","lastModifiedDate":"2023-11-14"},{"lineNumber":130,"author":{"gitId":"wendelinwemhoener"},"content":"define its `execute` method. This method serves as the entire API of a ","lastModifiedDate":"2023-11-14"},{"lineNumber":131,"author":{"gitId":"wendelinwemhoener"},"content":"`FlashcardCommand`: The `execute` method is passed a scanner and an instance ","lastModifiedDate":"2023-11-14"},{"lineNumber":132,"author":{"gitId":"wendelinwemhoener"},"content":"of `FlashcardList` that represents the currently used flashcards and then ","lastModifiedDate":"2023-11-14"},{"lineNumber":133,"author":{"gitId":"wendelinwemhoener"},"content":"performs any actions necessary to execute the respective command.","lastModifiedDate":"2023-11-14"},{"lineNumber":134,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":135,"author":{"gitId":"wendelinwemhoener"},"content":"Subclasses of `FlashcardCommand` are free to implement any additional ","lastModifiedDate":"2023-11-14"},{"lineNumber":136,"author":{"gitId":"wendelinwemhoener"},"content":"private or protected fields and/or methods that are required for their ","lastModifiedDate":"2023-11-14"},{"lineNumber":137,"author":{"gitId":"wendelinwemhoener"},"content":"internal operation. In this regard, because the commands all achieve very ","lastModifiedDate":"2023-11-14"},{"lineNumber":138,"author":{"gitId":"wendelinwemhoener"},"content":"different goals (listing flashcards vs creating new flashcards), the different ","lastModifiedDate":"2023-11-14"},{"lineNumber":139,"author":{"gitId":"wendelinwemhoener"},"content":"subclasses of `FlashcardCommand` can vary quite heavily. Therefore, in the ","lastModifiedDate":"2023-11-14"},{"lineNumber":140,"author":{"gitId":"wendelinwemhoener"},"content":"interest of brevity, the individual subclasses are not explained in further ","lastModifiedDate":"2023-11-14"},{"lineNumber":141,"author":{"gitId":"wendelinwemhoener"},"content":"detail and the reader is instead referred to their respective source code in ","lastModifiedDate":"2023-11-14"},{"lineNumber":142,"author":{"gitId":"wendelinwemhoener"},"content":"the `src/main/java/seedu.duke/flashcard/command` directory.","lastModifiedDate":"2023-11-14"},{"lineNumber":143,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":144,"author":{"gitId":"wendelinwemhoener"},"content":"##### \"Dual Commands\": Offering different input options for beginner vs expert users","lastModifiedDate":"2023-11-14"},{"lineNumber":145,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":146,"author":{"gitId":"wendelinwemhoener"},"content":"As already explained in the user guide, there are so-called \"Dual Commands\" ","lastModifiedDate":"2023-11-14"},{"lineNumber":147,"author":{"gitId":"wendelinwemhoener"},"content":"that can be invoked in two different ways: an easy, but more time-consuming way","lastModifiedDate":"2023-11-14"},{"lineNumber":148,"author":{"gitId":"wendelinwemhoener"},"content":"for  beginner users who want as much guidance as possible; or a less","lastModifiedDate":"2023-11-14"},{"lineNumber":149,"author":{"gitId":"wendelinwemhoener"},"content":"time-consuming, but more complicated way for expert users who don\u0027t need","lastModifiedDate":"2023-11-14"},{"lineNumber":150,"author":{"gitId":"wendelinwemhoener"},"content":"additional guidance. Such \"dual commands\" are implemented as subclasses of ","lastModifiedDate":"2023-11-14"},{"lineNumber":151,"author":{"gitId":"wendelinwemhoener"},"content":"the abstract class `DualFlashcardCommand`.","lastModifiedDate":"2023-11-14"},{"lineNumber":152,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":153,"author":{"gitId":"wendelinwemhoener"},"content":"Currently, the following commands are dual commands (and as such inherit ","lastModifiedDate":"2023-11-14"},{"lineNumber":154,"author":{"gitId":"wendelinwemhoener"},"content":"from `DualFlashcardCommand`):","lastModifiedDate":"2023-11-14"},{"lineNumber":155,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":156,"author":{"gitId":"wendelinwemhoener"},"content":"- [`DeleteFlashcardCommand.java`](https://github.com/AY2324S1-CS2113-F11-3/tp/blob/master/src/main/java/seedu/duke/flashcard/command/ListFlashcardsCommand.java)","lastModifiedDate":"2023-11-14"},{"lineNumber":157,"author":{"gitId":"wendelinwemhoener"},"content":"- [`StartReviewCommand.java`](https://github.com/AY2324S1-CS2113-F11-3/tp/blob/master/src/main/java/seedu/duke/flashcard/command/StartReviewCommand.java)","lastModifiedDate":"2023-11-14"},{"lineNumber":158,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":159,"author":{"gitId":"wendelinwemhoener"},"content":"The abstract `DualFlashcardCommand` mode contains two abstract methods that ","lastModifiedDate":"2023-11-14"},{"lineNumber":160,"author":{"gitId":"wendelinwemhoener"},"content":"need to be implemented by its subclasses:","lastModifiedDate":"2023-11-14"},{"lineNumber":161,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":162,"author":{"gitId":"wendelinwemhoener"},"content":"- `executeBeginnerMode`: Implementing this abstract method allows implementing ","lastModifiedDate":"2023-11-14"},{"lineNumber":163,"author":{"gitId":"wendelinwemhoener"},"content":"  the beginner mode (with interactive input) that allows for easier, but ","lastModifiedDate":"2023-11-14"},{"lineNumber":164,"author":{"gitId":"wendelinwemhoener"},"content":"  more time-consuming usage.","lastModifiedDate":"2023-11-14"},{"lineNumber":165,"author":{"gitId":"wendelinwemhoener"},"content":"- `executeExpertMode`: Implementing this abstract method allows implementing","lastModifiedDate":"2023-11-14"},{"lineNumber":166,"author":{"gitId":"wendelinwemhoener"},"content":"  the expert mode (with one-line input) that allows for less time-consuming, ","lastModifiedDate":"2023-11-14"},{"lineNumber":167,"author":{"gitId":"wendelinwemhoener"},"content":"  but more complicated usage.","lastModifiedDate":"2023-11-14"},{"lineNumber":168,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":169,"author":{"gitId":"wendelinwemhoener"},"content":"This class diagram depicts the internal structure of the `flashcard.command` ","lastModifiedDate":"2023-11-14"},{"lineNumber":170,"author":{"gitId":"wendelinwemhoener"},"content":"package and especially highlights how `CreateFlashcardCommand`, ","lastModifiedDate":"2023-11-14"},{"lineNumber":171,"author":{"gitId":"wendelinwemhoener"},"content":"`DeleteAllFlashcardsCommand` and `ListFlashcardsCommand` directly inherit ","lastModifiedDate":"2023-11-14"},{"lineNumber":172,"author":{"gitId":"wendelinwemhoener"},"content":"from `FlashcardCommand`; whereas `DeleteFlashcardCommand` and ","lastModifiedDate":"2023-11-14"},{"lineNumber":173,"author":{"gitId":"wendelinwemhoener"},"content":"`StartReviewCommand` inherit from `DualFlashcardCommand` which in itself ","lastModifiedDate":"2023-11-14"},{"lineNumber":174,"author":{"gitId":"wendelinwemhoener"},"content":"inherits from `FlashcardCommand`:","lastModifiedDate":"2023-11-14"},{"lineNumber":175,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"wendelinwemhoener"},"content":"![class diagram of flashcard.command package](Diagrams/flashcard-diagrams/command_package_classes.svg)","lastModifiedDate":"2023-11-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":178,"author":{"gitId":"wendelinwemhoener"},"content":"#### **`flashcard.exceptions` package**","lastModifiedDate":"2023-11-14"},{"lineNumber":179,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":180,"author":{"gitId":"wendelinwemhoener"},"content":"This package contains the `FlashcardException` base class from which all","lastModifiedDate":"2023-11-14"},{"lineNumber":181,"author":{"gitId":"wendelinwemhoener"},"content":"flashcard-specific exceptions are derived.","lastModifiedDate":"2023-11-14"},{"lineNumber":182,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":183,"author":{"gitId":"wendelinwemhoener"},"content":"Individual, flashcard-specific exceptions are implemented as subclasses of","lastModifiedDate":"2023-11-14"},{"lineNumber":184,"author":{"gitId":"wendelinwemhoener"},"content":"the `FlashcardException` class. For further details, you can see the Javadoc","lastModifiedDate":"2023-11-14"},{"lineNumber":185,"author":{"gitId":"wendelinwemhoener"},"content":"comments in their source code.","lastModifiedDate":"2023-11-14"},{"lineNumber":186,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":187,"author":{"gitId":"wendelinwemhoener"},"content":"Currently, the flashcard-specific exceptions are:","lastModifiedDate":"2023-11-14"},{"lineNumber":188,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":189,"author":{"gitId":"wendelinwemhoener"},"content":"- [`InvalidFlashcardIdException`](https://github.com/AY2324S1-CS2113-F11-3/tp/blob/master/src/main/java/seedu/duke/flashcard/exceptions/InvalidFlashcardIdException.java):","lastModifiedDate":"2023-11-14"},{"lineNumber":190,"author":{"gitId":"wendelinwemhoener"},"content":"  Signifies that a given flashcardId is not valid, i.e. that no flashcard with","lastModifiedDate":"2023-11-14"},{"lineNumber":191,"author":{"gitId":"wendelinwemhoener"},"content":"  that id appears in the list of flashcards which are currently being worked on.","lastModifiedDate":"2023-11-14"},{"lineNumber":192,"author":{"gitId":"wendelinwemhoener"},"content":"- [`InvalidReviewModeException`](https://github.com/AY2324S1-CS2113-F11-3/tp/blob/master/src/main/java/seedu/duke/flashcard/exceptions/InvalidReviewModeException.java):","lastModifiedDate":"2023-11-14"},{"lineNumber":193,"author":{"gitId":"wendelinwemhoener"},"content":"  Signifies that an invalid, i.e. non-existent review mode has been chosen.","lastModifiedDate":"2023-11-14"},{"lineNumber":194,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":195,"author":{"gitId":"wendelinwemhoener"},"content":"#### **`flashcard.review` package**","lastModifiedDate":"2023-11-14"},{"lineNumber":196,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":197,"author":{"gitId":"wendelinwemhoener"},"content":"This package contains all classes related to review modes for flashcards.","lastModifiedDate":"2023-11-14"},{"lineNumber":198,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":199,"author":{"gitId":"wendelinwemhoener"},"content":"It contains the `ReviewMode` base class that provides functionalities to ","lastModifiedDate":"2023-11-14"},{"lineNumber":200,"author":{"gitId":"wendelinwemhoener"},"content":"easily review flashcards that can be used by subclasses as building blocks to","lastModifiedDate":"2023-11-14"},{"lineNumber":201,"author":{"gitId":"wendelinwemhoener"},"content":"implement specific kinds of reviews (e.g. random or spaced repetition reviews). ","lastModifiedDate":"2023-11-14"},{"lineNumber":202,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":203,"author":{"gitId":"wendelinwemhoener"},"content":"There are two subclasses which inherit from `ReviewMode`, namely ","lastModifiedDate":"2023-11-14"},{"lineNumber":204,"author":{"gitId":"wendelinwemhoener"},"content":"`RandomReviewMode` and `SpacedRepetitionReviewMode`.","lastModifiedDate":"2023-11-14"},{"lineNumber":205,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":206,"author":{"gitId":"wendelinwemhoener"},"content":"In this regard, because the different review modes all use very","lastModifiedDate":"2023-11-14"},{"lineNumber":207,"author":{"gitId":"wendelinwemhoener"},"content":"different revision strategies (random picking vs difficulty-based picking of ","lastModifiedDate":"2023-11-14"},{"lineNumber":208,"author":{"gitId":"wendelinwemhoener"},"content":"flashcards), the different subclasses of `ReviewMode` can vary quite heavily. ","lastModifiedDate":"2023-11-14"},{"lineNumber":209,"author":{"gitId":"wendelinwemhoener"},"content":"Therefore, in the interest of brevity, the individual subclasses are not","lastModifiedDate":"2023-11-14"},{"lineNumber":210,"author":{"gitId":"wendelinwemhoener"},"content":"explained in further detail and the reader is instead referred to their","lastModifiedDate":"2023-11-14"},{"lineNumber":211,"author":{"gitId":"wendelinwemhoener"},"content":"respective source code in the `src/main/java/seedu.duke/flashcard/review`","lastModifiedDate":"2023-11-14"},{"lineNumber":212,"author":{"gitId":"wendelinwemhoener"},"content":"directory.","lastModifiedDate":"2023-11-14"},{"lineNumber":213,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":214,"author":{"gitId":"wendelinwemhoener"},"content":"### **Storage Components**","lastModifiedDate":"2023-11-14"},{"lineNumber":215,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"junhyeong0411"},"content":"API: `FlashcardStorage.java`","lastModifiedDate":"2023-11-03"},{"lineNumber":217,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"Cheezeblokz"},"content":"![Flashcard Storage Sequence Diagram](photo/FlashcardStorage-0.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":219,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":220,"author":{"gitId":"junhyeong0411"},"content":"The `FlashcardStorage` component,","lastModifiedDate":"2023-11-03"},{"lineNumber":221,"author":{"gitId":"junhyeong0411"},"content":"* can creates data directory and flashcards directory.","lastModifiedDate":"2023-11-13"},{"lineNumber":222,"author":{"gitId":"junhyeong0411"},"content":"* can save flashcards in `flashcard.txt` in specific text format","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"junhyeong0411"},"content":"* saves automatically when changes occur.","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"junhyeong0411"},"content":"* component loads automatically when the program starts.  ","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"junhyeong0411"},"content":"* component can check if the saved txt file has been damaged.","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"junhyeong0411"},"content":"`EventStorage` has similar structure. (It was omitted to avoid redundancy.)","lastModifiedDate":"2023-11-13"},{"lineNumber":228,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":229,"author":{"gitId":"wendelinwemhoener"},"content":"### **Calendar Components**","lastModifiedDate":"2023-11-14"},{"lineNumber":230,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":231,"author":{"gitId":"Cheezeblokz"},"content":"API: `CalendarManager.java`","lastModifiedDate":"2023-11-14"},{"lineNumber":232,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":233,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Command Package**","lastModifiedDate":"2023-11-14"},{"lineNumber":234,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":235,"author":{"gitId":"Cheezeblokz"},"content":"The package has 7 files in it for users to command their calendar. Those files are ","lastModifiedDate":"2023-11-13"},{"lineNumber":236,"author":{"gitId":"Brian030601"},"content":"AddEventCommand, DeleteAllEventsCommand, DeleteEventCommand, EventCommand, FindEventCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"Brian030601"},"content":"ListEventCommand, and UnknownCommand. The other 6 commands extend EventCommand, which is","lastModifiedDate":"2023-11-02"},{"lineNumber":238,"author":{"gitId":"Brian030601"},"content":"an abstract class that forces other 6 commands to have an execute method.","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":241,"author":{"gitId":"Cheezeblokz"},"content":"Each command files execute its own commands. The UnknownCommand file handles the exceptions,","lastModifiedDate":"2023-11-13"},{"lineNumber":242,"author":{"gitId":"Brian030601"},"content":"such as if the user commands something that doesn\u0027t exist","lastModifiedDate":"2023-11-02"},{"lineNumber":243,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":244,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Calendar Package**","lastModifiedDate":"2023-11-14"},{"lineNumber":245,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":246,"author":{"gitId":"Cheezeblokz"},"content":"The calendar package excluding the command package has 8 classes.","lastModifiedDate":"2023-11-13"},{"lineNumber":247,"author":{"gitId":"Cheezeblokz"},"content":"The Calendar class integrates flashcards and calendar events, allowing for interactions between the 2 packages.","lastModifiedDate":"2023-11-13"},{"lineNumber":248,"author":{"gitId":"Brian030601"},"content":"The CalendarManager, EventStorage, \u0026 CalendarCommandParser manages user input, saves, and loads them.","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"Brian030601"},"content":"The classes are associated with one another through instant accesses and other means. The ","lastModifiedDate":"2023-11-02"},{"lineNumber":250,"author":{"gitId":"Brian030601"},"content":"CalendarManager directs the events and event list, which then are run on Duke.","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":252,"author":{"gitId":"Cheezeblokz"},"content":"Calendar package Class Diagram:","lastModifiedDate":"2023-11-13"},{"lineNumber":253,"author":{"gitId":"Brian030601"},"content":"![Calendar package Class Diagram](photo/CalendarManagerClassDiagram.drawio.png)","lastModifiedDate":"2023-11-14"},{"lineNumber":254,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":255,"author":{"gitId":"Cheezeblokz"},"content":"CalendarManager Sequence Diagram:","lastModifiedDate":"2023-11-14"},{"lineNumber":256,"author":{"gitId":"Brian030601"},"content":"![CalendarManager Sequence Diagram](photo/CalendarManagerSequenceDiagram.drawio.png)","lastModifiedDate":"2023-11-14"},{"lineNumber":257,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":258,"author":{"gitId":"wendelinwemhoener"},"content":"## **Product scope**","lastModifiedDate":"2023-11-14"},{"lineNumber":259,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":260,"author":{"gitId":"wendelinwemhoener"},"content":"### **Target user profile**","lastModifiedDate":"2023-11-14"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":262,"author":{"gitId":"wendelinwemhoener"},"content":"TaskLinker is tailored towards university students who use flashcards to ","lastModifiedDate":"2023-10-26"},{"lineNumber":263,"author":{"gitId":"wendelinwemhoener"},"content":"study for their courses and need an easy way to schedule and plan the ","lastModifiedDate":"2023-10-26"},{"lineNumber":264,"author":{"gitId":"wendelinwemhoener"},"content":"studying of their flashcards as well as track some other tasks in their ","lastModifiedDate":"2023-11-14"},{"lineNumber":265,"author":{"gitId":"wendelinwemhoener"},"content":"calendar.","lastModifiedDate":"2023-11-14"},{"lineNumber":266,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":267,"author":{"gitId":"wendelinwemhoener"},"content":"TaskLinker is a CLI tool and as such, it is tailored towards students who ","lastModifiedDate":"2023-10-26"},{"lineNumber":268,"author":{"gitId":"Brian030601"},"content":"type fast and prefer a functional, but bare-bones app that runs in the ","lastModifiedDate":"2023-10-27"},{"lineNumber":269,"author":{"gitId":"wendelinwemhoener"},"content":"terminal over a GUI that looks more impressive but is slower to use. ","lastModifiedDate":"2023-10-26"},{"lineNumber":270,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":271,"author":{"gitId":"wendelinwemhoener"},"content":"As such, computer science students represent good target users of TaskLinker.","lastModifiedDate":"2023-10-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":273,"author":{"gitId":"wendelinwemhoener"},"content":"### **Value proposition**","lastModifiedDate":"2023-11-14"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":275,"author":{"gitId":"wendelinwemhoener"},"content":"TaskLinker is a CLI-tool for helping university students memorize flashcards","lastModifiedDate":"2023-10-26"},{"lineNumber":276,"author":{"gitId":"wendelinwemhoener"},"content":"and track their flashcard progress as well as general academic progress in","lastModifiedDate":"2023-11-13"},{"lineNumber":277,"author":{"gitId":"wendelinwemhoener"},"content":"the courses they are taking.","lastModifiedDate":"2023-11-13"},{"lineNumber":278,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":279,"author":{"gitId":"wendelinwemhoener"},"content":"## **User Stories**","lastModifiedDate":"2023-11-14"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":281,"author":{"gitId":"-"},"content":"| Version | As a ...                  | I want to ...                                                  | So that I can ...                                                                             |","lastModifiedDate":"2020-05-24"},{"lineNumber":282,"author":{"gitId":"Brian030601"},"content":"|---------|---------------------------|----------------------------------------------------------------|-----------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-27"},{"lineNumber":283,"author":{"gitId":"Brian030601"},"content":"| v1.0    | user                      | Delete event from my Calendar                                  | remove unnecessary events from the Calendar                                                   |","lastModifiedDate":"2023-10-27"},{"lineNumber":284,"author":{"gitId":"Brian030601"},"content":"| v1.0    | user                      | Add event to my Calendar                                       | create new necessary events on my Calendar                                                    |","lastModifiedDate":"2023-10-27"},{"lineNumber":285,"author":{"gitId":"Brian030601"},"content":"| v1.0    | user                      | List all events in my Calendar                                 | keep track of all my events and deadlines                                                     |","lastModifiedDate":"2023-10-27"},{"lineNumber":286,"author":{"gitId":"wendelinwemhoener"},"content":"| v1.0    | user                      | list all my flashcards                                         | get a quick overview of my flashcard collection                                               |","lastModifiedDate":"2023-10-26"},{"lineNumber":287,"author":{"gitId":"Brian030601"},"content":"| v1.0    | user                      | create new flashcards                                          | add new knowledge I want to study                                                             |","lastModifiedDate":"2023-10-27"},{"lineNumber":288,"author":{"gitId":"wendelinwemhoener"},"content":"| v1.0    | user                      | review my flashcards                                           | so that I can memorize their contents                                                         |","lastModifiedDate":"2023-10-26"},{"lineNumber":289,"author":{"gitId":"wendelinwemhoener"},"content":"| v2.0    | new user                  | be able to invoke a help command                               | get advice/tips for how to use TaskLinker if I don\u0027 know how                                  |","lastModifiedDate":"2023-10-26"},{"lineNumber":290,"author":{"gitId":"Brian030601"},"content":"| v2.0    | user reviewing flashcards | rate how hard it was to remember their content                 | see harder flashcards more often and easy flashcards less frequently during reviews           |","lastModifiedDate":"2023-10-27"},{"lineNumber":291,"author":{"gitId":"Brian030601"},"content":"| v2.0    | experienced user          | use the delete and review feature by typing a one-line command | be faster than having to go through the prompt-answer workflow these features usually require |","lastModifiedDate":"2023-10-27"},{"lineNumber":292,"author":{"gitId":"Brian030601"},"content":"| v2.0    | user                      | find events from my Calendar                                   | find events without listing them all                                                          |","lastModifiedDate":"2023-10-27"},{"lineNumber":293,"author":{"gitId":"Brian030601"},"content":"| v2.0    | user                      | delete all events from my Calendar                             | don\u0027t need to remove events one by one                                                        |","lastModifiedDate":"2023-10-27"},{"lineNumber":294,"author":{"gitId":"Brian030601"},"content":"| v2.0    | user                      | add a goal event to my Calendar                                | remember how many flashcards needs to be reviewed by a certain deadline                       |","lastModifiedDate":"2023-11-13"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":296,"author":{"gitId":"wendelinwemhoener"},"content":"## **Non-Functional Requirements**","lastModifiedDate":"2023-11-14"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":298,"author":{"gitId":"Brian030601"},"content":"+ Software Requirements:","lastModifiedDate":"2023-11-13"},{"lineNumber":299,"author":{"gitId":"Brian030601"},"content":"  1. The TaskLinker should be able to run on one of Windows, macOS, or Linux operating systems.","lastModifiedDate":"2023-11-13"},{"lineNumber":300,"author":{"gitId":"Brian030601"},"content":"  2. The TaskLinker must be able to run on Java 11 or above Java versions.","lastModifiedDate":"2023-11-13"},{"lineNumber":301,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":302,"author":{"gitId":"Brian030601"},"content":"+ Technical Requirements:","lastModifiedDate":"2023-11-13"},{"lineNumber":303,"author":{"gitId":"Brian030601"},"content":"  1. Users should not manually interact with storage files.","lastModifiedDate":"2023-11-13"},{"lineNumber":304,"author":{"gitId":"Brian030601"},"content":"  2. If the input is not in acceptable format, the program shouldn\u0027t execute anything","lastModifiedDate":"2023-11-13"},{"lineNumber":305,"author":{"gitId":"Brian030601"},"content":"  3. If the correct command is not given, the program should not execute any command.","lastModifiedDate":"2023-11-13"},{"lineNumber":306,"author":{"gitId":"Brian030601"},"content":"  4. The application should only work with English language.","lastModifiedDate":"2023-11-13"},{"lineNumber":307,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":308,"author":{"gitId":"Brian030601"},"content":"+ General Requirements:","lastModifiedDate":"2023-11-13"},{"lineNumber":309,"author":{"gitId":"Brian030601"},"content":"  1. The application should not crash on any given exceptions due to exceptions handling.","lastModifiedDate":"2023-11-13"},{"lineNumber":310,"author":{"gitId":"Brian030601"},"content":"  2. The dates/time should always be in yyyy-MM-ddTHH:mm:ss format.","lastModifiedDate":"2023-11-13"},{"lineNumber":311,"author":{"gitId":"Brian030601"},"content":"  3. The application must be able to support as many events as needed.","lastModifiedDate":"2023-11-13"},{"lineNumber":312,"author":{"gitId":"Brian030601"},"content":"  4. The application must be able to support as many flashcards as needed.","lastModifiedDate":"2023-11-13"},{"lineNumber":313,"author":{"gitId":"Brian030601"},"content":"  5. The application can be used by anyone who can read and type.","lastModifiedDate":"2023-11-13"},{"lineNumber":314,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":316,"author":{"gitId":"wendelinwemhoener"},"content":"## **Glossary**","lastModifiedDate":"2023-11-14"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":318,"author":{"gitId":"Brian030601"},"content":"* *TaskLinker* - CLI-tool for helping university students memorize flashcards","lastModifiedDate":"2023-11-13"},{"lineNumber":319,"author":{"gitId":"Brian030601"},"content":"  and track their flashcard and general academic progress in the courses they are","lastModifiedDate":"2023-11-13"},{"lineNumber":320,"author":{"gitId":"Brian030601"},"content":"  taking.","lastModifiedDate":"2023-11-13"},{"lineNumber":321,"author":{"gitId":"Brian030601"},"content":"* *Calendar* - A place where all the events are listed with start and end time.","lastModifiedDate":"2023-11-13"},{"lineNumber":322,"author":{"gitId":"Brian030601"},"content":"* *Event* - A task to be done from a given time to end time.","lastModifiedDate":"2023-11-13"},{"lineNumber":323,"author":{"gitId":"Brian030601"},"content":"* *Flashcard* - A study tool to memorize a given word.","lastModifiedDate":"2023-11-13"},{"lineNumber":324,"author":{"gitId":"Brian030601"},"content":"* *Storage* - A file where the calendar and flashcards are stored.","lastModifiedDate":"2023-11-13"},{"lineNumber":325,"author":{"gitId":"Brian030601"},"content":"* *Goal* - A goal to be accomplished by a given date/time on the calendar.","lastModifiedDate":"2023-11-13"},{"lineNumber":326,"author":{"gitId":"Brian030601"},"content":"* *Review* - Study flashcards","lastModifiedDate":"2023-11-13"},{"lineNumber":327,"author":{"gitId":"Brian030601"},"content":"* *Exception* - Something abnormal that should not happen.","lastModifiedDate":"2023-11-13"},{"lineNumber":328,"author":{"gitId":"Brian030601"},"content":"* *UML Diagram* - A diagram where the design of the application is explained.","lastModifiedDate":"2023-11-13"},{"lineNumber":329,"author":{"gitId":"Brian030601"},"content":"* *DeveloperGuide* - A guide for other developers to read to understand the application.","lastModifiedDate":"2023-11-13"},{"lineNumber":330,"author":{"gitId":"Brian030601"},"content":"* *UserGuide* - A guide for the users  to read to understand the application.","lastModifiedDate":"2023-11-13"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":332,"author":{"gitId":"wendelinwemhoener"},"content":"## **Instructions for manual testing**","lastModifiedDate":"2023-11-14"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":334,"author":{"gitId":"Brian030601"},"content":"*Given below are the instructions for manual testing the TaskLinker.*","lastModifiedDate":"2023-11-13"},{"lineNumber":335,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":336,"author":{"gitId":"wendelinwemhoener"},"content":"### **Testing launching and exiting the application**","lastModifiedDate":"2023-11-14"},{"lineNumber":337,"author":{"gitId":"Brian030601"},"content":"Launching the application","lastModifiedDate":"2023-11-13"},{"lineNumber":338,"author":{"gitId":"Brian030601"},"content":"  1. download the jar file from the release page.","lastModifiedDate":"2023-11-13"},{"lineNumber":339,"author":{"gitId":"Brian030601"},"content":"  2. open a terminal and navigate to the directory where the jar file is located.","lastModifiedDate":"2023-11-13"},{"lineNumber":340,"author":{"gitId":"Brian030601"},"content":"  3. run the command `java -jar TaskLinker.jar`","lastModifiedDate":"2023-11-13"},{"lineNumber":341,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":342,"author":{"gitId":"Brian030601"},"content":"Exiting the application","lastModifiedDate":"2023-11-13"},{"lineNumber":343,"author":{"gitId":"Brian030601"},"content":"  1. type `exit` in the command box and press enter.","lastModifiedDate":"2023-11-13"},{"lineNumber":344,"author":{"gitId":"Brian030601"},"content":"  2. the application will exit.","lastModifiedDate":"2023-11-13"},{"lineNumber":345,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":346,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Testing adding an event to the calendar**","lastModifiedDate":"2023-11-14"},{"lineNumber":347,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":348,"author":{"gitId":"Brian030601"},"content":"Test Case #1 (Everything Works):","lastModifiedDate":"2023-11-13"},{"lineNumber":349,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":350,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":351,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003eadd event\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":352,"author":{"gitId":"Brian030601"},"content":"What\u0027s the event?: \u003cb\u003eDo HW\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":353,"author":{"gitId":"Brian030601"},"content":"When does it start?: \u003cb\u003e2023-12-20T12:30:30\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":354,"author":{"gitId":"Brian030601"},"content":"When does it end?: \u003cb\u003e2023-12-20T13:40:30\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":355,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":356,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":357,"author":{"gitId":"Brian030601"},"content":"Test Case #2 (Start Time, End Time Error):","lastModifiedDate":"2023-11-13"},{"lineNumber":358,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":359,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":360,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003eadd event\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":361,"author":{"gitId":"Brian030601"},"content":"What\u0027s the event?: \u003cb\u003eDo HW\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":362,"author":{"gitId":"Brian030601"},"content":"When does it start?: \u003cb\u003e2023-12-20T12:30:30\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":363,"author":{"gitId":"Brian030601"},"content":"When does it end?: \u003cb\u003e2023-12-20T11:40:30\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":364,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":365,"author":{"gitId":"Brian030601"},"content":"  End time is before or equal to the start time. Please enter the correct end time.","lastModifiedDate":"2023-11-13"},{"lineNumber":366,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":367,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":368,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Testing adding a goal event to the calendar**","lastModifiedDate":"2023-11-14"},{"lineNumber":369,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":370,"author":{"gitId":"Brian030601"},"content":"Test Case #1 (Everything Works):","lastModifiedDate":"2023-11-13"},{"lineNumber":371,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":372,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":373,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003eadd goal event\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":374,"author":{"gitId":"Brian030601"},"content":"What\u0027s the event?: \u003cb\u003eDo Flashcards\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":375,"author":{"gitId":"Brian030601"},"content":"When does it end?: \u003cb\u003e2023-12-20T12:30:30\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":376,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":377,"author":{"gitId":"Brian030601"},"content":"Goal \u0027Do Flashcards\u0027 review 20 flashcards by: 2023-12-20T12:30:30 (Reviewed: 0) ","lastModifiedDate":"2023-11-13"},{"lineNumber":378,"author":{"gitId":"Brian030601"},"content":"has been added to your Calendar","lastModifiedDate":"2023-11-13"},{"lineNumber":379,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":380,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":381,"author":{"gitId":"Brian030601"},"content":"Test Case #2 (Not an integer for # of flashcards):","lastModifiedDate":"2023-11-13"},{"lineNumber":382,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":383,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":384,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003eadd goal event\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":385,"author":{"gitId":"Brian030601"},"content":"What\u0027s the event?: \u003cb\u003eDo Flashcards\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":386,"author":{"gitId":"Brian030601"},"content":"When does it end?: \u003cb\u003e2023-12-20T12:30:30\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":387,"author":{"gitId":"Brian030601"},"content":"How many flashcard to review by then?: \u003cb\u003er\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":388,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":389,"author":{"gitId":"Brian030601"},"content":"    Invalid integer input. Please try again.","lastModifiedDate":"2023-11-13"},{"lineNumber":390,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":391,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":392,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Testing deleting an event from the calendar**","lastModifiedDate":"2023-11-14"},{"lineNumber":393,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":394,"author":{"gitId":"Brian030601"},"content":"Test Case #1 (Everything Works):","lastModifiedDate":"2023-11-13"},{"lineNumber":395,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":396,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":397,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003edelete event\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":398,"author":{"gitId":"Brian030601"},"content":"What\u0027s the event?: \u003cb\u003ehello\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":399,"author":{"gitId":"Brian030601"},"content":"    hello has been deleted from your Calendar!","lastModifiedDate":"2023-11-13"},{"lineNumber":400,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":401,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":402,"author":{"gitId":"Brian030601"},"content":"Test Case #2 (Incomplete command):","lastModifiedDate":"2023-11-13"},{"lineNumber":403,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":404,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":405,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003edelete\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":406,"author":{"gitId":"Brian030601"},"content":"☹ OOPS!!! The description of a delete cannot be empty.","lastModifiedDate":"2023-11-13"},{"lineNumber":407,"author":{"gitId":"Brian030601"},"content":"    Invalid integer input. Please try again.","lastModifiedDate":"2023-11-13"},{"lineNumber":408,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":409,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":410,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Testing finding an event from the Calendar**","lastModifiedDate":"2023-11-14"},{"lineNumber":411,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":412,"author":{"gitId":"Brian030601"},"content":"Test Case #1 (Everything Works):","lastModifiedDate":"2023-11-13"},{"lineNumber":413,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":414,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":415,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003efind event\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":416,"author":{"gitId":"Brian030601"},"content":"What\u0027s the event?: \u003cb\u003eDo HW\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":417,"author":{"gitId":"Brian030601"},"content":"1. Event \u0027Do HW\u0027 From: 2023-12-20T12:30:30, To: 2023-12-20T13:30:30","lastModifiedDate":"2023-11-13"},{"lineNumber":418,"author":{"gitId":"Brian030601"},"content":"    These events have been found","lastModifiedDate":"2023-11-13"},{"lineNumber":419,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":420,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":421,"author":{"gitId":"Brian030601"},"content":"Test Case #2 (Incomplete Command):","lastModifiedDate":"2023-11-13"},{"lineNumber":422,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":423,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":424,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003efind\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":425,"author":{"gitId":"Brian030601"},"content":"☹ OOPS!!! The description of a find cannot be empty.","lastModifiedDate":"2023-11-13"},{"lineNumber":426,"author":{"gitId":"Brian030601"},"content":"    Invalid integer input. Please try again.","lastModifiedDate":"2023-11-13"},{"lineNumber":427,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":428,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":429,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Testing listing all events from the Calendar**","lastModifiedDate":"2023-11-14"},{"lineNumber":430,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":431,"author":{"gitId":"Brian030601"},"content":"Test Case #1 (Everything Works):","lastModifiedDate":"2023-11-13"},{"lineNumber":432,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":433,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":434,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003elist events\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":435,"author":{"gitId":"Brian030601"},"content":"    Here is a list of all your events: ","lastModifiedDate":"2023-11-13"},{"lineNumber":436,"author":{"gitId":"Brian030601"},"content":"--------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":437,"author":{"gitId":"Brian030601"},"content":"1. Event \u0027Do User\u0027 From: 2023-12-20T12:30:30, To: 2023-12-20T13:30:30","lastModifiedDate":"2023-11-13"},{"lineNumber":438,"author":{"gitId":"Brian030601"},"content":"--------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":439,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":440,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":441,"author":{"gitId":"Brian030601"},"content":"Test Case #2 (Incomplete command):","lastModifiedDate":"2023-11-13"},{"lineNumber":442,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":443,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":444,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003elist\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":445,"author":{"gitId":"Brian030601"},"content":"☹ OOPS!!! The description of a list cannot be empty.","lastModifiedDate":"2023-11-13"},{"lineNumber":446,"author":{"gitId":"Brian030601"},"content":"    Invalid integer input. Please try again.","lastModifiedDate":"2023-11-13"},{"lineNumber":447,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"wendelinwemhoener":212,"Cheezeblokz":11,"-":30,"junhyeong0411":14,"Brian030601":180}},{"path":"docs/Diagrams/FlashcardStorage.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"@startuml","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"participant \":FlashcardComponent\" as fc","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"participant \":FlashcardDirectory\" as fd","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"participant \":FlashcardStorage\" as fs","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"participant \":FlashcardList\" as fl2","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"participant \":FlashcardList\" as fl","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"participant \":FlashcardStorageParser\" as fp","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":"activate fc","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"create fd","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"fc-\u003efd ++: new","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"return directory:FlashcardDirectory()","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"destroy fd","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"create fs","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"fc-\u003efs ++: FlashcardStorage(directory)","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"return : FlashcardStorage","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"fc-\u003efs++ : loadFlashcards()","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"alt default","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"create fl","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"fs-\u003efl ++: FlashcardList()","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"return :FlashcardList","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"    loop for all lines in file","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"        fs-\u003efp++ : loadFlashcard()","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"        return flashcard:Flashcard","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"        fs-\u003efl ++: add(flashcard)","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"        return","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"    end","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"    return :FlashcardList","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"else FileNotFoundException","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"junhyeong0411"},"content":"    fs--\u003efc","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"junhyeong0411"},"content":"    create fl2","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"junhyeong0411"},"content":"    fc-\u003efl2 ++: FlashcardList(emptyArray)","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"junhyeong0411"},"content":"    return :FlashcardList","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"junhyeong0411"},"content":"end","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"junhyeong0411"},"content":"@enduml","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"junhyeong0411":61}},{"path":"docs/Diagrams/flashcard-diagrams/command_package_classes.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"hide circle","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"class CreateFlashcardCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"class DeleteAllFlashcardsCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"class DeleteFlashcardCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"abstract class DualFlashcardCommand {","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"  + execute(scanner: Scanner, flashcardList: FlashcardList): void","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"  # {abstract} executeBeginnerMode(scanner: Scanner, flashcardList: FlashcardList): void","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"  # {abstract} executeBeginnerMode(scanner: Scanner, flashcardList: FlashcardList): void","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"abstract class FlashcardCommand {","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"  + {abstract} execute(scanner: Scanner, flashcardList: FlashcardList): void","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"class ListFlashcardsCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"class StartReviewCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"class UnknownCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"CreateFlashcardCommand      -[#000082,plain]-^  FlashcardCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"DeleteAllFlashcardsCommand  -[#000082,plain]-^  FlashcardCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"DeleteFlashcardCommand      -[#000082,plain]-^  DualFlashcardCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"DualFlashcardCommand        -[#000082,plain]-^  FlashcardCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"ListFlashcardsCommand       -[#000082,plain]-^  FlashcardCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"StartReviewCommand          -[#000082,plain]-^  DualFlashcardCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"UnknownCommand              -[#000082,plain]-^  FlashcardCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"wendelinwemhoener":29}},{"path":"docs/Diagrams/flashcard-diagrams/overview_classes.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"hide circle","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"class Flashcard {","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"  - backText: String","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"  - difficulty: int","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"  - frontText: String","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"  - {static} globalMaxId: int","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"  - id: int","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"  + applyDifficultyChange(difficultyChange: int): void","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"  + calculateAndUpdateGlobalMaxId(flashcardList: FlashcardList): void","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"  + getBackText(): String","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"  + getDifficulty(): int","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"  + getFrontText(): String","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"  + getId(): int","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"  + setDifficulty(difficulty: int): void","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"  + setId(id: int): void","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"  + toString(): String","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"class FlashcardCommandParser {","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"  + parseInput(input: String, calendar: Calendar): FlashcardCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"class FlashcardComponent {","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"  - calendar: Calendar","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"  - storage: FlashcardStorage","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"  + getFlashcardList(): FlashcardList","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"  + getStorage(): FlashcardStorage","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"  + getUi(): FlashcardUi","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"  + isResponsible(input: String): boolean","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"  + processInput(input: String): void","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"class FlashcardList {","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"  + add(flashcard: Flashcard): void","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"  + deleteAllFlashcards(): void","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"  + deleteFlashcardById(flashcardId: int): boolean","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"  + getFlashcards(): ArrayList\u003cFlashcard\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"  + getSize(): int","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"  + isEmpty(): boolean","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"class FlashcardUi {","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"  - scanner: Scanner","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"  + executeCommand(command: FlashcardCommand): void","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"  + setScanner(scanner: Scanner): void","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"FlashcardComponent o--\u003e \"1\" FlashcardList : flashcardList","lastModifiedDate":"2023-11-14"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"FlashcardComponent o--\u003e \"1\" FlashcardCommandParser : parser","lastModifiedDate":"2023-11-14"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"FlashcardComponent o--\u003e \"1\" FlashcardUi : ui","lastModifiedDate":"2023-11-14"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"FlashcardUi o--\u003e \"1\" FlashcardList : flashcardList","lastModifiedDate":"2023-11-14"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"FlashcardList o--\u003e \"*\" Flashcard : flashcards","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"wendelinwemhoener":62}},{"path":"docs/Diagrams/flashcard-diagrams/overview_sequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"hide footbox","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"actor Actor as user","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"participant \":Duke\" as duke","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"participant \":FlashcardComponent\" as component","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"participant \":FlashcardCommandParser\" as parser","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"participant \":FlashcardUi\" as ui","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"user -\u003e duke : list flashcards","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"activate duke","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"duke -\u003e component : isResponsible(\"list flashcards\")","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"activate component","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"component -\u003e parser : parseInput(\"list flashcards\", calendar)","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"activate parser","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"participant \"lfc1:ListFlashcardsCommand\" as lfc1","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"create lfc1","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"parser -\u003e lfc1","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"activate lfc1","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"lfc1 --\u003e parser : lfc1","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"deactivate lfc1","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"parser --\u003e component : lfc1","lastModifiedDate":"2023-11-14"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"deactivate parser","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"component --\u003e duke : true","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"deactivate component","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"duke -\u003e component : processInput(\"list flashcards\")","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"activate component","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"component -\u003e parser : parseInput(\"list flashcards\", calendar)","lastModifiedDate":"2023-11-14"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"activate parser","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"participant \"lfc2:ListFlashcardsCommand\" as lfc2","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"create lfc2","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"parser -\u003e lfc2","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"activate lfc2","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"lfc2 --\u003e parser : lfc2","lastModifiedDate":"2023-11-14"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"deactivate lfc2","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"parser --\u003e component : lfc2","lastModifiedDate":"2023-11-14"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"deactivate parser","lastModifiedDate":"2023-11-14"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"component -\u003e ui : executeCommand(lfc2)","lastModifiedDate":"2023-11-14"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"activate ui","lastModifiedDate":"2023-11-14"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"ui -\u003e lfc2 : execute(scanner, flashcardList)","lastModifiedDate":"2023-11-14"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"activate lfc2","lastModifiedDate":"2023-11-14"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"lfc2 --\u003e ui","lastModifiedDate":"2023-11-14"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"deactivate lfc2","lastModifiedDate":"2023-11-14"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"ui --\u003e component","lastModifiedDate":"2023-11-14"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"deactivate ui","lastModifiedDate":"2023-11-14"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"component --\u003e duke","lastModifiedDate":"2023-11-14"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"deactivate component","lastModifiedDate":"2023-11-14"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"duke --\u003e user","lastModifiedDate":"2023-11-14"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"deactivate duke","lastModifiedDate":"2023-11-14"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"wendelinwemhoener":73}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"# TaskLinker","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"TaskLinker is a CLI-tool for helping university students memorize flashcards","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"and track their flashcard and general academic progress in the courses they are","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"taking.","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"Get started by reading the following guidelines:","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"* Read the [User Guide](UserGuide.md) if you are a user.","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"* Read the [Developer Guide](DeveloperGuide.md) if you are a developer.","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"* Read the [About Us](AboutUs.md) section to learn about the developer team.","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"wendelinwemhoener":3,"-":2,"Brian030601":5}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"# **User Guide**","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"## **Introduction**","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"TaskLinker is a CLI-tool for helping university students memorize flashcards ","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"and track their flashcard progress as well as general academic progress in ","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"the courses they are taking.","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"## **Quick Start**","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"2. Download the latest jar from [the latest release on GitHub](https://github.com/AY2324S1-CS2113-F11-3/tp/releases).","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"3. Run the jar file via `java -jar duke.jar`","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"## **Features**","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"### **Notes about the command format and sample output format:**","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Command format**","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"In the command format, words in UPPER_CASE are the parameters to be ","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"supplied by the user. e.g. in `delete flashcard FLASHCARD_ID`, FLASHCARD_ID ","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"is a parameter whose value shall be supplied by the user, e.g. as `delete ","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"flashcard 3`.","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Sample output format**","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"When sample output is provided, it is shown as a code block.","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"User input within the example is shown in bold, text printed by the program ","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"is shown in normal thickness.","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"E.g. in the following example, the user inputted the command \"list ","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"flashcards\" and the program printed out a list of the available flashcards.","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"Enter your command: \u003cb\u003elist flashcards\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"    Here is a list of all your flashcards: ","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"--------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"front text: How long is a meter in cm?","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"back text: 100","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"id: 20","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"difficulty: 4","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"--------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"front text: What does UML stand for?","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"back text: Unified Modelling Language","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"id: 21","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"difficulty: 6","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"--------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"    Those were all your flashcards.","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"### **Flashcard-related features**","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"#### **General explanation of flashcards**","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"Flashcards are two-sided cards that have a question on the front and its ","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"answer on the back. They are used for revising information and helping with ","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"memorization. As such, they are often used by students; e.g. medicine students often use ","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"flashcards to memorize the anatomy of the human body.","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"TaskLinker implements virtual flashcards that you can create, review and ","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"delete on the go, without being bound to physical copies.","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"In TaskLinker, every flashcard has a front text (the question) and a back ","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"text (the answer). Also, every flashcard has a difficulty attribute that shows ","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"how hard it is for you to remember this particular flashcard (The higher the","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"difficulty number, the harder). Every flashcard is identified by a unique id ","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"(Flashcard ids don\u0027t necessarily start at zero and are not necessarily","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"consecutive. Don\u0027t worry, this is totally fine and the planned behavior!).","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"#### **\"Dual Commands\": Different input options for beginner vs expert users**","lastModifiedDate":"2023-11-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"We know that not all users want the same. Same want more simplicity, whilst ","lastModifiedDate":"2023-11-14"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"others want more sophisticated tools that speed up their working speed.","lastModifiedDate":"2023-11-14"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"To cater to both groups of users, TaskLinker\u0027s flashcards features offer","lastModifiedDate":"2023-11-14"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"so-called \"dual commands\" that can be invoked in two different ways: an easy,","lastModifiedDate":"2023-11-14"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"but more time-consuming way for beginner users who want as much guidance as","lastModifiedDate":"2023-11-14"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"possible; or a less time-consuming, but more complicated way for expert users","lastModifiedDate":"2023-11-14"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"who don\u0027t need additional guidance.","lastModifiedDate":"2023-11-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"Currently, the following commands are dual commands:","lastModifiedDate":"2023-11-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":85,"author":{"gitId":"wendelinwemhoener"},"content":"- [`review flashcards`](#reviewing-your-flashcards-review-flashcards)","lastModifiedDate":"2023-11-14"},{"lineNumber":86,"author":{"gitId":"wendelinwemhoener"},"content":"- [`delete flashcard`](#deleting-a-flashcard-delete-flashcard)","lastModifiedDate":"2023-11-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":88,"author":{"gitId":"wendelinwemhoener"},"content":"For more information, see the respective sections explaining their usage.","lastModifiedDate":"2023-11-14"},{"lineNumber":89,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":90,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Listing all flashcards: `list flashcards`**","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":92,"author":{"gitId":"wendelinwemhoener"},"content":"Prints out a list of all flashcards that shows each flashcard\u0027s front text ","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"wendelinwemhoener"},"content":"and back text as well as its id and current difficulty level.","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":95,"author":{"gitId":"wendelinwemhoener"},"content":"Command Format: `list flashcards`","lastModifiedDate":"2023-11-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"wendelinwemhoener"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"wendelinwemhoener"},"content":"Enter your command: \u003cb\u003elist flashcards\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"wendelinwemhoener"},"content":"    Here is a list of all your flashcards: ","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"wendelinwemhoener"},"content":"--------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"wendelinwemhoener"},"content":"front text: How long is a meter in cm?","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"wendelinwemhoener"},"content":"back text: 100","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"wendelinwemhoener"},"content":"id: 20","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"wendelinwemhoener"},"content":"difficulty: 4","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"wendelinwemhoener"},"content":"--------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"wendelinwemhoener"},"content":"front text: What does UML stand for?","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"wendelinwemhoener"},"content":"back text: Unified Modelling Language","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"wendelinwemhoener"},"content":"id: 21","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"wendelinwemhoener"},"content":"difficulty: 6","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"wendelinwemhoener"},"content":"--------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"wendelinwemhoener"},"content":"    Those were all your flashcards.","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"wendelinwemhoener"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Creating a new flashcard: `create flashcard`**","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"wendelinwemhoener"},"content":"Starts the process of creating a new flashcard.","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"wendelinwemhoener"},"content":"After entering this command, you are prompted to first input the front page","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"wendelinwemhoener"},"content":"text (once you have typed it out, submit it by pressing ENTER) and then the","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"wendelinwemhoener"},"content":"back page text (once you have typed it out, submit it by pressing ENTER) of","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"wendelinwemhoener"},"content":"your new flashcard.","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"wendelinwemhoener"},"content":"After you\u0027ve done this, a success message will be printed out. This","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"wendelinwemhoener"},"content":"indicates that your new flashcard has been successfully created and saved.","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"wendelinwemhoener"},"content":"Command Format: `create flashcard`","lastModifiedDate":"2023-11-13"},{"lineNumber":130,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":131,"author":{"gitId":"wendelinwemhoener"},"content":"Example of usage:","lastModifiedDate":"2023-11-13"},{"lineNumber":132,"author":{"gitId":"wendelinwemhoener"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"wendelinwemhoener"},"content":"Enter your command: \u003cb\u003ecreate flashcard\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":134,"author":{"gitId":"wendelinwemhoener"},"content":"Enter the front page text: \u003cb\u003eWhat is a banana?\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":135,"author":{"gitId":"wendelinwemhoener"},"content":"Enter the back page text: \u003cb\u003eA kind of fruit\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"wendelinwemhoener"},"content":"Success! Flashcard has been added to your collection.","lastModifiedDate":"2023-11-13"},{"lineNumber":138,"author":{"gitId":"wendelinwemhoener"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":139,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":140,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Reviewing your flashcards: `review flashcards`**","lastModifiedDate":"2023-11-13"},{"lineNumber":141,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"wendelinwemhoener"},"content":"Starts the process of reviewing your flashcards.","lastModifiedDate":"2023-11-13"},{"lineNumber":143,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":144,"author":{"gitId":"wendelinwemhoener"},"content":"The `review flashcards` command is a so-called \"Dual Command\" that can be ","lastModifiedDate":"2023-11-13"},{"lineNumber":145,"author":{"gitId":"wendelinwemhoener"},"content":"invoked in two different ways: an easy, but more time-consuming way for ","lastModifiedDate":"2023-11-13"},{"lineNumber":146,"author":{"gitId":"wendelinwemhoener"},"content":"beginner users who want as much guidance as possible; or a less ","lastModifiedDate":"2023-11-13"},{"lineNumber":147,"author":{"gitId":"wendelinwemhoener"},"content":"time-consuming, but more complicated way for expert users who don\u0027t need ","lastModifiedDate":"2023-11-13"},{"lineNumber":148,"author":{"gitId":"wendelinwemhoener"},"content":"additional guidance.","lastModifiedDate":"2023-11-13"},{"lineNumber":149,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":150,"author":{"gitId":"wendelinwemhoener"},"content":"There are two review modes to choose from: ","lastModifiedDate":"2023-11-13"},{"lineNumber":151,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":152,"author":{"gitId":"wendelinwemhoener"},"content":"- **random mode:** The flashcards to be reviewed are randomly chosen.","lastModifiedDate":"2023-11-13"},{"lineNumber":153,"author":{"gitId":"wendelinwemhoener"},"content":"- **spaced repetition mode:** Which flashcards are chosen to be reviewed ","lastModifiedDate":"2023-11-13"},{"lineNumber":154,"author":{"gitId":"wendelinwemhoener"},"content":"  depends on ","lastModifiedDate":"2023-11-13"},{"lineNumber":155,"author":{"gitId":"wendelinwemhoener"},"content":"  how well you previously knew their contents. Flashcards which you couldn\u0027t ","lastModifiedDate":"2023-11-13"},{"lineNumber":156,"author":{"gitId":"wendelinwemhoener"},"content":"  remember well are shown more often, while flashcards which you remembered well","lastModifiedDate":"2023-11-13"},{"lineNumber":157,"author":{"gitId":"wendelinwemhoener"},"content":"  are shown less often.","lastModifiedDate":"2023-11-13"},{"lineNumber":158,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":159,"author":{"gitId":"wendelinwemhoener"},"content":"How you chose your review mode differs between the beginner mode and expert ","lastModifiedDate":"2023-11-13"},{"lineNumber":160,"author":{"gitId":"wendelinwemhoener"},"content":"mode:","lastModifiedDate":"2023-11-13"},{"lineNumber":161,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":162,"author":{"gitId":"wendelinwemhoener"},"content":"- **Choosing review mode in beginner mode:** After you\u0027ve inputted the ","lastModifiedDate":"2023-11-13"},{"lineNumber":163,"author":{"gitId":"wendelinwemhoener"},"content":"  `review flashcards` command, in a separate step, you are prompted to select ","lastModifiedDate":"2023-11-13"},{"lineNumber":164,"author":{"gitId":"wendelinwemhoener"},"content":"  your desired review mode by inputting its respective letter: Input `a` to ","lastModifiedDate":"2023-11-13"},{"lineNumber":165,"author":{"gitId":"wendelinwemhoener"},"content":"  choose random mode, or input `b` to choose spaced repetition mode.","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"wendelinwemhoener"},"content":"- **Choosing review mode in expert mode:** You have to already choose the ","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"wendelinwemhoener"},"content":"  review mode when you input the `review flashcards` command. Thus, you have ","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"wendelinwemhoener"},"content":"  to use the `review flashcards REVIEW_MODE` format, where REVIEW_MODE has ","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"wendelinwemhoener"},"content":"  to be either an `a` (for random mode) or a `b` (for spaced repetition mode)","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"wendelinwemhoener"},"content":"  . Unlike in the beginner mode, there is no separate step for you to ","lastModifiedDate":"2023-11-13"},{"lineNumber":171,"author":{"gitId":"wendelinwemhoener"},"content":"  choose a review mode from a list of available options as you have already ","lastModifiedDate":"2023-11-13"},{"lineNumber":172,"author":{"gitId":"wendelinwemhoener"},"content":"  supplied which review mode you want to use via the REVIEW_MODE parameter ","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"wendelinwemhoener"},"content":"  of the `review flashcards REVIEW_MODE` command format; thus saving you time.","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":175,"author":{"gitId":"wendelinwemhoener"},"content":"Once you\u0027ve selected a review mode, the actual review begins.","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":177,"author":{"gitId":"wendelinwemhoener"},"content":"Firstly, the front page of a flashcard is shown to you. You should now try and","lastModifiedDate":"2023-11-13"},{"lineNumber":178,"author":{"gitId":"wendelinwemhoener"},"content":"think of the answer (the text on the back page of the flashcard); and once ","lastModifiedDate":"2023-11-13"},{"lineNumber":179,"author":{"gitId":"wendelinwemhoener"},"content":"you\u0027re ready, press ENTER to be shown the back page of the flashcard so you can","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"wendelinwemhoener"},"content":"compare what you expected to be the answer to the actual answer.","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":182,"author":{"gitId":"wendelinwemhoener"},"content":"In spaced repetition mode, after you have revealed the back page of a ","lastModifiedDate":"2023-11-03"},{"lineNumber":183,"author":{"gitId":"wendelinwemhoener"},"content":"flashcard, you are prompted to rate how to difficult it was to remember. ","lastModifiedDate":"2023-11-03"},{"lineNumber":184,"author":{"gitId":"wendelinwemhoener"},"content":"Select `E` if it was easy, `M` if it was moderately hard and `H` if it was ","lastModifiedDate":"2023-11-03"},{"lineNumber":185,"author":{"gitId":"wendelinwemhoener"},"content":"quite hard. This information is used to adjust the difficulty of the ","lastModifiedDate":"2023-11-03"},{"lineNumber":186,"author":{"gitId":"wendelinwemhoener"},"content":"flashcard you just reviewed.","lastModifiedDate":"2023-11-03"},{"lineNumber":187,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":188,"author":{"gitId":"wendelinwemhoener"},"content":"(In random mode, no such process of rating the flashcard\u0027s difficulty takes ","lastModifiedDate":"2023-11-13"},{"lineNumber":189,"author":{"gitId":"wendelinwemhoener"},"content":"place.)","lastModifiedDate":"2023-11-13"},{"lineNumber":190,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":191,"author":{"gitId":"wendelinwemhoener"},"content":"Now, the process repeats and the front page of the next flashcard is shown to ","lastModifiedDate":"2023-11-13"},{"lineNumber":192,"author":{"gitId":"wendelinwemhoener"},"content":"you.","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":194,"author":{"gitId":"wendelinwemhoener"},"content":"If you ever want to quit the review process, simply input `q` or `quit` instead","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"wendelinwemhoener"},"content":"of pressing ENTER to reveal the back page.","lastModifiedDate":"2023-11-09"},{"lineNumber":196,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"wendelinwemhoener"},"content":"##### **Command format and example of usage in beginner mode**","lastModifiedDate":"2023-11-13"},{"lineNumber":198,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":199,"author":{"gitId":"wendelinwemhoener"},"content":"Command Format: `review flashcards`","lastModifiedDate":"2023-11-13"},{"lineNumber":200,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":201,"author":{"gitId":"wendelinwemhoener"},"content":"Example of usage:","lastModifiedDate":"2023-11-13"},{"lineNumber":202,"author":{"gitId":"wendelinwemhoener"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":203,"author":{"gitId":"wendelinwemhoener"},"content":"Enter your command: \u003cb\u003ereview flashcards\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":204,"author":{"gitId":"wendelinwemhoener"},"content":"    How do you want to review your flashcards?","lastModifiedDate":"2023-11-13"},{"lineNumber":205,"author":{"gitId":"wendelinwemhoener"},"content":"        a) random mode","lastModifiedDate":"2023-11-13"},{"lineNumber":206,"author":{"gitId":"wendelinwemhoener"},"content":"        b) spaced repetition mode","lastModifiedDate":"2023-11-13"},{"lineNumber":207,"author":{"gitId":"wendelinwemhoener"},"content":"\u003cb\u003ea\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":208,"author":{"gitId":"wendelinwemhoener"},"content":"    You have started a review session in random review mode","lastModifiedDate":"2023-11-13"},{"lineNumber":209,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":210,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":211,"author":{"gitId":"wendelinwemhoener"},"content":"    The front text is: What is the boiling point of water?","lastModifiedDate":"2023-11-13"},{"lineNumber":212,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":213,"author":{"gitId":"wendelinwemhoener"},"content":"    Think of the answer (the back text) in your head.","lastModifiedDate":"2023-11-13"},{"lineNumber":214,"author":{"gitId":"wendelinwemhoener"},"content":"    Press ENTER when you are ready to compare it,","lastModifiedDate":"2023-11-13"},{"lineNumber":215,"author":{"gitId":"wendelinwemhoener"},"content":"    or enter q or quit to end this review session.","lastModifiedDate":"2023-11-13"},{"lineNumber":216,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":217,"author":{"gitId":"wendelinwemhoener"},"content":"    The actual back text is: 100 degrees Celsius","lastModifiedDate":"2023-11-13"},{"lineNumber":218,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":219,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":220,"author":{"gitId":"wendelinwemhoener"},"content":"    The front text is: What is the boiling point of water?","lastModifiedDate":"2023-11-13"},{"lineNumber":221,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":222,"author":{"gitId":"wendelinwemhoener"},"content":"    Think of the answer (the back text) in your head.","lastModifiedDate":"2023-11-13"},{"lineNumber":223,"author":{"gitId":"wendelinwemhoener"},"content":"    Press ENTER when you are ready to compare it,","lastModifiedDate":"2023-11-13"},{"lineNumber":224,"author":{"gitId":"wendelinwemhoener"},"content":"    or enter q or quit to end this review session.","lastModifiedDate":"2023-11-13"},{"lineNumber":225,"author":{"gitId":"wendelinwemhoener"},"content":"\u003cb\u003equit\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":226,"author":{"gitId":"wendelinwemhoener"},"content":"    Success! You have ended this review session.","lastModifiedDate":"2023-11-13"},{"lineNumber":227,"author":{"gitId":"wendelinwemhoener"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":228,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":229,"author":{"gitId":"wendelinwemhoener"},"content":"##### **Command format and example of usage in expert mode**","lastModifiedDate":"2023-11-13"},{"lineNumber":230,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":231,"author":{"gitId":"wendelinwemhoener"},"content":"Command Format: `review flashcards REVIEW_MODE` (where REVIEW_MODE has to be ","lastModifiedDate":"2023-11-13"},{"lineNumber":232,"author":{"gitId":"wendelinwemhoener"},"content":"either an `a` or a `b`)","lastModifiedDate":"2023-11-13"},{"lineNumber":233,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":234,"author":{"gitId":"wendelinwemhoener"},"content":"Example of usage:","lastModifiedDate":"2023-11-13"},{"lineNumber":235,"author":{"gitId":"wendelinwemhoener"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":236,"author":{"gitId":"wendelinwemhoener"},"content":"Enter your command: \u003cb\u003ereview flashcards b\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":237,"author":{"gitId":"wendelinwemhoener"},"content":"    You have started a review session in spaced repetition mode","lastModifiedDate":"2023-11-13"},{"lineNumber":238,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":239,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":240,"author":{"gitId":"wendelinwemhoener"},"content":"    The front text is: What is the boiling point of water?","lastModifiedDate":"2023-11-13"},{"lineNumber":241,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":242,"author":{"gitId":"wendelinwemhoener"},"content":"    Think of the answer (the back text) in your head.","lastModifiedDate":"2023-11-13"},{"lineNumber":243,"author":{"gitId":"wendelinwemhoener"},"content":"    Press ENTER when you are ready to compare it,","lastModifiedDate":"2023-11-13"},{"lineNumber":244,"author":{"gitId":"wendelinwemhoener"},"content":"    or enter q or quit to end this review session.","lastModifiedDate":"2023-11-13"},{"lineNumber":245,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":246,"author":{"gitId":"wendelinwemhoener"},"content":"    The actual back text is: 100 degrees Celsius","lastModifiedDate":"2023-11-13"},{"lineNumber":247,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":248,"author":{"gitId":"wendelinwemhoener"},"content":"    How hard was it to remember the back page of this flashcard?","lastModifiedDate":"2023-11-13"},{"lineNumber":249,"author":{"gitId":"wendelinwemhoener"},"content":"    Input E if it was easy, M if it was moderately challenging ","lastModifiedDate":"2023-11-13"},{"lineNumber":250,"author":{"gitId":"wendelinwemhoener"},"content":"    or H if it was quite hard.","lastModifiedDate":"2023-11-13"},{"lineNumber":251,"author":{"gitId":"wendelinwemhoener"},"content":"\u003cb\u003eH\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":252,"author":{"gitId":"wendelinwemhoener"},"content":"    ----------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":253,"author":{"gitId":"wendelinwemhoener"},"content":"    The front text is: What is the boiling point of water?","lastModifiedDate":"2023-11-13"},{"lineNumber":254,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":255,"author":{"gitId":"wendelinwemhoener"},"content":"    Think of the answer (the back text) in your head.","lastModifiedDate":"2023-11-13"},{"lineNumber":256,"author":{"gitId":"wendelinwemhoener"},"content":"    Press ENTER when you are ready to compare it,","lastModifiedDate":"2023-11-13"},{"lineNumber":257,"author":{"gitId":"wendelinwemhoener"},"content":"    or enter q or quit to end this review session.","lastModifiedDate":"2023-11-13"},{"lineNumber":258,"author":{"gitId":"wendelinwemhoener"},"content":"\u003cb\u003eq\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":259,"author":{"gitId":"wendelinwemhoener"},"content":"    Success! You have ended this review session.","lastModifiedDate":"2023-11-13"},{"lineNumber":260,"author":{"gitId":"wendelinwemhoener"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":261,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":262,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Deleting a flashcard: `delete flashcard`**","lastModifiedDate":"2023-11-13"},{"lineNumber":263,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":264,"author":{"gitId":"wendelinwemhoener"},"content":"Starts the process of deleting a flashcard.","lastModifiedDate":"2023-11-03"},{"lineNumber":265,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":266,"author":{"gitId":"wendelinwemhoener"},"content":"The `delete flashcard` command is a so-called \"Dual Command\" that can be","lastModifiedDate":"2023-11-13"},{"lineNumber":267,"author":{"gitId":"wendelinwemhoener"},"content":"invoked in two different ways: an easy, but more time-consuming way for","lastModifiedDate":"2023-11-13"},{"lineNumber":268,"author":{"gitId":"wendelinwemhoener"},"content":"beginner users who want as much guidance as possible; or a less","lastModifiedDate":"2023-11-13"},{"lineNumber":269,"author":{"gitId":"wendelinwemhoener"},"content":"time-consuming, but more complicated way for expert users who don\u0027t need","lastModifiedDate":"2023-11-13"},{"lineNumber":270,"author":{"gitId":"wendelinwemhoener"},"content":"additional guidance.","lastModifiedDate":"2023-11-13"},{"lineNumber":271,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":272,"author":{"gitId":"wendelinwemhoener"},"content":"How you chose which flashcard to delete differs between the beginner mode and","lastModifiedDate":"2023-11-13"},{"lineNumber":273,"author":{"gitId":"wendelinwemhoener"},"content":"expert mode:","lastModifiedDate":"2023-11-13"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":275,"author":{"gitId":"wendelinwemhoener"},"content":"- **Choosing review mode in beginner mode:** After you\u0027ve inputted the","lastModifiedDate":"2023-11-13"},{"lineNumber":276,"author":{"gitId":"wendelinwemhoener"},"content":"  `delete flashcard` command, in a separate step, you are prompted to select","lastModifiedDate":"2023-11-13"},{"lineNumber":277,"author":{"gitId":"wendelinwemhoener"},"content":"  the flashcard you want to delete by inputting its id.","lastModifiedDate":"2023-11-13"},{"lineNumber":278,"author":{"gitId":"wendelinwemhoener"},"content":"- **Choosing review mode in expert mode:** You have to already choose the","lastModifiedDate":"2023-11-13"},{"lineNumber":279,"author":{"gitId":"wendelinwemhoener"},"content":"  flashcard you want to delete when you input the `delete flashcard` command.","lastModifiedDate":"2023-11-13"},{"lineNumber":280,"author":{"gitId":"wendelinwemhoener"},"content":"  Thus, you have to use the `delete flashcards FLASHCARD_ID` format, where","lastModifiedDate":"2023-11-13"},{"lineNumber":281,"author":{"gitId":"wendelinwemhoener"},"content":"  FLASHCARD_ID is the id of the flashcard you want to delete. Unlike in the","lastModifiedDate":"2023-11-13"},{"lineNumber":282,"author":{"gitId":"wendelinwemhoener"},"content":"  beginner mode, there is no separate step for you to choose which flashcard you","lastModifiedDate":"2023-11-13"},{"lineNumber":283,"author":{"gitId":"wendelinwemhoener"},"content":"  want to delete as you have already informed TaskLinker about which flashcard","lastModifiedDate":"2023-11-13"},{"lineNumber":284,"author":{"gitId":"wendelinwemhoener"},"content":"  you want to delete via the FLASHCARD_ID parameter of the","lastModifiedDate":"2023-11-13"},{"lineNumber":285,"author":{"gitId":"wendelinwemhoener"},"content":"  `delete flashcards FLASHCARD_ID` command format; thus saving you time.","lastModifiedDate":"2023-11-13"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":288,"author":{"gitId":"wendelinwemhoener"},"content":"If the id you provided was a valid id, the flashcard with that id is deleted; ","lastModifiedDate":"2023-11-13"},{"lineNumber":289,"author":{"gitId":"wendelinwemhoener"},"content":"otherwise, an error message is shown, and you are prompted to retry.","lastModifiedDate":"2023-11-13"},{"lineNumber":290,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":291,"author":{"gitId":"wendelinwemhoener"},"content":"##### **Command format and example of usage in beginner mode**","lastModifiedDate":"2023-11-13"},{"lineNumber":292,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":293,"author":{"gitId":"wendelinwemhoener"},"content":"Command format: `delete flashcard` ","lastModifiedDate":"2023-11-13"},{"lineNumber":294,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":295,"author":{"gitId":"wendelinwemhoener"},"content":"Example of usage:","lastModifiedDate":"2023-11-13"},{"lineNumber":296,"author":{"gitId":"wendelinwemhoener"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":297,"author":{"gitId":"wendelinwemhoener"},"content":"Enter your command: \u003cb\u003edelete flashcard\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":298,"author":{"gitId":"wendelinwemhoener"},"content":"    Enter id of the flashcard you want to delete: \u003cb\u003e2\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":299,"author":{"gitId":"wendelinwemhoener"},"content":"    Flashcard with id 2 has been successfully deleted.","lastModifiedDate":"2023-11-13"},{"lineNumber":300,"author":{"gitId":"wendelinwemhoener"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":301,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":302,"author":{"gitId":"wendelinwemhoener"},"content":"##### **Command format and example of usage in expert mode**","lastModifiedDate":"2023-11-13"},{"lineNumber":303,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":304,"author":{"gitId":"wendelinwemhoener"},"content":"Command format: `delete flashcard FLASHCARD_ID` (where FLASHCARD_ID is the ","lastModifiedDate":"2023-11-13"},{"lineNumber":305,"author":{"gitId":"wendelinwemhoener"},"content":"id of the flashcard you want to delete)","lastModifiedDate":"2023-11-13"},{"lineNumber":306,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":307,"author":{"gitId":"wendelinwemhoener"},"content":"Example of usage:","lastModifiedDate":"2023-11-13"},{"lineNumber":308,"author":{"gitId":"wendelinwemhoener"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":309,"author":{"gitId":"wendelinwemhoener"},"content":"Enter your command: \u003cb\u003edelete flashcard 34\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":310,"author":{"gitId":"wendelinwemhoener"},"content":"    Couldn\u0027t find a flashcard with id 34","lastModifiedDate":"2023-11-13"},{"lineNumber":311,"author":{"gitId":"wendelinwemhoener"},"content":"    No deletion has been performed. Please try again with a valid id.","lastModifiedDate":"2023-11-13"},{"lineNumber":312,"author":{"gitId":"wendelinwemhoener"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":313,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":314,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Deleting all flashcards: `delete all flashcards`**","lastModifiedDate":"2023-11-13"},{"lineNumber":315,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":316,"author":{"gitId":"wendelinwemhoener"},"content":"Deletes all flashcards currently stored by TaskLinker.","lastModifiedDate":"2023-11-13"},{"lineNumber":317,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":318,"author":{"gitId":"wendelinwemhoener"},"content":"Format: `delete all flashcards`","lastModifiedDate":"2023-11-03"},{"lineNumber":319,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":320,"author":{"gitId":"wendelinwemhoener"},"content":"Example of usage:","lastModifiedDate":"2023-11-13"},{"lineNumber":321,"author":{"gitId":"wendelinwemhoener"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":322,"author":{"gitId":"wendelinwemhoener"},"content":"Enter your command: \u003cb\u003edelete all flashcards\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":323,"author":{"gitId":"wendelinwemhoener"},"content":"    All your flashcards have been successfully deleted.","lastModifiedDate":"2023-11-13"},{"lineNumber":324,"author":{"gitId":"wendelinwemhoener"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":325,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":326,"author":{"gitId":"wendelinwemhoener"},"content":"### **Calendar-related features**","lastModifiedDate":"2023-11-14"},{"lineNumber":327,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":328,"author":{"gitId":"wendelinwemhoener"},"content":"#### **General explanation of flashcards**","lastModifiedDate":"2023-11-14"},{"lineNumber":329,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":330,"author":{"gitId":"Brian030601"},"content":"TaskLinker\u0027s calendar feature allows users to manage their time effectively ","lastModifiedDate":"2023-11-13"},{"lineNumber":331,"author":{"gitId":"Brian030601"},"content":"by adding, listing, finding, and deleting events. Events in the calendar have a ","lastModifiedDate":"2023-11-13"},{"lineNumber":332,"author":{"gitId":"Brian030601"},"content":"specified start and end time, making it easy for users to plan their schedules. ","lastModifiedDate":"2023-11-13"},{"lineNumber":333,"author":{"gitId":"Brian030601"},"content":"This feature is particularly useful for individuals with busy schedules or ","lastModifiedDate":"2023-11-13"},{"lineNumber":334,"author":{"gitId":"Brian030601"},"content":"those who want to keep track of their upcoming appointments or tasks.","lastModifiedDate":"2023-11-13"},{"lineNumber":335,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":336,"author":{"gitId":"Brian030601"},"content":"The TaskLinker is also integrated with the flashcards and can be used for setting","lastModifiedDate":"2023-11-13"},{"lineNumber":337,"author":{"gitId":"Brian030601"},"content":"a goal to review flashcards. Add goal event can be used to take user input for ","lastModifiedDate":"2023-11-13"},{"lineNumber":338,"author":{"gitId":"Brian030601"},"content":"setting a goal to review flashcards.","lastModifiedDate":"2023-11-13"},{"lineNumber":339,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":340,"author":{"gitId":"Brian030601"},"content":"Here is your features list:","lastModifiedDate":"2023-11-13"},{"lineNumber":341,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":342,"author":{"gitId":"Brian030601"},"content":"+ `add event` , `delete event`","lastModifiedDate":"2023-11-13"},{"lineNumber":343,"author":{"gitId":"Brian030601"},"content":"+ `list events` , `find event`","lastModifiedDate":"2023-11-13"},{"lineNumber":344,"author":{"gitId":"Brian030601"},"content":"+ `delete all events` , `add goal event`","lastModifiedDate":"2023-11-13"},{"lineNumber":345,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":346,"author":{"gitId":"Brian030601"},"content":"Users can use the above features to handle their events`","lastModifiedDate":"2023-11-13"},{"lineNumber":347,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":348,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Adding an event to the calendar: `add event`**","lastModifiedDate":"2023-11-14"},{"lineNumber":349,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":350,"author":{"gitId":"Brian030601"},"content":"Adds an event to the calendar with start and end time. ","lastModifiedDate":"2023-11-13"},{"lineNumber":351,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":352,"author":{"gitId":"Brian030601"},"content":"After entering this command, the user is asked to enter the event name on the calendar.","lastModifiedDate":"2023-11-13"},{"lineNumber":353,"author":{"gitId":"Brian030601"},"content":"Once the name is given, the user should press ENTER to continue. Once the name is entered,","lastModifiedDate":"2023-11-13"},{"lineNumber":354,"author":{"gitId":"Brian030601"},"content":"the user is prompted to give a start time and an end time for the event. ","lastModifiedDate":"2023-11-13"},{"lineNumber":355,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":356,"author":{"gitId":"Brian030601"},"content":"The start and the end time should be in an acceptable format (`yyyy-mm-ddThh:mm:ss`.)","lastModifiedDate":"2023-11-13"},{"lineNumber":357,"author":{"gitId":"Brian030601"},"content":"If it is not in an acceptable format, (`Invalid date and time format. Please try again.`)","lastModifiedDate":"2023-11-13"},{"lineNumber":358,"author":{"gitId":"Brian030601"},"content":"message will appear and prompt the user to enter a new start time.","lastModifiedDate":"2023-11-13"},{"lineNumber":359,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":360,"author":{"gitId":"Brian030601"},"content":"Furthermore, the end time should be later than the start time as an event cannot","lastModifiedDate":"2023-11-13"},{"lineNumber":361,"author":{"gitId":"Brian030601"},"content":"end before it\u0027s start time. If an earlier time is given for the end time than the","lastModifiedDate":"2023-11-13"},{"lineNumber":362,"author":{"gitId":"Brian030601"},"content":"start time, the TaskLinker displays (`End time is before or equal to the start time. Please enter the correct end time.`)","lastModifiedDate":"2023-11-13"},{"lineNumber":363,"author":{"gitId":"Brian030601"},"content":"message and starts over from (`Enter your command:`).","lastModifiedDate":"2023-11-13"},{"lineNumber":364,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":365,"author":{"gitId":"Brian030601"},"content":"Format:","lastModifiedDate":"2023-11-13"},{"lineNumber":366,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":367,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003eadd event\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":368,"author":{"gitId":"Brian030601"},"content":"What\u0027s the event?: \u003cb\u003eName [Event Name]\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":369,"author":{"gitId":"Brian030601"},"content":"When does it start?: \u003cb\u003eyyyy-mm-ddThh:mm:ss [Start Time]\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":370,"author":{"gitId":"Brian030601"},"content":"When does it end?: \u003cb\u003eyyyy-mm-ddThh:mm:ss [End Time]\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":371,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":372,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":373,"author":{"gitId":"Brian030601"},"content":"Example of usage:","lastModifiedDate":"2023-11-13"},{"lineNumber":374,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":375,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003eadd event\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":376,"author":{"gitId":"Brian030601"},"content":"What\u0027s the event?: \u003cb\u003eDo HW\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":377,"author":{"gitId":"Brian030601"},"content":"When does it start?: \u003cb\u003e2023-12-20T12:30:30\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":378,"author":{"gitId":"Brian030601"},"content":"When does it end?: \u003cb\u003e2023-12-20T13:40:30\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":379,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":380,"author":{"gitId":"Brian030601"},"content":"Event \u0027Do HW\u0027 From: 2023-12-20T12:30:30, To: 2023-12-20T13:40:30 ","lastModifiedDate":"2023-11-13"},{"lineNumber":381,"author":{"gitId":"Brian030601"},"content":"has been added to your Calendar","lastModifiedDate":"2023-11-13"},{"lineNumber":382,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":383,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":384,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Adding a goal event to the calendar: `add goal event`**","lastModifiedDate":"2023-11-14"},{"lineNumber":385,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":386,"author":{"gitId":"Brian030601"},"content":"Adds a goal of reviewing flashcards as an event to the calendar.","lastModifiedDate":"2023-11-13"},{"lineNumber":387,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":388,"author":{"gitId":"Brian030601"},"content":"After entering (`add goal event`) command, the user is asked to provide a name","lastModifiedDate":"2023-11-13"},{"lineNumber":389,"author":{"gitId":"Brian030601"},"content":"for this goal event. After the name, the user is prompted to give an end time ","lastModifiedDate":"2023-11-13"},{"lineNumber":390,"author":{"gitId":"Brian030601"},"content":"for the event. The end time serves as a deadline for the goal.","lastModifiedDate":"2023-11-13"},{"lineNumber":391,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":392,"author":{"gitId":"Brian030601"},"content":"After the deadline has been given, then the goal should be given. Goal of reviewing","lastModifiedDate":"2023-11-13"},{"lineNumber":393,"author":{"gitId":"Brian030601"},"content":"some number of flashcards by the given deadline. Same as adding an event, if an unacceptable","lastModifiedDate":"2023-11-13"},{"lineNumber":394,"author":{"gitId":"Brian030601"},"content":"format of end time is given, the TaskLinker will display (`Invalid date and time format. Please try again.`)","lastModifiedDate":"2023-11-13"},{"lineNumber":395,"author":{"gitId":"Brian030601"},"content":"message. ","lastModifiedDate":"2023-11-13"},{"lineNumber":396,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":397,"author":{"gitId":"Brian030601"},"content":"Format:","lastModifiedDate":"2023-11-13"},{"lineNumber":398,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":399,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003eadd goal event\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":400,"author":{"gitId":"Brian030601"},"content":"What\u0027s the event?: \u003cb\u003eName [Goal Name]\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":401,"author":{"gitId":"Brian030601"},"content":"When does it end?: \u003cb\u003eyyyy-mm-ddThh:mm:ss [End Time]\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":402,"author":{"gitId":"Brian030601"},"content":"How many flashcard to review by then?: \u003cb\u003eNumber [# of flashcards to review]\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":403,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":404,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":405,"author":{"gitId":"Brian030601"},"content":"Example of usage:","lastModifiedDate":"2023-11-13"},{"lineNumber":406,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":407,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003eadd goal event\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":408,"author":{"gitId":"Brian030601"},"content":"What\u0027s the event?: \u003cb\u003eDo Flashcards\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":409,"author":{"gitId":"Brian030601"},"content":"When does it end?: \u003cb\u003e2023-12-20T12:30:30\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":410,"author":{"gitId":"Brian030601"},"content":"How many flashcard to review by then?: \u003cb\u003e20\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":411,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":412,"author":{"gitId":"Brian030601"},"content":"Goal \u0027Do Flashcards\u0027 review 20 flashcards by: 2023-12-20T12:30:30 (Reviewed: 0) ","lastModifiedDate":"2023-11-13"},{"lineNumber":413,"author":{"gitId":"Brian030601"},"content":"has been added to your Calendar","lastModifiedDate":"2023-11-13"},{"lineNumber":414,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":415,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":416,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Delete an event from the calendar: `delete event`**","lastModifiedDate":"2023-11-14"},{"lineNumber":417,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":418,"author":{"gitId":"Brian030601"},"content":"Deletes an event from the calendar with event name.","lastModifiedDate":"2023-11-13"},{"lineNumber":419,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":420,"author":{"gitId":"Brian030601"},"content":"After the (`delete event`) command has been given, the user is prompted to give","lastModifiedDate":"2023-11-13"},{"lineNumber":421,"author":{"gitId":"Brian030601"},"content":"the name of the event he/she wants to delete from the calendar. If the given","lastModifiedDate":"2023-11-13"},{"lineNumber":422,"author":{"gitId":"Brian030601"},"content":"event exist in the calendar, then TaskLinker will display (`[Event Name] has been deleted from your Calendar!`).","lastModifiedDate":"2023-11-13"},{"lineNumber":423,"author":{"gitId":"Brian030601"},"content":"Then the event gets deleted from the event list.","lastModifiedDate":"2023-11-13"},{"lineNumber":424,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":425,"author":{"gitId":"Brian030601"},"content":"However, if the given event name doesn\u0027t exist in the calendar. Then the event","lastModifiedDate":"2023-11-13"},{"lineNumber":426,"author":{"gitId":"Brian030601"},"content":"doesn\u0027t exist in the calendar message will display (`[Event Name] doesn\u0027t exist in your Calendar!`).","lastModifiedDate":"2023-11-13"},{"lineNumber":427,"author":{"gitId":"Brian030601"},"content":"The user then enter a different command.","lastModifiedDate":"2023-11-13"},{"lineNumber":428,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":429,"author":{"gitId":"Brian030601"},"content":"Format:","lastModifiedDate":"2023-11-13"},{"lineNumber":430,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":431,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003edelete event\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":432,"author":{"gitId":"Brian030601"},"content":"What\u0027s the event?: \u003cb\u003eName [Event Name]\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":433,"author":{"gitId":"Brian030601"},"content":"    [Event Name] has been deleted from your Calendar!","lastModifiedDate":"2023-11-13"},{"lineNumber":434,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":435,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":436,"author":{"gitId":"Brian030601"},"content":"Example of usage:","lastModifiedDate":"2023-11-13"},{"lineNumber":437,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":438,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003edelete event\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":439,"author":{"gitId":"Brian030601"},"content":"What\u0027s the event?: \u003cb\u003ehello\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":440,"author":{"gitId":"Brian030601"},"content":"    hello has been deleted from your Calendar!","lastModifiedDate":"2023-11-13"},{"lineNumber":441,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":442,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":443,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Delete all events from the Calendar: `delete all events`**","lastModifiedDate":"2023-11-14"},{"lineNumber":444,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":445,"author":{"gitId":"Brian030601"},"content":"Deletes all events from the calendar.","lastModifiedDate":"2023-11-13"},{"lineNumber":446,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":447,"author":{"gitId":"Brian030601"},"content":"Once the (`delete all events`) command has been given by the user,","lastModifiedDate":"2023-11-13"},{"lineNumber":448,"author":{"gitId":"Brian030601"},"content":"the TaskLinker will clear all events in the calendar. If the exact ","lastModifiedDate":"2023-11-13"},{"lineNumber":449,"author":{"gitId":"Brian030601"},"content":"command is not entered, the feature will not work.","lastModifiedDate":"2023-11-13"},{"lineNumber":450,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":451,"author":{"gitId":"Brian030601"},"content":"Format \u0026 Example:","lastModifiedDate":"2023-11-13"},{"lineNumber":452,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":453,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003edelete all events\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":454,"author":{"gitId":"Brian030601"},"content":"    All your events have been successfully deleted from the Calendar.","lastModifiedDate":"2023-11-13"},{"lineNumber":455,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":456,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":457,"author":{"gitId":"wendelinwemhoener"},"content":"#### **Find an event from the Calendar: `find event`**","lastModifiedDate":"2023-11-14"},{"lineNumber":458,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":459,"author":{"gitId":"Brian030601"},"content":"Finds an event from the calendar.","lastModifiedDate":"2023-11-13"},{"lineNumber":460,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":461,"author":{"gitId":"Brian030601"},"content":"Once the (`find event`) command has been entered, the user is prompted to","lastModifiedDate":"2023-11-13"},{"lineNumber":462,"author":{"gitId":"Brian030601"},"content":"give the name of the event he/she is looking for. The input user gives can","lastModifiedDate":"2023-11-13"},{"lineNumber":463,"author":{"gitId":"Brian030601"},"content":"just be partial name of the event. If so, the feature will list all","lastModifiedDate":"2023-11-13"},{"lineNumber":464,"author":{"gitId":"Brian030601"},"content":"events that included the given input.","lastModifiedDate":"2023-11-13"},{"lineNumber":465,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":466,"author":{"gitId":"Brian030601"},"content":"However, if the given input is not found from the events in the Calendar, ","lastModifiedDate":"2023-11-13"},{"lineNumber":467,"author":{"gitId":"Brian030601"},"content":"then the (`No such event found`) message will be displayed.","lastModifiedDate":"2023-11-13"},{"lineNumber":468,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":469,"author":{"gitId":"Brian030601"},"content":"Format:","lastModifiedDate":"2023-11-13"},{"lineNumber":470,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":471,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003efind event\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":472,"author":{"gitId":"Brian030601"},"content":"What\u0027s the event?: \u003cb\u003eName [Event Name]\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":473,"author":{"gitId":"Brian030601"},"content":"1. Event \u0027Event Name\u0027 From: yyyy-mm-ddThh:mm:ss, To: yyyy-mm-ddThh:mm:ss","lastModifiedDate":"2023-11-13"},{"lineNumber":474,"author":{"gitId":"Brian030601"},"content":"    These events have been found","lastModifiedDate":"2023-11-13"},{"lineNumber":475,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":476,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":477,"author":{"gitId":"Brian030601"},"content":"Example of usage:","lastModifiedDate":"2023-11-13"},{"lineNumber":478,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":479,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003efind event\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":480,"author":{"gitId":"Brian030601"},"content":"What\u0027s the event?: \u003cb\u003eDo HW\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":481,"author":{"gitId":"Brian030601"},"content":"1. Event \u0027Do HW\u0027 From: 2023-12-20T12:30:30, To: 2023-12-20T13:30:30","lastModifiedDate":"2023-11-13"},{"lineNumber":482,"author":{"gitId":"Brian030601"},"content":"    These events have been found","lastModifiedDate":"2023-11-13"},{"lineNumber":483,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":484,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":485,"author":{"gitId":"wendelinwemhoener"},"content":"#### **List all events from the Calendar: `list events`**","lastModifiedDate":"2023-11-14"},{"lineNumber":486,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":487,"author":{"gitId":"Brian030601"},"content":"Lists all events from the calendar","lastModifiedDate":"2023-11-13"},{"lineNumber":488,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":489,"author":{"gitId":"Brian030601"},"content":"Once the (`list events`) command has been entered, the TaskLinker lists","lastModifiedDate":"2023-11-13"},{"lineNumber":490,"author":{"gitId":"Brian030601"},"content":"all the events in the event list. If there is no event in the event list,","lastModifiedDate":"2023-11-13"},{"lineNumber":491,"author":{"gitId":"Brian030601"},"content":"the (`The Calendar is empty!`) message will be displayed.","lastModifiedDate":"2023-11-13"},{"lineNumber":492,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":493,"author":{"gitId":"Brian030601"},"content":"Format \u0026 Example:","lastModifiedDate":"2023-11-13"},{"lineNumber":494,"author":{"gitId":"Brian030601"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":495,"author":{"gitId":"Brian030601"},"content":"Enter your command: \u003cb\u003elist events\u003c/b\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":496,"author":{"gitId":"Brian030601"},"content":"    Here is a list of all your events: ","lastModifiedDate":"2023-11-13"},{"lineNumber":497,"author":{"gitId":"Brian030601"},"content":"--------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":498,"author":{"gitId":"Brian030601"},"content":"1. Event \u0027Do User\u0027 From: 2023-12-20T12:30:30, To: 2023-12-20T13:30:30","lastModifiedDate":"2023-11-13"},{"lineNumber":499,"author":{"gitId":"Brian030601"},"content":"--------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":500,"author":{"gitId":"Brian030601"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":501,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":502,"author":{"gitId":"wendelinwemhoener"},"content":"## **FAQ**","lastModifiedDate":"2023-11-14"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":504,"author":{"gitId":"wendelinwemhoener"},"content":"**Q**: Where can I find my flashcard and calendar data?","lastModifiedDate":"2023-11-12"},{"lineNumber":505,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":506,"author":{"gitId":"junhyeong0411"},"content":"**A**: You can find it in `data/flashcards` and `data/events` folder.","lastModifiedDate":"2023-11-02"},{"lineNumber":507,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":508,"author":{"gitId":"junhyeong0411"},"content":"Every event and flashcard are automatically save after each command.","lastModifiedDate":"2023-11-02"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":510,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":512,"author":{"gitId":"junhyeong0411"},"content":"**A**: You can transfer your data by copying \u0026 pasting the data folder.","lastModifiedDate":"2023-11-02"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":514,"author":{"gitId":"Brian030601"},"content":"**Q**: Why is the calendar features needed?","lastModifiedDate":"2023-11-13"},{"lineNumber":515,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":516,"author":{"gitId":"Brian030601"},"content":"**A**: The calendar features are used for adding a flashcard review and other goals.","lastModifiedDate":"2023-11-13"},{"lineNumber":517,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":518,"author":{"gitId":"Brian030601"},"content":"**Q**: Are the flashcard and the calendar use different commands?","lastModifiedDate":"2023-11-13"},{"lineNumber":519,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":520,"author":{"gitId":"Brian030601"},"content":"**A**: Yes, they have different command based on their features.","lastModifiedDate":"2023-11-13"},{"lineNumber":521,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":522,"author":{"gitId":"Brian030601"},"content":"**Q**: How to exit the program?","lastModifiedDate":"2023-11-13"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":524,"author":{"gitId":"Brian030601"},"content":"**A**: Enter \"exit\" for the command.","lastModifiedDate":"2023-11-13"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":526,"author":{"gitId":"wendelinwemhoener"},"content":"## **Command Summary**","lastModifiedDate":"2023-11-14"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":528,"author":{"gitId":"wendelinwemhoener"},"content":"* [Listing all flashcards](#listing-all-flashcards-list-flashcards): `list ","lastModifiedDate":"2023-11-12"},{"lineNumber":529,"author":{"gitId":"wendelinwemhoener"},"content":"  flashcards`","lastModifiedDate":"2023-11-12"},{"lineNumber":530,"author":{"gitId":"wendelinwemhoener"},"content":"* [Creating a new flashcard](#creating-a-new-flashcard-create-flashcard): ","lastModifiedDate":"2023-11-12"},{"lineNumber":531,"author":{"gitId":"wendelinwemhoener"},"content":"  `create flashcard`","lastModifiedDate":"2023-11-12"},{"lineNumber":532,"author":{"gitId":"wendelinwemhoener"},"content":"* [Reviewing your flashcards](#reviewing-your-flashcards-review-flashcards): ","lastModifiedDate":"2023-11-12"},{"lineNumber":533,"author":{"gitId":"wendelinwemhoener"},"content":"  `review flashcards`","lastModifiedDate":"2023-11-12"},{"lineNumber":534,"author":{"gitId":"wendelinwemhoener"},"content":"* [Deleting a flashcard](#deleting-a-flashcard-delete-flashcard) `delete ","lastModifiedDate":"2023-11-12"},{"lineNumber":535,"author":{"gitId":"wendelinwemhoener"},"content":"  flashcard`","lastModifiedDate":"2023-11-12"},{"lineNumber":536,"author":{"gitId":"wendelinwemhoener"},"content":"* [Deleting all flashcards](#deleting-all-flashcards-delete-all-flashcards) ","lastModifiedDate":"2023-11-12"},{"lineNumber":537,"author":{"gitId":"wendelinwemhoener"},"content":"  `delete all flashcards`","lastModifiedDate":"2023-11-12"},{"lineNumber":538,"author":{"gitId":"Brian030601"},"content":"* [Create an event](#adding-an-event-to-the-calendar-add-event): ","lastModifiedDate":"2023-11-13"},{"lineNumber":539,"author":{"gitId":"Brian030601"},"content":"  `add event`","lastModifiedDate":"2023-11-13"},{"lineNumber":540,"author":{"gitId":"Brian030601"},"content":"* [Add a goal event](#adding-a-goal-event-to-the-calendar-add-goal-event): ","lastModifiedDate":"2023-11-13"},{"lineNumber":541,"author":{"gitId":"Brian030601"},"content":"  `add goal event`","lastModifiedDate":"2023-11-13"},{"lineNumber":542,"author":{"gitId":"Brian030601"},"content":"* [Delete an event](#delete-an-event-from-the-calendar-delete-event): ","lastModifiedDate":"2023-11-13"},{"lineNumber":543,"author":{"gitId":"Brian030601"},"content":"  `delete event`","lastModifiedDate":"2023-11-13"},{"lineNumber":544,"author":{"gitId":"Brian030601"},"content":"* [Delete all events](#delete-all-events-from-the-calendar-delete-all-events): ","lastModifiedDate":"2023-11-13"},{"lineNumber":545,"author":{"gitId":"Brian030601"},"content":"  `delete all events`","lastModifiedDate":"2023-11-13"},{"lineNumber":546,"author":{"gitId":"Brian030601"},"content":"* [Find an event](#find-an-event-from-the-calendar-find-event): ","lastModifiedDate":"2023-11-13"},{"lineNumber":547,"author":{"gitId":"Brian030601"},"content":"  `find event`","lastModifiedDate":"2023-11-13"},{"lineNumber":548,"author":{"gitId":"Brian030601"},"content":"* [List all events](#list-all-events-from-the-calendar-list-events): ","lastModifiedDate":"2023-11-13"},{"lineNumber":549,"author":{"gitId":"Brian030601"},"content":"  `list events` ","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"wendelinwemhoener":332,"-":28,"junhyeong0411":5,"Brian030601":184}},{"path":"docs/team/brian030601.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"# Kherlen Bayasgalan (Brian030601) - Project Portfolio Page","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"## Overview","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"+ TaskLinker is a CLI-tool for university students to memorize flashcards,","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"  review, and track them through their calendar. The calendar can also be","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"  used for tracking general events in their normal and academic life.","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"## Summary of Contributions","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"### Code contribution","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"My code contribution can be found in the following link:","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"Brian030601"},"content":"[[Click Here To See] ](https://nus-cs2113-ay2324s1.github.io/tp-dashboard/?search\u003dbrian030601\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"Brian030601"},"content":"Implemented calendar-related classes and methods listed below:","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"Brian030601"},"content":"+ AddEventCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"Brian030601"},"content":"+ DeleteAllEventsCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"Brian030601"},"content":"+ DeleteEventCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"Brian030601"},"content":"+ EventCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"Brian030601"},"content":"+ FindEventCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"Brian030601"},"content":"+ ListCalendarEventsCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"Brian030601"},"content":"+ Implemented calendar-related exceptions","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"Brian030601"},"content":"+ And other classes such as EventList, CalendarManager, \u0026 CalendarCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"Brian030601"},"content":"+ Added JavaDoc for all the above methods and classes","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"Brian030601"},"content":"### Contributions to the UG","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"Brian030601"},"content":"+ Wrote half of the user guide","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"Brian030601"},"content":"+ Wrote the calendar component of the user guide with explanations","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"Brian030601"},"content":"+ Added on Q\u0026A","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"Brian030601"},"content":"+ Added on command summary","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"Brian030601"},"content":"### Contributions to the DG","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"Brian030601"},"content":"+ Wrote the acknowledgement","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"Brian030601"},"content":"+ Drew the overall design UML","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"Brian030601"},"content":"+ Wrote the overall design \u0026 architecture","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"Brian030601"},"content":"+ Wrote calendar component","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"Brian030601"},"content":"+ Wrote half of the user stories","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"Brian030601"},"content":"+ Wrote the Non-Functional Requirements","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"Brian030601"},"content":"+ Wrote the Glossary","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"Brian030601"},"content":"+ Wrote the Instructions for manual testing","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"Brian030601"},"content":"#### Enhancements implemented","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"Brian030601"},"content":"- **Calendar**","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"Brian030601"},"content":"  - **What it does**: Adds, deletes, finds, and lists events and goals. ","lastModifiedDate":"2023-11-14"},{"lineNumber":50,"author":{"gitId":"Brian030601"},"content":"  Handles exceptions to prevent program crash.","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"Brian030601"},"content":"  - **Justification**: They are the second main component of the program. So,","lastModifiedDate":"2023-11-14"},{"lineNumber":52,"author":{"gitId":"Brian030601"},"content":"  they are an integral part.","lastModifiedDate":"2023-11-14"},{"lineNumber":53,"author":{"gitId":"Brian030601"},"content":"  - **Enhancements**: In v1.0, only events could be edited. In v2.0, calendar","lastModifiedDate":"2023-11-14"},{"lineNumber":54,"author":{"gitId":"Brian030601"},"content":"  and the flashcards are integrated.","lastModifiedDate":"2023-11-14"},{"lineNumber":55,"author":{"gitId":"Brian030601"},"content":"  - **Highlights**: The implementation took awhile as there was difficult part","lastModifiedDate":"2023-11-14"},{"lineNumber":56,"author":{"gitId":"Brian030601"},"content":"  of integrating two different packages together.","lastModifiedDate":"2023-11-14"},{"lineNumber":57,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":58,"author":{"gitId":"Brian030601"},"content":"### Review/mentoring contributions","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"Brian030601"},"content":"+ Reviewed formatting of calendar storage \u0026 dual event","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"Brian030601"},"content":"+ Reviewed Duke and DukeTest","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"Brian030601"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"Brian030601"},"content":"+ Reviewed and left comments on other team\u0027s projects during ","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"Brian030601"},"content":"tutorial hours. The links for the evidence can be found [here](/Users/brian/Desktop/Colgate/NUS Fall 2023/CS2113/Team Project/docs/photo/Screenshot 2023-11-13 at 23.42.45.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"Brian030601"},"content":"and [here](/Users/brian/Desktop/Colgate/NUS Fall 2023/CS2113/Team Project/docs/photo/Screenshot 2023-11-13 at 23.44.32.png).","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"Brian030601"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"Brian030601"},"content":"- I came to weekly meetings and contributed to the group through sharing my ideas.","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"Brian030601"},"content":"- I helped update our Google Doc weekly for it to reflect our progress","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"Brian030601"},"content":"- I communicated with other team members on Telegram to discuss and share project","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"Brian030601"},"content":"development and progress.","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"Brian030601"},"content":"- I fixed errors in teammates\u0027 codes.","lastModifiedDate":"2023-11-14"},{"lineNumber":77,"author":{"gitId":"Brian030601"},"content":"- I helped create user stories.","lastModifiedDate":"2023-11-14"},{"lineNumber":78,"author":{"gitId":"Brian030601"},"content":"- I set up some issue trackers.","lastModifiedDate":"2023-11-14"},{"lineNumber":79,"author":{"gitId":"Brian030601"},"content":"- I fixed some PE Dry-run team issues.","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"Brian030601":79}},{"path":"docs/team/junhyeong0411.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"# Bang Junhyeong - Project Portfolio Page","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"## Overview","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"TaskLinker is a CLI-tool for helping university students memorize flashcards and track their flashcard and general academic progress in the courses they are taking.","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":"#### Code contribution","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":"- You can find the code contribution [here](https://nus-cs2113-ay2324s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djunhyeong0411\u0026tabRepo\u003dAY2324S1-CS2113-F11-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse).","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"- Codes for storage and directory","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"- Codes for part of calendar and flashcard which is related to storage","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"- Added javadoc for storage and directory classes/functions","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"#### Features","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"1. **Save Flashcards** : Automatically saves the changed flashcard data whenever the user enters the command.","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"2. **Load Flashcards** : Load the saved flashcards file when program starts","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"3. **Save Events** : Automatically saves the changed event data whenever the user enters the command.","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"4. **Load Events** : Load the saved events file when program starts","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"5. **Make Directories** : When user first start the program, creates the data directories","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"6. **Clean up wrong files** : If the saved file has been corrupted, deletes it and make a new file","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"#### Enhancements implemented","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"- **Storage**","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"  - **What it does**:  It automatically saves the data during the program runs. When the User restarts the program, it automatically retrieves the data. Data is stored along a specific format as a txt file. If someone forcibly changes the data and goes against the format, notify the user and create a new file.","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"  - **Justification**: The storage function is essential because the User cannot always turn on the program. Now, users can edit their flashcard and events lists at any time. In addition, the process of inspecting data files is essential because damage may occur in the process of moving or opening them.","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"  - **Enhancements**: In v1.0, only flashcards were saved, and the format was simple. In v2.0, events are also saved, and flashcard and events directory were splited. Also, the saving format kept changed because the structure of flashcard and events were changed according to the degree of implementation.","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"  - **Highlights**: It was difficult to maintain the developement of storage code because the format of the stored data had to be continuously changed. ","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"#### Contributions to the UG","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"[User Guide](https://ay2324s1-cs2113-f11-3.github.io/tp/UserGuide.html)","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"- Contributed for Q\u0026A session about storage","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"- Gave an explanation how to move the data to other computers","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"#### Contributions to the DG:","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"[Developer Guide](https://ay2324s1-cs2113-f11-3.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"- Described about FlashcardStorage and EventStorage classes.","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"- Added Sequance Diagram for FlashcardStorage","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"- Participated weekly team meeting","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"- Found errors in teammates\u0027 code and let them know","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"- Found errors in teammates\u0027 code and fixed it (eg. calculating globalMaxId for flashcard)","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"- Post some issues about bugs","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"junhyeong0411"},"content":"#### Review/mentoring contributions","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"- Reviewed some PRs and added comments","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"- Summarized and delivered the TA\u0027s instructions for the team members who couldn\u0027t hear it.","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"junhyeong0411":50}},{"path":"docs/team/wendelinwemhoener.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"# Wendelin Wemhoener - Project Portfolio Page","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"## Overview","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"TaskLinker is a CLI-tool for helping university students memorize flashcards","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"and track their flashcard and general academic progress in the courses they are","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"taking.","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"## Summary of Contributions","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"### Code Contribution","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"See my code contribution [here on the tP Code Dashboard](https://nus-cs2113-ay2324s1.github.io/tp-dashboard/?search\u003dwendelinwemhoener\u0026breakdown\u003dtrue).","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"I implemented the `flashcard` package and coded all flashcard-related ","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"features (except for storing the flashcards in a text file for persistence).","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"I came up with the architecture of having a separate Parser and Ui component ","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"that work together to process input and create commands from a `command` ","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"subpackage that consists of the different commands inheriting from either a ","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"normal `Command` or `DualCommand` abstract class.","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"After I had developed this architecture for the `flashcard` package, the ","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"other team members copied my architecture and reused it for the `calendar` ","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"package. Also, in many cases, they reused my source code: e.g. the source code","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"of `DualEventCommand.java` in the `calendar.command` package is basically a ","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"perfect copy of the `DualFlashcardCommand.java` class I created in my ","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"`flashcard.command` package.","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"To make understanding my code and architecture easier, I wrote Javadoc for all ","lastModifiedDate":"2023-11-14"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"the classes and methods (excluding getters, setters and constructors) I ","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"developed.","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"In total, I implemented 1241 lines of functional code, thus accounting for more ","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"than 44% of functional code produced by the entire team.","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"Also, I ensured that the build process runs without errors and that the ","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"text-ui-test passes.","lastModifiedDate":"2023-11-14"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"Additionally, I implemented tests for the `flashcard` package and achieved ","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"100% class coverage with my tests, see here:","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"![img.png](img.png)","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"#### Enhancements implemented","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"- **Flashcards**","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"  - **What it does**: Gives the ability to create, delete, list, and review ","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"    user-generated flashcards. Spaced repetition review mode allows even ","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"    more efficient studying than analog flashcards because more difficult ","lastModifiedDate":"2023-11-14"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"    flashcards are automatically shown more often until, while easier ","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"    flashcards are shown fewer times. Handles invalid user input and other ","lastModifiedDate":"2023-11-14"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"    potentially occuring exceptions to prevent program crash and allow for ","lastModifiedDate":"2023-11-14"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"    graceful recovery. So-called \"dual commands\" give users the ability to ","lastModifiedDate":"2023-11-14"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"    choose between entering commands in an easier, but more time-consuming way","lastModifiedDate":"2023-11-14"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"    (for beginner users who want as much guidance as possible) or in a less","lastModifiedDate":"2023-11-14"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"    time-consuming, but more complicated way (for expert users who don\u0027t need","lastModifiedDate":"2023-11-14"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"    additional guidance).","lastModifiedDate":"2023-11-14"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"  - **Justification**: Flashcards are first feature we thought of and agreed ","lastModifiedDate":"2023-11-14"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"    upon when we planned out TaskLinker. The efficient use of flashcards is ","lastModifiedDate":"2023-11-14"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"    the main value proposition of our app and greatly influenced our target ","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"    user profile. As such, flashcards are the primary component of TaskLinker.","lastModifiedDate":"2023-11-14"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"  - **Highlights**: Integrating \"dual commands\" and ensuring that the ","lastModifiedDate":"2023-11-14"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"    program could process the different syntax for beginner and expert mode ","lastModifiedDate":"2023-11-14"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"    without duplicating code was challenging, but using inheritance and ","lastModifiedDate":"2023-11-14"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"    abstract base classes allowed me to find a neat solution.","lastModifiedDate":"2023-11-14"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"### Contributions to the UG","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"I documented all flashcard-related features: I documented each single ","lastModifiedDate":"2023-11-14"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"command with a description, command format and a usage example and ","lastModifiedDate":"2023-11-14"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"additionally wrote an explanation about what flashcards are and what the ","lastModifiedDate":"2023-11-14"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"\"dual commands\" are. ","lastModifiedDate":"2023-11-14"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"Also, I implemented a structure and formatting that the other team members ","lastModifiedDate":"2023-11-14"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"reused.","lastModifiedDate":"2023-11-14"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"Moreover, I wrote parts of the UG that are not specific to a feature: I ","lastModifiedDate":"2023-11-14"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"wrote the \"Introduction\", \"Quick Start\" and \"Notes about the command format and ","lastModifiedDate":"2023-11-14"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"sample output format\" sections and started the \"Command Summary\". ","lastModifiedDate":"2023-11-14"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"In total, I wrote 335 lines of the UG, thus accounting for over 60% of the ","lastModifiedDate":"2023-11-14"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"entire user guide.","lastModifiedDate":"2023-11-14"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"All in all, the sections written by me are:","lastModifiedDate":"2023-11-14"},{"lineNumber":85,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":86,"author":{"gitId":"wendelinwemhoener"},"content":"- \"Introduction\"","lastModifiedDate":"2023-11-14"},{"lineNumber":87,"author":{"gitId":"wendelinwemhoener"},"content":"- \"Quick Start\"","lastModifiedDate":"2023-11-14"},{"lineNumber":88,"author":{"gitId":"wendelinwemhoener"},"content":"- \"Notes about the command format and sample output format\"","lastModifiedDate":"2023-11-14"},{"lineNumber":89,"author":{"gitId":"wendelinwemhoener"},"content":"- \"Flashcard-related features\"","lastModifiedDate":"2023-11-14"},{"lineNumber":90,"author":{"gitId":"wendelinwemhoener"},"content":"- part of \"Command Summary\"","lastModifiedDate":"2023-11-14"},{"lineNumber":91,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":92,"author":{"gitId":"wendelinwemhoener"},"content":"### Contributions to the DG","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"wendelinwemhoener"},"content":"I documented all flashcard-related features.","lastModifiedDate":"2023-11-14"},{"lineNumber":95,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":96,"author":{"gitId":"wendelinwemhoener"},"content":"I created three UML diagrams to visualize the structure of the `flashcards` ","lastModifiedDate":"2023-11-14"},{"lineNumber":97,"author":{"gitId":"wendelinwemhoener"},"content":"package (two class diagrams and one sequence diagram); thus accounting for ","lastModifiedDate":"2023-11-14"},{"lineNumber":98,"author":{"gitId":"wendelinwemhoener"},"content":"about 43% of UML diagrams in the developer guide.","lastModifiedDate":"2023-11-14"},{"lineNumber":99,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"wendelinwemhoener"},"content":"I also wrote all the flashcard-related user stories.","lastModifiedDate":"2023-11-14"},{"lineNumber":101,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"wendelinwemhoener"},"content":"All in all, the sections written by me are:","lastModifiedDate":"2023-11-14"},{"lineNumber":103,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":104,"author":{"gitId":"wendelinwemhoener"},"content":"- \"`flashcard` package\" section with all its subsections: \"Package structure","lastModifiedDate":"2023-11-14"},{"lineNumber":105,"author":{"gitId":"wendelinwemhoener"},"content":"  overview\", \"Rough control flow overview\", \"`flashcard.command` package\",","lastModifiedDate":"2023-11-14"},{"lineNumber":106,"author":{"gitId":"wendelinwemhoener"},"content":"  \"`flashcard.exceptions` package\" and \"`flashcard.review` package\" subsections","lastModifiedDate":"2023-11-14"},{"lineNumber":107,"author":{"gitId":"wendelinwemhoener"},"content":"- \"Target user profile\"","lastModifiedDate":"2023-11-14"},{"lineNumber":108,"author":{"gitId":"wendelinwemhoener"},"content":"- \"Value proposition\"","lastModifiedDate":"2023-11-14"},{"lineNumber":109,"author":{"gitId":"wendelinwemhoener"},"content":"- part of \"User Stories\" ","lastModifiedDate":"2023-11-14"},{"lineNumber":110,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":111,"author":{"gitId":"wendelinwemhoener"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"wendelinwemhoener"},"content":"- I set up the GitHub team org, created the project board on GitHub and set ","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"wendelinwemhoener"},"content":"  up the \"developers\" team on GitHub","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"wendelinwemhoener"},"content":"- I set up the repo and set up GitHub Pages","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"wendelinwemhoener"},"content":"- I set up the issue tracker ","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"wendelinwemhoener"},"content":"- I was responsible for release management (as well as setting up milestones)","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"wendelinwemhoener"},"content":"- I documented target user profile and value proposition in UG/DG","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"wendelinwemhoener"},"content":"- I set up the Google Doc we used for coordinating the project in the ","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"wendelinwemhoener"},"content":"  initial phase and kept it updated with the ongoing changes","lastModifiedDate":"2023-11-14"},{"lineNumber":121,"author":{"gitId":"wendelinwemhoener"},"content":"- I set up and administrated our Telegram chat group to allow for ","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"wendelinwemhoener"},"content":"  efficient communication","lastModifiedDate":"2023-11-14"},{"lineNumber":123,"author":{"gitId":"wendelinwemhoener"},"content":"- I created the majority of user stories for the DG","lastModifiedDate":"2023-11-14"},{"lineNumber":124,"author":{"gitId":"wendelinwemhoener"},"content":"- I coordinated the weekly meetings","lastModifiedDate":"2023-11-14"},{"lineNumber":125,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":126,"author":{"gitId":"wendelinwemhoener"},"content":"### Review/mentoring contributions: ","lastModifiedDate":"2023-11-14"},{"lineNumber":127,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":128,"author":{"gitId":"wendelinwemhoener"},"content":"Helped my team members with the tasks during the tutorial.","lastModifiedDate":"2023-11-14"},{"lineNumber":129,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":130,"author":{"gitId":"wendelinwemhoener"},"content":"Reviewed team members\u0027 code for style guide violations and gave them ","lastModifiedDate":"2023-11-14"},{"lineNumber":131,"author":{"gitId":"wendelinwemhoener"},"content":"feedback on it (or fixed it myself for them).","lastModifiedDate":"2023-11-14"},{"lineNumber":132,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":133,"author":{"gitId":"wendelinwemhoener"},"content":"### Contributions beyond the project team","lastModifiedDate":"2023-11-14"},{"lineNumber":134,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":135,"author":{"gitId":"wendelinwemhoener"},"content":"I have created multiple forum posts to clarify questions and allow others to ","lastModifiedDate":"2023-11-14"},{"lineNumber":136,"author":{"gitId":"wendelinwemhoener"},"content":"also profit from the answers. I currently sit at spot 8 on the forum ","lastModifiedDate":"2023-11-14"},{"lineNumber":137,"author":{"gitId":"wendelinwemhoener"},"content":"activities dashboard, see [link](https://nus-cs2113-ay2324s1.github.io/dashboards/contents/forum-activities.html).","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"wendelinwemhoener":137}},{"path":"docs/team/zhujingxi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Cheezeblokz"},"content":"# Zhu Jingxi - Project Portfolio Page","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"Cheezeblokz"},"content":"## Overview","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"Cheezeblokz"},"content":"TaskLinker is a CLI-tool for helping university students memorize flashcards and track their ","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"Cheezeblokz"},"content":"flashcard and general academic progress in the courses they are taking.","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Cheezeblokz"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"Cheezeblokz"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"Cheezeblokz"},"content":"#### Code contribution","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"Cheezeblokz"},"content":"- Skeleton classes for event package (Calendar, CalendarCommandParser, CalendarManager, CalendarUi, Event, EventList).","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"Cheezeblokz"},"content":"- Implementation of Goal class and goal flashcard counting capabilities through Calendar class.","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"Cheezeblokz"},"content":"#### Features","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"Cheezeblokz"},"content":"1. Implemented goal event adding function for flashcard review recording.","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"Cheezeblokz"},"content":"#### Enhancements implemented","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"Cheezeblokz"},"content":"- Implemented dual input mode (beginner and expert) capabilities for event commands.","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"Cheezeblokz"},"content":"#### Contributions to the DG","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"Cheezeblokz"},"content":"- Added Class and Sequence Diagram for calendar package and CalendarManager respectively.","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"Cheezeblokz"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"Cheezeblokz"},"content":"- Participated and contributed to weekly team meeting","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"Cheezeblokz":26}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.calendar.Calendar;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.calendar.CalendarManager;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardComponent;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"    public Duke() {}","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"        new Duke().run();","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"     * Starts a REPL session where commands are inputted and then processed.","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"    private void run() {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"        Calendar calendar \u003d new Calendar();","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"        FlashcardComponent fc \u003d new FlashcardComponent(calendar);","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"        CalendarManager cm \u003d new CalendarManager(calendar, new ArrayList\u003c\u003e());","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"        String input;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"        boolean shouldTerminate \u003d false;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"        while (!shouldTerminate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.print(\"Enter your command: \");","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"            if (fc.isResponsible(input)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"                fc.processInput(input);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"                continue;","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"            } else if (cm.isResponsible(input)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"                cm.processInput(input);","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"                continue;","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"            if (input.toLowerCase().strip().equals(\"exit\")) {","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"                System.out.println(\"    You are exiting TaskLinker! Bye!\");","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"                break;","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"            } else if (input.toLowerCase().strip().equals(\"help\")) {","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"                printHelp();","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"            } else {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"                System.out.println(\"    Invalid command! Please try again.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"    private void printHelp() {","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    If you need help, please consult our \" +","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"                \"user guide at https://ay2324s1-cs2113-f11-3.github\" +","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"                \".io/tp/UserGuide.html\");","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println();","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Here is a quick overview over all available \" +","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"                \"commands: \");","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"        String[] commandFormats \u003d new String[] {","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"            \"list flashcards\",","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"            \"create flashcard\",","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"            \"review flashcards\",","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"            \"delete flashcard\",","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"            \"delete all flashcards\",","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"            \"help\",","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"            \"add event\",","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"            \"add goal event\",","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"            \"delete event\",","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"            \"delete all events\",","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"            \"find event\",","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"            \"list events\",","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"            \"exit\",","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"        };","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"        for (String commandFormat : commandFormats) {","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    - \" + commandFormat);","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"wendelinwemhoener":84}},{"path":"src/main/java/seedu/duke/calendar/Calendar.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cheezeblokz"},"content":"//@@author Cheezeblokz","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Cheezeblokz"},"content":"package seedu.duke.calendar;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Cheezeblokz"},"content":"public class Calendar {","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Cheezeblokz"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"Cheezeblokz"},"content":"     * The class is here for integrating Flashcard goals with the Calendar.","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"Cheezeblokz"},"content":"     * Any other features related to the Calendar can be added here in the future.","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"Cheezeblokz"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"Cheezeblokz"},"content":"    EventList eventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"Cheezeblokz"},"content":"    public Calendar() {","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"Cheezeblokz"},"content":"    public void setEventList(EventList eventList) {","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"Cheezeblokz"},"content":"        this.eventList \u003d eventList;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"Cheezeblokz"},"content":"    public void incrementFlashcardCount() {","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"Cheezeblokz"},"content":"        for(Event event : eventList.getEvents()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"Cheezeblokz"},"content":"            if (event.getClass() \u003d\u003d Goal.class) {","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"Cheezeblokz"},"content":"                ((Goal) event).flashcardCompleted();","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"Cheezeblokz"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"Cheezeblokz"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"Cheezeblokz"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Cheezeblokz":26}},{"path":"src/main/java/seedu/duke/calendar/CalendarCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.AddEventCommand;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.AddGoalEventCommand;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.DeleteEventCommand;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.EventCommand;","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.FindEventCommand;","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.DeleteAllEventsCommand;","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.ListCalendarEventsCommand;","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.UnknownCommand;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.exceptions.AddEventException;","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.exceptions.DeleteEventException;","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.exceptions.DeleteAllException;","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.exceptions.FindEventException;","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.exceptions.ListEventException;","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"Brian030601"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"Brian030601"},"content":"public class CalendarCommandParser {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"Brian030601"},"content":"    //@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"Brian030601"},"content":"     * The manageException method is used to throw exceptions if those exceptions have","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"Brian030601"},"content":"     * been encountered. Each if case handles different exception errors. The method","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"Brian030601"},"content":"     * has one parameter (String userInput), which is used to check if the input has","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"Brian030601"},"content":"     * anything else after it.","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"Brian030601"},"content":"     * @param userInput is taken to check if the condition matches the exception.","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"Brian030601"},"content":"     * @throws AddEventException is thrown if the user only inputs add and nothing else.","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"Brian030601"},"content":"     * @throws DeleteEventException is thrown if the user only inputs delete all and nothing else.","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"Brian030601"},"content":"     * @throws DeleteAllException is thrown if the user only inputs delete and nothing else.","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"Brian030601"},"content":"     * @throws FindEventException is thrown if the user only inputs find and nothing else.","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"Brian030601"},"content":"     * @throws ListEventException is thrown if the user only inputs list and nothing else.","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"Brian030601"},"content":"    public static void manageException(String userInput) throws AddEventException, DeleteEventException,","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"Brian030601"},"content":"            DeleteAllException, FindEventException, ListEventException {","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"Brian030601"},"content":"        Scanner input \u003d new Scanner(userInput);","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"Brian030601"},"content":"        String command \u003d input.next();","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"Brian030601"},"content":"        if (command.equals(\"add\") \u0026\u0026 !input.hasNext()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"Brian030601"},"content":"            throw new AddEventException();","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"Brian030601"},"content":"        if (command.equals(\"delete all\") \u0026\u0026 !input.hasNext()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"Brian030601"},"content":"            throw new DeleteAllException();","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"Brian030601"},"content":"        if (command.equals(\"delete\") \u0026\u0026 !input.hasNext()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"Brian030601"},"content":"            throw new DeleteEventException();","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"Brian030601"},"content":"        if (command.equals(\"find\") \u0026\u0026 !input.hasNext()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"Brian030601"},"content":"            throw new FindEventException();","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"Brian030601"},"content":"        if (command.equals(\"list\") \u0026\u0026 !input.hasNext()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"Brian030601"},"content":"            throw new ListEventException();","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"Brian030601"},"content":"    //@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"Brian030601"},"content":"     * The parseInput method is used to catch any exceptions that could occur. The method","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"Brian030601"},"content":"     * has one parameter (String input). The input is used for asserting that it is not null.","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"Brian030601"},"content":"     * If any exceptions are caught, then the corresponding messages are displayed.","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"Brian030601"},"content":"     * Last resort unknown command will run if the command is not recognized.","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"Brian030601"},"content":"     * @param input is used to check whether input is null or not.","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"Brian030601"},"content":"     * @return runs the commands","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"Brian030601"},"content":"    public EventCommand parseInput(String input) {","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Brian030601"},"content":"        // using asser to check whether the input is null.","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"Brian030601"},"content":"        assert input !\u003d null : \"input is null\";","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Brian030601"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"Brian030601"},"content":"            manageException(input);","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"Brian030601"},"content":"            if (input.startsWith(\"add event\")) {","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"Brian030601"},"content":"                return new AddEventCommand(input);","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"Brian030601"},"content":"            } else if (input.startsWith(\"add goal event\")) {","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"Brian030601"},"content":"                return new AddGoalEventCommand(input);","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"Brian030601"},"content":"            } else if (input.startsWith(\"delete event\")) {","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"Brian030601"},"content":"                return new DeleteEventCommand(input);","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"Brian030601"},"content":"            } else if (input.startsWith(\"list events\")) {","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"Brian030601"},"content":"                return new ListCalendarEventsCommand();","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"Brian030601"},"content":"            } else if (input.startsWith(\"delete all events\")) {","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"Brian030601"},"content":"                return new DeleteAllEventsCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"Brian030601"},"content":"            } else if (input.startsWith(\"find event\")) {","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"Brian030601"},"content":"                return new FindEventCommand(input);","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"Brian030601"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Brian030601"},"content":"        } catch (AddEventException exception) {","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"☹ OOPS!!! The description of an add cannot be empty.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"Brian030601"},"content":"        } catch (DeleteAllException exception) {","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"☹ OOPS!!! The description of a delete all cannot be empty.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"Brian030601"},"content":"        } catch (DeleteEventException exception) {","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"☹ OOPS!!! The description of a delete cannot be empty.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":97,"author":{"gitId":"Brian030601"},"content":"        } catch (FindEventException exception) {","lastModifiedDate":"2023-11-06"},{"lineNumber":98,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"☹ OOPS!!! The description of an find cannot be empty.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":99,"author":{"gitId":"Brian030601"},"content":"        } catch (ListEventException exception) {","lastModifiedDate":"2023-11-06"},{"lineNumber":100,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"☹ OOPS!!! The description of a list cannot.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":101,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":102,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":103,"author":{"gitId":"Brian030601"},"content":"        return new UnknownCommand();","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Brian030601":105}},{"path":"src/main/java/seedu/duke/calendar/CalendarManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.EventCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.UnknownCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.storage.EventDirectory;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.storage.EventStorage;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Brian030601"},"content":"public class CalendarManager {","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"    Calendar calendar;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Brian030601"},"content":"    CalendarUi calendarUi;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Brian030601"},"content":"    EventList eventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Brian030601"},"content":"    CalendarCommandParser calendarCommandParser;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Brian030601"},"content":"    Scanner scanner;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Brian030601"},"content":"    private EventStorage storage;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"Brian030601"},"content":"     * The CalendarManager initializes the accesses to other classes.","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"Brian030601"},"content":"     * It also loads events from the storage.","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"Brian030601"},"content":"     * @param events is used to initialize the EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"Brian030601"},"content":"    public CalendarManager(Calendar calendar, ArrayList\u003cEvent\u003e events) {","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Brian030601"},"content":"        EventDirectory eventdirectory \u003d new EventDirectory();","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Brian030601"},"content":"        eventdirectory.listEventFiles();","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"Brian030601"},"content":"        storage \u003d new EventStorage(eventdirectory.defaultDirectory());","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Brian030601"},"content":"        try{","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Brian030601"},"content":"            eventList \u003d storage.loadEvents();","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Brian030601"},"content":"        } catch (FileNotFoundException e){","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Brian030601"},"content":"            //System.out.println(\"Making new file for Events\");","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"Brian030601"},"content":"            eventList \u003d new EventList(events);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Brian030601"},"content":"        calendar.setEventList(eventList);","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"Brian030601"},"content":"        this.calendar \u003d calendar;","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"Brian030601"},"content":"        calendarUi \u003d new CalendarUi(eventList);","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"Brian030601"},"content":"        calendarCommandParser \u003d new CalendarCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Brian030601"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Brian030601"},"content":"    // getStorage is used for getting the storage","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"Brian030601"},"content":"    public EventStorage getStorage(){","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"Brian030601"},"content":"        return this.storage;","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Brian030601"},"content":"    //@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"Brian030601"},"content":"     * validCommand is used for checking whether the command is valid, and","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"Brian030601"},"content":"     * not an instance of UnknownCommand.","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"Brian030601"},"content":"     * @param input is used for converting the input into command.","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"Brian030601"},"content":"     * @return returns whether the command is instance of UnknownCommand or not.","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"Brian030601"},"content":"    public boolean validCommand(String input) {","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"Brian030601"},"content":"        EventCommand command \u003d calendarCommandParser.parseInput(input);","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"Brian030601"},"content":"        return !(command instanceof UnknownCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"Brian030601"},"content":"    //@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"Brian030601"},"content":"    // isResponsible calls the validCommand method.","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"Brian030601"},"content":"    public boolean isResponsible(String input) {","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"Brian030601"},"content":"        return validCommand(input);","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"Brian030601"},"content":"    // processInput is used for saving the events in the EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"Brian030601"},"content":"    public void processInput(String input) {","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"Brian030601"},"content":"        startCalendar(input);","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"Brian030601"},"content":"        storage.saveEvents(eventList.getEvents());","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"Brian030601"},"content":"    //@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"Brian030601"},"content":"     * startCalender starts the Calendar features and uses the input as a command.","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"Brian030601"},"content":"     * @param input is used for converting the input into command.","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"Brian030601"},"content":"    public void startCalendar(String input) {","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"Brian030601"},"content":"        EventCommand command \u003d calendarCommandParser.parseInput(input);","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"Brian030601"},"content":"        assert !(command instanceof seedu.duke.calendar.command.UnknownCommand) :","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"Brian030601"},"content":"                \"Command cannot be \" + \"unknown\";","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"Brian030601"},"content":"        calendarUi.executeCommand(command);","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"Brian030601"},"content":"        //calendarCommandParser.parseInput(command);","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Brian030601":96}},{"path":"src/main/java/seedu/duke/calendar/CalendarUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.command.EventCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"public class CalendarUi {","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"    private EventList eventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"    //@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"Brian030601"},"content":"    // CalendarUi is the constructor method for CalendarUi class.","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"    public CalendarUi (EventList eventList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Brian030601"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Brian030601"},"content":"        this.eventList \u003d eventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Brian030601"},"content":"    //@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"Brian030601"},"content":"     * executeCommand is used for starting the calendar part of the program.","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"Brian030601"},"content":"     * @param command is used for relaying the command entered by the user.","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"Brian030601"},"content":"    public void executeCommand(EventCommand command) {","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Brian030601"},"content":"        command.execute(scanner, eventList);","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Brian030601":29}},{"path":"src/main/java/seedu/duke/calendar/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"public class Event {","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"    private String name;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Cheezeblokz"},"content":"    //@@author Cheezeblokz","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"Cheezeblokz"},"content":"    // Event is a constructor method for Event class.","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"Cheezeblokz"},"content":"    public Event(String name, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Cheezeblokz"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Cheezeblokz"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Cheezeblokz"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Cheezeblokz"},"content":"    //@@author Cheezeblokz","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"Cheezeblokz"},"content":"    // getName returns the name of the event.","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"Cheezeblokz"},"content":"    public String getName() {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Cheezeblokz"},"content":"        return name;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Cheezeblokz"},"content":"    // setName is used for setting the event name.","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"Cheezeblokz"},"content":"    public void setName(String name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Cheezeblokz"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"Cheezeblokz"},"content":"    // getFrom is used for getting the start time of an Event.","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"Cheezeblokz"},"content":"    public String getFrom() {","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"Cheezeblokz"},"content":"        return from.toString();","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Brian030601"},"content":"    //@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"Brian030601"},"content":"    // setFrom is used for setting the start time of an Event.","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"Brian030601"},"content":"    public void setFrom(LocalDateTime from) {","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Brian030601"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Brian030601"},"content":"    // getFrom is used for getting the end time of an Event.","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"Brian030601"},"content":"    public String getTo() {","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"Brian030601"},"content":"        return to.toString();","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Brian030601"},"content":"    //@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"Brian030601"},"content":"    // setFrom is used for setting the end time of an Event.","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"Brian030601"},"content":"    public void setTo(LocalDateTime to) {","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Brian030601"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Brian030601"},"content":"    // toString is used for formatting the print version of an Event.","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"Brian030601"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Brian030601"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Brian030601"},"content":"        return \"Event \u0027\" + name + \u0027\\\u0027\u0027 +","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"Brian030601"},"content":"                \" From: \" + from +","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"Brian030601"},"content":"                \", To: \" + to;","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Cheezeblokz":24,"Brian030601":37}},{"path":"src/main/java/seedu/duke/calendar/EventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"public class EventList {","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"    //@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"    private ArrayList\u003cEvent\u003e eventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"    // EventList is a constructor method","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"    public EventList(ArrayList\u003cEvent\u003e eventList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"        this.eventList \u003d eventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Brian030601"},"content":"    // addEvent is used for adding an event to the EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"Brian030601"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Brian030601"},"content":"        eventList.add(event);","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Brian030601"},"content":"    // getEvent is used to get an event from the EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"Brian030601"},"content":"    public ArrayList\u003cEvent\u003e getEvents() {","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"Brian030601"},"content":"        return eventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Brian030601"},"content":"    // getSize is used for getting the size of EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"Brian030601"},"content":"    public int getSize() {","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"Brian030601"},"content":"        return eventList.size();","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"Brian030601"},"content":"    // findEvent is used for finding a specific event from the EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"Brian030601"},"content":"    public int findEvent(String keyword) {","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"Brian030601"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"Brian030601"},"content":"        for (Event event: eventList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"Brian030601"},"content":"            if (event.getName().contains(keyword)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"Brian030601"},"content":"                System.out.println((++count) + \". \" + event);","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"Brian030601"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"Brian030601"},"content":"        return count;","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Brian030601"},"content":"    // deleteEvent is used for deleting an event from the EventList","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"Brian030601"},"content":"    public int deleteEvent(String name) {","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"Brian030601"},"content":"        int size \u003d eventList.size();","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"Brian030601"},"content":"        if (size \u003e 0) {","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"Brian030601"},"content":"            eventList.removeIf(event -\u003e event.getName().equals(name));","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"Brian030601"},"content":"        } else {","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"The Calendar is empty\");","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"Brian030601"},"content":"        return size;","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"Brian030601"},"content":"    // deleteAllEvents is used for deleting all events in the EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"Brian030601"},"content":"    public void deleteAllEvents() {","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"Brian030601"},"content":"        eventList.clear();","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"Brian030601"},"content":"    // toString formats the print version of EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"Brian030601"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"Brian030601"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"Brian030601"},"content":"        return \"EventStorage{\" +","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"Brian030601"},"content":"                \"events\u003d\" + eventList +","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"Brian030601"},"content":"                \u0027}\u0027;","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"Brian030601":67}},{"path":"src/main/java/seedu/duke/calendar/Goal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cheezeblokz"},"content":"package seedu.duke.calendar;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"Cheezeblokz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"Cheezeblokz"},"content":"public class Goal extends Event{","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"Cheezeblokz"},"content":"    private String name;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"Cheezeblokz"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"Cheezeblokz"},"content":"    private int goal;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"Cheezeblokz"},"content":"    private int completed;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"Cheezeblokz"},"content":"    public Goal(String name, LocalDateTime to, int goal, int completed) {","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"Cheezeblokz"},"content":"        super(name, null, to);","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"Cheezeblokz"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"Cheezeblokz"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"Cheezeblokz"},"content":"        this.goal \u003d goal;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"Cheezeblokz"},"content":"        this.completed \u003d completed;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"Cheezeblokz"},"content":"    public int getGoal() {","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"Cheezeblokz"},"content":"        return goal;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"Cheezeblokz"},"content":"    public Object getCompleted() {","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"Cheezeblokz"},"content":"        return completed;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"Cheezeblokz"},"content":"    public void flashcardCompleted() {","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"Cheezeblokz"},"content":"        if (LocalDateTime.now().isBefore(to)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"Cheezeblokz"},"content":"            completed +\u003d 1;","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"Cheezeblokz"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"Cheezeblokz"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"Cheezeblokz"},"content":"    public String getFrom() {","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"Cheezeblokz"},"content":"        return \"null\";","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"Cheezeblokz"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"Cheezeblokz"},"content":"    public String toString() {","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"Cheezeblokz"},"content":"        return \"Goal \u0027\" + name + \u0027\\\u0027\u0027 + \" review \" + goal + \" flashcards by: \" + to + \" (Reviewed: \" + completed + \")\";","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"Cheezeblokz"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"Cheezeblokz":44}},{"path":"src/main/java/seedu/duke/calendar/command/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar.command;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.Event;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.EventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Brian030601"},"content":"public class AddEventCommand extends DualEventCommand {","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"Cheezeblokz"},"content":"    //@@author Cheezeblokz","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"Cheezeblokz"},"content":"    public AddEventCommand(String input) {","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"Cheezeblokz"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"Cheezeblokz"},"content":"        beginnerCommandLength \u003d 2;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"Cheezeblokz"},"content":"        expertCommandLength \u003d 5;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"Cheezeblokz"},"content":"        syntaxString \u003d \"add event EVENT_NAME EVENT_START_DATE (in format yyyy-mm-ddThh:mm:ss) \" +","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"Cheezeblokz"},"content":"                \"EVENT_END_DATE (in format yyyy-mm-ddThh:mm:ss)\";","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"Brian030601"},"content":"    //@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"Brian030601"},"content":"     * The executeBeginnerMode method is used to add an event to the calendar.","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"Brian030601"},"content":"     * It has two parameters (Scanner, EventList). The EventList is used to add an","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"Brian030601"},"content":"     * event to the list. The scanner is used to get the user\u0027s event name input.","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"Brian030601"},"content":"     * The method first takes the event name, then through parseDateTimeInput,","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"Brian030601"},"content":"     * it gets an acceptable date/time from the user. If the user inserts acceptable inputs,","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"Brian030601"},"content":"     * the event will be added. If the user doesn\u0027t, either one of DateTimeParseException","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"Brian030601"},"content":"     * or Invalid input exception.","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"Brian030601"},"content":"     * @param scanner is used to get user\u0027s event name.","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"Brian030601"},"content":"     * @param eventList is used to add an event to the list.","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"Brian030601"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"Brian030601"},"content":"    public void executeBeginnerMode(Scanner scanner, EventList eventList) {","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"Brian030601"},"content":"        System.out.print(\"What\u0027s the event?: \");","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Brian030601"},"content":"        String eventName \u003d scanner.nextLine();","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"Brian030601"},"content":"        // checks if the acceptable format is given by the user to prevent program crash","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"Brian030601"},"content":"        LocalDateTime startTime \u003d parseDateTimeInput(scanner,","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"Brian030601"},"content":"                \"When does it start? (yyyy-MM-ddTHH:mm:ss) (e.g., 2023-12-20T12:30:30): \");","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"Brian030601"},"content":"        LocalDateTime endTime \u003d parseDateTimeInput(scanner,","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"Brian030601"},"content":"                \"When does it end? (yyyy-MM-ddTHH:mm:ss) (e.g., 2023-12-20T12:30:30): \");","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Brian030601"},"content":"        if (endTime.isAfter(startTime)) {","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"Brian030601"},"content":"            Event event \u003d new Event(eventName, startTime, endTime);","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Brian030601"},"content":"            eventList.addEvent(event);","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"    \" + event + \" has been added to your Calendar\");","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"Brian030601"},"content":"        } else {","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"    End time is before or equal to the start time. Please enter the correct end time.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"Cheezeblokz"},"content":"    //@@author Cheezeblokz","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"Cheezeblokz"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"Cheezeblokz"},"content":"    protected void executeExpertMode(Scanner scanner, EventList eventList) {","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"Cheezeblokz"},"content":"        String[] commandParts \u003d input.split(\" \");","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"Cheezeblokz"},"content":"        String eventName \u003d commandParts[2];","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"Cheezeblokz"},"content":"        try {","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"Cheezeblokz"},"content":"            LocalDateTime startTime \u003d LocalDateTime.parse(commandParts[3]);","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"Cheezeblokz"},"content":"            LocalDateTime endTime \u003d LocalDateTime.parse(commandParts[4]);","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"Cheezeblokz"},"content":"            if (endTime.isAfter(startTime)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"Cheezeblokz"},"content":"                Event event \u003d new Event(eventName, startTime, endTime);","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"Cheezeblokz"},"content":"                eventList.addEvent(event);","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"Cheezeblokz"},"content":"                System.out.println(\"    \" + event + \" has been added to your Calendar\");","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"Cheezeblokz"},"content":"            } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"Cheezeblokz"},"content":"                System.out.println(\"    End time is before or equal to the start time. \" +","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"Cheezeblokz"},"content":"                        \"Please enter the correct end time.\");","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"Cheezeblokz"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"Cheezeblokz"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"Cheezeblokz"},"content":"            System.out.println(\"    Invalid date and time format. Please try again.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"Cheezeblokz"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"Brian030601"},"content":"    //@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"Brian030601"},"content":"     * The parseDateTimeInput takes two parameters (Scanner , String) and through those parameters","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"Brian030601"},"content":"     * the method gets user\u0027s input. Using exception handling of LocalDateTime, the user checks if the","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"Brian030601"},"content":"     * input is in correct date/time format. If it is not in the specified \"yyyy-MM-ddTHH:mm:ss\" format","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"Brian030601"},"content":"     * the method will throw DateTimeParseException. If it is in right format, the method will return","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"Brian030601"},"content":"     * the input when it is called.","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"Brian030601"},"content":"     * @param scanner is used to get user\u0027s date/time input.","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"Brian030601"},"content":"     * @param prompt is given to instruct the user on an acceptable date/time format.","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"Brian030601"},"content":"     * @return returns an acceptable time/date input.","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"Brian030601"},"content":"    private LocalDateTime parseDateTimeInput(Scanner scanner, String prompt) {","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"Brian030601"},"content":"        while (true) {","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"Brian030601"},"content":"            System.out.print(prompt);","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"Brian030601"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"Brian030601"},"content":"            try {","lastModifiedDate":"2023-11-06"},{"lineNumber":97,"author":{"gitId":"Brian030601"},"content":"                // checks if the acceptable format is given by the user to prevent program crash","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"Brian030601"},"content":"                return LocalDateTime.parse(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"Brian030601"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":100,"author":{"gitId":"Brian030601"},"content":"                System.out.println(\"    Invalid date and time format. Please try again.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":101,"author":{"gitId":"Brian030601"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":102,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":103,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Cheezeblokz":31,"Brian030601":73}},{"path":"src/main/java/seedu/duke/calendar/command/AddGoalEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cheezeblokz"},"content":"//@@author Cheezeblokz","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"Cheezeblokz"},"content":"package seedu.duke.calendar.command;","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"Cheezeblokz"},"content":"import seedu.duke.calendar.Event;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"Cheezeblokz"},"content":"import seedu.duke.calendar.EventList;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"Cheezeblokz"},"content":"import seedu.duke.calendar.Goal;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"Cheezeblokz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"Cheezeblokz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"Cheezeblokz"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"Cheezeblokz"},"content":"public class AddGoalEventCommand extends DualEventCommand{","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"Cheezeblokz"},"content":"    public AddGoalEventCommand(String input) {","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"Cheezeblokz"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"Cheezeblokz"},"content":"        beginnerCommandLength \u003d 3;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"Cheezeblokz"},"content":"        expertCommandLength \u003d 6;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"Cheezeblokz"},"content":"        syntaxString \u003d \"add goal event GOAL_NAME GOAL_END_DATE (in format yyyy-mm-ddThh:mm:ss) FLASHCARD_GOAL_NUMBER\";","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"Cheezeblokz"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"Cheezeblokz"},"content":"    public void executeBeginnerMode(Scanner scanner, EventList eventList) {","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"Cheezeblokz"},"content":"        System.out.print(\"What\u0027s the goal event name?: \");","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"Cheezeblokz"},"content":"        String eventName \u003d scanner.nextLine();","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"Cheezeblokz"},"content":"        LocalDateTime endTime \u003d parseDateTimeInput(scanner,","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"Cheezeblokz"},"content":"                \"What is the deadline? (yyyy-MM-ddTHH:mm:ss) (e.g., 2023-12-20T12:30:30): \");","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"Cheezeblokz"},"content":"        int goal \u003d parseIntegerInput(scanner,","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"Cheezeblokz"},"content":"                \"How many flashcard to review by then?: \");","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"Cheezeblokz"},"content":"        if (endTime.isAfter(LocalDateTime.now())) {","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"Cheezeblokz"},"content":"            Event event \u003d new Goal(eventName, endTime, goal, 0);","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"Cheezeblokz"},"content":"            eventList.addEvent(event);","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"Cheezeblokz"},"content":"            System.out.println(event + \" has been added to your Calendar\");","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"Cheezeblokz"},"content":"        } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"Cheezeblokz"},"content":"            System.out.println(\"    End time is before the current time. Please enter the correct end time.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"Cheezeblokz"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"Cheezeblokz"},"content":"    //@@author Cheezeblokz","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"Cheezeblokz"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"Cheezeblokz"},"content":"    protected void executeExpertMode(Scanner scanner, EventList eventList) {","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"Cheezeblokz"},"content":"        String[] commandParts \u003d input.split(\" \");","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"Cheezeblokz"},"content":"        String eventName \u003d commandParts[3];","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"Cheezeblokz"},"content":"        try {","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"Cheezeblokz"},"content":"            LocalDateTime endTime \u003d LocalDateTime.parse(commandParts[4]);","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"Cheezeblokz"},"content":"            int goal \u003d Integer.parseInt(commandParts[5]);","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"Cheezeblokz"},"content":"            if (endTime.isAfter(LocalDateTime.now())) {","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"Cheezeblokz"},"content":"                Event event \u003d new Goal(eventName, endTime, goal, 0);","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"Cheezeblokz"},"content":"                eventList.addEvent(event);","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"Cheezeblokz"},"content":"                System.out.println(event + \" has been added to your Calendar\");","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"Cheezeblokz"},"content":"            } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"Cheezeblokz"},"content":"                System.out.println(\"    End time is before the current time. Please enter the correct end time.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"Cheezeblokz"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"Cheezeblokz"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"Cheezeblokz"},"content":"            System.out.println(\"    Invalid date and time format. Please try again.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"Cheezeblokz"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"Cheezeblokz"},"content":"            System.out.println(\"    Invalid integer input. Please try again.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"Cheezeblokz"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"Cheezeblokz"},"content":"    private int parseIntegerInput(Scanner scanner, String prompt) {","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"Cheezeblokz"},"content":"        while (true) {","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"Cheezeblokz"},"content":"            System.out.print(prompt);","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"Cheezeblokz"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"Cheezeblokz"},"content":"            try {","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"Cheezeblokz"},"content":"                // checks if the acceptable format is given by the user to prevent program crash","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"Cheezeblokz"},"content":"                return Integer.parseInt(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"Cheezeblokz"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"Cheezeblokz"},"content":"                System.out.println(\"    Invalid integer input. Please try again.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"Cheezeblokz"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"Cheezeblokz"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"Brian030601"},"content":"    //@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"Brian030601"},"content":"     * The parseDateTimeInput takes two parameters (Scanner , String) and through those parameters","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"Brian030601"},"content":"     * the method gets user\u0027s input. Using exception handling of LocalDateTime, the user checks if the","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"Brian030601"},"content":"     * input is in correct date/time format. If it is not in the specified \"yyyy-MM-ddTHH:mm:ss\" format","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"Brian030601"},"content":"     * the method will throw DateTimeParseException. If it is in right format, the method will return","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"Brian030601"},"content":"     * the input when it is called.","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"Brian030601"},"content":"     * @param scanner is used to get user\u0027s date/time input.","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"Brian030601"},"content":"     * @param prompt is given to instruct the user on an acceptable date/time format.","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"Brian030601"},"content":"     * @return returns an acceptable time/date input.","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"Brian030601"},"content":"    private LocalDateTime parseDateTimeInput(Scanner scanner, String prompt) {","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"Brian030601"},"content":"        while (true) {","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"Brian030601"},"content":"            System.out.print(prompt);","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"Brian030601"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"Brian030601"},"content":"            try {","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"Brian030601"},"content":"                // checks if the acceptable format is given by the user to prevent program crash","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"Brian030601"},"content":"                return LocalDateTime.parse(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"Brian030601"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"Brian030601"},"content":"                System.out.println(\"    Invalid date and time format. Please try again.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"Brian030601"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"Cheezeblokz":74,"Brian030601":25}},{"path":"src/main/java/seedu/duke/calendar/command/DeleteAllEventsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar.command;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.EventList;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"public class DeleteAllEventsCommand extends EventCommand {","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"    //@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"     * The execute method is used to delete all events from the EventList. The method takes two","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"Brian030601"},"content":"     * parameters (Scanner , EventList). However, scanner is not used here. It\u0027s given because","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"     * of the abstract class. The EventList is used to clear the list.","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"Brian030601"},"content":"     * @param scanner is not used. Given due to the abstract class","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"Brian030601"},"content":"     * @param eventList is used to delete all events in the EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"Brian030601"},"content":"    public void execute(Scanner scanner, EventList eventList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"Brian030601"},"content":"        eventList.deleteAllEvents();","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"Brian030601"},"content":"        System.out.println(\"    All your events have been successfully \" +","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"Brian030601"},"content":"                \"deleted from the Calendar.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"Brian030601":26}},{"path":"src/main/java/seedu/duke/calendar/command/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar.command;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.EventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"public class DeleteEventCommand extends DualEventCommand {","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"    public DeleteEventCommand(String input) {","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"        beginnerCommandLength \u003d 2;","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"Brian030601"},"content":"        expertCommandLength \u003d 3;","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"        syntaxString \u003d \"delete event EVENT_NAME\";","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"Brian030601"},"content":"    //@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"Brian030601"},"content":"     * The execute method is used to delete a specified event from the EventList.","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"Brian030601"},"content":"     * It takes two parameters (Scanner , EventList). The method takes in the event name,","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"Brian030601"},"content":"     * then calls the deleteEvent function to search and delete the event.","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"Brian030601"},"content":"     * If the event is not in the EventList, then \"event doesn\u0027t exist\" message will be displayed.","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"Brian030601"},"content":"     * @param scanner is used to get user\u0027s desired event to be deleted.","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"Brian030601"},"content":"     * @param eventList is used to delete the specified event from the EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"Brian030601"},"content":"    @Override","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"Brian030601"},"content":"    protected void executeBeginnerMode(Scanner scanner, EventList eventList) {","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"Brian030601"},"content":"        int size;","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"Brian030601"},"content":"        System.out.print(\"Enter the event name: \");","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Brian030601"},"content":"        String eventName \u003d scanner.nextLine();","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"Brian030601"},"content":"        size \u003d eventList.deleteEvent(eventName);","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"Brian030601"},"content":"        if (size \u003e eventList.getSize()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"    \" + eventName + \" has been deleted from your Calendar!\");","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"Brian030601"},"content":"        } else if (size !\u003d 0 \u0026\u0026 size \u003d\u003d eventList.getSize()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"    \" + eventName + \" doesn\u0027t exist in your Calendar!\");","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"Cheezeblokz"},"content":"    //@@author Cheezeblokz","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"Cheezeblokz"},"content":"    @Override","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"Cheezeblokz"},"content":"    protected void executeExpertMode(Scanner scanner, EventList eventList) {","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"Cheezeblokz"},"content":"        String[] commandParts \u003d input.split(\" \");","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"Cheezeblokz"},"content":"        String eventName \u003d commandParts[2];","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"Cheezeblokz"},"content":"        int size \u003d eventList.deleteEvent(eventName);","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"Cheezeblokz"},"content":"        if (size \u003e eventList.getSize()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"Cheezeblokz"},"content":"            System.out.println(\"    \" + eventName + \" has been deleted from your Calendar!\");","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"Cheezeblokz"},"content":"        } else if (size !\u003d 0 \u0026\u0026 size \u003d\u003d eventList.getSize()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"Cheezeblokz"},"content":"            System.out.println(\"    \" + eventName + \" doesn\u0027t exist in your Calendar!\");","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"Cheezeblokz"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"Cheezeblokz"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Cheezeblokz":15,"Brian030601":42}},{"path":"src/main/java/seedu/duke/calendar/command/EventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar.command;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.EventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"public abstract class EventCommand {","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"    //@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"     * The execute method is an abstract class that must be implemented by","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"     * its children classes. That way, its children will be able to execute","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"Brian030601"},"content":"     * necessary functions.","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"     * @param scanner is used to get user\u0027s input.","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"Brian030601"},"content":"     * @param eventList is used to access EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"Brian030601"},"content":"    public abstract void execute(Scanner scanner, EventList eventList);","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Brian030601":20}},{"path":"src/main/java/seedu/duke/calendar/command/FindEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar.command;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.EventList;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"public class FindEventCommand extends DualEventCommand {","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"Cheezeblokz"},"content":"    //@@author Cheezeblokz","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"Cheezeblokz"},"content":"    public FindEventCommand(String input) {","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"Cheezeblokz"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"Cheezeblokz"},"content":"        beginnerCommandLength \u003d 2;","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"Cheezeblokz"},"content":"        expertCommandLength \u003d 3;","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"Cheezeblokz"},"content":"        syntaxString \u003d \"find event EVENT_NAME\";","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"Brian030601"},"content":"    //@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"Brian030601"},"content":"     * The execute method is to search and find an event from the EventList. The method has two","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"Brian030601"},"content":"     * parameters (Scanner , EventList). Scanner takes the name of the event that the user","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"Brian030601"},"content":"     * wants to find. EventList is accessed to search the event from the list. If the given","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"Brian030601"},"content":"     * input or part of it is not in the event list, \"no such event\" message will be displayed.","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"Brian030601"},"content":"     * @param scanner is used to get user\u0027s input on what event to search for.","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"Brian030601"},"content":"     * @param eventList is used to access EventList and find the specified event.","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"Brian030601"},"content":"    @Override","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"Brian030601"},"content":"    protected void executeBeginnerMode(Scanner scanner, EventList eventList) {","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"Brian030601"},"content":"        System.out.print(\"What event are you looking for?: \");","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"Brian030601"},"content":"        String eventName \u003d scanner.nextLine();","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"Brian030601"},"content":"        int count \u003d eventList.findEvent(eventName);","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"Brian030601"},"content":"        if (count \u003e 0) {","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"    These events have been found\");","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"Brian030601"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"    No such event found\");","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"Cheezeblokz"},"content":"    //@@author Cheezeblokz","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"Cheezeblokz"},"content":"    @Override","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"Cheezeblokz"},"content":"    protected void executeExpertMode(Scanner scanner, EventList eventList) {","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"Cheezeblokz"},"content":"        String[] commandParts \u003d input.split(\" \");","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"Cheezeblokz"},"content":"        String eventName \u003d commandParts[2];","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"Cheezeblokz"},"content":"        int count \u003d eventList.findEvent(eventName);","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"Cheezeblokz"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"Cheezeblokz"},"content":"        if (count \u003e 0) {","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"Cheezeblokz"},"content":"            System.out.println(\"    These events have been found\");","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"Cheezeblokz"},"content":"        } else {","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"Cheezeblokz"},"content":"            System.out.println(\"    No such event found\");","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"Cheezeblokz"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"Cheezeblokz"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"Cheezeblokz"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"Cheezeblokz":25,"Brian030601":35}},{"path":"src/main/java/seedu/duke/calendar/command/ListCalendarEventsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar.command;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.Event;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.EventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"public class ListCalendarEventsCommand extends EventCommand{","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"    //@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"Brian030601"},"content":"     * The execute method is used to list all the events in the EventList. The method","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"     * has two parameters (Scanner , EventList). The scanner doesn\u0027t do anything here","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"Brian030601"},"content":"     * but is given due to the abstract class. EventList is used for getting access to","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"Brian030601"},"content":"     * all the events in the list. If the EventList is empty, \"The Calendar is empty\"","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"Brian030601"},"content":"     * message will be displayed.","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"Brian030601"},"content":"     * @param scanner is not used. Given due to the abstract class","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"Brian030601"},"content":"     * @param eventList is used to access EventList.","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"Brian030601"},"content":"    public void execute(Scanner scanner, EventList eventList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Brian030601"},"content":"        if (eventList.getSize() \u003e 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"    Here is a list of all your events: \");","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Brian030601"},"content":"            printLine();","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Brian030601"},"content":"            int count \u003d 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"Brian030601"},"content":"            for (Event event : eventList.getEvents()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"Brian030601"},"content":"                System.out.println((++count) + \". \" + event);","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"Brian030601"},"content":"                printLine();","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Brian030601"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Brian030601"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"Brian030601"},"content":"            System.out.println(\"    The Calendar is empty\");","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"Brian030601"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Brian030601"},"content":"    public void printLine() {","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Brian030601"},"content":"        System.out.println(\"-\".repeat(80));","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Brian030601":41}},{"path":"src/main/java/seedu/duke/calendar/command/UnknownCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar.command;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"import seedu.duke.calendar.EventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"public class UnknownCommand extends EventCommand{","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"    //@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"Brian030601"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"Brian030601"},"content":"     * The execute method prints an unknown command message when an unknown command","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"Brian030601"},"content":"     * is entered by the user. The two parameters (Scanner , EventList) are not","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"Brian030601"},"content":"     * user by the method. But its there due to the abstract class.","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"Brian030601"},"content":"     * @param scanner is not used. Given due to the abstract class","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"Brian030601"},"content":"     * @param eventList is not used. Given due to the abstract class","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"Brian030601"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"Brian030601"},"content":"    public void execute(Scanner scanner, EventList eventList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Brian030601"},"content":"        System.out.println(\"Unknown command! Please enter a valid command.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Brian030601":23}},{"path":"src/main/java/seedu/duke/calendar/exceptions/AddEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar.exceptions;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"/**","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":" * The AddEventException class is used for handling exceptions related with adding an event","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":" */","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"public class AddEventException extends Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"Brian030601":11}},{"path":"src/main/java/seedu/duke/calendar/exceptions/DeleteAllException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar.exceptions;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"/**","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":" * The DeleteAllException class is used for handling exceptions related with deleting all events.","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":" */","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"public class DeleteAllException extends Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"Brian030601":11}},{"path":"src/main/java/seedu/duke/calendar/exceptions/DeleteEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar.exceptions;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"/**","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":" * The DeleteEventException class is used for handling exceptions related with deleting an event","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":" */","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"public class DeleteEventException extends Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"Brian030601":11}},{"path":"src/main/java/seedu/duke/calendar/exceptions/FindEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar.exceptions;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"/**","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":" * The FindEventException class is used for handling exceptions related with finding an event.","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":" */","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"public class FindEventException extends Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"Brian030601":11}},{"path":"src/main/java/seedu/duke/calendar/exceptions/ListEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Brian030601"},"content":"//@@author Brian030601","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"Brian030601"},"content":"package seedu.duke.calendar.exceptions;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"Brian030601"},"content":"/**","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"Brian030601"},"content":" * The ListEventException class is used for handling exceptions related with listing events.","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"Brian030601"},"content":" */","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"Brian030601"},"content":"public class ListEventException extends Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"Brian030601"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"Brian030601":11}},{"path":"src/main/java/seedu/duke/flashcard/Flashcard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":" * Represents a flashcard with its associated front and back text as well as","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":" * its id and current difficulty.","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"public class Flashcard {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"    private static int globalMaxId \u003d 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"    private String frontText;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"    private String backText;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"    private int id;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"    private int difficulty;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"     * Instantiates and returns a flashcard with the given front and back text.","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"     * Its id and difficulty (which is 5) are automatically set.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param frontText The text on the front of the flashcard.","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param backText The text on the back of the flashcard.","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"    public Flashcard(String frontText, String backText) {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"        this.frontText \u003d frontText;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"        this.backText \u003d backText;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"        difficulty \u003d 5;  // initial difficulty of a flashcard","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"        globalMaxId +\u003d 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"        id \u003d globalMaxId;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"        assert globalMaxId \u003e\u003d id : \"No id must be bigger than globalMaxId\";","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"     * Updates globalMaxId to be greater than the id of all passed flashcards.","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList List of flashcard to calculate the max id over.","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"    public static void calculateAndUpdateGlobalMaxId(","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"            FlashcardList flashcardList) {","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"        int currentMax \u003d 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"        for (Flashcard flashcard : flashcardList.getFlashcards()){","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"            if (flashcard.getId() \u003e currentMax) {","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"                currentMax \u003d flashcard.getId();","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"        globalMaxId \u003d currentMax;","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"    public int getId() {","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"        return id;","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"junhyeong0411"},"content":"    //@@author junhyeong0411","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"junhyeong0411"},"content":"    public void setId (int id) {","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"junhyeong0411"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"junhyeong0411"},"content":"    public String getFrontText() {","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"junhyeong0411"},"content":"        return frontText;","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"junhyeong0411"},"content":"    public void setDifficulty(int difficulty) {","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"junhyeong0411"},"content":"        this.difficulty \u003d difficulty;","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"junhyeong0411"},"content":"    public String getBackText() {","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"junhyeong0411"},"content":"        return backText;","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"    //@@author wendelinwemhoener","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"     * Returns a string representation of this flashcard.","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return Front and back text as well as id and difficulty.","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"        return \"front text: \" + frontText + System.lineSeparator()","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"                + \"back text: \" + backText + System.lineSeparator()","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"                + \"id: \" + id + System.lineSeparator()","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"wendelinwemhoener"},"content":"                + \"difficulty: \" + difficulty + System.lineSeparator();","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"wendelinwemhoener"},"content":"     * Adjusts (increases) the difficulty of this flashcard.","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param difficultyChange The amount to increase the difficulty by.","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"wendelinwemhoener"},"content":"    public void applyDifficultyChange(int difficultyChange) {","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"wendelinwemhoener"},"content":"        difficulty +\u003d difficultyChange;","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"wendelinwemhoener"},"content":"    public int getDifficulty() {","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"wendelinwemhoener"},"content":"        return difficulty;","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":82,"junhyeong0411":18}},{"path":"src/main/java/seedu/duke/flashcard/FlashcardCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.calendar.Calendar;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.FlashcardCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.CreateFlashcardCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.ListFlashcardsCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.StartReviewCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.DeleteAllFlashcardsCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.DeleteFlashcardCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.UnknownCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":" * Parses input entered by the user into a FlashcardCommand for further","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":" * processing.","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"public class FlashcardCommandParser {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"    private Logger logger;","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"     * Returns the FlashcardCommand corresponding to the passed input.","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param input The text inputted by the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return The FlashcardCommand corresponding to input","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"    public FlashcardCommand parseInput(String input, Calendar calendar) {","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"        assert input !\u003d null : \"input must not be null\";","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"        logger \u003d Logger.getLogger(\"FlashcardCommandParser\");","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"        input \u003d input.toLowerCase().strip();","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"        logger.log(Level.INFO, \"trying to find matching FlashcardCommand\");","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"        if (input.equals(\"create flashcard\")) {","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"            return new CreateFlashcardCommand();","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (input.equals(\"list flashcards\")) {","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"            return new ListFlashcardsCommand();","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (input.startsWith(\"review flashcards\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"            String[] commandParts \u003d input.split(\" \");","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"            if (commandParts[0].equals(\"review\") \u0026\u0026 commandParts[1].equals(","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"                    \"flashcards\")) {","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"                return new StartReviewCommand(input, calendar);","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (input.equals(\"delete all flashcards\")) {","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"            return new DeleteAllFlashcardsCommand();","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (input.startsWith(\"delete flashcard\")) {","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"            String[] commandParts \u003d input.split(\" \");","lastModifiedDate":"2023-11-14"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"            if (commandParts[0].equals(\"delete\") \u0026\u0026 commandParts[1].equals(","lastModifiedDate":"2023-11-14"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"                    \"flashcard\")) {","lastModifiedDate":"2023-11-14"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"                return new DeleteFlashcardCommand(input);","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"        logger.log(Level.INFO, \"input doesn\u0027t match any know command\");","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"        return new UnknownCommand();","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":66}},{"path":"src/main/java/seedu/duke/flashcard/FlashcardComponent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.calendar.Calendar;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.FlashcardCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.UnknownCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.storage.FlashcardDirectory;","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.storage.FlashcardStorage;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":" * Encapsulates all classes needed for the flashcard functionality and","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":" * allows access to them via one unified API.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"public class FlashcardComponent {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"    private FlashcardCommandParser parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"    private FlashcardList flashcardList;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"    private FlashcardUi ui;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"    private FlashcardStorage storage;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"    private Calendar calendar;","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"    //@@author junhyeong0411","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"    public FlashcardComponent(Calendar calendar) {","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"        parser \u003d new FlashcardCommandParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"        FlashcardDirectory flashcarddirectory \u003d new FlashcardDirectory();","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"        flashcarddirectory.listFlashcardFiles();","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"        storage \u003d new FlashcardStorage(flashcarddirectory.defaultDirectory());","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"            flashcardList \u003d storage.loadFlashcards();","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"        } catch (FileNotFoundException e){","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"Making New file for Flashcards\");","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"            flashcardList \u003d new FlashcardList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"        Flashcard.calculateAndUpdateGlobalMaxId(flashcardList);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"        ui \u003d new FlashcardUi(flashcardList);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"        this.calendar \u003d calendar;","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"    public FlashcardStorage getStorage(){","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"        return this.storage;","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"    public FlashcardList getFlashcardList(){","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"        return this.flashcardList;","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"junhyeong0411"},"content":"     * get FlashcardUi method","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"junhyeong0411"},"content":"     * for test","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"junhyeong0411"},"content":"     * @return","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"junhyeong0411"},"content":"    public FlashcardUi getUi(){","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"junhyeong0411"},"content":"        return ui;","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"    //@@author wendelinwemhoener","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"     * Returns if FlashcardComponent is responsible for handling this input.","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param input The text inputted by the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return Whether FlashcardComponent is responsible for handling the input.","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"    public boolean isResponsible(String input) {","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"        assert input !\u003d null : \"input must not be null\";","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"        FlashcardCommand command \u003d parser.parseInput(input, calendar);","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"        if (command instanceof UnknownCommand) {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"        } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"     * Processes user input by parsing it and executing the resulting command.","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param input The text inputted by the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"wendelinwemhoener"},"content":"    public void processInput(String input) {","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"wendelinwemhoener"},"content":"        assert input !\u003d null : \"input must not be null\";","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"wendelinwemhoener"},"content":"        FlashcardCommand command \u003d parser.parseInput(input, calendar);","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"wendelinwemhoener"},"content":"        assert !(command instanceof UnknownCommand) : \"Command cannot be \" +","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"wendelinwemhoener"},"content":"                \"unknown\";","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"wendelinwemhoener"},"content":"        ui.executeCommand(command);","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"junhyeong0411"},"content":"        //@@author junhyeong0411","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"junhyeong0411"},"content":"        // save after every commands","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"junhyeong0411"},"content":"        storage.saveFlashcards(flashcardList.getFlashcards());","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":58,"junhyeong0411":42}},{"path":"src/main/java/seedu/duke/flashcard/FlashcardList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":" * Container class for a list of flashcards.","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":" * Exposes a simple, unified API for dealing with a list of flashcards.","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"public class FlashcardList {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"    private ArrayList\u003cFlashcard\u003e flashcards;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"    private Logger logger;","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"     * Instantiates and returns a FlashcardList holding the passed flashcards.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcards The flashcards to be contained by the FlashcardList.","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"    public FlashcardList(ArrayList\u003cFlashcard\u003e flashcards) {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"        this.flashcards \u003d flashcards;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"        logger \u003d Logger.getLogger(\"FlashcardUi\");","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"    public ArrayList\u003cFlashcard\u003e getFlashcards() {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"        return flashcards;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"     * Returns the amount of flashcards held by the FlashcardList.","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return The size of the FlashcardList.","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"    public int getSize(){","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"        return flashcards.size();","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"     * Adds a flashcard to the FlashcardList.","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcard The flashcard that shall be added.","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"    public void add(Flashcard flashcard) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"        flashcards.add(flashcard);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"     * Deletes all flashcards in the FlashcardList, effectively emptying it.","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"    public void deleteAllFlashcards() {","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"        logger.log(Level.INFO, \"clearing the list of flashcards\");","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"        flashcards.clear();","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"        assert flashcards.size() \u003d\u003d 0 : \"flashcardList should be empty now\";","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"     * Returns whether the FlashcardList contains any flashcards or not.","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return If the FlashcardList is empty.","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"        return flashcards.isEmpty();","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"     * Attempts to delete a flashcard by the passed id.","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"     * If no flashcard with the passed id exists, returns false.","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardId The id of the flashcard to delete.","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return Whether the deletion was successful (true if successful).","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"    public boolean deleteFlashcardById(int flashcardId) {","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"        logger.log(Level.INFO, \"trying to delete flashcard by id\");","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"        int indexToDeleteAt \u003d -1;","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"        for (int i \u003d 0; i \u003c flashcards.size(); i++) {","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"            if (flashcards.get(i).getId() \u003d\u003d flashcardId) {","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"wendelinwemhoener"},"content":"                indexToDeleteAt \u003d i;","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"wendelinwemhoener"},"content":"        if (indexToDeleteAt \u003d\u003d -1) {","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"wendelinwemhoener"},"content":"            logger.log(Level.INFO, \"deletion was unsuccessful\");","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"wendelinwemhoener"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"wendelinwemhoener"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"wendelinwemhoener"},"content":"            flashcards.remove(indexToDeleteAt);","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"wendelinwemhoener"},"content":"            logger.log(Level.INFO, \"successfully deleted flashcard\");","lastModifiedDate":"2023-11-13"},{"lineNumber":95,"author":{"gitId":"wendelinwemhoener"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":98}},{"path":"src/main/java/seedu/duke/flashcard/FlashcardUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.command.FlashcardCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":" * Responsible for interfacing with the user by managing the dispatching of","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":" * commands to be executed and show to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"public class FlashcardUi {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"    private FlashcardList flashcardList;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"    private Logger logger;","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"     * Instantiates and returns a new FlashcardUi.","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList The flashcards to be used for this Ui.","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"    public FlashcardUi(FlashcardList flashcardList) {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"        assert flashcardList !\u003d null : \"flashcardList cannot be null\";","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"        this.flashcardList \u003d flashcardList;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"        logger \u003d Logger.getLogger(\"FlashcardUi\");","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"     * Executes a command and provides it with the appropriate context.","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"     * This context consists of a scanner for handling input and a","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"     * FlashcardList to execute actions on.","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param command The command that shall be executed.","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"    public void executeCommand(FlashcardCommand command) {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"        logger.log(Level.INFO, \"executing the command\");","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"        command.execute(scanner, flashcardList);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"        logger.log(Level.INFO, \"execution of command finished\");","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"     * Set scanner method","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"     * for using bytearrayinputstream in test","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"    public void setScanner(Scanner scanner){","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"        this.scanner \u003d scanner;","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":58}},{"path":"src/main/java/seedu/duke/flashcard/command/CreateFlashcardCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.command;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.Flashcard;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":" * This command allows creating a new flashcard by inputting its front and","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":" * back text.","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"public class CreateFlashcardCommand extends FlashcardCommand {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"     * Creates a new flashcard.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"     * The user is asked to input the front and back text of the new","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"     * flashcard, and then it is added to the flashcardList.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner Scanner that allows handling user input.","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList Which flashcards to perform actions on.","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"    public void execute(Scanner scanner, FlashcardList flashcardList) {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"        assert scanner !\u003d null : \"Must be a valid Scanner instance\";","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"        assert flashcardList !\u003d null : \"Must be a valid FlashcardList \" +","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"                \"instance\";","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"        String frontPageText \u003d getInputUntilNonEmptyString(scanner, \"front\");","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"        String backPageText \u003d getInputUntilNonEmptyString(scanner, \"back\");","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"        Flashcard flashcard \u003d new Flashcard(frontPageText, backPageText);","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"        flashcardList.add(flashcard);","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println();","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Success! Flashcard has been added to your \" +","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"                \"collection.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"     * Gets a user input for a flashcard, making sure that it is non-empty.","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner To get user input.","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardSide Which side of the flashcard (front or back) is","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"     *                      targeted.","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return The user input for the specified flashcardSide.","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"    private String getInputUntilNonEmptyString(Scanner scanner,","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"                                               String flashcardSide) {","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.print(\"    Enter the \" + flashcardSide + \" page text: \");","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"        String text \u003d scanner.nextLine();","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"        while (text.strip().equals(\"\")) {","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"        Invalid input! The \" + flashcardSide +","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"                    \" text must contain at least one letter or digit!\");","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.print(\"    Enter the \" + flashcardSide","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"                    + \" page text: \");","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"            text \u003d scanner.nextLine();","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"        assert text !\u003d null : \"Must be a non-null string\";","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"        assert (!text.strip().equals(\"\")) : \"Must be a non-empty string\";","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"        return text;","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":66}},{"path":"src/main/java/seedu/duke/flashcard/command/DeleteAllFlashcardsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.command;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":" * This command allows deleting all current flashcards.","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"public class DeleteAllFlashcardsCommand extends FlashcardCommand {","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"     * Deletes all flashcards from the flashcardList.","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner Scanner that allows handling user input.","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList Which flashcards to perform actions on.","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"    public void execute(Scanner scanner, FlashcardList flashcardList) {","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"        flashcardList.deleteAllFlashcards();","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    All your flashcards have been successfully \" +","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"                \"deleted.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"        assert flashcardList.isEmpty() : \"flashcardList must be empty\";","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"wendelinwemhoener":25}},{"path":"src/main/java/seedu/duke/flashcard/command/DeleteFlashcardCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.command;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.exceptions.InvalidFlashcardIdException;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":" * This command allows deleting a specific flashcard (by its id).","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"public class DeleteFlashcardCommand extends DualFlashcardCommand {","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"    public DeleteFlashcardCommand(String input) {","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"        beginnerCommandLength \u003d 2;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"        expertCommandLength \u003d 3;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"        syntaxString \u003d \"delete flashcard FLASHCARD_ID\";","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"     * Starts an interactive process for deleting a flashcard by its id.","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"     * The user is prompted to enter the id; and then it is deleted.","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner Scanner for getting user input.","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList FlashcardList from which to delete.","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"    protected void executeBeginnerMode(Scanner scanner,","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"                                    FlashcardList flashcardList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"        assert flashcardList !\u003d null : \"Must be a valid flashcardList \" +","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"                \"instance\";","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.print(\"    Enter id of the flashcard you want to \" +","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"                \"delete: \");","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"        int flashcardId;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"            flashcardId \u003d Integer.parseInt(input);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Invalid input! Id must be an integer\");","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"            return;","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"        tryDeleteFlashcardById(flashcardId, flashcardList);","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"     * Tries to delete a flashcard given its id and prints whether it worked.","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardId The id of the flashcard to delete.","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList The list of flashcards to operate on.","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"    public void tryDeleteFlashcardById(int flashcardId,","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"                                       FlashcardList flashcardList) {","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"        try {","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"            deleteFlashcardById(flashcardId, flashcardList);","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"        } catch (InvalidFlashcardIdException e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Couldn\u0027t find a flashcard with id \"","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"                    + flashcardId);","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    No deletion has been performed. Please \"","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"                    + \"try again with a valid id.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"     * Allows deleting a flashcard whose id has already been inputted.","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner Scanner for getting user input.","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList FlashcardList from which to delete.","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"    protected void executeExpertMode(Scanner scanner,","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"                                  FlashcardList flashcardList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"        assert flashcardList !\u003d null : \"Must be a valid flashcardList \" +","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"                \"instance\";","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"        String[] commandParts \u003d input.split(\" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"        assert commandParts.length !\u003d 0 : \"must contain command parts\";","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"            int flashcardId \u003d Integer.parseInt(commandParts[2]);","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"            tryDeleteFlashcardById(flashcardId, flashcardList);","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Invalid id! Id must be an integer\");","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"wendelinwemhoener"},"content":"     * Tries to delete a flashcard by id.","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"wendelinwemhoener"},"content":"     * If the deletion is successful, a success message is printed;","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"wendelinwemhoener"},"content":"     * otherwise, an exception is thrown.","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardId The id of the flashcard to delete.","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList The list of all known flashcards.","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"wendelinwemhoener"},"content":"     * @throws InvalidFlashcardIdException if flashcardId is invalid.","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"wendelinwemhoener"},"content":"    private void deleteFlashcardById(int flashcardId,","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"wendelinwemhoener"},"content":"                                     FlashcardList flashcardList)","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"wendelinwemhoener"},"content":"            throws InvalidFlashcardIdException {","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"wendelinwemhoener"},"content":"        boolean deletionWasSuccessful \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"wendelinwemhoener"},"content":"                flashcardList.deleteFlashcardById(flashcardId);","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"wendelinwemhoener"},"content":"        if (deletionWasSuccessful) {","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Flashcard with id \" + flashcardId","lastModifiedDate":"2023-11-12"},{"lineNumber":107,"author":{"gitId":"wendelinwemhoener"},"content":"                    + \" has been successfully deleted.\");","lastModifiedDate":"2023-11-12"},{"lineNumber":108,"author":{"gitId":"wendelinwemhoener"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"wendelinwemhoener"},"content":"            throw new InvalidFlashcardIdException();","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"wendelinwemhoener":112}},{"path":"src/main/java/seedu/duke/flashcard/command/DualFlashcardCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.command;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":" * This class allows creating commands that can be invoked in two ways: the","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":" * beginner mode or the expert mode.","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":" *","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":" * The beginner mode interactively prompts the user to enter his data; i.e.","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":" * first the user enters the command name, and then the command prompts him","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":" * to enter the additional pieces of information required (i.e. which review","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":" * mode to choose). Thus, the user is guided through the choices he has to","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":" * make.","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":" *","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":" * The expert mode allows the user to enter all information at once in a","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":" * single line. This speeds the process up, but provides the user with less","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":" * guidance and is thus harder.","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":" *","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":" * In order to accommodate for both modes and thus allow users to decide","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":" * whether they want to take the slower, but easier approach or rather the","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":" * faster, but harder approach, DualFlashcardCommand allows implementing","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":" * both modes so that users can simply choose.","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":" *","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":" * The developer has to implement the executeBeginnerMode and the","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":" * executeExpertMode methods to implement beginner mode and expert mode,","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":" * respectively.","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"public abstract class DualFlashcardCommand extends FlashcardCommand {","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"    protected int beginnerCommandLength;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"    protected int expertCommandLength;","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"    protected String input;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"    protected String syntaxString;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"     * Allows implementing the beginner mode (with interactive input).","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner To get user input.","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList The flashcards to operate on.","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"    protected abstract void executeBeginnerMode(Scanner scanner,","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"                                                FlashcardList flashcardList);","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"     * Allows implementing the expert mode (with one-line input).","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner To get user input.","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList The flashcards to operate on.","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"    protected abstract void executeExpertMode(Scanner scanner,","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"                                         FlashcardList flashcardList);","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"     * Decides whether to use beginner or expert mode and executes it.","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"     * This decision is based on the length of the inputted command: it is","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"     * compared to the length of the input for both beginner and expert mode","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"     * and then the appropriate method is executed.","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner Scanner that allows handling user input.","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList Which flashcards to perform actions on.","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"    public void execute(Scanner scanner, FlashcardList flashcardList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"        String[] commandParts \u003d input.split(\" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"        assert commandParts !\u003d null : \"must contain values\";","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"        if (commandParts.length \u003d\u003d beginnerCommandLength) {","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"            executeBeginnerMode(scanner, flashcardList);","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (commandParts.length \u003d\u003d expertCommandLength) {","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"            executeExpertMode(scanner, flashcardList);","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Invalid syntax! The syntax is \u0027\"","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"                    + syntaxString + \"\u0027\");","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Please try again.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"wendelinwemhoener":81}},{"path":"src/main/java/seedu/duke/flashcard/command/FlashcardCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.command;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":" * Abstract class that provides the interface for executing commands by using","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":" * a Scanner for input and a FlashcardList to perform actions on as command","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":" * execution context.","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"public abstract class FlashcardCommand {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"     * Executes a command, given the appropriate context.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"     * This context consists of a scanner for handling input and a","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"     * FlashcardList to execute actions on.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner Scanner that allows handling user input.","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList Which flashcards to perform actions on.","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"    public abstract void execute(Scanner scanner, FlashcardList flashcardList);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":24}},{"path":"src/main/java/seedu/duke/flashcard/command/ListFlashcardsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.command;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.Flashcard;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":" * This command allows listing all current flashcards.","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"public class ListFlashcardsCommand extends FlashcardCommand {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"     * Prints out a list of all current flashcards.","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"     * Handles the scenario that there are no flashcards by printing an","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"     * appropriate \"You dont\u0027t have any flashcards yet!\" message.","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner Scanner that allows handling user input.","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList Which flashcards to perform actions on.","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"    public void execute(Scanner scanner, FlashcardList flashcardList) {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"        if (flashcardList.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    You dont\u0027t have any flashcards yet! \");","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"            return;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"        assert flashcardList.isEmpty() \u003d\u003d false : \"must contain flashcards\";","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Here is a list of all your flashcards: \");","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println();","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"-\".repeat(80));","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"        for (Flashcard flashcard : flashcardList.getFlashcards()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.print(flashcard);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"-\".repeat(80));","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println();","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Those were all your flashcards.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":42}},{"path":"src/main/java/seedu/duke/flashcard/command/StartReviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.command;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.calendar.Calendar;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.exceptions.InvalidReviewModeException;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.review.RandomReviewMode;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.review.ReviewMode;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.review.SpacedRepetitionReviewMode;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":" * This command allows starting a flashcard review by either using beginner","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":" * or expert mode.","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":" *","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":" * Users get to choose from random review mode and spaced repetition review","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":" * mode.","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"public class StartReviewCommand extends DualFlashcardCommand {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"    private final ArrayList\u003cString\u003e choices \u003d new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"            \"a\", \"b\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"    private Calendar calendar;","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"    public StartReviewCommand(String input, Calendar calendar) {","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"        this.calendar \u003d calendar;","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"        beginnerCommandLength \u003d 2;","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"        expertCommandLength \u003d 3;","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"        syntaxString \u003d \"review flashcards REVIEW_MODE\";","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"     * Returns the letter of the review mode chosen by the user.","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner To get input from the user.","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return The letter entered by the user to choose the review mode.","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"    private String getUserChoiceReviewMode(Scanner scanner) {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    How do you want to review your flashcards?\");","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"        a) random mode\");","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"        b) spaced repetition mode\");","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"     * Starts an interactive process to select and start a review mode.","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"     * The user is asked for the review mode he wants to use; and then the","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"     * respective review mode is started.","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner To get user input.","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList The flashcards to operate on.","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"    protected void executeBeginnerMode(Scanner scanner,","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"                                     FlashcardList flashcardList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"        assert scanner !\u003d null : \"Must be valid Scanner instance\";","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"        String choice \u003d getUserChoiceReviewMode(scanner);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"        while (!choices.contains(choice.toLowerCase())) {","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Invalid choice! Your choice must be a or \"","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"                    + \"b! Please try again.\");","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"            choice \u003d getUserChoiceReviewMode(scanner);","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"        startReview(scanner, flashcardList, choice);","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"     * Starts a review session in the review mode inputted by the user.","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"     * The user mode (a or b) is already passed as part of the","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"     * one-line-command used to start this review.","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner To get user input.","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList The flashcards to operate on.","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"    protected void executeExpertMode(Scanner scanner,","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"wendelinwemhoener"},"content":"                                     FlashcardList flashcardList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"wendelinwemhoener"},"content":"        String[] commandParts \u003d input.split(\" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"wendelinwemhoener"},"content":"        assert commandParts.length \u003e 0 : \"must contain values\";","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"wendelinwemhoener"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"wendelinwemhoener"},"content":"            String choice \u003d commandParts[2].toLowerCase();","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"wendelinwemhoener"},"content":"            if (!choices.contains(choice)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"wendelinwemhoener"},"content":"                throw new InvalidReviewModeException();","lastModifiedDate":"2023-11-13"},{"lineNumber":95,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"wendelinwemhoener"},"content":"            startReview(scanner, flashcardList, choice);","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"wendelinwemhoener"},"content":"        } catch (InvalidReviewModeException e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Invalid choice! Your choice must be a\"","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"wendelinwemhoener"},"content":"                    + \" or b! Please try again.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"wendelinwemhoener"},"content":"            return;","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"wendelinwemhoener"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Invalid syntax! The syntax is \u0027review \" +","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"wendelinwemhoener"},"content":"                    \"flashcards REVIEW_MODE\u0027\");","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Please try again.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":110,"author":{"gitId":"wendelinwemhoener"},"content":"     * Starts a flashcard review in the desired mode.","lastModifiedDate":"2023-11-12"},{"lineNumber":111,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":112,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner To get user input.","lastModifiedDate":"2023-11-12"},{"lineNumber":113,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList The flashcards from whom to pick.","lastModifiedDate":"2023-11-12"},{"lineNumber":114,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param choice Character indicating the desired review mode.","lastModifiedDate":"2023-11-12"},{"lineNumber":115,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":116,"author":{"gitId":"wendelinwemhoener"},"content":"    private void startReview(Scanner scanner,","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"wendelinwemhoener"},"content":"                             FlashcardList flashcardList,","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"wendelinwemhoener"},"content":"                             String choice) {","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"wendelinwemhoener"},"content":"        ReviewMode reviewMode \u003d createReviewMode(choice.toLowerCase(), flashcardList);","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"wendelinwemhoener"},"content":"        reviewMode.startReviewSession(scanner, calendar);","lastModifiedDate":"2023-11-12"},{"lineNumber":122,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":126,"author":{"gitId":"wendelinwemhoener"},"content":"     * Creates and returns an instance of the desired ReviewMode.","lastModifiedDate":"2023-11-12"},{"lineNumber":127,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":128,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param choice Whether it should be random or spaced repetition mode.","lastModifiedDate":"2023-11-12"},{"lineNumber":129,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList The flashcards on which the review should operate.","lastModifiedDate":"2023-11-12"},{"lineNumber":130,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return An instance of the desired review mode.","lastModifiedDate":"2023-11-12"},{"lineNumber":131,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":132,"author":{"gitId":"wendelinwemhoener"},"content":"    private ReviewMode createReviewMode(String choice, FlashcardList flashcardList) {","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"wendelinwemhoener"},"content":"        ReviewMode reviewMode \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"wendelinwemhoener"},"content":"        if (choice.equals(\"a\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"wendelinwemhoener"},"content":"            reviewMode \u003d new RandomReviewMode(flashcardList);","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"wendelinwemhoener"},"content":"        } else if (choice.equals(\"b\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"wendelinwemhoener"},"content":"            reviewMode \u003d new SpacedRepetitionReviewMode(flashcardList);","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"wendelinwemhoener"},"content":"        assert reviewMode !\u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"wendelinwemhoener"},"content":"        return reviewMode;","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":145}},{"path":"src/main/java/seedu/duke/flashcard/command/UnknownCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.command;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":" * This command represents an unknown command.","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"public class UnknownCommand extends FlashcardCommand {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"     * Prints an error message and returns.","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner Scanner that allows handling user input.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardList Which flashcards to perform actions on.","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"    public void execute(Scanner scanner, FlashcardList flashcardList) {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"Unknown command! Please try again.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wendelinwemhoener":22}},{"path":"src/main/java/seedu/duke/flashcard/exceptions/FlashcardException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.exceptions;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":" * Base class for all custom exceptions related to flashcards.","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"public class FlashcardException extends Exception {","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"wendelinwemhoener":9}},{"path":"src/main/java/seedu/duke/flashcard/exceptions/InvalidFlashcardIdException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.exceptions;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":" * Exception for when a flashcardId is not valid (i.e. no flashcard with","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":" * that id appears in the list of flashcards which are currently being","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":" * worked on).","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"public class InvalidFlashcardIdException extends FlashcardException {","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"wendelinwemhoener":11}},{"path":"src/main/java/seedu/duke/flashcard/exceptions/InvalidReviewModeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.exceptions;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":" * Exception for when the input for choosing a flashcard review mode is","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":" * incorrect.","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"public class InvalidReviewModeException extends FlashcardException {","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"wendelinwemhoener":10}},{"path":"src/main/java/seedu/duke/flashcard/review/RandomReviewMode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.review;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.Flashcard;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"import java.security.SecureRandom;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":" * Review mode that randomly picks flashcards to review.","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":" *","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":" * This mode doesn\u0027t allow adjusting the difficulty of the reviewed flashcards.","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":"public class RandomReviewMode extends ReviewMode {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":"    public RandomReviewMode(FlashcardList flashcardList) {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"        super(flashcardList);","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"     * Identifies the instance as a random review mode instance.","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return Textual description that this is the random review mode.","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"    public String getReviewModeName() {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"        return \"random review mode\";","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"     * Chooses a random flashcard to be reviewed next.","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return The next flashcard to review.","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"    protected Flashcard pickFlashcard() {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"        ArrayList\u003cFlashcard\u003e flashcards \u003d flashcardList.getFlashcards();","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"        SecureRandom random \u003d new SecureRandom();","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"        assert random !\u003d null : \"must be valid SecureRandom instance\";","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"        return flashcards.get(random.nextInt(flashcards.size()));","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"wendelinwemhoener":44}},{"path":"src/main/java/seedu/duke/flashcard/review/ReviewMode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.review;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.calendar.Calendar;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.Flashcard;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":" * Base class for implementing different kinds of flashcard reviews.","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":" *","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":" * Provides functionalities to easily review flashcards that can be used by","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":" * subclasses as building blocks to implement specific kinds (e.g. random or","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":" * difficulty-based) reviews.","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"public abstract class ReviewMode {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"    protected FlashcardList flashcardList;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"    public ReviewMode(FlashcardList flashcardList) {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"        assert flashcardList !\u003d null : \"flashcardList cannot be null\";","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"        this.flashcardList \u003d flashcardList;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"     * Abstract method to allow subclasses to identify themselves easily.","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return Textual description of what kind of review mode this class is.","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"    public abstract String getReviewModeName();","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"     * Starts and executes a flashcard review session.","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner For getting input from user.","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"    public void startReviewSession(Scanner scanner, Calendar calendar) {","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"        assert scanner !\u003d null : \"must be a valid Scanner instance\";","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    You have started a review session in \"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"                + getReviewModeName() + System.lineSeparator());","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"        if (flashcardList.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    You have no flashcards to review!\");","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Add some flashcards and try again.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"            return;","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"        while (true) {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"            Flashcard flashcardToReview \u003d pickFlashcard();","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"            printFlashcardFrontTextPrompt(flashcardToReview);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"            input \u003d input.toLowerCase();","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"            boolean shouldTerminate \u003d input.strip().equals(\"quit\")","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"                    || input.strip().equals(\"q\");","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"            if (shouldTerminate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"                break;","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    The actual back text is: \"","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"                    + flashcardToReview.getBackText());","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println();","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"            if (getReviewModeName().equals(\"spaced repetition mode\")) {","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"                letUserRateReviewDifficulty(scanner, flashcardToReview);","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"            calendar.incrementFlashcardCount();","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Success! You have ended this review session.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"wendelinwemhoener"},"content":"     * Allows subclasses to choose which flashcard to review next.","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return The next flashcard to review.","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"wendelinwemhoener"},"content":"    protected abstract Flashcard pickFlashcard();","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"wendelinwemhoener"},"content":"     * Prints front of a flashcard and prompts the user to think of its back.","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcardToReview The flashcard currently being reviewed.","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"wendelinwemhoener"},"content":"    protected void printFlashcardFrontTextPrompt(Flashcard flashcardToReview) {","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"wendelinwemhoener"},"content":"        assert flashcardToReview !\u003d null : \"must be valid Flashcard instance\";","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    \" + \"-\".repeat(76));","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    The front text is: \"","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"wendelinwemhoener"},"content":"                + flashcardToReview.getFrontText());","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println();","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Think of the answer (the back text) in \" +","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"wendelinwemhoener"},"content":"                \"your head.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Press ENTER when you are ready to compare \" +","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"wendelinwemhoener"},"content":"                \"it,\");","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    or enter q or quit to end this review \" +","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"wendelinwemhoener"},"content":"                \"session.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":109,"author":{"gitId":"wendelinwemhoener"},"content":"     * Lets the user rate the difficulty of a flashcard and then adjusts it.","lastModifiedDate":"2023-11-12"},{"lineNumber":110,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":111,"author":{"gitId":"wendelinwemhoener"},"content":"     * Depending on the rating given by the user, the flashcard difficulty is","lastModifiedDate":"2023-11-12"},{"lineNumber":112,"author":{"gitId":"wendelinwemhoener"},"content":"     * increased, kept constant or decreased. If the user rates the flashcard","lastModifiedDate":"2023-11-12"},{"lineNumber":113,"author":{"gitId":"wendelinwemhoener"},"content":"     * as easy, difficulty is decreased by one; if the user rates it as","lastModifiedDate":"2023-11-12"},{"lineNumber":114,"author":{"gitId":"wendelinwemhoener"},"content":"     * medium hard, difficulty is kept unchanges; and if the user rates it as","lastModifiedDate":"2023-11-12"},{"lineNumber":115,"author":{"gitId":"wendelinwemhoener"},"content":"     * hard, difficulty is increased by one.","lastModifiedDate":"2023-11-12"},{"lineNumber":116,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":117,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param scanner To get user input.","lastModifiedDate":"2023-11-12"},{"lineNumber":118,"author":{"gitId":"wendelinwemhoener"},"content":"     * @param flashcard The flashcard currently under review.","lastModifiedDate":"2023-11-12"},{"lineNumber":119,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":120,"author":{"gitId":"wendelinwemhoener"},"content":"    protected void letUserRateReviewDifficulty(Scanner scanner,","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"wendelinwemhoener"},"content":"                                               Flashcard flashcard) {","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"wendelinwemhoener"},"content":"        assert flashcard !\u003d null : \"must be a valid Flashcard instance\";","lastModifiedDate":"2023-11-12"},{"lineNumber":123,"author":{"gitId":"wendelinwemhoener"},"content":"        assert scanner !\u003d null : \"must be a valid Scanner instance\";","lastModifiedDate":"2023-11-12"},{"lineNumber":124,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":125,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    How hard was it to remember the back page of \"","lastModifiedDate":"2023-11-12"},{"lineNumber":126,"author":{"gitId":"wendelinwemhoener"},"content":"                + \"this flashcard?\");","lastModifiedDate":"2023-11-12"},{"lineNumber":127,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    Input E if it was easy, M if it was \"","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"wendelinwemhoener"},"content":"                + \"moderately challenging \");","lastModifiedDate":"2023-11-13"},{"lineNumber":129,"author":{"gitId":"wendelinwemhoener"},"content":"        System.out.println(\"    or H if it was quite hard.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":130,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":131,"author":{"gitId":"wendelinwemhoener"},"content":"        final ArrayList\u003cString\u003e choices \u003d new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"wendelinwemhoener"},"content":"                \"e\", \"m\", \"h\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"wendelinwemhoener"},"content":"        String choice \u003d scanner.nextLine();","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"wendelinwemhoener"},"content":"        while (!choices.contains(choice.toLowerCase())) {","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"wendelinwemhoener"},"content":"            System.out.println(\"    Invalid choice! Your choice must be E, M \"","lastModifiedDate":"2023-11-12"},{"lineNumber":137,"author":{"gitId":"wendelinwemhoener"},"content":"                    + \"or H! Please try again.\");","lastModifiedDate":"2023-11-12"},{"lineNumber":138,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":139,"author":{"gitId":"wendelinwemhoener"},"content":"            choice \u003d scanner.nextLine();","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":141,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"wendelinwemhoener"},"content":"        int difficultyChange;","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"wendelinwemhoener"},"content":"        switch (choice.toLowerCase()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"wendelinwemhoener"},"content":"        case \"e\":","lastModifiedDate":"2023-10-23"},{"lineNumber":145,"author":{"gitId":"wendelinwemhoener"},"content":"            difficultyChange \u003d -1;","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"wendelinwemhoener"},"content":"            break;","lastModifiedDate":"2023-10-23"},{"lineNumber":147,"author":{"gitId":"wendelinwemhoener"},"content":"        case \"m\":","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"wendelinwemhoener"},"content":"            difficultyChange \u003d 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"wendelinwemhoener"},"content":"            break;","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"wendelinwemhoener"},"content":"        default:","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"wendelinwemhoener"},"content":"            difficultyChange \u003d +1;","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"wendelinwemhoener"},"content":"            break;","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":154,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":155,"author":{"gitId":"wendelinwemhoener"},"content":"        flashcard.applyDifficultyChange(difficultyChange);","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":157,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"wendelinwemhoener":157}},{"path":"src/main/java/seedu/duke/flashcard/review/SpacedRepetitionReviewMode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendelinwemhoener"},"content":"//@@author wendelinwemhoener","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"package seedu.duke.flashcard.review;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.Flashcard;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"wendelinwemhoener"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"/**","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":" * Review mode that picks the flashcards with the highest difficulty.","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":" *","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":" * After each flashcard review, the reviewed flashcard\u0027s difficulty is","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":" * adjusted based on the user input. This way, harder flashcards are shown","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":" * more often and easier ones are shown less frequently to enhance learning","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"wendelinwemhoener"},"content":" * efficiency.","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"wendelinwemhoener"},"content":" */","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"wendelinwemhoener"},"content":"public class SpacedRepetitionReviewMode extends ReviewMode {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"wendelinwemhoener"},"content":"    public SpacedRepetitionReviewMode(FlashcardList flashcardList) {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"wendelinwemhoener"},"content":"        super(flashcardList);","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"wendelinwemhoener"},"content":"     * Identifies the instance as a spaced repetition review mode instance.","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return Textual description that this is the spaced repetition mode.","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"wendelinwemhoener"},"content":"    public String getReviewModeName() {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"wendelinwemhoener"},"content":"        return \"spaced repetition mode\";","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"     * Chooses the flashcard with the highest difficulty to be reviewed next.","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"     * @return The next flashcard to review.","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"    protected Flashcard pickFlashcard() {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"        ArrayList\u003cFlashcard\u003e flashcards \u003d flashcardList.getFlashcards();","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"        int maxDifficulty \u003d Integer.MIN_VALUE;","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"        Flashcard maxDifficultyFlashcard \u003d null;","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"        for (Flashcard flashcard : flashcards) {","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"            if (flashcard.getDifficulty() \u003e maxDifficulty) {","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"                maxDifficulty \u003d flashcard.getDifficulty();","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"                maxDifficultyFlashcard \u003d flashcard;","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"        assert maxDifficultyFlashcard !\u003d null : \"there should be a flashcard\";","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"        assert maxDifficulty !\u003d Integer.MIN_VALUE;","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"        return maxDifficultyFlashcard;","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"wendelinwemhoener":55}},{"path":"src/main/java/seedu/duke/storage/EventDirectory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"import java.io.File;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":" * directory for directory","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":" * can list-up txt files in text folder","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":" * In version 1, using only event.txt","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":" * In version 2, can select or create","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"public class EventDirectory {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"    private static Logger logger; // for logging","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"    String path;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"    File file;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"    public EventDirectory(){","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"        logger \u003d Logger.getLogger(\"flashDir\");","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"        String dataPath \u003d \"./data\";","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"        File dataFolder \u003d new File(dataPath);","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"        if(!dataFolder.exists()){","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"            if(dataFolder.mkdir()){","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, \"Created data directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"    Created events directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"            } else{","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, \"Failed to create data directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"    Failed to create directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"        } else{","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"            logger.log(Level.INFO, \"Using data directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"    Using data/events directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"        path \u003d \"./data/events\";","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"        file \u003d new File(path);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"        if(!file.exists()){","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"            if(file.mkdir()){","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, \"Created events directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"    Created events directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"            } else{","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, \"Failed to create directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"    Failed to create directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"        } else{","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"junhyeong0411"},"content":"            logger.log(Level.INFO, \"Using data/events directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"    Using data/events directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"junhyeong0411"},"content":"     * list-up saved files","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"junhyeong0411"},"content":"     * selecting file is for version 2","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"junhyeong0411"},"content":"    public void listEventFiles(){","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"junhyeong0411"},"content":"        String[] eventFiles \u003d file.list();","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"junhyeong0411"},"content":"        if(eventFiles \u003d\u003d null){","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"junhyeong0411"},"content":"            logger.log(Level.INFO, \"Failed to find files\");","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"Failed to find files\");","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"junhyeong0411"},"content":"        } else if(eventFiles.length \u003d\u003d 0){","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"junhyeong0411"},"content":"            logger.log(Level.INFO, \"No files exist\");","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"No files exist\");","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"junhyeong0411"},"content":"        } else{","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"junhyeong0411"},"content":"            for(String eventFile : eventFiles){","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, eventFile);","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"        \"+eventFile);","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"junhyeong0411"},"content":"     * return default directory","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"junhyeong0411"},"content":"     * for version 1","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"junhyeong0411"},"content":"     * @return directory for flashcard txt file","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"junhyeong0411"},"content":"    public String defaultDirectory() {","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"junhyeong0411"},"content":"        return this.path + \"/event.txt\";","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"junhyeong0411"},"content":"     * return directory of flashcard txt file","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"junhyeong0411"},"content":"     * for version 2","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"Brian030601"},"content":"     * @param path is used for storing file path","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"Brian030601"},"content":"     * @return is used to get the path to the file","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"junhyeong0411"},"content":"    public String eventDirectory(String path) {","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"junhyeong0411"},"content":"        return this.path + path;","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"junhyeong0411":93,"Brian030601":2}},{"path":"src/main/java/seedu/duke/storage/EventStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.calendar.Event;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.calendar.EventList;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.calendar.Goal;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.storage.exceptions.EventFileFormatException;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"import java.io.File;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"import static seedu.duke.storage.EventStorageParser.eventFileChecker;","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":" * storage for Events","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":" * One storage manages one file","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"public class EventStorage {","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"    private static Logger logger; // for logging","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"    protected String path;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"    public EventStorage(String path){","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"        logger \u003d Logger.getLogger(\"event\");","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"    public boolean isStorageAvailable(){","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"        File f \u003d new File(this.path);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"        return f.exists();","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"     * load list of events","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"     * from this.path","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"     * @return list of Events","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"Brian030601"},"content":"     * @throws FileNotFoundException is used if the file is not in the path","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"    public EventList loadEvents() throws FileNotFoundException{","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"        EventList eventList \u003d new EventList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"junhyeong0411"},"content":"        File f \u003d new File (this.path);","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"junhyeong0411"},"content":"        try{","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"junhyeong0411"},"content":"            while(s.hasNext()){","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"junhyeong0411"},"content":"                String[] eventTokens \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"junhyeong0411"},"content":"                eventFileChecker(eventTokens);","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"junhyeong0411"},"content":"                eventList.addEvent(EventStorageParser.loadEvent(eventTokens));","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"junhyeong0411"},"content":"        } catch (EventFileFormatException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"junhyeong0411"},"content":"            System.out.println(\"The flashcard save file is corrupted\");","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"junhyeong0411"},"content":"            System.out.println(\"Automatically making new file\");","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"junhyeong0411"},"content":"            eventList \u003d new EventList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"junhyeong0411"},"content":"            saveEvents(eventList.getEvents());","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"junhyeong0411"},"content":"        logger.log(Level.INFO, String.format(","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"junhyeong0411"},"content":"                \"    There are currently %d events in the save file\",","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"junhyeong0411"},"content":"                eventList.getSize()));","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"junhyeong0411"},"content":"        return eventList;","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"junhyeong0411"},"content":"     * saveEvents method","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"junhyeong0411"},"content":"     * save all events to file","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"Brian030601"},"content":"     * @param eventList is used to access the list","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"junhyeong0411"},"content":"    public void saveEvents(ArrayList\u003cEvent\u003e eventList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"junhyeong0411"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"junhyeong0411"},"content":"            FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"Brian030601"},"content":"            for (Event event : eventList) {","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"Cheezeblokz"},"content":"                if (event.getClass() \u003d\u003d Goal.class) {","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"Cheezeblokz"},"content":"                    fw.write(String.format(\"%s | %s | %s | %s \\r\\n\",","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"Cheezeblokz"},"content":"                            event.getName(), event.getTo(), ((Goal) event).getGoal(), ((Goal) event).getCompleted()));","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"Cheezeblokz"},"content":"                } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"junhyeong0411"},"content":"                    fw.write(String.format(\"%s | %s | %s \\r\\n\",","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"junhyeong0411"},"content":"                            event.getName(), event.getFrom(), event.getTo()));","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"junhyeong0411"},"content":"                }","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"Cheezeblokz"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"junhyeong0411"},"content":"            fw.close();","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"junhyeong0411"},"content":"        } catch (IOException e){","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"Failed to save.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"junhyeong0411"},"content":"            logger.log(Level.WARNING, \"problem: failed to save\");","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"Cheezeblokz":5,"junhyeong0411":95,"Brian030601":3}},{"path":"src/main/java/seedu/duke/storage/EventStorageParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.calendar.Event;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.calendar.Goal;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.storage.exceptions.EventFileFormatException;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":"public class EventStorageParser {","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"    private static Logger logger; // for logging","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"     * check the saved file format","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"     * token length should be 3 or 4","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"     * if token length is 3, format should be string, localdatetime, localdatetime","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"     * if token length is 4, format should be string, localdatetime, int, int","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"     * @param tokens is a split txt line","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"     * @throws EventFileFormatException","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"    public static void eventFileChecker(String[] tokens) throws EventFileFormatException {","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"        if(tokens.length !\u003d 3 \u0026\u0026 tokens.length !\u003d 4) {","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"            throw new EventFileFormatException();","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"            LocalDateTime.parse(tokens[1].trim());","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"            if(tokens.length \u003d\u003d 3){","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"                LocalDateTime.parse(tokens[2].trim());","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"            if(tokens.length \u003d\u003d 4){","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"                Integer.parseInt(tokens[2].trim());","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"                Integer.parseInt(tokens[3].trim());","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"        } catch (DateTimeParseException | NumberFormatException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"            throw new EventFileFormatException();","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"     * load an event from certain format","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"     * Tokens includes attributes of Event","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"     * @param tokens is used to get event name","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"junhyeong0411"},"content":"     * @return Event object","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"    public static Event loadEvent(String[] tokens){","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"junhyeong0411"},"content":"        logger \u003d Logger.getLogger(\"event\");","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"junhyeong0411"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"junhyeong0411"},"content":"        assert tokens.length \u003d\u003d 3 || tokens.length \u003d\u003d 4: \"Token length should be 3 or 4\";","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"junhyeong0411"},"content":"        if(tokens.length \u003d\u003d 3) {","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"junhyeong0411"},"content":"            String name \u003d tokens[0].trim();","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"junhyeong0411"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(tokens[1].trim());","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"junhyeong0411"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(tokens[2].trim());","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"junhyeong0411"},"content":"            logger.log(Level.INFO, \"loaded event\");","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"junhyeong0411"},"content":"            return new Event(name, from, to);","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"junhyeong0411"},"content":"        String name \u003d tokens[0].trim();","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"junhyeong0411"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(tokens[1].trim());","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"junhyeong0411"},"content":"        int goal \u003d Integer.parseInt(tokens[2].trim());","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"junhyeong0411"},"content":"        int completed \u003d Integer.parseInt(tokens[3].trim());","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"junhyeong0411"},"content":"        logger.log(Level.INFO, \"loaded event\");","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"junhyeong0411"},"content":"        return new Goal(name, by, goal, completed);","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"junhyeong0411":75}},{"path":"src/main/java/seedu/duke/storage/FlashcardDirectory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"import java.io.File;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":" * directory for flashcards","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":" * can list-up txt files in text folder","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":" * In version 1, using only flashcard.txt","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":" * In version 2, can select or create","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"public class FlashcardDirectory {","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"    private static Logger logger; // for logging","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"    String path;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"    File file;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"    public FlashcardDirectory(){","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"        logger \u003d Logger.getLogger(\"flashDir\");","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"        path \u003d \"./data/flashcards\";","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"        String dataPath \u003d \"./data\";","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"        File dataFolder \u003d new File(dataPath);","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"        if(!dataFolder.exists()){","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"            if(dataFolder.mkdir()){","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, \"Created data directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"    Created events directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"            } else{","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, \"Failed to create data directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"    Failed to create directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"        } else{","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"            logger.log(Level.INFO, \"Using data directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"    Using data/events directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"        file \u003d new File(path);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"        if(!file.exists()){","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"            if(file.mkdir()){","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, \"Created flashcards directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"    Created flashcards directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"            } else{","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, \"Failed to create directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"    Failed to create directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"junhyeong0411"},"content":"        } else{","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"junhyeong0411"},"content":"            logger.log(Level.INFO, \"Using data/flashcards directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"    Using data/flashcards directory\");","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"junhyeong0411"},"content":"     * list-up saved files","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"junhyeong0411"},"content":"     * selecting file is for version 2","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"junhyeong0411"},"content":"    public void listFlashcardFiles(){","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"junhyeong0411"},"content":"        String[] flashcardFiles \u003d file.list();","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"junhyeong0411"},"content":"        if(flashcardFiles \u003d\u003d null){","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"junhyeong0411"},"content":"            logger.log(Level.INFO, \"Failed to find files\");","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"Failed to find files\");","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"junhyeong0411"},"content":"        } else if(flashcardFiles.length \u003d\u003d 0){","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"junhyeong0411"},"content":"            logger.log(Level.INFO, \"No files exist\");","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"junhyeong0411"},"content":"            //System.out.println(\"No files exist\");","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"        } else{","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"junhyeong0411"},"content":"            for(String flashcardFile : flashcardFiles){","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"junhyeong0411"},"content":"                logger.log(Level.INFO, flashcardFile);","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"junhyeong0411"},"content":"                //System.out.println(\"        \"+flashcardFile);","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"junhyeong0411"},"content":"     * return default directory","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"junhyeong0411"},"content":"     * for version 1","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"junhyeong0411"},"content":"     * @return directory for flashcard txt file","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"junhyeong0411"},"content":"    public String defaultDirectory() {","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"junhyeong0411"},"content":"        return this.path + \"/flashcard.txt\";","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"junhyeong0411"},"content":"     * return directory of flashcard txt file","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"junhyeong0411"},"content":"     * for version 2","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"junhyeong0411"},"content":"     * @param path","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"junhyeong0411"},"content":"     * @return","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"junhyeong0411"},"content":"    public String flashcardDirectory(String path) {","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"junhyeong0411"},"content":"        return this.path + path;","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"wendelinwemhoener":1,"junhyeong0411":95}},{"path":"src/main/java/seedu/duke/storage/FlashcardStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.flashcard.Flashcard;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.storage.exceptions.FlashcardFileFormatException;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"import java.io.File;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"import static seedu.duke.storage.FlashcardStorageParser.flashcardFileChecker;","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":" * storage for flashcards","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":" * One storage manages one file","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"public class FlashcardStorage {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"    // simply implemented for save \u0026 load first","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"    private static Logger flashlogger; // for logging","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"    protected String path;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"    FlashcardStorageParser parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"    public FlashcardStorage(String path){","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"        flashlogger \u003d Logger.getLogger(\"flash\");","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"        flashlogger.setLevel(Level.WARNING);","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"    public boolean isStorageAvailable(){","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"        File f \u003d new File(this.path);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"        return f.exists();","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"     * load list of flashcards","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"     * from this.path","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"     * @return list of Flashcards","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"junhyeong0411"},"content":"    public FlashcardList loadFlashcards() throws FileNotFoundException{","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"        flashlogger.log(Level.INFO, \"loading flashcard\");","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"junhyeong0411"},"content":"        FlashcardList flashcardList \u003d new FlashcardList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"junhyeong0411"},"content":"        File f \u003d new File (this.path);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"junhyeong0411"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"junhyeong0411"},"content":"        try{","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"junhyeong0411"},"content":"            while(s.hasNext()){","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"junhyeong0411"},"content":"                String[] flashTokens \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"junhyeong0411"},"content":"                flashcardFileChecker(flashTokens);","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"junhyeong0411"},"content":"                flashcardList.add(FlashcardStorageParser.loadFlashcard(flashTokens));","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"junhyeong0411"},"content":"                flashlogger.log(Level.INFO, \"added flashcard\");","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"junhyeong0411"},"content":"        } catch (FlashcardFileFormatException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"junhyeong0411"},"content":"            System.out.println(\"The flashcard save file is corrupted\");","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"junhyeong0411"},"content":"            System.out.println(\"Automatically making new file\");","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"junhyeong0411"},"content":"            flashcardList \u003d new FlashcardList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"junhyeong0411"},"content":"            saveFlashcards(flashcardList.getFlashcards());","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"junhyeong0411"},"content":"        flashlogger.log(Level.INFO, String.format(","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"                \"There are currently %d flashcards in the savefile\",","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"                flashcardList.getSize()));","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"junhyeong0411"},"content":"        return flashcardList;","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"junhyeong0411"},"content":"     * saveFlashcards method","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"junhyeong0411"},"content":"     * save all flashcard data to file","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"junhyeong0411"},"content":"     * @param flashcardList","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"junhyeong0411"},"content":"    public boolean saveFlashcards(ArrayList\u003cFlashcard\u003e flashcardList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"junhyeong0411"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"junhyeong0411"},"content":"            FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"junhyeong0411"},"content":"            for (int i \u003d 0; i \u003c flashcardList.size(); i++) {","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"junhyeong0411"},"content":"                // get info from a flashcard","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"junhyeong0411"},"content":"                Flashcard flashcard \u003d flashcardList.get(i);","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"junhyeong0411"},"content":"                int id \u003d flashcard.getId();","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"junhyeong0411"},"content":"                String frontText \u003d flashcard.getFrontText();","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"junhyeong0411"},"content":"                String backText \u003d flashcard.getBackText();","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"junhyeong0411"},"content":"                int difficulty \u003d flashcard.getDifficulty();","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"junhyeong0411"},"content":"                fw.write(String.format(\"%d | %s | %s | %d \\r\\n\",","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"junhyeong0411"},"content":"                        id, frontText, backText, difficulty));","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"junhyeong0411"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"junhyeong0411"},"content":"            fw.close();","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"junhyeong0411"},"content":"            return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"junhyeong0411"},"content":"        } catch (IOException e){","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"junhyeong0411"},"content":"            flashlogger.log(Level.WARNING, \"problem: failed to save\");","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"junhyeong0411"},"content":"            return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"wendelinwemhoener":2,"junhyeong0411":112}},{"path":"src/main/java/seedu/duke/storage/FlashcardStorageParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.flashcard.Flashcard;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.storage.exceptions.FlashcardFileFormatException;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"junhyeong0411"},"content":" * FlashcardStorageParser class","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"junhyeong0411"},"content":" * Utility class for parsing","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"junhyeong0411"},"content":"public final class FlashcardStorageParser {","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"junhyeong0411"},"content":"    private static Logger flashlogger; // for logging","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"     * check the saved file format","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"     * token length should be 4","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"     * type should be integer, string, string, integer","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"     * @param tokens is a split txt line","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"     * @throws FlashcardFileFormatException","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"    public static void flashcardFileChecker(String[] tokens) throws FlashcardFileFormatException {","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"        if(tokens.length !\u003d 4) {","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"            throw new FlashcardFileFormatException();","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"junhyeong0411"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"junhyeong0411"},"content":"            Integer.parseInt(tokens[0].trim());","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"junhyeong0411"},"content":"            Integer.parseInt(tokens[3].trim());","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"junhyeong0411"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"junhyeong0411"},"content":"            throw new FlashcardFileFormatException();","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"junhyeong0411"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"junhyeong0411"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"junhyeong0411"},"content":"     * load a flash card from certain format","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"junhyeong0411"},"content":"     * Tokens includes attributes of Flashcard","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"junhyeong0411"},"content":"     * @param tokens","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"junhyeong0411"},"content":"     * @return Flashcard object","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"junhyeong0411"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"junhyeong0411"},"content":"    public static Flashcard loadFlashcard(String[] tokens){","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"junhyeong0411"},"content":"        flashlogger \u003d Logger.getLogger(\"flash\");","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"junhyeong0411"},"content":"        flashlogger.setLevel(Level.WARNING);","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"junhyeong0411"},"content":"        assert tokens.length \u003d\u003d 4 : \"Token length should be 4\";","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"junhyeong0411"},"content":"        flashlogger.log(Level.INFO, \"token length is\", tokens.length);","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"junhyeong0411"},"content":"        int id \u003d Integer.parseInt(tokens[0].trim());","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"junhyeong0411"},"content":"        String frontText \u003d tokens[1].trim();","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"junhyeong0411"},"content":"        String backText \u003d tokens[2].trim();","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"junhyeong0411"},"content":"        int difficulty \u003d Integer.parseInt(tokens[3].trim());","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"junhyeong0411"},"content":"        Flashcard flashcard \u003d new Flashcard(frontText, backText);","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"junhyeong0411"},"content":"        flashcard.setId(id);","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"junhyeong0411"},"content":"        flashcard.setDifficulty(difficulty);","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"junhyeong0411"},"content":"        flashlogger.log(Level.INFO, \"loaded flashcard\");","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"junhyeong0411"},"content":"        return flashcard;","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"junhyeong0411":67}},{"path":"src/main/java/seedu/duke/storage/exceptions/EventFileFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"package seedu.duke.storage.exceptions;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":" * Exception class for Event file format","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":" * raised if file format is wrong (eg. file corrupted)","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"public class EventFileFormatException extends Exception{","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"junhyeong0411":8}},{"path":"src/main/java/seedu/duke/storage/exceptions/FlashcardFileFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junhyeong0411"},"content":"package seedu.duke.storage.exceptions;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"junhyeong0411"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"junhyeong0411"},"content":" * Exception class for Event file format","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"junhyeong0411"},"content":" * raised if file format is wrong (eg. file corrupted)","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"junhyeong0411"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"junhyeong0411"},"content":"public class FlashcardFileFormatException extends Exception{","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"junhyeong0411"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"junhyeong0411":8}},{"path":"src/test/java/seedu/duke/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"wendelinwemhoener"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"wendelinwemhoener"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"Cheezeblokz"},"content":"import seedu.duke.calendar.Calendar;","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.calendar.CalendarManager;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.exceptions.FlashcardException;","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.exceptions.InvalidFlashcardIdException;","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.exceptions.InvalidReviewModeException;","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.review.RandomReviewMode;","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.review.ReviewMode;","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"wendelinwemhoener"},"content":"import seedu.duke.flashcard.review.SpacedRepetitionReviewMode;","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.storage.EventStorage;","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.flashcard.FlashcardComponent;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.flashcard.FlashcardList;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.storage.FlashcardStorage;","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"junhyeong0411"},"content":"import seedu.duke.flashcard.FlashcardUi;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"junhyeong0411"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"junhyeong0411"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"junhyeong0411"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"junhyeong0411"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"class DukeTest {","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"wendelinwemhoener"},"content":"    public void testFlashcardComponent_isResponsible_notResponsible() {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Cheezeblokz"},"content":"        FlashcardComponent flashcardComponent \u003d new FlashcardComponent(new Calendar());","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"wendelinwemhoener"},"content":"        assertFalse(flashcardComponent.isResponsible(\"dfdfdfdfdf\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"wendelinwemhoener"},"content":"        assertFalse(flashcardComponent.isResponsible(\"help me\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"wendelinwemhoener"},"content":"        assertFalse(flashcardComponent.isResponsible(\" \"));","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"wendelinwemhoener"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"wendelinwemhoener"},"content":"    public void testFlashcardComponent_isResponsible_responsible() {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"wendelinwemhoener"},"content":"        FlashcardComponent flashcardComponent \u003d new FlashcardComponent(","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"wendelinwemhoener"},"content":"                new Calendar());","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"wendelinwemhoener"},"content":"        assertTrue(flashcardComponent.isResponsible(\"create flashcard\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"wendelinwemhoener"},"content":"        assertTrue(flashcardComponent.isResponsible(\"delete flashcard  b\"));","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"wendelinwemhoener"},"content":"        assertTrue(flashcardComponent.isResponsible(\"list flashcards\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"wendelinwemhoener"},"content":"        assertTrue(flashcardComponent.isResponsible(\"delete all flashcards\"));","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"wendelinwemhoener"},"content":"        assertTrue(flashcardComponent.isResponsible(\"review flashcards\"));","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"wendelinwemhoener"},"content":"        assertTrue(flashcardComponent.isResponsible(\"review flashcards c\"));","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":50,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"wendelinwemhoener"},"content":"    @Test","lastModifiedDate":"2023-11-14"},{"lineNumber":52,"author":{"gitId":"wendelinwemhoener"},"content":"    public void testReviewMode_getReviewModeName_randomReviewMode() {","lastModifiedDate":"2023-11-14"},{"lineNumber":53,"author":{"gitId":"wendelinwemhoener"},"content":"        FlashcardList fl \u003d new FlashcardList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-11-14"},{"lineNumber":54,"author":{"gitId":"wendelinwemhoener"},"content":"        ReviewMode rm \u003d new RandomReviewMode(fl);","lastModifiedDate":"2023-11-14"},{"lineNumber":55,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":56,"author":{"gitId":"wendelinwemhoener"},"content":"        assertEquals(rm.getReviewModeName(), \"random review mode\");","lastModifiedDate":"2023-11-14"},{"lineNumber":57,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":58,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":59,"author":{"gitId":"wendelinwemhoener"},"content":"    @Test","lastModifiedDate":"2023-11-14"},{"lineNumber":60,"author":{"gitId":"wendelinwemhoener"},"content":"    public void testFlashcardException_initializeException() {","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"wendelinwemhoener"},"content":"        InvalidFlashcardIdException e1 \u003d new InvalidFlashcardIdException();","lastModifiedDate":"2023-11-14"},{"lineNumber":62,"author":{"gitId":"wendelinwemhoener"},"content":"        InvalidReviewModeException e2 \u003d new InvalidReviewModeException();","lastModifiedDate":"2023-11-14"},{"lineNumber":63,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":64,"author":{"gitId":"wendelinwemhoener"},"content":"        assertTrue(e1 instanceof FlashcardException);","lastModifiedDate":"2023-11-14"},{"lineNumber":65,"author":{"gitId":"wendelinwemhoener"},"content":"        assertTrue(e2 instanceof FlashcardException);","lastModifiedDate":"2023-11-14"},{"lineNumber":66,"author":{"gitId":"wendelinwemhoener"},"content":"        assertTrue(e1 instanceof Exception);","lastModifiedDate":"2023-11-14"},{"lineNumber":67,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":68,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":69,"author":{"gitId":"wendelinwemhoener"},"content":"    @Test","lastModifiedDate":"2023-11-14"},{"lineNumber":70,"author":{"gitId":"wendelinwemhoener"},"content":"    public void testReviewMode_getReviewModeName_spacedRepetitionReviewMode() {","lastModifiedDate":"2023-11-14"},{"lineNumber":71,"author":{"gitId":"wendelinwemhoener"},"content":"        FlashcardList fl \u003d new FlashcardList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-11-14"},{"lineNumber":72,"author":{"gitId":"wendelinwemhoener"},"content":"        ReviewMode rm \u003d new SpacedRepetitionReviewMode(fl);","lastModifiedDate":"2023-11-14"},{"lineNumber":73,"author":{"gitId":"wendelinwemhoener"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":74,"author":{"gitId":"wendelinwemhoener"},"content":"        assertEquals(rm.getReviewModeName(), \"spaced repetition mode\");","lastModifiedDate":"2023-11-14"},{"lineNumber":75,"author":{"gitId":"wendelinwemhoener"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"junhyeong0411"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"junhyeong0411"},"content":"    public void testFlashcardStorage_isAvailable(){","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"Cheezeblokz"},"content":"        FlashcardComponent flashcardComponent \u003d new FlashcardComponent(new Calendar());","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"junhyeong0411"},"content":"        FlashcardStorage storage \u003d flashcardComponent.getStorage();","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"junhyeong0411"},"content":"        assertTrue(storage.isStorageAvailable());","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"junhyeong0411"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"junhyeong0411"},"content":"    public void testEventStorage_isAvailable(){","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"Cheezeblokz"},"content":"        CalendarManager calendarManager \u003d new CalendarManager(new Calendar(), new ArrayList\u003c\u003e());","lastModifiedDate":"2023-11-12"},{"lineNumber":87,"author":{"gitId":"junhyeong0411"},"content":"        EventStorage storage \u003d calendarManager.getStorage();","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"junhyeong0411"},"content":"        assertTrue(storage.isStorageAvailable());","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"junhyeong0411"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"junhyeong0411"},"content":"    public void testFlashcardStorage_isSavingCorrectly(){","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"junhyeong0411"},"content":"        String input \u003d \"create flashcard\\n\";","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"junhyeong0411"},"content":"        input +\u003d \"Hello\\n\";","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"junhyeong0411"},"content":"        input +\u003d \"Duke\\n\";","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"junhyeong0411"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"junhyeong0411"},"content":"        System.setIn(in);","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"junhyeong0411"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"Cheezeblokz"},"content":"        FlashcardComponent flashcardComponent \u003d new FlashcardComponent(new Calendar());","lastModifiedDate":"2023-11-12"},{"lineNumber":102,"author":{"gitId":"junhyeong0411"},"content":"        FlashcardStorage storage \u003d flashcardComponent.getStorage();","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"junhyeong0411"},"content":"        FlashcardUi ui \u003d flashcardComponent.getUi();","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"junhyeong0411"},"content":"        ui.setScanner(scanner);","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"junhyeong0411"},"content":"        flashcardComponent.processInput(scanner.nextLine());","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"junhyeong0411"},"content":"        FlashcardList flashcardList \u003d flashcardComponent.getFlashcardList();","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"junhyeong0411"},"content":"        assertTrue(storage.saveFlashcards(flashcardList.getFlashcards()));","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"junhyeong0411"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"junhyeong0411"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"Brian030601"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"wendelinwemhoener"},"content":"    public void sampleTestCalendar() {","lastModifiedDate":"2023-11-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"Brian030601"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"wendelinwemhoener"},"content":"    public void testCalendar_isResponsible_true() {","lastModifiedDate":"2023-11-14"},{"lineNumber":122,"author":{"gitId":"Brian030601"},"content":"        CalendarManager calendarManager \u003d new CalendarManager(new Calendar(), new ArrayList\u003c\u003e());","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":124,"author":{"gitId":"Brian030601"},"content":"        assertTrue(calendarManager.isResponsible(\"add event\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"Brian030601"},"content":"        assertTrue(calendarManager.isResponsible(\"list events  \"));","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"Brian030601"},"content":"        assertTrue(calendarManager.isResponsible(\"delete event\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":129,"author":{"gitId":"Brian030601"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":130,"author":{"gitId":"wendelinwemhoener"},"content":"    public void testCalendar_isResponsible_false() {","lastModifiedDate":"2023-11-14"},{"lineNumber":131,"author":{"gitId":"Brian030601"},"content":"        CalendarManager calendarManager \u003d new CalendarManager(new Calendar(), new ArrayList\u003c\u003e());","lastModifiedDate":"2023-11-13"},{"lineNumber":132,"author":{"gitId":"Brian030601"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"Brian030601"},"content":"        assertFalse(calendarManager.isResponsible(\"add\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":134,"author":{"gitId":"Brian030601"},"content":"        assertFalse(calendarManager.isResponsible(\"hello\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":135,"author":{"gitId":"Brian030601"},"content":"        assertFalse(calendarManager.isResponsible(\"event\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"Brian030601"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"wendelinwemhoener":56,"Cheezeblokz":5,"-":11,"junhyeong0411":47,"Brian030601":18}}]
