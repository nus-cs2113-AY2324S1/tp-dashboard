[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"# AthletiCLI project template","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"AlWo223":1,"-":63}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"    mainClass.set(\"athleticli.AthletiCLI\")","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":"    archiveBaseName.set(\"athleticli\")","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"yicheng-toh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"skylee03":2,"yicheng-toh":1,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"---","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"layout: page","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"title: About Us","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"---","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"| Display                                                   |       Name        |              Github Profile              |                 Portfolio                 |","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"|-----------------------------------------------------------|:-----------------:|:----------------------------------------:|:-----------------------------------------:|","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)       | Alexander Wolters |   [Github](https://github.com/AlWo223)   |     [Portfolio](docs/team/johndoe.md)     |","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)       |       Nihal       |   [Github](https://github.com/nihalzp)   |     [Portfolio](docs/team/nihalzp.md)     |","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"| ![](https://github.com/DaDevChia)                         |    Dylan Chia     |  [Github](https://github.com/DaDevChia)  | [Portfolio](https://github.com/DaDevChia) |","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)       |     Yi Cheng      | [Github](https://github.com/yicheng-toh) |     [Portfolio](docs/team/yicheng.md)     |","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"| ![](https://avatars.githubusercontent.com/u/24489025?s\u003d100) |  Yang Ming-Tian   |  [Github](https://github.com/skylee03)   |    [Portfolio](docs/team/skylee03.md)     |","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"skylee03":5,"yicheng-toh":6,"-":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"---","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"layout: page","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"title: Developer Guide","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"---","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"- Table of Contents","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"{:toc}","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"## Design","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"This section provides a high-level explanation of the design and implementation of AthletiCLI, ","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"supported by UML diagrams and short code snippets to illustrate the flow of data and interactions between the ","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"components.","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"### Architecture","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"\u003cp  align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"  \u003cimg width\u003d\"80%\" src\u003d\"images/architectureDiagram.svg\" alt\u003d\"\u0027set-diet-goal\u0027 Sequence Diagram\"/\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"**Main components of the architecture**","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"**`AthletiCLI`** is in charge of the app launch and shut down.","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"The bulk of the AthletiCLI’s work is done by the following components, with each of them corresponds to a package:","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"* [`UI`](https://github.com/AY2324S1-CS2113-T17-1/tp/tree/master/src/main/java/athleticli/ui): The UI and other UI-related sub-components of AthletiCLI.","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"* [`Parser`](https://github.com/AY2324S1-CS2113-T17-1/tp/tree/master/src/main/java/athleticli/parser): Parses the commands input by the users.","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"* [`Storage`](https://github.com/AY2324S1-CS2113-T17-1/tp/tree/master/src/main/java/athleticli/storage): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":"* [`Data`](https://github.com/AY2324S1-CS2113-T17-1/tp/tree/master/src/main/java/athleticli/data): Holds the data of AthletiCLI in memory.","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"skylee03"},"content":"* [`Commands`](https://github.com/AY2324S1-CS2113-T17-1/tp/tree/master/src/main/java/athleticli/commands): The command executors.","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"skylee03"},"content":"[`Exceptions`](https://github.com/AY2324S1-CS2113-T17-1/tp/tree/master/src/main/java/athleticli/exceptions) represents exceptions used by multiple other components.","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"skylee03"},"content":"### Overview","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"skylee03"},"content":"The class diagram shows the relationship between `AthletiCLI`, `Ui`, `Parser`, and `Data`.","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"yicheng-toh"},"content":"\u003cp  align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"yicheng-toh"},"content":"  \u003cimg width\u003d\"80%\" src\u003d\"images/MainClassDiagram.svg\" alt\u003d\"\u0027set-diet-goal\u0027 Sequence Diagram\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"yicheng-toh"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"skylee03"},"content":"### Data Component","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"skylee03"},"content":"The class diagram shows how the `Data` component is constructed with multiple classes.","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"yicheng-toh"},"content":"\u003cp  align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"yicheng-toh"},"content":"  \u003cimg width\u003d\"80%\" src\u003d\"images/DataClassDiagram.svg\" alt\u003d\"\u0027set-diet-goal\u0027 Sequence Diagram\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"yicheng-toh"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"skylee03"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"skylee03"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `help add-diet`.","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"skylee03"},"content":"![](images/HelpAddDiet.svg)","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"skylee03"},"content":"This diagram involves the interaction between `AthletiCLI`, `UI`, `Parser`, `Commands` components and the user.","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"skylee03"},"content":"The `Storage` component only interacts with the `Data` component. The _Sequence Diagram_ below shows how they interact with each other for the scenario where a `save` command is executed.","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"skylee03"},"content":"![](images/Save.svg)","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"skylee03"},"content":"For simplicity, only 1 `StorableList` is drawn instead of the actual 6.","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"skylee03"},"content":"## Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"nihalzp"},"content":"### Diet Management in AthletiCLI","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"nihalzp"},"content":"#### [Implemented] Setting Up, Editing, Deleting, Listing, and Finding Diets","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"nihalzp"},"content":"Regardless of the operation you are performing on diets (setting up, editing, deleting, listing, or finding), the process follows a general five-step pattern in AthletiCLI:","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"nihalzp"},"content":"1. **Input Processing**: The user\u0027s input is passed through AthletiCLI to the Parser Class. Examples of user inputs include:","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"nihalzp"},"content":"    - `add-diet calories/500 protein/20 carb/50 fat/10 datetime/2021-09-01 06:00` for adding a diet.","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"nihalzp"},"content":"    - `edit-diet 1 calories/500 protein/20 carb/50 fat/10 datetime/2021-09-01 06:00` for editing a diet.","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"nihalzp"},"content":"    - `delete-diet 1` for deleting a diet.","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"nihalzp"},"content":"    - `list-diet` for listing all diets.","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"nihalzp"},"content":"    - `find-diet 2021-09-01` for finding diets of a particular date.","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"nihalzp"},"content":"2. **Command Identification**: The Parser Class identifies the type of diet operation and passes the necessary parameters.","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"nihalzp"},"content":"3. **Command Creation**: An instance of the corresponding command class is created (e.g., AddDietCommand, EditDietCommand, etc.) and returned to AthletiCLI.","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"nihalzp"},"content":"4. **Command Execution**: AthletiCLI executes the command, interacting with the data instance of DietList to perform the required operation.","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"nihalzp"},"content":"5. **Result Display**: A message is returned post-execution and passed through AthletiCLI to the UI for display to the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"nihalzp"},"content":"By following these general steps, AthletiCLI ensures a streamlined process for managing diet-related tasks.","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"yicheng-toh"},"content":"#### [Implemented] Setting Up of Diet Goals","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"yicheng-toh"},"content":"This following sequence diagram show how the \u0027set-diet-goal\u0027 command works:","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"yicheng-toh"},"content":"\u003cp  align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"yicheng-toh"},"content":"  \u003cimg width\u003d\"80%\" src\u003d\"images/setDietGoalUmlSequenceDiagram.svg\" alt\u003d\"\u0027set-diet-goal\u0027 Sequence Diagram\"/\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"yicheng-toh"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"yicheng-toh"},"content":"**Step 1:** The input from the user (\"set-diet-goal fats/1\") runs through AthletiCLI to the Parser Class.","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"yicheng-toh"},"content":"**Step 2:** The Parser Class will identify the request as setting up a diet goal and pass in the parameters","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"yicheng-toh"},"content":"\"fats/1\".","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"yicheng-toh"},"content":"**Step 3:** A temporary dietGoalList is created to store newly created diet goals.","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"yicheng-toh"},"content":"**Step 4:** The inputs are verified against our lists of approved diet goals.","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"yicheng-toh"},"content":"**Step 5:** For each of the diet goals that are valid, a dietGoal object will be created and stored in the ","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"yicheng-toh"},"content":"temporary dietGoalList.","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"yicheng-toh"},"content":"**Step 6:** The Parser then creates for an instance of SetDietGoalCommand and returns the instance to ","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"yicheng-toh"},"content":"AthletiCLI.","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"yicheng-toh"},"content":"**Step 7:** AthletiCLI will execute the SetDietGoalCommand. This adds the dietGoals that are present in the ","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"yicheng-toh"},"content":"temporary list into the data instance of DietGoalList which will be kept for records.","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"yicheng-toh"},"content":"**Step 8:** After executing the SetDietGoalCommand, SetDietGoalCommand returns a message that is passed to ","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"yicheng-toh"},"content":"AthletiCLI to be passed to UI(not shown) for display.","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"yicheng-toh"},"content":"#### [Proposed] Implementation of DietGoalList","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"yicheng-toh"},"content":"The current implementation of DietGoalList is an ArrayList.","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"yicheng-toh"},"content":"It helps to store dietGoals, however it is not efficient in searching for a particular dietGoal.","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"yicheng-toh"},"content":"At any instance of time, there could only be the existence of one dietGoal.","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"yicheng-toh"},"content":"Verifying if there is an existence of a dietGoal using an ArrayList takes O(n) time, where n is the number of dietGoals.","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"yicheng-toh"},"content":"The proposed change will be to change the underlying data structure to a hashmap for amortised O(1) time complexity","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"yicheng-toh"},"content":"for checking the presence of a dietGoal.","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"AlWo223"},"content":"#### [Implemented] Adding activities","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"AlWo223"},"content":"The `add-activity` feature allows users to add a new activity into the application.","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"AlWo223"},"content":"These are the main components behind the architecture of the `add-activity` feature:","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"AlWo223"},"content":"1. `AthletiCLI`: faciliates the mechanism. It captures the input and calls the parser and execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"AlWo223"},"content":"2. `Parser`: parses the user input and generates the appropriate command object and activity ","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"AlWo223"},"content":"   instance.","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"AlWo223"},"content":"3. `AddActivityCommand`: encapsulates the execution of the `add-activity` command. It adds ","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"AlWo223"},"content":"   the activity to the data.","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"AlWo223"},"content":"4. `Activity`: represents the activity that is to be added.","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"AlWo223"},"content":"5. `Data`: holds current state of the activity list.","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"AlWo223"},"content":"6. `ActivityList`: maintains the list of all added activities.","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"AlWo223"},"content":"Here is a class diagram of the relationships between the data components `Activity`,`Data` and `ActivityList`:","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"AlWo223"},"content":"(tbd)","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"AlWo223"},"content":"Given below is an example usage scenario and how the add mechanism behaves at each step.","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"AlWo223"},"content":"**Step 1 - Input Capture:** The user issues an `add-activity ...` which is captured and passed to the Parser by the ","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"AlWo223"},"content":"running AthletiCLI instance.","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"AlWo223"},"content":"**Step 2 - Activity Parsing:** The Parser parses the raw input to obtain the arguments of the activity. Given that all ","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"AlWo223"},"content":"parameters are provided correctly and no exception is thrown, a new activity object is created.","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"AlWo223"},"content":"**Step 3 - Command Parsing:** In addition the parser will create an `AddActivityCommand` object with the newly added ","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"AlWo223"},"content":"activity attached to it. The command implements the `AddActivityCommand#execute()` operation and is passed to ","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"AlWo223"},"content":"the AthletiCLI instance.","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"AlWo223"},"content":"**Step 4 - Activity Addition:** The AthletiCLI instance executes the `AddActivityCommand` object. The command will ","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"AlWo223"},"content":"access the data and retrieve the currently stored list of activities stored inside it. The new `Activity` object is ","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"AlWo223"},"content":"added to the list.","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"AlWo223"},"content":"**Step 5 - User Interaction:** Once the activity is successfully added, a confirmation message is displayed to the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"AlWo223"},"content":"The following sequence diagram shows how the `add-activity` operation works:","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"AlWo223"},"content":"\u003cp  align\u003d\"center\" \u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":170,"author":{"gitId":"AlWo223"},"content":"  \u003cimg width\u003d\"100%\" src\u003d\"images/AddActivity.svg\" alt\u003d\"Sequence Diagram of add-activity\"/\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"AlWo223"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"AlWo223"},"content":"#### [Implemented] Tracking activity goals","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"AlWo223"},"content":"With the `set-activity-goal` feature, users can set periodic goals for their activities.","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"AlWo223"},"content":"The fulfillment of these goals is tracked automatically and can be evaluated by the user at any time.","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"AlWo223"},"content":"These are the key components and their roles in the architecture of the goal tracking:","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"AlWo223"},"content":"* `SetActivityGoalCommand`: encapsulates the execution of the `set-activity-goal` command. It adds ","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"AlWo223"},"content":"  the activity goal to the data.","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"AlWo223"},"content":"* `ActivityGoal`: represents the activity goal that is to be added and contains functionality to ","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"AlWo223"},"content":"  track the fulfillment of the goal. ","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"AlWo223"},"content":"* `ActivityList`: contains key functionality to retrieve and filter the activity list according to the specified ","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"AlWo223"},"content":"  properties of the goal.","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"AlWo223"},"content":"Given below is an example usage scenario and how the goal setting and tracking mechanism behaves at ","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"AlWo223"},"content":"each step.","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"AlWo223"},"content":"1. **Step 1 - Input Capture:** The user issues a `set-activity-goal ...` which is captured and passed to the ","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"AlWo223"},"content":"   Parser by the running AthletiCLI instance.","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"AlWo223"},"content":"2. **Step 2 - Goal Parsing:** The Parser parses the raw input to obtain the sports, target and timespan of the goal. ","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"AlWo223"},"content":"   Given that all these parameters are provided correctly and no exception is thrown, a new activity goal object is ","lastModifiedDate":"2023-11-02"},{"lineNumber":193,"author":{"gitId":"AlWo223"},"content":"   created.","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"AlWo223"},"content":"3. **Step 3 - Command Parsing:** In addition the parser will create a `SetActivityGoalCommand` object with the newly ","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"AlWo223"},"content":"   added activity goal attached to it. The command implements the `SetActivityGoalCommand#execute()` operation and is ","lastModifiedDate":"2023-11-02"},{"lineNumber":196,"author":{"gitId":"AlWo223"},"content":"   passed to the AthletiCLI instance.","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"AlWo223"},"content":"4. **Step 4 - Goal Addition:** The AthletiCLI instance executes the `SetActivityGoalCommand` object. The command will ","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"AlWo223"},"content":"   access the data and retrieve the currently stored list of activity goals stored inside it. The new `ActivityGoal` ","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"AlWo223"},"content":"   object is added to the list.","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":201,"author":{"gitId":"AlWo223"},"content":"The following sequence diagram shows how the `set-activity-goal` operation works:","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"AlWo223"},"content":"\u003cp  align\u003d\"center\" \u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"AlWo223"},"content":"  \u003cimg width\u003d\"100%\" src\u003d\"images/AddActivityGoal.svg\" alt\u003d\"Sequence Diagram of set-activity-goal\"/\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"AlWo223"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":205,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":206,"author":{"gitId":"AlWo223"},"content":"Assume that the user has set a goal to run 10km per week and has already tracked two running activities of 5km each.","lastModifiedDate":"2023-11-02"},{"lineNumber":207,"author":{"gitId":"AlWo223"},"content":"The following describes how the goal evaluation works after being invoked by the user, e.g., with a list-activity-goal command:","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":209,"author":{"gitId":"AlWo223"},"content":"5. **Step 5 - Goal Evaluation:** The evaluation of the goal is operated by the `ActivityGoal` object. It retrieves the ","lastModifiedDate":"2023-11-02"},{"lineNumber":210,"author":{"gitId":"AlWo223"},"content":"activity list with the two tracked activities from the data and calls the total distance calculation function. It filters the ","lastModifiedDate":"2023-11-02"},{"lineNumber":211,"author":{"gitId":"AlWo223"},"content":"   activity list according to the specified timespan and sports of the goal. The current value obtained by this, ","lastModifiedDate":"2023-11-02"},{"lineNumber":212,"author":{"gitId":"AlWo223"},"content":"   10km in the example, is returned to the `ActivityGoal` object, which then compares it to the target value of the goal. This mechanism is visualized in the following sequence diagram:","lastModifiedDate":"2023-11-02"},{"lineNumber":213,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"AlWo223"},"content":"\u003cp  align\u003d\"center\" \u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":215,"author":{"gitId":"AlWo223"},"content":"    \u003cimg width\u003d\"100%\" src\u003d\"images/ActivityGoalEvaluation.svg\" alt\u003d\"Sequence Diagram of activity goal evaluation\"/\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":216,"author":{"gitId":"AlWo223"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"DaDevChia"},"content":"### Sleep Management in AthletiCLI","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":220,"author":{"gitId":"DaDevChia"},"content":"#### [Implemented] Finding, Adding, Editing, Deleting, Listing Sleep","lastModifiedDate":"2023-11-01"},{"lineNumber":221,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":222,"author":{"gitId":"DaDevChia"},"content":"1. **Input Processing**: The user\u0027s input is passed through AthletiCLI to the Parser Class. Examples of user inputs include:","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"DaDevChia"},"content":"    - \"add-sleep hours/8 datetime/2021-09-01 06:00\" for adding sleep.","lastModifiedDate":"2023-10-27"},{"lineNumber":224,"author":{"gitId":"DaDevChia"},"content":"    - \"edit-sleep 1 hours/8 datetime/2021-09-01 06:00\" for editing sleep.","lastModifiedDate":"2023-10-27"},{"lineNumber":225,"author":{"gitId":"DaDevChia"},"content":"    - \"delete-sleep 1\" for deleting sleep.","lastModifiedDate":"2023-10-27"},{"lineNumber":226,"author":{"gitId":"DaDevChia"},"content":"    - \"list-sleep\" for listing all sleep.","lastModifiedDate":"2023-10-27"},{"lineNumber":227,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":228,"author":{"gitId":"DaDevChia"},"content":"2. **Command Identification**: The Parser Class identifies the type of sleep operation and passes the necessary parameters.","lastModifiedDate":"2023-10-27"},{"lineNumber":229,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"DaDevChia"},"content":"3. **Command Creation**: An instance of the corresponding command class is created (e.g., AddSleepCommand, EditSleepCommand, etc.) and returned to AthletiCLI.","lastModifiedDate":"2023-10-27"},{"lineNumber":231,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":232,"author":{"gitId":"DaDevChia"},"content":"4. **Command Execution**: AthletiCLI executes the command, interacting with the data instance of SleepList to perform the required operation.","lastModifiedDate":"2023-10-27"},{"lineNumber":233,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"DaDevChia"},"content":"5. **Result Display**: A message is returned post-execution and passed through AthletiCLI to the UI for display to the user.","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":236,"author":{"gitId":"DaDevChia"},"content":"The following class diagram shows how sleep and sleep-related classes are constructed in AthletiCLI:","lastModifiedDate":"2023-11-01"},{"lineNumber":237,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":238,"author":{"gitId":"DaDevChia"},"content":"\u003cp  align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":239,"author":{"gitId":"DaDevChia"},"content":"  \u003cimg width\u003d\"80%\" src\u003d\"images/SleepAndSleepListClassDiagram.svg\" alt\u003d\"Class Diagram of Sleep and SleepList\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":240,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":241,"author":{"gitId":"DaDevChia"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":247,"author":{"gitId":"DaDevChia"},"content":"AthletiCLI is designed for athletic individuals who are committed to optimizing their performance. ","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"DaDevChia"},"content":"These users are highly disciplined and engaged not only in regular, intense physical training but also in nutrition, mental conditioning, and recovery. ","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":251,"author":{"gitId":"DaDevChia"},"content":"They are looking for a holistic tool that integrates all facets of an athletic lifestyle. AthletiCLI serves as a daily or weekly companion, designed to monitor, track, and analyze various elements crucial for high-level athletic performance. ","lastModifiedDate":"2023-10-27"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":253,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":255,"author":{"gitId":"DaDevChia"},"content":"AthletiCLI provides a streamlined, integrated solution for athletic individuals focused on achieving peak performance. ","lastModifiedDate":"2023-10-27"},{"lineNumber":256,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":257,"author":{"gitId":"DaDevChia"},"content":"While the app includes robust capabilities for tracking physical training metrics, it also offers features for monitoring dietary habits and sleep metrics. ","lastModifiedDate":"2023-10-27"},{"lineNumber":258,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":259,"author":{"gitId":"DaDevChia"},"content":"By providing a comprehensive view of various performance-related factors over time, AthletiCLI enables athletes to identify trends, refine their training and lifestyle habits, and optimize outcomes. The app is more than a tracking tool—it\u0027s a performance optimization platform that takes into account the full spectrum of an athlete\u0027s life. ","lastModifiedDate":"2023-10-27"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":261,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":263,"author":{"gitId":"-"},"content":"| Version | As a ...                        | I want to ...                                                     | So that I can ...                                                                      |","lastModifiedDate":"2020-05-24"},{"lineNumber":264,"author":{"gitId":"AlWo223"},"content":"|---------|---------------------------------|-------------------------------------------------------------------|----------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-01"},{"lineNumber":265,"author":{"gitId":"AlWo223"},"content":"| v1.0    | fitness enthusiastic user       | add different activities including running, swimming and cycling) | keep track of my fitness activities and athletic performance.                          |","lastModifiedDate":"2023-11-01"},{"lineNumber":266,"author":{"gitId":"AlWo223"},"content":"| v1.0    | analytical user                 | view my activity details at any point in time                     | track my progress and make informed decisions about my fitness routine.                |","lastModifiedDate":"2023-11-01"},{"lineNumber":267,"author":{"gitId":"AlWo223"},"content":"| v1.0    | clumsy user                     | delete any tracked activity                                       | I can correct any mistakes or remove accidentally added activities.                    |","lastModifiedDate":"2023-11-01"},{"lineNumber":268,"author":{"gitId":"AlWo223"},"content":"| v1.0    | detail-oriented user            | modify any of my tracked activities                               | ensure accuracy in my fitness records.                                                 |","lastModifiedDate":"2023-11-01"},{"lineNumber":269,"author":{"gitId":"nihalzp"},"content":"| v1.0    | health-conscious user           | add my dietary information                                        | keep track of my daily calorie and nutrient intake                                     |","lastModifiedDate":"2023-10-26"},{"lineNumber":270,"author":{"gitId":"nihalzp"},"content":"| v1.0    | organized user                  | delete a dietary entry                                            | remove outdated or incorrect data from my diet records                                 |","lastModifiedDate":"2023-10-26"},{"lineNumber":271,"author":{"gitId":"nihalzp"},"content":"| v1.0    | fitness enthusiast              | view all my diet records                                          | have a clear overview of my dietary habits and make informed decisions on my diet      |","lastModifiedDate":"2023-10-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"| v1.0    | new user                        | see usage instructions                                            | refer to them when I forget how to use the application                                 |","lastModifiedDate":"2020-05-24"},{"lineNumber":273,"author":{"gitId":"yicheng-toh"},"content":"| v1.0    | motivated weight-conscious user | set diet goals                                                    | have the motivation to work towards keeping weight in check.                           |","lastModifiedDate":"2023-10-24"},{"lineNumber":274,"author":{"gitId":"yicheng-toh"},"content":"| v1.0    | forgetful user                  | see all my diet goals                                             | remind myself of all the diet goals I have set.                                        |","lastModifiedDate":"2023-10-24"},{"lineNumber":275,"author":{"gitId":"yicheng-toh"},"content":"| v1.0    | regretful user                  | remove my diet goals                                              | I can rescind the strict goals I set previously when I find the goals too far fetched. |","lastModifiedDate":"2023-10-24"},{"lineNumber":276,"author":{"gitId":"yicheng-toh"},"content":"| v1.0    | motivated user                  | update my diet goals                                              | I can work towards better version of myself by setting stricter goals.                 |","lastModifiedDate":"2023-10-24"},{"lineNumber":277,"author":{"gitId":"DaDevChia"},"content":"| v1.0    | sleep deprived user             | add my sleep information                                          | keep track of my sleep habits and identify areas for improvement                       |","lastModifiedDate":"2023-10-27"},{"lineNumber":278,"author":{"gitId":"DaDevChia"},"content":"| v1.0    | sleep deprived user             | delete a sleep entry                                              | remove outdated or incorrect data from my sleep records                                |","lastModifiedDate":"2023-10-27"},{"lineNumber":279,"author":{"gitId":"DaDevChia"},"content":"| v1.0    | sleep deprived user             | view all my sleep records                                         | have a clear overview of my sleep habits and make informed decisions on my sleep       |","lastModifiedDate":"2023-10-27"},{"lineNumber":280,"author":{"gitId":"DaDevChia"},"content":"| v1.0    | sleep deprived user             | edit my sleep entries                                             | correct any mistakes or update my sleep information as needed                          |","lastModifiedDate":"2023-10-27"},{"lineNumber":281,"author":{"gitId":"-"},"content":"| v2.0    | user                            | find a to-do item by name                                         | locate a to-do without having to go through the entire list                            |","lastModifiedDate":"2020-05-24"},{"lineNumber":282,"author":{"gitId":"nihalzp"},"content":"| v2.0    | meticulous user                 | edit my dietary entries                                           | correct any mistakes or update my diet information as needed                           |","lastModifiedDate":"2023-10-26"},{"lineNumber":283,"author":{"gitId":"nihalzp"},"content":"| v2.0    | active user                     | set activity goals                                                | work towards a specific fitness target for different sports activities.                |","lastModifiedDate":"2023-10-31"},{"lineNumber":284,"author":{"gitId":"nihalzp"},"content":"| v2.0    | adaptable athlete               | edit my activity goals                                            | modify my fitness targets to align with my current fitness level and schedule.         |","lastModifiedDate":"2023-10-31"},{"lineNumber":285,"author":{"gitId":"nihalzp"},"content":"| v2.0    | organized athlete               | list all my activity goals                                        | have a clear overview of my set targets and track my progress easily.                  |","lastModifiedDate":"2023-10-31"},{"lineNumber":286,"author":{"gitId":"nihalzp"},"content":"| v2.0    | meticulous user                 | find my diets by date                                             | easily retrieve my dietary records for a specific day and monitor my eating habits.    |","lastModifiedDate":"2023-10-31"},{"lineNumber":287,"author":{"gitId":"yicheng-toh"},"content":"| v2.0    | motivated user                  | keep track of my diet goals for a period of time | I can monitor my diet progress on a weekly basis and make adjustments if needed.       |                                         |","lastModifiedDate":"2023-11-01"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":289,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":291,"author":{"gitId":"yicheng-toh"},"content":"1. AthletiCLI should work on Windows, MacOS and Linux that has java 11 installed.","lastModifiedDate":"2023-10-24"},{"lineNumber":292,"author":{"gitId":"DaDevChia"},"content":"2. AthletiCLI should be able to store data locally.","lastModifiedDate":"2023-10-27"},{"lineNumber":293,"author":{"gitId":"DaDevChia"},"content":"3. AthletiCLI should be able to work offline.","lastModifiedDate":"2023-10-27"},{"lineNumber":294,"author":{"gitId":"DaDevChia"},"content":"4. AthletiCLI should be easy to use.","lastModifiedDate":"2023-10-27"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":296,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":298,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":300,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":302,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"skylee03":52,"DaDevChia":41,"AlWo223":92,"yicheng-toh":53,"-":33,"nihalzp":31}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"---","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"permalink: /","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"layout: page","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"title: About AthletiCLI","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"feature_text: |","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"  # AthletiCLI","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"  Your all-in-one solution to track, analyse, and optimize your athletic performance.","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"feature_image: \"https://picsum.photos/1300/400?image\u003d989\"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"---","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"[![](https://github.com/AY2324S1-CS2113-T17-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2113-T17-1/tp/actions)","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"**AthletiCLI** is your all-in-one solution to track, analyse, and optimize your athletic performance. Designed for the","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"committed athlete, this command-line interface (CLI) tool not only keeps tabs on your physical activities but also","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"covers dietary habits, sleep metrics, and more.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"* If you are interested in using AthletiCLI, head over to the [User Guide](UserGuide.html).","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"* If you are interested about developing AthletiCLI, the [Developer Guide](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"* If you would like to learn more about our development team, please visit the [About Us](AboutUs.html) page.","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"skylee03":13,"AlWo223":2,"-":2,"nihalzp":2}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"---","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"layout: page","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"title: User Guide","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"---","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"## Table of Contents","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"{:toc}","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"**AthletiCLI** is your all-in-one solution to track, analyse, and optimize your athletic performance. Designed for the","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"committed athlete, this command-line interface (CLI) tool not only keeps tabs on your physical activities but also","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"covers dietary habits, sleep metrics, and more.","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"* Ensure you have the required runtime environment installed on your computer.","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"* Download the latest AthletiCLI from the official repository.","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"* Copy the downloaded file to a folder you want to designate as the home for AthletiCLI.","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"* Open a command terminal, cd into the folder where you copied the file, and run `java -jar AthletiCLI.jar` .","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"## Features","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"**Notes about Command Format**","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"* Words in UPPER_CASE are parameters provided by the user.","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"* Parameters need to be specified in the given order unless specified otherwise.","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"* Parameters enclosed in square brackets [] are optional.","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"## Activity Management","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"### Adding Activities:","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"`add-activity`","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"`add-run`","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"yicheng-toh"},"content":"`add-swim`","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"yicheng-toh"},"content":"`add-cycle`","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"You can record your activities in AtheltiCLI by adding different activities including running, cycling, and swimming.","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"A brief summary of the activity will be shown after adding the activity. Use the detailed list command to access the ","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"full activity insights.","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"**Syntax:**","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"* `add-activity CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME`","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"* `add-run CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME elevation/ELEVATION`","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"* `add-swim CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME style/STYLE`","lastModifiedDate":"2023-11-05"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"* `add-cycle CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME elevation/ELEVATION`","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"**Parameters:**","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"* CAPTION: A short description of the activity.","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"* DURATION: The duration of the activity in ISO Time Format: HH:mm:ss.","lastModifiedDate":"2023-11-05"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"* DISTANCE: The distance of the activity in meters. It must be a positive number.","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"yicheng-toh"},"content":"* DATETIME: The date and time of the start of the activity. It must follow the ISO Date Time Format: yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"* ELEVATION: The elevation gain of a run or cycle in meters. It must be a number.","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"* STYLE: The style of the swim. It must be one of the following: freestyle, backstroke, breaststroke, butterfly.","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"**Examples:**","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"* `add-activity Morning Run duration/01:00:00 distance/10000 datetime/2021-09-01 06:00`","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"* `add-cycle Evening Ride duration/02:00:00 distance/20000 datetime/2021-09-01 18:00 elevation/1000`","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"* `add-swim Evening Swim duration/01:00:00 distance/1000 datetime/2023-10-16 20:00 style/freestyle`","lastModifiedDate":"2023-11-05"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"### Deleting Activities:","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"AlWo223"},"content":"`delete-activity`","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"AlWo223"},"content":"Accidentally added an activity? You can quickly delete any type of activity including run, swims and cycles by using ","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"AlWo223"},"content":"the following command.","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"AlWo223"},"content":"**Syntax:**","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"AlWo223"},"content":"* `delete-activity INDEX`","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"AlWo223"},"content":"**Parameters:**","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"AlWo223"},"content":"* INDEX: The index of the activity as shown in the displayed activity list. Note, that the list is sorted by ","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"AlWo223"},"content":"  date and that the index must be a positive number which is not larger than the number of activities recorded.","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"AlWo223"},"content":"**Examples:**","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"yicheng-toh"},"content":"* `delete-activity 2` Deletes the second activity in the activity list.","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"AlWo223"},"content":"* `delete-activity 1` Deletes the most recent activity in the activity list.","lastModifiedDate":"2023-11-05"},{"lineNumber":85,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"AlWo223"},"content":"### Listing Activities:","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"AlWo223"},"content":"`list-activity`","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"AlWo223"},"content":"By using this command, you can see all your tracked activities in a list sorted by date. For more ","lastModifiedDate":"2023-11-05"},{"lineNumber":91,"author":{"gitId":"AlWo223"},"content":"detailed information about your activities including evaluations like pace (running), speed (cycling) or lap time ","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"AlWo223"},"content":"(swimming), you can use the `-d` flag.","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"AlWo223"},"content":"**Syntax:**","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"AlWo223"},"content":"* `list-activity [-d]`","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"yicheng-toh"},"content":"**Parameters:**","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"AlWo223"},"content":"* `-d`: Shows a detailed list of the activities.","lastModifiedDate":"2023-11-05"},{"lineNumber":101,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"AlWo223"},"content":"**Metrics:**","lastModifiedDate":"2023-11-06"},{"lineNumber":103,"author":{"gitId":"AlWo223"},"content":"* Pace: the average time taken to run 1km. Common performance metric for runners.","lastModifiedDate":"2023-11-06"},{"lineNumber":104,"author":{"gitId":"AlWo223"},"content":"* Speed: the average speed of the cycle in km/h. Common performance metric for cyclists.","lastModifiedDate":"2023-11-06"},{"lineNumber":105,"author":{"gitId":"AlWo223"},"content":"* Lap Time: the time taken to swim 1 lap (50m). Common performance metric for swimmers.","lastModifiedDate":"2023-11-06"},{"lineNumber":106,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":107,"author":{"gitId":"AlWo223"},"content":"**Examples:**","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"yicheng-toh"},"content":"* `list-activity` Shows a brief overview of all activities.","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"yicheng-toh"},"content":"* `list-activity -d` Shows a detailed summary of all activities.","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"AlWo223"},"content":"### Editing Activities:","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"yicheng-toh"},"content":"`edit-activity`","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"yicheng-toh"},"content":"`edit-run`","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"yicheng-toh"},"content":"`edit-swim`","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"yicheng-toh"},"content":"`edit-cycle`","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"AlWo223"},"content":"You can edit your activities in AthletiCLI by editing the activity at the specified index.","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"AlWo223"},"content":"Specify the parameters you want to edit with the corresponding flags. At least one parameter must be specified.","lastModifiedDate":"2023-11-05"},{"lineNumber":124,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"AlWo223"},"content":"**Syntax:**","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"AlWo223"},"content":"* `edit-activity INDEX [caption/CAPTION] [duration/DURATION] [distance/DISTANCE] [datetime/DATETIME]`","lastModifiedDate":"2023-11-05"},{"lineNumber":128,"author":{"gitId":"AlWo223"},"content":"* `edit-run INDEX [caption/CAPTION] [duration/DURATION] [distance/DISTANCE] [datetime/DATETIME] [elevation/ELEVATION]`","lastModifiedDate":"2023-11-05"},{"lineNumber":129,"author":{"gitId":"AlWo223"},"content":"* `edit-swim INDEX [caption/CAPTION] [duration/DURATION] [distance/DISTANCE] [datetime/DATETIME] [style/STYLE]`","lastModifiedDate":"2023-11-05"},{"lineNumber":130,"author":{"gitId":"AlWo223"},"content":"* `edit-cycle INDEX [caption/CAPTION] [duration/DURATION] [distance/DISTANCE] [datetime/DATETIME] [elevation/ELEVATION]`","lastModifiedDate":"2023-11-05"},{"lineNumber":131,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"AlWo223"},"content":"**Parameters:**","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"AlWo223"},"content":"* INDEX: The index of the activity to be edited - must be a positive number which is not larger than the number of ","lastModifiedDate":"2023-11-05"},{"lineNumber":135,"author":{"gitId":"AlWo223"},"content":"  activities recorded. Note, that the indices are allocated based on the date of the activity.","lastModifiedDate":"2023-11-05"},{"lineNumber":136,"author":{"gitId":"yicheng-toh"},"content":"* See [adding activities](#adding-activities) for the other parameters.","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"AlWo223"},"content":"**Examples:**","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"AlWo223"},"content":"* `edit-activity 1 caption/Morning Run distance/10000`","lastModifiedDate":"2023-11-05"},{"lineNumber":141,"author":{"gitId":"AlWo223"},"content":"* `edit-cycle 2 datetime/2021-09-01 18:00 elevation/1000`","lastModifiedDate":"2023-11-05"},{"lineNumber":142,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"nihalzp"},"content":"### Setting Activity Goals:","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"yicheng-toh"},"content":"`set-activity-goal`","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"AlWo223"},"content":"You can set goals for your activities in AthletiCLI by setting the target distance or duration for a specific sport.","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"AlWo223"},"content":"The goals can track your daily, weekly, monthly, or yearly progress.","lastModifiedDate":"2023-11-05"},{"lineNumber":149,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"AlWo223"},"content":"**Syntax**","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"AlWo223"},"content":"* `set-activity-goal sport/SPORT type/TYPE period/PERIOD target/TARGET`","lastModifiedDate":"2023-11-05"},{"lineNumber":153,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"AlWo223"},"content":"**Parameters**","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"AlWo223"},"content":"* SPORT: The sport for which you want to set a goal. It must be one of the following: run, swim, cycle, general.","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"AlWo223"},"content":"* TYPE: The metric for which you want to set a goal. It must be one of the following: distance, duration.","lastModifiedDate":"2023-11-05"},{"lineNumber":158,"author":{"gitId":"AlWo223"},"content":"* PERIOD: The period for which you want to set a goal. It must be one of the following: daily, weekly, monthly, ","lastModifiedDate":"2023-11-05"},{"lineNumber":159,"author":{"gitId":"AlWo223"},"content":"  yearly. Only activities that are recorded within the period will be counted towards the goal.","lastModifiedDate":"2023-11-05"},{"lineNumber":160,"author":{"gitId":"AlWo223"},"content":"* TARGET: The target value. It must be a positive number. For distance, it is in meters. For duration, it is in","lastModifiedDate":"2023-11-05"},{"lineNumber":161,"author":{"gitId":"AlWo223"},"content":"  minutes.","lastModifiedDate":"2023-11-05"},{"lineNumber":162,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"AlWo223"},"content":"**Examples**","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"yicheng-toh"},"content":"* `set-activity-goal sport/running type/distance period/weekly target/10000` Sets a goal of running 10km per week.","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"yicheng-toh"},"content":"* `set-activity-goal sport/swimming type/duration period/monthly target/120` Sets a goal of swimming for 2 hours per","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"AlWo223"},"content":"  month.","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"nihalzp"},"content":"### Editing Activity Goals:","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"yicheng-toh"},"content":"`edit-activity-goal`","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"nihalzp"},"content":"You can edit your already set goals by mentioning the sport, target, and period of the goal you want to edit.","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"nihalzp"},"content":"**Syntax**","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"nihalzp"},"content":"* `edit-activity-goal sport/SPORT target/TARGET period/PERIOD value/VALUE`","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"nihalzp"},"content":"**Parameters**","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"yicheng-toh"},"content":"* SPORT: The sport for which you want to set a goal. It must be one of the following: running, swimming, cycling, general.","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"nihalzp"},"content":"* TARGET: The target for which you want to set a goal. It must be one of the following: distance, duration.","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"nihalzp"},"content":"* PERIOD: The period for which you want to set a goal. It must be one of the following: daily, weekly, monthly, yearly.","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"yicheng-toh"},"content":"* VALUE: The value of the target. It must be a positive number. For distance, it is in meters. For duration, it is in minutes.","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"nihalzp"},"content":"**Examples**","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"yicheng-toh"},"content":"* `edit-activity-goal sport/running type/distance period/weekly target/20000` Edits the goal of running 20km per week.","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"yicheng-toh"},"content":"* `edit-activity-goal sport/swimming type/duration period/monthly target/60` Edits the goal of swimming for 1 hour per month.","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"nihalzp"},"content":"### Listing Activity Goals:","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"yicheng-toh"},"content":"`list-activity-goal`","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"nihalzp"},"content":"You can list all your goals in AthletiCLI and see your progress towards them.","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":197,"author":{"gitId":"nihalzp"},"content":"**Syntax**","lastModifiedDate":"2023-10-31"},{"lineNumber":198,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":199,"author":{"gitId":"nihalzp"},"content":"* `list-activity-goal`","lastModifiedDate":"2023-10-31"},{"lineNumber":200,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"nihalzp"},"content":"**Examples**","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"yicheng-toh"},"content":"* `list-activity-goal` Lists all your goals.","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"nihalzp"},"content":"## Diet Management","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":207,"author":{"gitId":"nihalzp"},"content":"### Adding Diets:","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":209,"author":{"gitId":"nihalzp"},"content":"`add-diet`","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":211,"author":{"gitId":"nihalzp"},"content":"You can record your diet in AtheltiCLI by adding your calorie, protein, carbohydrate,and fat intake of your meals.","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":213,"author":{"gitId":"nihalzp"},"content":"**Syntax:**","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":215,"author":{"gitId":"nihalzp"},"content":"* `add-diet calories/CALORIES protein/PROTEIN carb/CARB fat/FAT datetime/DATETIME`","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":217,"author":{"gitId":"nihalzp"},"content":"**Parameters:**","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":219,"author":{"gitId":"nihalzp"},"content":"* CALORIES: The total calories of the meal.","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"nihalzp"},"content":"* PROTEIN: The total protein of the meal.","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"nihalzp"},"content":"* CARB: The total carbohydrates of the meal.","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"nihalzp"},"content":"* FAT: The total fat of the meal.","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"DaDevChia"},"content":"* DATETIME: The date and time of the meal. It must follow the ISO Date Time Format: yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-11-02"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":225,"author":{"gitId":"nihalzp"},"content":"**Examples:**","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":227,"author":{"gitId":"nihalzp"},"content":"* `add-diet calories/500 protein/20 carb/50 fat/10 datetime/2021-09-01 06:00`","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":229,"author":{"gitId":"nihalzp"},"content":"### Editing Diets:","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":231,"author":{"gitId":"nihalzp"},"content":"`edit-diet`","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":233,"author":{"gitId":"nihalzp"},"content":"You can edit your diet in AtheltiCLI by editing the diet at the specified index.","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":235,"author":{"gitId":"nihalzp"},"content":"**Syntax:**","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":237,"author":{"gitId":"yicheng-toh"},"content":"* `edit-diet INDEX [calories/CALORIES] [protein/PROTEIN] [carb/CARB] [fat/FAT] [datetime/DATETIME]`","lastModifiedDate":"2023-11-02"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":239,"author":{"gitId":"nihalzp"},"content":"**Parameters:**","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":241,"author":{"gitId":"nihalzp"},"content":"* INDEX: The index of the diet to be edited - must be a positive integer.","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"yicheng-toh"},"content":"* CALORIES: The total calories of the meal.","lastModifiedDate":"2023-11-02"},{"lineNumber":243,"author":{"gitId":"yicheng-toh"},"content":"* PROTEIN: The total protein of the meal.","lastModifiedDate":"2023-11-02"},{"lineNumber":244,"author":{"gitId":"yicheng-toh"},"content":"* CARB: The total carbohydrates of the meal.","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"yicheng-toh"},"content":"* FAT: The total fat of the meal.","lastModifiedDate":"2023-11-02"},{"lineNumber":246,"author":{"gitId":"yicheng-toh"},"content":"* DATETIME: The date and time of the meal. It must follow the ISO Date Time Format: yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":248,"author":{"gitId":"nihalzp"},"content":"**Examples:**","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":250,"author":{"gitId":"nihalzp"},"content":"* `edit-diet 1 calories/500 protein/20 carb/50 fat/10 datetime/2021-09-01 06:00`","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"nihalzp"},"content":"* `edit-diet 1 datetime/2021-09-01 06:00 protein/20 carb/50 calories/500 fat/10`","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"nihalzp"},"content":"* `edit-diet 1 calories/500 protein/20 carb/50 fat/10`","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"nihalzp"},"content":"* `edit-diet 1 calories/500`","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"nihalzp"},"content":"* `edit-diet 1 protein/20`","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":256,"author":{"gitId":"nihalzp"},"content":"### Deleting Diets:","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":258,"author":{"gitId":"nihalzp"},"content":"`delete-diet`","lastModifiedDate":"2023-10-26"},{"lineNumber":259,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":260,"author":{"gitId":"nihalzp"},"content":"You can delete your diet in AtheltiCLI by deleting the diet at the specified index.","lastModifiedDate":"2023-10-26"},{"lineNumber":261,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":262,"author":{"gitId":"nihalzp"},"content":"**Syntax:**","lastModifiedDate":"2023-10-26"},{"lineNumber":263,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":264,"author":{"gitId":"nihalzp"},"content":"* `delete-diet INDEX`","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":266,"author":{"gitId":"nihalzp"},"content":"**Parameters:**","lastModifiedDate":"2023-10-26"},{"lineNumber":267,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":268,"author":{"gitId":"nihalzp"},"content":"* INDEX: The index of the diet to be deleted - must be a positive integer.","lastModifiedDate":"2023-10-26"},{"lineNumber":269,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":270,"author":{"gitId":"nihalzp"},"content":"**Examples:**","lastModifiedDate":"2023-10-26"},{"lineNumber":271,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":272,"author":{"gitId":"nihalzp"},"content":"* `delete-diet 1`","lastModifiedDate":"2023-10-26"},{"lineNumber":273,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":274,"author":{"gitId":"nihalzp"},"content":"### Listing Diets:","lastModifiedDate":"2023-10-26"},{"lineNumber":275,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":276,"author":{"gitId":"nihalzp"},"content":"`list-diet`","lastModifiedDate":"2023-10-26"},{"lineNumber":277,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":278,"author":{"gitId":"nihalzp"},"content":"You can list all your diets in AtheltiCLI.","lastModifiedDate":"2023-10-26"},{"lineNumber":279,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":280,"author":{"gitId":"nihalzp"},"content":"**Syntax:**","lastModifiedDate":"2023-10-26"},{"lineNumber":281,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":282,"author":{"gitId":"nihalzp"},"content":"* `list-diet`","lastModifiedDate":"2023-10-26"},{"lineNumber":283,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":284,"author":{"gitId":"nihalzp"},"content":"**Examples:**","lastModifiedDate":"2023-10-26"},{"lineNumber":285,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":286,"author":{"gitId":"nihalzp"},"content":"* `list-diet`","lastModifiedDate":"2023-10-26"},{"lineNumber":287,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":288,"author":{"gitId":"nihalzp"},"content":"### Finding Diets:","lastModifiedDate":"2023-10-31"},{"lineNumber":289,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":290,"author":{"gitId":"nihalzp"},"content":"`find-diet date/DATE`","lastModifiedDate":"2023-10-31"},{"lineNumber":291,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":292,"author":{"gitId":"nihalzp"},"content":"You can find all your diets on a specific date in AtheltiCLI.","lastModifiedDate":"2023-10-31"},{"lineNumber":293,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":294,"author":{"gitId":"nihalzp"},"content":"**Syntax:**","lastModifiedDate":"2023-10-31"},{"lineNumber":295,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":296,"author":{"gitId":"nihalzp"},"content":"* `find-diet date/DATE`","lastModifiedDate":"2023-10-31"},{"lineNumber":297,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":298,"author":{"gitId":"nihalzp"},"content":"**Parameters:**","lastModifiedDate":"2023-10-31"},{"lineNumber":299,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":300,"author":{"gitId":"yicheng-toh"},"content":"* DATE: The date of the diet. It must follow the ISO Date Format: yyyy-MM-dd.","lastModifiedDate":"2023-11-02"},{"lineNumber":301,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":302,"author":{"gitId":"nihalzp"},"content":"**Examples:**","lastModifiedDate":"2023-10-31"},{"lineNumber":303,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":304,"author":{"gitId":"nihalzp"},"content":"* `find-diet date/2021-09-01`","lastModifiedDate":"2023-10-31"},{"lineNumber":305,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":306,"author":{"gitId":"yicheng-toh"},"content":"## Diet Goal Management","lastModifiedDate":"2023-10-30"},{"lineNumber":307,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":308,"author":{"gitId":"yicheng-toh"},"content":"### Adding Diet Goals:","lastModifiedDate":"2023-10-30"},{"lineNumber":309,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":310,"author":{"gitId":"yicheng-toh"},"content":"`set-diet-goal`","lastModifiedDate":"2023-11-04"},{"lineNumber":311,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":312,"author":{"gitId":"yicheng-toh"},"content":"You can create a new daily or weekly diet goal to track your nutrients intake with AtheltiCLI by adding the nutrients you wish to track and the target value for your nutrient goals.","lastModifiedDate":"2023-10-30"},{"lineNumber":313,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":314,"author":{"gitId":"yicheng-toh"},"content":"You can set multiple nutrients goals at once with the `set-diet-goal` command.","lastModifiedDate":"2023-10-30"},{"lineNumber":315,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":316,"author":{"gitId":"yicheng-toh"},"content":"**Note: At least one of the nutrients (CALORIES,PROTEIN,CARB,FAT) must be present!**","lastModifiedDate":"2023-11-04"},{"lineNumber":317,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":318,"author":{"gitId":"yicheng-toh"},"content":"**Syntax:**","lastModifiedDate":"2023-11-02"},{"lineNumber":319,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":320,"author":{"gitId":"yicheng-toh"},"content":"* `set-diet-goal \u003cDAILY/WEEKLY\u003e [unhealthy] [calories/CALORIES] [protein/PROTEIN] [carb/CARBS] [fat/FAT]`","lastModifiedDate":"2023-11-04"},{"lineNumber":321,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":322,"author":{"gitId":"yicheng-toh"},"content":"**Parameters:**","lastModifiedDate":"2023-10-30"},{"lineNumber":323,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":324,"author":{"gitId":"yicheng-toh"},"content":"* DAILY/WEEKLY: Determines if the goal is set for a day or set for the week. It accepts 2 values.","lastModifiedDate":"2023-10-30"},{"lineNumber":325,"author":{"gitId":"yicheng-toh"},"content":"  DAILY goals account for what you eat for the day.","lastModifiedDate":"2023-10-30"},{"lineNumber":326,"author":{"gitId":"yicheng-toh"},"content":"  WEEKLY goals account for what you eat for the week.","lastModifiedDate":"2023-10-30"},{"lineNumber":327,"author":{"gitId":"yicheng-toh"},"content":"* * unhealthy: This determines if you are trying to get more of this nutrient or less of it.","lastModifiedDate":"2023-11-04"},{"lineNumber":328,"author":{"gitId":"yicheng-toh"},"content":"    If this flag is placed, it means that you are trying to reduce the intake. Hence, exceeding the target value means","lastModifiedDate":"2023-11-04"},{"lineNumber":329,"author":{"gitId":"yicheng-toh"},"content":"    that you have not achieved your goal. If this flag is absent, it means that you are trying to increase the intake.","lastModifiedDate":"2023-11-04"},{"lineNumber":330,"author":{"gitId":"yicheng-toh"},"content":"* CALORIES: Your target value for calories intake, in terms of calories. The target value must be a positive integer.","lastModifiedDate":"2023-11-04"},{"lineNumber":331,"author":{"gitId":"yicheng-toh"},"content":"* PROTEIN: Your target for protein intake, in terms of milligrams. The target value must be a positive integer.","lastModifiedDate":"2023-11-04"},{"lineNumber":332,"author":{"gitId":"yicheng-toh"},"content":"* CARB: Your target value for carbohydrate intake, in terms of milligrams. The target value must be a positive integer.","lastModifiedDate":"2023-11-04"},{"lineNumber":333,"author":{"gitId":"yicheng-toh"},"content":"* FAT: Your target value for fats intake, in terms of milligrams. The target value must be a positive integer.","lastModifiedDate":"2023-11-04"},{"lineNumber":334,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":335,"author":{"gitId":"yicheng-toh"},"content":"**Note: At least one of the nutrients (CALORIES,PROTEIN,CARB,FAT) must be present!**","lastModifiedDate":"2023-11-04"},{"lineNumber":336,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":337,"author":{"gitId":"yicheng-toh"},"content":"You can create one or multiple nutrient goals at once with this command.","lastModifiedDate":"2023-10-30"},{"lineNumber":338,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":339,"author":{"gitId":"yicheng-toh"},"content":"**Examples:**","lastModifiedDate":"2023-10-30"},{"lineNumber":340,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":341,"author":{"gitId":"yicheng-toh"},"content":"* `set-diet-goal WEEKLY calories/500 fats/600` Creates multiple 2 nutrient goals: calories and fats.","lastModifiedDate":"2023-11-02"},{"lineNumber":342,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":343,"author":{"gitId":"yicheng-toh"},"content":"* `set-diet-goal DAILY calories/500` Creates a single calories goal.","lastModifiedDate":"2023-11-02"},{"lineNumber":344,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":345,"author":{"gitId":"yicheng-toh"},"content":"### Deleting Diet Goals:","lastModifiedDate":"2023-10-30"},{"lineNumber":346,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":347,"author":{"gitId":"yicheng-toh"},"content":"`delete-diet-goal`","lastModifiedDate":"2023-10-30"},{"lineNumber":348,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":349,"author":{"gitId":"yicheng-toh"},"content":"You can delete your diet goals in AtheltiCLI by deleting the goal at the specified index.","lastModifiedDate":"2023-10-30"},{"lineNumber":350,"author":{"gitId":"yicheng-toh"},"content":"This index will be referenced via `list-diet-goal` command.","lastModifiedDate":"2023-10-30"},{"lineNumber":351,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":352,"author":{"gitId":"yicheng-toh"},"content":"**Syntax:**","lastModifiedDate":"2023-10-30"},{"lineNumber":353,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":354,"author":{"gitId":"yicheng-toh"},"content":"* `delete-diet-goal INDEX`","lastModifiedDate":"2023-10-30"},{"lineNumber":355,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":356,"author":{"gitId":"yicheng-toh"},"content":"**Parameters:**","lastModifiedDate":"2023-10-30"},{"lineNumber":357,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":358,"author":{"gitId":"yicheng-toh"},"content":"* INDEX: The index of the diet goal to be deleted. It must be a positive integer.","lastModifiedDate":"2023-10-30"},{"lineNumber":359,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":360,"author":{"gitId":"yicheng-toh"},"content":"**Examples:**","lastModifiedDate":"2023-10-30"},{"lineNumber":361,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":362,"author":{"gitId":"yicheng-toh"},"content":"* `delete-diet-goal 1` Deletes a diet goal that is located on the first index of the list.","lastModifiedDate":"2023-11-02"},{"lineNumber":363,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":364,"author":{"gitId":"yicheng-toh"},"content":"### Listing Diet Goals:","lastModifiedDate":"2023-10-30"},{"lineNumber":365,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":366,"author":{"gitId":"yicheng-toh"},"content":"`list-diet-goal`","lastModifiedDate":"2023-11-04"},{"lineNumber":367,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":368,"author":{"gitId":"yicheng-toh"},"content":"You can list all your diet goals in AtheltiCLI.","lastModifiedDate":"2023-11-02"},{"lineNumber":369,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":370,"author":{"gitId":"yicheng-toh"},"content":"**Syntax:**","lastModifiedDate":"2023-10-30"},{"lineNumber":371,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":372,"author":{"gitId":"yicheng-toh"},"content":"* `list-diet-goal`","lastModifiedDate":"2023-10-30"},{"lineNumber":373,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":374,"author":{"gitId":"yicheng-toh"},"content":"**Examples:**","lastModifiedDate":"2023-10-30"},{"lineNumber":375,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":376,"author":{"gitId":"yicheng-toh"},"content":"* `list-diet-goal`","lastModifiedDate":"2023-10-30"},{"lineNumber":377,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":378,"author":{"gitId":"yicheng-toh"},"content":"### Editing Diet Goals:","lastModifiedDate":"2023-10-30"},{"lineNumber":379,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":380,"author":{"gitId":"yicheng-toh"},"content":"`edit-diet-goal`","lastModifiedDate":"2023-10-30"},{"lineNumber":381,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":382,"author":{"gitId":"yicheng-toh"},"content":"You can edit the target value of your diet goals in AtheltiCLI, redefining the target value for the specified nutrient.","lastModifiedDate":"2023-11-02"},{"lineNumber":383,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":384,"author":{"gitId":"yicheng-toh"},"content":"This command takes in at least 2 arguments. You are able to edit multiple diet goals target value of the same time frame at once. ","lastModifiedDate":"2023-11-04"},{"lineNumber":385,"author":{"gitId":"yicheng-toh"},"content":"No repetition is allowed. The diet goal needs to be present before any edits is allowed.","lastModifiedDate":"2023-11-04"},{"lineNumber":386,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":387,"author":{"gitId":"yicheng-toh"},"content":"**Syntax:**","lastModifiedDate":"2023-10-30"},{"lineNumber":388,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":389,"author":{"gitId":"yicheng-toh"},"content":"* `edit-diet-goal \u003cDAILIY/WEEKLY\u003e [unhealthy] [calories/CALORIES] [protein/PROTEIN] [carb/CARBS] [fat/FAT]`","lastModifiedDate":"2023-11-04"},{"lineNumber":390,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":391,"author":{"gitId":"yicheng-toh"},"content":"**Parameters:**","lastModifiedDate":"2023-10-30"},{"lineNumber":392,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":393,"author":{"gitId":"yicheng-toh"},"content":"* DAILY/WEEKLY: This determines if the goal you want to edit is a daily goal or a weekly goal. It accepts 2 values.","lastModifiedDate":"2023-10-30"},{"lineNumber":394,"author":{"gitId":"yicheng-toh"},"content":"  DAILY goals account for what you eat for the day.","lastModifiedDate":"2023-10-30"},{"lineNumber":395,"author":{"gitId":"yicheng-toh"},"content":"  WEEKLY goals account for what you eat for the week.","lastModifiedDate":"2023-10-30"},{"lineNumber":396,"author":{"gitId":"yicheng-toh"},"content":"* unhealthy: This determines if you are trying to get more of this nutrient or less of it. ","lastModifiedDate":"2023-11-04"},{"lineNumber":397,"author":{"gitId":"yicheng-toh"},"content":"If this flag is placed, it means that you are trying to reduce the intake. Hence, exceeding the target value means ","lastModifiedDate":"2023-11-04"},{"lineNumber":398,"author":{"gitId":"yicheng-toh"},"content":"that you have not achieved your goal. If this flag is absent, it means that you are trying to increase the intake.","lastModifiedDate":"2023-11-04"},{"lineNumber":399,"author":{"gitId":"yicheng-toh"},"content":"* CALORIES: Your target value for calories intake, in terms of cal. The target value must be a positive integer.","lastModifiedDate":"2023-11-04"},{"lineNumber":400,"author":{"gitId":"yicheng-toh"},"content":"* PROTEIN: The target for protein intake, in terms of milligrams. The target value must be a positive integer.","lastModifiedDate":"2023-11-04"},{"lineNumber":401,"author":{"gitId":"yicheng-toh"},"content":"* CARBS: Your target value for carbohydrate intake, in terms of milligrams. The target value must be a positive integer.","lastModifiedDate":"2023-11-04"},{"lineNumber":402,"author":{"gitId":"yicheng-toh"},"content":"* FAT: Your target value for fats intake, in terms of milligrams. The target value must be a positive integer.","lastModifiedDate":"2023-11-04"},{"lineNumber":403,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":404,"author":{"gitId":"yicheng-toh"},"content":"**Note: At least one of the nutrients (CALORIES,PROTEIN,CARB,FAT) must be present!**","lastModifiedDate":"2023-11-04"},{"lineNumber":405,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":406,"author":{"gitId":"yicheng-toh"},"content":"You can create one or multiple nutrient goals with this command.","lastModifiedDate":"2023-10-30"},{"lineNumber":407,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":408,"author":{"gitId":"yicheng-toh"},"content":"**Examples:**","lastModifiedDate":"2023-11-04"},{"lineNumber":409,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":410,"author":{"gitId":"yicheng-toh"},"content":"* `edit-diet-goal DAILY calories/5000 protein/200 carb/500 fat/100` ","lastModifiedDate":"2023-11-04"},{"lineNumber":411,"author":{"gitId":"yicheng-toh"},"content":"Edits multiple nutrients goals if all of them exists.","lastModifiedDate":"2023-11-04"},{"lineNumber":412,"author":{"gitId":"yicheng-toh"},"content":"* `edit-diet-goal WEEKLY calories/5000` ","lastModifiedDate":"2023-11-04"},{"lineNumber":413,"author":{"gitId":"yicheng-toh"},"content":"Edits a single calories goal if the goal exists.","lastModifiedDate":"2023-11-04"},{"lineNumber":414,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":415,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":416,"author":{"gitId":"DaDevChia"},"content":"## Sleep Management","lastModifiedDate":"2023-11-02"},{"lineNumber":417,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":418,"author":{"gitId":"DaDevChia"},"content":"### Adding Sleep:","lastModifiedDate":"2023-11-02"},{"lineNumber":419,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":420,"author":{"gitId":"DaDevChia"},"content":"`add-sleep`  ","lastModifiedDate":"2023-11-02"},{"lineNumber":421,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":422,"author":{"gitId":"DaDevChia"},"content":"You can record your sleep timings in AtheltiCLI by adding your sleep start and end time. It also automagically calculates for you the duration of your sleep, as well as the sleep date.","lastModifiedDate":"2023-11-02"},{"lineNumber":423,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":424,"author":{"gitId":"DaDevChia"},"content":"**Syntax:**","lastModifiedDate":"2023-11-02"},{"lineNumber":425,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":426,"author":{"gitId":"DaDevChia"},"content":"* `add-sleep start/START end/END`","lastModifiedDate":"2023-11-02"},{"lineNumber":427,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":428,"author":{"gitId":"DaDevChia"},"content":"**Parameters:**","lastModifiedDate":"2023-11-02"},{"lineNumber":429,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":430,"author":{"gitId":"DaDevChia"},"content":"* START: The start time of the sleep. It must follow the ISO Date Time Format: yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-11-02"},{"lineNumber":431,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":432,"author":{"gitId":"DaDevChia"},"content":"* END: The end time of the sleep. It must follow the ISO Date Time Format: yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-11-02"},{"lineNumber":433,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":434,"author":{"gitId":"DaDevChia"},"content":"**Examples:**","lastModifiedDate":"2023-11-02"},{"lineNumber":435,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":436,"author":{"gitId":"DaDevChia"},"content":"Take note that all sleep entries have an assosciated date. ","lastModifiedDate":"2023-11-02"},{"lineNumber":437,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":438,"author":{"gitId":"DaDevChia"},"content":"All sleep entries with a start time before 06:00 will be taken to represent the previous days sleep. ","lastModifiedDate":"2023-11-02"},{"lineNumber":439,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":440,"author":{"gitId":"DaDevChia"},"content":"* `add-sleep start/2023-01-20 02:00 end/2023-01-20 08:00`  will be taken to represent the sleep record on `2022-01-19`, which is the day before, since the start time is before 06:00 on `2022-01-20`.","lastModifiedDate":"2023-11-02"},{"lineNumber":441,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":442,"author":{"gitId":"DaDevChia"},"content":"* `add-sleep start/2022-01-20 22:00 end/2022-01-21 06:00` will be taken to represent the sleep record on `2022-01-20`, since the start time is after 06:00 on `2022-01-20`.","lastModifiedDate":"2023-11-02"},{"lineNumber":443,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":444,"author":{"gitId":"DaDevChia"},"content":"### Listing Sleep:","lastModifiedDate":"2023-11-02"},{"lineNumber":445,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":446,"author":{"gitId":"DaDevChia"},"content":"`list-sleep`","lastModifiedDate":"2023-11-02"},{"lineNumber":447,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":448,"author":{"gitId":"DaDevChia"},"content":"You can see all your tracked sleep records in a list by using this command.","lastModifiedDate":"2023-11-02"},{"lineNumber":449,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":450,"author":{"gitId":"DaDevChia"},"content":"**Syntax:** `list-sleep`","lastModifiedDate":"2023-11-02"},{"lineNumber":451,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":452,"author":{"gitId":"DaDevChia"},"content":"**Example:** `list-sleep`","lastModifiedDate":"2023-11-02"},{"lineNumber":453,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":454,"author":{"gitId":"DaDevChia"},"content":"### Deleting Sleep:","lastModifiedDate":"2023-11-02"},{"lineNumber":455,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":456,"author":{"gitId":"DaDevChia"},"content":"`delete-sleep`  ","lastModifiedDate":"2023-11-02"},{"lineNumber":457,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":458,"author":{"gitId":"DaDevChia"},"content":"Accidentally added a sleep record? You can quickly delete sleep records by using the following command.","lastModifiedDate":"2023-11-02"},{"lineNumber":459,"author":{"gitId":"DaDevChia"},"content":"The index must be a positive number and is not larger than the number of sleep records recorded.","lastModifiedDate":"2023-11-02"},{"lineNumber":460,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":461,"author":{"gitId":"DaDevChia"},"content":"**Syntax:**","lastModifiedDate":"2023-11-02"},{"lineNumber":462,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":463,"author":{"gitId":"DaDevChia"},"content":"* `delete-sleep INDEX`","lastModifiedDate":"2023-11-02"},{"lineNumber":464,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":465,"author":{"gitId":"DaDevChia"},"content":"**Parameters:**","lastModifiedDate":"2023-11-02"},{"lineNumber":466,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":467,"author":{"gitId":"DaDevChia"},"content":"* INDEX: The index of the sleep record you wish to delete. It must be a positive number and is not larger than the number of sleep records recorded.","lastModifiedDate":"2023-11-02"},{"lineNumber":468,"author":{"gitId":"DaDevChia"},"content":"Refer to the list-sleep command for the index of the sleep record you wish to delete.","lastModifiedDate":"2023-11-02"},{"lineNumber":469,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":470,"author":{"gitId":"DaDevChia"},"content":"**Examples:**","lastModifiedDate":"2023-11-02"},{"lineNumber":471,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":472,"author":{"gitId":"DaDevChia"},"content":"Assuming that there are 5 sleep records in the list:","lastModifiedDate":"2023-11-02"},{"lineNumber":473,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":474,"author":{"gitId":"DaDevChia"},"content":"* `delete-sleep 5`  will delete the 5th sleep record in the sleep records list.","lastModifiedDate":"2023-11-02"},{"lineNumber":475,"author":{"gitId":"DaDevChia"},"content":"* `delete-sleep 1`  will delete the 1st sleep record in the sleep records list.","lastModifiedDate":"2023-11-02"},{"lineNumber":476,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":477,"author":{"gitId":"DaDevChia"},"content":"### Editing Sleep:","lastModifiedDate":"2023-11-02"},{"lineNumber":478,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":479,"author":{"gitId":"DaDevChia"},"content":"`edit-sleep`  ","lastModifiedDate":"2023-11-02"},{"lineNumber":480,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":481,"author":{"gitId":"DaDevChia"},"content":"You can modify existing sleep records in AtheltiCLI by specifying the sleep\u0027s index and then providing the new start and end times.","lastModifiedDate":"2023-11-02"},{"lineNumber":482,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":483,"author":{"gitId":"DaDevChia"},"content":"**Syntax:**","lastModifiedDate":"2023-11-02"},{"lineNumber":484,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":485,"author":{"gitId":"DaDevChia"},"content":"* `edit-sleep INDEX start/START end/END`","lastModifiedDate":"2023-11-02"},{"lineNumber":486,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":487,"author":{"gitId":"DaDevChia"},"content":"**Parameters:**","lastModifiedDate":"2023-11-02"},{"lineNumber":488,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":489,"author":{"gitId":"DaDevChia"},"content":"* INDEX: The index of the sleep record you wish to edit. It must be a positive number and is not larger than the number of sleep records recorded.","lastModifiedDate":"2023-11-02"},{"lineNumber":490,"author":{"gitId":"DaDevChia"},"content":"* START: The new start time of the sleep. It must follow the ISO Date Time Format: yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-11-02"},{"lineNumber":491,"author":{"gitId":"DaDevChia"},"content":"* END: The new end time of the sleep. It must follow the ISO Date Time Format: yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-11-02"},{"lineNumber":492,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":493,"author":{"gitId":"DaDevChia"},"content":"**Examples:**","lastModifiedDate":"2023-11-02"},{"lineNumber":494,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":495,"author":{"gitId":"DaDevChia"},"content":"Assuming that there are 5 sleep records in the list:","lastModifiedDate":"2023-11-02"},{"lineNumber":496,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":497,"author":{"gitId":"DaDevChia"},"content":"* `edit-sleep 5 2023-01-20 02:00 2023-01-20 08:00`  will edit the 5th sleep record in the sleep records list to have a start time of `2023-01-20 02:00` and an end time of `2023-01-20 08:00`. ","lastModifiedDate":"2023-11-02"},{"lineNumber":498,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":499,"author":{"gitId":"DaDevChia"},"content":"* `edit-sleep 1 2022-01-20 22:00 2022-01-21 06:00` will edit the 1st sleep record in the sleep records list to have a start time of `2022-01-20 22:00` and an end time of `2022-01-21 06:00`.","lastModifiedDate":"2023-11-02"},{"lineNumber":500,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":501,"author":{"gitId":"DaDevChia"},"content":"### Finding Sleep:","lastModifiedDate":"2023-11-02"},{"lineNumber":502,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":503,"author":{"gitId":"DaDevChia"},"content":"`find-sleep date/DATE`","lastModifiedDate":"2023-11-02"},{"lineNumber":504,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":505,"author":{"gitId":"DaDevChia"},"content":"You can find your sleep record on a specific date in AtheltiCLI.","lastModifiedDate":"2023-11-02"},{"lineNumber":506,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":507,"author":{"gitId":"DaDevChia"},"content":"**Syntax:**","lastModifiedDate":"2023-11-02"},{"lineNumber":508,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":509,"author":{"gitId":"DaDevChia"},"content":"* `find-sleep date/DATE`","lastModifiedDate":"2023-11-02"},{"lineNumber":510,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":511,"author":{"gitId":"DaDevChia"},"content":"**Parameters:**","lastModifiedDate":"2023-11-02"},{"lineNumber":512,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":513,"author":{"gitId":"DaDevChia"},"content":"* DATE: The date of the sleep. It must follow the ISO Date Format: yyyy-MM-dd.","lastModifiedDate":"2023-11-02"},{"lineNumber":514,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":515,"author":{"gitId":"DaDevChia"},"content":"**Examples:**","lastModifiedDate":"2023-11-02"},{"lineNumber":516,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":517,"author":{"gitId":"DaDevChia"},"content":"* `find-sleep date/2021-09-01`","lastModifiedDate":"2023-11-02"},{"lineNumber":518,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":519,"author":{"gitId":"DaDevChia"},"content":"---","lastModifiedDate":"2023-11-02"},{"lineNumber":520,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":521,"author":{"gitId":"skylee03"},"content":"## Miscellaneous","lastModifiedDate":"2023-11-01"},{"lineNumber":522,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":523,"author":{"gitId":"skylee03"},"content":"### Finding Records:","lastModifiedDate":"2023-11-01"},{"lineNumber":524,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":525,"author":{"gitId":"skylee03"},"content":"You can find all your records, including activities, sleeps, and diets, on a specific date in AtheltiCLI.","lastModifiedDate":"2023-11-01"},{"lineNumber":526,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":527,"author":{"gitId":"skylee03"},"content":"**Syntax:**","lastModifiedDate":"2023-11-01"},{"lineNumber":528,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":529,"author":{"gitId":"skylee03"},"content":"* `find DATE`","lastModifiedDate":"2023-11-01"},{"lineNumber":530,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":531,"author":{"gitId":"skylee03"},"content":"**Parameters:**","lastModifiedDate":"2023-11-01"},{"lineNumber":532,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":533,"author":{"gitId":"skylee03"},"content":"* `DATE`: The date of the records. It must follow the ISO Date Format: `yyyy-MM-dd`.","lastModifiedDate":"2023-11-01"},{"lineNumber":534,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":535,"author":{"gitId":"skylee03"},"content":"**Example:**","lastModifiedDate":"2023-11-01"},{"lineNumber":536,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":537,"author":{"gitId":"skylee03"},"content":"* `find 2023-11-01`","lastModifiedDate":"2023-11-01"},{"lineNumber":538,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":539,"author":{"gitId":"skylee03"},"content":"### Saving Files:","lastModifiedDate":"2023-11-01"},{"lineNumber":540,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":541,"author":{"gitId":"skylee03"},"content":"You can save files while using AthletiCLI if you want to, rather than waiting until the AthletiCLI exits to automatically save them.","lastModifiedDate":"2023-11-01"},{"lineNumber":542,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":543,"author":{"gitId":"skylee03"},"content":"**Syntax:**","lastModifiedDate":"2023-11-01"},{"lineNumber":544,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":545,"author":{"gitId":"skylee03"},"content":"* `save`","lastModifiedDate":"2023-11-01"},{"lineNumber":546,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":547,"author":{"gitId":"skylee03"},"content":"### Exiting AthletiCLI:","lastModifiedDate":"2023-11-01"},{"lineNumber":548,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":549,"author":{"gitId":"skylee03"},"content":"You can use the `bye` command at any time to safely store the file and exit AthletiCLI.","lastModifiedDate":"2023-11-01"},{"lineNumber":550,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":551,"author":{"gitId":"skylee03"},"content":"**Syntax:**","lastModifiedDate":"2023-11-01"},{"lineNumber":552,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":553,"author":{"gitId":"skylee03"},"content":"* `bye`","lastModifiedDate":"2023-11-01"},{"lineNumber":554,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":555,"author":{"gitId":"skylee03"},"content":"### Viewing Help Messages:","lastModifiedDate":"2023-11-01"},{"lineNumber":556,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":557,"author":{"gitId":"skylee03"},"content":"If you forget a command, you can always use the `help` command to see their syntax.","lastModifiedDate":"2023-11-01"},{"lineNumber":558,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":559,"author":{"gitId":"skylee03"},"content":"**Syntax:**","lastModifiedDate":"2023-11-01"},{"lineNumber":560,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":561,"author":{"gitId":"skylee03"},"content":"* `help [COMMAND]`","lastModifiedDate":"2023-11-01"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":563,"author":{"gitId":"skylee03"},"content":"**Parameters:**","lastModifiedDate":"2023-11-01"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":565,"author":{"gitId":"skylee03"},"content":"* `COMMAND`: The command you want to view. If it is omitted, a list containing the syntax of all commands will be shown.","lastModifiedDate":"2023-11-01"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":567,"author":{"gitId":"skylee03"},"content":"**Examples:**","lastModifiedDate":"2023-11-01"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":569,"author":{"gitId":"skylee03"},"content":"* `help` lists the syntax of all commands.","lastModifiedDate":"2023-11-01"},{"lineNumber":570,"author":{"gitId":"skylee03"},"content":"* `help add-diet` shows the syntax of the `add-diet` command.","lastModifiedDate":"2023-11-01"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":573,"author":{"gitId":"DaDevChia"},"content":"# Summary of Commands","lastModifiedDate":"2023-11-02"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":575,"author":{"gitId":"DaDevChia"},"content":"## **Activity Management**","lastModifiedDate":"2023-11-02"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":577,"author":{"gitId":"DaDevChia"},"content":"| **Command**               | **Syntax**                                                                                    | **Parameters**                                         | **Examples**                                             |","lastModifiedDate":"2023-11-02"},{"lineNumber":578,"author":{"gitId":"AlWo223"},"content":"|---------------------------|-----------------------------------------------------------------------------------------------|--------------------------------------------------------|----------------------------------------------------------|","lastModifiedDate":"2023-11-05"},{"lineNumber":579,"author":{"gitId":"DaDevChia"},"content":"| `add-activity`            | `add-activity CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME`                  | CAPTION, DURATION, DISTANCE, DATETIME                  | `add-activity Morning Run duration/60 distance/10000 datetime/2021-09-01 06:00` |","lastModifiedDate":"2023-11-02"},{"lineNumber":580,"author":{"gitId":"DaDevChia"},"content":"| `add-run`                 | `add-run CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME elevation/ELEVATION`   | CAPTION, DURATION, DISTANCE, DATETIME, ELEVATION      | -                                                        |","lastModifiedDate":"2023-11-02"},{"lineNumber":581,"author":{"gitId":"DaDevChia"},"content":"| `add-swim`                | `add-swim CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME laps/LAPS`            | CAPTION, DURATION, DISTANCE, DATETIME, LAPS            | -                                                        |","lastModifiedDate":"2023-11-02"},{"lineNumber":582,"author":{"gitId":"DaDevChia"},"content":"| `add-cycle`               | `add-cycle CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME elevation/ELEVATION` | CAPTION, DURATION, DISTANCE, DATETIME, ELEVATION      | `add-cycle Evening Ride duration/120 distance/20000 datetime/2021-09-01 18:00 elevation/1000` |","lastModifiedDate":"2023-11-02"},{"lineNumber":583,"author":{"gitId":"DaDevChia"},"content":"| `delete-activity`         | `delete-activity INDEX`                                                                       | INDEX                                                  | `delete-activity 2`                                       |","lastModifiedDate":"2023-11-02"},{"lineNumber":584,"author":{"gitId":"DaDevChia"},"content":"| `list-activity`           | `list-activity [-d]`                                                                          | -d                                                     | `list-activity`, `list-activity -d`                        |","lastModifiedDate":"2023-11-02"},{"lineNumber":585,"author":{"gitId":"DaDevChia"},"content":"| `edit-activity`           | `edit-activity INDEX CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME`           | INDEX, CAPTION, DURATION, DISTANCE, DATETIME           | `edit-activity 1 Morning Run duration/60 distance/10000 datetime/2021-09-01 06:00` |","lastModifiedDate":"2023-11-02"},{"lineNumber":586,"author":{"gitId":"DaDevChia"},"content":"| `edit-run`                | Similar to `edit-activity` but with elevation.                                                | Same as `edit-activity` with ELEVATION                 | -                                                        |","lastModifiedDate":"2023-11-02"},{"lineNumber":587,"author":{"gitId":"DaDevChia"},"content":"| `edit-swim`               | Similar to `edit-activity` but with laps.                                                     | Same as `edit-activity` with LAPS                      | -                                                        |","lastModifiedDate":"2023-11-02"},{"lineNumber":588,"author":{"gitId":"DaDevChia"},"content":"| `edit-cycle`              | Similar to `edit-activity` but with elevation.                                                | Same as `edit-activity` with ELEVATION                 | `edit-cycle 2 Evening Ride duration/120 distance/20000 datetime/2021-09-01 18:00 elevation/1000` |","lastModifiedDate":"2023-11-02"},{"lineNumber":589,"author":{"gitId":"AlWo223"},"content":"| `set-activity-goal`       | `set-activity-goal sport/SPORT type/TYPE period/PERIOD target/TARGET`                         | SPORT, TARGET, PERIOD, VALUE                           | `set-activity-goal sport/running type/distance period/weekly target/10000` |","lastModifiedDate":"2023-11-05"},{"lineNumber":590,"author":{"gitId":"AlWo223"},"content":"| `edit-activity-goal`      | `edit-activity-goal sport/SPORT type/TYPE period/PERIOD target/TARGET`                        | SPORT, TARGET, PERIOD, VALUE                           | `edit-activity-goal sport/running type/distance period/weekly target/20000` |","lastModifiedDate":"2023-11-05"},{"lineNumber":591,"author":{"gitId":"DaDevChia"},"content":"| `list-activity-goal`      | `list-activity-goal`                                                                          | None                                                   | `list-activity-goal`                                       |","lastModifiedDate":"2023-11-02"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":593,"author":{"gitId":"DaDevChia"},"content":"## **Diet Management**","lastModifiedDate":"2023-11-02"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":595,"author":{"gitId":"DaDevChia"},"content":"| **Command**               | **Syntax**                                                                          | **Parameters**                                         | **Examples**                                             |","lastModifiedDate":"2023-11-02"},{"lineNumber":596,"author":{"gitId":"DaDevChia"},"content":"|---------------------------|-------------------------------------------------------------------------------------|--------------------------------------------------------|----------------------------------------------------------|","lastModifiedDate":"2023-11-02"},{"lineNumber":597,"author":{"gitId":"DaDevChia"},"content":"| `add-diet`                | `add-diet calories/CALORIES protein/PROTEIN carb/CARB fat/FAT datetime/DATETIME`    | CALORIES, PROTEIN, CARB, FAT, DATETIME                 | `add-diet calories/500 protein/20 carb/50 fat/10 datetime/2021-09-01 06:00` |","lastModifiedDate":"2023-11-02"},{"lineNumber":598,"author":{"gitId":"DaDevChia"},"content":"| `edit-diet`               | `edit-diet INDEX [calories/CALORIES] [protein/PROTEIN] [carb/CARB] [fat/FAT] [datetime/DATETIME]` | INDEX, [CALORIES], [PROTEIN], [CARB], [FAT], [DATETIME] | `edit-diet 1 calories/500 protein/20 carb/50 fat/10 datetime/2021-09-01 06:00` |","lastModifiedDate":"2023-11-02"},{"lineNumber":599,"author":{"gitId":"DaDevChia"},"content":"| `delete-diet`             | `delete-diet INDEX`                                                                 | INDEX                                                  | `delete-diet 1`                                           |","lastModifiedDate":"2023-11-02"},{"lineNumber":600,"author":{"gitId":"DaDevChia"},"content":"| `list-diet`               | `list-diet`                                                                         | None                                                   | `list-diet`                                               |","lastModifiedDate":"2023-11-02"},{"lineNumber":601,"author":{"gitId":"DaDevChia"},"content":"| `find-diet`               | `find-diet date/DATE`                                                               | DATE                                                   | `find-diet date/2021-09-01`                               |","lastModifiedDate":"2023-11-02"},{"lineNumber":602,"author":{"gitId":"DaDevChia"},"content":"| `set-diet-goal`           | `set-diet-goal \u003cDAILY/WEEKLY\u003e [calories/CALORIES] [protein/PROTEIN] [carb/CARBS] [fat/FAT]` | DAILY/WEEKLY, [CALORIES], [PROTEIN], [CARBS], [FAT]    | `set-diet-goal WEEKLY calories/500 fats/600` |","lastModifiedDate":"2023-11-02"},{"lineNumber":603,"author":{"gitId":"DaDevChia"},"content":"| `edit-diet-goal`          | `edit-diet-goal \u003cDAILIY/WEEKLY\u003e [calories/CALORIES] [protein/PROTEIN] [carb/CARBS] [fat/FAT]` | DAILY/WEEKLY, [CALORIES], [PROTEIN], [CARBS], [FAT]    | `edit-diet-goal WEEKLY calories/500 fats/600` |","lastModifiedDate":"2023-11-02"},{"lineNumber":604,"author":{"gitId":"DaDevChia"},"content":"| `delete-diet-goal`        | `delete-diet-goal INDEX`                                                            | INDEX                                                  | `delete-diet-goal 1`                                      |","lastModifiedDate":"2023-11-02"},{"lineNumber":605,"author":{"gitId":"DaDevChia"},"content":"| `list-diet-goal`          | `list-diet-goal`                                                                    | None                                                   | `list-diet-goal`                                          |","lastModifiedDate":"2023-11-02"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":608,"author":{"gitId":"DaDevChia"},"content":"## Sleep Management","lastModifiedDate":"2023-11-02"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":610,"author":{"gitId":"DaDevChia"},"content":"| **Command**               | **Syntax**                                                                          | **Parameters**                                         | **Examples**                                             |","lastModifiedDate":"2023-11-02"},{"lineNumber":611,"author":{"gitId":"DaDevChia"},"content":"|---------------------------|-------------------------------------------------------------------------------------|--------------------------------------------------------|----------------------------------------------------------|","lastModifiedDate":"2023-11-02"},{"lineNumber":612,"author":{"gitId":"DaDevChia"},"content":"| `add-sleep`               | `add-sleep start/START end/END`                                                      | START, END                                             | `add-sleep start/2023-01-20 02:00 end/2023-01-20 08:00` |","lastModifiedDate":"2023-11-02"},{"lineNumber":613,"author":{"gitId":"DaDevChia"},"content":"| `list-sleep`              | `list-sleep`                                                                        | None                                                   | `list-sleep`                                             |","lastModifiedDate":"2023-11-02"},{"lineNumber":614,"author":{"gitId":"DaDevChia"},"content":"| `delete-sleep`            | `delete-sleep INDEX`                                                                | INDEX                                                  | `delete-sleep 1`                                         |","lastModifiedDate":"2023-11-02"},{"lineNumber":615,"author":{"gitId":"DaDevChia"},"content":"| `edit-sleep`              | `edit-sleep INDEX start/START end/END`                                               | INDEX, START, END                                      | `edit-sleep 1 2023-01-20 02:00 2023-01-20 08:00`         |","lastModifiedDate":"2023-11-02"},{"lineNumber":616,"author":{"gitId":"DaDevChia"},"content":"| `find-sleep`              | `find-sleep date/DATE`                                                              | DATE                                                   | `find-sleep date/2021-09-01`                             |","lastModifiedDate":"2023-11-02"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":618,"author":{"gitId":"DaDevChia"},"content":"## Miscellaneous","lastModifiedDate":"2023-11-02"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":620,"author":{"gitId":"DaDevChia"},"content":"| **Command**               | **Syntax**                                                                          | **Parameters**                                         | **Examples**                                             |","lastModifiedDate":"2023-11-02"},{"lineNumber":621,"author":{"gitId":"DaDevChia"},"content":"|---------------------------|-------------------------------------------------------------------------------------|--------------------------------------------------------|----------------------------------------------------------|","lastModifiedDate":"2023-11-02"},{"lineNumber":622,"author":{"gitId":"DaDevChia"},"content":"| `find`                    | `find DATE`                                                                         | DATE                                                   | `find 2023-11-01`                                        |","lastModifiedDate":"2023-11-02"},{"lineNumber":623,"author":{"gitId":"DaDevChia"},"content":"| `save`                    | `save`                                                                              | None                                                   | `save`                                                   |","lastModifiedDate":"2023-11-02"},{"lineNumber":624,"author":{"gitId":"DaDevChia"},"content":"| `bye`                     | `bye`                                                                               | None                                                   | `bye`                                                    |","lastModifiedDate":"2023-11-02"},{"lineNumber":625,"author":{"gitId":"DaDevChia"},"content":"| `help`                    | `help [COMMAND]`                                                                    | [COMMAND]                                              | `help`, `help add-diet`                                  |","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"skylee03":50,"DaDevChia":147,"AlWo223":135,"yicheng-toh":156,"-":37,"nihalzp":100}},{"path":"docs/puml/Activity.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"@startuml","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"class Activity {","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"class Run {","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"class Cycle {","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"class Swim {","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"class ActivityList {","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"class Data {","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"Activity \u003c|-- Run","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"Activity \u003c|-- Cycle","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"Activity \u003c|-- Swim","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"ActivityList o-- Activity","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"Data o-- ActivityList","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"@enduml","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"AlWo223":27}},{"path":"docs/puml/ActivityGoalEvaluation.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"@startuml","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"skinparam Style strictuml","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"skinparam SequenceMessageAlignment center","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"participant \":ActivityGoal\" as ActivityGoal LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"participant \"data:Data\" as Data #lightgrey","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"participant \"activities:ActivityList\" as activities #lightgrey","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"ActivityGoal++","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"-\u003e ActivityGoal: isAchieved(data)","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"ActivityGoal -\u003e ActivityGoal++: getCurrentValue(data)","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"ActivityGoal -\u003e ActivityGoal++: getActivityClass()","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"ActivityGoal --\u003e ActivityGoal--: activityClass","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"ActivityGoal -\u003e Data++: getActivities()","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"Data --\u003e ActivityGoal--: activities","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"ActivityGoal -\u003e activities++: getTotalDistance/Duration(activityClass, timespan)","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"activities -\u003e activities++: filterByTimespan(timespan)","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"activities --\u003e activities--: filteredActivities","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"activities --\u003e ActivityGoal--: total","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"ActivityGoal --\u003e ActivityGoal--","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"\u003c-- ActivityGoal: isAchieved","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"@enduml","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"AlWo223":28}},{"path":"docs/puml/AddActivity.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"skinparam Style strictuml","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"skinparam SequenceMessageAlignment center","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"participant \":AthletiCLI\" as AthletiCLI LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"participant \"Parser\" as Parser \u003c\u003cclass\u003e\u003e #lightblue","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"participant \"a:Activity\" as Activity #yellow","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"participant \"c:AddActivityCommand\" as AddActivityCommand #lightgreen","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"participant \"data:Data\" as Data #lightgrey","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"participant \"activities:ActivityList\" as activities #lightgrey","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"AthletiCLI++","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"AthletiCLI -\u003e Parser++: parseCommand(userInput)","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"Parser -\u003e Parser++: parseActivity(arguments)","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"Parser -\u003e Activity++: Activity()","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"Activity --\u003e Parser--: a","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"Parser --\u003e Parser: a","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"Parser--","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"Parser -\u003e AddActivityCommand++: parseAddActivityCommand(a)","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"AddActivityCommand --\u003e Parser--: c","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"Parser --\u003e AthletiCLI--: c","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"AthletiCLI -\u003e AddActivityCommand++: execute(a, data)","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"AddActivityCommand -\u003e Data++: getActivities()","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"\u0027Data --\u003e activities++","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"\u0027activities --\u003e Data--: activities","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"Data --\u003e AddActivityCommand--: activities","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"AddActivityCommand -\u003e activities++: add(a)","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"activities --\u003e AddActivityCommand--","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"AddActivityCommand --\u003e AthletiCLI--: message","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"destroy AddActivityCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"AlWo223":37}},{"path":"docs/puml/AddActivityGoal.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"@startuml","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"skinparam Style strictuml","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"skinparam SequenceMessageAlignment center","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"participant \":AthletiCLI\" as AthletiCLI LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"participant \"Parser\" as Parser \u003c\u003cclass\u003e\u003e #lightblue","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"participant \"g:ActivityGoal\" as ActivityGoal #yellow","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"participant \"c:SetActivityGoalCommand\" as SetActivityGoalCommand #lightgreen","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"participant \"data:Data\" as Data #lightgrey","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"participant \"activityGoals:ActivityGoalList\" as activityGoals #lightgrey","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"AthletiCLI++","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"AthletiCLI -\u003e Parser++: parseCommand(userInput)","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"Parser -\u003e Parser++: parseActivityGoal(arguments)","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"Parser -\u003e ActivityGoal++: ActivityGoal()","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"ActivityGoal --\u003e Parser--: g","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"Parser --\u003e Parser: g","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"Parser--","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"Parser -\u003e SetActivityGoalCommand++: SetActivityGoalCommand(g)","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"SetActivityGoalCommand --\u003e Parser--: c","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"Parser --\u003e AthletiCLI--: c","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"AthletiCLI -\u003e SetActivityGoalCommand++: execute(g, data)","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"SetActivityGoalCommand -\u003e Data++: getActivityGoals()","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"Data --\u003e SetActivityGoalCommand--: activityGoals","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"SetActivityGoalCommand -\u003e activityGoals++: add(g)","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"activityGoals --\u003e SetActivityGoalCommand--","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"SetActivityGoalCommand --\u003e AthletiCLI--: message","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"destroy SetActivityGoalCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"@enduml","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"AlWo223":35}},{"path":"docs/puml/DataClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yicheng-toh"},"content":"@startuml","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"hide circle","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"class StorableList{","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"    load()","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"    save()","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"    {abstract} parse(s:String)","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"    {abstract} unparse(t:T)","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"class ActivityList{}","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"class ActivityGoalLIst{}","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"class DietList{}","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"class DietGoalList{}","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"yicheng-toh"},"content":"class SleepList{}","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":"class SleepGoalList{","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"yicheng-toh"},"content":"interface Findable{","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"    find(date: LocalDate): ArrayList\u003cT\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"class Data{","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"    getInstance(): Data","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"yicheng-toh"},"content":"    load()","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"    save()","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"Findable \u003c|.. ActivityList","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"Findable \u003c|.. DietList","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"Findable \u003c|.. SleepList","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"yicheng-toh"},"content":"StorableList \u003c|-- ActivityList","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"yicheng-toh"},"content":"StorableList \u003c|-- DietList","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"yicheng-toh"},"content":"StorableList \u003c|-- SleepList","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"yicheng-toh"},"content":"StorableList \u003c|-- ActivityGoalLIst","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"yicheng-toh"},"content":"StorableList \u003c|-- DietGoalList","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"yicheng-toh"},"content":"StorableList \u003c|-- SleepGoalList","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"yicheng-toh"},"content":"Data --u- ActivityList","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"yicheng-toh"},"content":"Data --u- DietList","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"yicheng-toh"},"content":"Data --u- SleepList","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"yicheng-toh"},"content":"Data --u- ActivityGoalLIst","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"yicheng-toh"},"content":"Data --u- DietGoalList","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"yicheng-toh"},"content":"Data --u- SleepGoalList","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"yicheng-toh"},"content":"@enduml","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"yicheng-toh":53}},{"path":"docs/puml/DietGoalClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yicheng-toh"},"content":"@startuml","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"hide circle","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"abstract class Goal{","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"    timeSpan:TimeSpan","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"    getTimeSpan():TimeSpan","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"    checkData(date: LocalDate, timeSpan: TimeSpan): boolean","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"    {abstract} isAcheived(data:Data): boolean","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"class DietGoal{","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"    nutrient: String","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"    targetValue: int","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"    updateCurrentValue(data:Data): int","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"yicheng-toh"},"content":"    getPastDates(date:LocalDate, timeSpan: TimeSpan): ArrayList\u003cLocalDate\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":"    isAcheived(data:Data): boolean","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"yicheng-toh"},"content":"class DietGoalList{","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"    unparse(dietGoal: DietGoal): String","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"    parse(s: String): DietGoal","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"Goal \u003c|-- DietGoal","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"DietGoalList -- \"*\" DietGoal :contains \u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"@enduml","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"yicheng-toh":33}},{"path":"docs/puml/DietGoals.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yicheng-toh"},"content":"@startuml","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"skinparam Style strictuml","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"skinparam SequenceMessageAlignment center","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"participant \":AthletiCLI\" as AthletiCLI #lightblue","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"participant \":Parser\" as Parser #lightgreen","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"participant \":dietGoal\" as dietGoal #lightyellow","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"participant \":SetDietGoalCommand\" as SetDietGoalCommand #lightpink","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"participant \"temp:dietGoalList\" as tempDietGoalList #yellow","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"participant \"data:Data\" as dataData","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"participant \"data:dietGoalList\" as dataDietGoalList #yellow","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"\u0027autonumber","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"AthletiCLI++","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"AthletiCLI -\u003e Parser++ : ParseCommand(\"set-diet-goal fats/1\")","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"Parser -\u003e Parser++ : ParseDietGoalSetEdit(\"fats/1\")","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"yicheng-toh"},"content":"create tempDietGoalList","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":"Parser -\u003e tempDietGoalList++ : dietGoalList()","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":"tempDietGoalList --\u003e Parser-- : dietGoalList","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"yicheng-toh"},"content":"    loop number of valid new diet goals","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"    create dietGoal","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"    Parser -\u003e dietGoal++ : dietGoal()","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"    dietGoal --\u003e Parser-- : dietGoal","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"    end","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"Parser --\u003e Parser-- : dietGoalList","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"create SetDietGoalCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"Parser -\u003e SetDietGoalCommand++ : SetDietGoalCommand()","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"SetDietGoalCommand --\u003e Parser-- : SetDietGoalCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"Parser --\u003e AthletiCLI-- : SetDietGoalCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"AthletiCLI -\u003e SetDietGoalCommand++ : execute()","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"yicheng-toh"},"content":"SetDietGoalCommand -\u003e dataData++ : getDietGoals()","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"yicheng-toh"},"content":"dataData --\u003e SetDietGoalCommand-- : data:dietGoalList","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"yicheng-toh"},"content":"    loop number of valid new diet goals","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"yicheng-toh"},"content":"    SetDietGoalCommand -\u003e dataDietGoalList++ : add()","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"yicheng-toh"},"content":"    dataDietGoalList --\u003e SetDietGoalCommand--","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"yicheng-toh"},"content":"    end","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"yicheng-toh"},"content":"destroy tempDietGoalList","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"yicheng-toh"},"content":"SetDietGoalCommand --\u003e AthletiCLI-- : messages","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"yicheng-toh"},"content":"destroy SetDietGoalCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"yicheng-toh"},"content":"@enduml","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"yicheng-toh":47}},{"path":"docs/puml/HelpAddDiet.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"@startuml","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"skinparam Style strictuml","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"skinparam SequenceMessageAlignment center","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"participant \":AthletiCLI\" as AthletiCLI #lightblue","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParser\" as Parser #lightgreen","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"participant \":HelpCommand\" as HelpCommand #lightpink","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"participant \":Ui\" as Ui #lightyellow","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"actor User as User","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"\u0027autonumber","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"AthletiCLI++","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"AthletiCLI -\u003e Ui++ : getUserCommand()","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"User -\u003e Ui : \"help add-diet\"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"Ui --\u003e AthletiCLI-- : \"help add-diet\"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"AthletiCLI -\u003e Parser++ : parseCommand(\"help add-diet\")","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"create HelpCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"Parser -\u003e HelpCommand++ : new HelpCommand(\"add-diet\")","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"HelpCommand --\u003e Parser-- : :HelpCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"Parser --\u003e AthletiCLI-- : :HelpCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"AthletiCLI -\u003e HelpCommand++ : execute(data)","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"HelpCommand --\u003e AthletiCLI-- : feedback:String","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"AthletiCLI -\u003e Ui++ : showMessages(feedback)","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"Ui --\u003e AthletiCLI--","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"destroy HelpCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"@enduml","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"skylee03":29}},{"path":"docs/puml/MainClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yicheng-toh"},"content":"@startuml","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"hide circle","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"class AthletiCLI{","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"    main()","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"    run()","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"class Ui{","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"    getInstance():Ui","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"    getUserCommand():String","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"    showMessages(Messages: String)","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"    showException(e: Exception)","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"class Parser{","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"yicheng-toh"},"content":"     parseCommand(rawUserInput: String):Command","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":"class Data{","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"yicheng-toh"},"content":"    getInstance():Data","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"yicheng-toh"},"content":"    load()","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"    save()","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"AthletiCLI --\u003e Ui","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"AthletiCLI --\u003e Parser","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"AthletiCLI --\u003e Data","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"@enduml","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"yicheng-toh":31}},{"path":"docs/puml/Save.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"@startuml","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"skinparam Style strictuml","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"skinparam SequenceMessageAlignment center","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"participant \":SaveCommand\" as SaveCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"participant \":Data\" as Data #lightblue","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"participant \":StorableList\" as StorableList #lightgreen","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nStorage\" as Storage #lightpink","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"\u0027autonumber","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"SaveCommand -\u003e Data++ : save()","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"Data -\u003e StorableList++ : save()","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"StorableList -\u003e Storage++ : save(path, items)","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"Storage --\u003e StorableList--","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"StorableList --\u003e Data--","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"ref over Data : Save other lists","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"Data --\u003e SaveCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"@enduml","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"skylee03":20}},{"path":"docs/puml/Sleep/SleepAndSleeplistClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"@startuml","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"package athleticli.data {","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"    interface Findable\u003cT\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"        + find(date: LocalDate): ArrayList\u003cT\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"    class StorableList\u003cT\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"        - path: String","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"        ","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"        + StorableList(path: String)","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"        + save(): void","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"        + load(): void","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"        + abstract parse(s: String): T","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"        + abstract unparse(t: T): String","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"package athleticli.data.sleep {","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"    class Sleep {","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"        - static DATE_TIME_FORMATTER: DateTimeFormatter","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"        - static DATE_FORMATTER: DateTimeFormatter","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"        - startDateTime: LocalDateTime","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"        - toDateTime: LocalDateTime","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"        - sleepingDuration: LocalTime","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"        - sleepDate: LocalDate","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"        + Sleep(startDateTime: LocalDateTime, toDateTime: LocalDateTime)","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"        + getStartDateTime(): LocalDateTime","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"        + getToDateTime(): LocalDateTime","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"        + getSleepDate(): LocalDate","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"        + getSleepingTime(): LocalTime","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"        + toString(): String","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"        + toDetailedString(): String","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"        - calculateSleepingDuration(): LocalTime","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"        - calculateSleepDate(): LocalDate","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"        - generateSleepingDurationStringOutput(): String","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"        - generateStartDateTimeStringOutput(): String","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"        - generateToDateTimeStringOutput(): String","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"        - generateSleepDateStringOutput(): String","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"    class SleepList {","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"        + SleepList()","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"        + find(date: LocalDate): ArrayList\u003cSleep\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"        + sort(): void","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"        + filterByTimespan(timeSpan: Goal.TimeSpan): ArrayList\u003cSleep\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"        + getTotalSleepDuration(sleepClass: Class\u003c?\u003e, timeSpan: Goal.TimeSpan): int","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"        + parse(s: String): Sleep","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"        + unparse(sleep: Sleep): String","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"    SleepList --|\u003e StorableList","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"    SleepList ..\u003e Sleep: \"*\"","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"    SleepList ..|\u003e Findable","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"DaDevChia"},"content":"@enduml","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"DaDevChia":60}},{"path":"docs/puml/architectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yicheng-toh"},"content":"@startuml","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"\u0027!include style.puml","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"hide footbox","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"actor User","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"\u0027box  #white","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"\u0027frame     \"\"f\"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"\u0027participant user2","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"\u0027participant AthletiCLI","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"\u0027participant Ui","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"\u0027participant Parser","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"\u0027participant Data","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"\u0027participant Storage","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"\u0027participant Command","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"frame \"AthletiCLI App\"{","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"rectangle AthletiCLI","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"yicheng-toh"},"content":"rectangle Ui","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":"rectangle Parser","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":"rectangle Data","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"yicheng-toh"},"content":"rectangle Storage","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"yicheng-toh"},"content":"rectangle Command","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"\u0027end rectangle","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"\u0027end frame","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"yicheng-toh"},"content":"\u0027end box","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"User -d-\u003e Ui","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"Ui -r-\u003e AthletiCLI","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"AthletiCLI -d-\u003e Parser","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"AthletiCLI -d-\u003e Command","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"AthletiCLI -d-\u003e Data","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"yicheng-toh"},"content":"Command -u-\u003e Data","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"yicheng-toh"},"content":"Parser -r-\u003e Data","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"yicheng-toh"},"content":"Data -d-\u003e Storage","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"yicheng-toh"},"content":"@enduml","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"yicheng-toh":39}},{"path":"docs/team/skylee03.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"# Yang Ming-Tian - Project Portfolio Page","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"## Overview","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"skylee03":6}},{"path":"docs/team/yicheng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yicheng-toh"},"content":"# John Doe - Project Portfolio Page","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"## Overview","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"yicheng-toh":6}},{"path":"src/main/java/athleticli/AthletiCLI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.SaveCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"import athleticli.parser.Parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"import athleticli.ui.Ui;","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":" * Defines the basic structure and the behavior of AthletiCLI.","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"public class AthletiCLI {","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"    private static Logger logger \u003d Logger.getLogger(AthletiCLI.class.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"    private static Ui ui \u003d Ui.getInstance();","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"    private static Data data \u003d Data.getInstance();","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"     * Constructs an \u003ccode\u003eAthletiCLI\u003c/code\u003e object.","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"    private AthletiCLI() {","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"            logger.addHandler(new FileHandler(\"%t/athleticli-log.txt\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"        } catch(IOException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"            logger.addHandler(new ConsoleHandler());","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"skylee03"},"content":"     * Creates an `AthletiCLI` object and runs it.","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"skylee03"},"content":"     * @param args  Arguments obtained from the command line.","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"skylee03"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"skylee03"},"content":"        /* save data when the JVM begins its shutdown sequence */","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"skylee03"},"content":"        Runtime.getRuntime().addShutdownHook(new Thread(() -\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"skylee03"},"content":"            try {","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"skylee03"},"content":"                final String[] feedback \u003d new SaveCommand().execute(data);","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"skylee03"},"content":"                ui.showMessages(feedback);","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"skylee03"},"content":"            } catch (AthletiException e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"skylee03"},"content":"                ui.showException(e);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"skylee03"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"skylee03"},"content":"        }));","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"skylee03"},"content":"        new AthletiCLI().run();","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"skylee03"},"content":"     * Displays the welcome interface, continuously reads user input","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"skylee03"},"content":"     * and executes corresponding instructions until exiting.","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"skylee03"},"content":"    private void run() {","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"skylee03"},"content":"        logger.entering(getClass().getName(), \"run\");","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"skylee03"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"skylee03"},"content":"            data.load();","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"skylee03"},"content":"        } catch (AthletiException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"skylee03"},"content":"            ui.showException(e);","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"skylee03"},"content":"            return;","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"skylee03"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-10-08"},{"lineNumber":67,"author":{"gitId":"skylee03"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"skylee03"},"content":"        while (!isExit) {","lastModifiedDate":"2023-10-08"},{"lineNumber":69,"author":{"gitId":"skylee03"},"content":"            final String rawUserInput \u003d ui.getUserCommand();","lastModifiedDate":"2023-10-08"},{"lineNumber":70,"author":{"gitId":"skylee03"},"content":"            try {","lastModifiedDate":"2023-10-08"},{"lineNumber":71,"author":{"gitId":"skylee03"},"content":"                logger.info(\"Command read: \" + rawUserInput);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"skylee03"},"content":"                final Command command \u003d Parser.parseCommand(rawUserInput);","lastModifiedDate":"2023-10-08"},{"lineNumber":73,"author":{"gitId":"skylee03"},"content":"                final String[] feedback \u003d command.execute(data);","lastModifiedDate":"2023-10-08"},{"lineNumber":74,"author":{"gitId":"skylee03"},"content":"                ui.showMessages(feedback);","lastModifiedDate":"2023-10-08"},{"lineNumber":75,"author":{"gitId":"skylee03"},"content":"                logger.info(\"Command executed successfully\");","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"skylee03"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2023-10-08"},{"lineNumber":77,"author":{"gitId":"skylee03"},"content":"            } catch (AthletiException e) {","lastModifiedDate":"2023-10-08"},{"lineNumber":78,"author":{"gitId":"skylee03"},"content":"                ui.showException(e);","lastModifiedDate":"2023-10-08"},{"lineNumber":79,"author":{"gitId":"skylee03"},"content":"                logger.warning(\"Exception caught: \" + e);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"skylee03"},"content":"            }","lastModifiedDate":"2023-10-08"},{"lineNumber":81,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":82,"author":{"gitId":"skylee03"},"content":"        logger.exiting(getClass().getName(), \"run\");","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":84,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":84}},{"path":"src/main/java/athleticli/commands/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"     * Returns \u003ccode\u003etrue\u003c/code\u003e if this is a \u003ccode\u003eByeCommand\u003c/code\u003e object, otherwise returns \u003ccode\u003efalse\u003c/code\u003e.","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e if this is a \u003ccode\u003eByeCommand\u003c/code\u003e object, otherwise returns \u003ccode\u003efalse\u003c/code\u003e.","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"        return true;","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"     * Returns the bye message to be shown to the user.","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"     * @return      The messages to be shown to the user.","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"    public String[] execute(Data data) throws AthletiException {","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"        return new String[] {Message.MESSAGE_BYE};","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":26}},{"path":"src/main/java/athleticli/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":" * Defines the basic methods of a command.","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"public abstract class Command {","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"     * Executes the command and returns the messages to be shown to the user.","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"     * @param data              The current data.","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"     * @return                  The messages to be shown to the user.","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"    public abstract String[] execute(Data data) throws AthletiException;","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"     * Returns \u003ccode\u003etrue\u003c/code\u003e if this is a \u003ccode\u003eByeCommand\u003c/code\u003e object, otherwise returns \u003ccode\u003efalse\u003c/code\u003e.","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e if this is a \u003ccode\u003eByeCommand\u003c/code\u003e object, otherwise returns \u003ccode\u003efalse\u003c/code\u003e.","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"        return false;","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":27}},{"path":"src/main/java/athleticli/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.activity.FindActivityCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.diet.FindDietCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.sleep.FindSleepCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"    public FindCommand(LocalDate date) {","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"     * Returns the records to be shown to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"     * @param data The current data.","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"     * @return The records to be shown to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"    public String[] execute(Data data) throws AthletiException {","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"        var activities \u003d Stream.of(new FindActivityCommand(date).execute(data));","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"        var diets \u003d Stream.of(new FindDietCommand(date).execute(data));","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"        var sleeps \u003d Stream.of(new FindSleepCommand(date).execute(data));","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"        return Stream.of(activities, diets, sleeps)","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"                .reduce(Stream::concat)","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"                .orElseGet(Stream::empty)","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"skylee03":36}},{"path":"src/main/java/athleticli/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import static java.util.Map.entry;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"import athleticli.parser.CommandName;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"    private static final String[] HELP_ALL \u003d {","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"        /* Activity Management */","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"        \"\\nActivity Management:\",","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"        Message.HELP_ADD_ACTIVITY,","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"        Message.HELP_ADD_RUN,","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"        Message.HELP_ADD_SWIM,","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"        Message.HELP_ADD_CYCLE,","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"        Message.HELP_DELETE_ACTIVITY,","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"        Message.HELP_LIST_ACTIVITY,","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"        Message.HELP_EDIT_ACTIVITY,","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"        Message.HELP_EDIT_RUN,","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"        Message.HELP_EDIT_SWIM,","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"        Message.HELP_EDIT_CYCLE,","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"        Message.HELP_FIND_ACTIVITY,","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"        /* Diet Management */","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"        \"\\nDiet Management:\",","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"        Message.HELP_ADD_DIET,","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"        Message.HELP_DELETE_DIET,","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"        Message.HELP_LIST_DIET,","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"        Message.HELP_FIND_DIET,","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"        /* Sleep Management */","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"        \"\\nSleep Management:\",","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"        Message.HELP_ADD_SLEEP,","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":"        Message.HELP_LIST_SLEEP,","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"skylee03"},"content":"        Message.HELP_DELETE_SLEEP,","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"skylee03"},"content":"        Message.HELP_EDIT_SLEEP,","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"skylee03"},"content":"        Message.HELP_FIND_SLEEP,","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"skylee03"},"content":"        /* Misc */","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"skylee03"},"content":"        \"\\nMisc:\",","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"skylee03"},"content":"        Message.HELP_FIND,","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"skylee03"},"content":"        Message.HELP_SAVE,","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"skylee03"},"content":"        Message.HELP_BYE,","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"skylee03"},"content":"        Message.HELP_HELP,","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"skylee03"},"content":"        \"\\n\" + Message.HELP_DETAILS","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"skylee03"},"content":"    };","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"skylee03"},"content":"    private static final Map\u003cString, String\u003e HELP_MESSAGES \u003d Map.ofEntries(","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"skylee03"},"content":"            /* Activity Management */","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_ACTIVITY, Message.HELP_ADD_ACTIVITY),","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_RUN, Message.HELP_ADD_RUN),","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_SWIM, Message.HELP_ADD_SWIM),","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_CYCLE, Message.HELP_ADD_CYCLE),","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_ACTIVITY_DELETE, Message.HELP_DELETE_ACTIVITY),","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_ACTIVITY_LIST, Message.HELP_LIST_ACTIVITY),","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_ACTIVITY_EDIT, Message.HELP_EDIT_ACTIVITY),","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_RUN_EDIT, Message.HELP_EDIT_RUN),","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_SWIM_EDIT, Message.HELP_EDIT_SWIM),","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_CYCLE_EDIT, Message.HELP_EDIT_CYCLE),","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_ACTIVITY_FIND, Message.HELP_FIND_ACTIVITY),","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"skylee03"},"content":"            /* Diet Management */","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_DIET_ADD, Message.HELP_ADD_DIET),","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"nihalzp"},"content":"            entry(CommandName.COMMAND_DIET_EDIT, Message.HELP_EDIT_DIET),","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_DIET_DELETE, Message.HELP_DELETE_DIET),","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_DIET_LIST, Message.HELP_LIST_DIET),","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_DIET_FIND, Message.HELP_FIND_DIET),","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"skylee03"},"content":"            /* Sleep Management */","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_SLEEP_ADD, Message.HELP_ADD_SLEEP),","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_SLEEP_LIST, Message.HELP_LIST_SLEEP),","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_SLEEP_DELETE, Message.HELP_DELETE_SLEEP),","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_SLEEP_EDIT, Message.HELP_EDIT_SLEEP),","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_SLEEP_FIND, Message.HELP_FIND_SLEEP),","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"skylee03"},"content":"            /* Misc */","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_FIND, Message.HELP_FIND),","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_SAVE, Message.HELP_SAVE),","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_BYE, Message.HELP_BYE),","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"skylee03"},"content":"            entry(CommandName.COMMAND_HELP, Message.HELP_HELP)","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"skylee03"},"content":"    );","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"skylee03"},"content":"    private String command;","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"skylee03"},"content":"    public HelpCommand(String command) {","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"skylee03"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"skylee03"},"content":"     * Returns the help messages to be shown to the user.","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"skylee03"},"content":"     * @param data The current data.","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"skylee03"},"content":"     * @return The messages to be shown to the user.","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"skylee03"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"skylee03"},"content":"    public String[] execute(Data data) throws AthletiException {","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"skylee03"},"content":"        if (HELP_MESSAGES.containsKey(command)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"skylee03"},"content":"            return new String[] {\"Usage: \" + HELP_MESSAGES.get(command)};","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"skylee03"},"content":"        } else {","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"skylee03"},"content":"            return HELP_ALL;","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"skylee03":99,"nihalzp":1}},{"path":"src/main/java/athleticli/commands/SaveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"     * Saves the data into the file.","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"     * @param data The current data.","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"     * @return The messages to be shown to the user.","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"    public String[] execute(Data data) throws AthletiException {","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"        assert data !\u003d null;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"            data.save();","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"            throw new AthletiException(Message.MESSAGE_IO_EXCEPTION);","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"        return new String[] {Message.MESSAGE_SAVE};","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"skylee03":27}},{"path":"src/main/java/athleticli/commands/activity/AddActivityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Activity;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.ActivityList;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":" * Executes the add activity commands provided by the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"public class AddActivityCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"    private final Activity activity;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"     * Constructor for AddActivityCommand.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"     * @param activity Activity to be added.","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    public AddActivityCommand(Activity activity){","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"        this.activity \u003d activity;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"     * Updates the activity list.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"     * @param data        The current data containing the activity list.","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"     * @return            The message which will be shown to the user.","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"    public String[] execute(Data data) {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"        ActivityList activities \u003d data.getActivities();","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"        activities.add(this.activity);","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"        activities.sort();","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"        int size \u003d activities.size();","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"        String countMessage;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"        if (size \u003e 1) {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"            countMessage \u003d String.format(Message.MESSAGE_ACTIVITY_COUNT, size);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"        } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"            countMessage \u003d Message.MESSAGE_ACTIVITY_FIRST;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"        return new String[]{Message.MESSAGE_ACTIVITY_ADDED, this.activity.toString(), countMessage};","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":3,"AlWo223":40}},{"path":"src/main/java/athleticli/commands/activity/DeleteActivityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Activity;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.ActivityList;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":" * Executes the delete activity command provided by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"public class DeleteActivityCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    private final Integer index;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"     * Constructor for DeleteActivityCommand.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"     * @param index Index of activity to be deleted.","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"    public DeleteActivityCommand(Integer index) {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"     * Executes the delete activity command.","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"     * @param data Data object containing the current list of activities.","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"     * @return String array containing the messages to be printed to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the index provided is out of bounds.","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"    public String[] execute(Data data) throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"        ActivityList activities \u003d data.getActivities();","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"            final Activity activity \u003d activities.get(index-1);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"            activities.remove(activity);","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"            return new String[]{Message.MESSAGE_ACTIVITY_DELETED, activity.toString(),","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"                    String.format(Message.MESSAGE_ACTIVITY_COUNT, activities.size())};","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ACTIVITY_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":3,"AlWo223":41}},{"path":"src/main/java/athleticli/commands/activity/EditActivityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Activity;","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.ActivityChanges;","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.ActivityList;","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Cycle;","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Run;","lastModifiedDate":"2023-11-05"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Swim;","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":" * Executes the edit activity command provided by the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"public class EditActivityCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    private static Logger logger \u003d Logger.getLogger(\"EditActivityCommand\");","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    private final int index;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"    private final ActivityChanges activityChanges;","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"     * Constructor for EditActivityCommand.","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"     * @param index Index of the activity to be edited.","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"     * @param activityChanges Updated Activity.","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"    public EditActivityCommand(int index, ActivityChanges activityChanges) {","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"        assert index \u003e 0 : \"Index should be greater than 0\";","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"        this.activityChanges \u003d activityChanges;","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"     * Executes the edit activity command.","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"     * @param data Data object containing the current list of activities.","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"     * @return String array containing the messages to be printed to the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the index provided is out of bounds.","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"    public String[] execute(Data data) throws AthletiException {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"        logger.log(Level.INFO, \"Editing activity at index \" + index);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"        ActivityList activities \u003d data.getActivities();","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"            Activity activity \u003d activities.get(index-1);","lastModifiedDate":"2023-11-05"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"            if (activityChanges.getCaption() !\u003d null) {","lastModifiedDate":"2023-11-05"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"                activity.setCaption(activityChanges.getCaption());","lastModifiedDate":"2023-11-05"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"            }","lastModifiedDate":"2023-11-05"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"            if (activityChanges.getDistance() !\u003d 0) {","lastModifiedDate":"2023-11-05"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"                activity.setDistance(activityChanges.getDistance());","lastModifiedDate":"2023-11-05"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"            }","lastModifiedDate":"2023-11-05"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"            if (activityChanges.getDuration() !\u003d null) {","lastModifiedDate":"2023-11-05"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"                activity.setMovingTime(activityChanges.getDuration());","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"            }","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"            if (activityChanges.getStartDateTime() !\u003d null) {","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"                activity.setStartDateTime(activityChanges.getStartDateTime());","lastModifiedDate":"2023-11-05"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"            }","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"            if (activityChanges.getElevation() !\u003d 0) {","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"                Class\u003c?\u003e activityClass \u003d activity.getClass();","lastModifiedDate":"2023-11-05"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"                if (activityClass \u003d\u003d Run.class) {","lastModifiedDate":"2023-11-05"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"                    Run run \u003d (Run) activity;","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"                    run.setElevationGain(activityChanges.getElevation());","lastModifiedDate":"2023-11-05"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"                } else {","lastModifiedDate":"2023-11-05"},{"lineNumber":67,"author":{"gitId":"AlWo223"},"content":"                    Cycle cycle \u003d (Cycle) activity;","lastModifiedDate":"2023-11-05"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"                    cycle.setElevationGain(activityChanges.getElevation());","lastModifiedDate":"2023-11-05"},{"lineNumber":69,"author":{"gitId":"AlWo223"},"content":"                }","lastModifiedDate":"2023-11-05"},{"lineNumber":70,"author":{"gitId":"AlWo223"},"content":"            }","lastModifiedDate":"2023-11-05"},{"lineNumber":71,"author":{"gitId":"AlWo223"},"content":"            if (activityChanges.getSwimmingStyle() !\u003d null) {","lastModifiedDate":"2023-11-05"},{"lineNumber":72,"author":{"gitId":"AlWo223"},"content":"                Swim swim \u003d (Swim) activity;","lastModifiedDate":"2023-11-05"},{"lineNumber":73,"author":{"gitId":"AlWo223"},"content":"                swim.setStyle(activityChanges.getSwimmingStyle());","lastModifiedDate":"2023-11-05"},{"lineNumber":74,"author":{"gitId":"AlWo223"},"content":"            }","lastModifiedDate":"2023-11-05"},{"lineNumber":75,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":76,"author":{"gitId":"AlWo223"},"content":"            logger.log(java.util.logging.Level.INFO, \"Activity at index \" + index + \"successfully edited\");","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"AlWo223"},"content":"            return new String[]{Message.MESSAGE_ACTIVITY_UPDATED, activity.toString(),","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"AlWo223"},"content":"                    String.format(Message.MESSAGE_ACTIVITY_COUNT, activities.size())};","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"AlWo223"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"AlWo223"},"content":"            logger.log(java.util.logging.Level.WARNING, \"Activity index out of bounds\");","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ACTIVITY_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":3,"AlWo223":81}},{"path":"src/main/java/athleticli/commands/activity/EditActivityGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.activity.ActivityGoal;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.activity.ActivityGoalList;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":" * Represents a command which edits an activity goal.","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"public class EditActivityGoalCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"    private final ActivityGoal activityGoal;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"     * Constructor for EditActivityGoalCommand.","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"     * @param activityGoal Activity goal to be edited.","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"    public EditActivityGoalCommand(ActivityGoal activityGoal) {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"        this.activityGoal \u003d activityGoal;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"     * Updates the activity goal list.","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"     * @param data The current data containing the activity goal list.","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"     * @return The message which will be shown to the user.","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"     * @throws AthletiException if no such goal exists","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"    public String[] execute(Data data) throws athleticli.exceptions.AthletiException {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"        ActivityGoalList activityGoals \u003d data.getActivityGoals();","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"        for (ActivityGoal goal : activityGoals) {","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"            if (goal.getSport() \u003d\u003d this.activityGoal.getSport() \u0026\u0026","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"                        goal.getGoalType() \u003d\u003d this.activityGoal.getGoalType() \u0026\u0026","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"                        goal.getTimeSpan() \u003d\u003d this.activityGoal.getTimeSpan()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"                goal.setTargetValue(this.activityGoal.getTargetValue());","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"                return new String[]{Message.MESSAGE_ACTIVITY_GOAL_EDITED, this.activityGoal.toString(data)};","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"        throw new AthletiException(Message.MESSAGE_NO_SUCH_GOAL_EXISTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"nihalzp":46}},{"path":"src/main/java/athleticli/commands/activity/FindActivityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.FindCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"import athleticli.data.activity.Activity;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"public class FindActivityCommand extends FindCommand {","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"    public FindActivityCommand(LocalDate date) {","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"        super(date);","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"     * Returns the activities matching the date to be shown to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"     * @param data The current data.","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"     * @return The messages to be shown to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"    public String[] execute(Data data) throws AthletiException {","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"        var resultStream \u003d data.getActivities()","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"                .find(date)","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"                .stream()","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"                .filter(Activity.class::isInstance)","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"                .map(Activity.class::cast)","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"                .map(Activity::toString);","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"        return Stream.concat(Stream.of(Message.MESSAGE_ACTIVITY_FIND), resultStream)","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"skylee03":35}},{"path":"src/main/java/athleticli/commands/activity/ListActivityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.ActivityList;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":" * Executes the list activity command provided by the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"public class ListActivityCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"    private final boolean isDetailed;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"     * Constructor for ListActivityCommand.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"     * @param isDetailed Whether the list should be detailed.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    public ListActivityCommand(boolean isDetailed) {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"        this.isDetailed \u003d isDetailed;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"     * Lists the activities.","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"     * @param data      The current data containing the activity list.","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"     * @return          The message containing listing of activities which will be shown to the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"    public String[] execute(Data data) {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"        ActivityList activities \u003d data.getActivities();","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"        final int size \u003d activities.size();","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"        if (isDetailed) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"            return printDetailedList(activities, size);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"            return printList(activities, size);","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"     * Prints the list of activities.","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"     * @param activities    The current activity list.","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"     * @param size          The size of the activity list.","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"     * @return              The message containing listing of activities which will be shown to the user.","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"    public String[] printList(ActivityList activities, int size) {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"        String[] output \u003d new String[size + 1];","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"        output[0] \u003d Message.MESSAGE_ACTIVITY_LIST;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"            output[i + 1] \u003d (i + 1) + \".\" + activities.get(i).toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"        return output;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"     * Prints the detailed list of activities.","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"     * @param activities    The current activity list.","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"     * @param size          The size of the activity list.","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"     * @return              The message containing listing of activities which will be shown to the user.","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"    public String[] printDetailedList(ActivityList activities, int size) {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"        String[] output \u003d new String[size + 1];","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"        output[0] \u003d Message.MESSAGE_ACTIVITY_LIST;","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"            output[i+1] \u003d activities.get(i).toDetailedString();","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"        return output;","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":3,"AlWo223":64}},{"path":"src/main/java/athleticli/commands/activity/ListActivityGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.activity.ActivityGoalList;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":" * Lists the activity goals.","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"public class ListActivityGoalCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"     * Constructor for ListActivityCommand.","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"    public ListActivityGoalCommand() {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"     * Lists the activities.","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"     * @param data The current data containing the activity list.","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"     * @return The message containing listing of activities which will be shown to the user.","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"    public String[] execute(Data data) {","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"        ActivityGoalList activityGoals \u003d data.getActivityGoals();","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"        int size \u003d activityGoals.size();","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"        String[] output \u003d new String[size + 1];","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"        output[0] \u003d Message.MESSAGE_ACTIVITY_GOAL_LIST;","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"        for (int i \u003d 0; i \u003c activityGoals.size(); i++) {","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"            output[i + 1] \u003d (i + 1) + \". \" + activityGoals.get(i).toString(data);","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"        return output;","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"AlWo223":8,"nihalzp":27}},{"path":"src/main/java/athleticli/commands/activity/SetActivityGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.ActivityGoal;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.ActivityGoalList;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"public class SetActivityGoalCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"    private final ActivityGoal activityGoal;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"     * Constructor for SetActivityGoalCommand.","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"     * @param activityGoal Activity goal to be added.","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    public SetActivityGoalCommand(ActivityGoal activityGoal){","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"        this.activityGoal \u003d activityGoal;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"     * Updates the activity goal list.","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"     * @param data        The current data containing the activity goal list.","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"     * @return            The message which will be shown to the user.","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"    public String[] execute(Data data) {","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"        ActivityGoalList activityGoals \u003d data.getActivityGoals();","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"        activityGoals.add(this.activityGoal);","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"        return new String[]{Message.MESSAGE_ACTIVITY_GOAL_ADDED, this.activityGoal.toString(data)};","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"AlWo223":31}},{"path":"src/main/java/athleticli/commands/diet/AddDietCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.Diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.DietList;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":" * Executes the add diet commands provided by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"public class AddDietCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"    private final Diet diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"     * Constructor for AddDietCommand.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"     * @param diet Diet to be added.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"    public AddDietCommand(Diet diet) {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"        this.diet \u003d diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"     * Updates the diet list.","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"     * @param data The current data containing the diet list.","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"     * @return The message which will be shown to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"    public String[] execute(Data data) {","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"        DietList diets \u003d data.getDiets();","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"        diets.add(this.diet);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"        int size \u003d diets.size();","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"        String countMessage;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"        if (size \u003e 1) {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"            countMessage \u003d String.format(Message.MESSAGE_DIET_COUNT, size);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"        } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"            countMessage \u003d String.format(Message.MESSAGE_DIET_FIRST, size);","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"        return new String[]{Message.MESSAGE_DIET_ADDED, this.diet.toString(), countMessage};","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"nihalzp":44}},{"path":"src/main/java/athleticli/commands/diet/DeleteDietCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.Diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.DietList;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":" * Executes the add diet commands provided by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"public class DeleteDietCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"    private final int index;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"     * Constructor for AddDietCommand.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"     * @param index Diet to be added.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"    public DeleteDietCommand(int index) {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"        assert index \u003e 0 : \"Index cannot be less than 1\";","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"     * Updates the diet list.","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"     * @param data The current data containing the diet list.","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"     * @return The message which will be shown to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"    public String[] execute(Data data) throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"        DietList dietList \u003d data.getDiets();","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"        int size \u003d dietList.size();","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"        if (index \u003e size) {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_INVALID_DIET_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"        Diet oldDiet \u003d dietList.get(index - 1);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"        dietList.remove(index - 1);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"        return new String[]{Message.MESSAGE_DIET_DELETED, oldDiet.toString(),","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"                String.format(Message.MESSAGE_DIET_COUNT, size - 1)};","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"nihalzp":43}},{"path":"src/main/java/athleticli/commands/diet/DeleteDietGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yicheng-toh"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.diet.DietGoal;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.diet.DietGoalList;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"yicheng-toh"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":" * Executes the delete-diet-goal commands provided by the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"yicheng-toh"},"content":"public class DeleteDietGoalCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"yicheng-toh"},"content":"    private static final Logger logger \u003d Logger.getLogger(DeleteDietGoalCommand.class.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"    private final int deleteIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"     * This is a constructor to set up the delete diet goal command.","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"yicheng-toh"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"     * @param deleteIndex Index of the diet goal to be deleted in the users\u0027 perspective.","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"    public DeleteDietGoalCommand(int deleteIndex) {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"        //deleteIndex that is less than or equal to zero would result in exception","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"        assert deleteIndex \u003e\u003d 1: \"\u0027deleteIndex\u0027 should have the value of 1 minimally.\";","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"        this.deleteIndex \u003d deleteIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"yicheng-toh"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"yicheng-toh"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"yicheng-toh"},"content":"            logger.addHandler(new FileHandler(\"%t/athleticli-log.txt\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"yicheng-toh"},"content":"        } catch(IOException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"yicheng-toh"},"content":"            logger.addHandler(new ConsoleHandler());","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"yicheng-toh"},"content":"     * Deletes a goal from the Diet Goal List.","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"yicheng-toh"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"yicheng-toh"},"content":"     * @param data The current data containing the different nutrient goals.","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"yicheng-toh"},"content":"     * @return The message which will be shown to the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"yicheng-toh"},"content":"    public String[] execute(Data data) throws AthletiException {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"yicheng-toh"},"content":"        logger.log(Level.FINE, \"Executing delete command for diet goals\");","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"yicheng-toh"},"content":"        DietGoalList dietGoals \u003d data.getDietGoals();","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"yicheng-toh"},"content":"        if (dietGoals.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"yicheng-toh"},"content":"            throw new AthletiException(Message.MESSAGE_DIET_GOAL_EMPTY_DIET_GOAL_LIST);","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"yicheng-toh"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"yicheng-toh"},"content":"            DietGoal dietGoalRemoved \u003d dietGoals.get(deleteIndex - 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"yicheng-toh"},"content":"            dietGoals.remove(deleteIndex - 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"yicheng-toh"},"content":"            logger.log(Level.FINE, String.format(\"Diet goals %s has been successfully removed\",","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"yicheng-toh"},"content":"                    dietGoalRemoved.getNutrient()));","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"yicheng-toh"},"content":"            return new String[]{Message.MESSAGE_DIET_GOAL_DELETE_HEADER,","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"yicheng-toh"},"content":"                    dietGoalRemoved.toString(data)};","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"yicheng-toh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"yicheng-toh"},"content":"            throw new AthletiException(String.format(Message.MESSAGE_DIET_GOAL_OUT_OF_BOUND, dietGoals.size()));","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yicheng-toh":65}},{"path":"src/main/java/athleticli/commands/diet/EditDietCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.Diet;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.DietList;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"import athleticli.parser.Parameter;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"import athleticli.parser.Parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":" * Executes the edit diet command provided by the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"public class EditDietCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"    private final int index;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"    private final HashMap\u003cString, String\u003e dietMap;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"     * Constructor for EditDietCommand.","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"     * @param index   Index of the diet to be edited.","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"     * @param dietMap Updated Diet.","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"    public EditDietCommand(int index, HashMap\u003cString, String\u003e dietMap) {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"        assert index \u003e 0 : \"Index should be greater than 0\";","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"        assert !dietMap.isEmpty() : \"Diet map should not be empty\";","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"        this.dietMap \u003d dietMap;","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"     * Executes the edit diet command.","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"     * @param data Data object containing the current list of diets.","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"     * @return String array containing the messages to be printed to the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"     * @throws AthletiException If the index provided is out of bounds.","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"    public String[] execute(Data data) throws AthletiException {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"        DietList diets \u003d data.getDiets();","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"nihalzp"},"content":"        int size \u003d diets.size();","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"nihalzp"},"content":"        if (index \u003e size) {","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_INVALID_DIET_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"nihalzp"},"content":"        Diet oldDiet \u003d diets.get(index - 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"nihalzp"},"content":"        for (String key : dietMap.keySet()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"nihalzp"},"content":"            assert !java.util.Objects.equals(dietMap.get(key), \"\") : \"Diet parameter should not be empty\";","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"nihalzp"},"content":"            switch (key) {","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"nihalzp"},"content":"            case Parameter.CALORIES_SEPARATOR:","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"nihalzp"},"content":"                oldDiet.setCalories(Integer.parseInt(dietMap.get(key)));","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"nihalzp"},"content":"                break;","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"nihalzp"},"content":"            case Parameter.PROTEIN_SEPARATOR:","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"nihalzp"},"content":"                oldDiet.setProtein(Integer.parseInt(dietMap.get(key)));","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"nihalzp"},"content":"                break;","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"nihalzp"},"content":"            case Parameter.CARB_SEPARATOR:","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"nihalzp"},"content":"                oldDiet.setCarb(Integer.parseInt(dietMap.get(key)));","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"nihalzp"},"content":"                break;","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"nihalzp"},"content":"            case Parameter.FAT_SEPARATOR:","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"nihalzp"},"content":"                oldDiet.setFat(Integer.parseInt(dietMap.get(key)));","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"nihalzp"},"content":"                break;","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"nihalzp"},"content":"            case Parameter.DATETIME_SEPARATOR:","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"nihalzp"},"content":"                LocalDateTime dateTime \u003d Parser.parseDateTime(dietMap.get(key));","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"nihalzp"},"content":"                oldDiet.setDateTime(dateTime);","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"nihalzp"},"content":"                break;","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"nihalzp"},"content":"            default:","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"nihalzp"},"content":"                break;","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"nihalzp"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"nihalzp"},"content":"        diets.set(index - 1, oldDiet);","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"nihalzp"},"content":"        return new String[]{Message.MESSAGE_DIET_UPDATED, oldDiet.toString()};","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"skylee03":2,"nihalzp":74}},{"path":"src/main/java/athleticli/commands/diet/EditDietGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.diet.DietGoal;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.diet.DietGoalList;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.diet.HealthyDietGoal;","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":" * Executes the edit-diet-goal commands provided by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"public class EditDietGoalCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"yicheng-toh"},"content":"    private final ArrayList\u003cDietGoal\u003e userUpdatedDietGoals;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yicheng-toh"},"content":"     * This is a constructor to set up the edit diet goal command.","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"yicheng-toh"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"     * @param dietGoals This is a list consisting of updated existing diet goals.","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"     *                  to be added to the current goal list.","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"    public EditDietGoalCommand(ArrayList\u003cDietGoal\u003e dietGoals) {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"yicheng-toh"},"content":"        userUpdatedDietGoals \u003d dietGoals;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"     * Updates the Diet Goal List.","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"     * @param data The current data containing the different nutrient goals.","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"yicheng-toh"},"content":"     * @return The message which will be shown to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"yicheng-toh"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yicheng-toh"},"content":"    public String[] execute(Data data) throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yicheng-toh"},"content":"        DietGoalList currentDietGoals \u003d data.getDietGoals();","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"yicheng-toh"},"content":"        verifyAllGoalsEditedExist(currentDietGoals);","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"yicheng-toh"},"content":"        updateUserGoals(currentDietGoals);","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"yicheng-toh"},"content":"        return generateEditDietGoalSuccessMessage(data, currentDietGoals);","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"yicheng-toh"},"content":"    private static String[] generateEditDietGoalSuccessMessage(Data data, DietGoalList currentDietGoals) {","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"yicheng-toh"},"content":"        int dietGoalNum \u003d currentDietGoals.size();","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"yicheng-toh"},"content":"        return new String[]{Message.MESSAGE_DIET_GOAL_LIST_HEADER, currentDietGoals.toString(data),","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"yicheng-toh"},"content":"                String.format(Message.MESSAGE_DIET_GOAL_COUNT, dietGoalNum)};","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"yicheng-toh"},"content":"    private void updateUserGoals(DietGoalList currentDietGoals) {","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"yicheng-toh"},"content":"        int newTargetValue;","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"yicheng-toh"},"content":"        for (DietGoal userUpdatedDietGoal : userUpdatedDietGoals) {","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"yicheng-toh"},"content":"            for (DietGoal currentDietGoal : currentDietGoals) {","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"yicheng-toh"},"content":"                if (!userUpdatedDietGoal.getNutrient().equals(currentDietGoal.getNutrient())) {","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"yicheng-toh"},"content":"                    continue;","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"yicheng-toh"},"content":"                }","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"yicheng-toh"},"content":"                //update new target value to the current goal","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"yicheng-toh"},"content":"                newTargetValue \u003d userUpdatedDietGoal.getTargetValue();","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"yicheng-toh"},"content":"                currentDietGoal.setTargetValue(newTargetValue);","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"yicheng-toh"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"yicheng-toh"},"content":"    private void verifyAllGoalsEditedExist(DietGoalList currentDietGoals) throws AthletiException {","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"yicheng-toh"},"content":"        for (DietGoal userDietGoal : userUpdatedDietGoals) {","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"yicheng-toh"},"content":"            boolean isDietGoalExisted \u003d false;","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"yicheng-toh"},"content":"            for (DietGoal dietGoal : currentDietGoals) {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"yicheng-toh"},"content":"                boolean isNutrientSimilar \u003d userDietGoal.getNutrient().equals(dietGoal.getNutrient());","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"yicheng-toh"},"content":"                boolean isTimeSpanSimilar \u003d userDietGoal.getTimeSpan().equals(dietGoal.getTimeSpan());","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"yicheng-toh"},"content":"                boolean isTypeSimilar \u003d userDietGoal instanceof HealthyDietGoal","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"yicheng-toh"},"content":"                        \u003d\u003d dietGoal instanceof HealthyDietGoal;","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"yicheng-toh"},"content":"                if (isNutrientSimilar \u0026\u0026 isTimeSpanSimilar) {","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"yicheng-toh"},"content":"                    if (!isTypeSimilar) {","lastModifiedDate":"2023-11-04"},{"lineNumber":74,"author":{"gitId":"yicheng-toh"},"content":"                        throw new AthletiException(Message.MESSAGE_DIET_GOAL_TYPE_CLASH);","lastModifiedDate":"2023-11-04"},{"lineNumber":75,"author":{"gitId":"yicheng-toh"},"content":"                    }","lastModifiedDate":"2023-11-04"},{"lineNumber":76,"author":{"gitId":"yicheng-toh"},"content":"                    isDietGoalExisted \u003d true;","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"yicheng-toh"},"content":"                }","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"yicheng-toh"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"yicheng-toh"},"content":"            if (!isDietGoalExisted) {","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"yicheng-toh"},"content":"                throw new AthletiException(String.format(Message.MESSAGE_DIET_GOAL_NOT_EXISTED,","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"yicheng-toh"},"content":"                        userDietGoal.getNutrient()));","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"yicheng-toh"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":3,"yicheng-toh":82}},{"path":"src/main/java/athleticli/commands/diet/FindDietCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.FindCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"import athleticli.data.diet.Diet;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":" * Finds diets matching the date.","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"public class FindDietCommand extends FindCommand {","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"    public FindDietCommand(LocalDate date) {","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"        super(date);","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"     * Returns the diets matching the date to be shown to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"     * @param data The current data.","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"     * @return The messages to be shown to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"    public String[] execute(Data data) throws AthletiException {","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"        var resultStream \u003d data.getDiets()","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"                .find(date)","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"                .stream()","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"                .filter(Diet.class::isInstance)","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"                .map(Diet.class::cast)","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"                .map(Diet::toString);","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":"        return Stream.concat(Stream.of(Message.MESSAGE_DIET_FIND), resultStream)","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"skylee03"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"skylee03":35,"nihalzp":4}},{"path":"src/main/java/athleticli/commands/diet/ListDietCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.DietList;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":" * Executes the list diet commands provided by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"public class ListDietCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"     * Constructor for ListDietCommand.","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"    public ListDietCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"     * Updates the diet list.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"     * @param data The current data containing the diet list.","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"     * @return The message which will be shown to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"    public String[] execute(Data data) {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"        DietList dietList \u003d data.getDiets();","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"        int size \u003d dietList.size();","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"        return new String[]{Message.MESSAGE_DIET_LIST, dietList.toString(),","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"                String.format(Message.MESSAGE_DIET_COUNT, size)};","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"nihalzp":31}},{"path":"src/main/java/athleticli/commands/diet/ListDietGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yicheng-toh"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.diet.DietGoalList;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":" * Executes the list diet goal commands provided by the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"public class ListDietGoalCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"     * Constructor for ListDietGoalCommand.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"    public ListDietGoalCommand() {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":"     * Iterate and returns the string representation for each goal.","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"yicheng-toh"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"yicheng-toh"},"content":"     * @param data The current data containing the diet goal list.","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"     * @return The message which will be shown to the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"    public String[] execute(Data data) {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"        DietGoalList dietGoalList \u003d data.getDietGoals();","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"yicheng-toh"},"content":"        int dietGoalNum \u003d dietGoalList.size();","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"        if (dietGoalNum \u003d\u003d 0) {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"            return new String[]{Message.MESSAGE_DIET_GOAL_NONE};","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"        return new String[]{Message.MESSAGE_DIET_GOAL_LIST_HEADER, dietGoalList.toString(data),","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"                String.format(Message.MESSAGE_DIET_GOAL_COUNT, dietGoalNum)};","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"yicheng-toh":34}},{"path":"src/main/java/athleticli/commands/diet/SetDietGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.diet.DietGoal;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.diet.DietGoalList;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.diet.HealthyDietGoal;","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":" * Executes the set-diet-goal commands provided by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"public class SetDietGoalCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"yicheng-toh"},"content":"    private final ArrayList\u003cDietGoal\u003e userNewDietGoals;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yicheng-toh"},"content":"     * This is a constructor to set up the set diet goal command","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yicheng-toh"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"     * @param dietGoals This is a list consisting of new diet goals","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"     *                  to be added to the current goal list.","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"    public SetDietGoalCommand(ArrayList\u003cDietGoal\u003e dietGoals) {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yicheng-toh"},"content":"        userNewDietGoals \u003d dietGoals;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"     * Updates the Diet Goal list.","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"     * @param data The current data containing the different nutrients goal value.","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"yicheng-toh"},"content":"     * @return The message which will be shown to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"yicheng-toh"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yicheng-toh"},"content":"    public String[] execute(Data data) throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yicheng-toh"},"content":"        DietGoalList currentDietGoals \u003d data.getDietGoals();","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yicheng-toh"},"content":"        verifyNewGoalsNotExist(currentDietGoals);","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"yicheng-toh"},"content":"        addNewUserDietGoals(currentDietGoals);","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"yicheng-toh"},"content":"        return generateSetDietGoalSuccessMessage(data, currentDietGoals);","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"yicheng-toh"},"content":"    private static String[] generateSetDietGoalSuccessMessage(Data data, DietGoalList currentDietGoals) {","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"yicheng-toh"},"content":"        int dietGoalNum \u003d currentDietGoals.size();","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"yicheng-toh"},"content":"        return new String[]{Message.MESSAGE_DIET_GOAL_LIST_HEADER, currentDietGoals.toString(data),","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"yicheng-toh"},"content":"                String.format(Message.MESSAGE_DIET_GOAL_COUNT, dietGoalNum)};","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"yicheng-toh"},"content":"    private void addNewUserDietGoals(DietGoalList currentDietGoals) {","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"yicheng-toh"},"content":"        currentDietGoals.addAll(userNewDietGoals);","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"yicheng-toh"},"content":"    private void verifyNewGoalsNotExist(DietGoalList currentDietGoals) throws AthletiException {","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"yicheng-toh"},"content":"        for (DietGoal dietGoal : currentDietGoals) {","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"yicheng-toh"},"content":"            for (DietGoal userDietGoal : userNewDietGoals) {","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"yicheng-toh"},"content":"                boolean isNutrientSimilar \u003d userDietGoal.getNutrient().equals(dietGoal.getNutrient());","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"yicheng-toh"},"content":"                boolean isTimeSpanSimilar \u003d userDietGoal.getTimeSpan().equals(dietGoal.getTimeSpan());","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"yicheng-toh"},"content":"                boolean isTypeSimilar \u003d userDietGoal instanceof HealthyDietGoal","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"yicheng-toh"},"content":"                        \u003d\u003d dietGoal instanceof HealthyDietGoal;","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"yicheng-toh"},"content":"                if (isNutrientSimilar \u0026\u0026 isTimeSpanSimilar) {","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"yicheng-toh"},"content":"                    throw new AthletiException(String.format(Message.MESSAGE_DIET_GOAL_ALREADY_EXISTED,","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"yicheng-toh"},"content":"                            dietGoal.getNutrient()));","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"yicheng-toh"},"content":"                } else if (isNutrientSimilar \u0026\u0026 !isTypeSimilar) {","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"yicheng-toh"},"content":"                    throw new AthletiException(Message.MESSAGE_DIET_GOAL_TYPE_CLASH);","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"yicheng-toh"},"content":"                }","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"yicheng-toh"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":3,"yicheng-toh":68}},{"path":"src/main/java/athleticli/commands/sleep/AddSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.Sleep;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.SleepList;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":" * Executes the add sleep commands provided by the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"public class AddSleepCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"    private final Logger logger \u003d Logger.getLogger(AddSleepCommand.class.getName());","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"     * Constructor for AddSleepCommand.","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"     * @param from Start time of the sleep.","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"     * @param to End time of the sleep.","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"    public AddSleepCommand(LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"        assert from !\u003d null : \"Start time cannot be null\";","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"        assert to !\u003d null : \"End time cannot be null\";","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"        assert from.isBefore(to) : \"Start time must be before end time\";","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"        logger.fine(\"Creating AddSleepCommand with from: \" + from + \" and to: \" + to);","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"     * Adds the sleep record to the sleep list.","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"     * @param data The current data containing the sleep list.","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"     * @return The message which will be shown to the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"    public String[] execute(Data data) {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"        SleepList sleepList \u003d data.getSleeps();","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"        Sleep newSleep \u003d new Sleep(from, to);","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(newSleep);","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"        logger.info(\"Added sleep: \" + newSleep);","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"        logger.fine(\"Sleep list: \" + sleepList);","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"        String returnMessage2 \u003d String.format(Message.MESSAGE_SLEEP_ADD_RETURN_2, sleepList.size());","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"        return new String[] {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"            Message.MESSAGE_SLEEP_ADD_RETURN_1,","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"            newSleep.toString(),","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"            returnMessage2","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"        };","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"skylee03":3,"DaDevChia":55}},{"path":"src/main/java/athleticli/commands/sleep/DeleteSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.Sleep;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.SleepList;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":" *  Executes the delete sleep commands provided by the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"public class DeleteSleepCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"    private final int index;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"    private final Logger logger \u003d Logger.getLogger(DeleteSleepCommand.class.getName());","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"     * Constructor for DeleteSleepCommand.","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"     * @param index Index of the sleep to be deleted.","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"    public DeleteSleepCommand(int index) {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"        logger.fine(\"Creating DeleteSleepCommand with index: \" + index);","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"     * Deletes the sleep record at the specified index.","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"     * @param data The current data containing the sleep list.","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"     * @return The message which will be shown to the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"    public String[] execute(Data data) throws AthletiException {","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"        SleepList sleepList \u003d data.getSleeps();","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"        //accessIndex is the index of the sleep in the list accounting for zero-indexing","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"        int accessIndex \u003d index - 1; ","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"        if (accessIndex \u003c 0 || accessIndex \u003e\u003d sleepList.size()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"            throw new AthletiException(Message.ERRORMESSAGE_SLEEP_EDIT_INDEX_OOBE);","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"        assert accessIndex \u003e\u003d 0 : \"Access index cannot be less than 0\";","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"        assert accessIndex \u003c sleepList.size() : \"Index cannot be more than size of sleep list\";","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"        Sleep oldSleep \u003d sleepList.get(accessIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"        sleepList.remove(accessIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"        logger.fine(\"Deleted sleep: \" + oldSleep);","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"        ","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"        String returnMessage \u003d String.format(Message.MESSAGE_SLEEP_DELETE_RETURN, index, oldSleep.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"        return new String[] {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"            returnMessage","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"        };","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"skylee03":3,"DaDevChia":55}},{"path":"src/main/java/athleticli/commands/sleep/EditSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.Sleep;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.SleepList;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":" * Executes the edit sleep commands provided by the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"public class EditSleepCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"    private static final Logger logger \u003d Logger.getLogger(EditSleepCommand.class.getName());","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"    private final int index;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"     * Constructor for EditSleepCommand.","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"     * @param index Index of the sleep to be edited.","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"     * @param from New start time of the sleep.","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"     * @param to New end time of the sleep.","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"    public EditSleepCommand(int index, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"        assert from !\u003d null : \"Start time cannot be null\";","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"        assert to !\u003d null : \"End time cannot be null\";","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"        assert from.isBefore(to) : \"Start time must be before end time\";","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"        logger.fine(\"Creating EditSleepCommand with index: \" + index + \" from: \" + from + \" and to: \" + to);","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"    ","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"     * Edits the sleep record at the specified index.","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"     * @param data The current data containing the sleep list.","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"     * @return The message which will be shown to the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"    public String[] execute(Data data) throws AthletiException {","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"        SleepList sleepList \u003d data.getSleeps();","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"        //accessIndex is the index of the sleep in the list accounting for zero-indexing","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"        int accessIndex \u003d index - 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"        if (accessIndex \u003c 0 || accessIndex \u003e\u003d sleepList.size()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"            throw new AthletiException(Message.ERRORMESSAGE_SLEEP_EDIT_INDEX_OOBE);","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"        assert accessIndex \u003e\u003d 0 : \"Index cannot be less than 0\";","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"        assert accessIndex \u003c sleepList.size() : \"Index cannot be more than size of sleep list\";","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"        Sleep oldSleep \u003d sleepList.get(accessIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"DaDevChia"},"content":"        Sleep newSleep \u003d new Sleep(from, to);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"DaDevChia"},"content":"        sleepList.set(accessIndex, newSleep);","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"DaDevChia"},"content":"        String returnMessage \u003d String.format(Message.MESSAGE_SLEEP_EDIT_RETURN, index);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"DaDevChia"},"content":"        return new String[] {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"DaDevChia"},"content":"            returnMessage,","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"DaDevChia"},"content":"            \"original: \" + oldSleep,","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"DaDevChia"},"content":"            \"to new: \" + newSleep","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"DaDevChia"},"content":"        };","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"skylee03":3,"DaDevChia":70}},{"path":"src/main/java/athleticli/commands/sleep/FindSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.FindCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"import athleticli.data.sleep.Sleep;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"public class FindSleepCommand extends FindCommand {","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"    public FindSleepCommand(LocalDate date) {","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"        super(date);","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"     * Returns the sleeps matching the date to be shown to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"     * @param data The current data.","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"     * @return The messages to be shown to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"     * @throws AthletiException If any errors occur in finding the sleep entry.","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"    public String[] execute(Data data) throws AthletiException {","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"        var resultStream \u003d data.getSleeps()","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"                .find(date)","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"                .stream()","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"                .filter(Sleep.class::isInstance)","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"                .map(Sleep.class::cast)","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"                .map(Sleep::toString);","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"        return Stream.concat(Stream.of(Message.MESSAGE_SLEEP_FIND), resultStream)","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"skylee03":34,"DaDevChia":1}},{"path":"src/main/java/athleticli/commands/sleep/ListSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.SleepList;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"public class ListSleepCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"    private static final Logger logger \u003d Logger.getLogger(ListSleepCommand.class.getName());","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"     * Lists all the sleep records in the sleep list.","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"     * @param data The current data containing the sleep list.","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"     * @return The message which will be shown to the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"    public String[] execute(Data data) {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"        logger.info(\"Executing ListSleepCommand\");","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"        SleepList sleeps \u003d data.getSleeps();","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"        final int size \u003d sleeps.size();","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"            logger.warning(\"Sleep list is empty\");","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"            return new String[] {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"                Message.MESSAGE_SLEEP_LIST_EMPTY","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"            };","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"        return printList(sleeps, size);","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"    public String[] printList(SleepList sleeps, int size) {","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"        logger.fine(\"Printing sleep list\");","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"        String[] returnString \u003d new String[size+1];","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"        returnString[0] \u003d Message.MESSAGE_SLEEP_LIST;","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"            assert sleeps.get(i) !\u003d null : \"Sleep record cannot be null\";","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"            returnString[i+1] \u003d (i + 1) + \". \" + sleeps.get(i).toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"        ","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"        return returnString;","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"    ","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":3,"DaDevChia":43}},{"path":"src/main/java/athleticli/commands/sleep/SetSleepGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":" * To be implemented in future version of AthletiCLI.","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"public class SetSleepGoalCommand {","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":4,"DaDevChia":4}},{"path":"src/main/java/athleticli/commands/sleep/ViewSleepGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":" * To be implemented in future version of AthletiCLI.","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"public class ViewSleepGoalCommand {","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"DaDevChia":8}},{"path":"src/main/java/athleticli/common/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.common;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import static java.util.Locale.ENGLISH;","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":" * Defines string literals or configurations used for file storage.","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"public class Config {","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"            DateTimeFormatter.ofPattern(\"MMMM d, \" + \"yyyy \u0027at\u0027 h:mm a\", ENGLISH);","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\", ENGLISH);","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"    public static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm:ss\", ENGLISH);","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"    public static final String PATH_ACTIVITY \u003d \"./data/activity.txt\";","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"    public static final String PATH_ACTIVITY_GOAL \u003d \"./data/activity_goal.txt\";","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"    public static final String PATH_SLEEP \u003d \"./data/sleep.txt\";","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"    public static final String PATH_SLEEP_GOAL \u003d \"./data/sleep_goal.txt\";","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"    public static final String PATH_DIET \u003d \"./data/diet.txt\";","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"    public static final String PATH_DIET_GOAL \u003d \"./data/diet_goal.txt\";","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"skylee03":12,"nihalzp":9}},{"path":"src/main/java/athleticli/data/Data.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"import athleticli.data.activity.ActivityGoalList;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"import athleticli.data.activity.ActivityList;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import athleticli.data.diet.DietGoalList;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.DietList;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"import athleticli.data.sleep.SleepGoalList;","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"import athleticli.data.sleep.SleepList;","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":" * Defines the basic fields and methods of data.","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"public class Data {","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"    private static Data dataInstance;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"    private ActivityList activities \u003d new ActivityList();","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"    private ActivityGoalList activityGoals \u003d new ActivityGoalList();","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"    private DietList diets \u003d new DietList();","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"    private DietGoalList dietGoals \u003d new DietGoalList();","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"    private SleepList sleeps \u003d new SleepList();","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"    private SleepGoalList sleepGoals \u003d new SleepGoalList();","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"     * Returns the singleton instance of `Data`.","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"     * @return  The singleton instance of `Data`.","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"    public static Data getInstance() {","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"        if (dataInstance \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"            dataInstance \u003d new Data();","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"        return dataInstance;","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"skylee03"},"content":"     * Loads data from files.","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"skylee03"},"content":"    public void load() throws AthletiException {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"skylee03"},"content":"        activities.load();","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"skylee03"},"content":"        activityGoals.load();","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"skylee03"},"content":"        diets.load();","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"skylee03"},"content":"        dietGoals.load();","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"skylee03"},"content":"        sleeps.load();","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"skylee03"},"content":"        sleepGoals.load();","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"skylee03"},"content":"     * Saves data to files.","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"skylee03"},"content":"    public void save() throws IOException {","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"skylee03"},"content":"        activities.save();","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"skylee03"},"content":"        activityGoals.save();","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"skylee03"},"content":"        diets.save();","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"skylee03"},"content":"        dietGoals.save();","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"skylee03"},"content":"        sleeps.save();","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"skylee03"},"content":"        sleepGoals.save();","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"DaDevChia"},"content":"     * Get all the objects","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"DaDevChia"},"content":"    public ActivityList getActivities() {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"DaDevChia"},"content":"        return activities;","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"DaDevChia"},"content":"    public ActivityGoalList getActivityGoals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"DaDevChia"},"content":"        return activityGoals;","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"DaDevChia"},"content":"    public DietList getDiets() {","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"DaDevChia"},"content":"        return diets;","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"DaDevChia"},"content":"    public DietGoalList getDietGoals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"DaDevChia"},"content":"        return dietGoals;","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"DaDevChia"},"content":"    public SleepList getSleeps() {","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"DaDevChia"},"content":"        return sleeps;","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"DaDevChia"},"content":"    public SleepGoalList getSleepGoals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"DaDevChia"},"content":"        return sleepGoals;","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"DaDevChia"},"content":"     * Set all the objects","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"DaDevChia"},"content":"    public void setActivities(ActivityList activities) {","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"DaDevChia"},"content":"        this.activities \u003d activities;","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"DaDevChia"},"content":"    public void setActivityGoals(ActivityGoalList activityGoals) {","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"DaDevChia"},"content":"        this.activityGoals \u003d activityGoals;","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"DaDevChia"},"content":"    public void setDiets(DietList diets) {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"DaDevChia"},"content":"        this.diets \u003d diets;","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"DaDevChia"},"content":"    public void setDietGoals(DietGoalList dietGoals) {","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"DaDevChia"},"content":"        this.dietGoals \u003d dietGoals;","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"DaDevChia"},"content":"    public void setSleeps(SleepList sleeps) {","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"DaDevChia"},"content":"        this.sleeps \u003d sleeps;","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"DaDevChia"},"content":"    public void setSleepGoals(SleepGoalList sleepGoals) {","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"DaDevChia"},"content":"        this.sleepGoals \u003d sleepGoals;","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"DaDevChia"},"content":"  ","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":59,"DaDevChia":57,"nihalzp":1}},{"path":"src/main/java/athleticli/data/Findable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"public interface Findable\u003cT\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"     * Returns a list of objects matching the date.","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"     * @param date The date to be matched.","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"     * @return A list of objects matching the date.","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"    public ArrayList\u003cT\u003e find(LocalDate date);","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"skylee03":12,"yicheng-toh":2}},{"path":"src/main/java/athleticli/data/Goal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":" * Defines the basic fields and methods for a goal.","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"public abstract class Goal {","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"     * Defines different types of time spans.","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"    public enum TimeSpan {","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"        DAILY(1),","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"        WEEKLY(7),","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"        MONTHLY(30),","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"        YEARLY(365);","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"        private final int days;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"        TimeSpan(int days) {","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"            this.days \u003d days;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"        /**","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"         * Returns the number of days in the time span.","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"         *","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"         * @return  The number of days in the time span.","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"         */","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"        public int getDays() {","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"            return days;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"    private TimeSpan timeSpan;","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":"    public Goal(TimeSpan timeSpan) {","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"skylee03"},"content":"        this.timeSpan \u003d timeSpan;","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"skylee03"},"content":"     * Returns the time span of this goal.","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"skylee03"},"content":"     * @return  The time span of this goal.","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"skylee03"},"content":"    public TimeSpan getTimeSpan() {","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"skylee03"},"content":"        return timeSpan;","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"skylee03"},"content":"     * Checks whether the date is between the time span.","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"skylee03"},"content":"     * @param date     The date to be matched.","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"skylee03"},"content":"     * @param timeSpan The time span of the goal.","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"skylee03"},"content":"     * @return         Whether the date is between the time span.","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"skylee03"},"content":"    public static boolean checkDate(LocalDate date, TimeSpan timeSpan) {","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"skylee03"},"content":"        final LocalDate endDate \u003d LocalDate.now();","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"skylee03"},"content":"        final LocalDate startDate \u003d endDate.minusDays(timeSpan.getDays() - 1);","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"skylee03"},"content":"        return !(date.isBefore(startDate) || date.isAfter(endDate));","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"skylee03"},"content":"     * Returns whether the goal is achieved.","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"skylee03"},"content":"     * @param data  The current data containing all records.","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"skylee03"},"content":"     * @return      Whether the goal is achieved.","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"skylee03"},"content":"    public abstract boolean isAchieved(Data data);","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"skylee03":69,"AlWo223":1}},{"path":"src/main/java/athleticli/data/StorableList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import static athleticli.ui.Message.MESSAGE_LOAD_EXCEPTION;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.WrappedAthletiException;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"import athleticli.storage.Storage;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"public abstract class StorableList\u003cT\u003e extends ArrayList\u003cT\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"    private String path;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"     * Constructs an empty list with its storage path.","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"    public StorableList(String path) {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"     * Saves to a file.","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"    public void save() throws IOException {","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"        Storage.save(path, this.stream().map(item -\u003e unparse(item) + \"\\n\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"     * Loads from a file.","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"    public void load() throws AthletiException {","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"            Storage.load(path).map(s -\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"                try {","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":"                    return parse(s);","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"skylee03"},"content":"                } catch (AthletiException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"skylee03"},"content":"                    throw new WrappedAthletiException(e);","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"skylee03"},"content":"                }","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"skylee03"},"content":"            }).forEachOrdered(this::add);","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"skylee03"},"content":"        } catch (IOException | WrappedAthletiException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"skylee03"},"content":"            throw new AthletiException(String.format(MESSAGE_LOAD_EXCEPTION, path));","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"skylee03"},"content":"     * Parses a T object from a string.","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"skylee03"},"content":"     * @param s     The string to be parsed.","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"skylee03"},"content":"     * @return      The T object parsed from the string.","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"skylee03"},"content":"    public abstract T parse(String s) throws AthletiException;","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"skylee03"},"content":"     * Unparses a T object to a string.","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"skylee03"},"content":"     * @param t     The T object to be parsed.","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"skylee03"},"content":"     * @return      The string unparsed from the T object.","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"skylee03"},"content":"    public abstract String unparse(T t);","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"skylee03":61}},{"path":"src/main/java/athleticli/data/activity/Activity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import athleticli.parser.Parameter;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"import static athleticli.common.Config.DATE_TIME_FORMATTER;","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"import static athleticli.common.Config.TIME_FORMATTER;","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":" * Represents a physical activity consisting of basic sports data.","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"public class Activity {","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    private static final int columnWidth \u003d 40;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    private String description;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    private String caption;","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"    private LocalTime movingTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    private int distance;","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"    private int calories;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"     * Generates a new general sports activity with some basic stats.","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"     * By default, calories is 0, i.e., not tracked.","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"     * @param movingTime duration of the activity in minutes","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"     * @param distance distance covered in meters","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"     * @param startDateTime start date and time of the activity","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"     * @param caption a caption of the activity chosen by the user (e.g., \"Morning Run\")","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"    public Activity(String caption, LocalTime movingTime, int distance, LocalDateTime startDateTime) {","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"        this.movingTime \u003d movingTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"        this.distance \u003d distance;","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"        this.caption \u003d caption;","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"    public LocalTime getMovingTime() {","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"        return movingTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"    public int getDistance() {","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"        return distance;","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"    public String getCaption() {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"        return caption;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"        return startDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"    public int getCalories() {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"        return this.calories;","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"    public int getColumnWidth() {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"        return columnWidth;","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"     * Returns a single line summary of the activity.","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"AlWo223"},"content":"     * @return a string representation of the activity","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"AlWo223"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"AlWo223"},"content":"        String movingTimeOutput \u003d generateShortMovingTimeStringOutput();","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"AlWo223"},"content":"        String distanceOutput \u003d generateDistanceStringOutput();","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"AlWo223"},"content":"        String startDateTimeOutput \u003d generateStartDateTimeStringOutput();","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"AlWo223"},"content":"        return \"[Activity] \" + caption + \" | \" + distanceOutput + \" | \" + movingTimeOutput + \" | \" +","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"AlWo223"},"content":"                startDateTimeOutput;","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"AlWo223"},"content":"     * Returns distance in user-friendly output format.","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"AlWo223"},"content":"     * @return a string representation of the distance","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"AlWo223"},"content":"    public String generateDistanceStringOutput() {","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"AlWo223"},"content":"        double distanceInKm \u003d distance / 1000.0;","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"AlWo223"},"content":"        return \"Distance: \" + String.format(Locale.ENGLISH, \"%.2f\", distanceInKm)","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"AlWo223"},"content":"                + \" km\";","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"AlWo223"},"content":"     * Returns moving time in user-friendly output format.","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"AlWo223"},"content":"     * @return a string representation of the moving time","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"AlWo223"},"content":"    public String generateMovingTimeStringOutput() {","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"AlWo223"},"content":"        return \"Time: \" + movingTime.format(TIME_FORMATTER);","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"AlWo223"},"content":"     * Returns a short representation of the moving time with the format depending on the duration.","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"AlWo223"},"content":"     * @return a string representation of the moving time","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"AlWo223"},"content":"    public String generateShortMovingTimeStringOutput() {","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"AlWo223"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"AlWo223"},"content":"        if (movingTime.getHour() \u003e 0) {","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"AlWo223"},"content":"            output +\u003d movingTime.getHour() + \"h \" + movingTime.getMinute() + \"m\";","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"AlWo223"},"content":"        } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"AlWo223"},"content":"            output +\u003d movingTime.getMinute() + \"m \" + movingTime.getSecond() + \"s\";","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"AlWo223"},"content":"        return \"Time: \" + output;","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"AlWo223"},"content":"     * Returns start date and time in user-friendly output format.","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"AlWo223"},"content":"     * @return a string representation of the start date and time","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"AlWo223"},"content":"    public String generateStartDateTimeStringOutput() {","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"AlWo223"},"content":"        return startDateTime.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"AlWo223"},"content":"     * Returns a detailed summary of the activity.","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"AlWo223"},"content":"     * @return a multiline string representation of the activity","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"AlWo223"},"content":"    public String toDetailedString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"AlWo223"},"content":"        String startDateTimeOutput \u003d generateStartDateTimeStringOutput();","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"AlWo223"},"content":"        String movingTimeOutput \u003d generateMovingTimeStringOutput();","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"AlWo223"},"content":"        String distanceOutput \u003d generateDistanceStringOutput();","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"AlWo223"},"content":"        String header \u003d \"[Activity - \" + this.getCaption() + \" - \" + startDateTimeOutput + \"]\";","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"AlWo223"},"content":"        String firstRow \u003d formatTwoColumns(\"\\t\" + distanceOutput, movingTimeOutput, columnWidth);","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"AlWo223"},"content":"        String secondRow \u003d formatTwoColumns(\"\\tCalories: \" +","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"AlWo223"},"content":"                this.getCalories() + \" kcal\", \"...\", columnWidth);","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"AlWo223"},"content":"        return String.join(System.lineSeparator(), header, firstRow, secondRow);","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":136,"author":{"gitId":"AlWo223"},"content":"     * Formats two strings into two columns of equal width.","lastModifiedDate":"2023-10-22"},{"lineNumber":137,"author":{"gitId":"AlWo223"},"content":"     * @param left String to be placed in the left column","lastModifiedDate":"2023-10-22"},{"lineNumber":138,"author":{"gitId":"AlWo223"},"content":"     * @param right String to be placed in the right column","lastModifiedDate":"2023-10-22"},{"lineNumber":139,"author":{"gitId":"AlWo223"},"content":"     * @param columnWidth width of each column","lastModifiedDate":"2023-10-22"},{"lineNumber":140,"author":{"gitId":"AlWo223"},"content":"     * @return a formatted string with two columns of equal width","lastModifiedDate":"2023-10-22"},{"lineNumber":141,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":142,"author":{"gitId":"AlWo223"},"content":"    public String formatTwoColumns(String left, String right, int columnWidth) {","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"AlWo223"},"content":"        return String.format(\"%-\" + columnWidth + \"s%s\", left, right);","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"AlWo223"},"content":"     * Returns a string representation of the activity used for storing the data.","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"AlWo223"},"content":"     * @return a string representation of the activity","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"AlWo223"},"content":"    public String unparse() {","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"AlWo223"},"content":"        String commandArgs \u003d Parameter.ACTIVITY_STORAGE_INDICATOR;","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"AlWo223"},"content":"        commandArgs +\u003d \" \" + this.getCaption();","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"AlWo223"},"content":"        commandArgs +\u003d \" \" + Parameter.DURATION_SEPARATOR + this.getMovingTime().format(TIME_FORMATTER);","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"AlWo223"},"content":"        commandArgs +\u003d \" \" + Parameter.DISTANCE_SEPARATOR + this.getDistance();","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"AlWo223"},"content":"        commandArgs +\u003d \" \" + Parameter.DATETIME_SEPARATOR + this.getStartDateTime();","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"AlWo223"},"content":"        return commandArgs;","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":159,"author":{"gitId":"AlWo223"},"content":"    public void setCaption(String caption) {","lastModifiedDate":"2023-11-05"},{"lineNumber":160,"author":{"gitId":"AlWo223"},"content":"        this.caption \u003d caption;","lastModifiedDate":"2023-11-05"},{"lineNumber":161,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":162,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":163,"author":{"gitId":"AlWo223"},"content":"    public void setMovingTime(LocalTime movingTime) {","lastModifiedDate":"2023-11-05"},{"lineNumber":164,"author":{"gitId":"AlWo223"},"content":"        this.movingTime \u003d movingTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":165,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":166,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":167,"author":{"gitId":"AlWo223"},"content":"    public void setDistance(int distance) {","lastModifiedDate":"2023-11-05"},{"lineNumber":168,"author":{"gitId":"AlWo223"},"content":"        this.distance \u003d distance;","lastModifiedDate":"2023-11-05"},{"lineNumber":169,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":170,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":171,"author":{"gitId":"AlWo223"},"content":"    public void setStartDateTime(LocalDateTime startDateTime) {","lastModifiedDate":"2023-11-05"},{"lineNumber":172,"author":{"gitId":"AlWo223"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":173,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":174,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":5,"AlWo223":166,"nihalzp":3}},{"path":"src/main/java/athleticli/data/activity/ActivityChanges.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-11-05"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Swim.SwimmingStyle;","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"/**","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":" * Represents an object that tracks changes to an activity.","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":" */","lastModifiedDate":"2023-11-05"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"public class ActivityChanges {","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"    private String caption;","lastModifiedDate":"2023-11-05"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"    private int distance;","lastModifiedDate":"2023-11-05"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"    private LocalTime duration;","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    private int elevation;","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    private SwimmingStyle swimmingStyle;","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"     * Constructor for ActivityChanges.","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    public ActivityChanges() {","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"    public String getCaption() {","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"        return caption;","lastModifiedDate":"2023-11-05"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"    public void setCaption(String caption) {","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"        this.caption \u003d caption;","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"    public int getDistance() {","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"        return distance;","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"    public void setDistance(int distance) {","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"        this.distance \u003d distance;","lastModifiedDate":"2023-11-05"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"    public LocalTime getDuration() {","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"        return duration;","lastModifiedDate":"2023-11-05"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"    public void setDuration(LocalTime duration) {","lastModifiedDate":"2023-11-05"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2023-11-05"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2023-11-05"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"        return startDateTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"    public void setStartDateTime(LocalDateTime startDateTime) {","lastModifiedDate":"2023-11-05"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"    public int getElevation() {","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"        return elevation;","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"    public void setElevation(int elevation) {","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"        this.elevation \u003d elevation;","lastModifiedDate":"2023-11-05"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"    public SwimmingStyle getSwimmingStyle() {","lastModifiedDate":"2023-11-05"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"        return swimmingStyle;","lastModifiedDate":"2023-11-05"},{"lineNumber":67,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":69,"author":{"gitId":"AlWo223"},"content":"    public void setSwimmingStyle(SwimmingStyle swimmingStyle) {","lastModifiedDate":"2023-11-05"},{"lineNumber":70,"author":{"gitId":"AlWo223"},"content":"        this.swimmingStyle \u003d swimmingStyle;","lastModifiedDate":"2023-11-05"},{"lineNumber":71,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":72,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"AlWo223":72}},{"path":"src/main/java/athleticli/data/activity/ActivityGoal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.Goal;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"public class ActivityGoal extends Goal {","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"    public enum GoalType {","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"        DISTANCE, DURATION // can be extended","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"    public enum Sport {","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"        RUNNING, CYCLING, SWIMMING, GENERAL","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    private int targetValue;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    private final GoalType goalType;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    private final Sport sport;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"     * Constructs an activity goal.","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"     * @param timeSpan    The time span of the activity goal.","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"     * @param goalType    The goal type of the activity goal.","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"     * @param sport       The sport of the activity goal.","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"     * @param targetValue The target value of the activity goal.","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"    public ActivityGoal(TimeSpan timeSpan, GoalType goalType, Sport sport, int targetValue) {","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"        super(timeSpan);","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"        this.targetValue \u003d targetValue;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"        this.goalType \u003d goalType;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"        this.sport \u003d sport;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"     * Examines whether the activity goal is achieved.","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"     * @param data The data containing the activity list.","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"     * @return Whether the activity goal is achieved.","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"    public boolean isAchieved(Data data) throws IllegalStateException {","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"        int total \u003d getCurrentValue(data);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"        return total \u003e\u003d targetValue;","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"     * Returns the current value of the activity goal metric.","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"     * @param data The data containing the activity list.","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"     * @return The current value of the activity goal metric.","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"    public int getCurrentValue(Data data) throws IllegalStateException {","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"        ActivityList activities \u003d data.getActivities();","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"        Class\u003c?\u003e activityClass \u003d getActivityClass();","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"        int total;","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"        switch(goalType) {","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"        case DISTANCE:","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"skylee03"},"content":"            total \u003d activities.getTotalDistance(activityClass, this.getTimeSpan());","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"            break;","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"        case DURATION:","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"skylee03"},"content":"            total \u003d activities.getTotalDuration(activityClass, this.getTimeSpan());","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"            total \u003d total / 60;","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"            break;","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"        default:","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + goalType);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"        return total;","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"    public void setTargetValue(int targetValue) {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"AlWo223"},"content":"        this.targetValue \u003d targetValue;","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"AlWo223"},"content":"     * Returns the class of the activity associated with the activity goal.","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"AlWo223"},"content":"     * @return The class of the activity.","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"AlWo223"},"content":"    public Class\u003c?\u003e getActivityClass() {","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"AlWo223"},"content":"        switch (this.sport) {","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"AlWo223"},"content":"        case RUNNING:","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"AlWo223"},"content":"            return Run.class;","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"AlWo223"},"content":"        case CYCLING:","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"AlWo223"},"content":"            return Cycle.class;","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"AlWo223"},"content":"        case SWIMMING:","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"AlWo223"},"content":"            return Swim.class;","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"AlWo223"},"content":"        default:","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"AlWo223"},"content":"            return Activity.class;","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"AlWo223"},"content":"     * Returns the string representation of the activity goal including progress information.","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"AlWo223"},"content":"     * @return The string representation of the activity goal.","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"AlWo223"},"content":"    public String toString(Data data) {","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"AlWo223"},"content":"        String goalTypeString \u003d goalType.name();","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"AlWo223"},"content":"        String sportString \u003d sport.name();","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"skylee03"},"content":"        return (getTimeSpan().name().toLowerCase() + \" \" + sportString.toLowerCase() + \" \" +","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"AlWo223"},"content":"                goalTypeString.toLowerCase() + \": \" + getCurrentValue(data) + \" / \" + targetValue);","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"AlWo223"},"content":"    public GoalType getGoalType() {","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"AlWo223"},"content":"        return goalType;","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"AlWo223"},"content":"    public Sport getSport() {","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"AlWo223"},"content":"        return sport;","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"AlWo223"},"content":"    public int getTargetValue() {","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"AlWo223"},"content":"        return targetValue;","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":10,"AlWo223":100}},{"path":"src/main/java/athleticli/data/activity/ActivityGoalList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import athleticli.data.StorableList;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import athleticli.parser.ActivityParser;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import athleticli.parser.Parameter;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"import static athleticli.common.Config.PATH_ACTIVITY_GOAL;","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":" * Represents a list of activity goals.","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"public class ActivityGoalList extends StorableList\u003cActivityGoal\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"     * Constructs an activity goal list.","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"    public ActivityGoalList() {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"        super(PATH_ACTIVITY_GOAL);","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"     * Parses an activity goal from a string.","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"     * @param arguments The string to be parsed.","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"     * @return The activity goal parsed from the string.","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"    public ActivityGoal parse(String arguments) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"        return ActivityParser.parseActivityGoal(arguments);","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"     * Unparses an activity goal to a string.","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"     * @param activityGoal The activity goal to be parsed.","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":"     * @return The string unparsed from the activity goal.","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"skylee03"},"content":"    public String unparse(ActivityGoal activityGoal) {","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"        String commandArgs \u003d \"\";","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"        commandArgs +\u003d Parameter.SPORT_SEPARATOR + activityGoal.getSport();","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"        commandArgs +\u003d \" \" + Parameter.TYPE_SEPARATOR + activityGoal.getGoalType();","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"        commandArgs +\u003d \" \" + Parameter.PERIOD_SEPARATOR + activityGoal.getTimeSpan();","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"        commandArgs +\u003d \" \" + Parameter.TARGET_SEPARATOR + activityGoal.getTargetValue();","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"        return commandArgs;","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":30,"AlWo223":12,"nihalzp":5}},{"path":"src/main/java/athleticli/data/activity/ActivityList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import static athleticli.common.Config.PATH_ACTIVITY;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"import athleticli.data.Findable;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"import athleticli.data.StorableList;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.Goal;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"import athleticli.parser.ActivityParser;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"import athleticli.parser.Parameter;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"public class ActivityList extends StorableList\u003cActivity\u003e implements Findable {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"     * Constructs an empty activity list.","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"    public ActivityList() {","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"        super(PATH_ACTIVITY);","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"     * Returns a list of activities matching the date.","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"     * @param date The date to be matched.","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"     * @return A list of activities matching the date.","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"    public ArrayList\u003cObject\u003e find(LocalDate date) {","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"        ArrayList\u003cObject\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"        for (Activity activity : this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"            if (activity.getStartDateTime().toLocalDate().equals(date)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"                result.add(activity);","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"        return result;","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"     * Sorts the activities in the list by date.","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"    public void sort() {","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"        this.sort(Comparator.comparing(Activity::getStartDateTime).reversed());","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"     * Returns a list of activities within the time span.","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"skylee03"},"content":"     * @param timeSpan The time span to be matched.","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"     * @return A list of activities within the time span.","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"skylee03"},"content":"    public ArrayList\u003cActivity\u003e filterByTimespan(Goal.TimeSpan timeSpan) {","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"        ArrayList\u003cActivity\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"        for (Activity activity : this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"            LocalDate activityDate \u003d activity.getStartDateTime().toLocalDate();","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"skylee03"},"content":"            if (Goal.checkDate(activityDate, timeSpan)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"                result.add(activity);","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"        return result;","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"AlWo223"},"content":"     * Returns the total distance of all activities in the list matching the specified activity class.","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"     * @param activityClass The activity class to be matched.","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"AlWo223"},"content":"     * @return The total distance of all activities in the list matching the specified activity class.","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"skylee03"},"content":"    public int getTotalDistance(Class\u003c?\u003e activityClass, Goal.TimeSpan timeSpan) {","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"skylee03"},"content":"        ArrayList\u003cActivity\u003e filteredActivities \u003d filterByTimespan(timeSpan);","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"AlWo223"},"content":"        int runningDistance \u003d 0;","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"AlWo223"},"content":"        for (Activity activity : filteredActivities) {","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"AlWo223"},"content":"            if (activityClass.isInstance(activity)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"AlWo223"},"content":"                runningDistance +\u003d activity.getDistance();","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"AlWo223"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"AlWo223"},"content":"        return runningDistance;","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"AlWo223"},"content":"     * Returns the total moving time in seconds of all activities in the list matching the specified activity class.","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"AlWo223"},"content":"     * @param activityClass The activity class to be matched.","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"AlWo223"},"content":"     * @return The total moving time of all activities in the list matching the specified activity class.","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"skylee03"},"content":"    public int getTotalDuration(Class\u003c?\u003e activityClass, Goal.TimeSpan timeSpan) {","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"skylee03"},"content":"        ArrayList\u003cActivity\u003e filteredActivities \u003d filterByTimespan(timeSpan);","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"AlWo223"},"content":"        int movingTime \u003d 0;","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"AlWo223"},"content":"        for (Activity activity : filteredActivities) {","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"AlWo223"},"content":"            if (activityClass.isInstance(activity)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"AlWo223"},"content":"                LocalTime duration \u003d activity.getMovingTime();","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"AlWo223"},"content":"                movingTime +\u003d duration.getHour() * 3600 + duration.getMinute() * 60 + duration.getSecond();","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"AlWo223"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"AlWo223"},"content":"        return movingTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"skylee03"},"content":"     * Parses an activity from a string.","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"skylee03"},"content":"     * @param s The string to be parsed.","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"skylee03"},"content":"     * @return The activity parsed from the string.","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"AlWo223"},"content":"    public Activity parse(String s) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"AlWo223"},"content":"            String indicator \u003d s.split(\" \", 2)[0];","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"AlWo223"},"content":"            String arguments \u003d s.split(\" \", 2)[1];","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"AlWo223"},"content":"            switch (indicator) {","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"AlWo223"},"content":"            case Parameter.ACTIVITY_STORAGE_INDICATOR:","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"AlWo223"},"content":"                return ActivityParser.parseActivity(arguments);","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"AlWo223"},"content":"            case Parameter.RUN_STORAGE_INDICATOR:","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"AlWo223"},"content":"                return ActivityParser.parseRunCycle(arguments, true);","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"AlWo223"},"content":"            case Parameter.CYCLE_STORAGE_INDICATOR:","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"AlWo223"},"content":"                return ActivityParser.parseRunCycle(arguments, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"AlWo223"},"content":"            case Parameter.SWIM_STORAGE_INDICATOR:","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"AlWo223"},"content":"                return ActivityParser.parseSwim(arguments);","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"AlWo223"},"content":"            default:","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"AlWo223"},"content":"                throw new AthletiException(Message.ACTIVITY_STORAGE_INVALID_INDICATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"AlWo223"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"AlWo223"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.ACTIVITY_STORAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"skylee03"},"content":"     * Unparses an activity to a string.","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"skylee03"},"content":"     * @param activity The activity to be parsed.","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"skylee03"},"content":"     * @return The string unparsed from the activity.","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"skylee03"},"content":"    public String unparse(Activity activity) {","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"AlWo223"},"content":"        return activity.unparse();","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":52,"AlWo223":86,"nihalzp":1}},{"path":"src/main/java/athleticli/data/activity/Cycle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import athleticli.parser.Parameter;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":" * Represents a cycling activity consisting of relevant evaluation data.","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"public class Cycle extends Activity {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    private int elevationGain;","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    private double averageSpeed;","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"     * Generates a new cycling activity with cycling specific stats.","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"     * By default, calories is 0, i.e., not tracked.","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"     * averageSpeed is calculated automatically based on the distance and movingTime.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"     * @param movingTime duration of the activity in minutes","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"     * @param distance distance covered in meters","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"     * @param startDateTime start date and time of the activity","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"     * @param caption a caption of the activity chosen by the user (e.g., \"Morning Run\")","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"     * @param elevationGain elevation gain in meters","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"    public Cycle(String caption, LocalTime movingTime, int distance, LocalDateTime startDateTime, int elevationGain) {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"        super(caption, movingTime, distance, startDateTime);","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"        this.elevationGain \u003d elevationGain;","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"        this.averageSpeed \u003d this.calculateAverageSpeed();","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"     * Calculates the average speed of the cycle in km/h.","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"     * @return average speed of the cycle in km/h","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"    public double calculateAverageSpeed() {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"        double dist \u003d (double) this.getDistance();","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"        double time \u003d (double) this.getMovingTime().toSecondOfDay() / 3600;","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"        return (dist/1000) / time;","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"     * Returns a single line summary of the cycling activity.","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"     * @return a string representation of the cycle","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"        String result \u003d super.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"        result \u003d result.replace(\"[Activity]\", \"[Cycle]\");","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"        String speedOutput \u003d generateSpeedStringOutput();","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"        result \u003d result.replace(\"Time: \", \"Speed: \" + speedOutput + \" | Time: \");","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"        return result;","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"     * Returns a string representation of the average speed of the cycle.","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"     * @return a string representation of the average speed of the cycle","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"    public String generateSpeedStringOutput() {","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"        return String.format(Locale.ENGLISH, \"%.2f\", this.averageSpeed) + \" km/h\";","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"     * Returns a detailed summary of the cycle.","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"     * @return a multiline string representation of the cycle","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"    public String toDetailedString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"AlWo223"},"content":"        String startDateTimeOutput \u003d generateStartDateTimeStringOutput();","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"AlWo223"},"content":"        String movingTimeOutput \u003d generateMovingTimeStringOutput();","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"AlWo223"},"content":"        String distanceOutput \u003d generateDistanceStringOutput();","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"AlWo223"},"content":"        String speedOutput \u003d generateSpeedStringOutput();","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"AlWo223"},"content":"        int columnWidth \u003d getColumnWidth();","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"AlWo223"},"content":"        String header \u003d \"[Cycle - \" + this.getCaption() + \" - \" + startDateTimeOutput + \"]\";","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"AlWo223"},"content":"        String firstRow \u003d formatTwoColumns(\"\\t\" + distanceOutput, \"Elevation Gain: \" +","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"AlWo223"},"content":"                        elevationGain + \" m\", columnWidth);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"AlWo223"},"content":"        String secondRow \u003d formatTwoColumns(\"\\t\" + movingTimeOutput, \"Avg Speed: \" +","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"AlWo223"},"content":"                        speedOutput, columnWidth);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"AlWo223"},"content":"        String thirdRow \u003d formatTwoColumns(\"\\tCalories: \" + this.getCalories() + \" kcal\", \"Max Speed: \" +","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"AlWo223"},"content":"                        \"tbd\", columnWidth);","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"AlWo223"},"content":"        return String.join(System.lineSeparator(), header, firstRow, secondRow, thirdRow);","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"AlWo223"},"content":"     * Returns a string representation of the cycle used for storing the data.","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"AlWo223"},"content":"     * @return a string representation of the cycle","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"AlWo223"},"content":"    public String unparse() {","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"AlWo223"},"content":"        String commandArgs \u003d super.unparse();","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"AlWo223"},"content":"        commandArgs \u003d commandArgs.replace(Parameter.ACTIVITY_STORAGE_INDICATOR, Parameter.CYCLE_STORAGE_INDICATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"AlWo223"},"content":"        commandArgs +\u003d \" \" + Parameter.ELEVATION_SEPARATOR + this.elevationGain;","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"AlWo223"},"content":"        return commandArgs;","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"AlWo223"},"content":"    public int getElevationGain() {","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"AlWo223"},"content":"        return this.elevationGain;","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":102,"author":{"gitId":"AlWo223"},"content":"    public void setElevationGain(int elevationGain) {","lastModifiedDate":"2023-11-05"},{"lineNumber":103,"author":{"gitId":"AlWo223"},"content":"        this.elevationGain \u003d elevationGain;","lastModifiedDate":"2023-11-05"},{"lineNumber":104,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":105,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":106,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-11-05"},{"lineNumber":107,"author":{"gitId":"AlWo223"},"content":"    public void setDistance(int distance) {","lastModifiedDate":"2023-11-05"},{"lineNumber":108,"author":{"gitId":"AlWo223"},"content":"        super.setDistance(distance);","lastModifiedDate":"2023-11-05"},{"lineNumber":109,"author":{"gitId":"AlWo223"},"content":"        this.averageSpeed \u003d this.calculateAverageSpeed();","lastModifiedDate":"2023-11-05"},{"lineNumber":110,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":111,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":112,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-11-05"},{"lineNumber":113,"author":{"gitId":"AlWo223"},"content":"    public void setMovingTime(LocalTime movingTime) {","lastModifiedDate":"2023-11-05"},{"lineNumber":114,"author":{"gitId":"AlWo223"},"content":"        super.setMovingTime(movingTime);","lastModifiedDate":"2023-11-05"},{"lineNumber":115,"author":{"gitId":"AlWo223"},"content":"        this.averageSpeed \u003d this.calculateAverageSpeed();","lastModifiedDate":"2023-11-05"},{"lineNumber":116,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":117,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"skylee03":1,"AlWo223":116}},{"path":"src/main/java/athleticli/data/activity/Run.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import athleticli.parser.Parameter;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":" * Represents a running activity consisting of relevant evaluation data.","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"public class Run extends Activity {","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"    private int elevationGain;","lastModifiedDate":"2023-11-05"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"    private double averagePace;","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    private final int steps;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"     * Generates a new running activity with running specific stats.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"     * By default, calories is 0, i.e., not tracked.","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"     * averageSpeed is calculated automatically based on the distance and movingTime.","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"     * @param movingTime duration of the activity in minutes","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"     * @param distance distance covered in meters","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"     * @param startDateTime start date and time of the activity","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"     * @param caption a caption of the activity chosen by the user (e.g., \"Morning Run\")","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"     * @param elevationGain elevation gain in meters","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"    public Run(String caption, LocalTime movingTime, int distance, LocalDateTime startDateTime, int elevationGain) {","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"        super(caption, movingTime, distance, startDateTime);","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"        this.elevationGain \u003d elevationGain;","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"        this.averagePace \u003d this.calculateAveragePace();","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"        this.steps \u003d 0;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"     * Calculates the average pace of the run in minutes per km.","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"     * @return average pace of the run in minutes per km","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"    public double calculateAveragePace() {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"        double time \u003d (double) this.getMovingTime().toSecondOfDay() / 60;","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"        double distance \u003d (double) this.getDistance() / 1000;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"        return time / distance;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"     * Converts the average pace of the run to the user-friendly format mm:ss.","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"     * @return average pace of run in mm:ss format","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"    public String convertAveragePaceToString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"        int totalSeconds \u003d (int) Math.round(this.averagePace*60);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"        int minutes \u003d totalSeconds / 60;","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"        int seconds \u003d totalSeconds % 60;","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"        return String.format(\"%d:%02d\", minutes, seconds);","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"     * Returns a single line summary of the running activity.","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"     * @return a string representation of the run","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"        String result \u003d super.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"        result \u003d result.replace(\"[Activity]\", \"[Run]\");","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"        String paceOutput \u003d this.convertAveragePaceToString() + \" /km\";","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"        result \u003d result.replace(\"Time: \", \"Pace: \" + paceOutput + \" | Time: \");","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"        return result;","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"     * Returns a string representation of the run used for storing the data.","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"AlWo223"},"content":"     * @return a string representation of the run","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"AlWo223"},"content":"    public String unparse() {","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"AlWo223"},"content":"        String commandArgs \u003d super.unparse();","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"AlWo223"},"content":"        commandArgs \u003d commandArgs.replace(Parameter.ACTIVITY_STORAGE_INDICATOR, Parameter.RUN_STORAGE_INDICATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"AlWo223"},"content":"        commandArgs +\u003d \" \" + Parameter.ELEVATION_SEPARATOR + this.elevationGain;","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"AlWo223"},"content":"        return commandArgs;","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"AlWo223"},"content":"     * Returns a detailed summary of the run.","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"AlWo223"},"content":"     * @return a multiline string representation of the run","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"AlWo223"},"content":"    public String toDetailedString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"AlWo223"},"content":"        String startDateTimeOutput \u003d generateStartDateTimeStringOutput();","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"AlWo223"},"content":"        String movingTimeOutput \u003d generateMovingTimeStringOutput();","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"AlWo223"},"content":"        String distanceOutput \u003d generateDistanceStringOutput();","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"AlWo223"},"content":"        String paceOutput \u003d this.convertAveragePaceToString() + \" /km\";","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"AlWo223"},"content":"        int columnWidth \u003d getColumnWidth();","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"AlWo223"},"content":"        String header \u003d \"[Run - \" + this.getCaption() + \" - \" + startDateTimeOutput + \"]\";","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"AlWo223"},"content":"        String firstRow \u003d formatTwoColumns(\"\\t\" + distanceOutput, \"Avg Pace: \" + paceOutput,","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"AlWo223"},"content":"                columnWidth);","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"AlWo223"},"content":"        String secondRow \u003d formatTwoColumns(\"\\t\" + movingTimeOutput, \"Elevation Gain: \" +","lastModifiedDate":"2023-11-04"},{"lineNumber":95,"author":{"gitId":"AlWo223"},"content":"                elevationGain + \" m\", columnWidth);","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"AlWo223"},"content":"        String thirdRow \u003d formatTwoColumns(\"\\tCalories: \" + this.getCalories() + \" kcal\", \"Steps: \" +","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"AlWo223"},"content":"                        this.steps, columnWidth);","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"AlWo223"},"content":"        return String.join(System.lineSeparator(), header, firstRow, secondRow, thirdRow);","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"AlWo223"},"content":"    public int getElevationGain() {","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"AlWo223"},"content":"        return elevationGain;","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"AlWo223"},"content":"    public void setElevationGain(int elevationGain) {","lastModifiedDate":"2023-11-05"},{"lineNumber":107,"author":{"gitId":"AlWo223"},"content":"        this.elevationGain \u003d elevationGain;","lastModifiedDate":"2023-11-05"},{"lineNumber":108,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":109,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-11-05"},{"lineNumber":111,"author":{"gitId":"AlWo223"},"content":"    public void setDistance(int distance) {","lastModifiedDate":"2023-11-05"},{"lineNumber":112,"author":{"gitId":"AlWo223"},"content":"        super.setDistance(distance);","lastModifiedDate":"2023-11-05"},{"lineNumber":113,"author":{"gitId":"AlWo223"},"content":"        this.averagePace \u003d this.calculateAveragePace();","lastModifiedDate":"2023-11-05"},{"lineNumber":114,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":115,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":116,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-11-05"},{"lineNumber":117,"author":{"gitId":"AlWo223"},"content":"    public void setMovingTime(LocalTime movingTime) {","lastModifiedDate":"2023-11-05"},{"lineNumber":118,"author":{"gitId":"AlWo223"},"content":"        super.setMovingTime(movingTime);","lastModifiedDate":"2023-11-05"},{"lineNumber":119,"author":{"gitId":"AlWo223"},"content":"        this.averagePace \u003d this.calculateAveragePace();","lastModifiedDate":"2023-11-05"},{"lineNumber":120,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":121,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"skylee03":1,"AlWo223":121}},{"path":"src/main/java/athleticli/data/activity/Swim.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import athleticli.parser.Parameter;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":" * Represents a swimming activity consisting of relevant evaluation data.","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"public class Swim extends Activity {","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"    private final int laps;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"    private SwimmingStyle style;","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    private int averageLapTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    public enum SwimmingStyle {","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"        BUTTERFLY,","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"        BACKSTROKE,","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"        BREASTSTROKE,","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"        FREESTYLE","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"     * Generates a new swimming activity with swimming specific stats.","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"     * By default, calories is 0, i.e., not tracked.","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"     * averageLapTime is calculated automatically based on the movingTime and laps.","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"     * @param movingTime duration of the activity in HH:mm:ss format","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"     * @param distance distance covered in meters","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"     * @param startDateTime start date and time of the activity","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"     * @param caption a caption of the activity chosen by the user (e.g., \"Morning Run\")","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"     * @param style swimming style","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"    public Swim(String caption, LocalTime movingTime, int distance, LocalDateTime startDateTime, SwimmingStyle style) {","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"        super(caption, movingTime, distance, startDateTime);","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"        this.laps \u003d this.calculateLaps();","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"        this.style \u003d style;","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"        this.averageLapTime \u003d this.calculateAverageLapTime();","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"     * Calculates the average lap time in seconds.","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"     * @return average lap time in seconds","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"    public int calculateAverageLapTime() {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"        return this.getMovingTime().toSecondOfDay() / this.laps;","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"     * Calculates the number of laps.","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"     * @return number of laps","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"    public int calculateLaps() {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"        return this.getDistance() / 50;","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"    public int getLaps() {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"        return laps;","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"    public int getAverageLapTime() {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"        return averageLapTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"     * Returns a short string representation of the swim.","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"     * @return a string representation of the swim","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"AlWo223"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"AlWo223"},"content":"        String result \u003d super.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"AlWo223"},"content":"        result \u003d result.replace(\"[Activity]\", \"[Swim]\");","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"AlWo223"},"content":"        String averageLapTimeOutput \u003d this.averageLapTime + \"s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"AlWo223"},"content":"        result \u003d result.replace(\"Time: \", \"Avg Lap Time: \" + averageLapTimeOutput + \" | Time: \");","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"AlWo223"},"content":"        return result;","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"AlWo223"},"content":"     * Returns a detailed summary of the swim.","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"AlWo223"},"content":"     * @return a multiline string representation of the swim","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"AlWo223"},"content":"    public String toDetailedString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"AlWo223"},"content":"        String startDateTimeOutput \u003d generateStartDateTimeStringOutput();","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"AlWo223"},"content":"        String movingTimeOutput \u003d generateMovingTimeStringOutput();","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"AlWo223"},"content":"        String distanceOutput \u003d generateDistanceStringOutput();","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"AlWo223"},"content":"        int columnWidth \u003d getColumnWidth();","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"AlWo223"},"content":"        String header \u003d \"[Swim - \" + this.getCaption() + \" - \" + startDateTimeOutput + \"]\";","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"AlWo223"},"content":"        String firstRow \u003d formatTwoColumns(\"\\t\" + distanceOutput, movingTimeOutput, columnWidth);","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"AlWo223"},"content":"        String secondRow \u003d formatTwoColumns(\"\\tLaps: \" + this.getLaps(), \"Style: \"","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"AlWo223"},"content":"                + this.getStyle(), columnWidth);","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"AlWo223"},"content":"        String thirdRow \u003d formatTwoColumns(\"\\tAvg Lap Time: \" + averageLapTime + \" s\", \"Calories: \" +","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"AlWo223"},"content":"                this.getCalories() + \" kcal\", columnWidth);","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"AlWo223"},"content":"        return String.join(System.lineSeparator(), header, firstRow, secondRow, thirdRow);","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"AlWo223"},"content":"     * Returns a string representation of the swim used for storing the data.","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"AlWo223"},"content":"     * @return a string representation of the swim","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"AlWo223"},"content":"    public String unparse() {","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"AlWo223"},"content":"        String commandArgs \u003d super.unparse();","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"AlWo223"},"content":"        commandArgs \u003d commandArgs.replace(Parameter.ACTIVITY_STORAGE_INDICATOR, Parameter.SWIM_STORAGE_INDICATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"AlWo223"},"content":"        commandArgs +\u003d \" \" + Parameter.SWIMMING_STYLE_SEPARATOR + this.style;","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"AlWo223"},"content":"        return commandArgs;","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"AlWo223"},"content":"    public SwimmingStyle getStyle() {","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"AlWo223"},"content":"        return style;","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"AlWo223"},"content":"    public void setStyle(SwimmingStyle style) {","lastModifiedDate":"2023-11-05"},{"lineNumber":114,"author":{"gitId":"AlWo223"},"content":"        this.style \u003d style;","lastModifiedDate":"2023-11-05"},{"lineNumber":115,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":116,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":117,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-11-05"},{"lineNumber":118,"author":{"gitId":"AlWo223"},"content":"    public void setDistance(int distance) {","lastModifiedDate":"2023-11-05"},{"lineNumber":119,"author":{"gitId":"AlWo223"},"content":"        super.setDistance(distance);","lastModifiedDate":"2023-11-05"},{"lineNumber":120,"author":{"gitId":"AlWo223"},"content":"        this.averageLapTime \u003d this.calculateAverageLapTime();","lastModifiedDate":"2023-11-05"},{"lineNumber":121,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":122,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":123,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-11-05"},{"lineNumber":124,"author":{"gitId":"AlWo223"},"content":"    public void setMovingTime(LocalTime movingTime) {","lastModifiedDate":"2023-11-05"},{"lineNumber":125,"author":{"gitId":"AlWo223"},"content":"        super.setMovingTime(movingTime);","lastModifiedDate":"2023-11-05"},{"lineNumber":126,"author":{"gitId":"AlWo223"},"content":"        this.averageLapTime \u003d this.calculateAverageLapTime();","lastModifiedDate":"2023-11-05"},{"lineNumber":127,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":128,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":129,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"skylee03":1,"AlWo223":128}},{"path":"src/main/java/athleticli/data/diet/Diet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.diet;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import static athleticli.common.Config.DATE_TIME_FORMATTER;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":" * Defines the basic fields and methods of a diet.","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"public class Diet {","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"    private int calories;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"    private int protein;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"    private int carb;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"    private int fat;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"     * Constructs a \u003ccode\u003eDiet\u003c/code\u003e object.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"     * @param calories The caloric value of the diet in cal.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"     * @param protein  Protein intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"     * @param carb     Carbohydrate intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"     * @param fat      Fat intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"     * @param dateTime The date and time of the diet.","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"    public Diet(int calories, int protein, int carb, int fat, LocalDateTime dateTime) {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"        assert calories \u003e\u003d 0 : \"Calories cannot be negative\";","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"        assert protein \u003e\u003d 0 : \"Protein cannot be negative\";","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"        this.protein \u003d protein;","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"        assert carb \u003e\u003d 0 : \"Carb cannot be negative\";","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"        this.carb \u003d carb;","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"        assert fat \u003e\u003d 0 : \"Fat cannot be negative\";","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"        this.fat \u003d fat;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"     * Returns the caloric value of the diet in cal.","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"     * @return The caloric value of the diet in cal.","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"    public int getCalories() {","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"        return calories;","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"nihalzp"},"content":"     * Sets the caloric value of the diet in cal.","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"nihalzp"},"content":"     * @param calories The caloric value of the diet in cal.","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"nihalzp"},"content":"    public void setCalories(int calories) {","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"nihalzp"},"content":"        assert calories \u003e\u003d 0 : \"Calories cannot be negative\";","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"nihalzp"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"nihalzp"},"content":"     * Returns the protein intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"nihalzp"},"content":"     * @return Protein intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"nihalzp"},"content":"    public int getProtein() {","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"nihalzp"},"content":"        return protein;","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"nihalzp"},"content":"     * Sets the protein intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"nihalzp"},"content":"     * @param protein Protein intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"nihalzp"},"content":"    public void setProtein(int protein) {","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"nihalzp"},"content":"        assert protein \u003e\u003d 0 : \"Protein cannot be negative\";","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"nihalzp"},"content":"        this.protein \u003d protein;","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"nihalzp"},"content":"     * Returns the carbohydrate intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"nihalzp"},"content":"     * @return Carbohydrate intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"nihalzp"},"content":"    public int getCarb() {","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"nihalzp"},"content":"        return carb;","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"nihalzp"},"content":"     * Sets the carbohydrate intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"nihalzp"},"content":"     * @param carb Carbohydrate intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"nihalzp"},"content":"    public void setCarb(int carb) {","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"nihalzp"},"content":"        assert carb \u003e\u003d 0 : \"Carb cannot be negative\";","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"nihalzp"},"content":"        this.carb \u003d carb;","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"nihalzp"},"content":"     * Returns the fat intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"nihalzp"},"content":"     * @return Fat intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"nihalzp"},"content":"    public int getFat() {","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"nihalzp"},"content":"        return fat;","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"nihalzp"},"content":"     * Sets the fat intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"nihalzp"},"content":"     * @param fat Fat intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"nihalzp"},"content":"    public void setFat(int fat) {","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"nihalzp"},"content":"        assert fat \u003e\u003d 0 : \"Fat cannot be negative\";","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"nihalzp"},"content":"        this.fat \u003d fat;","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"nihalzp"},"content":"     * Returns the date and time of the diet.","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"nihalzp"},"content":"     * @return The date and time of the diet.","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"nihalzp"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"nihalzp"},"content":"        return dateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"nihalzp"},"content":"     * Sets the date and time of the diet.","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"nihalzp"},"content":"     * @param dateTime The date and time of the diet.","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"nihalzp"},"content":"    public void setDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"nihalzp"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"nihalzp"},"content":"     * Returns a string representation of the diet.","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"nihalzp"},"content":"     * @return A string representation of the diet.","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"nihalzp"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"nihalzp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"nihalzp"},"content":"        return \"Calories: \" + calories + \" Protein: \" + protein + \" Carb: \" + carb + \" Fat: \" + fat +","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"nihalzp"},"content":"                       \" Date: \" + dateTime.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":5,"nihalzp":137}},{"path":"src/main/java/athleticli/data/diet/DietGoal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.diet;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Goal;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.parser.Parameter;","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":" * Represents a diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"public abstract class DietGoal extends Goal {","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"    protected String nutrient;","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"    protected int targetValue;","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"    protected String type;","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"     * Constructs a diet goal with no current value.","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"yicheng-toh"},"content":"     * @param timespan    The timespan of the diet goal.","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"     * @param nutrient    The nutrients of the diet goal.","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"     * @param targetValue The target value of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"    public DietGoal(TimeSpan timespan, String nutrient, int targetValue) {","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"yicheng-toh"},"content":"        super(timespan);","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"        this.nutrient \u003d nutrient;","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"        this.targetValue \u003d targetValue;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"        type \u003d \"\";","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"     * Returns the nutrients of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"     * @return The nutrients of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"yicheng-toh"},"content":"    public String getNutrient() {","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"yicheng-toh"},"content":"        return nutrient;","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"     * Sets the nutrients of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"yicheng-toh"},"content":"     * @param nutrient The nutrient of the diet goal.","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"yicheng-toh"},"content":"    public void setNutrient(String nutrient) {","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"yicheng-toh"},"content":"        this.nutrient \u003d nutrient;","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"nihalzp"},"content":"     * Returns the target value of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"nihalzp"},"content":"     * @return The target value of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"nihalzp"},"content":"    public int getTargetValue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"nihalzp"},"content":"        return targetValue;","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"nihalzp"},"content":"     * Sets the target value of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"nihalzp"},"content":"     * @param targetValue The target value of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"nihalzp"},"content":"    public void setTargetValue(int targetValue) {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"nihalzp"},"content":"        this.targetValue \u003d targetValue;","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"yicheng-toh"},"content":"     * Returns the current value of the diet goal from dietList.","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"yicheng-toh"},"content":"     * @param data A storage class to retrieve diet information.","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"nihalzp"},"content":"     * @return The current value of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"yicheng-toh"},"content":"    public int getCurrentValue(Data data) {","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"yicheng-toh"},"content":"        return updateCurrentValue(data);","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":80,"author":{"gitId":"yicheng-toh"},"content":"     * Returns the type of diet goal.","lastModifiedDate":"2023-11-07"},{"lineNumber":81,"author":{"gitId":"yicheng-toh"},"content":"     * @return the type of diet goal.","lastModifiedDate":"2023-11-07"},{"lineNumber":82,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":83,"author":{"gitId":"yicheng-toh"},"content":"    public String getType() {","lastModifiedDate":"2023-11-04"},{"lineNumber":84,"author":{"gitId":"yicheng-toh"},"content":"        return type;","lastModifiedDate":"2023-11-04"},{"lineNumber":85,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":86,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":87,"author":{"gitId":"yicheng-toh"},"content":"    private int updateCurrentValue(Data data) {","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"yicheng-toh"},"content":"        int currentValue \u003d 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"yicheng-toh"},"content":"        DietList diets \u003d data.getDiets();","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"yicheng-toh"},"content":"        int numDays \u003d getTimeSpan().getDays();","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"yicheng-toh"},"content":"        ArrayList\u003cLocalDate\u003e dates \u003d getPastDates(numDays);","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"yicheng-toh"},"content":"        ArrayList\u003cDiet\u003e dietRecords;","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"yicheng-toh"},"content":"        for (LocalDate date : dates) {","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"yicheng-toh"},"content":"            dietRecords \u003d diets.find(date);","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"yicheng-toh"},"content":"            for (Diet diet : dietRecords) {","lastModifiedDate":"2023-10-29"},{"lineNumber":96,"author":{"gitId":"yicheng-toh"},"content":"                switch (nutrient) {","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"yicheng-toh"},"content":"                case Parameter.NUTRIENTS_FATS:","lastModifiedDate":"2023-11-07"},{"lineNumber":98,"author":{"gitId":"yicheng-toh"},"content":"                    currentValue +\u003d diet.getFat();","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"yicheng-toh"},"content":"                    break;","lastModifiedDate":"2023-10-29"},{"lineNumber":100,"author":{"gitId":"yicheng-toh"},"content":"                case Parameter.NUTRIENTS_CALORIES:","lastModifiedDate":"2023-11-07"},{"lineNumber":101,"author":{"gitId":"yicheng-toh"},"content":"                    currentValue +\u003d diet.getProtein();","lastModifiedDate":"2023-10-29"},{"lineNumber":102,"author":{"gitId":"yicheng-toh"},"content":"                    break;","lastModifiedDate":"2023-10-29"},{"lineNumber":103,"author":{"gitId":"yicheng-toh"},"content":"                case Parameter.NUTRIENTS_PROTEIN:","lastModifiedDate":"2023-11-07"},{"lineNumber":104,"author":{"gitId":"yicheng-toh"},"content":"                    currentValue +\u003d diet.getProtein();","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"yicheng-toh"},"content":"                    break;","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"yicheng-toh"},"content":"                case Parameter.NUTRIENTS_CARB:","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"yicheng-toh"},"content":"                    currentValue +\u003d diet.getCarb();","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"yicheng-toh"},"content":"                    break;","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"yicheng-toh"},"content":"                default:","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"yicheng-toh"},"content":"                    currentValue +\u003d 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"yicheng-toh"},"content":"                }","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"yicheng-toh"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":114,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":115,"author":{"gitId":"nihalzp"},"content":"        return currentValue;","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"yicheng-toh"},"content":"    private ArrayList\u003cLocalDate\u003e getPastDates(int numDays) {","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"yicheng-toh"},"content":"        ArrayList\u003cLocalDate\u003e pastDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":120,"author":{"gitId":"yicheng-toh"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-10-29"},{"lineNumber":121,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":122,"author":{"gitId":"yicheng-toh"},"content":"        for (int i \u003d 0; i \u003c numDays; i++) {","lastModifiedDate":"2023-10-29"},{"lineNumber":123,"author":{"gitId":"yicheng-toh"},"content":"            LocalDate pastDate \u003d currentDate.minusDays(i);","lastModifiedDate":"2023-10-29"},{"lineNumber":124,"author":{"gitId":"yicheng-toh"},"content":"            pastDates.add(pastDate);","lastModifiedDate":"2023-10-29"},{"lineNumber":125,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":126,"author":{"gitId":"yicheng-toh"},"content":"        return pastDates;","lastModifiedDate":"2023-10-29"},{"lineNumber":127,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"nihalzp"},"content":"     * Returns whether the diet goal is achieved.","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"yicheng-toh"},"content":"     * @param data A storage class to retrieve diet information.","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"nihalzp"},"content":"     * @return Whether the diet goal is achieved.","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"yicheng-toh"},"content":"    public boolean isAchieved(Data data) {","lastModifiedDate":"2023-10-29"},{"lineNumber":136,"author":{"gitId":"yicheng-toh"},"content":"        int currentValue \u003d getCurrentValue(data);","lastModifiedDate":"2023-10-29"},{"lineNumber":137,"author":{"gitId":"yicheng-toh"},"content":"        return currentValue \u003e\u003d targetValue;","lastModifiedDate":"2023-10-29"},{"lineNumber":138,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":141,"author":{"gitId":"yicheng-toh"},"content":"     * Returns the symbol to indicate if a diet goal is achieved.","lastModifiedDate":"2023-11-04"},{"lineNumber":142,"author":{"gitId":"yicheng-toh"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":143,"author":{"gitId":"yicheng-toh"},"content":"     * @param data A storage class to retrieve diet information.","lastModifiedDate":"2023-11-04"},{"lineNumber":144,"author":{"gitId":"yicheng-toh"},"content":"     * @return A string symbol indicating that the goal is achieved.","lastModifiedDate":"2023-11-04"},{"lineNumber":145,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":146,"author":{"gitId":"yicheng-toh"},"content":"    protected String getSymbol(Data data) {","lastModifiedDate":"2023-11-04"},{"lineNumber":147,"author":{"gitId":"yicheng-toh"},"content":"        if (isAchieved(data)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":148,"author":{"gitId":"yicheng-toh"},"content":"            return \"[Achieved]\";","lastModifiedDate":"2023-11-04"},{"lineNumber":149,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":150,"author":{"gitId":"yicheng-toh"},"content":"        return \"\";","lastModifiedDate":"2023-11-04"},{"lineNumber":151,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":152,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":153,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"nihalzp"},"content":"     * Returns the string representation of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"yicheng-toh"},"content":"     * @param data A storage class to retrieve diet information.","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"nihalzp"},"content":"     * @return The string representation of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":159,"author":{"gitId":"yicheng-toh"},"content":"    public String toString(Data data) {","lastModifiedDate":"2023-10-29"},{"lineNumber":160,"author":{"gitId":"yicheng-toh"},"content":"        return getSymbol(data) + \" \" + getTimeSpan().name() + \" \" + nutrient","lastModifiedDate":"2023-11-04"},{"lineNumber":161,"author":{"gitId":"yicheng-toh"},"content":"                + \" intake progress: (\" + getCurrentValue(data) + \"/\"","lastModifiedDate":"2023-11-04"},{"lineNumber":162,"author":{"gitId":"yicheng-toh"},"content":"                + targetValue + \")\\n\";","lastModifiedDate":"2023-11-04"},{"lineNumber":163,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":4,"yicheng-toh":95,"nihalzp":65}},{"path":"src/main/java/athleticli/data/diet/DietGoalList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.diet;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Goal;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.StorableList;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"import static athleticli.common.Config.PATH_DIET_GOAL;","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":" * Represents a list of diet goals.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"public class DietGoalList extends StorableList\u003cDietGoal\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"     * Constructs a diet goal list.","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"    public DietGoalList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"        super(PATH_DIET_GOAL);","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"     * Returns a string representation of the diet goal list.","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"     * @param data A storage class to retrieve diet information.","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"     * @return A string representation of the diet goal list.","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"    public String toString(Data data) {","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"            result.append(\"\\t\").append(i + 1).append(\". \").append(get(i).toString(data));","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"            if (i !\u003d size() - 1) {","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"                result.append(\"\\n\");","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"        return result.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"skylee03"},"content":"     * Parses a diet goal from a string.","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"skylee03"},"content":"     * @param s The string to be parsed.","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"skylee03"},"content":"     * @return The diet goal parsed from the string.","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"yicheng-toh"},"content":"    public DietGoal parse(String s) throws AthletiException {","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"yicheng-toh"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"yicheng-toh"},"content":"            String[] dietGoalDetails \u003d s.split(\"\\\\s+\");","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"yicheng-toh"},"content":"            System.out.println(dietGoalDetails);","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"yicheng-toh"},"content":"            String dietGoalTimeSpanString \u003d dietGoalDetails[1];","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"yicheng-toh"},"content":"            String dietGoalNutrientString \u003d dietGoalDetails[2];","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"yicheng-toh"},"content":"            String dietGoalTargetValueString \u003d dietGoalDetails[3];","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"yicheng-toh"},"content":"            String dietGoalType \u003d dietGoalDetails[4];","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"yicheng-toh"},"content":"            int dietGoalTargetValue \u003d Integer.parseInt(dietGoalTargetValueString);","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"yicheng-toh"},"content":"            if (dietGoalType.toLowerCase().equals(\"healthy\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"yicheng-toh"},"content":"                return new HealthyDietGoal(Goal.TimeSpan.valueOf(dietGoalTimeSpanString.toUpperCase()),","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"yicheng-toh"},"content":"                        dietGoalNutrientString, dietGoalTargetValue);","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"yicheng-toh"},"content":"            } else if (dietGoalType.toLowerCase().equals(\"unhealthy\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"yicheng-toh"},"content":"                return new UnhealthyDietGoal(Goal.TimeSpan.valueOf(dietGoalTimeSpanString.toUpperCase()),","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"yicheng-toh"},"content":"                        dietGoalNutrientString, dietGoalTargetValue);","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"yicheng-toh"},"content":"            } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"yicheng-toh"},"content":"                throw new AthletiException(Message.MESSAGE_DIET_GOAL_LOAD_ERROR);","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"yicheng-toh"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"yicheng-toh"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"yicheng-toh"},"content":"            throw new AthletiException(Message.MESSAGE_DIET_GOAL_LOAD_ERROR);","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"skylee03"},"content":"     * Unparses a diet goal to a string.","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"skylee03"},"content":"     * @param dietGoal The diet goal to be parsed.","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"skylee03"},"content":"     * @return The string unparsed from the diet goal.","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"skylee03"},"content":"    public String unparse(DietGoal dietGoal) {","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"yicheng-toh"},"content":"        /*","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"yicheng-toh"},"content":"         * diet goal has nutrient, target value, date. there rest are calculated on the spot.","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"yicheng-toh"},"content":"         * */","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"yicheng-toh"},"content":"        return \"dietGoal \" + dietGoal.getTimeSpan() + \" \" + dietGoal.getNutrient()","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"yicheng-toh"},"content":"                + \" \" + dietGoal.getTargetValue() + \" \" + dietGoal.getType() + \"\\n\";","lastModifiedDate":"2023-11-05"},{"lineNumber":84,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":25,"yicheng-toh":38,"nihalzp":23}},{"path":"src/main/java/athleticli/data/diet/DietList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.diet;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.Findable;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import athleticli.data.StorableList;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import athleticli.parser.Parameter;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"import athleticli.parser.DietParser;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"import static athleticli.common.Config.PATH_DIET;","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":" * Represents a list of diets.","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"public class DietList extends StorableList\u003cDiet\u003e implements Findable {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"     * Constructs a diet list.","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"    public DietList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"        super(PATH_DIET);","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"     * Returns a string representation of the diet list.","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"     * @return A string representation of the diet list.","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"            result.append(i + 1).append(\". \").append(get(i).toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"            if (i !\u003d size() - 1) {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"                result.append(\"\\n\");","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"        return result.toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"skylee03"},"content":"     * Returns a list of diets matching the date.","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"skylee03"},"content":"     * @param date The date to be matched.","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"skylee03"},"content":"     * @return A list of diets matching the date.","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"yicheng-toh"},"content":"    public ArrayList\u003cDiet\u003e find(LocalDate date) {","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"yicheng-toh"},"content":"        ArrayList\u003cDiet\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"nihalzp"},"content":"        for (Diet diet : this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"nihalzp"},"content":"            if (diet.getDateTime().toLocalDate().equals(date)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"nihalzp"},"content":"                result.add(diet);","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"nihalzp"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"nihalzp"},"content":"        return result;","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"skylee03"},"content":"     * Parses a diet from a string.","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"skylee03"},"content":"     * @param s The string to be parsed.","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"skylee03"},"content":"     * @return The diet parsed from the string.","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"nihalzp"},"content":"    public Diet parse(String s) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"        return DietParser.parseDiet(s);","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"skylee03"},"content":"     * Unparses a diet to a string.","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"skylee03"},"content":"     * @param diet The diet to be parsed.","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"skylee03"},"content":"     * @return The string unparsed from the diet.","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"skylee03"},"content":"    public String unparse(Diet diet) {","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"nihalzp"},"content":"        String commandArgs \u003d \"\";","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"nihalzp"},"content":"        commandArgs +\u003d Parameter.CALORIES_SEPARATOR + diet.getCalories();","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"nihalzp"},"content":"        commandArgs +\u003d \" \" + Parameter.PROTEIN_SEPARATOR + diet.getProtein();","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"nihalzp"},"content":"        commandArgs +\u003d \" \" + Parameter.CARB_SEPARATOR + diet.getCarb();","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"nihalzp"},"content":"        commandArgs +\u003d \" \" + Parameter.FAT_SEPARATOR + diet.getFat();","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"nihalzp"},"content":"        commandArgs +\u003d \" \" + Parameter.DATETIME_SEPARATOR + diet.getDateTime();","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"nihalzp"},"content":"        return commandArgs;","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":38,"AlWo223":3,"yicheng-toh":2,"nihalzp":44}},{"path":"src/main/java/athleticli/data/diet/HealthyDietGoal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yicheng-toh"},"content":"package athleticli.data.diet;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":" * HealthyDietGoal tracks nutrients goal that the user wants to increase his/her intake on.","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"public class HealthyDietGoal extends DietGoal {","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"    public static final String TYPE \u003d \"healthy\";","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"    private final boolean isHealthy;","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"     * Constructs a diet goal with no current value.","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"     * @param timeSpan    The timespan of the diet goal.","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"     * @param nutrient    The nutrients of the diet goal.","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"yicheng-toh"},"content":"     * @param targetValue The target value of the diet goal.","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":"    public HealthyDietGoal(TimeSpan timeSpan, String nutrient, int targetValue) {","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"yicheng-toh"},"content":"        super(timeSpan, nutrient, targetValue);","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"yicheng-toh"},"content":"        isHealthy \u003d true;","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"     * Returns the type of diet goal of this class.","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"yicheng-toh"},"content":"     *","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"     * @return the type of diet goal.","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"    @Override","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"    public String getType() {","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"        return TYPE;","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"yicheng-toh"},"content":"     * Returns the string representation of healthy diet goal.","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"yicheng-toh"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"yicheng-toh"},"content":"     * @param data A storage class to retrieve diet information.","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"yicheng-toh"},"content":"     * @return The string representation of the healthy diet goal.","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"yicheng-toh"},"content":"    @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"yicheng-toh"},"content":"    public String toString(Data data) {","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"yicheng-toh"},"content":"        return \"[HEALTHY] \" + super.toString(data);","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"yicheng-toh":46}},{"path":"src/main/java/athleticli/data/diet/UnhealthyDietGoal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yicheng-toh"},"content":"package athleticli.data.diet;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":" * UnhealthyDietGoal tracks nutrients goal that the user wants to reduce his/her intake on.","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"public class UnhealthyDietGoal extends DietGoal {","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"    public static final String TYPE \u003d \"unhealthy\";","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"    private final boolean isHealthy;","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"     * Constructs a diet goal with no current value.","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"     * @param timeSpan    The timespan of the diet goal.","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"     * @param nutrient    The nutrients of the diet goal.","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"yicheng-toh"},"content":"     * @param targetValue The target value of the diet goal.","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":"    public UnhealthyDietGoal(TimeSpan timeSpan, String nutrient, int targetValue) {","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"yicheng-toh"},"content":"        super(timeSpan, nutrient, targetValue);","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"yicheng-toh"},"content":"        isHealthy \u003d false;","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"    @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"    public boolean isAchieved(Data data) {","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"yicheng-toh"},"content":"        int currentValue \u003d getCurrentValue(data);","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"        return currentValue \u003c\u003d targetValue;","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"     * Returns the type of diet goal of this class.","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"     *","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"yicheng-toh"},"content":"     * @return the type of diet goal.","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"yicheng-toh"},"content":"    @Override","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"yicheng-toh"},"content":"    public String getType() {","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"yicheng-toh"},"content":"        return TYPE;","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"yicheng-toh"},"content":"     * Returns string indicator to indicate if unhealthy goal has its limit reached.","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"yicheng-toh"},"content":"     *","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"yicheng-toh"},"content":"     * @param data A storage class to retrieve diet information.","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"yicheng-toh"},"content":"     * @return String indicator if the goal is not achieved.","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"yicheng-toh"},"content":"    protected String getSymbol(Data data) {","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"yicheng-toh"},"content":"        if (isAchieved(data)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"yicheng-toh"},"content":"            return \"\";","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"yicheng-toh"},"content":"        return \"[Not Achieved]\";","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"yicheng-toh"},"content":"     * Returns the string representation of the unhealthy diet goal.","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"yicheng-toh"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"yicheng-toh"},"content":"     * @param data A storage class to retrieve diet information.","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"yicheng-toh"},"content":"     * @return The string representation of the unhealthy diet goal.","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"yicheng-toh"},"content":"    @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"yicheng-toh"},"content":"    public String toString(Data data) {","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"yicheng-toh"},"content":"        return \"[UNHEALTHY] \" + super.toString(data);","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"yicheng-toh":64}},{"path":"src/main/java/athleticli/data/sleep/Sleep.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.sleep;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import java.time.Duration;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"import static athleticli.common.Config.DATE_TIME_FORMATTER;","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"import static athleticli.common.Config.DATE_FORMATTER;","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":" * Represents a sleep record.","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"public class Sleep {","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    private final LocalDateTime startDateTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"    private final LocalDateTime toDateTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"    private LocalTime sleepingDuration;","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"    private final LocalDate sleepDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"     * Generates a new sleep record with some basic stats.","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"     * @param startDateTime Start time of the sleep.","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"     * @param toDateTime    End time of the sleep.","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"    public Sleep(LocalDateTime startDateTime, LocalDateTime toDateTime) {","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"        this.sleepingDuration \u003d calculateSleepingDuration();","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"        this.sleepDate \u003d calculateSleepDate();","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"        return startDateTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"    public LocalDateTime getToDateTime() {","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"        return toDateTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"    public LocalDate getSleepDate() {","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"        return sleepDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"    public LocalTime getSleepingTime() {","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"        return sleepingDuration;","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"     * Calculate the sleeping duration based on start and end time.","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"     * Factor in the possibility of sleeping past midnight.","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"     * @return sleeping duration.","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"    private LocalTime calculateSleepingDuration() {","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"        Duration duration \u003d Duration.between(startDateTime, toDateTime);","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"DaDevChia"},"content":"        long seconds \u003d duration.getSeconds();","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"DaDevChia"},"content":"        return LocalTime.ofSecondOfDay(seconds);","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"DaDevChia"},"content":"     * Calculate the sleep date based on start time.","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"DaDevChia"},"content":"     * Factor in the possibility of sleeping past midnight.","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"DaDevChia"},"content":"     * We are assuming that the user sleeps before 6am even if the user sleeps past midnight.","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"DaDevChia"},"content":"     * @return sleep date.","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"DaDevChia"},"content":"    private LocalDate calculateSleepDate() {","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"DaDevChia"},"content":"        if (startDateTime.getHour() \u003c 6) {","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"DaDevChia"},"content":"            return startDateTime.toLocalDate().minusDays(1);","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"DaDevChia"},"content":"        } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"DaDevChia"},"content":"            return startDateTime.toLocalDate();","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"DaDevChia"},"content":"     * Returns a single line summary of the sleep record.","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"DaDevChia"},"content":"     * @return String representation of the sleep record.","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"DaDevChia"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"DaDevChia"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"DaDevChia"},"content":"        String sleepingDurationOutput \u003d generateSleepingDurationStringOutput();","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"DaDevChia"},"content":"        String startDateTimeOutput \u003d generateStartDateTimeStringOutput();","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"DaDevChia"},"content":"        String toDateTimeOutput \u003d generateToDateTimeStringOutput();","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"DaDevChia"},"content":"        String sleepDateOutput \u003d generateSleepDateStringOutput();","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"DaDevChia"},"content":"        return \"[Sleep]\" + \" | \" + sleepDateOutput + \" | \" + startDateTimeOutput +","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"DaDevChia"},"content":"            \" | \" + toDateTimeOutput + \" | \" + sleepingDurationOutput;","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"DaDevChia"},"content":"    public String generateSleepingDurationStringOutput() {","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"DaDevChia"},"content":"        String sleepingDurationOutput \u003d \"\";","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"DaDevChia"},"content":"        if (sleepingDuration.getHour() !\u003d 0) {","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"DaDevChia"},"content":"            sleepingDurationOutput +\u003d sleepingDuration.getHour() + \" Hours \";","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"DaDevChia"},"content":"        if (sleepingDuration.getMinute() !\u003d 0) {","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"DaDevChia"},"content":"            sleepingDurationOutput +\u003d sleepingDuration.getMinute() + \" Minutes\";","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"DaDevChia"},"content":"        return \"Sleeping Duration: \" + sleepingDurationOutput;","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"DaDevChia"},"content":"    public String generateStartDateTimeStringOutput() {","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"DaDevChia"},"content":"        return \"Start Time: \" + startDateTime.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"DaDevChia"},"content":"    public String generateToDateTimeStringOutput() {","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"DaDevChia"},"content":"        return \"End Time: \" + toDateTime.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"DaDevChia"},"content":"    public String generateSleepDateStringOutput() {","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"DaDevChia"},"content":"        return \"Date: \" + sleepDate.format(DATE_FORMATTER);","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":3,"DaDevChia":107,"nihalzp":3}},{"path":"src/main/java/athleticli/data/sleep/SleepGoal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":" * To be implemented in future version of AthletiCLI.","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"package athleticli.data.sleep;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"public class SleepGoal {","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":4,"DaDevChia":4}},{"path":"src/main/java/athleticli/data/sleep/SleepGoalList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":" * To be implemented in future version of AthletiCLI.","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"package athleticli.data.sleep;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import static athleticli.common.Config.PATH_SLEEP_GOAL;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"import athleticli.data.StorableList;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"public class SleepGoalList extends StorableList\u003cSleepGoal\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"     * Constructs a sleep goal list.","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"    public SleepGoalList() {","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"        super(PATH_SLEEP_GOAL);","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"     * Parses a sleep goal from a string.","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"     * @param s The string to be parsed.","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"     * @return The sleep goal parsed from the string.","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"    public SleepGoal parse(String s) {","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"        // TODO","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"        return null;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"     * Unparses a sleep goal to a string.","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"     * @param sleepGoal The sleep goal to be parsed.","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"     * @return The string unparsed from the sleep goal.","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"skylee03"},"content":"    public String unparse(SleepGoal sleepGoal) {","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"skylee03"},"content":"        // TODO","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"skylee03"},"content":"        return null;","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":37,"DaDevChia":3,"nihalzp":1}},{"path":"src/main/java/athleticli/data/sleep/SleepList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.sleep;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import static athleticli.common.Config.PATH_SLEEP;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"import athleticli.data.Findable;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"import athleticli.data.StorableList;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.Goal;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":" * Represents a list of sleep records.","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"public class SleepList extends StorableList\u003cSleep\u003e implements Findable\u003cSleep\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"     * Constructs a sleep list with its storage path.","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"    public SleepList() {","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"        super(PATH_SLEEP);","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"     * Returns a list of sleeps matching the date.","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"     * @param date The date to be matched.","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"     * @return A list of sleeps matching the date.","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"    public ArrayList\u003cSleep\u003e find(LocalDate date) {","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"        ArrayList\u003cSleep\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"        for (Sleep sleep : this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"            if (sleep.getStartDateTime().toLocalDate().equals(date)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"                result.add(sleep);","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"        return result;","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"     * Sorts the sleep entries in the list by date.","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"    public void sort() {","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"        this.sort(Comparator.comparing(Sleep::getToDateTime).reversed());","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"     * Returns a list of sleeps within the time span.","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"     * @param timeSpan The time span to be matched.","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"     * @return A list of sleeps within the time span.","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"    public ArrayList\u003cSleep\u003e filterByTimespan(Goal.TimeSpan timeSpan) {","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"        ArrayList\u003cSleep\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"        for (Sleep sleep : this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"DaDevChia"},"content":"            LocalDate sleepDate \u003d sleep.getStartDateTime().toLocalDate();","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"DaDevChia"},"content":"            if (Goal.checkDate(sleepDate, timeSpan)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"DaDevChia"},"content":"                result.add(sleep);","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"DaDevChia"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"DaDevChia"},"content":"        return result;","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"DaDevChia"},"content":"     * Returns the average sleep duration of the sleep list.","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"DaDevChia"},"content":"     * @param sleepClass The class of the sleep.","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"DaDevChia"},"content":"     * @param timeSpan The time span to be matched.","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"DaDevChia"},"content":"     * @return The average sleep duration of the sleep list in seconds.","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"DaDevChia"},"content":"    public int getTotalSleepDuration(Class\u003c?\u003e sleepClass, Goal.TimeSpan timeSpan) {","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"DaDevChia"},"content":"        ArrayList\u003cSleep\u003e filteredSleepList \u003d filterByTimespan(timeSpan);","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"DaDevChia"},"content":"        int totalSleepDuration \u003d 0;","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"DaDevChia"},"content":"        for (Sleep sleep : filteredSleepList) {","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"DaDevChia"},"content":"            LocalTime sleepDuration \u003d sleep.getSleepingTime();","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"DaDevChia"},"content":"            totalSleepDuration +\u003d sleepDuration.toSecondOfDay();","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"DaDevChia"},"content":"        return totalSleepDuration;","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"skylee03"},"content":"     * Parses a sleep from a string.","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"skylee03"},"content":"     * @param s The string to be parsed.","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"skylee03"},"content":"     * @return The sleep parsed from the string.","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"skylee03"},"content":"    public Sleep parse(String s) {","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"skylee03"},"content":"        // TODO","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"skylee03"},"content":"        return null;","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"skylee03"},"content":"     * Unparses a sleep to a string.","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"skylee03"},"content":"     * @param sleep The sleep to be parsed.","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"skylee03"},"content":"     * @return The string unparsed from the sleep.","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"skylee03"},"content":"    public String unparse(Sleep sleep) {","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"skylee03"},"content":"        // TODO","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"skylee03"},"content":"        return null;","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":49,"DaDevChia":55,"yicheng-toh":1,"nihalzp":1}},{"path":"src/main/java/athleticli/exceptions/AthletiException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.exceptions;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":" * Represents the exceptions that need to be shown to the user.","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"public class AthletiException extends Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"    public AthletiException(String message) {","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"        super(message);","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":10}},{"path":"src/main/java/athleticli/exceptions/WrappedAthletiException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.exceptions;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":" * Wraps an \u003ccode\u003eAthletiException\u003c/code\u003e in \u003ccode\u003eRuntimeExcpetion\u003c/code\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":" * so that it can be thrown from inside a stream.","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"public class WrappedAthletiException extends RuntimeException {","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"    private AthletiException cause;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"    public WrappedAthletiException(AthletiException cause) {","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"        this.cause \u003d cause;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"    public AthletiException getCause() {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"        return cause;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"skylee03":18}},{"path":"src/main/java/athleticli/exceptions/WrappedIOException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.exceptions;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":" * Wraps an \u003ccode\u003eIOException\u003c/code\u003e in \u003ccode\u003eRuntimeExcpetion\u003c/code\u003e so that it can be thrown from inside a stream.","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"public class WrappedIOException extends RuntimeException {","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"    private IOException cause;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"    public WrappedIOException(IOException cause) {","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"        this.cause \u003d cause;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"    public IOException getCause() {","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"        return cause;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"skylee03":19}},{"path":"src/main/java/athleticli/parser/ActivityParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import athleticli.data.Goal;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Activity;","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.ActivityChanges;","lastModifiedDate":"2023-11-05"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.ActivityGoal;","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Cycle;","lastModifiedDate":"2023-11-05"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Run;","lastModifiedDate":"2023-11-05"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Swim;","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"public class ActivityParser {","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    //@@author  AlWo223","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"     * Parses the index of an activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"     * @param commandArgs The raw user input containing the index.","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"     * @return index                The parsed Integer index.","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the input is not an integer.","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"    public static int parseActivityIndex(String commandArgs) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"        final String commandArgsTrimmed \u003d commandArgs.trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"        if (commandArgsTrimmed.isEmpty()) {","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ACTIVITY_INDEX_EMPTY);","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"        int index;","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"            index \u003d Integer.parseInt(commandArgsTrimmed);","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ACTIVITY_INDEX_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"        return index;","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"     * Parses the provided updated activity for the edit command.","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"     * @param arguments             The raw user input containing the updated activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"     * @return activity             The parsed Activity object.","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException     If the input format is invalid.","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"    public static ActivityChanges parseActivityEdit(String arguments) throws AthletiException {","lastModifiedDate":"2023-11-05"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"            String activityArguments \u003d arguments.split(\"(?\u003c\u003d\\\\d)(?\u003d\\\\D)\", 2)[1];","lastModifiedDate":"2023-11-05"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"            return parseActivityChanges(activityArguments);","lastModifiedDate":"2023-11-05"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ACTIVITY_EDIT_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"     * Parses the provided swim arguments of the edit command.","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"     * @param arguments         The raw user input containing the updated swim.","lastModifiedDate":"2023-11-05"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"     * @return activityChanges  The parsed ActivityChanges object.","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the input format is invalid.","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"    public static ActivityChanges parseSwimChanges(String arguments) throws AthletiException {","lastModifiedDate":"2023-11-05"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"        ActivityChanges activityChanges \u003d new ActivityChanges();","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"        parseChangeArguments(activityChanges, arguments,","lastModifiedDate":"2023-11-05"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"                Parameter.CAPTION_SEPARATOR,","lastModifiedDate":"2023-11-05"},{"lineNumber":67,"author":{"gitId":"AlWo223"},"content":"                Parameter.DURATION_SEPARATOR,","lastModifiedDate":"2023-11-05"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"                Parameter.DISTANCE_SEPARATOR,","lastModifiedDate":"2023-11-05"},{"lineNumber":69,"author":{"gitId":"AlWo223"},"content":"                Parameter.DATETIME_SEPARATOR,","lastModifiedDate":"2023-11-05"},{"lineNumber":70,"author":{"gitId":"AlWo223"},"content":"                Parameter.SWIMMING_STYLE_SEPARATOR);","lastModifiedDate":"2023-11-05"},{"lineNumber":71,"author":{"gitId":"AlWo223"},"content":"        return activityChanges;","lastModifiedDate":"2023-11-05"},{"lineNumber":72,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":73,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":74,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-05"},{"lineNumber":75,"author":{"gitId":"AlWo223"},"content":"     * Parses the provided run or cycle arguments of the edit command.","lastModifiedDate":"2023-11-05"},{"lineNumber":76,"author":{"gitId":"AlWo223"},"content":"     * @param arguments         The raw user input containing the updated run or cycle.","lastModifiedDate":"2023-11-05"},{"lineNumber":77,"author":{"gitId":"AlWo223"},"content":"     * @return activityChanges  The parsed ActivityChanges object.","lastModifiedDate":"2023-11-05"},{"lineNumber":78,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the input format is invalid.","lastModifiedDate":"2023-11-05"},{"lineNumber":79,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-05"},{"lineNumber":80,"author":{"gitId":"AlWo223"},"content":"    public static ActivityChanges parseRunCycleChanges(String arguments) throws AthletiException {","lastModifiedDate":"2023-11-05"},{"lineNumber":81,"author":{"gitId":"AlWo223"},"content":"        ActivityChanges activityChanges \u003d new ActivityChanges();","lastModifiedDate":"2023-11-05"},{"lineNumber":82,"author":{"gitId":"AlWo223"},"content":"        parseChangeArguments(activityChanges, arguments,","lastModifiedDate":"2023-11-05"},{"lineNumber":83,"author":{"gitId":"AlWo223"},"content":"                Parameter.CAPTION_SEPARATOR,","lastModifiedDate":"2023-11-05"},{"lineNumber":84,"author":{"gitId":"AlWo223"},"content":"                Parameter.DURATION_SEPARATOR,","lastModifiedDate":"2023-11-05"},{"lineNumber":85,"author":{"gitId":"AlWo223"},"content":"                Parameter.DISTANCE_SEPARATOR,","lastModifiedDate":"2023-11-05"},{"lineNumber":86,"author":{"gitId":"AlWo223"},"content":"                Parameter.DATETIME_SEPARATOR,","lastModifiedDate":"2023-11-05"},{"lineNumber":87,"author":{"gitId":"AlWo223"},"content":"                Parameter.ELEVATION_SEPARATOR);","lastModifiedDate":"2023-11-05"},{"lineNumber":88,"author":{"gitId":"AlWo223"},"content":"        return activityChanges;","lastModifiedDate":"2023-11-05"},{"lineNumber":89,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"AlWo223"},"content":"     * Parses the provided activity arguments of the edit command.","lastModifiedDate":"2023-11-05"},{"lineNumber":93,"author":{"gitId":"AlWo223"},"content":"     * @param arguments         The raw user input containing the updated activity.","lastModifiedDate":"2023-11-05"},{"lineNumber":94,"author":{"gitId":"AlWo223"},"content":"     * @return activityChanges  The parsed ActivityChanges object.","lastModifiedDate":"2023-11-05"},{"lineNumber":95,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the input format is invalid.","lastModifiedDate":"2023-11-05"},{"lineNumber":96,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-05"},{"lineNumber":97,"author":{"gitId":"AlWo223"},"content":"    public static ActivityChanges parseActivityChanges(String arguments) throws AthletiException {","lastModifiedDate":"2023-11-05"},{"lineNumber":98,"author":{"gitId":"AlWo223"},"content":"        ActivityChanges activityChanges \u003d new ActivityChanges();","lastModifiedDate":"2023-11-05"},{"lineNumber":99,"author":{"gitId":"AlWo223"},"content":"        parseChangeArguments(activityChanges, arguments,","lastModifiedDate":"2023-11-05"},{"lineNumber":100,"author":{"gitId":"AlWo223"},"content":"                Parameter.CAPTION_SEPARATOR,","lastModifiedDate":"2023-11-05"},{"lineNumber":101,"author":{"gitId":"AlWo223"},"content":"                Parameter.DURATION_SEPARATOR,","lastModifiedDate":"2023-11-05"},{"lineNumber":102,"author":{"gitId":"AlWo223"},"content":"                Parameter.DISTANCE_SEPARATOR,","lastModifiedDate":"2023-11-05"},{"lineNumber":103,"author":{"gitId":"AlWo223"},"content":"                Parameter.DATETIME_SEPARATOR);","lastModifiedDate":"2023-11-05"},{"lineNumber":104,"author":{"gitId":"AlWo223"},"content":"        return activityChanges;","lastModifiedDate":"2023-11-05"},{"lineNumber":105,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":106,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":107,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-05"},{"lineNumber":108,"author":{"gitId":"AlWo223"},"content":"     * Parses the provided arguments based on the list of separators","lastModifiedDate":"2023-11-05"},{"lineNumber":109,"author":{"gitId":"AlWo223"},"content":"     * @param activityChanges       The ActivityChanges object which contains the updates.","lastModifiedDate":"2023-11-05"},{"lineNumber":110,"author":{"gitId":"AlWo223"},"content":"     * @param arguments             The raw user arguments containing the updated parameters.","lastModifiedDate":"2023-11-05"},{"lineNumber":111,"author":{"gitId":"AlWo223"},"content":"     * @param separators            The list of separators to be used.","lastModifiedDate":"2023-11-05"},{"lineNumber":112,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException     If the input format is invalid.","lastModifiedDate":"2023-11-05"},{"lineNumber":113,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-05"},{"lineNumber":114,"author":{"gitId":"AlWo223"},"content":"    private static void parseChangeArguments(ActivityChanges activityChanges, String arguments, String... separators)","lastModifiedDate":"2023-11-05"},{"lineNumber":115,"author":{"gitId":"AlWo223"},"content":"            throws AthletiException {","lastModifiedDate":"2023-11-05"},{"lineNumber":116,"author":{"gitId":"AlWo223"},"content":"        int numChanges \u003d 0;","lastModifiedDate":"2023-11-05"},{"lineNumber":117,"author":{"gitId":"AlWo223"},"content":"        int previousIndex \u003d -1;","lastModifiedDate":"2023-11-05"},{"lineNumber":118,"author":{"gitId":"AlWo223"},"content":"        for (int i \u003d 0; i \u003c separators.length; i++) {","lastModifiedDate":"2023-11-05"},{"lineNumber":119,"author":{"gitId":"AlWo223"},"content":"            String separator \u003d separators[i];","lastModifiedDate":"2023-11-05"},{"lineNumber":120,"author":{"gitId":"AlWo223"},"content":"            int startIndex \u003d arguments.indexOf(separator);","lastModifiedDate":"2023-11-05"},{"lineNumber":121,"author":{"gitId":"AlWo223"},"content":"            if (startIndex !\u003d -1) {","lastModifiedDate":"2023-11-05"},{"lineNumber":122,"author":{"gitId":"AlWo223"},"content":"                if (previousIndex \u003e startIndex) {","lastModifiedDate":"2023-11-05"},{"lineNumber":123,"author":{"gitId":"AlWo223"},"content":"                    throw new AthletiException(Message.MESSAGE_ACTIVITY_ORDER_INVALID);","lastModifiedDate":"2023-11-05"},{"lineNumber":124,"author":{"gitId":"AlWo223"},"content":"                }","lastModifiedDate":"2023-11-05"},{"lineNumber":125,"author":{"gitId":"AlWo223"},"content":"                previousIndex \u003d startIndex;","lastModifiedDate":"2023-11-05"},{"lineNumber":126,"author":{"gitId":"AlWo223"},"content":"                int endIndex \u003d arguments.length();","lastModifiedDate":"2023-11-05"},{"lineNumber":127,"author":{"gitId":"AlWo223"},"content":"                for (int j \u003d i + 1; j \u003c separators.length; j++) {","lastModifiedDate":"2023-11-05"},{"lineNumber":128,"author":{"gitId":"AlWo223"},"content":"                    if (i !\u003d j) {","lastModifiedDate":"2023-11-05"},{"lineNumber":129,"author":{"gitId":"AlWo223"},"content":"                        int nextIndex \u003d arguments.indexOf(separators[j], startIndex + separator.length());","lastModifiedDate":"2023-11-05"},{"lineNumber":130,"author":{"gitId":"AlWo223"},"content":"                        if (nextIndex !\u003d -1) {","lastModifiedDate":"2023-11-05"},{"lineNumber":131,"author":{"gitId":"AlWo223"},"content":"                            endIndex \u003d nextIndex;","lastModifiedDate":"2023-11-05"},{"lineNumber":132,"author":{"gitId":"AlWo223"},"content":"                            break;","lastModifiedDate":"2023-11-05"},{"lineNumber":133,"author":{"gitId":"AlWo223"},"content":"                        }","lastModifiedDate":"2023-11-05"},{"lineNumber":134,"author":{"gitId":"AlWo223"},"content":"                    }","lastModifiedDate":"2023-11-05"},{"lineNumber":135,"author":{"gitId":"AlWo223"},"content":"                }","lastModifiedDate":"2023-11-05"},{"lineNumber":136,"author":{"gitId":"AlWo223"},"content":"                String segment \u003d arguments.substring(startIndex + separator.length(), endIndex).trim();","lastModifiedDate":"2023-11-05"},{"lineNumber":137,"author":{"gitId":"AlWo223"},"content":"                parseSegment(activityChanges, segment, separator);","lastModifiedDate":"2023-11-05"},{"lineNumber":138,"author":{"gitId":"AlWo223"},"content":"                numChanges++;","lastModifiedDate":"2023-11-05"},{"lineNumber":139,"author":{"gitId":"AlWo223"},"content":"            }","lastModifiedDate":"2023-11-05"},{"lineNumber":140,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":141,"author":{"gitId":"AlWo223"},"content":"        if (numChanges \u003d\u003d 0) {","lastModifiedDate":"2023-11-05"},{"lineNumber":142,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ACTIVITY_EDIT_EMPTY);","lastModifiedDate":"2023-11-05"},{"lineNumber":143,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":144,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":145,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":146,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-05"},{"lineNumber":147,"author":{"gitId":"AlWo223"},"content":"     * General method to parse a segment of the activity changes.","lastModifiedDate":"2023-11-05"},{"lineNumber":148,"author":{"gitId":"AlWo223"},"content":"     * @param activityChanges   The ActivityChanges object which keeps track of the updates.","lastModifiedDate":"2023-11-05"},{"lineNumber":149,"author":{"gitId":"AlWo223"},"content":"     * @param segment           The segment of the arguments to be parsed.","lastModifiedDate":"2023-11-05"},{"lineNumber":150,"author":{"gitId":"AlWo223"},"content":"     * @param separator         The separator used to identify the segment.","lastModifiedDate":"2023-11-05"},{"lineNumber":151,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the input is invalid or empty.","lastModifiedDate":"2023-11-05"},{"lineNumber":152,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-05"},{"lineNumber":153,"author":{"gitId":"AlWo223"},"content":"    public static void parseSegment(ActivityChanges activityChanges, String segment, String separator)","lastModifiedDate":"2023-11-05"},{"lineNumber":154,"author":{"gitId":"AlWo223"},"content":"            throws AthletiException {","lastModifiedDate":"2023-11-05"},{"lineNumber":155,"author":{"gitId":"AlWo223"},"content":"        switch (separator) {","lastModifiedDate":"2023-11-05"},{"lineNumber":156,"author":{"gitId":"AlWo223"},"content":"        case Parameter.CAPTION_SEPARATOR:","lastModifiedDate":"2023-11-05"},{"lineNumber":157,"author":{"gitId":"AlWo223"},"content":"            checkEmptyCaptionArgument(segment);","lastModifiedDate":"2023-11-05"},{"lineNumber":158,"author":{"gitId":"AlWo223"},"content":"            activityChanges.setCaption(segment);","lastModifiedDate":"2023-11-05"},{"lineNumber":159,"author":{"gitId":"AlWo223"},"content":"            break;","lastModifiedDate":"2023-11-05"},{"lineNumber":160,"author":{"gitId":"AlWo223"},"content":"        case Parameter.DURATION_SEPARATOR:","lastModifiedDate":"2023-11-05"},{"lineNumber":161,"author":{"gitId":"AlWo223"},"content":"            checkEmptyDurationArgument(segment);","lastModifiedDate":"2023-11-05"},{"lineNumber":162,"author":{"gitId":"AlWo223"},"content":"            activityChanges.setDuration(parseDuration(segment));","lastModifiedDate":"2023-11-05"},{"lineNumber":163,"author":{"gitId":"AlWo223"},"content":"            break;","lastModifiedDate":"2023-11-05"},{"lineNumber":164,"author":{"gitId":"AlWo223"},"content":"        case Parameter.DISTANCE_SEPARATOR:","lastModifiedDate":"2023-11-05"},{"lineNumber":165,"author":{"gitId":"AlWo223"},"content":"            checkEmptyDistanceArgument(segment);","lastModifiedDate":"2023-11-05"},{"lineNumber":166,"author":{"gitId":"AlWo223"},"content":"            activityChanges.setDistance(parseDistance(segment));","lastModifiedDate":"2023-11-05"},{"lineNumber":167,"author":{"gitId":"AlWo223"},"content":"            break;","lastModifiedDate":"2023-11-05"},{"lineNumber":168,"author":{"gitId":"AlWo223"},"content":"        case Parameter.DATETIME_SEPARATOR:","lastModifiedDate":"2023-11-05"},{"lineNumber":169,"author":{"gitId":"AlWo223"},"content":"            checkEmptyDateTimeArgument(segment);","lastModifiedDate":"2023-11-05"},{"lineNumber":170,"author":{"gitId":"AlWo223"},"content":"            activityChanges.setStartDateTime(Parser.parseDateTime(segment));","lastModifiedDate":"2023-11-05"},{"lineNumber":171,"author":{"gitId":"AlWo223"},"content":"            break;","lastModifiedDate":"2023-11-05"},{"lineNumber":172,"author":{"gitId":"AlWo223"},"content":"        case Parameter.ELEVATION_SEPARATOR:","lastModifiedDate":"2023-11-05"},{"lineNumber":173,"author":{"gitId":"AlWo223"},"content":"            checkEmptyElevationArgument(segment);","lastModifiedDate":"2023-11-05"},{"lineNumber":174,"author":{"gitId":"AlWo223"},"content":"            activityChanges.setElevation(parseElevation(segment));","lastModifiedDate":"2023-11-05"},{"lineNumber":175,"author":{"gitId":"AlWo223"},"content":"            break;","lastModifiedDate":"2023-11-05"},{"lineNumber":176,"author":{"gitId":"AlWo223"},"content":"        case Parameter.SWIMMING_STYLE_SEPARATOR:","lastModifiedDate":"2023-11-05"},{"lineNumber":177,"author":{"gitId":"AlWo223"},"content":"            checkEmptySwimmingStyleArgument(segment);","lastModifiedDate":"2023-11-05"},{"lineNumber":178,"author":{"gitId":"AlWo223"},"content":"            activityChanges.setSwimmingStyle(parseSwimmingStyle(segment));","lastModifiedDate":"2023-11-05"},{"lineNumber":179,"author":{"gitId":"AlWo223"},"content":"            break;","lastModifiedDate":"2023-11-05"},{"lineNumber":180,"author":{"gitId":"AlWo223"},"content":"        default:","lastModifiedDate":"2023-11-05"},{"lineNumber":181,"author":{"gitId":"AlWo223"},"content":"            assert false: \"Invalid separator detected during parsing of activity changes\";","lastModifiedDate":"2023-11-05"},{"lineNumber":182,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":183,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":184,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":185,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-05"},{"lineNumber":186,"author":{"gitId":"AlWo223"},"content":"     * Parses the provided updated run or cycle for the edit command","lastModifiedDate":"2023-11-05"},{"lineNumber":187,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"AlWo223"},"content":"     * @param arguments             The raw user input containing the updated run or cycle.","lastModifiedDate":"2023-11-05"},{"lineNumber":189,"author":{"gitId":"AlWo223"},"content":"     * @return activity             The parsed run or cycle object.","lastModifiedDate":"2023-11-05"},{"lineNumber":190,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException     If the input format is invalid.","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"AlWo223"},"content":"    public static ActivityChanges parseRunCycleEdit(String arguments) throws AthletiException {","lastModifiedDate":"2023-11-05"},{"lineNumber":193,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"AlWo223"},"content":"            String activityArguments \u003d arguments.split(\" \", 2)[1];","lastModifiedDate":"2023-11-05"},{"lineNumber":195,"author":{"gitId":"AlWo223"},"content":"            return parseRunCycleChanges(activityArguments);","lastModifiedDate":"2023-11-05"},{"lineNumber":196,"author":{"gitId":"AlWo223"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ACTIVITY_EDIT_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":201,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"AlWo223"},"content":"     * Parses the provided update swim for the edit command","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"AlWo223"},"content":"     * @param arguments The raw user input containing the updated swim.","lastModifiedDate":"2023-11-02"},{"lineNumber":205,"author":{"gitId":"AlWo223"},"content":"     * @return activity             The parsed swim object.","lastModifiedDate":"2023-11-02"},{"lineNumber":206,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the input format is invalid.","lastModifiedDate":"2023-11-02"},{"lineNumber":207,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"AlWo223"},"content":"    public static ActivityChanges parseSwimEdit(String arguments) throws AthletiException {","lastModifiedDate":"2023-11-05"},{"lineNumber":209,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":210,"author":{"gitId":"AlWo223"},"content":"            String activityArguments \u003d arguments.split(\" \", 2)[1];","lastModifiedDate":"2023-11-05"},{"lineNumber":211,"author":{"gitId":"AlWo223"},"content":"            return parseSwimChanges(activityArguments);","lastModifiedDate":"2023-11-05"},{"lineNumber":212,"author":{"gitId":"AlWo223"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":213,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ACTIVITY_EDIT_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":215,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":216,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":217,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":218,"author":{"gitId":"AlWo223"},"content":"     * Parses the index of an activity update for the edit command.","lastModifiedDate":"2023-11-02"},{"lineNumber":219,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":220,"author":{"gitId":"AlWo223"},"content":"     * @param arguments The raw user input containing the index.","lastModifiedDate":"2023-11-02"},{"lineNumber":221,"author":{"gitId":"AlWo223"},"content":"     * @return index              The parsed Integer index.","lastModifiedDate":"2023-11-02"},{"lineNumber":222,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the input format is invalid","lastModifiedDate":"2023-11-02"},{"lineNumber":223,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":224,"author":{"gitId":"AlWo223"},"content":"    public static int parseActivityEditIndex(String arguments) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":225,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":226,"author":{"gitId":"AlWo223"},"content":"            return parseActivityIndex(arguments.split(\"(?\u003c\u003d\\\\d)(?\u003d\\\\D)\", 2)[0]);","lastModifiedDate":"2023-11-05"},{"lineNumber":227,"author":{"gitId":"AlWo223"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":228,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ACTIVITY_EDIT_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":229,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":230,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":231,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":233,"author":{"gitId":"AlWo223"},"content":"     * Parses the raw user input for viewing the activity list and returns whether the user wants the detailed","lastModifiedDate":"2023-11-02"},{"lineNumber":234,"author":{"gitId":"AlWo223"},"content":"     * view","lastModifiedDate":"2023-11-02"},{"lineNumber":235,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":236,"author":{"gitId":"AlWo223"},"content":"     * @param commandArgs The raw user input containing the arguments.","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"AlWo223"},"content":"     * @return boolean      Whether the user wants the detailed view.","lastModifiedDate":"2023-11-02"},{"lineNumber":238,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"AlWo223"},"content":"    public static boolean parseActivityListDetail(String commandArgs) {","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"AlWo223"},"content":"        return commandArgs.toLowerCase().contains(Parameter.DETAIL_FLAG);","lastModifiedDate":"2023-11-02"},{"lineNumber":241,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":242,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":243,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":244,"author":{"gitId":"AlWo223"},"content":"     * Parses the raw user input for an activity and returns the corresponding activity object.","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":246,"author":{"gitId":"AlWo223"},"content":"     * @param arguments The raw user input containing the arguments.","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"AlWo223"},"content":"     * @return An object representing the activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the input format is invalid.","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":250,"author":{"gitId":"AlWo223"},"content":"    public static Activity parseActivity(String arguments) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"AlWo223"},"content":"        final int durationIndex \u003d arguments.indexOf(Parameter.DURATION_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":252,"author":{"gitId":"AlWo223"},"content":"        final int distanceIndex \u003d arguments.indexOf(Parameter.DISTANCE_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":253,"author":{"gitId":"AlWo223"},"content":"        final int datetimeIndex \u003d arguments.indexOf(Parameter.DATETIME_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":254,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":255,"author":{"gitId":"AlWo223"},"content":"        checkMissingActivityArguments(durationIndex, distanceIndex, datetimeIndex);","lastModifiedDate":"2023-11-02"},{"lineNumber":256,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"AlWo223"},"content":"        if (durationIndex \u003e distanceIndex || distanceIndex \u003e datetimeIndex) {","lastModifiedDate":"2023-11-05"},{"lineNumber":258,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ACTIVITY_ORDER_INVALID);","lastModifiedDate":"2023-11-05"},{"lineNumber":259,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":260,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":261,"author":{"gitId":"AlWo223"},"content":"        final String caption \u003d arguments.substring(0, durationIndex).trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":262,"author":{"gitId":"AlWo223"},"content":"        final String duration \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":263,"author":{"gitId":"AlWo223"},"content":"                arguments.substring(durationIndex + Parameter.DURATION_SEPARATOR.length(), distanceIndex)","lastModifiedDate":"2023-11-02"},{"lineNumber":264,"author":{"gitId":"AlWo223"},"content":"                        .trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":265,"author":{"gitId":"AlWo223"},"content":"        final String distance \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":266,"author":{"gitId":"AlWo223"},"content":"                arguments.substring(distanceIndex + Parameter.DISTANCE_SEPARATOR.length(), datetimeIndex)","lastModifiedDate":"2023-11-02"},{"lineNumber":267,"author":{"gitId":"AlWo223"},"content":"                        .trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":268,"author":{"gitId":"AlWo223"},"content":"        final String datetime \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":269,"author":{"gitId":"AlWo223"},"content":"                arguments.substring(datetimeIndex + Parameter.DATETIME_SEPARATOR.length()).trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":270,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":271,"author":{"gitId":"AlWo223"},"content":"        checkEmptyActivityArguments(caption, duration, distance, datetime);","lastModifiedDate":"2023-11-02"},{"lineNumber":272,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":273,"author":{"gitId":"AlWo223"},"content":"        final LocalTime durationParsed \u003d parseDuration(duration);","lastModifiedDate":"2023-11-02"},{"lineNumber":274,"author":{"gitId":"AlWo223"},"content":"        final int distanceParsed \u003d parseDistance(distance);","lastModifiedDate":"2023-11-02"},{"lineNumber":275,"author":{"gitId":"AlWo223"},"content":"        final LocalDateTime datetimeParsed \u003d Parser.parseDateTime(datetime);","lastModifiedDate":"2023-11-02"},{"lineNumber":276,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":277,"author":{"gitId":"AlWo223"},"content":"        return new Activity(caption, durationParsed, distanceParsed, datetimeParsed);","lastModifiedDate":"2023-11-02"},{"lineNumber":278,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":279,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":280,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":281,"author":{"gitId":"AlWo223"},"content":"     * Parses the raw activity duration input provided by the user.","lastModifiedDate":"2023-11-02"},{"lineNumber":282,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":283,"author":{"gitId":"AlWo223"},"content":"     * @param duration The raw user input containing the duration.","lastModifiedDate":"2023-11-02"},{"lineNumber":284,"author":{"gitId":"AlWo223"},"content":"     * @return durationParsed   The parsed LocalTime duration.","lastModifiedDate":"2023-11-02"},{"lineNumber":285,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the input is not an integer.","lastModifiedDate":"2023-11-02"},{"lineNumber":286,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":287,"author":{"gitId":"AlWo223"},"content":"    public static LocalTime parseDuration(String duration) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":288,"author":{"gitId":"AlWo223"},"content":"        LocalTime durationParsed;","lastModifiedDate":"2023-11-02"},{"lineNumber":289,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":290,"author":{"gitId":"AlWo223"},"content":"            durationParsed \u003d LocalTime.parse(duration);","lastModifiedDate":"2023-11-02"},{"lineNumber":291,"author":{"gitId":"AlWo223"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":292,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_DURATION_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":293,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":294,"author":{"gitId":"AlWo223"},"content":"        return durationParsed;","lastModifiedDate":"2023-11-02"},{"lineNumber":295,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":296,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":297,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":298,"author":{"gitId":"AlWo223"},"content":"     * Parses the raw activity distance input provided by the user.","lastModifiedDate":"2023-11-02"},{"lineNumber":299,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":300,"author":{"gitId":"AlWo223"},"content":"     * @param distance The raw user input containing the distance.","lastModifiedDate":"2023-11-02"},{"lineNumber":301,"author":{"gitId":"AlWo223"},"content":"     * @return distanceParsed       The parsed Integer distance.","lastModifiedDate":"2023-11-02"},{"lineNumber":302,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the input is not an integer.","lastModifiedDate":"2023-11-02"},{"lineNumber":303,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":304,"author":{"gitId":"AlWo223"},"content":"    public static int parseDistance(String distance) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":305,"author":{"gitId":"AlWo223"},"content":"        int distanceParsed;","lastModifiedDate":"2023-11-02"},{"lineNumber":306,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":307,"author":{"gitId":"AlWo223"},"content":"            distanceParsed \u003d Integer.parseInt(distance);","lastModifiedDate":"2023-11-02"},{"lineNumber":308,"author":{"gitId":"AlWo223"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":309,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_DISTANCE_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":310,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":311,"author":{"gitId":"AlWo223"},"content":"        if (distanceParsed \u003c 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":312,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_DISTANCE_NEGATIVE);","lastModifiedDate":"2023-11-02"},{"lineNumber":313,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":314,"author":{"gitId":"AlWo223"},"content":"        return distanceParsed;","lastModifiedDate":"2023-11-02"},{"lineNumber":315,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":316,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":317,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":318,"author":{"gitId":"AlWo223"},"content":"     * Checks if the raw user input is missing any arguments for creating an activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":319,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":320,"author":{"gitId":"AlWo223"},"content":"     * @param durationIndex The position of the duration separator.","lastModifiedDate":"2023-11-02"},{"lineNumber":321,"author":{"gitId":"AlWo223"},"content":"     * @param distanceIndex The position of the distance separator.","lastModifiedDate":"2023-11-02"},{"lineNumber":322,"author":{"gitId":"AlWo223"},"content":"     * @param datetimeIndex The position of the datetime separator.","lastModifiedDate":"2023-11-02"},{"lineNumber":323,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If any of the arguments are missing.","lastModifiedDate":"2023-11-02"},{"lineNumber":324,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":325,"author":{"gitId":"AlWo223"},"content":"    public static void checkMissingActivityArguments(int durationIndex, int distanceIndex,","lastModifiedDate":"2023-11-02"},{"lineNumber":326,"author":{"gitId":"AlWo223"},"content":"                                                     int datetimeIndex) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":327,"author":{"gitId":"AlWo223"},"content":"        if (durationIndex \u003d\u003d -1) {","lastModifiedDate":"2023-11-02"},{"lineNumber":328,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_DURATION_MISSING);","lastModifiedDate":"2023-11-02"},{"lineNumber":329,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":330,"author":{"gitId":"AlWo223"},"content":"        if (distanceIndex \u003d\u003d -1) {","lastModifiedDate":"2023-11-02"},{"lineNumber":331,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_DISTANCE_MISSING);","lastModifiedDate":"2023-11-02"},{"lineNumber":332,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":333,"author":{"gitId":"AlWo223"},"content":"        if (datetimeIndex \u003d\u003d -1) {","lastModifiedDate":"2023-11-02"},{"lineNumber":334,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_DATETIME_MISSING);","lastModifiedDate":"2023-11-02"},{"lineNumber":335,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":336,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":337,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":338,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":339,"author":{"gitId":"AlWo223"},"content":"     * Parses the raw user input for a run or cycle and returns the corresponding activity object.","lastModifiedDate":"2023-11-02"},{"lineNumber":340,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":341,"author":{"gitId":"AlWo223"},"content":"     * @param arguments The raw user input containing the arguments.","lastModifiedDate":"2023-11-02"},{"lineNumber":342,"author":{"gitId":"AlWo223"},"content":"     * @return An object representing the activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":343,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the input format is invalid.","lastModifiedDate":"2023-11-02"},{"lineNumber":344,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":345,"author":{"gitId":"AlWo223"},"content":"    public static Activity parseRunCycle(String arguments, boolean isRun) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":346,"author":{"gitId":"AlWo223"},"content":"        final int durationIndex \u003d arguments.indexOf(Parameter.DURATION_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":347,"author":{"gitId":"AlWo223"},"content":"        final int distanceIndex \u003d arguments.indexOf(Parameter.DISTANCE_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":348,"author":{"gitId":"AlWo223"},"content":"        final int datetimeIndex \u003d arguments.indexOf(Parameter.DATETIME_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":349,"author":{"gitId":"AlWo223"},"content":"        final int elevationIndex \u003d arguments.indexOf(Parameter.ELEVATION_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":350,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":351,"author":{"gitId":"AlWo223"},"content":"        checkMissingRunCycleArguments(durationIndex, distanceIndex, datetimeIndex, elevationIndex);","lastModifiedDate":"2023-11-02"},{"lineNumber":352,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":353,"author":{"gitId":"AlWo223"},"content":"        if (durationIndex \u003e distanceIndex || distanceIndex \u003e datetimeIndex || datetimeIndex \u003e elevationIndex) {","lastModifiedDate":"2023-11-05"},{"lineNumber":354,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ACTIVITY_ORDER_INVALID);","lastModifiedDate":"2023-11-05"},{"lineNumber":355,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":356,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":357,"author":{"gitId":"AlWo223"},"content":"        final String caption \u003d arguments.substring(0, durationIndex).trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":358,"author":{"gitId":"AlWo223"},"content":"        final String duration \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":359,"author":{"gitId":"AlWo223"},"content":"                arguments.substring(durationIndex + Parameter.DURATION_SEPARATOR.length(), distanceIndex)","lastModifiedDate":"2023-11-02"},{"lineNumber":360,"author":{"gitId":"AlWo223"},"content":"                        .trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":361,"author":{"gitId":"AlWo223"},"content":"        final String distance \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":362,"author":{"gitId":"AlWo223"},"content":"                arguments.substring(distanceIndex + Parameter.DISTANCE_SEPARATOR.length(), datetimeIndex)","lastModifiedDate":"2023-11-02"},{"lineNumber":363,"author":{"gitId":"AlWo223"},"content":"                        .trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":364,"author":{"gitId":"AlWo223"},"content":"        final String datetime \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":365,"author":{"gitId":"AlWo223"},"content":"                arguments.substring(datetimeIndex + Parameter.DATETIME_SEPARATOR.length(), elevationIndex)","lastModifiedDate":"2023-11-02"},{"lineNumber":366,"author":{"gitId":"AlWo223"},"content":"                        .trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":367,"author":{"gitId":"AlWo223"},"content":"        final String elevation \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":368,"author":{"gitId":"AlWo223"},"content":"                arguments.substring(elevationIndex + Parameter.ELEVATION_SEPARATOR.length()).trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":369,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":370,"author":{"gitId":"AlWo223"},"content":"        checkEmptyRunCycleArguments(caption, duration, distance, datetime, elevation);","lastModifiedDate":"2023-11-05"},{"lineNumber":371,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":372,"author":{"gitId":"AlWo223"},"content":"        final LocalTime durationParsed \u003d parseDuration(duration);","lastModifiedDate":"2023-11-02"},{"lineNumber":373,"author":{"gitId":"AlWo223"},"content":"        final int distanceParsed \u003d parseDistance(distance);","lastModifiedDate":"2023-11-02"},{"lineNumber":374,"author":{"gitId":"AlWo223"},"content":"        final LocalDateTime datetimeParsed \u003d Parser.parseDateTime(datetime);","lastModifiedDate":"2023-11-02"},{"lineNumber":375,"author":{"gitId":"AlWo223"},"content":"        final int elevationParsed \u003d parseElevation(elevation);","lastModifiedDate":"2023-11-02"},{"lineNumber":376,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":377,"author":{"gitId":"AlWo223"},"content":"        if (isRun) {","lastModifiedDate":"2023-11-02"},{"lineNumber":378,"author":{"gitId":"AlWo223"},"content":"            return new Run(caption, durationParsed, distanceParsed, datetimeParsed, elevationParsed);","lastModifiedDate":"2023-11-02"},{"lineNumber":379,"author":{"gitId":"AlWo223"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":380,"author":{"gitId":"AlWo223"},"content":"            return new Cycle(caption, durationParsed, distanceParsed, datetimeParsed, elevationParsed);","lastModifiedDate":"2023-11-02"},{"lineNumber":381,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":382,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":383,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":384,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":385,"author":{"gitId":"AlWo223"},"content":"     * Checks if the raw user input is missing any arguments for creating a run or cycle.","lastModifiedDate":"2023-11-02"},{"lineNumber":386,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":387,"author":{"gitId":"AlWo223"},"content":"     * @param durationIndex  The position of the duration separator.","lastModifiedDate":"2023-11-02"},{"lineNumber":388,"author":{"gitId":"AlWo223"},"content":"     * @param distanceIndex  The position of the distance separator.","lastModifiedDate":"2023-11-02"},{"lineNumber":389,"author":{"gitId":"AlWo223"},"content":"     * @param datetimeIndex  The position of the datetime separator.","lastModifiedDate":"2023-11-02"},{"lineNumber":390,"author":{"gitId":"AlWo223"},"content":"     * @param elevationIndex The position of the elevation separator.","lastModifiedDate":"2023-11-02"},{"lineNumber":391,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If any of the arguments are missing.","lastModifiedDate":"2023-11-02"},{"lineNumber":392,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":393,"author":{"gitId":"AlWo223"},"content":"    public static void checkMissingRunCycleArguments(int durationIndex, int distanceIndex, int datetimeIndex,","lastModifiedDate":"2023-11-02"},{"lineNumber":394,"author":{"gitId":"AlWo223"},"content":"                                                     int elevationIndex) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":395,"author":{"gitId":"AlWo223"},"content":"        checkMissingActivityArguments(durationIndex, distanceIndex, datetimeIndex);","lastModifiedDate":"2023-11-02"},{"lineNumber":396,"author":{"gitId":"AlWo223"},"content":"        if (elevationIndex \u003d\u003d -1) {","lastModifiedDate":"2023-11-02"},{"lineNumber":397,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ELEVATION_MISSING);","lastModifiedDate":"2023-11-02"},{"lineNumber":398,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":399,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":400,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":401,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":402,"author":{"gitId":"AlWo223"},"content":"     * Checks if the raw user input is missing any arguments for creating a swim.","lastModifiedDate":"2023-11-02"},{"lineNumber":403,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":404,"author":{"gitId":"AlWo223"},"content":"     * @param durationIndex      The position of the duration separator.","lastModifiedDate":"2023-11-02"},{"lineNumber":405,"author":{"gitId":"AlWo223"},"content":"     * @param distanceIndex      The position of the distance separator.","lastModifiedDate":"2023-11-02"},{"lineNumber":406,"author":{"gitId":"AlWo223"},"content":"     * @param datetimeIndex      The position of the datetime separator.","lastModifiedDate":"2023-11-02"},{"lineNumber":407,"author":{"gitId":"AlWo223"},"content":"     * @param swimmingStyleIndex The position of the swimming style separator.","lastModifiedDate":"2023-11-02"},{"lineNumber":408,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If any of the arguments are missing.","lastModifiedDate":"2023-11-02"},{"lineNumber":409,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":410,"author":{"gitId":"AlWo223"},"content":"    public static void checkMissingSwimArguments(int durationIndex, int distanceIndex, int datetimeIndex,","lastModifiedDate":"2023-11-02"},{"lineNumber":411,"author":{"gitId":"AlWo223"},"content":"                                                 int swimmingStyleIndex) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":412,"author":{"gitId":"AlWo223"},"content":"        checkMissingActivityArguments(durationIndex, distanceIndex, datetimeIndex);","lastModifiedDate":"2023-11-02"},{"lineNumber":413,"author":{"gitId":"AlWo223"},"content":"        if (swimmingStyleIndex \u003d\u003d -1) {","lastModifiedDate":"2023-11-02"},{"lineNumber":414,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_SWIMMINGSTYLE_MISSING);","lastModifiedDate":"2023-11-02"},{"lineNumber":415,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":416,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":417,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":418,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":419,"author":{"gitId":"AlWo223"},"content":"     * Checks if the raw user input includes any empty arguments for creating an activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":420,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":421,"author":{"gitId":"AlWo223"},"content":"     * @param caption  The caption of the activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":422,"author":{"gitId":"AlWo223"},"content":"     * @param duration The duration of the activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":423,"author":{"gitId":"AlWo223"},"content":"     * @param distance The distance of the activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":424,"author":{"gitId":"AlWo223"},"content":"     * @param datetime The datetime of the activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":425,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If any of the arguments are empty.","lastModifiedDate":"2023-11-02"},{"lineNumber":426,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":427,"author":{"gitId":"AlWo223"},"content":"    public static void checkEmptyActivityArguments(String caption, String duration, String distance,","lastModifiedDate":"2023-11-02"},{"lineNumber":428,"author":{"gitId":"AlWo223"},"content":"                                                   String datetime) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":429,"author":{"gitId":"AlWo223"},"content":"        checkEmptyCaptionArgument(caption);","lastModifiedDate":"2023-11-05"},{"lineNumber":430,"author":{"gitId":"AlWo223"},"content":"        checkEmptyDurationArgument(duration);","lastModifiedDate":"2023-11-05"},{"lineNumber":431,"author":{"gitId":"AlWo223"},"content":"        checkEmptyDistanceArgument(distance);","lastModifiedDate":"2023-11-05"},{"lineNumber":432,"author":{"gitId":"AlWo223"},"content":"        checkEmptyDateTimeArgument(datetime);","lastModifiedDate":"2023-11-05"},{"lineNumber":433,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":434,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":435,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-05"},{"lineNumber":436,"author":{"gitId":"AlWo223"},"content":"     * Checks if the raw user input includes an empty caption argument.","lastModifiedDate":"2023-11-05"},{"lineNumber":437,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-05"},{"lineNumber":438,"author":{"gitId":"AlWo223"},"content":"     * @param caption  The caption of the activity.","lastModifiedDate":"2023-11-05"},{"lineNumber":439,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the argument is empty.","lastModifiedDate":"2023-11-05"},{"lineNumber":440,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-05"},{"lineNumber":441,"author":{"gitId":"AlWo223"},"content":"    public static void checkEmptyCaptionArgument(String caption) throws AthletiException {","lastModifiedDate":"2023-11-05"},{"lineNumber":442,"author":{"gitId":"AlWo223"},"content":"        if (caption.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":443,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_CAPTION_EMPTY);","lastModifiedDate":"2023-11-02"},{"lineNumber":444,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":445,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":446,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":447,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-05"},{"lineNumber":448,"author":{"gitId":"AlWo223"},"content":"     * Checks if the raw user input includes an empty duration argument.","lastModifiedDate":"2023-11-05"},{"lineNumber":449,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-05"},{"lineNumber":450,"author":{"gitId":"AlWo223"},"content":"     * @param duration  The caption of the activity.","lastModifiedDate":"2023-11-05"},{"lineNumber":451,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the argument is empty.","lastModifiedDate":"2023-11-05"},{"lineNumber":452,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-05"},{"lineNumber":453,"author":{"gitId":"AlWo223"},"content":"    public static void checkEmptyDurationArgument(String duration) throws AthletiException {","lastModifiedDate":"2023-11-05"},{"lineNumber":454,"author":{"gitId":"AlWo223"},"content":"        if (duration.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":455,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_DURATION_EMPTY);","lastModifiedDate":"2023-11-02"},{"lineNumber":456,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":457,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":458,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":459,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-05"},{"lineNumber":460,"author":{"gitId":"AlWo223"},"content":"     * Checks if the raw user input includes an empty distance argument.","lastModifiedDate":"2023-11-05"},{"lineNumber":461,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-05"},{"lineNumber":462,"author":{"gitId":"AlWo223"},"content":"     * @param distance  The distance of the activity.","lastModifiedDate":"2023-11-05"},{"lineNumber":463,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the argument is empty.","lastModifiedDate":"2023-11-05"},{"lineNumber":464,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-05"},{"lineNumber":465,"author":{"gitId":"AlWo223"},"content":"    public static void checkEmptyDistanceArgument(String distance) throws AthletiException {","lastModifiedDate":"2023-11-05"},{"lineNumber":466,"author":{"gitId":"AlWo223"},"content":"        if (distance.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":467,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_DISTANCE_EMPTY);","lastModifiedDate":"2023-11-02"},{"lineNumber":468,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":469,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":470,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":471,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-05"},{"lineNumber":472,"author":{"gitId":"AlWo223"},"content":"     * Checks if the raw user input includes an empty elevation argument.","lastModifiedDate":"2023-11-05"},{"lineNumber":473,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-05"},{"lineNumber":474,"author":{"gitId":"AlWo223"},"content":"     * @param elevation  The elevation of the cycle or run.","lastModifiedDate":"2023-11-05"},{"lineNumber":475,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the argument is empty.","lastModifiedDate":"2023-11-05"},{"lineNumber":476,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-05"},{"lineNumber":477,"author":{"gitId":"AlWo223"},"content":"    public static void checkEmptyElevationArgument(String elevation) throws AthletiException {","lastModifiedDate":"2023-11-05"},{"lineNumber":478,"author":{"gitId":"AlWo223"},"content":"        if (elevation.isEmpty()) {","lastModifiedDate":"2023-11-05"},{"lineNumber":479,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ELEVATION_EMPTY);","lastModifiedDate":"2023-11-05"},{"lineNumber":480,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":481,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":482,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":483,"author":{"gitId":"AlWo223"},"content":"    public static void checkEmptySwimmingStyleArgument(String swimmingStyle) throws AthletiException {","lastModifiedDate":"2023-11-05"},{"lineNumber":484,"author":{"gitId":"AlWo223"},"content":"        if (swimmingStyle.isEmpty()) {","lastModifiedDate":"2023-11-05"},{"lineNumber":485,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_SWIMMINGSTYLE_EMPTY);","lastModifiedDate":"2023-11-05"},{"lineNumber":486,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":487,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":488,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":489,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-05"},{"lineNumber":490,"author":{"gitId":"AlWo223"},"content":"     * Checks if the raw user input includes an empty datetime argument.","lastModifiedDate":"2023-11-05"},{"lineNumber":491,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-05"},{"lineNumber":492,"author":{"gitId":"AlWo223"},"content":"     * @param datetime The datetime of the activity.","lastModifiedDate":"2023-11-05"},{"lineNumber":493,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the argument is empty.","lastModifiedDate":"2023-11-05"},{"lineNumber":494,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-05"},{"lineNumber":495,"author":{"gitId":"AlWo223"},"content":"    public static void checkEmptyDateTimeArgument(String datetime) throws AthletiException {","lastModifiedDate":"2023-11-05"},{"lineNumber":496,"author":{"gitId":"AlWo223"},"content":"        if (datetime.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":497,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_DATETIME_EMPTY);","lastModifiedDate":"2023-11-02"},{"lineNumber":498,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":499,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":500,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":501,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":502,"author":{"gitId":"AlWo223"},"content":"     * Checks if the raw user input includes any empty arguments for creating a cycle or run.","lastModifiedDate":"2023-11-02"},{"lineNumber":503,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":504,"author":{"gitId":"AlWo223"},"content":"     * @param caption   The caption of the activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":505,"author":{"gitId":"AlWo223"},"content":"     * @param duration  The duration of the activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":506,"author":{"gitId":"AlWo223"},"content":"     * @param distance  The distance of the activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":507,"author":{"gitId":"AlWo223"},"content":"     * @param datetime  The datetime of the activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":508,"author":{"gitId":"AlWo223"},"content":"     * @param elevation The elevation of the activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":509,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If any of the arguments are empty.","lastModifiedDate":"2023-11-02"},{"lineNumber":510,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":511,"author":{"gitId":"AlWo223"},"content":"    public static void checkEmptyRunCycleArguments(String caption, String duration, String distance,","lastModifiedDate":"2023-11-05"},{"lineNumber":512,"author":{"gitId":"AlWo223"},"content":"                                                   String datetime,","lastModifiedDate":"2023-11-02"},{"lineNumber":513,"author":{"gitId":"AlWo223"},"content":"                                                   String elevation) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":514,"author":{"gitId":"AlWo223"},"content":"        checkEmptyActivityArguments(caption, duration, distance, datetime);","lastModifiedDate":"2023-11-02"},{"lineNumber":515,"author":{"gitId":"AlWo223"},"content":"        checkEmptyElevationArgument(elevation);","lastModifiedDate":"2023-11-05"},{"lineNumber":516,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":517,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":518,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":519,"author":{"gitId":"AlWo223"},"content":"     * Checks if the raw user input includes any empty arguments for creating a swim.","lastModifiedDate":"2023-11-02"},{"lineNumber":520,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":521,"author":{"gitId":"AlWo223"},"content":"     * @param caption            The caption of the activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":522,"author":{"gitId":"AlWo223"},"content":"     * @param duration           The duration of the activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":523,"author":{"gitId":"AlWo223"},"content":"     * @param distance           The distance of the activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":524,"author":{"gitId":"AlWo223"},"content":"     * @param datetime           The datetime of the activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":525,"author":{"gitId":"AlWo223"},"content":"     * @param swimmingStyle      The position of the swimming style separator.","lastModifiedDate":"2023-11-05"},{"lineNumber":526,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If any of the arguments are empty.","lastModifiedDate":"2023-11-02"},{"lineNumber":527,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":528,"author":{"gitId":"AlWo223"},"content":"    public static void checkEmptySwimArguments(String caption, String duration, String distance,","lastModifiedDate":"2023-11-05"},{"lineNumber":529,"author":{"gitId":"AlWo223"},"content":"                                                   String datetime,","lastModifiedDate":"2023-11-02"},{"lineNumber":530,"author":{"gitId":"AlWo223"},"content":"                                                   String swimmingStyle) throws AthletiException {","lastModifiedDate":"2023-11-05"},{"lineNumber":531,"author":{"gitId":"AlWo223"},"content":"        checkEmptyActivityArguments(caption, duration, distance, datetime);","lastModifiedDate":"2023-11-02"},{"lineNumber":532,"author":{"gitId":"AlWo223"},"content":"        checkEmptySwimmingStyleArgument(swimmingStyle);","lastModifiedDate":"2023-11-05"},{"lineNumber":533,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":534,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":535,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":536,"author":{"gitId":"AlWo223"},"content":"     * Parses the raw user input for a swim and returns the corresponding activity object.","lastModifiedDate":"2023-11-02"},{"lineNumber":537,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":538,"author":{"gitId":"AlWo223"},"content":"     * @param arguments The raw user input containing the arguments.","lastModifiedDate":"2023-11-02"},{"lineNumber":539,"author":{"gitId":"AlWo223"},"content":"     * @return activity         An object representing the activity.","lastModifiedDate":"2023-11-02"},{"lineNumber":540,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the input format is invalid.","lastModifiedDate":"2023-11-02"},{"lineNumber":541,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":542,"author":{"gitId":"AlWo223"},"content":"    public static Activity parseSwim(String arguments) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":543,"author":{"gitId":"AlWo223"},"content":"        final int durationIndex \u003d arguments.indexOf(Parameter.DURATION_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":544,"author":{"gitId":"AlWo223"},"content":"        final int distanceIndex \u003d arguments.indexOf(Parameter.DISTANCE_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":545,"author":{"gitId":"AlWo223"},"content":"        final int datetimeIndex \u003d arguments.indexOf(Parameter.DATETIME_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":546,"author":{"gitId":"AlWo223"},"content":"        final int swimmingStyleIndex \u003d arguments.indexOf(Parameter.SWIMMING_STYLE_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":547,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":548,"author":{"gitId":"AlWo223"},"content":"        checkMissingSwimArguments(durationIndex, distanceIndex, datetimeIndex, swimmingStyleIndex);","lastModifiedDate":"2023-11-02"},{"lineNumber":549,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":550,"author":{"gitId":"AlWo223"},"content":"        if (durationIndex \u003e distanceIndex || distanceIndex \u003e datetimeIndex || datetimeIndex \u003e swimmingStyleIndex) {","lastModifiedDate":"2023-11-05"},{"lineNumber":551,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ACTIVITY_ORDER_INVALID);","lastModifiedDate":"2023-11-05"},{"lineNumber":552,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":553,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":554,"author":{"gitId":"AlWo223"},"content":"        final String caption \u003d arguments.substring(0, durationIndex).trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":555,"author":{"gitId":"AlWo223"},"content":"        final String duration \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":556,"author":{"gitId":"AlWo223"},"content":"                arguments.substring(durationIndex + Parameter.DURATION_SEPARATOR.length(), distanceIndex)","lastModifiedDate":"2023-11-02"},{"lineNumber":557,"author":{"gitId":"AlWo223"},"content":"                        .trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":558,"author":{"gitId":"AlWo223"},"content":"        final String distance \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":559,"author":{"gitId":"AlWo223"},"content":"                arguments.substring(distanceIndex + Parameter.DISTANCE_SEPARATOR.length(), datetimeIndex)","lastModifiedDate":"2023-11-02"},{"lineNumber":560,"author":{"gitId":"AlWo223"},"content":"                        .trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":561,"author":{"gitId":"AlWo223"},"content":"        final String datetime \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":562,"author":{"gitId":"AlWo223"},"content":"                arguments.substring(datetimeIndex + Parameter.DATETIME_SEPARATOR.length(), swimmingStyleIndex)","lastModifiedDate":"2023-11-02"},{"lineNumber":563,"author":{"gitId":"AlWo223"},"content":"                        .trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":564,"author":{"gitId":"AlWo223"},"content":"        final String swimmingStyle \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":565,"author":{"gitId":"AlWo223"},"content":"                arguments.substring(swimmingStyleIndex + Parameter.SWIMMING_STYLE_SEPARATOR.length()).trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":566,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":567,"author":{"gitId":"AlWo223"},"content":"        checkEmptySwimArguments(caption, duration, distance, datetime, swimmingStyle);","lastModifiedDate":"2023-11-05"},{"lineNumber":568,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":569,"author":{"gitId":"AlWo223"},"content":"        final LocalTime durationParsed \u003d parseDuration(duration);","lastModifiedDate":"2023-11-02"},{"lineNumber":570,"author":{"gitId":"AlWo223"},"content":"        final int distanceParsed \u003d parseDistance(distance);","lastModifiedDate":"2023-11-02"},{"lineNumber":571,"author":{"gitId":"AlWo223"},"content":"        final LocalDateTime datetimeParsed \u003d Parser.parseDateTime(datetime);","lastModifiedDate":"2023-11-02"},{"lineNumber":572,"author":{"gitId":"AlWo223"},"content":"        final Swim.SwimmingStyle swimmingStyleParsed \u003d parseSwimmingStyle(swimmingStyle);","lastModifiedDate":"2023-11-02"},{"lineNumber":573,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":574,"author":{"gitId":"AlWo223"},"content":"        return new Swim(caption, durationParsed, distanceParsed, datetimeParsed, swimmingStyleParsed);","lastModifiedDate":"2023-11-02"},{"lineNumber":575,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":576,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":577,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":578,"author":{"gitId":"AlWo223"},"content":"     * Parses the raw user input for a swimming style and returns the corresponding swimming style object.","lastModifiedDate":"2023-11-02"},{"lineNumber":579,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":580,"author":{"gitId":"AlWo223"},"content":"     * @param swimmingStyle The raw user input containing the swimming style.","lastModifiedDate":"2023-11-02"},{"lineNumber":581,"author":{"gitId":"AlWo223"},"content":"     * @return swimmingStyle    An object representing the swimming style.","lastModifiedDate":"2023-11-02"},{"lineNumber":582,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the input format is invalid.","lastModifiedDate":"2023-11-02"},{"lineNumber":583,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":584,"author":{"gitId":"AlWo223"},"content":"    public static Swim.SwimmingStyle parseSwimmingStyle(String swimmingStyle) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":585,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":586,"author":{"gitId":"AlWo223"},"content":"            return Swim.SwimmingStyle.valueOf(swimmingStyle.toUpperCase());","lastModifiedDate":"2023-11-02"},{"lineNumber":587,"author":{"gitId":"AlWo223"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":588,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_SWIMMINGSTYLE_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":589,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":590,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":591,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":592,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":593,"author":{"gitId":"AlWo223"},"content":"     * Parses the raw user input for adding an activity goal and returns the corresponding activity goal object.","lastModifiedDate":"2023-11-02"},{"lineNumber":594,"author":{"gitId":"AlWo223"},"content":"     * @param commandArgs       The raw user input containing the arguments.","lastModifiedDate":"2023-11-02"},{"lineNumber":595,"author":{"gitId":"AlWo223"},"content":"     * @return activityGoal     An object representing the activity goal.","lastModifiedDate":"2023-11-02"},{"lineNumber":596,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the input format is invalid.","lastModifiedDate":"2023-11-02"},{"lineNumber":597,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":598,"author":{"gitId":"AlWo223"},"content":"    public static ActivityGoal parseActivityGoal(String commandArgs) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":599,"author":{"gitId":"AlWo223"},"content":"        final int sportIndex \u003d commandArgs.indexOf(Parameter.SPORT_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":600,"author":{"gitId":"AlWo223"},"content":"        final int typeIndex \u003d commandArgs.indexOf(Parameter.TYPE_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":601,"author":{"gitId":"AlWo223"},"content":"        final int periodIndex \u003d commandArgs.indexOf(Parameter.PERIOD_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":602,"author":{"gitId":"AlWo223"},"content":"        final int targetIndex \u003d commandArgs.indexOf(Parameter.TARGET_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":603,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":604,"author":{"gitId":"AlWo223"},"content":"        checkMissingActivityGoalArguments(sportIndex, typeIndex, periodIndex, targetIndex);","lastModifiedDate":"2023-11-02"},{"lineNumber":605,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":606,"author":{"gitId":"AlWo223"},"content":"        if (sportIndex \u003e typeIndex || typeIndex \u003e periodIndex || periodIndex \u003e targetIndex) {","lastModifiedDate":"2023-11-05"},{"lineNumber":607,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ACTIVITY_ORDER_INVALID);","lastModifiedDate":"2023-11-05"},{"lineNumber":608,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":609,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":610,"author":{"gitId":"AlWo223"},"content":"        final String sport \u003d commandArgs.substring(sportIndex + Parameter.SPORT_SEPARATOR.length(), typeIndex).trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":611,"author":{"gitId":"AlWo223"},"content":"        final String type \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":612,"author":{"gitId":"AlWo223"},"content":"                commandArgs.substring(typeIndex + Parameter.TYPE_SEPARATOR.length(), periodIndex).trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":613,"author":{"gitId":"AlWo223"},"content":"        final String period \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":614,"author":{"gitId":"AlWo223"},"content":"                commandArgs.substring(periodIndex + Parameter.PERIOD_SEPARATOR.length(), targetIndex).trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":615,"author":{"gitId":"AlWo223"},"content":"        final String target \u003d commandArgs.substring(targetIndex + Parameter.TARGET_SEPARATOR.length()).trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":616,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":617,"author":{"gitId":"AlWo223"},"content":"        final ActivityGoal.Sport sportParsed \u003d parseSport(sport);","lastModifiedDate":"2023-11-02"},{"lineNumber":618,"author":{"gitId":"AlWo223"},"content":"        final ActivityGoal.GoalType typeParsed \u003d parseGoalType(type);","lastModifiedDate":"2023-11-02"},{"lineNumber":619,"author":{"gitId":"AlWo223"},"content":"        final Goal.TimeSpan periodParsed \u003d parsePeriod(period);","lastModifiedDate":"2023-11-02"},{"lineNumber":620,"author":{"gitId":"AlWo223"},"content":"        final int targetParsed \u003d parseTarget(target);","lastModifiedDate":"2023-11-02"},{"lineNumber":621,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":622,"author":{"gitId":"AlWo223"},"content":"        return new ActivityGoal(periodParsed, typeParsed, sportParsed, targetParsed);","lastModifiedDate":"2023-11-02"},{"lineNumber":623,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":624,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":625,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":626,"author":{"gitId":"AlWo223"},"content":"     * Parses the sport input provided by the user.","lastModifiedDate":"2023-11-02"},{"lineNumber":627,"author":{"gitId":"AlWo223"},"content":"     * @param sport                 The raw user input containing the sport.","lastModifiedDate":"2023-11-02"},{"lineNumber":628,"author":{"gitId":"AlWo223"},"content":"     * @return sportParsed          The parsed Sport object.","lastModifiedDate":"2023-11-02"},{"lineNumber":629,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException     If the input format is invalid.","lastModifiedDate":"2023-11-02"},{"lineNumber":630,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":631,"author":{"gitId":"AlWo223"},"content":"    public static ActivityGoal.Sport parseSport(String sport) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":632,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":633,"author":{"gitId":"AlWo223"},"content":"            return ActivityGoal.Sport.valueOf(sport.toUpperCase());","lastModifiedDate":"2023-11-02"},{"lineNumber":634,"author":{"gitId":"AlWo223"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":635,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_SPORT_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":636,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":637,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":638,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":639,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":640,"author":{"gitId":"AlWo223"},"content":"     * Checks if the raw user input is missing any arguments for creating an activity goal.","lastModifiedDate":"2023-11-02"},{"lineNumber":641,"author":{"gitId":"AlWo223"},"content":"     * @param sportIndex        The position of the sport separator.","lastModifiedDate":"2023-11-02"},{"lineNumber":642,"author":{"gitId":"AlWo223"},"content":"     * @param typeIndex         The position of the type separator.","lastModifiedDate":"2023-11-06"},{"lineNumber":643,"author":{"gitId":"AlWo223"},"content":"     * @param periodIndex       The position of the period separator.","lastModifiedDate":"2023-11-02"},{"lineNumber":644,"author":{"gitId":"AlWo223"},"content":"     * @param targetIndex       The position of the target separator.","lastModifiedDate":"2023-11-06"},{"lineNumber":645,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If any of the arguments are missing.","lastModifiedDate":"2023-11-02"},{"lineNumber":646,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":647,"author":{"gitId":"AlWo223"},"content":"    public static void checkMissingActivityGoalArguments(int sportIndex, int typeIndex, int periodIndex,","lastModifiedDate":"2023-11-06"},{"lineNumber":648,"author":{"gitId":"AlWo223"},"content":"            int targetIndex) throws AthletiException {","lastModifiedDate":"2023-11-06"},{"lineNumber":649,"author":{"gitId":"AlWo223"},"content":"        if (sportIndex \u003d\u003d -1) {","lastModifiedDate":"2023-11-02"},{"lineNumber":650,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ACTIVITYGOAL_SPORT_MISSING);","lastModifiedDate":"2023-11-02"},{"lineNumber":651,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":652,"author":{"gitId":"AlWo223"},"content":"        if (typeIndex \u003d\u003d -1) {","lastModifiedDate":"2023-11-06"},{"lineNumber":653,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ACTIVITYGOAL_TYPE_MISSING);","lastModifiedDate":"2023-11-06"},{"lineNumber":654,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":655,"author":{"gitId":"AlWo223"},"content":"        if (periodIndex \u003d\u003d -1) {","lastModifiedDate":"2023-11-02"},{"lineNumber":656,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ACTIVITYGOAL_PERIOD_MISSING);","lastModifiedDate":"2023-11-02"},{"lineNumber":657,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":658,"author":{"gitId":"AlWo223"},"content":"        if (targetIndex \u003d\u003d -1) {","lastModifiedDate":"2023-11-06"},{"lineNumber":659,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ACTIVITYGOAL_TARGET_MISSING);","lastModifiedDate":"2023-11-02"},{"lineNumber":660,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":661,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":662,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":663,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":664,"author":{"gitId":"AlWo223"},"content":"     * Parses the raw elevation input provided by the user.","lastModifiedDate":"2023-11-02"},{"lineNumber":665,"author":{"gitId":"AlWo223"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":666,"author":{"gitId":"AlWo223"},"content":"     * @param elevation The raw user input containing the elevation.","lastModifiedDate":"2023-11-02"},{"lineNumber":667,"author":{"gitId":"AlWo223"},"content":"     * @return elevationParsed      The parsed Integer elevation.","lastModifiedDate":"2023-11-02"},{"lineNumber":668,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the input is not an integer.","lastModifiedDate":"2023-11-02"},{"lineNumber":669,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":670,"author":{"gitId":"AlWo223"},"content":"    public static int parseElevation(String elevation) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":671,"author":{"gitId":"AlWo223"},"content":"        int elevationParsed;","lastModifiedDate":"2023-11-02"},{"lineNumber":672,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":673,"author":{"gitId":"AlWo223"},"content":"            elevationParsed \u003d Integer.parseInt(elevation);","lastModifiedDate":"2023-11-02"},{"lineNumber":674,"author":{"gitId":"AlWo223"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":675,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ELEVATION_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":676,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":677,"author":{"gitId":"AlWo223"},"content":"        return elevationParsed;","lastModifiedDate":"2023-11-02"},{"lineNumber":678,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":679,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":680,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":681,"author":{"gitId":"AlWo223"},"content":"     * Parses the goal type input provided by the user.","lastModifiedDate":"2023-11-02"},{"lineNumber":682,"author":{"gitId":"AlWo223"},"content":"     * @param type                The raw user input containing the goal type.","lastModifiedDate":"2023-11-02"},{"lineNumber":683,"author":{"gitId":"AlWo223"},"content":"     * @return goalParsed         The parsed GoalType object.","lastModifiedDate":"2023-11-02"},{"lineNumber":684,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException   If the input format is invalid.","lastModifiedDate":"2023-11-02"},{"lineNumber":685,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":686,"author":{"gitId":"AlWo223"},"content":"    public static ActivityGoal.GoalType parseGoalType(String type) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":687,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":688,"author":{"gitId":"AlWo223"},"content":"            return ActivityGoal.GoalType.valueOf(type.toUpperCase());","lastModifiedDate":"2023-11-02"},{"lineNumber":689,"author":{"gitId":"AlWo223"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":690,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_TYPE_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":691,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":692,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":693,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":694,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":695,"author":{"gitId":"AlWo223"},"content":"     * Parses the period input provided by the user","lastModifiedDate":"2023-11-02"},{"lineNumber":696,"author":{"gitId":"AlWo223"},"content":"     * @param period            The raw user input containing the period.","lastModifiedDate":"2023-11-02"},{"lineNumber":697,"author":{"gitId":"AlWo223"},"content":"     * @return periodParsed     The parsed Period object.","lastModifiedDate":"2023-11-02"},{"lineNumber":698,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the input format is invalid.","lastModifiedDate":"2023-11-02"},{"lineNumber":699,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":700,"author":{"gitId":"AlWo223"},"content":"    public static Goal.TimeSpan parsePeriod(String period) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":701,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":702,"author":{"gitId":"AlWo223"},"content":"            return Goal.TimeSpan.valueOf(period.toUpperCase());","lastModifiedDate":"2023-11-02"},{"lineNumber":703,"author":{"gitId":"AlWo223"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":704,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_PERIOD_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":705,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":706,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":707,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":708,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":709,"author":{"gitId":"AlWo223"},"content":"     * Parses the target input provided by the user.","lastModifiedDate":"2023-11-02"},{"lineNumber":710,"author":{"gitId":"AlWo223"},"content":"     * @param target            The raw user input containing the target value.","lastModifiedDate":"2023-11-02"},{"lineNumber":711,"author":{"gitId":"AlWo223"},"content":"     * @return targetParsed     The parsed Integer target value.","lastModifiedDate":"2023-11-02"},{"lineNumber":712,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException If the input is not a positive number.","lastModifiedDate":"2023-11-02"},{"lineNumber":713,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":714,"author":{"gitId":"AlWo223"},"content":"    public static int parseTarget(String target) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":715,"author":{"gitId":"AlWo223"},"content":"        int targetParsed;","lastModifiedDate":"2023-11-02"},{"lineNumber":716,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":717,"author":{"gitId":"AlWo223"},"content":"            targetParsed \u003d Integer.parseInt(target);","lastModifiedDate":"2023-11-02"},{"lineNumber":718,"author":{"gitId":"AlWo223"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":719,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_TARGET_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":720,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":721,"author":{"gitId":"AlWo223"},"content":"        if (targetParsed \u003c 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":722,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_TARGET_NEGATIVE);","lastModifiedDate":"2023-11-02"},{"lineNumber":723,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":724,"author":{"gitId":"AlWo223"},"content":"        return targetParsed;","lastModifiedDate":"2023-11-02"},{"lineNumber":725,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":726,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"skylee03":11,"AlWo223":715}},{"path":"src/main/java/athleticli/parser/CommandName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":" * Defines string literals for command names.","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"public class CommandName {","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"    public static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"    public static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"    public static final String COMMAND_SAVE \u003d \"save\";","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"    public static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"    /* Sleep Management */","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"    public static final String COMMAND_SLEEP_ADD \u003d \"add-sleep\";","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"    public static final String COMMAND_SLEEP_EDIT \u003d \"edit-sleep\";","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    public static final String COMMAND_SLEEP_DELETE \u003d \"delete-sleep\";","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"    public static final String COMMAND_SLEEP_LIST \u003d \"list-sleep\";","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"    public static final String COMMAND_SLEEP_FIND \u003d \"find-sleep\";","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"    /* Activity Management */","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"    public static final String COMMAND_RUN \u003d \"add-run\";","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    public static final String COMMAND_ACTIVITY \u003d \"add-activity\";","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    public static final String COMMAND_CYCLE \u003d \"add-cycle\";","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"    public static final String COMMAND_SWIM \u003d \"add-swim\";","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"    public static final String COMMAND_ACTIVITY_DELETE \u003d \"delete-activity\";","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"    public static final String COMMAND_ACTIVITY_LIST \u003d \"list-activity\";","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"    public static final String COMMAND_ACTIVITY_EDIT \u003d \"edit-activity\";","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"    public static final String COMMAND_ACTIVITY_FIND \u003d \"find-activity\";","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"    public static final String COMMAND_RUN_EDIT \u003d \"edit-run\";","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"    public static final String COMMAND_CYCLE_EDIT \u003d \"edit-cycle\";","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"    public static final String COMMAND_SWIM_EDIT \u003d \"edit-swim\";","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"    public static final String COMMAND_ACTIVITY_GOAL_SET \u003d \"set-activity-goal\";","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"    public static final String COMMAND_ACTIVITY_GOAL_EDIT \u003d \"edit-activity-goal\";","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"    public static final String COMMAND_ACTIVITY_GOAL_LIST \u003d \"list-activity-goal\";","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"    /* Diet Management */","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"yicheng-toh"},"content":"    public static final String COMMAND_DIET_GOAL_SET \u003d \"set-diet-goal\";","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yicheng-toh"},"content":"    public static final String COMMAND_DIET_GOAL_EDIT \u003d \"edit-diet-goal\";","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"yicheng-toh"},"content":"    public static final String COMMAND_DIET_GOAL_LIST \u003d \"list-diet-goal\";","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"yicheng-toh"},"content":"    public static final String COMMAND_DIET_GOAL_DELETE \u003d \"delete-diet-goal\";","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"    public static final String COMMAND_DIET_ADD \u003d \"add-diet\";","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"    public static final String COMMAND_DIET_DELETE \u003d \"delete-diet\";","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"    public static final String COMMAND_DIET_EDIT \u003d \"edit-diet\";","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"    public static final String COMMAND_DIET_LIST \u003d \"list-diet\";","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"skylee03"},"content":"    public static final String COMMAND_DIET_FIND \u003d \"find-diet\";","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":18,"DaDevChia":6,"AlWo223":11,"yicheng-toh":4,"nihalzp":6}},{"path":"src/main/java/athleticli/parser/DietParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"import athleticli.data.Goal;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"import athleticli.data.diet.Diet;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"import athleticli.data.diet.DietGoal;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.diet.HealthyDietGoal;","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.diet.UnhealthyDietGoal;","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":" * Defines the methods for Diet parser and Diet Goal parser","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"public class DietParser {","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"    //@@author  yicheng-toh","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"     * @param commandArgsString User provided data to create goals for the nutrients defined.","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"yicheng-toh"},"content":"     * @return a list of diet goals for further checking in the Set Diet Goal Command.","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"     * @throws AthletiException Invalid input by the user.","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"    public static ArrayList\u003cDietGoal\u003e parseDietGoalSetEdit(String commandArgsString) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"        if (commandArgsString.trim().isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"            throw new AthletiException(Message.MESSAGE_DIET_GOAL_INSUFFICIENT_INPUT);","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"yicheng-toh"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"yicheng-toh"},"content":"            String[] commandArgs;","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"yicheng-toh"},"content":"            if (!commandArgsString.contains(\" \")) {","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"yicheng-toh"},"content":"                throw new AthletiException(Message.MESSAGE_DIET_GOAL_INSUFFICIENT_INPUT);","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"yicheng-toh"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"yicheng-toh"},"content":"            commandArgs \u003d commandArgsString.split(\"\\\\s+\");","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"yicheng-toh"},"content":"            ArrayList\u003cDietGoal\u003e dietGoals \u003d initializeIntermediateDietGoals(commandArgs);","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"yicheng-toh"},"content":"            return dietGoals;","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"yicheng-toh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"yicheng-toh"},"content":"            throw new AthletiException(Message.MESSAGE_DIET_GOAL_TARGET_VALUE_NOT_POSITIVE_INT);","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"yicheng-toh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"yicheng-toh"},"content":"            throw new AthletiException(Message.MESSAGE_DIET_GOAL_INSUFFICIENT_INPUT);","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"yicheng-toh"},"content":"    private static ArrayList\u003cDietGoal\u003e initializeIntermediateDietGoals(String[] commandArgs) throws AthletiException {","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"yicheng-toh"},"content":"        String[] nutrientAndTargetValue;","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"yicheng-toh"},"content":"        String nutrient;","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"yicheng-toh"},"content":"        int targetValue;","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"yicheng-toh"},"content":"        int nutrientStartingIndex \u003d 1;","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"yicheng-toh"},"content":"        boolean isHealthy \u003d true;","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"yicheng-toh"},"content":"        Goal.TimeSpan timespan \u003d ActivityParser.parsePeriod(commandArgs[0]);","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"yicheng-toh"},"content":"        if (commandArgs[1].toLowerCase().equals(\"unhealthy\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"yicheng-toh"},"content":"            isHealthy \u003d false;","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"yicheng-toh"},"content":"            nutrientStartingIndex +\u003d 1;","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"yicheng-toh"},"content":"        ArrayList\u003cDietGoal\u003e dietGoals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"yicheng-toh"},"content":"        Set\u003cString\u003e recordedNutrients \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"yicheng-toh"},"content":"        for (int i \u003d nutrientStartingIndex; i \u003c commandArgs.length; i++) {","lastModifiedDate":"2023-11-04"},{"lineNumber":69,"author":{"gitId":"yicheng-toh"},"content":"            nutrientAndTargetValue \u003d commandArgs[i].split(\"/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"yicheng-toh"},"content":"            nutrient \u003d nutrientAndTargetValue[0];","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"yicheng-toh"},"content":"            targetValue \u003d Integer.parseInt(nutrientAndTargetValue[1]);","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"yicheng-toh"},"content":"            if (targetValue \u003c\u003d 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"yicheng-toh"},"content":"                throw new AthletiException(Message.MESSAGE_DIET_GOAL_TARGET_VALUE_NOT_POSITIVE_INT);","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"yicheng-toh"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"yicheng-toh"},"content":"            if (!NutrientVerifier.verify(nutrient)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"yicheng-toh"},"content":"                throw new AthletiException(Message.MESSAGE_DIET_GOAL_INVALID_NUTRIENT);","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"yicheng-toh"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"yicheng-toh"},"content":"            if (recordedNutrients.contains(nutrient)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"yicheng-toh"},"content":"                throw new AthletiException(Message.MESSAGE_DIET_GOAL_REPEATED_NUTRIENT);","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"yicheng-toh"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"yicheng-toh"},"content":"            DietGoal dietGoal;","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"yicheng-toh"},"content":"            if (isHealthy) {","lastModifiedDate":"2023-11-04"},{"lineNumber":83,"author":{"gitId":"yicheng-toh"},"content":"                dietGoal \u003d new HealthyDietGoal(timespan, nutrient, targetValue);","lastModifiedDate":"2023-11-04"},{"lineNumber":84,"author":{"gitId":"yicheng-toh"},"content":"            } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":85,"author":{"gitId":"yicheng-toh"},"content":"                dietGoal \u003d new UnhealthyDietGoal(timespan, nutrient, targetValue);","lastModifiedDate":"2023-11-04"},{"lineNumber":86,"author":{"gitId":"yicheng-toh"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":87,"author":{"gitId":"yicheng-toh"},"content":"            dietGoals.add(dietGoal);","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"yicheng-toh"},"content":"            recordedNutrients.add(nutrient);","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"yicheng-toh"},"content":"        return dietGoals;","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"yicheng-toh"},"content":"     * @param deleteIndexString Index of the goal to be deleted in String format","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"yicheng-toh"},"content":"     * @return Index of the goal in integer format in users\u0027 perspective.","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"yicheng-toh"},"content":"     * @throws AthletiException Catch invalid characters and numbers.","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"yicheng-toh"},"content":"    public static int parseDietGoalDelete(String deleteIndexString) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"yicheng-toh"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"yicheng-toh"},"content":"            int deleteIndex \u003d Integer.parseInt(deleteIndexString.trim());","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"yicheng-toh"},"content":"            if (deleteIndex \u003c\u003d 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"yicheng-toh"},"content":"                throw new AthletiException(Message.MESSAGE_DIET_GOAL_INCORRECT_INTEGER_FORMAT);","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"yicheng-toh"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"yicheng-toh"},"content":"            return deleteIndex;","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"yicheng-toh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"yicheng-toh"},"content":"            throw new AthletiException(Message.MESSAGE_DIET_GOAL_INCORRECT_INTEGER_FORMAT);","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"nihalzp"},"content":"    //@@author  nihalzp","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":112,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"nihalzp"},"content":"     * Parses the raw user input for a diet and returns the corresponding diet object.","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"nihalzp"},"content":"     * @param commandArgs The raw user input containing the arguments.","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"nihalzp"},"content":"     * @return An object representing the diet.","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"nihalzp"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"nihalzp"},"content":"    public static Diet parseDiet(String commandArgs) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"nihalzp"},"content":"        int caloriesMarkerPos \u003d commandArgs.indexOf(Parameter.CALORIES_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"nihalzp"},"content":"        int proteinMarkerPos \u003d commandArgs.indexOf(Parameter.PROTEIN_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"nihalzp"},"content":"        int carbMarkerPos \u003d commandArgs.indexOf(Parameter.CARB_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"nihalzp"},"content":"        int fatMarkerPos \u003d commandArgs.indexOf(Parameter.FAT_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"nihalzp"},"content":"        int datetimeMarkerPos \u003d commandArgs.indexOf(Parameter.DATETIME_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"nihalzp"},"content":"        checkMissingDietArguments(caloriesMarkerPos, proteinMarkerPos, carbMarkerPos, fatMarkerPos,","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"nihalzp"},"content":"                datetimeMarkerPos);","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"nihalzp"},"content":"        String calories \u003d commandArgs.substring(caloriesMarkerPos + Parameter.CALORIES_SEPARATOR.length(),","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"nihalzp"},"content":"                proteinMarkerPos).trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"nihalzp"},"content":"        String protein \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"nihalzp"},"content":"                commandArgs.substring(proteinMarkerPos + Parameter.PROTEIN_SEPARATOR.length(), carbMarkerPos)","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"nihalzp"},"content":"                        .trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"nihalzp"},"content":"        String carb \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"nihalzp"},"content":"                commandArgs.substring(carbMarkerPos + Parameter.CARB_SEPARATOR.length(), fatMarkerPos).trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"nihalzp"},"content":"        String fat \u003d commandArgs.substring(fatMarkerPos + Parameter.FAT_SEPARATOR.length(), datetimeMarkerPos)","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"nihalzp"},"content":"                .trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"nihalzp"},"content":"        String datetime \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"nihalzp"},"content":"                commandArgs.substring(datetimeMarkerPos + Parameter.DATETIME_SEPARATOR.length()).trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"nihalzp"},"content":"        checkEmptyDietArguments(calories, protein, carb, fat, datetime);","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"nihalzp"},"content":"        int caloriesParsed \u003d parseCalories(calories);","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"nihalzp"},"content":"        int proteinParsed \u003d parseProtein(protein);","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"nihalzp"},"content":"        int carbParsed \u003d parseCarb(carb);","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"nihalzp"},"content":"        int fatParsed \u003d parseFat(fat);","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"nihalzp"},"content":"        LocalDateTime datetimeParsed \u003d Parser.parseDateTime(datetime);","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"nihalzp"},"content":"        return new Diet(caloriesParsed, proteinParsed, carbParsed, fatParsed, datetimeParsed);","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"nihalzp"},"content":"     * Checks if the user input for a diet contains all the required arguments.","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"nihalzp"},"content":"     * @param caloriesMarkerPos The position of the calories marker.","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"nihalzp"},"content":"     * @param proteinMarkerPos  The position of the protein marker.","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"nihalzp"},"content":"     * @param carbMarkerPos     The position of the carb marker.","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"nihalzp"},"content":"     * @param fatMarkerPos      The position of the fat marker.","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"nihalzp"},"content":"     * @param datetimeMarkerPos The position of the datetime marker.","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"nihalzp"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"nihalzp"},"content":"    public static void checkMissingDietArguments(int caloriesMarkerPos, int proteinMarkerPos,","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"nihalzp"},"content":"                                                 int carbMarkerPos, int fatMarkerPos,","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"nihalzp"},"content":"                                                 int datetimeMarkerPos) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"nihalzp"},"content":"        if (caloriesMarkerPos \u003d\u003d -1) {","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_CALORIES_MISSING);","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"nihalzp"},"content":"        if (proteinMarkerPos \u003d\u003d -1) {","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_PROTEIN_MISSING);","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"nihalzp"},"content":"        if (carbMarkerPos \u003d\u003d -1) {","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_CARB_MISSING);","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"nihalzp"},"content":"        if (fatMarkerPos \u003d\u003d -1) {","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_FAT_MISSING);","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"nihalzp"},"content":"        if (datetimeMarkerPos \u003d\u003d -1) {","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_DIET_DATETIME_MISSING);","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"nihalzp"},"content":"     * Checks if the user input for a diet is empty.","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"nihalzp"},"content":"     * @param calories The calories input.","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"nihalzp"},"content":"     * @param protein  The protein input.","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"nihalzp"},"content":"     * @param carb     The carb input.","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"nihalzp"},"content":"     * @param fat      The fat input.","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"nihalzp"},"content":"     * @param datetime The datetime input.","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"nihalzp"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"nihalzp"},"content":"    public static void checkEmptyDietArguments(String calories, String protein, String carb, String fat,","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"nihalzp"},"content":"                                               String datetime) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":193,"author":{"gitId":"nihalzp"},"content":"        if (calories.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_CALORIES_EMPTY);","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":196,"author":{"gitId":"nihalzp"},"content":"        if (protein.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_PROTEIN_EMPTY);","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"nihalzp"},"content":"        if (carb.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_CARB_EMPTY);","lastModifiedDate":"2023-11-02"},{"lineNumber":201,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"nihalzp"},"content":"        if (fat.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_FAT_EMPTY);","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":205,"author":{"gitId":"nihalzp"},"content":"        if (datetime.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":206,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_DIET_DATETIME_EMPTY);","lastModifiedDate":"2023-11-02"},{"lineNumber":207,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":209,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":210,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":211,"author":{"gitId":"nihalzp"},"content":"     * Parses the calories input for a diet.","lastModifiedDate":"2023-11-02"},{"lineNumber":212,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":213,"author":{"gitId":"nihalzp"},"content":"     * @param calories The calories input.","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"nihalzp"},"content":"     * @return The parsed calories.","lastModifiedDate":"2023-11-02"},{"lineNumber":215,"author":{"gitId":"nihalzp"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-11-02"},{"lineNumber":216,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":217,"author":{"gitId":"nihalzp"},"content":"    public static int parseCalories(String calories) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":218,"author":{"gitId":"nihalzp"},"content":"        int caloriesParsed;","lastModifiedDate":"2023-11-02"},{"lineNumber":219,"author":{"gitId":"nihalzp"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":220,"author":{"gitId":"nihalzp"},"content":"            caloriesParsed \u003d Integer.parseInt(calories);","lastModifiedDate":"2023-11-02"},{"lineNumber":221,"author":{"gitId":"nihalzp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":222,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_CALORIES_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":223,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":224,"author":{"gitId":"nihalzp"},"content":"        if (caloriesParsed \u003c 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":225,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_CALORIES_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":226,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":227,"author":{"gitId":"nihalzp"},"content":"        return caloriesParsed;","lastModifiedDate":"2023-11-02"},{"lineNumber":228,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":229,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":230,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":231,"author":{"gitId":"nihalzp"},"content":"     * Parses the protein input for a diet.","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":233,"author":{"gitId":"nihalzp"},"content":"     * @param protein The protein input.","lastModifiedDate":"2023-11-02"},{"lineNumber":234,"author":{"gitId":"nihalzp"},"content":"     * @return The parsed protein.","lastModifiedDate":"2023-11-02"},{"lineNumber":235,"author":{"gitId":"nihalzp"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-11-02"},{"lineNumber":236,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"nihalzp"},"content":"    public static int parseProtein(String protein) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":238,"author":{"gitId":"nihalzp"},"content":"        int proteinParsed;","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"nihalzp"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"nihalzp"},"content":"            proteinParsed \u003d Integer.parseInt(protein);","lastModifiedDate":"2023-11-02"},{"lineNumber":241,"author":{"gitId":"nihalzp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":242,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_PROTEIN_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":243,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":244,"author":{"gitId":"nihalzp"},"content":"        if (proteinParsed \u003c 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_PROTEIN_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":246,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"nihalzp"},"content":"        return proteinParsed;","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":250,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"nihalzp"},"content":"     * Parses the carb input for a diet.","lastModifiedDate":"2023-11-02"},{"lineNumber":252,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":253,"author":{"gitId":"nihalzp"},"content":"     * @param carb The carb input.","lastModifiedDate":"2023-11-02"},{"lineNumber":254,"author":{"gitId":"nihalzp"},"content":"     * @return The parsed carb.","lastModifiedDate":"2023-11-02"},{"lineNumber":255,"author":{"gitId":"nihalzp"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-11-02"},{"lineNumber":256,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"nihalzp"},"content":"    public static int parseCarb(String carb) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":258,"author":{"gitId":"nihalzp"},"content":"        int carbParsed;","lastModifiedDate":"2023-11-02"},{"lineNumber":259,"author":{"gitId":"nihalzp"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":260,"author":{"gitId":"nihalzp"},"content":"            carbParsed \u003d Integer.parseInt(carb);","lastModifiedDate":"2023-11-02"},{"lineNumber":261,"author":{"gitId":"nihalzp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":262,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_CARB_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":263,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":264,"author":{"gitId":"nihalzp"},"content":"        if (carbParsed \u003c 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":265,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_CARB_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":266,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":267,"author":{"gitId":"nihalzp"},"content":"        return carbParsed;","lastModifiedDate":"2023-11-02"},{"lineNumber":268,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":269,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":270,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":271,"author":{"gitId":"nihalzp"},"content":"     * Parses the fat input for a diet.","lastModifiedDate":"2023-11-02"},{"lineNumber":272,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":273,"author":{"gitId":"nihalzp"},"content":"     * @param fat The fat input.","lastModifiedDate":"2023-11-02"},{"lineNumber":274,"author":{"gitId":"nihalzp"},"content":"     * @return The parsed fat.","lastModifiedDate":"2023-11-02"},{"lineNumber":275,"author":{"gitId":"nihalzp"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-11-02"},{"lineNumber":276,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":277,"author":{"gitId":"nihalzp"},"content":"    public static int parseFat(String fat) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":278,"author":{"gitId":"nihalzp"},"content":"        int fatParsed;","lastModifiedDate":"2023-11-02"},{"lineNumber":279,"author":{"gitId":"nihalzp"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":280,"author":{"gitId":"nihalzp"},"content":"            fatParsed \u003d Integer.parseInt(fat);","lastModifiedDate":"2023-11-02"},{"lineNumber":281,"author":{"gitId":"nihalzp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":282,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_FAT_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":283,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":284,"author":{"gitId":"nihalzp"},"content":"        if (fatParsed \u003c 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":285,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_FAT_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":286,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":287,"author":{"gitId":"nihalzp"},"content":"        return fatParsed;","lastModifiedDate":"2023-11-02"},{"lineNumber":288,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":289,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":290,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":291,"author":{"gitId":"nihalzp"},"content":"     * Parses the index of a diet.","lastModifiedDate":"2023-11-02"},{"lineNumber":292,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":293,"author":{"gitId":"nihalzp"},"content":"     * @param commandArgs The raw user input containing the index.","lastModifiedDate":"2023-11-02"},{"lineNumber":294,"author":{"gitId":"nihalzp"},"content":"     * @return The parsed index.","lastModifiedDate":"2023-11-02"},{"lineNumber":295,"author":{"gitId":"nihalzp"},"content":"     * @throws AthletiException If the input format is invalid.","lastModifiedDate":"2023-11-02"},{"lineNumber":296,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":297,"author":{"gitId":"nihalzp"},"content":"    public static int parseDietIndex(String commandArgs) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":298,"author":{"gitId":"nihalzp"},"content":"        if (commandArgs \u003d\u003d null || commandArgs.trim().isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":299,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_DIET_INDEX_TYPE_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":300,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":301,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":302,"author":{"gitId":"nihalzp"},"content":"        String[] words \u003d commandArgs.trim().split(\"\\\\s+\", 2);  // Split into parts","lastModifiedDate":"2023-11-02"},{"lineNumber":303,"author":{"gitId":"nihalzp"},"content":"        int index;","lastModifiedDate":"2023-11-02"},{"lineNumber":304,"author":{"gitId":"nihalzp"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":305,"author":{"gitId":"nihalzp"},"content":"            index \u003d Integer.parseInt(words[0]);","lastModifiedDate":"2023-11-02"},{"lineNumber":306,"author":{"gitId":"nihalzp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":307,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_DIET_INDEX_TYPE_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":308,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":309,"author":{"gitId":"nihalzp"},"content":"        if (index \u003c 1) {","lastModifiedDate":"2023-11-02"},{"lineNumber":310,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_DIET_INDEX_TYPE_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":311,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":312,"author":{"gitId":"nihalzp"},"content":"        return index;","lastModifiedDate":"2023-11-02"},{"lineNumber":313,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":314,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":315,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":316,"author":{"gitId":"nihalzp"},"content":"     * Parses the value for a specific marker in a given argument string.","lastModifiedDate":"2023-11-02"},{"lineNumber":317,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":318,"author":{"gitId":"nihalzp"},"content":"     * @param arguments The raw user input containing the arguments.","lastModifiedDate":"2023-11-02"},{"lineNumber":319,"author":{"gitId":"nihalzp"},"content":"     * @param marker    The marker whose value is to be retrieved.","lastModifiedDate":"2023-11-02"},{"lineNumber":320,"author":{"gitId":"nihalzp"},"content":"     * @return The value associated with the given marker, or an empty string if the marker is not found.","lastModifiedDate":"2023-11-02"},{"lineNumber":321,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":322,"author":{"gitId":"nihalzp"},"content":"    public static String getValueForMarker(String arguments, String marker) {","lastModifiedDate":"2023-11-02"},{"lineNumber":323,"author":{"gitId":"nihalzp"},"content":"        String patternString \u003d \"\";","lastModifiedDate":"2023-11-02"},{"lineNumber":324,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":325,"author":{"gitId":"nihalzp"},"content":"        if (marker.equals(Parameter.DATETIME_SEPARATOR)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":326,"author":{"gitId":"nihalzp"},"content":"            // Special handling for datetime to capture the date and time","lastModifiedDate":"2023-11-02"},{"lineNumber":327,"author":{"gitId":"nihalzp"},"content":"            patternString \u003d marker + \"(\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2})\";","lastModifiedDate":"2023-11-02"},{"lineNumber":328,"author":{"gitId":"nihalzp"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":329,"author":{"gitId":"nihalzp"},"content":"            // For other markers, capture a sequence of non-whitespace characters","lastModifiedDate":"2023-11-02"},{"lineNumber":330,"author":{"gitId":"nihalzp"},"content":"            patternString \u003d marker + \"(\\\\S+)\";","lastModifiedDate":"2023-11-02"},{"lineNumber":331,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":332,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":333,"author":{"gitId":"nihalzp"},"content":"        Pattern pattern \u003d Pattern.compile(patternString);","lastModifiedDate":"2023-11-02"},{"lineNumber":334,"author":{"gitId":"nihalzp"},"content":"        Matcher matcher \u003d pattern.matcher(arguments);","lastModifiedDate":"2023-11-02"},{"lineNumber":335,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":336,"author":{"gitId":"nihalzp"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":337,"author":{"gitId":"nihalzp"},"content":"            return matcher.group(1);","lastModifiedDate":"2023-11-02"},{"lineNumber":338,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":339,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":340,"author":{"gitId":"nihalzp"},"content":"        // Return empty string if no match is found","lastModifiedDate":"2023-11-02"},{"lineNumber":341,"author":{"gitId":"nihalzp"},"content":"        return \"\";","lastModifiedDate":"2023-11-02"},{"lineNumber":342,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":343,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":344,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":345,"author":{"gitId":"nihalzp"},"content":"     * Parses the raw user input for a sleep and returns the corresponding sleep object.","lastModifiedDate":"2023-11-02"},{"lineNumber":346,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":347,"author":{"gitId":"nihalzp"},"content":"     * @param arguments The raw user input containing the arguments.","lastModifiedDate":"2023-11-02"},{"lineNumber":348,"author":{"gitId":"nihalzp"},"content":"     * @return An object representing the sleep.","lastModifiedDate":"2023-11-02"},{"lineNumber":349,"author":{"gitId":"nihalzp"},"content":"     * @throws AthletiException If the input format is invalid.","lastModifiedDate":"2023-11-02"},{"lineNumber":350,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":351,"author":{"gitId":"nihalzp"},"content":"    public static HashMap\u003cString, String\u003e parseDietEdit(String arguments) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":352,"author":{"gitId":"nihalzp"},"content":"        HashMap\u003cString, String\u003e dietMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":353,"author":{"gitId":"nihalzp"},"content":"        String calories \u003d getValueForMarker(arguments, Parameter.CALORIES_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":354,"author":{"gitId":"nihalzp"},"content":"        String protein \u003d getValueForMarker(arguments, Parameter.PROTEIN_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":355,"author":{"gitId":"nihalzp"},"content":"        String carb \u003d getValueForMarker(arguments, Parameter.CARB_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":356,"author":{"gitId":"nihalzp"},"content":"        String fat \u003d getValueForMarker(arguments, Parameter.FAT_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":357,"author":{"gitId":"nihalzp"},"content":"        String datetime \u003d getValueForMarker(arguments, Parameter.DATETIME_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":358,"author":{"gitId":"nihalzp"},"content":"        if (!calories.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":359,"author":{"gitId":"nihalzp"},"content":"            int caloriesParsed \u003d Integer.parseInt(calories);","lastModifiedDate":"2023-11-02"},{"lineNumber":360,"author":{"gitId":"nihalzp"},"content":"            dietMap.put(Parameter.CALORIES_SEPARATOR, Integer.toString(caloriesParsed));","lastModifiedDate":"2023-11-02"},{"lineNumber":361,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":362,"author":{"gitId":"nihalzp"},"content":"        if (!protein.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":363,"author":{"gitId":"nihalzp"},"content":"            int proteinParsed \u003d Integer.parseInt(protein);","lastModifiedDate":"2023-11-02"},{"lineNumber":364,"author":{"gitId":"nihalzp"},"content":"            dietMap.put(Parameter.PROTEIN_SEPARATOR, Integer.toString(proteinParsed));","lastModifiedDate":"2023-11-02"},{"lineNumber":365,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":366,"author":{"gitId":"nihalzp"},"content":"        if (!carb.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":367,"author":{"gitId":"nihalzp"},"content":"            int carbParsed \u003d Integer.parseInt(carb);","lastModifiedDate":"2023-11-02"},{"lineNumber":368,"author":{"gitId":"nihalzp"},"content":"            dietMap.put(Parameter.CARB_SEPARATOR, Integer.toString(carbParsed));","lastModifiedDate":"2023-11-02"},{"lineNumber":369,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":370,"author":{"gitId":"nihalzp"},"content":"        if (!fat.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":371,"author":{"gitId":"nihalzp"},"content":"            int fatParsed \u003d Integer.parseInt(fat);","lastModifiedDate":"2023-11-02"},{"lineNumber":372,"author":{"gitId":"nihalzp"},"content":"            dietMap.put(Parameter.FAT_SEPARATOR, Integer.toString(fatParsed));","lastModifiedDate":"2023-11-02"},{"lineNumber":373,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":374,"author":{"gitId":"nihalzp"},"content":"        if (!datetime.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":375,"author":{"gitId":"nihalzp"},"content":"            LocalDateTime datetimeParsed \u003d Parser.parseDateTime(datetime);","lastModifiedDate":"2023-11-02"},{"lineNumber":376,"author":{"gitId":"nihalzp"},"content":"            dietMap.put(Parameter.DATETIME_SEPARATOR, datetimeParsed.toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":377,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":378,"author":{"gitId":"nihalzp"},"content":"        if (dietMap.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":379,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_DIET_NO_CHANGE_REQUESTED);","lastModifiedDate":"2023-11-02"},{"lineNumber":380,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":381,"author":{"gitId":"nihalzp"},"content":"        return dietMap;","lastModifiedDate":"2023-11-02"},{"lineNumber":382,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":383,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"skylee03":16,"yicheng-toh":93,"nihalzp":274}},{"path":"src/main/java/athleticli/parser/NutrientVerifier.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":" * Verify the nutrient from a list of approved nutrients to be log in diet and diet goals","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"public class NutrientVerifier {","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"    public static final Set\u003cString\u003e VERIFIED_NUTRIENTS \u003d Set.of(Parameter.NUTRIENTS_FATS,","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"            Parameter.NUTRIENTS_CARB, Parameter.NUTRIENTS_PROTEIN, Parameter.NUTRIENTS_CALORIES);","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"     * Verifies if a nutrient is approved.","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"     * @param nutrient","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"     * @return boolean value if it is found in the approved list.","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"yicheng-toh"},"content":"    public static boolean verify(String nutrient) {","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":"        return VERIFIED_NUTRIENTS.contains(nutrient);","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"skylee03":1,"yicheng-toh":20}},{"path":"src/main/java/athleticli/parser/Parameter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"public class Parameter {","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"    public static final String DURATION_SEPARATOR \u003d \"duration/\";","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"    public static final String CAPTION_SEPARATOR \u003d \"caption/\";","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"    public static final String DISTANCE_SEPARATOR \u003d \"distance/\";","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"    public static final String DATETIME_SEPARATOR \u003d \"datetime/\";","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"    public static final String ELEVATION_SEPARATOR \u003d \"elevation/\";","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"    public static final String SWIMMING_STYLE_SEPARATOR \u003d \"style/\";","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"    public static final String ACTIVITY_STORAGE_INDICATOR \u003d \"[Activity]:\";","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"    public static final String RUN_STORAGE_INDICATOR \u003d \"[Run]:\";","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"    public static final String CYCLE_STORAGE_INDICATOR \u003d \"[Cycle]:\";","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    public static final String SWIM_STORAGE_INDICATOR \u003d \"[Swim]:\";","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    public static final String DETAIL_FLAG \u003d \"-d\";","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"    public static final String CALORIES_SEPARATOR \u003d \"calories/\";","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"    public static final String PROTEIN_SEPARATOR \u003d \"protein/\";","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"    public static final String CARB_SEPARATOR \u003d \"carb/\";","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"    public static final String FAT_SEPARATOR \u003d \"fat/\";","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"    public static final String START_TIME_SEPARATOR \u003d \"start/\";","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"    public static final String END_TIME_SEPARATOR \u003d \"end/\";","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"    public static final String SPORT_SEPARATOR \u003d \"sport/\";","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"    public static final String TYPE_SEPARATOR \u003d \"type/\";","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"    public static final String PERIOD_SEPARATOR \u003d \"period/\";","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"    public static final String TARGET_SEPARATOR \u003d \"target/\";","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"    public static final String NUTRIENTS_CALORIES \u003d \"calories\";","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"    public static final String NUTRIENTS_PROTEIN \u003d \"protein\";","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"    public static final String NUTRIENTS_FATS \u003d \"fats\";","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"    public static final String NUTRIENTS_CARB \u003d \"carb\";","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"skylee03":1,"DaDevChia":3,"AlWo223":19,"yicheng-toh":6,"nihalzp":5}},{"path":"src/main/java/athleticli/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.ByeCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.FindCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.HelpCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.SaveCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.diet.AddDietCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.diet.DeleteDietCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.diet.DeleteDietGoalCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.diet.EditDietCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.diet.EditDietGoalCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.diet.FindDietCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.diet.ListDietCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.diet.ListDietGoalCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.diet.SetDietGoalCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.sleep.FindSleepCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.sleep.ListSleepCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.activity.AddActivityCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.activity.DeleteActivityCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.activity.EditActivityCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.activity.FindActivityCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.activity.ListActivityCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.activity.SetActivityGoalCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.activity.EditActivityGoalCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.activity.ListActivityGoalCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":" * Defines the basic methods for command parser.","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"skylee03"},"content":"public class Parser {","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"skylee03"},"content":"     * Splits the raw user input into two parts, and then returns them. The first part is the command type,","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"skylee03"},"content":"     * while the second part is the command arguments. The second part can be empty.","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"skylee03"},"content":"     * @param rawUserInput The raw user input.","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"skylee03"},"content":"     * @return A string array whose first element is the command type and the second element is the command","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"skylee03"},"content":"     *         arguments.","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"skylee03"},"content":"    public static String[] splitCommandWordAndArgs(String rawUserInput) {","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"skylee03"},"content":"        assert rawUserInput !\u003d null : \"`rawUserInput` should not be null\";","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"skylee03"},"content":"        final String[] split \u003d rawUserInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"skylee03"},"content":"        return split.length \u003d\u003d 2 ? split : new String[]{split[0], \"\"};","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"skylee03"},"content":"     * Parses the raw user input and returns the corresponding command object.","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"skylee03"},"content":"     * @param rawUserInput The raw user input.","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"skylee03"},"content":"     * @return An object representing the command.","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"skylee03"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"skylee03"},"content":"    public static Command parseCommand(String rawUserInput) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"skylee03"},"content":"        assert rawUserInput !\u003d null : \"`rawUserInput` should not be null\";","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"skylee03"},"content":"        final String[] commandTypeAndParams \u003d splitCommandWordAndArgs(rawUserInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"skylee03"},"content":"        final String commandType \u003d commandTypeAndParams[0];","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"skylee03"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"skylee03"},"content":"        switch (commandType) {","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_BYE:","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"skylee03"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_HELP:","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"skylee03"},"content":"            return new HelpCommand(commandArgs);","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_SAVE:","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"skylee03"},"content":"            return new SaveCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_FIND:","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"skylee03"},"content":"            return new FindCommand(parseDate(commandArgs));","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"skylee03"},"content":"        /* Sleep Management */","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_SLEEP_ADD:","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"skylee03"},"content":"            return SleepParser.parseSleepAdd(commandArgs);","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_SLEEP_LIST:","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"skylee03"},"content":"            return new ListSleepCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_SLEEP_EDIT:","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"skylee03"},"content":"            return SleepParser.parseSleepEdit(commandArgs);","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_SLEEP_DELETE:","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"skylee03"},"content":"            return SleepParser.parseSleepDelete(commandArgs);","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_SLEEP_FIND:","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"skylee03"},"content":"            return new FindSleepCommand(parseDate(commandArgs));","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"skylee03"},"content":"        /* Activity Management */","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_ACTIVITY:","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"skylee03"},"content":"            return new AddActivityCommand(ActivityParser.parseActivity(commandArgs));","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_CYCLE:","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"skylee03"},"content":"            return new AddActivityCommand(ActivityParser.parseRunCycle(commandArgs, false));","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_RUN:","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"skylee03"},"content":"            return new AddActivityCommand(ActivityParser.parseRunCycle(commandArgs, true));","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_SWIM:","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"skylee03"},"content":"            return new AddActivityCommand(ActivityParser.parseSwim(commandArgs));","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_ACTIVITY_DELETE:","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"skylee03"},"content":"            return new DeleteActivityCommand(ActivityParser.parseActivityIndex(commandArgs));","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_ACTIVITY_LIST:","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"skylee03"},"content":"            return new ListActivityCommand(ActivityParser.parseActivityListDetail(commandArgs));","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_ACTIVITY_EDIT:","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"AlWo223"},"content":"            return new EditActivityCommand(ActivityParser.parseActivityEditIndex(commandArgs),","lastModifiedDate":"2023-11-05"},{"lineNumber":100,"author":{"gitId":"AlWo223"},"content":"                    ActivityParser.parseActivityEdit(commandArgs));","lastModifiedDate":"2023-11-05"},{"lineNumber":101,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_RUN_EDIT:","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_CYCLE_EDIT:","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"AlWo223"},"content":"            return new EditActivityCommand(ActivityParser.parseActivityEditIndex(commandArgs),","lastModifiedDate":"2023-11-05"},{"lineNumber":104,"author":{"gitId":"AlWo223"},"content":"                    ActivityParser.parseRunCycleEdit(commandArgs));","lastModifiedDate":"2023-11-05"},{"lineNumber":105,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_SWIM_EDIT:","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"AlWo223"},"content":"            return new EditActivityCommand(ActivityParser.parseActivityEditIndex(commandArgs),","lastModifiedDate":"2023-11-05"},{"lineNumber":107,"author":{"gitId":"AlWo223"},"content":"                    ActivityParser.parseSwimEdit(commandArgs));","lastModifiedDate":"2023-11-05"},{"lineNumber":108,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_ACTIVITY_FIND:","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"skylee03"},"content":"            return new FindActivityCommand(parseDate(commandArgs));","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_ACTIVITY_GOAL_SET:","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"skylee03"},"content":"            return new SetActivityGoalCommand(ActivityParser.parseActivityGoal(commandArgs));","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_ACTIVITY_GOAL_EDIT:","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"skylee03"},"content":"            return new EditActivityGoalCommand(ActivityParser.parseActivityGoal(commandArgs));","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_ACTIVITY_GOAL_LIST:","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"skylee03"},"content":"            return new ListActivityGoalCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"skylee03"},"content":"        /* Diet Management */","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_DIET_GOAL_SET:","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"skylee03"},"content":"            return new SetDietGoalCommand(DietParser.parseDietGoalSetEdit(commandArgs));","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_DIET_GOAL_EDIT:","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"skylee03"},"content":"            return new EditDietGoalCommand(DietParser.parseDietGoalSetEdit(commandArgs));","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_DIET_GOAL_LIST:","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"skylee03"},"content":"            return new ListDietGoalCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_DIET_GOAL_DELETE:","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"skylee03"},"content":"            return new DeleteDietGoalCommand(DietParser.parseDietGoalDelete(commandArgs));","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_DIET_ADD:","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"skylee03"},"content":"            return new AddDietCommand(DietParser.parseDiet(commandArgs));","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_DIET_EDIT:","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"skylee03"},"content":"            return new EditDietCommand(DietParser.parseDietIndex(commandArgs), DietParser.parseDietEdit(commandArgs));","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_DIET_DELETE:","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"skylee03"},"content":"            return new DeleteDietCommand(DietParser.parseDietIndex(commandArgs));","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_DIET_LIST:","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"skylee03"},"content":"            return new ListDietCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_DIET_FIND:","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"skylee03"},"content":"            return new FindDietCommand(parseDate(commandArgs));","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"skylee03"},"content":"        default:","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"skylee03"},"content":"            throw new AthletiException(Message.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"skylee03"},"content":"     * Parses the raw date time input provided by the user.","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"skylee03"},"content":"     * @param datetime The raw user input containing the date time.","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"skylee03"},"content":"     * @return datetimeParsed   The parsed LocalDateTime object.","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"skylee03"},"content":"     * @throws AthletiException If the input format is invalid.","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"skylee03"},"content":"    public static LocalDateTime parseDateTime(String datetime) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"skylee03"},"content":"        LocalDateTime datetimeParsed;","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"skylee03"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"skylee03"},"content":"            datetimeParsed \u003d LocalDateTime.parse(datetime.replace(\" \", \"T\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"skylee03"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"skylee03"},"content":"            throw new AthletiException(Message.MESSAGE_DATETIME_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"skylee03"},"content":"        return datetimeParsed;","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"skylee03"},"content":"    public static LocalDate parseDate(String date) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"skylee03"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"skylee03"},"content":"            return LocalDate.parse(date);","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"skylee03"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"skylee03"},"content":"            throw new AthletiException(Message.MESSAGE_DATE_INVALID);","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"skylee03":159,"AlWo223":6}},{"path":"src/main/java/athleticli/parser/SleepParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.sleep.AddSleepCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.sleep.DeleteSleepCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.sleep.EditSleepCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"public class SleepParser {","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"    //@@author  DaDevChia","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"     * Parses the raw user input for an add sleep command and returns the corresponding command object.","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"     * @param commandArgs The raw user input containing the arguments.","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"     * @return An object representing the slee0 add command.","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"    public static AddSleepCommand parseSleepAdd(String commandArgs) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"        final int startTimeIndex \u003d commandArgs.indexOf(Parameter.START_TIME_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"        final int endTimeIndex \u003d commandArgs.indexOf(Parameter.END_TIME_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"        if (startTimeIndex \u003d\u003d -1 || endTimeIndex \u003d\u003d -1 || startTimeIndex \u003e endTimeIndex) {","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"            throw new AthletiException(Message.ERRORMESSAGE_PARSER_SLEEP_NO_START_END_DATETIME);","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"        final String startTimeStr \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"                commandArgs.substring(startTimeIndex + Parameter.START_TIME_SEPARATOR.length(), endTimeIndex)","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"                        .trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"        final String endTimeStr \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"                commandArgs.substring(endTimeIndex + Parameter.END_TIME_SEPARATOR.length()).trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"        if (startTimeStr.isEmpty() || endTimeStr.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"            throw new AthletiException(Message.ERRORMESSAGE_PARSER_SLEEP_NO_START_END_DATETIME);","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"        // Convert the strings to LocalDateTime","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"        final LocalDateTime startTime \u003d Parser.parseDateTime(startTimeStr);","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"        final LocalDateTime endTime \u003d Parser.parseDateTime(endTimeStr);","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"        //Check if the start time is before the end time","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"        if (startTime.isAfter(endTime)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"            throw new AthletiException(Message.ERRORMESSAGE_PARSER_SLEEP_END_BEFORE_START);","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"        return new AddSleepCommand(startTime, endTime);","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"     * Parses the raw user input for a delete sleep command and returns the corresponding command object.","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"     * @param commandArgs The raw user input containing the arguments.","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"     * @return An object representing the sleep delete command.","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"    public static DeleteSleepCommand parseSleepDelete(String commandArgs) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"DaDevChia"},"content":"        int index;","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"DaDevChia"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"DaDevChia"},"content":"            index \u003d Integer.parseInt(commandArgs.trim());","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"DaDevChia"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"DaDevChia"},"content":"            throw new AthletiException(Message.ERRORMESSAGE_PARSER_SLEEP_DELETE_NO_INDEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"DaDevChia"},"content":"        return new DeleteSleepCommand(index);","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"DaDevChia"},"content":"     * Parses the raw user input for an edit sleep command and returns the corresponding command object.","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"DaDevChia"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"DaDevChia"},"content":"     * @param commandArgs The raw user input containing the arguments.","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"DaDevChia"},"content":"     * @return An object representing the sleep edit command.","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"DaDevChia"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"DaDevChia"},"content":"    public static EditSleepCommand parseSleepEdit(String commandArgs) throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"DaDevChia"},"content":"        final int startTimeIndex \u003d commandArgs.indexOf(Parameter.START_TIME_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"DaDevChia"},"content":"        final int endTimeIndex \u003d commandArgs.indexOf(Parameter.END_TIME_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"DaDevChia"},"content":"        int index;","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"DaDevChia"},"content":"        if (startTimeIndex \u003d\u003d -1 || endTimeIndex \u003d\u003d -1 || startTimeIndex \u003e endTimeIndex) {","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"DaDevChia"},"content":"            throw new AthletiException(Message.ERRORMESSAGE_PARSER_SLEEP_NO_START_END_DATETIME);","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"DaDevChia"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"DaDevChia"},"content":"            index \u003d Integer.parseInt(commandArgs.substring(0, startTimeIndex).trim());","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"DaDevChia"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"DaDevChia"},"content":"            throw new AthletiException(Message.ERRORMESSAGE_PARSER_SLEEP_EDIT_NO_INDEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"DaDevChia"},"content":"        String startTimeStr \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"DaDevChia"},"content":"                commandArgs.substring(startTimeIndex + Parameter.START_TIME_SEPARATOR.length(), endTimeIndex)","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"DaDevChia"},"content":"                        .trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"DaDevChia"},"content":"        String endTimeStr \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"DaDevChia"},"content":"                commandArgs.substring(endTimeIndex + Parameter.END_TIME_SEPARATOR.length()).trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"DaDevChia"},"content":"        if (startTimeStr.isEmpty() || endTimeStr.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"DaDevChia"},"content":"            throw new AthletiException(Message.ERRORMESSAGE_PARSER_SLEEP_NO_START_END_DATETIME);","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"DaDevChia"},"content":"        // Convert the strings to LocalDateTime","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"DaDevChia"},"content":"        LocalDateTime startTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"DaDevChia"},"content":"        LocalDateTime endTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"DaDevChia"},"content":"        startTime \u003d Parser.parseDateTime(startTimeStr);","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"DaDevChia"},"content":"        endTime \u003d Parser.parseDateTime(endTimeStr);","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"DaDevChia"},"content":"        //Check if the start time is before the end time","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"DaDevChia"},"content":"        if (startTime.isAfter(endTime)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"DaDevChia"},"content":"            throw new AthletiException(Message.ERRORMESSAGE_PARSER_SLEEP_END_BEFORE_START);","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"DaDevChia"},"content":"        return new EditSleepCommand(index, startTime, endTime);","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"skylee03":11,"DaDevChia":104}},{"path":"src/main/java/athleticli/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.storage;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.io.File;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.WrappedIOException;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":" * Defines the basic methods for file storage.","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"public class Storage {","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"     * Saves strings into a file.","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"     * @param path      The path to the file.","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"     * @param items     The stream of strings.","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"     * @throws IOException","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"    public static void save(String path, Stream\u003cString\u003e items) throws IOException {","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"            file.createNewFile();","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"        FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"        try {","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"            items.filter(Objects::nonNull).forEachOrdered(str -\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"                try {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"                    fileWriter.write(str);","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":"                    throw new WrappedIOException(e);","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"skylee03"},"content":"                }","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"skylee03"},"content":"            });","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"skylee03"},"content":"        } catch (WrappedIOException e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"skylee03"},"content":"            throw e.getCause();","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"skylee03"},"content":"        fileWriter.close();","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"skylee03"},"content":"    public static Stream\u003cString\u003e load(String path) throws IOException {","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"skylee03"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"skylee03"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"skylee03"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"skylee03"},"content":"            file.createNewFile();","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"skylee03"},"content":"        return Files.lines(Path.of(path));","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"skylee03":53}},{"path":"src/main/java/athleticli/ui/Message.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.ui;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import athleticli.parser.CommandName;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"public class Message {","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"    public static final String PROMPT \u003d \"\u003e \";","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"    public static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"    public static final String PREFIX_MESSAGE \u003d \" \";","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"    public static final String PREFIX_EXCEPTION \u003d \"OOPS!!! \";","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"    public static final String MESSAGE_BYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"    public static final String[] MESSAGE_HELLO \u003d {\"Hello! I\u0027m AthletiCLI!\", \"What can I do for you?\"};","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"    public static final String MESSAGE_SAVE \u003d \"File saved successfully!\";","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_CAPTION_MISSING \u003d \"The caption of an activity cannot be empty!\";","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DURATION_MISSING \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"            \"Please specify the activity duration using \\\"duration/\\\"!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DISTANCE_MISSING \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"            \"Please specify the activity distance using \\\"distance/\\\"!\";","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DATETIME_MISSING \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"            \"Please specify date and time of the activity using \\\"datetime/\\\"!\";","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_CALORIES_MISSING \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"            \"Please specify the calories burned using \\\"calories/\\\"!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_ACTIVITYGOAL_SPORT_MISSING \u003d \"Please specify the sport using \\\"sport/\\\"!\";","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_ACTIVITYGOAL_TYPE_MISSING \u003d \"Please specify the goal type using \\\"type/\\\"!\";","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_ACTIVITYGOAL_PERIOD_MISSING \u003d \"Please specify the period using \\\"period/\\\"!\";","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_ACTIVITYGOAL_TARGET_MISSING \u003d \"Please specify the target value using \" +","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"            \"\\\"target/\\\"!\";","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_PROTEIN_MISSING \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"            \"Please specify the protein intake using \\\"protein/\\\"!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_CARB_MISSING \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"            \"Please specify the carbohydrate intake using \\\"carb/\\\"!\";","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_FAT_MISSING \u003d \"Please specify the fat intake using \\\"fat/\\\"!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DIET_DATETIME_MISSING \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"            \"Please specify the datetime of the diet using \\\"datetime/\\\"!\";","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_CAPTION_EMPTY \u003d \"The caption of an activity cannot be empty!\";","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_DURATION_EMPTY \u003d \"The duration of an activity cannot be empty!\";","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_DISTANCE_EMPTY \u003d \"The distance of an activity cannot be empty!\";","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_DATETIME_EMPTY \u003d \"The datetime of an activity cannot be empty!\";","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_CALORIES_EMPTY \u003d \"The calories burned cannot be empty!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_PROTEIN_EMPTY \u003d \"The protein intake cannot be empty!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_CARB_EMPTY \u003d \"The carbohydrate intake cannot be empty!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_FAT_EMPTY \u003d \"The fat intake cannot be empty!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DIET_DATETIME_EMPTY \u003d \"The datetime of a diet cannot be empty!\";","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DIET_UPDATED \u003d \"Ok, I\u0027ve updated this diet:\";","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DURATION_INVALID \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"            \"The duration of an activity must be in the format \\\"HH:mm:ss\\\"!\";","lastModifiedDate":"2023-11-05"},{"lineNumber":46,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DISTANCE_INVALID \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"nihalzp"},"content":"            \"The distance of an activity must be a positive integer!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_DISTANCE_NEGATIVE \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"            \"The distance of an activity cannot be negative!\";","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_TARGET_NEGATIVE \u003d \"The target value cannot be negative. \" +","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"            \"You wanna make progress, not regress ;)\";","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_TARGET_INVALID \u003d \"The target value of an activity goal must be a positive \" +","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"            \"integer!\";","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DATETIME_INVALID \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"nihalzp"},"content":"            \"The datetime must be in the format \\\"yyyy-MM-dd HH:mm\\\"!\";","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DATE_INVALID \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"nihalzp"},"content":"            \"The date must be in the format \\\"yyyy-MM-dd\\\"!\";","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_CALORIES_INVALID \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"nihalzp"},"content":"            \"The calories burned must be a non-negative integer!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_SPORT_INVALID \u003d \"The sport of an activity must be one of the following: \" +","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"            \"\\\"running\\\", \\\"cycling\\\", \\\"swimming\\\", \\\"general\\\"!\";","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_TYPE_INVALID \u003d \"The type of an activity must be either \\\"distance\\\" or \" +","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"            \"\\\"duration\\\"!\";","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_PERIOD_INVALID \u003d \"The period of an activity must be one of the \" +","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"            \"following: \\\"daily\\\", \\\"weekly\\\", \\\"monthly\\\", \\\"yearly\\\"!\";","lastModifiedDate":"2023-11-05"},{"lineNumber":66,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_PROTEIN_INVALID \u003d \"The protein intake must be a non-negative integer!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_CARB_INVALID \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"nihalzp"},"content":"            \"The carbohydrate intake must be a non-negative integer!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_FAT_INVALID \u003d \"The fat intake must be a non-negative integer!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"skylee03"},"content":"    public static final String MESSAGE_ACTIVITY_FIND \u003d \"I\u0027ve found these activities:\";","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_ACTIVITY_ADDED \u003d \"Well done! I\u0027ve added this activity:\";","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_ACTIVITY_DELETED \u003d \"Gotcha, I\u0027ve deleted this activity:\";","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_ACTIVITY_GOAL_ADDED \u003d \"Alright, I\u0027ve added this activity goal:\";","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_ACTIVITY_GOAL_EDITED \u003d \"Alright, I\u0027ve edited this activity goal:\";","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_NO_SUCH_GOAL_EXISTS \u003d \"No such goal exists.\";","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_ACTIVITY_GOAL_LIST \u003d \"These are your activity goals:\";","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DIET_ADDED \u003d \"Well done! I\u0027ve added this diet:\";","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_ELEVATION_MISSING \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"nihalzp"},"content":"            \"Please specify the elevation gain using \\\"elevation/\\\"!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"yicheng-toh"},"content":"    public static final String MESSAGE_ELEVATION_EMPTY \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"yicheng-toh"},"content":"            \"The elevation gain of an activity cannot be empty!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_ELEVATION_INVALID \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"nihalzp"},"content":"            \"The elevation gain of an activity must be an integer!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_ACTIVITY_INDEX_INVALID \u003d \"The activity index must be an integer!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_ACTIVITY_INDEX_OUT_OF_BOUNDS \u003d \"The activity index does not exist, check your \" +","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"AlWo223"},"content":"            \"list for the correct index!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_SWIMMINGSTYLE_MISSING \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"nihalzp"},"content":"            \"Please specify the swimming style using \\\"style/\\\"!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_SWIMMINGSTYLE_INVALID \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"nihalzp"},"content":"            \"The swimming style of an activity must be one of \" +","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"AlWo223"},"content":"                    \"the following: \\\"butterfly\\\", \\\"backstroke\\\", \\\"breaststroke\\\", \\\"freestyle\\\"!\";","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_ACTIVITY_COUNT \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"AlWo223"},"content":"            \"You have tracked a total of %d activities. Keep pushing!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_ACTIVITY_LIST \u003d \"These are the activities you have tracked so far:\";","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_ACTIVITY_EDIT_INVALID \u003d \"Oops, the format of the edit command is wrong! Please\" +","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"AlWo223"},"content":"            \" provide the index and the updated entry!\";","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_ACTIVITY_UPDATED \u003d \"Ok, I\u0027ve updated this activity:\";","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DIET_COUNT \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"nihalzp"},"content":"            \"Now you have tracked a total of %d diets. Keep grinding!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_ACTIVITY_FIRST \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"nihalzp"},"content":"            \"Now you have tracked your first activity. This is just the beginning!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"yicheng-toh"},"content":"    public static final String MESSAGE_DIET_GOAL_TARGET_VALUE_NOT_POSITIVE_INT \u003d \"The target value for nutrients \" +","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"yicheng-toh"},"content":"            \"must be a positive integer!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"yicheng-toh"},"content":"    public static final String MESSAGE_DIET_GOAL_INVALID_NUTRIENT \u003d \"Key word to nutrients goals has \" +","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"yicheng-toh"},"content":"            \"to be one of the following: \\\"calories\\\", \\\"protein\\\", \\\"carb\\\", \\\"fats\\\"!\";","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"yicheng-toh"},"content":"    public static final String MESSAGE_DIET_GOAL_ALREADY_EXISTED \u003d \"Diet goal for %s has already existed. \" +","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"yicheng-toh"},"content":"            \"Please edit the goal instead!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"yicheng-toh"},"content":"    public static final String MESSAGE_DIET_GOAL_NOT_EXISTED \u003d \"Diet goal for %s is not present. \" +","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"yicheng-toh"},"content":"            \"Please add the goal before editing it!\";","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"yicheng-toh"},"content":"    public static final String MESSAGE_DIET_GOAL_COUNT \u003d \"Now you have %d diet goal(s).\";","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"yicheng-toh"},"content":"    public static final String MESSAGE_DIET_GOAL_NONE \u003d \"There are no goals at the moment. Add a diet goal to start.\";","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"yicheng-toh"},"content":"    public static final String MESSAGE_DIET_GOAL_LIST_HEADER \u003d \"These are your goal(s):\\n\";","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"yicheng-toh"},"content":"    public static final String MESSAGE_DIET_GOAL_INCORRECT_INTEGER_FORMAT \u003d \"Please provide a positive integer.\\n\";","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"yicheng-toh"},"content":"    public static final String MESSAGE_DIET_GOAL_EMPTY_DIET_GOAL_LIST \u003d \"There is no diet goals at the moment. \" +","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"yicheng-toh"},"content":"            \"Please add one to continue.\\n\";","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"yicheng-toh"},"content":"    public static final String MESSAGE_DIET_GOAL_DELETE_HEADER \u003d \"The following goal has been deleted:\\n\";","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"yicheng-toh"},"content":"    public static final String MESSAGE_DIET_GOAL_OUT_OF_BOUND \u003d \"Unable to fetch diet goal. \" +","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"yicheng-toh"},"content":"            \"Please enter a value from 1 to %d.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"yicheng-toh"},"content":"    public static final String MESSAGE_DIET_GOAL_INSUFFICIENT_INPUT \u003d \"Please input the following keywords \" +","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"yicheng-toh"},"content":"            \"to create or edit your diet goals:\\n \u003cDAILY/WEEKLY\u003e followed by \\\"calories\\\", \\\"protein\\\", \" +","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"yicheng-toh"},"content":"            \"\\\"carb\\\", \\\"fats\\\" and then followed by the target value.\\n\" + \"\\te.g. WEEKLY calories/100\";","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"yicheng-toh"},"content":"    public static final String MESSAGE_DIET_GOAL_REPEATED_NUTRIENT \u003d \"Please ensure that there are \" +","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"yicheng-toh"},"content":"            \"no repetitions for your diet goal nutrients.\";","lastModifiedDate":"2023-10-22"},{"lineNumber":125,"author":{"gitId":"yicheng-toh"},"content":"    public static final String MESSAGE_DIET_GOAL_LOAD_ERROR \u003d \"Some error has been encountered \" +","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"yicheng-toh"},"content":"            \"while loading diet goals.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"yicheng-toh"},"content":"    public static final String MESSAGE_DIET_GOAL_TYPE_CLASH \u003d \"You cannot have healthy goals and unhealthy goals \"","lastModifiedDate":"2023-11-04"},{"lineNumber":128,"author":{"gitId":"yicheng-toh"},"content":"            + \"for the same nutrient.\";","lastModifiedDate":"2023-11-04"},{"lineNumber":129,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DIET_FIRST \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"nihalzp"},"content":"            \"Now you have tracked your first diet. This is just the beginning!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_INVALID_DIET_INDEX \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"nihalzp"},"content":"            \"The diet index is invalid! Please enter a valid diet index!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DIET_INDEX_TYPE_INVALID \u003d \"The diet index must be a positive integer!\";","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DIET_DELETED \u003d \"Noted. I\u0027ve removed this diet:\";","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DIET_LIST \u003d \"Here are the diets in your list:\";","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"skylee03"},"content":"    public static final String MESSAGE_DIET_FIND \u003d \"I\u0027ve found these diets:\";","lastModifiedDate":"2023-10-23"},{"lineNumber":138,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DIET_NO_CHANGE_REQUESTED \u003d \"No change requested. Specify the appropriate \" +","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"nihalzp"},"content":"            \"parameters to edit the diet.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_SLEEP_DELETE_INVALID_INDEX \u003d \"Invalid index. Please enter a valid index.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_SLEEP_DELETE_RETURN \u003d \"Got it. I\u0027ve deleted this sleep record at index %d: %s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_SLEEP_EDIT_RETURN \u003d \"Got it. I\u0027ve changed this sleep record at index %d:\";","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_SLEEP_LIST \u003d \"Here are the sleep records in your list:\\n\";","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_SLEEP_LIST_EMPTY \u003d \"You have no sleep records in your list.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_SLEEP_ADD_RETURN_1 \u003d \"Got it. I\u0027ve added this sleep record:\";","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"DaDevChia"},"content":"    public static final String MESSAGE_SLEEP_ADD_RETURN_2 \u003d \"Now you have %d sleep records in the list.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"skylee03"},"content":"    public static final String MESSAGE_SLEEP_FIND \u003d \"I\u0027ve found these sleeps:\";","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"DaDevChia"},"content":"    public static final String ERRORMESSAGE_PARSER_SLEEP_INVALID_DATE_TIME_FORMAT \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"DaDevChia"},"content":"            \"Invalid date-time format. Please use dd-MM-yyyy HH:mm.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"DaDevChia"},"content":"    public static final String ERRORMESSAGE_PARSER_SLEEP_NO_START_END_DATETIME \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"DaDevChia"},"content":"            \"Please specify both the start and end time of your sleep.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"DaDevChia"},"content":"    public static final String ERRORMESSAGE_PARSER_SLEEP_END_BEFORE_START \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"DaDevChia"},"content":"            \"Please specify the start time of your sleep before the end time.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"DaDevChia"},"content":"    public static final String ERRORMESSAGE_PARSER_SLEEP_DELETE_NO_INDEX \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"DaDevChia"},"content":"            \"Please specify the index of the sleep record you want to delete.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"DaDevChia"},"content":"    public static final String ERRORMESSAGE_PARSER_SLEEP_EDIT_NO_INDEX \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"DaDevChia"},"content":"            \"Please specify the index of the sleep record you want to edit.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"DaDevChia"},"content":"    public static final String ERRORMESSAGE_SLEEP_EDIT_INDEX_OOBE \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"DaDevChia"},"content":"            \"The index of the sleep record you want to edit is out of bounds.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"DaDevChia"},"content":"    public static final String ERRORMESSAGE_SLEEP_DELETE_INDEX_OOBE \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"DaDevChia"},"content":"            \"The index of the sleep record you want to delete is out of bounds.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"skylee03"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"skylee03"},"content":"    public static final String MESSAGE_IO_EXCEPTION \u003d \"An I/O exception occurred.\";","lastModifiedDate":"2023-10-22"},{"lineNumber":165,"author":{"gitId":"skylee03"},"content":"    public static final String MESSAGE_LOAD_EXCEPTION \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"skylee03"},"content":"            \"An exception occurred when loading %s. Please fix or delete it and rerun AthletiCLI!\";","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":168,"author":{"gitId":"skylee03"},"content":"    /* Help Messages */","lastModifiedDate":"2023-10-21"},{"lineNumber":169,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_ADD_ACTIVITY \u003d CommandName.COMMAND_ACTIVITY","lastModifiedDate":"2023-10-21"},{"lineNumber":170,"author":{"gitId":"skylee03"},"content":"            + \" CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME\";","lastModifiedDate":"2023-10-21"},{"lineNumber":171,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_ADD_RUN \u003d CommandName.COMMAND_RUN","lastModifiedDate":"2023-10-21"},{"lineNumber":172,"author":{"gitId":"skylee03"},"content":"            + \" CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME elevation/ELEVATION\";","lastModifiedDate":"2023-10-21"},{"lineNumber":173,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_ADD_SWIM \u003d CommandName.COMMAND_SWIM","lastModifiedDate":"2023-10-21"},{"lineNumber":174,"author":{"gitId":"skylee03"},"content":"            + \" CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME laps/LAPS\";","lastModifiedDate":"2023-10-21"},{"lineNumber":175,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_ADD_CYCLE \u003d CommandName.COMMAND_CYCLE","lastModifiedDate":"2023-10-21"},{"lineNumber":176,"author":{"gitId":"skylee03"},"content":"            + \" CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME elevation/ELEVATION\";","lastModifiedDate":"2023-10-21"},{"lineNumber":177,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_DELETE_ACTIVITY \u003d CommandName.COMMAND_ACTIVITY_DELETE","lastModifiedDate":"2023-10-21"},{"lineNumber":178,"author":{"gitId":"skylee03"},"content":"            + \" INDEX\";","lastModifiedDate":"2023-10-21"},{"lineNumber":179,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_LIST_ACTIVITY \u003d CommandName.COMMAND_ACTIVITY_LIST","lastModifiedDate":"2023-10-21"},{"lineNumber":180,"author":{"gitId":"skylee03"},"content":"            + \" [-d]\";","lastModifiedDate":"2023-10-21"},{"lineNumber":181,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_EDIT_ACTIVITY \u003d CommandName.COMMAND_ACTIVITY_EDIT","lastModifiedDate":"2023-10-21"},{"lineNumber":182,"author":{"gitId":"skylee03"},"content":"            + \" INDEX CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME\";","lastModifiedDate":"2023-10-21"},{"lineNumber":183,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_EDIT_RUN \u003d CommandName.COMMAND_RUN_EDIT","lastModifiedDate":"2023-10-21"},{"lineNumber":184,"author":{"gitId":"skylee03"},"content":"            + \" INDEX CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME elevation/ELEVATION\";","lastModifiedDate":"2023-10-21"},{"lineNumber":185,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_EDIT_SWIM \u003d CommandName.COMMAND_SWIM_EDIT","lastModifiedDate":"2023-10-21"},{"lineNumber":186,"author":{"gitId":"skylee03"},"content":"            + \" INDEX CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME laps/LAPS\";","lastModifiedDate":"2023-10-21"},{"lineNumber":187,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_EDIT_CYCLE \u003d CommandName.COMMAND_CYCLE_EDIT","lastModifiedDate":"2023-10-21"},{"lineNumber":188,"author":{"gitId":"skylee03"},"content":"            + \" INDEX CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME elevation/ELEVATION\";","lastModifiedDate":"2023-10-21"},{"lineNumber":189,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_FIND_ACTIVITY \u003d CommandName.COMMAND_ACTIVITY_FIND","lastModifiedDate":"2023-10-23"},{"lineNumber":190,"author":{"gitId":"skylee03"},"content":"            + \" DATE\";","lastModifiedDate":"2023-10-23"},{"lineNumber":191,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_ADD_DIET \u003d CommandName.COMMAND_DIET_ADD","lastModifiedDate":"2023-10-21"},{"lineNumber":192,"author":{"gitId":"nihalzp"},"content":"            + \" calories/CALORIES protein/PROTEIN carb/CARB fat/FAT datetime/DATETIME\";","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"nihalzp"},"content":"    public static final String HELP_EDIT_DIET \u003d CommandName.COMMAND_DIET_EDIT","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"nihalzp"},"content":"            + \" INDEX calories/CALORIES protein/PROTEIN carb/CARB fat/FAT datetime/DATETIME\";","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_DELETE_DIET \u003d CommandName.COMMAND_DIET_DELETE","lastModifiedDate":"2023-10-21"},{"lineNumber":196,"author":{"gitId":"skylee03"},"content":"            + \" INDEX\";","lastModifiedDate":"2023-10-21"},{"lineNumber":197,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_LIST_DIET \u003d CommandName.COMMAND_DIET_LIST;","lastModifiedDate":"2023-10-21"},{"lineNumber":198,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_FIND_DIET \u003d CommandName.COMMAND_DIET_FIND","lastModifiedDate":"2023-10-23"},{"lineNumber":199,"author":{"gitId":"skylee03"},"content":"            + \" DATE\";","lastModifiedDate":"2023-10-23"},{"lineNumber":200,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_ADD_SLEEP \u003d CommandName.COMMAND_SLEEP_ADD","lastModifiedDate":"2023-10-21"},{"lineNumber":201,"author":{"gitId":"skylee03"},"content":"            + \" start/START end/END\";","lastModifiedDate":"2023-10-21"},{"lineNumber":202,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_LIST_SLEEP \u003d CommandName.COMMAND_SLEEP_LIST;","lastModifiedDate":"2023-10-21"},{"lineNumber":203,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_DELETE_SLEEP \u003d CommandName.COMMAND_SLEEP_DELETE","lastModifiedDate":"2023-10-21"},{"lineNumber":204,"author":{"gitId":"skylee03"},"content":"            + \" INDEX\";","lastModifiedDate":"2023-10-21"},{"lineNumber":205,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_EDIT_SLEEP \u003d CommandName.COMMAND_SLEEP_EDIT","lastModifiedDate":"2023-10-21"},{"lineNumber":206,"author":{"gitId":"skylee03"},"content":"            + \" INDEX start/START end/END\";","lastModifiedDate":"2023-10-21"},{"lineNumber":207,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_FIND_SLEEP \u003d CommandName.COMMAND_SLEEP_FIND","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"skylee03"},"content":"            + \" DATE\";","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_SAVE \u003d CommandName.COMMAND_SAVE;","lastModifiedDate":"2023-10-22"},{"lineNumber":210,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_BYE \u003d CommandName.COMMAND_BYE;","lastModifiedDate":"2023-10-21"},{"lineNumber":211,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_HELP \u003d CommandName.COMMAND_HELP","lastModifiedDate":"2023-10-21"},{"lineNumber":212,"author":{"gitId":"skylee03"},"content":"            + \" [COMMAND]\";","lastModifiedDate":"2023-10-21"},{"lineNumber":213,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_FIND \u003d CommandName.COMMAND_FIND","lastModifiedDate":"2023-10-23"},{"lineNumber":214,"author":{"gitId":"skylee03"},"content":"            + \" DATE\";","lastModifiedDate":"2023-10-23"},{"lineNumber":215,"author":{"gitId":"skylee03"},"content":"    public static final String HELP_DETAILS \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":216,"author":{"gitId":"skylee03"},"content":"            \"Please check our user guide (https://ay2324s1-cs2113-t17-1.github.io/tp/) for details.\";","lastModifiedDate":"2023-10-21"},{"lineNumber":217,"author":{"gitId":"AlWo223"},"content":"    public static final String ACTIVITY_STORAGE_INVALID_INDICATOR \u003d \"Invalid activity indicator, file corrupted.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":218,"author":{"gitId":"AlWo223"},"content":"    public static final String ACTIVITY_STORAGE_INVALID_FORMAT \u003d \"Invalid activity format, file corrupted.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":219,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_ACTIVITY_EDIT_EMPTY \u003d \"You have not specified any changes to the activity.\";","lastModifiedDate":"2023-11-05"},{"lineNumber":220,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_SWIMMINGSTYLE_EMPTY \u003d \"The swimming style of an activity cannot be empty!\";","lastModifiedDate":"2023-11-05"},{"lineNumber":221,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_ACTIVITY_INDEX_EMPTY \u003d \"The activity index cannot be empty!\";","lastModifiedDate":"2023-11-05"},{"lineNumber":222,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_ACTIVITY_ORDER_INVALID \u003d \"The order of the parameters is wrong, please refer \" +","lastModifiedDate":"2023-11-05"},{"lineNumber":223,"author":{"gitId":"AlWo223"},"content":"            \"to the User Guide for the correct order.\";","lastModifiedDate":"2023-11-05"},{"lineNumber":224,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":67,"DaDevChia":22,"AlWo223":43,"yicheng-toh":30,"nihalzp":62}},{"path":"src/main/java/athleticli/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.ui;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":" * Defines the behavior of the CLI.","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"public class Ui {","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"    private static Ui uiInstance;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"    private final Scanner in;","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"     * Constructs a \u003ccode\u003eUi\u003c/code\u003e object, whose input \u003ccode\u003ein\u003c/code\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"     * and output \u003ccode\u003eout\u003c/code\u003e is the standard input and the standard","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"     * output, respectively.","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"    private Ui() {","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"     * Constructs a \u003ccode\u003eUi\u003c/code\u003e object, whose input is an \u003ccode\u003eInputStream\u003c/code\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"     * object \u003ccode\u003ein\u003c/code\u003e and output is an \u003ccode\u003ePrintStream\u003c/code\u003e object \u003ccode\u003eout\u003c/code\u003e.","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"     * @param in    The \u003ccode\u003eInputStream\u003c/code\u003e accepting the user\u0027s input.","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"     * @param out   The \u003ccode\u003ePrintStream\u003c/code\u003e displaying the program\u0027s output.","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"    private Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"        assert in !\u003d null : \"Input stream `in` should not be null\";","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"        assert out !\u003d null : \"Print stream `out` should not be null\";","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"skylee03"},"content":"     * Returns the singleton instance of `Ui`.","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"skylee03"},"content":"     * @return  The singleton instance of `Ui`.","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"skylee03"},"content":"    public static Ui getInstance() {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"skylee03"},"content":"        if (uiInstance \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"skylee03"},"content":"            uiInstance \u003d new Ui();","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"skylee03"},"content":"        return uiInstance;","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"skylee03"},"content":"     * Returns the user\u0027s input.","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"skylee03"},"content":"     * @return The user\u0027s input.","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"skylee03"},"content":"    public String getUserCommand() {","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"skylee03"},"content":"        out.print(Message.PROMPT);","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"skylee03"},"content":"        return in.nextLine();","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"skylee03"},"content":"     * Shows the \u003ccode\u003emessages\u003c/code\u003e in a beautiful format.","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"skylee03"},"content":"     * @param messages  The messages to be shown.","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"skylee03"},"content":"    public void showMessages(String... messages) {","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"skylee03"},"content":"        assert messages !\u003d null : \"Messages should not be null\";","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"skylee03"},"content":"        out.print(Message.LINE);","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"skylee03"},"content":"        for (String message : messages) {","lastModifiedDate":"2023-10-08"},{"lineNumber":69,"author":{"gitId":"skylee03"},"content":"            out.println(Message.PREFIX_MESSAGE + message);","lastModifiedDate":"2023-10-08"},{"lineNumber":70,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":71,"author":{"gitId":"skylee03"},"content":"        out.println(Message.LINE);","lastModifiedDate":"2023-10-08"},{"lineNumber":72,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":73,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":74,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":75,"author":{"gitId":"skylee03"},"content":"     * Shows message for exception \u003ccode\u003ee\u003c/code\u003e.","lastModifiedDate":"2023-10-08"},{"lineNumber":76,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":77,"author":{"gitId":"skylee03"},"content":"     * @param e The exception whose message will be shown.","lastModifiedDate":"2023-10-08"},{"lineNumber":78,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":79,"author":{"gitId":"skylee03"},"content":"    public void showException(Exception e) {","lastModifiedDate":"2023-10-08"},{"lineNumber":80,"author":{"gitId":"skylee03"},"content":"        assert e !\u003d null : \"Exception `e` should not be null\";","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"skylee03"},"content":"        showMessages(Message.PREFIX_EXCEPTION + e.getMessage());","lastModifiedDate":"2023-10-08"},{"lineNumber":82,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":83,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":84,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":85,"author":{"gitId":"skylee03"},"content":"     * Shows the welcome message.","lastModifiedDate":"2023-10-08"},{"lineNumber":86,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":87,"author":{"gitId":"skylee03"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-10-08"},{"lineNumber":88,"author":{"gitId":"skylee03"},"content":"        showMessages(Message.MESSAGE_HELLO);","lastModifiedDate":"2023-10-08"},{"lineNumber":89,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":90,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":90}},{"path":"src/test/java/athleticli/commands/activity/AddActivityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Run;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"class AddActivityCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    private static final String CAPTION \u003d \"Night Run\";","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    private static final LocalTime DURATION \u003d LocalTime.of(1, 24);","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"    private static final int DISTANCE \u003d 18120;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    private static final LocalDateTime DATE \u003d LocalDateTime.of(2023, 10, 10, 23, 21);","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    private static final int ELEVATION \u003d 60;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"    private Run run;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    private AddActivityCommand addActivityCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    private Data data;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"    void setUp() {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"        run \u003d new Run(CAPTION, DURATION, DISTANCE, DATE, ELEVATION);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"        addActivityCommand \u003d new AddActivityCommand(run);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"    void execute_addsActivity_returnsConfirmationMessage() {","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"        String[] expected \u003d {\"Well done! I\u0027ve added this activity:\", run.toString(), \"You have tracked a total of 2 \" +","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"                \"activities. Keep pushing!\"};","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"        addActivityCommand.execute(data);","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"        String[] actual \u003d addActivityCommand.execute(data);","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"        for (int i \u003d 0; i \u003c actual.length; i++) {","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"            assertEquals(expected[i], actual[i]);","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"    void execute_addsFirstActivity_returnsFirstActivityMessage() {","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"        String[] expected \u003d {\"Well done! I\u0027ve added this activity:\", run.toString(), \"Now you have tracked your \" +","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"                \"first activity. This is just the beginning!\"};","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"        String[] actual \u003d addActivityCommand.execute(data);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"        for (int i \u003d 0; i \u003c actual.length; i++) {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"            assertEquals(expected[i], actual[i]);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlWo223":54}},{"path":"src/test/java/athleticli/commands/activity/DeleteActivityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Run;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"class DeleteActivityCommandTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"    private static final String CAPTION \u003d \"Night Run\";","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    private static final LocalTime DURATION \u003d LocalTime.of(1, 24);","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    private static final int DISTANCE \u003d 18120;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"    private static final LocalDateTime DATE \u003d LocalDateTime.of(2023, 10, 10, 23, 21);","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    private static final int ELEVATION \u003d 60;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    private Run run;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"    private DeleteActivityCommand deleteActivityCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"    private Data data;","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"    void setUp() {","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"        run \u003d new Run(CAPTION, DURATION, DISTANCE, DATE, ELEVATION);","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"        AddActivityCommand addActivityCommand \u003d new AddActivityCommand(run);","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"        addActivityCommand.execute(data);","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"    void execute_validIndex_activityDeleted() throws AthletiException {","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"        String[] expected \u003d {\"Gotcha, I\u0027ve deleted this activity:\", run.toString(), \"You have tracked a total of 0 \" +","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"                \"activities. Keep pushing!\"};","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"        deleteActivityCommand \u003d new DeleteActivityCommand(1);","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"        String[] actual \u003d deleteActivityCommand.execute(data);","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"        for (int i \u003d 0; i \u003c actual.length; i++) {","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"            assertEquals(expected[i], actual[i]);","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"    void execute_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"        deleteActivityCommand \u003d new DeleteActivityCommand(0);","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"        assertThrows(AthletiException.class, () -\u003e deleteActivityCommand.execute(data));","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"AlWo223":50}},{"path":"src/test/java/athleticli/commands/activity/EditActivityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Activity;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.ActivityChanges;","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Run;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"class EditActivityCommandTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    private static final String CAPTION \u003d \"Night Run\";","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    private static final String UPDATED_CAPTION \u003d \"Morning Run\";","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"    private static final LocalTime DURATION \u003d LocalTime.of(1, 24);","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    private static final LocalTime UPDATED_DURATION \u003d LocalTime.of(1, 30);","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    private static final int DISTANCE \u003d 18120;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"    private static final LocalDateTime DATE \u003d LocalDateTime.of(2023, 10, 10, 23, 21);","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"    private static final LocalDateTime UPDATED_DATE \u003d LocalDateTime.of(2023, 10, 11, 23, 21);","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"    private AddActivityCommand addActivityCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"    private Data data;","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"    private Run run;","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"    private Run updatedRun;","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"    private ActivityChanges activityChanges;","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"    void setUp() {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"        Activity activity \u003d new Activity(CAPTION, DURATION, DISTANCE, DATE);","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"        addActivityCommand \u003d new AddActivityCommand(activity);","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"        addActivityCommand.execute(data);","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"        run \u003d new Run(CAPTION, DURATION, DISTANCE, DATE, 60);","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"        addActivityCommand \u003d new AddActivityCommand(run);","lastModifiedDate":"2023-11-05"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"        addActivityCommand.execute(data);","lastModifiedDate":"2023-11-05"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"        activityChanges \u003d new ActivityChanges();","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"        activityChanges.setCaption(CAPTION);","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"        activityChanges.setDuration(DURATION);","lastModifiedDate":"2023-11-05"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"        activityChanges.setStartDateTime(DATE);","lastModifiedDate":"2023-11-05"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"        updatedRun \u003d new Run(CAPTION, DURATION, DISTANCE, DATE, 60);","lastModifiedDate":"2023-11-05"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"    void execute_validIndex_activityEdited() throws AthletiException {","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"        EditActivityCommand editActivityCommand \u003d new EditActivityCommand(2, activityChanges);","lastModifiedDate":"2023-11-05"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"        editActivityCommand.execute(data);","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"        String[] expected \u003d {\"Ok, I\u0027ve updated this activity:\", updatedRun.toString(), \"You have tracked a total of 2\" +","lastModifiedDate":"2023-11-05"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"                \" \" +","lastModifiedDate":"2023-11-05"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"                \"activities. Keep pushing!\"};","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"        String[] actual \u003d editActivityCommand.execute(data);","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"        for (int i \u003d 0; i \u003c actual.length; i++) {","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"            assertEquals(expected[i], actual[i]);","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"        assertEquals(updatedRun.getCaption(), data.getActivities().get(1).getCaption());","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"        assertEquals(updatedRun.getMovingTime(), data.getActivities().get(1).getMovingTime());","lastModifiedDate":"2023-11-05"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"        assertEquals(updatedRun.getDistance(), data.getActivities().get(1).getDistance());","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"        assertEquals(updatedRun.getStartDateTime(), data.getActivities().get(1).getStartDateTime());","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"    void execute_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"        EditActivityCommand editActivityCommand \u003d new EditActivityCommand(3, activityChanges);","lastModifiedDate":"2023-11-05"},{"lineNumber":67,"author":{"gitId":"AlWo223"},"content":"        assertThrows(AthletiException.class, () -\u003e editActivityCommand.execute(data));","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"AlWo223":69}},{"path":"src/test/java/athleticli/commands/activity/EditActivityGoalCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.activity.ActivityGoal;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.activity.ActivityGoalList;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"class EditActivityGoalCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"    private Data data;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"    void setUp() {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"        ActivityGoalList activityGoals \u003d data.getActivityGoals();","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"        ActivityGoal goal1 \u003d new ActivityGoal(ActivityGoal.TimeSpan.WEEKLY, ActivityGoal.GoalType.DISTANCE,","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"                ActivityGoal.Sport.RUNNING, 10);","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"        ActivityGoal goal2 \u003d new ActivityGoal(ActivityGoal.TimeSpan.MONTHLY, ActivityGoal.GoalType.DURATION,","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"                ActivityGoal.Sport.CYCLING, 20);","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"        ActivityGoal goal3 \u003d new ActivityGoal(ActivityGoal.TimeSpan.YEARLY, ActivityGoal.GoalType.DISTANCE,","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"                ActivityGoal.Sport.SWIMMING, 30);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"        ActivityGoal goal4 \u003d new ActivityGoal(ActivityGoal.TimeSpan.DAILY, ActivityGoal.GoalType.DISTANCE,","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"                ActivityGoal.Sport.GENERAL, 40);","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"        activityGoals.add(goal1);","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"        activityGoals.add(goal2);","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"        activityGoals.add(goal3);","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"        activityGoals.add(goal4);","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"    void execute_existingActivityGoal_editsActivityGoal() throws athleticli.exceptions.AthletiException {","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"        ActivityGoal goal \u003d new ActivityGoal(athleticli.data.activity.ActivityGoal.TimeSpan.WEEKLY,","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"                athleticli.data.activity.ActivityGoal.GoalType.DISTANCE,","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"                athleticli.data.activity.ActivityGoal.Sport.RUNNING, 100);","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"        EditActivityGoalCommand command \u003d new EditActivityGoalCommand(goal);","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"        String[] expected \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"                new String[]{athleticli.ui.Message.MESSAGE_ACTIVITY_GOAL_EDITED, goal.toString(data)};","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"        String[] actual \u003d command.execute(data);","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"nihalzp"},"content":"    void execute_nonExistingActivityGoal_throwsAthletiException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"nihalzp"},"content":"        ActivityGoal goal \u003d new ActivityGoal(athleticli.data.activity.ActivityGoal.TimeSpan.YEARLY,","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"nihalzp"},"content":"                athleticli.data.activity.ActivityGoal.GoalType.DISTANCE,","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"nihalzp"},"content":"                athleticli.data.activity.ActivityGoal.Sport.RUNNING, 100);","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"nihalzp"},"content":"        EditActivityGoalCommand command \u003d new EditActivityGoalCommand(goal);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e command.execute(data));","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"nihalzp":55}},{"path":"src/test/java/athleticli/commands/activity/ListActivityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Activity;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.ActivityList;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"class ListActivityCommandTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    private static final String CAPTION \u003d \"Night Run\";","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    private static final LocalTime DURATION \u003d LocalTime.of(1, 24);","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"    private static final int DISTANCE \u003d 18120;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    private static final LocalDateTime DATE \u003d LocalDateTime.of(2023, 10, 10, 23, 21);","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    private Data data;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    void setUp() {","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"        Activity activity \u003d new Activity(CAPTION, DURATION, DISTANCE, DATE);","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"        AddActivityCommand addActivityCommand \u003d new AddActivityCommand(activity);","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"        // execute twice for 2 activities","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"        addActivityCommand.execute(data);","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"        addActivityCommand.execute(data);","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"    void execute_detailedFalse_printsShortList() {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"        ListActivityCommand listActivityCommand \u003d new ListActivityCommand(false);","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"        String[] expected \u003d {\"These are the activities you have tracked so far:\", \"1.\" + new Activity(CAPTION, DURATION,","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"                DISTANCE, DATE), \"2.\" + new Activity(CAPTION, DURATION, DISTANCE, DATE)};","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"        String[] actual \u003d listActivityCommand.execute(data);","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"        for (int i \u003d 0; i \u003c actual.length; i++) {","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"            assertEquals(expected[i], actual[i]);","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"    void execute_detailedTrue_printsDetailedList() {","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"        ListActivityCommand listActivityCommand \u003d new ListActivityCommand(true);","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"        ActivityList activities \u003d data.getActivities();","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"        String[] expected \u003d listActivityCommand.printDetailedList(activities, activities.size());","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"        String[] actual \u003d listActivityCommand.execute(data);","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"        for (int i \u003d 0; i \u003c actual.length; i++) {","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"            assertEquals(expected[i], actual[i]);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"    void printList_validInput() {","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"        ActivityList activities \u003d data.getActivities();","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"        ListActivityCommand listActivityCommand \u003d new ListActivityCommand(false);","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"        String[] actual \u003d listActivityCommand.printList(activities, activities.size());","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"        String[] expected \u003d {\"These are the activities you have tracked so far:\", \"1.\" + new Activity(CAPTION, DURATION,","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"                DISTANCE, DATE), \"2.\" + new Activity(CAPTION, DURATION, DISTANCE, DATE)};","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"        for (int i \u003d 0; i \u003c actual.length; i++) {","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"            assertEquals(expected[i], actual[i]);","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"    void printDetailedList() {","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"AlWo223"},"content":"        ActivityList activities \u003d data.getActivities();","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"        ListActivityCommand listActivityCommand \u003d new ListActivityCommand(true);","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"AlWo223"},"content":"        String[] actual \u003d listActivityCommand.printDetailedList(activities, activities.size());","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"AlWo223"},"content":"        String[] expected \u003d {\"These are the activities you have tracked so far:\", new Activity(CAPTION, DURATION,","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"AlWo223"},"content":"                DISTANCE, DATE).toDetailedString(),","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"AlWo223"},"content":"                new Activity(CAPTION, DURATION, DISTANCE, DATE).toDetailedString()};","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"AlWo223"},"content":"        for (int i \u003d 0; i \u003c actual.length; i++) {","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"AlWo223"},"content":"            assertEquals(expected[i], actual[i]);","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"AlWo223":77}},{"path":"src/test/java/athleticli/commands/activity/ListActivityGoalCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.activity.ActivityGoal;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.activity.ActivityGoalList;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"class ListActivityGoalCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"    private ListActivityGoalCommand command;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"    private Data data;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"    void setUp() {","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"        command \u003d new ListActivityGoalCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"    void execute_noActivityGoal_returnsNoActivityGoalMessage() {","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"        String[] result \u003d command.execute(data);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"        assertEquals(Message.MESSAGE_ACTIVITY_GOAL_LIST, result[0]);","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"    void execute_existingActivityGoal_returnsActivityGoalList() {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"        ActivityGoalList activityGoals \u003d data.getActivityGoals();","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"        ActivityGoal goal1 \u003d new ActivityGoal(ActivityGoal.TimeSpan.WEEKLY, ActivityGoal.GoalType.DISTANCE,","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"                ActivityGoal.Sport.RUNNING, 10);","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"        ActivityGoal goal2 \u003d new ActivityGoal(ActivityGoal.TimeSpan.MONTHLY, ActivityGoal.GoalType.DURATION,","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"                ActivityGoal.Sport.CYCLING, 20);","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"        ActivityGoal goal3 \u003d new ActivityGoal(ActivityGoal.TimeSpan.YEARLY, ActivityGoal.GoalType.DISTANCE,","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"                ActivityGoal.Sport.SWIMMING, 30);","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"        ActivityGoal goal4 \u003d new ActivityGoal(ActivityGoal.TimeSpan.DAILY, ActivityGoal.GoalType.DISTANCE,","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"                ActivityGoal.Sport.GENERAL, 40);","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"        activityGoals.add(goal1);","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"        activityGoals.add(goal2);","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"        activityGoals.add(goal3);","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"        activityGoals.add(goal4);","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"        String[] actual \u003d command.execute(data);","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"        String[] expected \u003d {","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"            Message.MESSAGE_ACTIVITY_GOAL_LIST,","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"            \"1. \" + goal1.toString(data),","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"            \"2. \" + goal2.toString(data),","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"            \"3. \" + goal3.toString(data),","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"            \"4. \" + goal4.toString(data)","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"        };","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"nihalzp"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"AlWo223":8,"nihalzp":47}},{"path":"src/test/java/athleticli/commands/activity/SetActivityGoalCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import athleticli.data.Goal.TimeSpan;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.ActivityGoal;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Run;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"class SetActivityGoalCommandTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"    private SetActivityGoalCommand setActivityGoalCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    private Data data;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    private ActivityGoal activityGoal;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    void setUp() {","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"        ActivityGoal.GoalType goalType \u003d ActivityGoal.GoalType.DISTANCE;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"        ActivityGoal.Sport sport \u003d ActivityGoal.Sport.RUNNING;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"        TimeSpan period \u003d TimeSpan.WEEKLY;","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"        activityGoal \u003d new ActivityGoal(period, goalType, sport, 10000);","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"        setActivityGoalCommand \u003d new SetActivityGoalCommand(activityGoal);","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"        String caption \u003d \"Sunday \u003d Runday\";","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"        int distance \u003d 3000;","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"        LocalTime duration \u003d LocalTime.of(1, 24);","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"        Run run \u003d new Run(caption, duration, distance, LocalDateTime.now(), 0);","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"        AddActivityCommand addActivityCommand \u003d new AddActivityCommand(run);","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"        addActivityCommand.execute(data);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"    void execute() {","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"        String[] actual \u003d setActivityGoalCommand.execute(data);","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"        String[] expected \u003d {\"Alright, I\u0027ve added this activity goal:\", activityGoal.toString(data)};","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"        for (int i \u003d 0; i \u003c actual.length; i++) {","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"            assertEquals(expected[i], actual[i]);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"skylee03":2,"AlWo223":48}},{"path":"src/test/java/athleticli/commands/diet/AddDietCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.Diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":" * Tests the add diet commands provided by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"public class AddDietCommandTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"    private static final int CALORIES \u003d 100;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"    private static final int PROTEIN \u003d 20;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"    private static final int CARB \u003d 30;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"    private static final int FAT \u003d 40;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"    private static final LocalDateTime DATE_TIME \u003d LocalDateTime.of(2020, 10, 10, 10, 10);","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"    private Diet diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"    private AddDietCommand addDietCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"    private Data data;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"    void setUp() {","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"        diet \u003d new Diet(CALORIES, PROTEIN, CARB, FAT, DATE_TIME);","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"        addDietCommand \u003d new AddDietCommand(diet);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"    void execute() {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"        String[] expected \u003d {\"Well done! I\u0027ve added this diet:\", diet.toString(),","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"                             \"Now you have tracked your \" + \"first diet. This is just the beginning!\"};","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"        String[] actual \u003d addDietCommand.execute(data);","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"        for (int i \u003d 0; i \u003c actual.length; i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"            assertEquals(expected[i], actual[i]);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"nihalzp":42}},{"path":"src/test/java/athleticli/commands/diet/DeleteDietCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.Diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":" * Tests the delete diet commands provided by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"public class DeleteDietCommandTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"    private static final int CALORIES \u003d 100;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"    private static final int PROTEIN \u003d 20;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"    private static final int CARB \u003d 30;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"    private static final int FAT \u003d 40;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"    private static final LocalDateTime DATE_TIME \u003d LocalDateTime.of(2020, 10, 10, 10, 10);","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"    private Diet diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"    private DeleteDietCommand deleteDietCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"    private Data data;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"    void setUp() {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"        diet \u003d new Diet(CALORIES, PROTEIN, CARB, FAT, DATE_TIME);","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"        deleteDietCommand \u003d new DeleteDietCommand(1);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"        data.getDiets().add(diet);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"    void execute() throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"        String[] expected \u003d {\"Noted. I\u0027ve removed this diet:\", diet.toString(),","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"                             \"Now you have tracked a total of 0 diets. Keep grinding!\"};","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"        String[] actual \u003d deleteDietCommand.execute(data);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"        for (int i \u003d 0; i \u003c actual.length; i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"            assertEquals(expected[i], actual[i]);","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"nihalzp"},"content":"    void execute_invalidIndex_expectException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"nihalzp"},"content":"        deleteDietCommand \u003d new DeleteDietCommand(2);","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e deleteDietCommand.execute(data));","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"nihalzp":50}},{"path":"src/test/java/athleticli/commands/diet/DeleteDietGoalCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yicheng-toh"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Goal;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.diet.DietGoal;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.diet.HealthyDietGoal;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"class DeleteDietGoalCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":"    private Data data;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":"    private DietGoal dietGoalFats;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"yicheng-toh"},"content":"    private ArrayList\u003cDietGoal\u003e filledInputDietGoals;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"    void setUp() {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"yicheng-toh"},"content":"        dietGoalFats \u003d new HealthyDietGoal(Goal.TimeSpan.WEEKLY, \"fats\", 10000);","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"        filledInputDietGoals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"        filledInputDietGoals.add(dietGoalFats);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"yicheng-toh"},"content":"    void execute_deleteOneItemFromFilledDietGoalList_expectCorrectMessage() {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"yicheng-toh"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"yicheng-toh"},"content":"            SetDietGoalCommand setDietGoalCommand \u003d new SetDietGoalCommand(filledInputDietGoals);","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"yicheng-toh"},"content":"            setDietGoalCommand.execute(data);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"yicheng-toh"},"content":"            System.out.println(data.getDietGoals());","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"yicheng-toh"},"content":"            DeleteDietGoalCommand deleteDietGoalCommand \u003d new DeleteDietGoalCommand(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"yicheng-toh"},"content":"            String[] expectedString \u003d new String[]{\"The following goal has been deleted:\\n\", \"[HEALTHY]  \"","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"yicheng-toh"},"content":"                    + \"WEEKLY fats intake progress: (0/10000)\\n\",};","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"yicheng-toh"},"content":"            assertArrayEquals(expectedString, deleteDietGoalCommand.execute(data));","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"yicheng-toh"},"content":"        } catch (AthletiException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"yicheng-toh"},"content":"            fail(e);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"yicheng-toh"},"content":"    void execute_deleteOneItemFromEmptyDietGoalList_expectAthletiException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"yicheng-toh"},"content":"        DeleteDietGoalCommand deleteDietGoalCommand \u003d new DeleteDietGoalCommand(100);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"yicheng-toh"},"content":"        assertThrows(AthletiException.class, () -\u003e deleteDietGoalCommand.execute(data));","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"yicheng-toh"},"content":"    void execute_integerExceedListSize_expectAthletiException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"yicheng-toh"},"content":"        SetDietGoalCommand setDietGoalCommand \u003d new SetDietGoalCommand(filledInputDietGoals);","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"yicheng-toh"},"content":"        DeleteDietGoalCommand deleteDietGoalCommand \u003d new DeleteDietGoalCommand(100);","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"yicheng-toh"},"content":"        try {","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"yicheng-toh"},"content":"            setDietGoalCommand.execute(data);","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"yicheng-toh"},"content":"        } catch (AthletiException e) {","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"yicheng-toh"},"content":"            fail();","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"yicheng-toh"},"content":"        assertThrows(AthletiException.class, () -\u003e deleteDietGoalCommand.execute(data));","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yicheng-toh":65}},{"path":"src/test/java/athleticli/commands/diet/EditDietCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.Diet;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"import athleticli.parser.Parameter;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"/*","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":" * Contains the tests for EditDietCommand.","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"public class EditDietCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"    private static final int CALORIES \u003d 100;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"    private static final int PROTEIN \u003d 10;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"    private static final int CARB \u003d 20;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"    private static final int FAT \u003d 30;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"    private static final LocalDateTime DATE_TIME \u003d LocalDateTime.of(2023, 10, 10, 23, 21);","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"    private static final int INDEX \u003d 1;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"    private Data data;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"    void setUp() {","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"        Diet diet \u003d new Diet(CALORIES, PROTEIN, CARB, FAT, DATE_TIME);","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"        data.getDiets().add(diet);","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"    void execute_validIndex_dietEdited() throws AthletiException {","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"        HashMap\u003cString, String\u003e dietMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.CALORIES_SEPARATOR, \"200\");","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.PROTEIN_SEPARATOR, \"20\");","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.CARB_SEPARATOR, \"30\");","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.FAT_SEPARATOR, \"40\");","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.DATETIME_SEPARATOR, \"2021-10-10 23:21\");","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"        Diet newDiet \u003d new Diet(200, 20, 30, 40, LocalDateTime.of(2021, 10, 10, 23, 21));","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"nihalzp"},"content":"        EditDietCommand editDietCommand \u003d new EditDietCommand(INDEX, dietMap);","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"nihalzp"},"content":"        editDietCommand.execute(data);","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"nihalzp"},"content":"        String[] expected \u003d {\"Ok, I\u0027ve updated this diet:\", newDiet.toString()};","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"nihalzp"},"content":"        String[] actual \u003d editDietCommand.execute(data);","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"nihalzp"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"nihalzp"},"content":"    void execute_validIndex_dietEditedNoCaloriesGiven() throws AthletiException {","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"nihalzp"},"content":"        HashMap\u003cString, String\u003e dietMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.PROTEIN_SEPARATOR, \"20\");","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.CARB_SEPARATOR, \"30\");","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.FAT_SEPARATOR, \"40\");","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.DATETIME_SEPARATOR, \"2021-10-10 23:21\");","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"nihalzp"},"content":"        Diet newDiet \u003d new Diet(CALORIES, 20, 30, 40, LocalDateTime.of(2021, 10, 10, 23, 21));","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"nihalzp"},"content":"        EditDietCommand editDietCommand \u003d new EditDietCommand(INDEX, dietMap);","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"nihalzp"},"content":"        editDietCommand.execute(data);","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"nihalzp"},"content":"        String[] expected \u003d {\"Ok, I\u0027ve updated this diet:\", newDiet.toString()};","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"nihalzp"},"content":"        String[] actual \u003d editDietCommand.execute(data);","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"nihalzp"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"nihalzp"},"content":"    void execute_validIndex_dietEditedNoProteinGiven() throws AthletiException {","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"nihalzp"},"content":"        HashMap\u003cString, String\u003e dietMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.CALORIES_SEPARATOR, \"200\");","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.CARB_SEPARATOR, \"30\");","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.FAT_SEPARATOR, \"40\");","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.DATETIME_SEPARATOR, \"2021-10-10 23:21\");","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"nihalzp"},"content":"        Diet newDiet \u003d new Diet(200, PROTEIN, 30, 40, LocalDateTime.of(2021, 10, 10, 23, 21));","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"nihalzp"},"content":"        EditDietCommand editDietCommand \u003d new EditDietCommand(INDEX, dietMap);","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"nihalzp"},"content":"        editDietCommand.execute(data);","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"nihalzp"},"content":"        String[] expected \u003d {\"Ok, I\u0027ve updated this diet:\", newDiet.toString()};","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"nihalzp"},"content":"        String[] actual \u003d editDietCommand.execute(data);","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"nihalzp"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"nihalzp"},"content":"    void execute_validIndex_dietEditedNoCarbGiven() throws AthletiException {","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"nihalzp"},"content":"        HashMap\u003cString, String\u003e dietMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.CALORIES_SEPARATOR, \"200\");","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.PROTEIN_SEPARATOR, \"20\");","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.FAT_SEPARATOR, \"40\");","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.DATETIME_SEPARATOR, \"2021-10-10 23:21\");","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"nihalzp"},"content":"        Diet newDiet \u003d new Diet(200, 20, CARB, 40, LocalDateTime.of(2021, 10, 10, 23, 21));","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"nihalzp"},"content":"        EditDietCommand editDietCommand \u003d new EditDietCommand(INDEX, dietMap);","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"nihalzp"},"content":"        editDietCommand.execute(data);","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"nihalzp"},"content":"        String[] expected \u003d {\"Ok, I\u0027ve updated this diet:\", newDiet.toString()};","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"nihalzp"},"content":"        String[] actual \u003d editDietCommand.execute(data);","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"nihalzp"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"nihalzp"},"content":"    void execute_validIndex_dietEditedNoFatGiven() throws AthletiException {","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"nihalzp"},"content":"        HashMap\u003cString, String\u003e dietMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.CALORIES_SEPARATOR, \"200\");","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.PROTEIN_SEPARATOR, \"20\");","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.CARB_SEPARATOR, \"30\");","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.DATETIME_SEPARATOR, \"2021-10-10 23:21\");","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"nihalzp"},"content":"        Diet newDiet \u003d new Diet(200, 20, 30, FAT, LocalDateTime.of(2021, 10, 10, 23, 21));","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"nihalzp"},"content":"        EditDietCommand editDietCommand \u003d new EditDietCommand(INDEX, dietMap);","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"nihalzp"},"content":"        editDietCommand.execute(data);","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"nihalzp"},"content":"        String[] expected \u003d {\"Ok, I\u0027ve updated this diet:\", newDiet.toString()};","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"nihalzp"},"content":"        String[] actual \u003d editDietCommand.execute(data);","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"nihalzp"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"nihalzp"},"content":"    void execute_validIndex_dietEditedNoCaloriesProteinCarbFatGiven() throws AthletiException {","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"nihalzp"},"content":"        HashMap\u003cString, String\u003e dietMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.DATETIME_SEPARATOR, \"2021-10-10 23:21\");","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"nihalzp"},"content":"        Diet newDiet \u003d new Diet(CALORIES, PROTEIN, CARB, FAT, LocalDateTime.of(2021, 10, 10, 23, 21));","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"nihalzp"},"content":"        EditDietCommand editDietCommand \u003d new EditDietCommand(INDEX, dietMap);","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"nihalzp"},"content":"        editDietCommand.execute(data);","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"nihalzp"},"content":"        String[] expected \u003d {\"Ok, I\u0027ve updated this diet:\", newDiet.toString()};","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"nihalzp"},"content":"        String[] actual \u003d editDietCommand.execute(data);","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"nihalzp"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"nihalzp"},"content":"    void execute_validIndex_dietEditedNoDateTimeGiven() throws AthletiException {","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"nihalzp"},"content":"        HashMap\u003cString, String\u003e dietMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.CALORIES_SEPARATOR, \"200\");","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.PROTEIN_SEPARATOR, \"20\");","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.CARB_SEPARATOR, \"30\");","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.FAT_SEPARATOR, \"40\");","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"nihalzp"},"content":"        Diet newDiet \u003d new Diet(200, 20, 30, 40, DATE_TIME);","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"nihalzp"},"content":"        EditDietCommand editDietCommand \u003d new EditDietCommand(INDEX, dietMap);","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"nihalzp"},"content":"        editDietCommand.execute(data);","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"nihalzp"},"content":"        String[] expected \u003d {\"Ok, I\u0027ve updated this diet:\", newDiet.toString()};","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"nihalzp"},"content":"        String[] actual \u003d editDietCommand.execute(data);","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"nihalzp"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"nihalzp"},"content":"    void execute_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"nihalzp"},"content":"        HashMap\u003cString, String\u003e dietMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.CALORIES_SEPARATOR, \"200\");","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.PROTEIN_SEPARATOR, \"20\");","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.CARB_SEPARATOR, \"30\");","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.FAT_SEPARATOR, \"40\");","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"nihalzp"},"content":"        dietMap.put(Parameter.DATETIME_SEPARATOR, \"2021-10-10 23:21\");","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"nihalzp"},"content":"        EditDietCommand editDietCommand \u003d new EditDietCommand(2, dietMap);","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e editDietCommand.execute(data));","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"skylee03":1,"nihalzp":149}},{"path":"src/test/java/athleticli/commands/diet/EditDietGoalCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yicheng-toh"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Goal;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.diet.DietGoal;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.diet.HealthyDietGoal;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"class EditDietGoalCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":"    private ArrayList\u003cDietGoal\u003e emptyInputDietGoals;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":"    private ArrayList\u003cDietGoal\u003e filledInputDietGoals;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"yicheng-toh"},"content":"    private ArrayList\u003cDietGoal\u003e filledChangedInputDietGoals;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"yicheng-toh"},"content":"    private DietGoal dietGoalCarb;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"    private DietGoal dietGoalFats;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"    private DietGoal newDietGoalFats;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"    private Data data;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"yicheng-toh"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"    void setUp() {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"        dietGoalCarb \u003d new HealthyDietGoal(Goal.TimeSpan.WEEKLY, \"carb\", 10000);","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"        dietGoalFats \u003d new HealthyDietGoal(Goal.TimeSpan.WEEKLY, \"fats\", 10000);","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"        newDietGoalFats \u003d new HealthyDietGoal(Goal.TimeSpan.WEEKLY, \"fats\", 10);","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"yicheng-toh"},"content":"        emptyInputDietGoals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"yicheng-toh"},"content":"        filledInputDietGoals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"yicheng-toh"},"content":"        filledInputDietGoals.add(dietGoalFats);","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"yicheng-toh"},"content":"        filledInputDietGoals.add(dietGoalCarb);","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"yicheng-toh"},"content":"        filledChangedInputDietGoals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"yicheng-toh"},"content":"        filledChangedInputDietGoals.add(newDietGoalFats);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"yicheng-toh"},"content":"    void execute_emptyInputList_expectCorrectMessage() {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"yicheng-toh"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"yicheng-toh"},"content":"            EditDietGoalCommand editDietGoalCommand \u003d new EditDietGoalCommand(emptyInputDietGoals);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"yicheng-toh"},"content":"            String[] expectedString \u003d {\"These are your goal(s):\\n\", \"\", \"Now you have 0 diet goal(s).\"};","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"yicheng-toh"},"content":"            String[] actualString \u003d editDietGoalCommand.execute(data);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"yicheng-toh"},"content":"            assertArrayEquals(expectedString, actualString);","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"yicheng-toh"},"content":"        } catch (AthletiException e) {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"yicheng-toh"},"content":"            fail(e);","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"yicheng-toh"},"content":"    void execute_oneNewInputDietGoal_expectError() {","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"yicheng-toh"},"content":"        EditDietGoalCommand editDietGoalCommand \u003d new EditDietGoalCommand(filledInputDietGoals);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"yicheng-toh"},"content":"        assertThrows(AthletiException.class, () -\u003e editDietGoalCommand.execute(data));","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"yicheng-toh"},"content":"    void execute_changeOneExistingInputDietGoal_expectCorrectMessage() {","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"yicheng-toh"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"yicheng-toh"},"content":"            SetDietGoalCommand setDietGoalCommand \u003d new SetDietGoalCommand(filledInputDietGoals);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"yicheng-toh"},"content":"            EditDietGoalCommand editDietGoalCommand \u003d new EditDietGoalCommand(filledChangedInputDietGoals);","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"yicheng-toh"},"content":"            String[] expectedString \u003d {\"These are your goal(s):\\n\", \"\\t1. [HEALTHY]  \"","lastModifiedDate":"2023-11-04"},{"lineNumber":67,"author":{"gitId":"yicheng-toh"},"content":"                    + \"WEEKLY fats intake progress: (0/10)\\n\\n\" + \"\\t2. [HEALTHY]  \"","lastModifiedDate":"2023-11-04"},{"lineNumber":68,"author":{"gitId":"yicheng-toh"},"content":"                    + \"WEEKLY carb intake progress: (0/10000)\\n\", \"Now you have 2 diet goal(s).\"};","lastModifiedDate":"2023-11-04"},{"lineNumber":69,"author":{"gitId":"yicheng-toh"},"content":"            setDietGoalCommand.execute(data);","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"yicheng-toh"},"content":"            assertArrayEquals(expectedString, editDietGoalCommand.execute(data));","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"yicheng-toh"},"content":"        } catch (AthletiException e) {","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"yicheng-toh"},"content":"            fail(e);","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"yicheng-toh":75}},{"path":"src/test/java/athleticli/commands/diet/ListDietCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.Diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":" * Tests the list diet commands provided by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"public class ListDietCommandTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"    private static final int CALORIES \u003d 100;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"    private static final int PROTEIN \u003d 20;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"    private static final int CARB \u003d 30;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"    private static final int FAT \u003d 40;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"    private static final LocalDateTime DATE_TIME \u003d LocalDateTime.of(2020, 10, 10, 10, 10);","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"    private Diet diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"    private ListDietCommand listDietCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"    private Data data;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"    void setUp() {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"        diet \u003d new Diet(CALORIES, PROTEIN, CARB, FAT, DATE_TIME);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"        listDietCommand \u003d new ListDietCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"        data.getDiets().add(diet);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"    void execute() {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"        String[] expected \u003d {\"Here are the diets in your list:\", \"1. \" + diet.toString(),","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"                             \"Now you have tracked a total of 1 diets. Keep grinding!\"};","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"        String[] actual \u003d listDietCommand.execute(data);","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"        for (int i \u003d 0; i \u003c actual.length; i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"            assertEquals(expected[i], actual[i]);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"nihalzp":42}},{"path":"src/test/java/athleticli/commands/diet/ListDietGoalCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yicheng-toh"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Goal;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.diet.DietGoal;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.diet.HealthyDietGoal;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"class ListDietGoalCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"    private ArrayList\u003cDietGoal\u003e filledInputDietGoals;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"yicheng-toh"},"content":"    private DietGoal dietGoalFats;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":"    private Data data;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"yicheng-toh"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"yicheng-toh"},"content":"    void setUp() {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"        dietGoalFats \u003d new HealthyDietGoal(Goal.TimeSpan.WEEKLY, \"fats\", 10000);","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"yicheng-toh"},"content":"        filledInputDietGoals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"        filledInputDietGoals.add(dietGoalFats);","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"    void execute_emptyInputList_returnNoDietGoalMessage() {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"        String[] expectedString \u003d {\"There are no goals at the moment. Add a diet goal to start.\"};","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"yicheng-toh"},"content":"        ListDietGoalCommand listDietGoalCommand \u003d new ListDietGoalCommand();","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"yicheng-toh"},"content":"        assertArrayEquals(expectedString, listDietGoalCommand.execute(data));","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"yicheng-toh"},"content":"    void execute_filledInputList_returnDietGoalPresentMessage() {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"yicheng-toh"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"yicheng-toh"},"content":"            String[] expectedString \u003d {\"These are your goal(s):\\n\", \"\\t1. [HEALTHY]  WEEKLY \"","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"yicheng-toh"},"content":"                    + \"fats intake progress: (0/10000)\\n\", \"Now you have 1 diet goal(s).\"};","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"yicheng-toh"},"content":"            ListDietGoalCommand listDietGoalCommand \u003d new ListDietGoalCommand();","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"yicheng-toh"},"content":"            SetDietGoalCommand setDietGoalCommand \u003d new SetDietGoalCommand(filledInputDietGoals);","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"yicheng-toh"},"content":"            setDietGoalCommand.execute(data);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"yicheng-toh"},"content":"            assertArrayEquals(expectedString, listDietGoalCommand.execute(data));","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"yicheng-toh"},"content":"        } catch (AthletiException e) {","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"yicheng-toh"},"content":"            assert (false);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"yicheng-toh":51}},{"path":"src/test/java/athleticli/commands/diet/SetDietGoalCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yicheng-toh"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Goal;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.diet.DietGoal;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.diet.HealthyDietGoal;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"yicheng-toh"},"content":"class SetDietGoalCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":"    private ArrayList\u003cDietGoal\u003e emptyInputDietGoals;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"yicheng-toh"},"content":"    private ArrayList\u003cDietGoal\u003e filledInputDietGoals;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"yicheng-toh"},"content":"    private DietGoal dietGoalFats;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"    private DietGoal dietGoalCarb;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"    private Data data;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"yicheng-toh"},"content":"    void setUp() {","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"        emptyInputDietGoals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"        dietGoalFats \u003d new HealthyDietGoal(Goal.TimeSpan.WEEKLY, \"fats\", 10000);","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"        dietGoalCarb \u003d new HealthyDietGoal(Goal.TimeSpan.WEEKLY, \"carb\", 10000);","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"        filledInputDietGoals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"        filledInputDietGoals.add(dietGoalFats);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"yicheng-toh"},"content":"        filledInputDietGoals.add(dietGoalCarb);","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"yicheng-toh"},"content":"    void execute_emptyInputList_expectCorrectMessage() {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"yicheng-toh"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"yicheng-toh"},"content":"            SetDietGoalCommand setDietGoalCommand \u003d new SetDietGoalCommand(emptyInputDietGoals);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"yicheng-toh"},"content":"            String[] expectedString \u003d {\"These are your goal(s):\\n\", \"\", \"Now you have 0 diet goal(s).\"};","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"yicheng-toh"},"content":"            String[] actualString \u003d setDietGoalCommand.execute(data);","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"yicheng-toh"},"content":"            assertArrayEquals(expectedString, actualString);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"yicheng-toh"},"content":"        } catch (AthletiException e) {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"yicheng-toh"},"content":"            fail(e);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"yicheng-toh"},"content":"    void execute_oneNewInputDietGoal_expectCorrectMessage() {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"yicheng-toh"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"yicheng-toh"},"content":"            SetDietGoalCommand setDietGoalCommand \u003d new SetDietGoalCommand(filledInputDietGoals);","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"yicheng-toh"},"content":"            String[] expectedString \u003d {\"These are your goal(s):\\n\", \"\\t1. [HEALTHY]  \"","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"yicheng-toh"},"content":"                    + \"WEEKLY fats intake progress: (0/10000)\\n\\n\" + \"\\t2. [HEALTHY]  \"","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"yicheng-toh"},"content":"                    + \"WEEKLY carb intake progress: (0/10000)\\n\", \"Now you have 2 diet goal(s).\"};","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"yicheng-toh"},"content":"            String[] actualString \u003d setDietGoalCommand.execute(data);","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"yicheng-toh"},"content":"            assertArrayEquals(expectedString, actualString);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"yicheng-toh"},"content":"        } catch (AthletiException e) {","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"yicheng-toh"},"content":"            fail(e);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"yicheng-toh"},"content":"    void execute_oneExistingInputDietGoal_expectAthletiException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"yicheng-toh"},"content":"        SetDietGoalCommand setDietGoalCommand \u003d new SetDietGoalCommand(filledInputDietGoals);","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"yicheng-toh"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"yicheng-toh"},"content":"            setDietGoalCommand.execute(data);","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"yicheng-toh"},"content":"        } catch (AthletiException e) {","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"yicheng-toh"},"content":"            fail(e);","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"yicheng-toh"},"content":"        assertThrows(AthletiException.class, () -\u003e setDietGoalCommand.execute(data));","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"yicheng-toh":73}},{"path":"src/test/java/athleticli/commands/sleep/AddSleepCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.SleepList;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"public class AddSleepCommandTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    private Data data;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"    public void setup() {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"        data.setSleeps(new SleepList());","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"    public void testExecuteWithValidInput() {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2023, 10, 17, 22, 0);","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2023, 10, 18, 6, 0);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"        AddSleepCommand command \u003d new AddSleepCommand(from, to);","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"        String[] expected \u003d {","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"            \"Got it. I\u0027ve added this sleep record:\",","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"            \"[Sleep] | Date: 2023-10-17 | Start Time: October 17, 2023 at 10:00 PM \" +","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"                \"| End Time: October 18, 2023 at 6:00 AM | Sleeping Duration: 8 Hours \",","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"            \"Now you have 1 sleep records in the list.\"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"        };","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"        ","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"        assertArrayEquals(expected, command.execute(data));","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"    public void testExecuteCountingSleepRecords() {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"        LocalDateTime from1 \u003d LocalDateTime.of(2023, 10, 17, 22, 0);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"        LocalDateTime to1 \u003d LocalDateTime.of(2023, 10, 18, 6, 0);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"        AddSleepCommand command1 \u003d new AddSleepCommand(from1, to1);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"        command1.execute(data); // Add first sleep record","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"        LocalDateTime from2 \u003d LocalDateTime.of(2023, 10, 18, 22, 0);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"        LocalDateTime to2 \u003d LocalDateTime.of(2023, 10, 19, 6, 0);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"        AddSleepCommand command2 \u003d new AddSleepCommand(from2, to2);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"        String[] expected \u003d {","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"            \"Got it. I\u0027ve added this sleep record:\",","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"            \"[Sleep] | Date: 2023-10-18 | Start Time: October 18, 2023 at 10:00 PM \" +","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"                \"| End Time: October 19, 2023 at 6:00 AM | Sleeping Duration: 8 Hours \",","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"            \"Now you have 2 sleep records in the list.\"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"        };","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"        ","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"        assertArrayEquals(expected, command2.execute(data));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"DaDevChia":59}},{"path":"src/test/java/athleticli/commands/sleep/DeleteSleepCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.Sleep;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.SleepList;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"public class DeleteSleepCommandTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"    private Data data;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"    private Sleep sleep1;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"    private Sleep sleep2;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"    public void setup() {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"        SleepList sleepList \u003d new SleepList();","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"        sleep1 \u003d new Sleep(LocalDateTime.of(2023, 10, 17, 22, 0), ","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"                          LocalDateTime.of(2023, 10, 18, 6, 0));","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"        sleep2 \u003d new Sleep(LocalDateTime.of(2023, 10, 18, 22, 0), ","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"                          LocalDateTime.of(2023, 10, 19, 6, 0));","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(sleep1);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(sleep2);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"        data.setSleeps(sleepList);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"    public void testExecuteWithValidIndex() throws AthletiException {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"        DeleteSleepCommand command \u003d new DeleteSleepCommand(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"        String[] expected \u003d {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"            \"Got it. I\u0027ve deleted this sleep record at index 1: [Sleep] | Date: 2023-10-17 \" +","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"                \"| Start Time: October 17, 2023 at 10:00 PM | End Time: October 18, 2023 at 6:00 AM | \" +","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"                \"Sleeping Duration: 8 Hours \"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"        };","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"        assertArrayEquals(expected, command.execute(data));","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"    public void testExecuteWithInvalidIndex() throws AthletiException {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"        DeleteSleepCommand commandNegative \u003d new DeleteSleepCommand(-1);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"        assertThrows(AthletiException.class, () -\u003e commandNegative.execute(data));","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"        DeleteSleepCommand commandZero \u003d new DeleteSleepCommand(0);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"        assertThrows(AthletiException.class, () -\u003e commandZero.execute(data));","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"        DeleteSleepCommand commandBeyond \u003d new DeleteSleepCommand(3); // Only 2 records in the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"        assertThrows(AthletiException.class, () -\u003e commandBeyond.execute(data));","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"DaDevChia"},"content":"    public void testExecuteWithEmptyList() throws AthletiException {","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"DaDevChia"},"content":"        data.setSleeps(new SleepList()); // Empty list","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"DaDevChia"},"content":"        DeleteSleepCommand command \u003d new DeleteSleepCommand(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"DaDevChia"},"content":"        assertThrows(AthletiException.class, () -\u003e command.execute(data));","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"DaDevChia":65}},{"path":"src/test/java/athleticli/commands/sleep/EditSleepCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.Sleep;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.SleepList;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"public class EditSleepCommandTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"    private Data data;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"    private Sleep sleep1;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"    private Sleep sleep2;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"    public void setup() {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"        SleepList sleepList \u003d new SleepList();","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"        sleep1 \u003d new Sleep(LocalDateTime.of(2023, 10, 17, 22, 0), ","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"                          LocalDateTime.of(2023, 10, 18, 6, 0));","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"        sleep2 \u003d new Sleep(LocalDateTime.of(2023, 10, 18, 22, 0), ","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"                          LocalDateTime.of(2023, 10, 19, 6, 0));","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(sleep1);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(sleep2);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"        data.setSleeps(sleepList);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"    public void testExecuteWithValidIndex() throws AthletiException {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"        EditSleepCommand command \u003d new EditSleepCommand(1, LocalDateTime.of(2023, 10, 17, 23, 0), ","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"                                                        LocalDateTime.of(2023, 10, 18, 7, 0));","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"        String[] expected \u003d {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"            \"Got it. I\u0027ve changed this sleep record at index 1:\",","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"            \"original: [Sleep] | Date: 2023-10-17 | Start Time: October 17, 2023 at 10:00 PM \" +","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"                \"| End Time: October 18, 2023 at 6:00 AM | Sleeping Duration: 8 Hours \",","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"            \"to new: [Sleep] | Date: 2023-10-17 | Start Time: October 17, 2023 at 11:00 PM \" +","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"                \"| End Time: October 18, 2023 at 7:00 AM | Sleeping Duration: 8 Hours \",","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"        };","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"        ","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"        assertArrayEquals(expected, command.execute(data));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"    public void testExecuteWithInvalidIndex() {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"        EditSleepCommand commandNegative \u003d new EditSleepCommand(-1, LocalDateTime.of(2023, 10, 17, 23, 0), ","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"                                                                LocalDateTime.of(2023, 10, 18, 7, 0));","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"        assertThrows(AthletiException.class, () -\u003e commandNegative.execute(data));","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"        EditSleepCommand commandZero \u003d new EditSleepCommand(0, LocalDateTime.of(2023, 10, 17, 23, 0), ","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"                                                           LocalDateTime.of(2023, 10, 18, 7, 0));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"        assertThrows(AthletiException.class, () -\u003e commandZero.execute(data));","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"DaDevChia"},"content":"        EditSleepCommand commandBeyond \u003d new EditSleepCommand(3, LocalDateTime.of(2023, 10, 17, 23, 0), ","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"DaDevChia"},"content":"                                                              LocalDateTime.of(2023, 10, 18, 7, 0));","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"DaDevChia"},"content":"        assertThrows(AthletiException.class, () -\u003e commandBeyond.execute(data));","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"DaDevChia":66}},{"path":"src/test/java/athleticli/commands/sleep/ListSleepCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.Sleep;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.SleepList;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"public class ListSleepCommandTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"    private Data data;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"    private Sleep sleep1;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"    private Sleep sleep2;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"    public void setup() {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"        SleepList sleepList \u003d new SleepList();","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"        sleep1 \u003d new Sleep(LocalDateTime.of(2023, 10, 17, 22, 0), ","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"                          LocalDateTime.of(2023, 10, 18, 6, 0));","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"        sleep2 \u003d new Sleep(LocalDateTime.of(2023, 10, 18, 22, 0), ","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"                          LocalDateTime.of(2023, 10, 19, 6, 0));","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(sleep1);","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(sleep2);","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"        data.setSleeps(sleepList);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"    public void testExecuteWithRecords() {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"        ListSleepCommand command \u003d new ListSleepCommand();","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"        String[] expected \u003d {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"            \"Here are the sleep records in your list:\\n\",","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"            \"1. [Sleep] | Date: 2023-10-17 | Start Time: October 17, 2023 at 10:00 PM \" +","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"                \"| End Time: October 18, 2023 at 6:00 AM | Sleeping Duration: 8 Hours \",","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"            \"2. [Sleep] | Date: 2023-10-18 | Start Time: October 18, 2023 at 10:00 PM \" +","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"                \"| End Time: October 19, 2023 at 6:00 AM | Sleeping Duration: 8 Hours \"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"        };    ","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"        String[] actual \u003d command.execute(data);","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"    public void testExecuteWithEmptyList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"        data.setSleeps(new SleepList()); ","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"        ListSleepCommand command \u003d new ListSleepCommand();","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"        String[] expected \u003d {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"            \"You have no sleep records in your list.\"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"        };","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"        String[] actual \u003d command.execute(data);","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"DaDevChia":58}},{"path":"src/test/java/athleticli/data/activity/ActivityGoalListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.Goal.TimeSpan;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"class ActivityGoalListTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"    private ActivityGoalList activityGoalList;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    void setUp() {","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"        activityGoalList \u003d new ActivityGoalList();","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    void parse() {","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"    void unparse_runningDistanceGoal_unparsed() {","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"sport/RUNNING type/DISTANCE period/WEEKLY target/10000\";","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"        ActivityGoal goal \u003d new ActivityGoal(TimeSpan.WEEKLY, ActivityGoal.GoalType.DISTANCE,","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"                ActivityGoal.Sport.RUNNING, 10000);","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"        String actual \u003d activityGoalList.unparse(goal);","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"    void unparse_swimmingDurationGoal_unparsed() {","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"sport/SWIMMING type/DURATION period/MONTHLY target/120\";","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"        ActivityGoal goal \u003d new ActivityGoal(TimeSpan.MONTHLY, ActivityGoal.GoalType.DURATION,","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"                ActivityGoal.Sport.SWIMMING, 120);","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"        String actual \u003d activityGoalList.unparse(goal);","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"    void parse_runningDistanceGoal_parsed() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"        ActivityGoal expected \u003d new ActivityGoal(TimeSpan.WEEKLY, ActivityGoal.GoalType.DISTANCE,","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"                ActivityGoal.Sport.RUNNING, 10000);","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"        String unparsedActivity \u003d activityGoalList.unparse(expected);","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"        ActivityGoal actual \u003d activityGoalList.parse(unparsedActivity);","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected.getGoalType(), actual.getGoalType());","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected.getSport(), actual.getSport());","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected.getTargetValue(), actual.getTargetValue());","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected.getTimeSpan(), actual.getTimeSpan());","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"    void parse_swimmingDurationGoal_parsed() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"        ActivityGoal expected \u003d new ActivityGoal(TimeSpan.MONTHLY, ActivityGoal.GoalType.DURATION,","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"                ActivityGoal.Sport.SWIMMING, 120);","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"        String unparsedActivity \u003d activityGoalList.unparse(expected);","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"        ActivityGoal actual \u003d activityGoalList.parse(unparsedActivity);","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected.getGoalType(), actual.getGoalType());","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected.getSport(), actual.getSport());","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected.getTargetValue(), actual.getTargetValue());","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected.getTimeSpan(), actual.getTimeSpan());","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"AlWo223":65}},{"path":"src/test/java/athleticli/data/activity/ActivityGoalTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"import static athleticli.data.Goal.TimeSpan;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"import static athleticli.data.activity.ActivityGoal.GoalType;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"import static athleticli.data.activity.ActivityGoal.Sport;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"class ActivityGoalTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    private ActivityList activityList;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"    private ActivityGoal activityGoal;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    private Data data;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"    private TimeSpan period \u003d TimeSpan.WEEKLY;","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"    private final LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"    private final String caption \u003d \"Sunday \u003d Runday\";","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"    private final int distance \u003d 3000;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"    void setUp() {","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"    void isAchieved_activityDistanceGoal_true() {","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"        int targetValue \u003d 8000;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"        GoalType goalType \u003d GoalType.DISTANCE;","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"        Sport sport \u003d Sport.GENERAL;","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"        activityGoal \u003d new ActivityGoal(period, goalType, sport, targetValue);","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"        LocalTime duration \u003d LocalTime.of(1, 24);","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"        LocalDateTime date \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"        Activity activity \u003d new Activity(caption, duration, distance, date);","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"        ActivityList activityList \u003d data.getActivities();","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"        activityList.add(activity);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"        activityList.add(activity);","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"        activityList.add(activity);","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"        boolean expected \u003d true;","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"        boolean actual \u003d activityGoal.isAchieved(data);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"    void isAchieved_runGoalWithNoTrackedRun_false() {","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"        int targetValue \u003d 8000;","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"        GoalType goalType \u003d GoalType.DISTANCE;","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"        Sport sport \u003d Sport.RUNNING;","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"        activityGoal \u003d new ActivityGoal(period, goalType, sport, targetValue);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"        LocalTime duration \u003d LocalTime.of(1, 24);","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"        LocalDateTime date \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"        Activity activity \u003d new Activity(caption, duration, distance, date);","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"        ActivityList activityList \u003d data.getActivities();","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"        activityList.add(activity);","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"        activityList.add(activity);","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"AlWo223"},"content":"        activityList.add(activity);","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"AlWo223"},"content":"        boolean expected \u003d false;","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"AlWo223"},"content":"        boolean actual \u003d activityGoal.isAchieved(data);","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"AlWo223"},"content":"    void isAchieved_goalAchievedOutsidePeriod_false() {","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"AlWo223"},"content":"        int targetValue \u003d 120;","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"AlWo223"},"content":"        GoalType goalType \u003d GoalType.DURATION;","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"AlWo223"},"content":"        Sport sport \u003d Sport.GENERAL;","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"AlWo223"},"content":"        activityGoal \u003d new ActivityGoal(period, goalType, sport, targetValue);","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"AlWo223"},"content":"        LocalTime duration \u003d LocalTime.of(1, 24);","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"AlWo223"},"content":"        LocalDateTime dateWithinPeriod \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"AlWo223"},"content":"        LocalDateTime dateOutsidePeriod \u003d LocalDateTime.now().minusDays(15);","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"AlWo223"},"content":"        Activity activityWithinPeriod \u003d new Activity(caption, duration, distance, dateWithinPeriod);","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"AlWo223"},"content":"        Activity activityOutsidePeriod \u003d new Activity(caption, duration, distance, dateOutsidePeriod);","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"AlWo223"},"content":"        ActivityList activityList \u003d data.getActivities();","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"AlWo223"},"content":"        activityList.add(activityWithinPeriod);","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"AlWo223"},"content":"        activityList.add(activityOutsidePeriod);","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"AlWo223"},"content":"        boolean expected \u003d false;","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"AlWo223"},"content":"        boolean actual \u003d activityGoal.isAchieved(data);","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"AlWo223"},"content":"    void getActivityClass() {","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"AlWo223"},"content":"        GoalType goalType \u003d GoalType.DURATION;","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"AlWo223"},"content":"        Sport sport \u003d Sport.RUNNING;","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"AlWo223"},"content":"        activityGoal \u003d new ActivityGoal(period, goalType, sport, 0);","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"AlWo223"},"content":"        Class\u003c?\u003e expected \u003d Run.class;","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"AlWo223"},"content":"        Class\u003c?\u003e actual \u003d activityGoal.getActivityClass();","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"skylee03":2,"AlWo223":104}},{"path":"src/test/java/athleticli/data/activity/ActivityListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import athleticli.data.Goal.TimeSpan;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"class ActivityListTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"    private static final String CAPTION \u003d \"Sunday \u003d Runday\";","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    private static final LocalTime DURATION \u003d LocalTime.of(1, 24);","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    private static final int DISTANCE \u003d 18120;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"    private ActivityList activityList;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    private Activity activityFirst;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    private Activity activitySecond;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"    void setUp() {","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"        activityList \u003d new ActivityList();","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"        LocalDateTime dateSecond \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"        LocalDateTime dateFirst \u003d LocalDateTime.now().minusDays(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"        activityFirst \u003d new Activity(CAPTION, DURATION, DISTANCE, dateFirst);","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"        activitySecond \u003d new Activity(CAPTION, DURATION, DISTANCE, dateSecond);","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"        activityList.add(activityFirst);","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"        activityList.add(activitySecond);","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"    void find() {","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"        assertEquals(activityList.find(LocalDate.now()).get(0), activitySecond);","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"        assertEquals(activityList.find(LocalDate.now().minusDays(1)).get(0), activityFirst);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"    void sort() {","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"        activityList.sort();","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"        assertEquals(activityList.get(0), activitySecond);","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"        assertEquals(activityList.get(1), activityFirst);","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"    void filterByTimespan() {","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"        activityList.sort();","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"skylee03"},"content":"        ArrayList\u003cActivity\u003e filteredList \u003d activityList.filterByTimespan(TimeSpan.WEEKLY);","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"        assertEquals(filteredList.get(0), activitySecond);","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"        assertEquals(filteredList.get(1), activityFirst);","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"skylee03"},"content":"        filteredList \u003d activityList.filterByTimespan(TimeSpan.DAILY);","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"        assertEquals(filteredList.get(0), activitySecond);","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"        assertEquals(filteredList.size(), 1);","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"    void getTotalDistance_activity_totalDistance() {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"        int expected \u003d 2 * DISTANCE;","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"skylee03"},"content":"        int actual \u003d activityList.getTotalDistance(Activity.class, TimeSpan.WEEKLY);","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"    void getTotalDistance_run_zero() {","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"AlWo223"},"content":"        int expected \u003d 0;","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"skylee03"},"content":"        int actual \u003d activityList.getTotalDistance(Run.class, TimeSpan.WEEKLY);","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"AlWo223"},"content":"    void getTotalDuration_activity_totalTime() {","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"AlWo223"},"content":"        int expected \u003d 2 * DURATION.toSecondOfDay();","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"skylee03"},"content":"        int actual \u003d activityList.getTotalDuration(Activity.class, TimeSpan.WEEKLY);","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"AlWo223"},"content":"    void getTotalDuration_run_zero() {","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"AlWo223"},"content":"        int expected \u003d 0;","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"skylee03"},"content":"        int actual \u003d activityList.getTotalDuration(Run.class, TimeSpan.WEEKLY);","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"AlWo223"},"content":"    void unparse_activity_unparsed() {","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"[Activity]: Morning Run duration/01:00:00 distance/10000 datetime/2021-09-01T06:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"AlWo223"},"content":"        Activity activity \u003d new Activity(\"Morning Run\", LocalTime.of(1, 0), 10000,","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"AlWo223"},"content":"                LocalDateTime.of(2021, 9, 1, 6, 0));","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"AlWo223"},"content":"        String actual \u003d activityList.unparse(activity);","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"AlWo223"},"content":"    void unparse_run_unparsed() {","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"[Run]: Morning Run duration/01:00:00 distance/10000 datetime/2021-09-01T06:00 elevation/60\";","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"AlWo223"},"content":"        Run run \u003d new Run(\"Morning Run\", LocalTime.of(1, 0), 10000,","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"AlWo223"},"content":"                LocalDateTime.of(2021, 9, 1, 6, 0), 60);","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"AlWo223"},"content":"        String actual \u003d activityList.unparse(run);","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"AlWo223"},"content":"    void parse_activity_parsed() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"AlWo223"},"content":"        Activity expected \u003d new Activity(\"Morning Run\", LocalTime.of(1, 0), 10000,","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"AlWo223"},"content":"                LocalDateTime.of(2021, 9, 1, 6, 0));","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"AlWo223"},"content":"        ActivityList activities \u003d new ActivityList();","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"AlWo223"},"content":"        String unparsedActivity \u003d activities.unparse(expected);","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"AlWo223"},"content":"        Activity actual \u003d activities.parse(unparsedActivity);","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected.getCaption(), actual.getCaption());","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected.getMovingTime(), actual.getMovingTime());","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected.getDistance(), actual.getDistance());","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected.getStartDateTime(), actual.getStartDateTime());","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"AlWo223"},"content":"    void parse_run_parsed() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"AlWo223"},"content":"        Run expected \u003d new Run(\"Morning Run\", LocalTime.of(1, 0), 10000,","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"AlWo223"},"content":"                LocalDateTime.of(2021, 9, 1, 6, 0), 60);","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"AlWo223"},"content":"        ActivityList activities \u003d new ActivityList();","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"AlWo223"},"content":"        String unparsedActivity \u003d activities.unparse(expected);","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"AlWo223"},"content":"        Run actual \u003d (Run) activities.parse(unparsedActivity);","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected.getCaption(), actual.getCaption());","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected.getMovingTime(), actual.getMovingTime());","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected.getDistance(), actual.getDistance());","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected.getStartDateTime(), actual.getStartDateTime());","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"skylee03":7,"AlWo223":126}},{"path":"src/test/java/athleticli/data/activity/ActivityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Disabled;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"public class ActivityTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    private static final String CAPTION \u003d \"Sunday \u003d Runday\";","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    private static final LocalTime DURATION \u003d LocalTime.of(1, 24);","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    private static final int DISTANCE \u003d 18120;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"    private static final LocalDateTime DATE \u003d LocalDateTime.of(2023, 10, 10, 23, 21);","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    private Activity activity;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"        activity \u003d new Activity(CAPTION, DURATION, DISTANCE, DATE);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"    public void testConstructorAndGetters() {","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"        assertEquals(CAPTION, activity.getCaption());","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"        assertEquals(DURATION, activity.getMovingTime());","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"        assertEquals(DISTANCE, activity.getDistance());","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"        assertEquals(DATE, activity.getStartDateTime());","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"[Activity] Sunday \u003d Runday | Distance: 18.12 km | Time: 1h 24m | \" +","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"                \"October 10, 2023 at 11:21 PM\";","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, activity.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"    @Disabled","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"    public void testToDetailedString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"[Activity - Sunday \u003d Runday - October 10, 2023 at 11:21 PM]\\n\" +","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"                \"\\tDistance: 18.12 km                     Time: 01:24:00\\n\" +","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"                \"\\tCalories: 0 kcal                       ...\";","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"        String actual \u003d activity.toDetailedString();","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"    public void generateDistanceStringOutput() {","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"        String actual \u003d activity.generateDistanceStringOutput();","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"Distance: 18.12 km\";","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"    public void generateMovingTimeStringOutput() {","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"        String actual \u003d activity.generateMovingTimeStringOutput();","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"Time: 01:24:00\";","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"    public void generateStartDateTimeStringOutput() {","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"        String actual \u003d activity.generateStartDateTimeStringOutput();","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"October 10, 2023 at 11:21 PM\";","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"AlWo223"},"content":"    public void formatTwoColumns() {","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"AlWo223"},"content":"        String actual \u003d activity.formatTwoColumns(\"Distance: 18.12 km\", \"Time: 1h 24m\", 30);","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"Distance: 18.12 km            Time: 1h 24m\";","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"AlWo223"},"content":"    void generateShortMovingTimeStringOutput_hoursNotZero() {","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"Time: 1h 24m\";","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"AlWo223"},"content":"        String actual \u003d activity.generateShortMovingTimeStringOutput();","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"AlWo223"},"content":"    void generateShortMovingTimeStringOutput_hoursZero() {","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"AlWo223"},"content":"        activity \u003d new Activity(CAPTION, LocalTime.of(0, 24, 20), DISTANCE, DATE);","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"Time: 24m 20s\";","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"AlWo223"},"content":"        String actual \u003d activity.generateShortMovingTimeStringOutput();","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlWo223":92}},{"path":"src/test/java/athleticli/data/activity/CycleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Disabled;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"public class CycleTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    private static final String CAPTION \u003d \"Cycling in the afternoon\";","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    private static final LocalTime DURATION \u003d LocalTime.of(2, 13);","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    private static final int DISTANCE \u003d 40460;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"    private static final int ELEVATION \u003d 101;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    private static final LocalDateTime DATE \u003d LocalDateTime.of(2023, 10, 7, 14, 0);","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    private Cycle cycle;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"        cycle \u003d new Cycle(CAPTION, DURATION, DISTANCE, DATE, ELEVATION);","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"    public void testConstructorAndGetters() {","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"        assertEquals(CAPTION, cycle.getCaption());","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"        assertEquals(DURATION, cycle.getMovingTime());","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"        assertEquals(DISTANCE, cycle.getDistance());","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"        assertEquals(DATE, cycle.getStartDateTime());","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"        assertEquals(ELEVATION, cycle.getElevationGain());","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"    public void calculateAverageSpeed() {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"        double expected \u003d 18.25;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"        double actual \u003d cycle.calculateAverageSpeed();","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual, 0.005);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"[Cycle] Cycling in the afternoon | Distance: 40.46 km | Speed: 18.25 km/h | Time: 2h 13m\" +","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"                \" | \"","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"                + \"October 7, 2023 at 2:00 PM\";","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, cycle.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"    @Disabled","lastModifiedDate":"2023-11-05"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"    public void testToDetailedString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"[Cycle - Cycling in the afternoon - October 7, 2023 at 2:00 PM]\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"                + \"\\tDistance: 40.46 km                     Elevation Gain: 101 m\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"                + \"\\tTime: 02:13:00                         Avg Speed: 18.25 km/h\\n\"","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"                + \"\\tCalories: 0 kcal                       Max Speed: tbd\";","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"        String actual \u003d cycle.toDetailedString();","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"    public void generateSpeedStringOutput() {","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"        String actual \u003d cycle.generateSpeedStringOutput();","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"18.25 km/h\";","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlWo223":68}},{"path":"src/test/java/athleticli/data/activity/RunTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Disabled;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"public class RunTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    private static final String CAPTION \u003d \"Night Run\";","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    private static final LocalTime DURATION \u003d LocalTime.of(1, 24);","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    private static final int DISTANCE \u003d 18120;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"    private static final LocalDateTime DATE \u003d LocalDateTime.of(2023, 10, 10, 23,","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"            21);","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    private static final int ELEVATION \u003d 60;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"    private Run run;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"        run \u003d new Run(CAPTION, DURATION, DISTANCE, DATE, ELEVATION);","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"    public void testConstructorAndGetters() {","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"        assertEquals(CAPTION, run.getCaption());","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"        assertEquals(DURATION, run.getMovingTime());","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"        assertEquals(DISTANCE, run.getDistance());","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"        assertEquals(DATE, run.getStartDateTime());","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"        assertEquals(ELEVATION, run.getElevationGain());","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"    public void calculateAveragePace() {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"        double averagePace \u003d run.calculateAveragePace();","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"        assertEquals(4.64, averagePace, 0.005);","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"    public void convertAveragePaceToString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"4:38\";","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"        String actual \u003d run.convertAveragePaceToString();","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"[Run] Night Run | Distance: 18.12 km | Pace: 4:38 /km | Time: 1h 24m | \" +","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"                \"October 10, 2023 at 11:21 PM\";","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, run.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"    @Disabled","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"    public void testToDetailedString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"[Run - Night Run - October 10, 2023 at 11:21 PM]\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"                + \"\\tDistance: 18.12 km                     Avg Pace: 4:38 /km\\n\"","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"                + \"\\tTime: 01:24:00                         Elevation Gain: 60 m\\n\"","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"                + \"\\tCalories: 0 kcal                       Steps: 0\";","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"        String actual \u003d run.toDetailedString();","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlWo223":66}},{"path":"src/test/java/athleticli/data/activity/SwimTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Disabled;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"public class SwimTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    private static final String CAPTION \u003d \"Afternoon Swim\";","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    private static final LocalTime DURATION \u003d LocalTime.of(0, 35);","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    private static final int DISTANCE \u003d 1000;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"    private static final LocalDateTime DATE \u003d LocalDateTime.of(2023, 8, 29, 9, 45);","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    private static final Swim.SwimmingStyle STYLE \u003d Swim.SwimmingStyle.BUTTERFLY;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    private Swim swim;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"        swim \u003d new Swim(CAPTION, DURATION, DISTANCE, DATE, STYLE);","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"    public void testConstructorAndGetters() {","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"        assertEquals(CAPTION, swim.getCaption());","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"        assertEquals(DURATION, swim.getMovingTime());","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"        assertEquals(DISTANCE, swim.getDistance());","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"        assertEquals(DATE, swim.getStartDateTime());","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"        assertEquals(STYLE, swim.getStyle());","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"    public void calculateAverageLapTime() {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"        assertEquals(105, swim.calculateAverageLapTime());","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"    public void calculateLaps() {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"        assertEquals(20, swim.calculateLaps());","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"[Swim] Afternoon Swim | Distance: 1.00 km | Avg Lap Time: 105s | Time: 35m 0s | \" +","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"                \"August 29, 2023 at 9:45 AM\";","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, swim.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"    @Disabled","lastModifiedDate":"2023-11-05"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"    public void testToDetailedString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"[Swim - Afternoon Swim - August 29, 2023 at 9:45 AM]\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"                + \"\\tDistance: 1.00 km                      Time: 00:35:00\\n\"","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"                + \"\\tLaps: 20                               Style: BUTTERFLY\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"                + \"\\tAvg Lap Time: 105 s                    Calories: 0 kcal\";","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"        String actual \u003d swim.toDetailedString();","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlWo223":64}},{"path":"src/test/java/athleticli/data/diet/DietGoalListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.data.diet;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Goal;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"class DietGoalListTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"    private static final int PROTEIN \u003d 10000;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"    private HealthyDietGoal proteinGoal;","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"    private DietGoalList dietGoals;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"    private Data data;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"    void setUp() {","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"        dietGoals \u003d new DietGoalList();","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"yicheng-toh"},"content":"        proteinGoal \u003d new HealthyDietGoal(Goal.TimeSpan.WEEKLY, \"protein\", PROTEIN);","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"yicheng-toh"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"    void add_addOneGoal_expectSizeOne() {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"        dietGoals.add(proteinGoal);","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"        assertEquals(1, dietGoals.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"    void remove_removeExistingGoal_expectSizeOne() {","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"        dietGoals.add(proteinGoal);","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"        dietGoals.remove(0);","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"        assertEquals(0, dietGoals.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"    void remove_removeFromZeroGoals_expectIndexOutOfRangeError() {","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"yicheng-toh"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"            dietGoals.remove(0);","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"yicheng-toh"},"content":"        });","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"nihalzp"},"content":"    void get_addOneGoal_expectGetSameGoal() {","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"nihalzp"},"content":"        dietGoals.add(proteinGoal);","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"nihalzp"},"content":"        assertEquals(proteinGoal, dietGoals.get(0));","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"nihalzp"},"content":"    void size_initializeArgs_expectZero() {","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"nihalzp"},"content":"        assertEquals(0, dietGoals.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"nihalzp"},"content":"    void size_addTenGoals_expectTen() {","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"yicheng-toh"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"nihalzp"},"content":"            dietGoals.add(proteinGoal);","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"nihalzp"},"content":"        assertEquals(10, dietGoals.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"yicheng-toh"},"content":"    void toString_oneExistingGoal_expectCorrectFormat() {","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"nihalzp"},"content":"        dietGoals.add(proteinGoal);","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"yicheng-toh"},"content":"        assertEquals(\"\\t1. [HEALTHY]  WEEKLY protein intake progress: (0/10000)\\n\", dietGoals.toString(data));","lastModifiedDate":"2023-11-04"},{"lineNumber":68,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"yicheng-toh"},"content":"    void unparse_oneDietGoal_expectCorrectFormat() {","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"yicheng-toh"},"content":"        String actualOutput \u003d dietGoals.unparse(proteinGoal);","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"yicheng-toh"},"content":"        assertEquals(\"dietGoal WEEKLY protein 10000 healthy\\n\", actualOutput);","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"yicheng-toh"},"content":"    void parse_validInput_expectDietGoal() throws AthletiException {","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"yicheng-toh"},"content":"        String validInput \u003d \"dietGoal WEEKLY protein 10000 healthy\";","lastModifiedDate":"2023-11-04"},{"lineNumber":79,"author":{"gitId":"yicheng-toh"},"content":"        DietGoal newProteinGoal \u003d dietGoals.parse(validInput);","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"yicheng-toh"},"content":"        assert newProteinGoal instanceof HealthyDietGoal;","lastModifiedDate":"2023-11-04"},{"lineNumber":81,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"yicheng-toh"},"content":"    void parse_invalidInput_expectDietGoal() throws AthletiException {","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"yicheng-toh"},"content":"        String validInput \u003d \"dietGoal WEEKLYprotein10000\";","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"yicheng-toh"},"content":"        assertThrows(AthletiException.class, () -\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"yicheng-toh"},"content":"            dietGoals.parse(validInput);","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"yicheng-toh"},"content":"        });","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"yicheng-toh":63,"nihalzp":27}},{"path":"src/test/java/athleticli/data/diet/DietGoalStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yicheng-toh"},"content":"package athleticli.data.diet;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":" * DietGoalStub is use for isolation testing of the DietGoal abstract class","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"public class DietGoalStub extends DietGoal {","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"     * Constructs a diet goal.","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"     * @param timespan    The timespan of the diet goal.","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"     * @param nutrient    The nutrients of the diet goal.","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"     * @param targetValue The target value of the diet goal.","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"    public DietGoalStub(TimeSpan timespan, String nutrient, int targetValue) {","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"        super(timespan, nutrient, targetValue);","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"yicheng-toh":17}},{"path":"src/test/java/athleticli/data/diet/DietGoalTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.data.diet;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.commands.diet.AddDietCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"import athleticli.data.Goal;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"class DietGoalTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"    private DietGoalStub proteinGoal;","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"yicheng-toh"},"content":"    private Data data;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":"    private Diet diet;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":"    private final int calories \u003d 10000;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"yicheng-toh"},"content":"    private final int protein \u003d 20000;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"yicheng-toh"},"content":"    private final int carb \u003d 30000;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"    private final int fats \u003d 40000;","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"    private final LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"yicheng-toh"},"content":"    void setUp() {","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"        proteinGoal \u003d new DietGoalStub(Goal.TimeSpan.WEEKLY, \"protein\", 10000);","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"        diet \u003d new Diet(calories, protein, carb, fats, dateTime);","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"yicheng-toh"},"content":"    void getNutrients_initializeCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"yicheng-toh"},"content":"        assertEquals(\"protein\", proteinGoal.getNutrient());","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"yicheng-toh"},"content":"    void setNutrients_setCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"yicheng-toh"},"content":"        proteinGoal.setNutrient(\"Advanced Protein\");","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"yicheng-toh"},"content":"        assertEquals(\"Advanced Protein\", proteinGoal.getNutrient());","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"yicheng-toh"},"content":"    void getTargetValue_initializeCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"yicheng-toh"},"content":"        assertEquals(10000, proteinGoal.getTargetValue());","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"yicheng-toh"},"content":"    void setTargetValue_initializeCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"yicheng-toh"},"content":"        proteinGoal.setTargetValue(10);","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"yicheng-toh"},"content":"        assertEquals(10, proteinGoal.getTargetValue());","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"yicheng-toh"},"content":"    void getCurrentValue_initializeCommonArgs_expectZero() {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"yicheng-toh"},"content":"        assertEquals(0, proteinGoal.getCurrentValue(data));","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"yicheng-toh"},"content":"    void setCurrentValue() {","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"yicheng-toh"},"content":"        AddDietCommand addDietCommand \u003d new AddDietCommand(diet);","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"yicheng-toh"},"content":"        addDietCommand.execute(data);","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"yicheng-toh"},"content":"        assertEquals(20000, proteinGoal.getCurrentValue(data));","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"yicheng-toh"},"content":"    void isAchieved_currentValueEqualToTargetValue_expectTrue() {","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"yicheng-toh"},"content":"        AddDietCommand addDietCommand \u003d new AddDietCommand(diet);","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"yicheng-toh"},"content":"        addDietCommand.execute(data);","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"yicheng-toh"},"content":"        assertTrue(proteinGoal.isAchieved(data));","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"yicheng-toh"},"content":"    void isAchieved_currentValueLesserThanTargetValue_expectFalse() {","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"yicheng-toh"},"content":"        assertFalse(proteinGoal.isAchieved(data));","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"yicheng-toh"},"content":"    void toString_initializeCommonArgs_expectCorrectFormat() {","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"yicheng-toh"},"content":"        String expectedString \u003d \" WEEKLY protein intake progress: (0/10000)\\n\";","lastModifiedDate":"2023-11-04"},{"lineNumber":83,"author":{"gitId":"yicheng-toh"},"content":"        assertEquals(expectedString, proteinGoal.toString(data));","lastModifiedDate":"2023-11-04"},{"lineNumber":84,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"yicheng-toh":84,"nihalzp":1}},{"path":"src/test/java/athleticli/data/diet/DietListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.data.diet;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"public class DietListTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"    private static final int CALORIES \u003d 10000;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"    private static final int PROTEIN \u003d 20000;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"    private static final int CARB \u003d 30000;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"    private static final int FAT \u003d 40000;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"    private static final LocalDateTime DATE_TIME \u003d LocalDateTime.of(2020, 10, 10, 10, 10);","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"    private Diet diet;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"    private DietList dietList;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"    void setUp() {","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"        dietList \u003d new DietList();","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"        diet \u003d new Diet(CALORIES, PROTEIN, CARB, FAT, DATE_TIME);","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"    void add_addOneDiet_expectSizeOne() {","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"        dietList.add(diet);","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"        assertEquals(1, dietList.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"    void remove_removeExistingDiet_expectSizeOne() {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"        dietList.add(diet);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"        dietList.remove(0);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"        assertEquals(0, dietList.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"    void remove_removeFromZeroDiets_expectIndexOutOfRangeError() {","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"            dietList.remove(0);","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"nihalzp"},"content":"        });","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"nihalzp"},"content":"    void get_addOneDiet_expectGetSameDiet() {","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"nihalzp"},"content":"        dietList.add(diet);","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"nihalzp"},"content":"        assertEquals(diet, dietList.get(0));","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"nihalzp"},"content":"    void size_initializeArgs_expectZero() {","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"nihalzp"},"content":"        assertEquals(0, dietList.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"nihalzp"},"content":"    void size_addTenDiets_expectTen() {","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"nihalzp"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"nihalzp"},"content":"            dietList.add(diet);","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"nihalzp"},"content":"        assertEquals(10, dietList.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"nihalzp"},"content":"    void testToString_oneExistingDiet_expectCorrectFormat() {","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"nihalzp"},"content":"        dietList.add(diet);","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"nihalzp"},"content":"        assertEquals(\"1. \" + diet, dietList.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"nihalzp"},"content":"    void testToString_twoExistingDiets_expectCorrectFormat() {","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"nihalzp"},"content":"        dietList.add(diet);","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"nihalzp"},"content":"        dietList.add(diet);","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"nihalzp"},"content":"        assertEquals(\"1. \" + diet.toString() + \"\\n2. \" + diet.toString(), dietList.toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"nihalzp"},"content":"    void testToString_zeroExistingDiets_expectCorrectFormat() {","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"nihalzp"},"content":"        assertEquals(\"\", dietList.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"nihalzp"},"content":"    void testToString_threeExistingDiets_expectCorrectFormat() {","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"nihalzp"},"content":"        dietList.add(diet);","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"nihalzp"},"content":"        dietList.add(diet);","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"nihalzp"},"content":"        dietList.add(diet);","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"nihalzp"},"content":"        assertEquals(\"1. \" + diet.toString() + \"\\n2. \" + diet.toString() + \"\\n3. \" + diet.toString(),","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"nihalzp"},"content":"                dietList.toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"nihalzp"},"content":"    void unparse_oneExistingDiet_expectCorrectFormat() {","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"nihalzp"},"content":"        String commandArgs \u003d \"calories/10000 protein/20000 carb/30000 fat/40000 datetime/2020-10-10T10:10\";","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"nihalzp"},"content":"        assertEquals(commandArgs, dietList.unparse(diet));","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"nihalzp"},"content":"    void parse_oneExistingDiet_expectCorrectFormat() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"nihalzp"},"content":"        String commandArgs \u003d \"calories/10000 protein/20000 carb/30000 fat/40000 datetime/2020-10-10T10:10\";","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"nihalzp"},"content":"        assertEquals(diet.toString(), dietList.parse(commandArgs).toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"nihalzp"},"content":"    void parse_oneExistingDietWithExtraSpaces_expectCorrectFormat() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"nihalzp"},"content":"        String commandArgs \u003d \"calories/10000 protein/20000 carb/30000 fat/40000 datetime/2020-10-10T10:10\";","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"nihalzp"},"content":"        assertEquals(diet.toString(), dietList.parse(commandArgs).toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"nihalzp"},"content":"    void parse_dietConstructorWithDietListParse_expectSameDiet() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"nihalzp"},"content":"        String commandArgs \u003d dietList.unparse(diet);","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"nihalzp"},"content":"        assertEquals(diet.toString(), dietList.parse(commandArgs).toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"nihalzp":117}},{"path":"src/test/java/athleticli/data/diet/DietTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.data.diet;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"public class DietTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"    private static final int CALORIES \u003d 10000;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"    private static final int PROTEIN \u003d 20000;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"    private static final int CARB \u003d 30000;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"    private static final int FAT \u003d 40000;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"    private static final LocalDateTime DATE_TIME \u003d LocalDateTime.of(2020, 10, 10, 10, 10);","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"    private Diet diet;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"    void setUp() {","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"        diet \u003d new Diet(CALORIES, PROTEIN, CARB, FAT, DATE_TIME);","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"    void getCalories_initializeCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"        assertEquals(CALORIES, diet.getCalories());","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"    void setCalories_setCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"        diet.setCalories(10);","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"        assertEquals(10, diet.getCalories());","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"    void getProtein_initializeCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"        assertEquals(PROTEIN, diet.getProtein());","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"    void setProtein_setCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"        diet.setProtein(20);","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"        assertEquals(20, diet.getProtein());","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"nihalzp"},"content":"    void getCarb_initializeCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"nihalzp"},"content":"        assertEquals(CARB, diet.getCarb());","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"nihalzp"},"content":"    void setCarb_setCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"nihalzp"},"content":"        diet.setCarb(30);","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"nihalzp"},"content":"        assertEquals(30, diet.getCarb());","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"nihalzp"},"content":"    void getFat_initializeCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"nihalzp"},"content":"        assertEquals(FAT, diet.getFat());","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"nihalzp"},"content":"    void setFat_setCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"nihalzp"},"content":"        diet.setFat(40);","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"nihalzp"},"content":"        assertEquals(40, diet.getFat());","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"nihalzp"},"content":"    void getDateTime_initializeCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"nihalzp"},"content":"        assertEquals(DATE_TIME, diet.getDateTime());","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"nihalzp"},"content":"    void setDateTime_setCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"nihalzp"},"content":"        LocalDateTime newDateTime \u003d LocalDateTime.of(2020, 10, 10, 10, 11);","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"nihalzp"},"content":"        diet.setDateTime(newDateTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"nihalzp"},"content":"        assertEquals(newDateTime, diet.getDateTime());","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"nihalzp"},"content":"    void toString_initializeCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"nihalzp"},"content":"        String expected \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"nihalzp"},"content":"                \"Calories: 10000 Protein: 20000 Carb: 30000 Fat: 40000 Date: October 10, 2020 at 10:10 AM\";","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"nihalzp"},"content":"        assertEquals(expected, diet.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"nihalzp":86}},{"path":"src/test/java/athleticli/data/sleep/SleepListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package athleticli.data.sleep;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.Goal.TimeSpan;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"public class SleepListTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    private SleepList sleepList;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"    private Sleep sleepFirst;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"    private Sleep sleepSecond;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"    public void setup() {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"        sleepList \u003d new SleepList();","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"        LocalDateTime dateSecond \u003d LocalDateTime.now();","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"        LocalDateTime dateFirst \u003d LocalDateTime.now().minusDays(1);","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"        sleepFirst \u003d new Sleep(dateFirst, dateFirst.plusHours(8));","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"        sleepSecond \u003d new Sleep(dateSecond, dateSecond.plusHours(8));","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(sleepFirst);","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(sleepSecond);","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"    public void testFind() {","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(sleepList.find(LocalDate.now()).get(0), sleepSecond);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(sleepList.find(LocalDate.now().minusDays(1)).get(0), sleepFirst);","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"    public void testSort() {","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"        sleepList.sort();","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(sleepList.get(0), sleepSecond);","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(sleepList.get(1), sleepFirst);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"    public void testFilterByTimespan() {","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"        sleepList.sort();","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"        ArrayList\u003cSleep\u003e result \u003d sleepList.filterByTimespan(TimeSpan.WEEKLY);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(result.get(0), sleepSecond);","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(result.get(1), sleepFirst);","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"        result \u003d sleepList.filterByTimespan(TimeSpan.DAILY);","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(result.get(0), sleepSecond);","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(result.size(), 1);","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"    public void testGetTotalSleepDuration() {","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"        int expected \u003d 8 * 60 * 60 * 2;","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"        int actual \u003d sleepList.getTotalSleepDuration(Sleep.class, TimeSpan.WEEKLY);","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"DaDevChia":60}},{"path":"src/test/java/athleticli/data/sleep/SleepTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package athleticli.data.sleep;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"public class SleepTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"    private Sleep sleep;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"    public void setup() {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"        from \u003d LocalDateTime.of(2023, 10, 17, 22, 0);","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"        to \u003d LocalDateTime.of(2023, 10, 18, 6, 0);","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"        sleep \u003d new Sleep(from, to);","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"        Sleep sleep \u003d new Sleep(from, to);","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"        String expected \u003d \"[Sleep] | Date: 2023-10-17 | Start Time: October 17, 2023 at 10:00 PM \" +","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"            \"| End Time: October 18, 2023 at 6:00 AM | Sleeping Duration: 8 Hours \";","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(expected, sleep.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"    public void testCalculateSleepingDuration() {","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(8, sleep.getSleepingTime().getHour());","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(0, sleep.getSleepingTime().getMinute());","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"    public void testCalculateSleepDate() {","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"        LocalDateTime sleepBefore6AM \u003d LocalDateTime.of(2023, 10, 18, 5, 0);","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"        Sleep sleepEarly \u003d new Sleep(sleepBefore6AM, to);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(sleepBefore6AM.toLocalDate().minusDays(1), sleepEarly.getSleepDate());","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"        LocalDateTime sleepAfter6AM \u003d LocalDateTime.of(2023, 10, 17, 7, 0);","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"        Sleep sleepLate \u003d new Sleep(sleepAfter6AM, to);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(sleepAfter6AM.toLocalDate(), sleepLate.getSleepDate());","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"    public void testGenerateSleepingDurationStringOutput() {","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(\"Sleeping Duration: 8 Hours \", sleep.generateSleepingDurationStringOutput());","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"    public void testGenerateStartDateTimeStringOutput() {","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(\"Start Time: October 17, 2023 at 10:00 PM\", sleep.generateStartDateTimeStringOutput());","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"DaDevChia"},"content":"    public void testGenerateToDateTimeStringOutput() {","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(\"End Time: October 18, 2023 at 6:00 AM\", sleep.generateToDateTimeStringOutput());","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"DaDevChia"},"content":"    public void testGenerateSleepDateStringOutput() {","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(\"Date: 2023-10-17\", sleep.generateSleepDateStringOutput());","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"DaDevChia":67}},{"path":"src/test/java/athleticli/parser/ActivityParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"import athleticli.data.Goal;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"import athleticli.data.activity.Activity;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"import athleticli.data.activity.ActivityGoal;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"import athleticli.data.activity.Run;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"import athleticli.data.activity.Swim;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"public class ActivityParserTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    //@@author  AlWo223","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"    void parseActivityIndex_validIndex_returnIndex() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"        int expected \u003d 5;","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"        int actual \u003d ActivityParser.parseActivityIndex(\"5\");","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"    void parseActivityIndex_invalidIndex_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"        assertThrows(AthletiException.class, () -\u003e ActivityParser.parseActivityIndex(\"abc\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"    void parseActivityEdit_validInput_returnActivityEdit() {","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"        String validInput \u003d \"1 Morning Run distance/10000 datetime/2021-09-01 06:00\";","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"        assertDoesNotThrow(() -\u003e ActivityParser.parseActivityEdit(validInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"    void parseActivityEdit_invalidInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"        String invalidInput \u003d \"1 Morning Run duration/60\";","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"        assertThrows(AthletiException.class, () -\u003e ActivityParser.parseActivityEdit(invalidInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"    void parseRunEdit_invalidInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"        String invalidInput \u003d \"1 Morning Run duration/60\";","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"        assertThrows(AthletiException.class, () -\u003e ActivityParser.parseRunCycleEdit(invalidInput));","lastModifiedDate":"2023-11-05"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"    void parseRunEdit_validInput_returnRunEdit() {","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"        String validInput \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"                \"2 duration/02:00:00 distance/20000 datetime/2021-09-01 18:00 elevation/1000\";","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"        assertDoesNotThrow(() -\u003e ActivityParser.parseRunCycleEdit(validInput));","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"    void parseCycleEdit_validInput_returnRunEdit() {","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"        String validInput \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"                \"2 Evening Ride datetime/2021-09-01 18:00 elevation/1000\";","lastModifiedDate":"2023-11-05"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"        assertDoesNotThrow(() -\u003e ActivityParser.parseRunCycleEdit(validInput));","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"    void parseCycleEdit_invalidInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"AlWo223"},"content":"        String invalidInput \u003d \"1 \";","lastModifiedDate":"2023-11-05"},{"lineNumber":70,"author":{"gitId":"AlWo223"},"content":"        assertThrows(AthletiException.class, () -\u003e ActivityParser.parseRunCycleEdit(invalidInput));","lastModifiedDate":"2023-11-05"},{"lineNumber":71,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"AlWo223"},"content":"    void parseSwimEdit_validInput_noExceptionThrown() {","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"AlWo223"},"content":"        String validInput \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"AlWo223"},"content":"                \"2 Evening Ride duration/02:00:00 distance/20000 datetime/2021-09-01 18:00 style/freestyle\";","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"AlWo223"},"content":"        assertDoesNotThrow(() -\u003e ActivityParser.parseSwimEdit(validInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"AlWo223"},"content":"    void parseSwimEdit_invalidInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"AlWo223"},"content":"        String invalidInput \u003d \"1 Morning Run duration/60\";","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"AlWo223"},"content":"        assertThrows(AthletiException.class, () -\u003e ActivityParser.parseRunCycleEdit(invalidInput));","lastModifiedDate":"2023-11-05"},{"lineNumber":84,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"AlWo223"},"content":"    void parseActivityEditIndex_validInput_returnIndex() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"AlWo223"},"content":"        int expected \u003d 5;","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"AlWo223"},"content":"        int actual \u003d ActivityParser.parseActivityEditIndex(\"5\");","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"AlWo223"},"content":"    void parseActivityListDetail_flagPresent_returnTrue() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"AlWo223"},"content":"        String input \u003d \"list-activity -d\";","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"AlWo223"},"content":"        assertTrue(ActivityParser.parseActivityListDetail(input));","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"AlWo223"},"content":"    void parseActivityListDetail_flagAbsent_returnFalse() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"AlWo223"},"content":"        String input \u003d \"list-activity\";","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"AlWo223"},"content":"        assertFalse(ActivityParser.parseActivityListDetail(input));","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"AlWo223"},"content":"    void parseActivity_validInput_activityParsed() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"AlWo223"},"content":"        String validInput \u003d \"Morning Run duration/01:00:00 distance/10000 datetime/2021-09-01 06:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"AlWo223"},"content":"        Activity actual \u003d ActivityParser.parseActivity(validInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"AlWo223"},"content":"        LocalTime duration \u003d LocalTime.parse(\"01:00:00\", DateTimeFormatter.ofPattern(\"HH:mm:ss\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"AlWo223"},"content":"        LocalDateTime time \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"AlWo223"},"content":"                LocalDateTime.parse(\"2021-09-01 06:00\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"AlWo223"},"content":"        Activity expected \u003d new Activity(\"Morning Run\", duration, 10000, time);","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual.getCaption(), expected.getCaption());","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual.getMovingTime(), expected.getMovingTime());","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual.getDistance(), expected.getDistance());","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual.getStartDateTime(), expected.getStartDateTime());","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"AlWo223"},"content":"    void parseActivityGoal_validInput_activityGoalParsed() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"AlWo223"},"content":"        String validInput \u003d \"sport/running type/distance period/weekly target/10000\";","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"AlWo223"},"content":"        ActivityGoal actual \u003d ActivityParser.parseActivityGoal(validInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"AlWo223"},"content":"        ActivityGoal expected \u003d new ActivityGoal(Goal.TimeSpan.WEEKLY, ActivityGoal.GoalType.DISTANCE,","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"AlWo223"},"content":"                ActivityGoal.Sport.RUNNING, 10000);","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual.getTimeSpan(), expected.getTimeSpan());","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual.getGoalType(), expected.getGoalType());","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual.getSport(), expected.getSport());","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual.getTargetValue(), expected.getTargetValue());","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"AlWo223"},"content":"    void parseSport_validInput_sportParsed() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"AlWo223"},"content":"        String validInput \u003d \"running\";","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"AlWo223"},"content":"        ActivityGoal.Sport actual \u003d ActivityParser.parseSport(validInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"AlWo223"},"content":"        ActivityGoal.Sport expected \u003d ActivityGoal.Sport.RUNNING;","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"AlWo223"},"content":"    void parseSport_invalidInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"AlWo223"},"content":"        String invalidInput \u003d \"abc\";","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"AlWo223"},"content":"        assertThrows(AthletiException.class, () -\u003e ActivityParser.parseSport(invalidInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"AlWo223"},"content":"    void parseGoalType_validInput_goalTypeParsed() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"AlWo223"},"content":"        String validInput \u003d \"distance\";","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"AlWo223"},"content":"        ActivityGoal.GoalType actual \u003d ActivityParser.parseGoalType(validInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"AlWo223"},"content":"        ActivityGoal.GoalType expected \u003d ActivityGoal.GoalType.DISTANCE;","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"AlWo223"},"content":"    void parsePeriod_validInput_periodParsed() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"AlWo223"},"content":"        String validInput \u003d \"weekly\";","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"AlWo223"},"content":"        Goal.TimeSpan actual \u003d ActivityParser.parsePeriod(validInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"AlWo223"},"content":"        Goal.TimeSpan expected \u003d Goal.TimeSpan.WEEKLY;","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"AlWo223"},"content":"    void parsePeriod_invalidInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"AlWo223"},"content":"        String invalidInput \u003d \"abc\";","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"AlWo223"},"content":"        assertThrows(AthletiException.class, () -\u003e ActivityParser.parsePeriod(invalidInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"AlWo223"},"content":"    void parseTarget_validInput_targetParsed() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"AlWo223"},"content":"        String validInput \u003d \"10000\";","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"AlWo223"},"content":"        int actual \u003d ActivityParser.parseTarget(validInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"AlWo223"},"content":"        int expected \u003d 10000;","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"AlWo223"},"content":"    void parseTarget_invalidInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"AlWo223"},"content":"        String invalidInput \u003d \"abc\";","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"AlWo223"},"content":"        assertThrows(AthletiException.class, () -\u003e ActivityParser.parseTarget(invalidInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"AlWo223"},"content":"    void checkMissingActivityGoalArguments_missingSport_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"AlWo223"},"content":"        assertThrows(AthletiException.class, () -\u003e ActivityParser.checkMissingActivityGoalArguments(-1, 1, 1, 1));","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"AlWo223"},"content":"    void checkMissingActivityGoalArguments_noMissingArguments_noExceptionThrown() {","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"AlWo223"},"content":"        assertDoesNotThrow(() -\u003e ActivityParser.checkMissingActivityGoalArguments(1, 1, 1, 1));","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"AlWo223"},"content":"    void parseDuration_validInput_durationParsed() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":193,"author":{"gitId":"AlWo223"},"content":"        String validInput \u003d \"01:00:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"AlWo223"},"content":"        LocalTime actual \u003d ActivityParser.parseDuration(validInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"AlWo223"},"content":"        LocalTime expected \u003d LocalTime.parse(\"01:00:00\", DateTimeFormatter.ofPattern(\"HH:mm:ss\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":196,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"AlWo223"},"content":"    void parseDuration_invalidInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":201,"author":{"gitId":"AlWo223"},"content":"        String invalidInput \u003d \"abc\";","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"AlWo223"},"content":"        assertThrows(AthletiException.class, () -\u003e ActivityParser.parseDuration(invalidInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":205,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":206,"author":{"gitId":"AlWo223"},"content":"    void parseDistance_validInput_distanceParsed() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":207,"author":{"gitId":"AlWo223"},"content":"        String validInput \u003d \"10000\";","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"AlWo223"},"content":"        int actual \u003d ActivityParser.parseDistance(validInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":209,"author":{"gitId":"AlWo223"},"content":"        int expected \u003d 10000;","lastModifiedDate":"2023-11-02"},{"lineNumber":210,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2023-11-02"},{"lineNumber":211,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":212,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":213,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"AlWo223"},"content":"    void parseDistance_invalidInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":215,"author":{"gitId":"AlWo223"},"content":"        String invalidInput \u003d \"abc\";","lastModifiedDate":"2023-11-02"},{"lineNumber":216,"author":{"gitId":"AlWo223"},"content":"        assertThrows(AthletiException.class, () -\u003e ActivityParser.parseDistance(invalidInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":217,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":218,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":219,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":220,"author":{"gitId":"AlWo223"},"content":"    void checkMissingActivityArguments_missingDuration_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":221,"author":{"gitId":"AlWo223"},"content":"        assertThrows(AthletiException.class, () -\u003e ActivityParser.checkMissingActivityArguments(-1, 1, 1));","lastModifiedDate":"2023-11-02"},{"lineNumber":222,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":223,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":224,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":225,"author":{"gitId":"AlWo223"},"content":"    void checkMissingActivityArguments_noMissingArguments_noExceptionThrown() {","lastModifiedDate":"2023-11-02"},{"lineNumber":226,"author":{"gitId":"AlWo223"},"content":"        assertDoesNotThrow(() -\u003e ActivityParser.checkMissingActivityArguments(1, 1, 1));","lastModifiedDate":"2023-11-02"},{"lineNumber":227,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":228,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":229,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":230,"author":{"gitId":"AlWo223"},"content":"    void parseRunCycle_validInput_activityParsed() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":231,"author":{"gitId":"AlWo223"},"content":"        String validInput \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"AlWo223"},"content":"                \"Morning Run duration/01:00:00 distance/10000 datetime/2021-09-01 06:00 elevation/60\";","lastModifiedDate":"2023-11-02"},{"lineNumber":233,"author":{"gitId":"AlWo223"},"content":"        Run actual \u003d (Run) ActivityParser.parseRunCycle(validInput, true);","lastModifiedDate":"2023-11-02"},{"lineNumber":234,"author":{"gitId":"AlWo223"},"content":"        LocalTime movingTime \u003d LocalTime.parse(\"01:00:00\", DateTimeFormatter.ofPattern(\"HH:mm:ss\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":235,"author":{"gitId":"AlWo223"},"content":"        LocalDateTime time \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":236,"author":{"gitId":"AlWo223"},"content":"                LocalDateTime.parse(\"2021-09-01 06:00\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"AlWo223"},"content":"        Run expected \u003d new Run(\"Morning Run\", movingTime, 10000, time, 60);","lastModifiedDate":"2023-11-02"},{"lineNumber":238,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual.getCaption(), expected.getCaption());","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual.getMovingTime(), expected.getMovingTime());","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual.getDistance(), expected.getDistance());","lastModifiedDate":"2023-11-02"},{"lineNumber":241,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual.getStartDateTime(), expected.getStartDateTime());","lastModifiedDate":"2023-11-02"},{"lineNumber":242,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual.getElevationGain(), expected.getElevationGain());","lastModifiedDate":"2023-11-02"},{"lineNumber":243,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":244,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":246,"author":{"gitId":"AlWo223"},"content":"    void parseElevation_validInput_elevationParsed() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"AlWo223"},"content":"        String validInput \u003d \"60\";","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"AlWo223"},"content":"        int actual \u003d ActivityParser.parseElevation(validInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"AlWo223"},"content":"        int expected \u003d 60;","lastModifiedDate":"2023-11-02"},{"lineNumber":250,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":252,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":253,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":254,"author":{"gitId":"AlWo223"},"content":"    void parseElevation_invalidInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":255,"author":{"gitId":"AlWo223"},"content":"        String invalidInput \u003d \"abc\";","lastModifiedDate":"2023-11-02"},{"lineNumber":256,"author":{"gitId":"AlWo223"},"content":"        assertThrows(AthletiException.class, () -\u003e ActivityParser.parseElevation(invalidInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":258,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":259,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":260,"author":{"gitId":"AlWo223"},"content":"    void checkMissingRunCycleArguments_missingElevation_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":261,"author":{"gitId":"AlWo223"},"content":"        assertThrows(AthletiException.class, () -\u003e ActivityParser.checkMissingRunCycleArguments(1, 1, 1, -1));","lastModifiedDate":"2023-11-02"},{"lineNumber":262,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":263,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":264,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":265,"author":{"gitId":"AlWo223"},"content":"    void checkMissingRunCycleArguments_noMissingArguments_noExceptionThrown() {","lastModifiedDate":"2023-11-02"},{"lineNumber":266,"author":{"gitId":"AlWo223"},"content":"        assertDoesNotThrow(() -\u003e ActivityParser.checkMissingRunCycleArguments(1, 1, 1, 1));","lastModifiedDate":"2023-11-02"},{"lineNumber":267,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":268,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":269,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":270,"author":{"gitId":"AlWo223"},"content":"    void checkMissingSwimArguments_missingStyle_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":271,"author":{"gitId":"AlWo223"},"content":"        assertThrows(AthletiException.class, () -\u003e ActivityParser.checkMissingSwimArguments(1, 1, 1, -1));","lastModifiedDate":"2023-11-02"},{"lineNumber":272,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":273,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":274,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":275,"author":{"gitId":"AlWo223"},"content":"    void checkMissingSwimArguments_noMissingArguments_noExceptionThrown() {","lastModifiedDate":"2023-11-02"},{"lineNumber":276,"author":{"gitId":"AlWo223"},"content":"        assertDoesNotThrow(() -\u003e ActivityParser.checkMissingSwimArguments(1, 1, 1, 1));","lastModifiedDate":"2023-11-02"},{"lineNumber":277,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":278,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":279,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":280,"author":{"gitId":"AlWo223"},"content":"    void checkEmptyActivityArguments_emptyCaption_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":281,"author":{"gitId":"AlWo223"},"content":"        assertThrows(AthletiException.class, () -\u003e ActivityParser.checkEmptyActivityArguments(\"\", \" \", \" \", \" \"));","lastModifiedDate":"2023-11-02"},{"lineNumber":282,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":283,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":284,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":285,"author":{"gitId":"AlWo223"},"content":"    void parseSwim_validInput_swimParsed() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":286,"author":{"gitId":"AlWo223"},"content":"        String validInput \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":287,"author":{"gitId":"AlWo223"},"content":"                \"Evening Swim duration/02:00:00 distance/20000 datetime/2021-09-01 18:00 style/freestyle\";","lastModifiedDate":"2023-11-02"},{"lineNumber":288,"author":{"gitId":"AlWo223"},"content":"        Swim actual \u003d (Swim) ActivityParser.parseSwim(validInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":289,"author":{"gitId":"AlWo223"},"content":"        LocalTime movingTime \u003d LocalTime.parse(\"02:00:00\", DateTimeFormatter.ofPattern(\"HH:mm:ss\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":290,"author":{"gitId":"AlWo223"},"content":"        LocalDateTime time \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":291,"author":{"gitId":"AlWo223"},"content":"                LocalDateTime.parse(\"2021-09-01 18:00\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":292,"author":{"gitId":"AlWo223"},"content":"        Swim expected \u003d new Swim(\"Evening Swim\", movingTime, 20000, time, Swim.SwimmingStyle.FREESTYLE);","lastModifiedDate":"2023-11-02"},{"lineNumber":293,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual.getCaption(), expected.getCaption());","lastModifiedDate":"2023-11-02"},{"lineNumber":294,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual.getMovingTime(), expected.getMovingTime());","lastModifiedDate":"2023-11-02"},{"lineNumber":295,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual.getDistance(), expected.getDistance());","lastModifiedDate":"2023-11-02"},{"lineNumber":296,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual.getStartDateTime(), expected.getStartDateTime());","lastModifiedDate":"2023-11-02"},{"lineNumber":297,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual.getStyle(), expected.getStyle());","lastModifiedDate":"2023-11-02"},{"lineNumber":298,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":299,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":300,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":301,"author":{"gitId":"AlWo223"},"content":"    void parseSwimmingStyle_validInput_styleParsed() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":302,"author":{"gitId":"AlWo223"},"content":"        String validInput \u003d \"freestyle\";","lastModifiedDate":"2023-11-02"},{"lineNumber":303,"author":{"gitId":"AlWo223"},"content":"        Swim.SwimmingStyle actual \u003d ActivityParser.parseSwimmingStyle(validInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":304,"author":{"gitId":"AlWo223"},"content":"        Swim.SwimmingStyle expected \u003d Swim.SwimmingStyle.FREESTYLE;","lastModifiedDate":"2023-11-02"},{"lineNumber":305,"author":{"gitId":"AlWo223"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2023-11-02"},{"lineNumber":306,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":307,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":308,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":309,"author":{"gitId":"AlWo223"},"content":"    void checkEmptyActivityArguments_noEmptyArguments_noExceptionThrown() {","lastModifiedDate":"2023-11-02"},{"lineNumber":310,"author":{"gitId":"AlWo223"},"content":"        assertDoesNotThrow(() -\u003e ActivityParser.checkEmptyActivityArguments(\"1\", \"1\", \"1\", \"1\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":311,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":312,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"skylee03":21,"AlWo223":291}},{"path":"src/test/java/athleticli/parser/DietParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import static athleticli.parser.DietParser.checkEmptyDietArguments;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import static athleticli.parser.DietParser.checkMissingDietArguments;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"import static athleticli.parser.DietParser.getValueForMarker;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"import static athleticli.parser.DietParser.parseCalories;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import static athleticli.parser.DietParser.parseCarb;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"import static athleticli.parser.DietParser.parseDiet;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"import static athleticli.parser.DietParser.parseDietEdit;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"import static athleticli.parser.DietParser.parseDietGoalDelete;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"import static athleticli.parser.DietParser.parseDietGoalSetEdit;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"import static athleticli.parser.DietParser.parseDietIndex;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"import static athleticli.parser.DietParser.parseFat;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"import static athleticli.parser.DietParser.parseProtein;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"public class DietParserTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"    //@@author  nihalzp","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"    void checkMissingDietArguments_missingProtein_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"        int caloriesMarkerPos \u003d 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"        int proteinMarkerPos \u003d -1;","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"        int carbMarkerPos \u003d 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"        int fatMarkerPos \u003d 3;","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"        int datetimeMarkerPos \u003d 4;","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class,","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"                () -\u003e checkMissingDietArguments(caloriesMarkerPos, proteinMarkerPos, carbMarkerPos,","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"                        fatMarkerPos, datetimeMarkerPos));","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"    void checkMissingDietArguments_missingCalories_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"        int caloriesMarkerPos \u003d -1;","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"        int proteinMarkerPos \u003d 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"        int carbMarkerPos \u003d 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"        int fatMarkerPos \u003d 3;","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"        int datetimeMarkerPos \u003d 4;","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class,","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"nihalzp"},"content":"                () -\u003e checkMissingDietArguments(caloriesMarkerPos, proteinMarkerPos, carbMarkerPos,","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"nihalzp"},"content":"                        fatMarkerPos, datetimeMarkerPos));","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"nihalzp"},"content":"    void checkMissingDietArguments_missingCarb_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"nihalzp"},"content":"        int caloriesMarkerPos \u003d 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"nihalzp"},"content":"        int proteinMarkerPos \u003d 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"nihalzp"},"content":"        int carbMarkerPos \u003d -1;","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"nihalzp"},"content":"        int fatMarkerPos \u003d 3;","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"nihalzp"},"content":"        int datetimeMarkerPos \u003d 4;","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class,","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"nihalzp"},"content":"                () -\u003e checkMissingDietArguments(caloriesMarkerPos, proteinMarkerPos, carbMarkerPos,","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"nihalzp"},"content":"                        fatMarkerPos, datetimeMarkerPos));","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"nihalzp"},"content":"    void checkMissingDietArguments_missingFat_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"nihalzp"},"content":"        int caloriesMarkerPos \u003d 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"nihalzp"},"content":"        int proteinMarkerPos \u003d 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"nihalzp"},"content":"        int carbMarkerPos \u003d 3;","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"nihalzp"},"content":"        int fatMarkerPos \u003d -1;","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"nihalzp"},"content":"        int datetimeMarkerPos \u003d 4;","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class,","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"nihalzp"},"content":"                () -\u003e checkMissingDietArguments(caloriesMarkerPos, proteinMarkerPos, carbMarkerPos,","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"nihalzp"},"content":"                        fatMarkerPos, datetimeMarkerPos));","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"nihalzp"},"content":"    void checkMissingDietArguments_missingDatetime_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"nihalzp"},"content":"        int caloriesMarkerPos \u003d 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"nihalzp"},"content":"        int proteinMarkerPos \u003d 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"nihalzp"},"content":"        int carbMarkerPos \u003d 3;","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"nihalzp"},"content":"        int fatMarkerPos \u003d 4;","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"nihalzp"},"content":"        int datetimeMarkerPos \u003d -1;","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class,","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"nihalzp"},"content":"                () -\u003e checkMissingDietArguments(caloriesMarkerPos, proteinMarkerPos, carbMarkerPos,","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"nihalzp"},"content":"                        fatMarkerPos, datetimeMarkerPos));","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"nihalzp"},"content":"    void checkEmptyDietArguments_emptyCalories_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"nihalzp"},"content":"        String emptyCalories \u003d \"\";","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyProtein \u003d \"1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyCarb \u003d \"2\";","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyFat \u003d \"3\";","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyDatetime \u003d \"2021-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class,","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"nihalzp"},"content":"                () -\u003e checkEmptyDietArguments(emptyCalories, nonEmptyProtein, nonEmptyCarb, nonEmptyFat,","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"nihalzp"},"content":"                        nonEmptyDatetime));","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"nihalzp"},"content":"    void checkEmptyDietArguments_emptyProtein_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyCalories \u003d \"1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"nihalzp"},"content":"        String emptyProtein \u003d \"\";","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyCarb \u003d \"2\";","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyFat \u003d \"3\";","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyDatetime \u003d \"2021-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class,","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"nihalzp"},"content":"                () -\u003e checkEmptyDietArguments(nonEmptyCalories, emptyProtein, nonEmptyCarb, nonEmptyFat,","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"nihalzp"},"content":"                        nonEmptyDatetime));","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"nihalzp"},"content":"    void checkEmptyDietArguments_emptyCarb_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyCalories \u003d \"1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyProtein \u003d \"2\";","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"nihalzp"},"content":"        String emptyCarb \u003d \"\";","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyFat \u003d \"3\";","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyDatetime \u003d \"2021-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class,","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"nihalzp"},"content":"                () -\u003e checkEmptyDietArguments(nonEmptyCalories, nonEmptyProtein, emptyCarb, nonEmptyFat,","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"nihalzp"},"content":"                        nonEmptyDatetime));","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"nihalzp"},"content":"    void checkEmptyDietArguments_emptyFat_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyCalories \u003d \"1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyProtein \u003d \"2\";","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyCarb \u003d \"3\";","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"nihalzp"},"content":"        String emptyFat \u003d \"\";","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyDatetime \u003d \"2021-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class,","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"nihalzp"},"content":"                () -\u003e checkEmptyDietArguments(nonEmptyCalories, nonEmptyProtein, nonEmptyCarb, emptyFat,","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"nihalzp"},"content":"                        nonEmptyDatetime));","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"nihalzp"},"content":"    void checkEmptyDietArguments_emptyDatetime_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyCalories \u003d \"1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyProtein \u003d \"2\";","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyCarb \u003d \"3\";","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"nihalzp"},"content":"        String nonEmptyFat \u003d \"4\";","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"nihalzp"},"content":"        String emptyDatetime \u003d \"\";","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class,","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"nihalzp"},"content":"                () -\u003e checkEmptyDietArguments(nonEmptyCalories, nonEmptyProtein, nonEmptyCarb, nonEmptyFat,","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"nihalzp"},"content":"                        emptyDatetime));","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"nihalzp"},"content":"    void parseCalories_validCalories_returnCalories() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"nihalzp"},"content":"        int expected \u003d 5;","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"nihalzp"},"content":"        int actual \u003d parseCalories(\"5\");","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"nihalzp"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"nihalzp"},"content":"    void parseCalories_nonIntegerInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"nihalzp"},"content":"        String nonIntegerInput \u003d \"nonInteger\";","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCalories(nonIntegerInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"nihalzp"},"content":"    void parseCalories_negativeIntegerInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"nihalzp"},"content":"        String nonIntegerInput \u003d \"-1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCalories(nonIntegerInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"nihalzp"},"content":"    void parseProtein_validProtein_returnProtein() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"nihalzp"},"content":"        int expected \u003d 5;","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"nihalzp"},"content":"        int actual \u003d parseProtein(\"5\");","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"nihalzp"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"nihalzp"},"content":"    void parseProtein_nonIntegerInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"nihalzp"},"content":"        String nonIntegerInput \u003d \"nonInteger\";","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseProtein(nonIntegerInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"nihalzp"},"content":"    void parseProtein_negativeIntegerInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"nihalzp"},"content":"        String nonIntegerInput \u003d \"-1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseProtein(nonIntegerInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"nihalzp"},"content":"    void parseCarb_validCarb_returnCarb() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"nihalzp"},"content":"        int expected \u003d 5;","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"nihalzp"},"content":"        int actual \u003d parseCarb(\"5\");","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"nihalzp"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"nihalzp"},"content":"    void parseCarb_nonIntegerInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"nihalzp"},"content":"        String nonIntegerInput \u003d \"nonInteger\";","lastModifiedDate":"2023-11-02"},{"lineNumber":193,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCarb(nonIntegerInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":196,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"nihalzp"},"content":"    void parseCarb_negativeIntegerInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"nihalzp"},"content":"        String nonIntegerInput \u003d \"-1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCarb(nonIntegerInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":201,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"nihalzp"},"content":"    void parseFat_validFat_returnFat() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"nihalzp"},"content":"        int expected \u003d 5;","lastModifiedDate":"2023-11-02"},{"lineNumber":205,"author":{"gitId":"nihalzp"},"content":"        int actual \u003d parseFat(\"5\");","lastModifiedDate":"2023-11-02"},{"lineNumber":206,"author":{"gitId":"nihalzp"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-11-02"},{"lineNumber":207,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":209,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":210,"author":{"gitId":"nihalzp"},"content":"    void parseFat_nonIntegerInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":211,"author":{"gitId":"nihalzp"},"content":"        String nonIntegerInput \u003d \"nonInteger\";","lastModifiedDate":"2023-11-02"},{"lineNumber":212,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseFat(nonIntegerInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":213,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":215,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":216,"author":{"gitId":"nihalzp"},"content":"    void parseFat_negativeIntegerInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":217,"author":{"gitId":"nihalzp"},"content":"        String nonIntegerInput \u003d \"-1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":218,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseFat(nonIntegerInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":219,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":220,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":221,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":222,"author":{"gitId":"nihalzp"},"content":"    void getValueForMarker_validInput_returnValue() {","lastModifiedDate":"2023-11-02"},{"lineNumber":223,"author":{"gitId":"nihalzp"},"content":"        String validInput \u003d \"2 calories/1 protein/2 carb/3 fat/4 datetime/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":224,"author":{"gitId":"nihalzp"},"content":"        String caloriesActual \u003d getValueForMarker(validInput, Parameter.CALORIES_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":225,"author":{"gitId":"nihalzp"},"content":"        String proteinActual \u003d getValueForMarker(validInput, Parameter.PROTEIN_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":226,"author":{"gitId":"nihalzp"},"content":"        String carbActual \u003d getValueForMarker(validInput, Parameter.CARB_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":227,"author":{"gitId":"nihalzp"},"content":"        String fatActual \u003d getValueForMarker(validInput, Parameter.FAT_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":228,"author":{"gitId":"nihalzp"},"content":"        String datetimeActual \u003d getValueForMarker(validInput, Parameter.DATETIME_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":229,"author":{"gitId":"nihalzp"},"content":"        assertEquals(\"1\", caloriesActual);","lastModifiedDate":"2023-11-02"},{"lineNumber":230,"author":{"gitId":"nihalzp"},"content":"        assertEquals(\"2\", proteinActual);","lastModifiedDate":"2023-11-02"},{"lineNumber":231,"author":{"gitId":"nihalzp"},"content":"        assertEquals(\"3\", carbActual);","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"nihalzp"},"content":"        assertEquals(\"4\", fatActual);","lastModifiedDate":"2023-11-02"},{"lineNumber":233,"author":{"gitId":"nihalzp"},"content":"        assertEquals(\"2023-10-06 10:00\", datetimeActual);","lastModifiedDate":"2023-11-02"},{"lineNumber":234,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":235,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":236,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"nihalzp"},"content":"    void getValueForMarker_invalidInput_returnEmptyString() {","lastModifiedDate":"2023-11-02"},{"lineNumber":238,"author":{"gitId":"nihalzp"},"content":"        String invalidInput \u003d \"2 calorie/1 proteins/2 carbs/3 fats/4 datetime/2023-10-06\";","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"nihalzp"},"content":"        String caloriesActual \u003d getValueForMarker(invalidInput, Parameter.CALORIES_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"nihalzp"},"content":"        String proteinActual \u003d getValueForMarker(invalidInput, Parameter.PROTEIN_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":241,"author":{"gitId":"nihalzp"},"content":"        String carbActual \u003d getValueForMarker(invalidInput, Parameter.CARB_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":242,"author":{"gitId":"nihalzp"},"content":"        String fatActual \u003d getValueForMarker(invalidInput, Parameter.FAT_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":243,"author":{"gitId":"nihalzp"},"content":"        String datetimeActual \u003d getValueForMarker(invalidInput, Parameter.DATETIME_SEPARATOR);","lastModifiedDate":"2023-11-02"},{"lineNumber":244,"author":{"gitId":"nihalzp"},"content":"        assertEquals(\"\", caloriesActual);","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"nihalzp"},"content":"        assertEquals(\"\", proteinActual);","lastModifiedDate":"2023-11-02"},{"lineNumber":246,"author":{"gitId":"nihalzp"},"content":"        assertEquals(\"\", carbActual);","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"nihalzp"},"content":"        assertEquals(\"\", fatActual);","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"nihalzp"},"content":"        assertEquals(\"\", datetimeActual);","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":250,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":252,"author":{"gitId":"nihalzp"},"content":"    void parseDietEdit_validInput_returnDietEdit() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":253,"author":{"gitId":"nihalzp"},"content":"        String validInput \u003d \"2 calories/1 protein/2 carb/3 fat/4 datetime/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":254,"author":{"gitId":"nihalzp"},"content":"        HashMap\u003cString, String\u003e actual \u003d parseDietEdit(validInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":255,"author":{"gitId":"nihalzp"},"content":"        HashMap\u003cString, String\u003e expected \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":256,"author":{"gitId":"nihalzp"},"content":"        expected.put(Parameter.CALORIES_SEPARATOR, \"1\");","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"nihalzp"},"content":"        expected.put(Parameter.PROTEIN_SEPARATOR, \"2\");","lastModifiedDate":"2023-11-02"},{"lineNumber":258,"author":{"gitId":"nihalzp"},"content":"        expected.put(Parameter.CARB_SEPARATOR, \"3\");","lastModifiedDate":"2023-11-02"},{"lineNumber":259,"author":{"gitId":"nihalzp"},"content":"        expected.put(Parameter.FAT_SEPARATOR, \"4\");","lastModifiedDate":"2023-11-02"},{"lineNumber":260,"author":{"gitId":"nihalzp"},"content":"        expected.put(Parameter.DATETIME_SEPARATOR, \"2023-10-06T10:00\");","lastModifiedDate":"2023-11-02"},{"lineNumber":261,"author":{"gitId":"nihalzp"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-11-02"},{"lineNumber":262,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":263,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":264,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":265,"author":{"gitId":"nihalzp"},"content":"    void parseDietEdit_someMarkersPresent_returnDietEdit() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":266,"author":{"gitId":"nihalzp"},"content":"        String validInput \u003d \"2 calories/1 protein/2 carb/3\";","lastModifiedDate":"2023-11-02"},{"lineNumber":267,"author":{"gitId":"nihalzp"},"content":"        HashMap\u003cString, String\u003e actual \u003d parseDietEdit(validInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":268,"author":{"gitId":"nihalzp"},"content":"        HashMap\u003cString, String\u003e expected \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":269,"author":{"gitId":"nihalzp"},"content":"        expected.put(Parameter.CALORIES_SEPARATOR, \"1\");","lastModifiedDate":"2023-11-02"},{"lineNumber":270,"author":{"gitId":"nihalzp"},"content":"        expected.put(Parameter.PROTEIN_SEPARATOR, \"2\");","lastModifiedDate":"2023-11-02"},{"lineNumber":271,"author":{"gitId":"nihalzp"},"content":"        expected.put(Parameter.CARB_SEPARATOR, \"3\");","lastModifiedDate":"2023-11-02"},{"lineNumber":272,"author":{"gitId":"nihalzp"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-11-02"},{"lineNumber":273,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":274,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":275,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":276,"author":{"gitId":"nihalzp"},"content":"    void parseDietEdit_zeroValidInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":277,"author":{"gitId":"nihalzp"},"content":"        String invalidInput \u003d \"2 calorie/1 proteins/2 carbs/3 fats/4 datetime/2023-10-06\";","lastModifiedDate":"2023-11-02"},{"lineNumber":278,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseDietEdit(invalidInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":279,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":280,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":281,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":282,"author":{"gitId":"nihalzp"},"content":"    void parseDietIndex_validIndex_returnIndex() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":283,"author":{"gitId":"nihalzp"},"content":"        int expected \u003d 5;","lastModifiedDate":"2023-11-02"},{"lineNumber":284,"author":{"gitId":"nihalzp"},"content":"        int actual \u003d parseDietIndex(\"5\");","lastModifiedDate":"2023-11-02"},{"lineNumber":285,"author":{"gitId":"nihalzp"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-11-02"},{"lineNumber":286,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":287,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":288,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":289,"author":{"gitId":"nihalzp"},"content":"    void parseDietIndex_nonIntegerInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":290,"author":{"gitId":"nihalzp"},"content":"        String nonIntegerInput \u003d \"nonInteger\";","lastModifiedDate":"2023-11-02"},{"lineNumber":291,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseDietIndex(nonIntegerInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":292,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":293,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":294,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":295,"author":{"gitId":"nihalzp"},"content":"    void parseDietIndex_nonPositiveIntegerInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":296,"author":{"gitId":"nihalzp"},"content":"        String nonIntegerInput \u003d \"0\";","lastModifiedDate":"2023-11-02"},{"lineNumber":297,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseDietIndex(nonIntegerInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":298,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":299,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":300,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":301,"author":{"gitId":"nihalzp"},"content":"    void parseDiet_emptyInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":302,"author":{"gitId":"nihalzp"},"content":"        String emptyInput \u003d \"\";","lastModifiedDate":"2023-11-02"},{"lineNumber":303,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseDiet(emptyInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":304,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":305,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":306,"author":{"gitId":"yicheng-toh"},"content":"    //@@author  yicheng-toh","lastModifiedDate":"2023-11-02"},{"lineNumber":307,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":308,"author":{"gitId":"yicheng-toh"},"content":"    void parseDietGoalSetEdit_noInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":309,"author":{"gitId":"yicheng-toh"},"content":"        String oneValidOneInvalidGoalString \u003d \" \";","lastModifiedDate":"2023-11-02"},{"lineNumber":310,"author":{"gitId":"yicheng-toh"},"content":"        assertThrows(AthletiException.class, () -\u003e parseDietGoalSetEdit(oneValidOneInvalidGoalString));","lastModifiedDate":"2023-11-02"},{"lineNumber":311,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":312,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":313,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":314,"author":{"gitId":"yicheng-toh"},"content":"    void parseDietGoalSetEdit_oneValidOneInvalidGoal_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":315,"author":{"gitId":"yicheng-toh"},"content":"        String oneValidOneInvalidGoalString \u003d \"calories/60 protein/protine\";","lastModifiedDate":"2023-11-02"},{"lineNumber":316,"author":{"gitId":"yicheng-toh"},"content":"        assertThrows(AthletiException.class, () -\u003e parseDietGoalSetEdit(oneValidOneInvalidGoalString));","lastModifiedDate":"2023-11-02"},{"lineNumber":317,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":318,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":319,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":320,"author":{"gitId":"yicheng-toh"},"content":"    void parseDietGoalSetEdit_zeroTargetValue_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":321,"author":{"gitId":"yicheng-toh"},"content":"        String zeroTargetValueGoalString \u003d \"calories/0\";","lastModifiedDate":"2023-11-02"},{"lineNumber":322,"author":{"gitId":"yicheng-toh"},"content":"        assertThrows(AthletiException.class, () -\u003e parseDietGoalSetEdit(zeroTargetValueGoalString));","lastModifiedDate":"2023-11-02"},{"lineNumber":323,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":324,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":325,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":326,"author":{"gitId":"yicheng-toh"},"content":"    void parseDietGoalSetEdit_oneInvalidGoal_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":327,"author":{"gitId":"yicheng-toh"},"content":"        String invalidGoalString \u003d \"calories/caloreis protein/protein\";","lastModifiedDate":"2023-11-02"},{"lineNumber":328,"author":{"gitId":"yicheng-toh"},"content":"        assertThrows(AthletiException.class, () -\u003e parseDietGoalSetEdit(invalidGoalString));","lastModifiedDate":"2023-11-02"},{"lineNumber":329,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":330,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":331,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":332,"author":{"gitId":"yicheng-toh"},"content":"    void parseDietGoalSetEdit_repeatedDietGoal_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":333,"author":{"gitId":"yicheng-toh"},"content":"        String invalidGoalString \u003d \"calories/1 calories/1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":334,"author":{"gitId":"yicheng-toh"},"content":"        assertThrows(AthletiException.class, () -\u003e parseDietGoalSetEdit(invalidGoalString));","lastModifiedDate":"2023-11-02"},{"lineNumber":335,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":336,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":337,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":338,"author":{"gitId":"yicheng-toh"},"content":"    void parseDietGoalSetEdit_invalidNutrient_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":339,"author":{"gitId":"yicheng-toh"},"content":"        String invalidGoalString \u003d \"calorie/1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":340,"author":{"gitId":"yicheng-toh"},"content":"        assertThrows(AthletiException.class, () -\u003e parseDietGoalSetEdit(invalidGoalString));","lastModifiedDate":"2023-11-02"},{"lineNumber":341,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":342,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":343,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":344,"author":{"gitId":"yicheng-toh"},"content":"    void parseDietGoalDelete_nonIntegerInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":345,"author":{"gitId":"yicheng-toh"},"content":"        String nonIntegerInput \u003d \"nonInteger\";","lastModifiedDate":"2023-11-02"},{"lineNumber":346,"author":{"gitId":"yicheng-toh"},"content":"        assertThrows(AthletiException.class, () -\u003e parseDietGoalDelete(nonIntegerInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":347,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":348,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":349,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":350,"author":{"gitId":"yicheng-toh"},"content":"    void parseDietGoalDelete_nonPositiveIntegerInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":351,"author":{"gitId":"yicheng-toh"},"content":"        String nonIntegerInput \u003d \"0\";","lastModifiedDate":"2023-11-02"},{"lineNumber":352,"author":{"gitId":"yicheng-toh"},"content":"        assertThrows(AthletiException.class, () -\u003e parseDietGoalDelete(nonIntegerInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":353,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":354,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"skylee03":23,"yicheng-toh":49,"nihalzp":282}},{"path":"src/test/java/athleticli/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.ByeCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.diet.AddDietCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.diet.DeleteDietCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.diet.DeleteDietGoalCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.diet.EditDietGoalCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.diet.ListDietCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.diet.ListDietGoalCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.diet.SetDietGoalCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.sleep.AddSleepCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.sleep.DeleteSleepCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.sleep.EditSleepCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.sleep.ListSleepCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"import static athleticli.parser.Parser.parseCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"import static athleticli.parser.Parser.parseDate;","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"import static athleticli.parser.Parser.splitCommandWordAndArgs;","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"class ParserTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"    void splitCommandWordAndArgs_noArgs_expectTwoParts() {","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"        final String commandWithNoArgs \u003d \"bye\";","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"        assertEquals(splitCommandWordAndArgs(commandWithNoArgs).length, 2);","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"skylee03"},"content":"    void splitCommandWordAndArgs_multipleArgs_expectTwoParts() {","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"skylee03"},"content":"        final String commandWithMultipleArgs \u003d \"set-diet-goal calories/1 carb/3\";","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"skylee03"},"content":"        assertEquals(splitCommandWordAndArgs(commandWithMultipleArgs).length, 2);","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"skylee03"},"content":"    void parseCommand_unknownCommand_expectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"skylee03"},"content":"        final String unknownCommand \u003d \"hello\";","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(unknownCommand));","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"skylee03"},"content":"    void parseCommand_byeCommand_expectByeCommand() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"skylee03"},"content":"        final String byeCommand \u003d \"bye\";","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"skylee03"},"content":"        assertInstanceOf(ByeCommand.class, parseCommand(byeCommand));","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addSleepCommand_expectAddSleepCommand() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"skylee03"},"content":"        final String addSleepCommandString \u003d \"add-sleep start/2023-10-06 10:00 end/2023-10-06 11:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"skylee03"},"content":"        assertInstanceOf(AddSleepCommand.class, parseCommand(addSleepCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addSleepCommand_missingStartExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"skylee03"},"content":"        final String addSleepCommandString \u003d \"add-sleep end/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addSleepCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addSleepCommand_missingEndExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"skylee03"},"content":"        final String addSleepCommandString \u003d \"add-sleep start/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addSleepCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addSleepCommand_missingBothExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"skylee03"},"content":"        final String addSleepCommandString \u003d \"add-sleep start/ end/\";","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addSleepCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addSleepCommand_invalidDatetimeExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"skylee03"},"content":"        final String addSleepCommandString \u003d \"add-sleep start/07-10-2021 06:00 end/07-10-2021 05:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addSleepCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"skylee03"},"content":"    void parseCommand_editSleepCommand_expectEditSleepCommand() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"skylee03"},"content":"        final String editSleepCommandString \u003d \"edit-sleep 1 start/2023-10-06 10:00 end/2023-10-06 11:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"skylee03"},"content":"        assertInstanceOf(EditSleepCommand.class, parseCommand(editSleepCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"skylee03"},"content":"    void parseCommand_editSleepCommand_missingStartExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"skylee03"},"content":"        final String editSleepCommandString \u003d \"edit-sleep 1 end/07-10-2021 06:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(editSleepCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"skylee03"},"content":"    void parseCommand_editSleepCommand_missingEndExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"skylee03"},"content":"        final String editSleepCommandString \u003d \"edit-sleep 1 start/07-10-2021 06:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(editSleepCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"skylee03"},"content":"    void parseCommand_editSleepCommand_missingBothExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"skylee03"},"content":"        final String editSleepCommandString \u003d \"edit-sleep 1 start/ end/\";","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(editSleepCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"skylee03"},"content":"    void parseCommand_editSleepCommand_invalidDatetimeExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"skylee03"},"content":"        final String editSleepCommandString \u003d \"edit-sleep 1 start/07-10-2021 07:00 end/07-10-2021 06:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(editSleepCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"skylee03"},"content":"    void parseCommand_editSleepCommand_invalidIndexExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"skylee03"},"content":"        final String editSleepCommandString \u003d \"edit-sleep abc start/06-10-2021 10:00 end/07-10-2021 06:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(editSleepCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"skylee03"},"content":"    void parseCommand_deleteSleepCommand_expectDeleteSleepCommand() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"skylee03"},"content":"        final String deleteSleepCommandString \u003d \"delete-sleep 1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"skylee03"},"content":"        assertInstanceOf(DeleteSleepCommand.class, parseCommand(deleteSleepCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"skylee03"},"content":"    void parseCommand_deleteSleepCommand_invalidIndexExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"skylee03"},"content":"        final String deleteSleepCommandString \u003d \"delete-sleep abc\";","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(deleteSleepCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"skylee03"},"content":"    void parseCommand_listSleepCommand_expectListSleepCommand() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"skylee03"},"content":"        final String listSleepCommandString \u003d \"list-sleep\";","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"skylee03"},"content":"        assertInstanceOf(ListSleepCommand.class, parseCommand(listSleepCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"skylee03"},"content":"    void parseCommand_setDietGoalCommand_expectSetDietGoalCommand() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"skylee03"},"content":"        final String setDietGoalCommandString \u003d \"set-diet-goal weekly calories/1 protein/2 carb/3\";","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"skylee03"},"content":"        assertInstanceOf(SetDietGoalCommand.class, parseCommand(setDietGoalCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"skylee03"},"content":"    void parseCommand_editDietCommand_expectEditDietGoalCommand() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"skylee03"},"content":"        final String editDietGoalCommandString \u003d \"edit-diet-goal weekly calories/1 protein/2 carb/3\";","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"skylee03"},"content":"        assertInstanceOf(EditDietGoalCommand.class, parseCommand(editDietGoalCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"skylee03"},"content":"    void parseCommand_listDietGoalCommand_expectListDietGoalCommand() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"skylee03"},"content":"        final String listDietCommandString \u003d \"list-diet-goal\";","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"skylee03"},"content":"        assertInstanceOf(ListDietGoalCommand.class, parseCommand(listDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"skylee03"},"content":"    void parseCommand_deleteDietGoalCommand_expectDeleteDietGoalCommand() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"skylee03"},"content":"        final String deleteDietGoalCommandString \u003d \"delete-diet-goal 1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"skylee03"},"content":"        assertInstanceOf(DeleteDietGoalCommand.class, parseCommand(deleteDietGoalCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_expectAddDietCommand() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"skylee03"},"content":"                \"add-diet calories/1 protein/2 carb/3 fat/4 datetime/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"skylee03"},"content":"        assertInstanceOf(AddDietCommand.class, parseCommand(addDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"skylee03"},"content":"    void parseCommand_deleteDietCommand_expectDeleteDietCommand() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"skylee03"},"content":"        final String deleteDietCommandString \u003d \"delete-diet 1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"skylee03"},"content":"        assertInstanceOf(DeleteDietCommand.class, parseCommand(deleteDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"skylee03"},"content":"    void parseCommand_listDietCommand_expectListDietCommand() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"skylee03"},"content":"        final String listDietCommandString \u003d \"list-diet\";","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"skylee03"},"content":"        assertInstanceOf(ListDietCommand.class, parseCommand(listDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_missingCaloriesExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString \u003d \"add-diet protein/2 carb/3 fat/4 datetime/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_missingProteinExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString \u003d \"add-diet calories/1 carb/3 fat/4 datetime/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":193,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_missingCarbExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":196,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString \u003d \"add-diet calories/1 protein/2 fat/4 datetime/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":201,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_missingFatExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString \u003d \"add-diet calories/1 protein/2 carb/3 datetime/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":205,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":206,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":207,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_missingDateTimeExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString \u003d \"add-diet calories/1 protein/2 carb/3 fat/4\";","lastModifiedDate":"2023-11-02"},{"lineNumber":209,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":210,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":211,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":212,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":213,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_emptyCaloriesExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":215,"author":{"gitId":"skylee03"},"content":"                \"add-diet calories/ protein/2 carb/3 fat/4 datetime/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":216,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":217,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":218,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":219,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":220,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_emptyProteinExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":221,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":222,"author":{"gitId":"skylee03"},"content":"                \"add-diet calories/1 protein/ carb/3 fat/4 datetime/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":223,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":224,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":225,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":226,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":227,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_emptyCarbExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":228,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":229,"author":{"gitId":"skylee03"},"content":"                \"add-diet calories/1 protein/2 carb/ fat/4 datetime/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":230,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":231,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":233,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":234,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_emptyFatExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":235,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":236,"author":{"gitId":"skylee03"},"content":"                \"add-diet calories/1 protein/2 carb/3 fat/ datetime/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":238,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":241,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_emptyDateTimeExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":242,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString \u003d \"add-diet calories/1 protein/2 carb/3 fat/4 datetime/\";","lastModifiedDate":"2023-11-02"},{"lineNumber":243,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":244,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":246,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_invalidCaloriesExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"skylee03"},"content":"                \"add-diet calories/abc protein/2 carb/3 fat/4 datetime/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":250,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":252,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":253,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":254,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_invalidProteinExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":255,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":256,"author":{"gitId":"skylee03"},"content":"                \"add-diet calories/1 protein/abc carb/3 fat/4 datetime/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":258,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":259,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":260,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":261,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_invalidCarbExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":262,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":263,"author":{"gitId":"skylee03"},"content":"                \"add-diet calories/1 protein/2 carb/abc fat/4 datetime/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":264,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":265,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":266,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":267,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":268,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_invalidFatExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":269,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":270,"author":{"gitId":"skylee03"},"content":"                \"add-diet calories/1 protein/2 carb/3 fat/abc datetime/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":271,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":272,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":273,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":274,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":275,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_invalidDateTimeFormatExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":276,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString1 \u003d \"add-diet calories/1 protein/2 carb/3 fat/4 datetime/2023-10-06\";","lastModifiedDate":"2023-11-02"},{"lineNumber":277,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString2 \u003d \"add-diet calories/1 protein/2 carb/3 fat/4 datetime/10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":278,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString3 \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":279,"author":{"gitId":"skylee03"},"content":"                \"add-diet calories/1 protein/2 carb/3 fat/4 datetime/16-10-2023 10:00:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":280,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString1));","lastModifiedDate":"2023-11-02"},{"lineNumber":281,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString2));","lastModifiedDate":"2023-11-02"},{"lineNumber":282,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString3));","lastModifiedDate":"2023-11-02"},{"lineNumber":283,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":284,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":285,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":286,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_negativeCaloriesExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":287,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":288,"author":{"gitId":"skylee03"},"content":"                \"add-diet calories/-1 protein/2 carb/3 fat/4 datetime/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":289,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":290,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":291,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":292,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":293,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_negativeProteinExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":294,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":295,"author":{"gitId":"skylee03"},"content":"                \"add-diet calories/1 protein/-2 carb/3 fat/4 datetime/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":296,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":297,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":298,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":299,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":300,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_negativeCarbExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":301,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":302,"author":{"gitId":"skylee03"},"content":"                \"add-diet calories/1 protein/2 carb/-3 fat/4 datetime/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":303,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":304,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":305,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":306,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":307,"author":{"gitId":"skylee03"},"content":"    void parseCommand_addDietCommand_negativeFatExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":308,"author":{"gitId":"skylee03"},"content":"        final String addDietCommandString \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":309,"author":{"gitId":"skylee03"},"content":"                \"add-diet calories/1 protein/2 carb/3 fat/-4 datetime/2023-10-06 10:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":310,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":311,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":312,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":313,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":314,"author":{"gitId":"skylee03"},"content":"    void parseCommand_deleteDietCommand_invalidIndexExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":315,"author":{"gitId":"skylee03"},"content":"        final String deleteDietCommandString \u003d \"delete-diet abc\";","lastModifiedDate":"2023-11-02"},{"lineNumber":316,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(deleteDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":317,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":318,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":319,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":320,"author":{"gitId":"skylee03"},"content":"    void parseCommand_deleteDietCommand_emptyIndexExpectAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":321,"author":{"gitId":"skylee03"},"content":"        final String deleteDietCommandString \u003d \"delete-diet\";","lastModifiedDate":"2023-11-02"},{"lineNumber":322,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(deleteDietCommandString));","lastModifiedDate":"2023-11-02"},{"lineNumber":323,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":324,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":325,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":326,"author":{"gitId":"skylee03"},"content":"    void parseDateTime_validInput_dateTimeParsed() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":327,"author":{"gitId":"skylee03"},"content":"        String validInput \u003d \"2021-09-01 06:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":328,"author":{"gitId":"skylee03"},"content":"        LocalDateTime actual \u003d Parser.parseDateTime(validInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":329,"author":{"gitId":"skylee03"},"content":"        LocalDateTime expected \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":330,"author":{"gitId":"skylee03"},"content":"                LocalDateTime.parse(\"2021-09-01 06:00\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":331,"author":{"gitId":"skylee03"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2023-11-02"},{"lineNumber":332,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":333,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":334,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":335,"author":{"gitId":"skylee03"},"content":"    void parseDateTime_invalidInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":336,"author":{"gitId":"skylee03"},"content":"        String invalidInput \u003d \"abc\";","lastModifiedDate":"2023-11-02"},{"lineNumber":337,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e Parser.parseDateTime(invalidInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":338,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":339,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":340,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":341,"author":{"gitId":"skylee03"},"content":"    void parseDate_validInput_dateParsed() throws AthletiException {","lastModifiedDate":"2023-11-02"},{"lineNumber":342,"author":{"gitId":"skylee03"},"content":"        String validInput \u003d \"2021-09-01\";","lastModifiedDate":"2023-11-02"},{"lineNumber":343,"author":{"gitId":"skylee03"},"content":"        LocalDate actual \u003d parseDate(validInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":344,"author":{"gitId":"skylee03"},"content":"        LocalDate expected \u003d LocalDate.parse(\"2021-09-01\");","lastModifiedDate":"2023-11-02"},{"lineNumber":345,"author":{"gitId":"skylee03"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2023-11-02"},{"lineNumber":346,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":347,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":348,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":349,"author":{"gitId":"skylee03"},"content":"    void parseDate_invalidInput_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":350,"author":{"gitId":"skylee03"},"content":"        String invalidInput \u003d \"abc\";","lastModifiedDate":"2023-11-02"},{"lineNumber":351,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseDate(invalidInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":352,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":353,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":354,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":355,"author":{"gitId":"skylee03"},"content":"    void parseDate_invalidInputWithTime_throwAthletiException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":356,"author":{"gitId":"skylee03"},"content":"        String invalidInput \u003d \"2021-09-01 06:00\";","lastModifiedDate":"2023-11-02"},{"lineNumber":357,"author":{"gitId":"skylee03"},"content":"        assertThrows(AthletiException.class, () -\u003e parseDate(invalidInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":358,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":359,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":360,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"skylee03":360}},{"path":"src/test/java/athleticli/parser/SleepParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"public class SleepParserTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"skylee03":4}},{"path":"src/test/java/athleticli/ui/NutrientVerifierTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yicheng-toh"},"content":"package athleticli.ui;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"import athleticli.parser.NutrientVerifier;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"class NutrientVerifierTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"    void verify_inputApprovedNutrients_expectTrue() {","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"        assertTrue(NutrientVerifier.verify(\"fats\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"    void verify_inputUnapprovedNutrients_expectFalse() {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"yicheng-toh"},"content":"        assertFalse(NutrientVerifier.verify(\"Vitamin A\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"skylee03":2,"yicheng-toh":18}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"FC /W ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"skylee03":1,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"rm -f data/*","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"diff -w EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"skylee03":1,"AlWo223":2,"-":22}}]
