[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"# AthletiCLI project template","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"AlWo223":1,"-":63}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"    mainClass.set(\"athleticli.AthletiCLI\")","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":"    archiveBaseName.set(\"athleticli\")","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"skylee03":2,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"| Display                                                   |       Name        |              Github Profile              |                 Portfolio                 |","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"|-----------------------------------------------------------|:-----------------:|:----------------------------------------:|:-----------------------------------------:|","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)       | Alexander Wolters |   [Github](https://github.com/AlWo223)   |     [Portfolio](docs/team/johndoe.md)     |","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)       |       Nihal       |   [Github](https://github.com/nihalzp)   |     [Portfolio](docs/team/nihalzp.md)     |","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"| ![](https://github.com/DaDevChia)                         |    Dylan Chia     |  [Github](https://github.com/DaDevChia)  | [Portfolio](https://github.com/DaDevChia) |","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)       |     Yi Cheng      | [Github](https://github.com/yicheng-toh) |     [Portfolio](docs/team/yicheng.md)     |","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"| ![](https://avatars.githubusercontent.com/u/24489025?v\u003d4) |  Yang Ming-Tian   |  [Github](https://github.com/skylee03)   |    [Portfolio](docs/team/skylee03.md)     |","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"yicheng-toh":8,"-":2}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"# AthletiCLI User Guide","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"**AthletiCLI** is your all-in-one solution to track, analyse, and optimize your athletic performance. Designed for the","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"committed athlete, this command-line interface (CLI) tool not only keeps tabs on your physical activities but also","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"covers dietary habits, sleep metrics, and more.","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"## Quick Start","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"* Ensure you have the required runtime environment installed on your computer.","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"* Download the latest AthletiCLI from the official repository.","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"* Copy the downloaded file to a folder you want to designate as the home for AthletiCLI.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"* Open a command terminal, cd into the folder where you copied the file, and run java -jar AthletiCLI.jar","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"## Features","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"**Notes about Command Format**","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"* Words in UPPER_CASE are parameters provided by the user.","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"* Parameters can be in any order.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"* Parameters enclosed in square brackets [] are optional.","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"## Activity Management","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"### Adding Activities:","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"`activity`, `run`, `swim`, `cycle`","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"You can record your activities in AtheltiCLI by adding different activities including running, cycling, and swimming.","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"**Syntax:**","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"* `activity CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME`","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"* `run CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME elevation/ELEVATION`","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"* `swim CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME laps/LAPS`","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"* `cycle CAPTION duration/DURATION distance/DISTANCE datetime/DATETIME elevation/ELEVATION`","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"**Parameters:**","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"* CAPTION: A short description of the activity.","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"* DURATION: The duration of the activity in minutes.","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"* DISTANCE: The distance of the activity in meters.","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"* DATETIME: The date and time of the start of the activity. It must follow the ISO Date Time Format: YYYY-MM-DD HH:MM","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"**Examples:**","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"* `activity Morning Run duration/60 distance/10000 datetime/2021-09-01 06:00`","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"* `cycle Evening Ride duration/120 distance/20000 datetime/2021-09-01 18:00 elevation/1000`","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"nihalzp"},"content":"## Diet Management","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"nihalzp"},"content":"### Adding Diets:","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"nihalzp"},"content":"`diet`","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"nihalzp"},"content":"You can record your diet in AtheltiCLI by adding your calorie, protein, carbohydrate,and fat intake of your meals.","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"nihalzp"},"content":"**Syntax:**","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"nihalzp"},"content":"* `diet calories/CALORIES protein/PROTEIN carbs/CARBS fat/FAT`","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"nihalzp"},"content":"**Parameters:**","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"nihalzp"},"content":"* CALORIES: The total calories of the meal.","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"nihalzp"},"content":"* PROTEIN: The total protein of the meal.","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"nihalzp"},"content":"* CARBS: The total carbohydrates of the meal.","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"nihalzp"},"content":"* FAT: The total fat of the meal.","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"nihalzp"},"content":"**Examples:**","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"nihalzp"},"content":"* `diet calories/500 protein/20 carbs/50 fat/10`","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"nihalzp"},"content":"### Deleting Diets:","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"nihalzp"},"content":"`delete-diet`","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"nihalzp"},"content":"You can delete your diet in AtheltiCLI by deleting the diet at the specified index.","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"nihalzp"},"content":"**Syntax:**","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"nihalzp"},"content":"* `delete-diet INDEX`","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"nihalzp"},"content":"**Parameters:**","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"nihalzp"},"content":"* INDEX: The index of the diet to be deleted - must be a positive integer.","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"nihalzp"},"content":"**Examples:**","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"nihalzp"},"content":"* `delete-diet 1`","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"nihalzp"},"content":"### Listing Diets:","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"nihalzp"},"content":"`list-diet`","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"nihalzp"},"content":"You can list all your diets in AtheltiCLI.","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"nihalzp"},"content":"**Syntax:**","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"nihalzp"},"content":"* `list-diet`","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"nihalzp"},"content":"**Examples:**","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"nihalzp"},"content":"* `list-diet`","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":101,"author":{"gitId":"AlWo223"},"content":"[User Guide](UserGuide.md)","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"AlWo223"},"content":"[Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"AlWo223"},"content":"[About Us](AboutUs.md)","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"AlWo223":39,"-":4,"nihalzp":60}},{"path":"docs/team/skylee03.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"# Yang Ming-Tian - Project Portfolio Page","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"## Overview","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"skylee03":6}},{"path":"docs/team/yicheng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yicheng-toh"},"content":"# John Doe - Project Portfolio Page","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"## Overview","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"yicheng-toh":6}},{"path":"src/main/java/athleticli/AthletiCLI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"import athleticli.ui.Parser;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import athleticli.ui.Ui;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":" * Defines the basic structure and the behavior of AthletiCLI.","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"public class AthletiCLI {","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"    private Ui ui;","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"    private Data data;","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"     * Constructs an \u003ccode\u003eAthletiCLI\u003c/code\u003e object.","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"    public AthletiCLI() {","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"     * Creates an `AthletiCLI` object and runs it.","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"     * @param args  Arguments obtained from the command line.","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"        new AthletiCLI().run();","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"     * Displays the welcome interface, continuously reads user input","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"     * and executes corresponding instructions until exiting.","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"skylee03"},"content":"    public void run() {","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"skylee03"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"skylee03"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"skylee03"},"content":"        while (!isExit) {","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"skylee03"},"content":"            final String rawUserInput \u003d ui.getUserCommand();","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"skylee03"},"content":"            try {","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"skylee03"},"content":"                final Command command \u003d Parser.parseCommand(rawUserInput);","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"skylee03"},"content":"                final String[] feedback \u003d command.execute(data);","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"skylee03"},"content":"                ui.showMessages(feedback);","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"skylee03"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"skylee03"},"content":"            } catch (AthletiException e) {","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"skylee03"},"content":"                ui.showException(e);","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"skylee03"},"content":"            }","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":52}},{"path":"src/main/java/athleticli/commands/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"     * Returns \u003ccode\u003etrue\u003c/code\u003e if this is a \u003ccode\u003eByeCommand\u003c/code\u003e object, otherwise returns \u003ccode\u003efalse\u003c/code\u003e.","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e if this is a \u003ccode\u003eByeCommand\u003c/code\u003e object, otherwise returns \u003ccode\u003efalse\u003c/code\u003e.","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"        return true;","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"     * Returns the bye message to be shown to the user.","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"     * @return      The messages to be shown to the user.","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"    public String[] execute(Data data) {","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"        return new String[] {Message.MESSAGE_BYE};","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":25}},{"path":"src/main/java/athleticli/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":" * Defines the basic methods of a command.","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"public abstract class Command {","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"     * Executes the command and returns the messages to be shown to the user.","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"     * @param data              The current data.","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"     * @return                  The messages to be shown to the user.","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"    public abstract String[] execute(Data data) throws AthletiException;","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"     * Returns \u003ccode\u003etrue\u003c/code\u003e if this is a \u003ccode\u003eByeCommand\u003c/code\u003e object, otherwise returns \u003ccode\u003efalse\u003c/code\u003e.","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e if this is a \u003ccode\u003eByeCommand\u003c/code\u003e object, otherwise returns \u003ccode\u003efalse\u003c/code\u003e.","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"        return false;","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":27}},{"path":"src/main/java/athleticli/commands/activity/AddActivityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Activity;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.ActivityList;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":" * Executes the add activity commands provided by the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"public class AddActivityCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"    private Activity activity;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"     * Constructor for AddActivityCommand.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"     * @param activity Activity to be added.","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    public AddActivityCommand(Activity activity){","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"        this.activity \u003d activity;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"     * Updates the activity list.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"     * @param data        The current data containing the activity list.","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"     * @return            The message which will be shown to the user.","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"    public String[] execute(Data data) {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"        ActivityList activities \u003d data.getActivities();","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"        activities.add(this.activity);","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"        int size \u003d activities.size();","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"        String countMessage;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"        if (size \u003e 1) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"            countMessage \u003d String.format(Message.MESSAGE_ACTIVITY_COUNT, size);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"        } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"            countMessage \u003d String.format(Message.MESSAGE_ACTIVITY_FIRST, size);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"        return new String[]{Message.MESSAGE_ACTIVITY_ADDED, this.activity.toString(), countMessage};","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":3,"AlWo223":39}},{"path":"src/main/java/athleticli/commands/activity/DeleteActivityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"public class DeleteActivityCommand {","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":4}},{"path":"src/main/java/athleticli/commands/activity/EditActivityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"public class EditActivityCommand {","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":4}},{"path":"src/main/java/athleticli/commands/activity/ListActivityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"public class ListActivityCommand {","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":4}},{"path":"src/main/java/athleticli/commands/diet/AddDietCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.Diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.DietList;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":" * Executes the add diet commands provided by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"public class AddDietCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"    private final Diet diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"     * Constructor for AddDietCommand.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"     * @param diet Diet to be added.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"    public AddDietCommand(Diet diet) {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"        this.diet \u003d diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"     * Updates the diet list.","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"     * @param data The current data containing the diet list.","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"     * @return The message which will be shown to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"    public String[] execute(Data data) {","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"        DietList diets \u003d data.getDiets();","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"        diets.add(this.diet);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"        int size \u003d diets.size();","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"        String countMessage;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"        if (size \u003e 1) {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"            countMessage \u003d String.format(Message.MESSAGE_DIET_COUNT, size);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"        } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"            countMessage \u003d String.format(Message.MESSAGE_DIET_FIRST, size);","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"        return new String[]{Message.MESSAGE_DIET_ADDED, this.diet.toString(), countMessage};","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"nihalzp":44}},{"path":"src/main/java/athleticli/commands/diet/DeleteDietCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.Diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.DietList;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":" * Executes the add diet commands provided by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"public class DeleteDietCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"    private final int index;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"     * Constructor for AddDietCommand.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"     * @param index Diet to be added.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"    public DeleteDietCommand(int index) {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"     * Updates the diet list.","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"     * @param data The current data containing the diet list.","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"     * @return The message which will be shown to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"    public String[] execute(Data data) throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"        DietList dietList \u003d data.getDiets();","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"        int size \u003d dietList.size();","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"        if (index \u003e size || index \u003c 1) {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_INVALID_DIET_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"        Diet oldDiet \u003d dietList.get(index - 1);","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"        dietList.remove(index - 1);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"        return new String[]{Message.MESSAGE_DIET_DELETED, oldDiet.toString(),","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"                String.format(Message.MESSAGE_DIET_COUNT, size - 1)};","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"nihalzp":42}},{"path":"src/main/java/athleticli/commands/diet/EditDietGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"public class EditDietGoalCommand {","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":4}},{"path":"src/main/java/athleticli/commands/diet/ListDietCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.DietList;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import athleticli.ui.Message;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":" * Executes the list diet commands provided by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"public class ListDietCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"     * Constructor for ListDietCommand.","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"    public ListDietCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"     * Updates the diet list.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"     * @param data The current data containing the diet list.","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"     * @return The message which will be shown to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"    public String[] execute(Data data) {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"        DietList dietList \u003d data.getDiets();","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"        int size \u003d dietList.size();","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"        return new String[]{Message.MESSAGE_DIET_LIST, dietList.toString(),","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"                String.format(Message.MESSAGE_DIET_COUNT, size)};","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"nihalzp":31}},{"path":"src/main/java/athleticli/commands/diet/SetDietGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"public class SetDietGoalCommand {","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":4}},{"path":"src/main/java/athleticli/commands/sleep/AddSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.Sleep;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.SleepList;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"public class AddSleepCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"    private String from;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"    private String to;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"    public AddSleepCommand(String from, String to) {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"    ","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"    public String[] execute(Data data) {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"        SleepList sleepList \u003d data.getSleeps();","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"        Sleep newSleep \u003d new Sleep(from, to);","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(newSleep);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"        ","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"        return new String[] {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"            \"Got it. I\u0027ve added this sleep record:\",","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"            \"  \" + from + \" to \" + to,","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"            \"Now you have \" + sleepList.size() + \" sleep records in the list.\"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"        };","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"   ","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"skylee03":3,"DaDevChia":32}},{"path":"src/main/java/athleticli/commands/sleep/DeleteSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.Sleep;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.SleepList;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"public class DeleteSleepCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"    private int index;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"    public DeleteSleepCommand(int index) {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"    ","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"    public String[] execute(Data data) {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"        SleepList sleepList \u003d data.getSleeps();","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"        if (index \u003e sleepList.size() || index \u003c 1) {","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"            return new String[] {","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"                \"Invalid index. Please enter a valid index.\"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"            };","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"        Sleep oldSleep \u003d sleepList.get(index - 1);","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"        sleepList.remove(index - 1);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"        ","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"        return new String[] {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"            \"Got it. I\u0027ve deleted this sleep record at index \" + index + \": \" +  oldSleep.toString()","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"        };","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"   ","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"skylee03":3,"DaDevChia":33}},{"path":"src/main/java/athleticli/commands/sleep/EditSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.Sleep;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.SleepList;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"public class EditSleepCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"    private int index;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"    private String from;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"    private String to;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    public EditSleepCommand(int index, String from, String to) {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"    ","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"    public String[] execute(Data data) {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"        SleepList sleepList \u003d data.getSleeps();","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"        Sleep oldSleep \u003d sleepList.get(index - 1);","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"        Sleep newSleep \u003d new Sleep(from, to);","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"        sleepList.set(index - 1, newSleep);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"        ","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"        return new String[] {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"            \"Got it. I\u0027ve changed this sleep record at index \" + index + \":\",","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"            \"original: \" + oldSleep.toString(),","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"            \"to new: \" + newSleep.toString(),","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"        };","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"   ","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"skylee03":3,"DaDevChia":35}},{"path":"src/main/java/athleticli/commands/sleep/ListSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.SleepList;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"public class ListSleepCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"    public String[] execute (Data data) {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"        SleepList sleepList \u003d data.getSleeps();","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"        return new String[] {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"            \"Here are the sleep records in your list:\" + \"\\n\",","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"            sleepList.toString()","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"        };","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":3,"DaDevChia":14}},{"path":"src/main/java/athleticli/commands/sleep/SetSleepGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":" * To be implemented in future version of AthletiCLI.","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"public class SetSleepGoalCommand {","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":4,"DaDevChia":4}},{"path":"src/main/java/athleticli/commands/sleep/ViewSleepGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":" * To be implemented in future version of AthletiCLI.","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"public class ViewSleepGoalCommand {","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"DaDevChia":8}},{"path":"src/main/java/athleticli/data/Data.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import athleticli.data.activity.ActivityGoalList;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import athleticli.data.activity.ActivityList;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"import athleticli.data.diet.DietGoalList;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.DietList;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"import athleticli.data.sleep.SleepGoalList;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"import athleticli.data.sleep.SleepList;","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":" * Defines the basic fields and methods of data.","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"public class Data {","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"    private ActivityList activities;","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"    private ActivityGoalList activityGoals;","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"    private DietList diets;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"    private DietGoalList dietGoals;","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"    private SleepList sleeps;","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"    private SleepGoalList sleepGoals;","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"     * Constructs an empty \u003ccode\u003eData\u003c/code\u003e object.","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"    public Data() {","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"        this.activities \u003d new ActivityList();","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"        this.activityGoals \u003d new ActivityGoalList();","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"        this.diets \u003d new DietList();","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"        this.dietGoals \u003d new DietGoalList();","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"        this.sleeps \u003d new SleepList();","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"        this.sleepGoals \u003d new SleepGoalList();","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"     * Get all the objects","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"    public ActivityList getActivities() {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"        return activities;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"    public ActivityGoalList getActivityGoals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"        return activityGoals;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"    public DietList getDiets() {","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"        return diets;","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"    public DietGoalList getDietGoals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"        return dietGoals;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"    public SleepList getSleeps() {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"        return sleeps;","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"    public SleepGoalList getSleepGoals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"        return sleepGoals;","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"DaDevChia"},"content":"    ","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":29,"DaDevChia":30,"nihalzp":3}},{"path":"src/main/java/athleticli/data/activity/Activity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":" * Represents a physical activity consisting of basic sports data.","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"public class Activity {","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"\\\"MMMM d, \" +","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"            \"yyyy \u0027at\u0027 h:mm a\\\"\");","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    private String description;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    private String caption;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    private int movingTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"    private int distance;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    private int calories;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"     * Generates a new general sports activity with some basic stats.","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"     * By default, calories is 0, i.e., not tracked.","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"     * @param movingTime duration of the activity in minutes","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"     * @param distance distance covered in meters","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"     * @param startDateTime start date and time of the activity","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"     * @param caption a caption of the activity chosen by the user (e.g., \"Morning Run\")","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"    public Activity(String caption, int movingTime, int distance, LocalDateTime startDateTime) {","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"        this.movingTime \u003d movingTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"        this.distance \u003d distance;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"        this.caption \u003d caption;","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"    public int getMovingTime() {","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"        return movingTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"    public int getDistance() {","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"        return distance;","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"    public String getCaption() {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"        return caption;","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"        return startDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"     * Returns a single line summary of the activity.","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"     * @return a string representation of the activity","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"        int movingTimeHours \u003d movingTime / 60;","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"        int movingTimeMinutes \u003d movingTime % 60;","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"        double distanceInKm \u003d distance / 1000.0;","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"        String movingTimeOutput \u003d \"Time: \" + movingTimeHours + \"h \" + movingTimeMinutes + \"m\";","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"        String distanceOutput \u003d \"Distance: \" + String.format(\"%.2f\", distanceInKm).replace(\",\", \".\")","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"                + \" km\";","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"        String startDateTimeOutput \u003d startDateTime.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"        String result \u003d \"[Activity] \" + caption + \" | \" + distanceOutput + \" | \" + movingTimeOutput + \" | \" +","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"                startDateTimeOutput;","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"AlWo223"},"content":"        return result;","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":4,"AlWo223":66}},{"path":"src/main/java/athleticli/data/activity/ActivityGoal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"public class ActivityGoal {","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":4}},{"path":"src/main/java/athleticli/data/activity/ActivityGoalList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"public class ActivityGoalList extends ArrayList\u003cActivityGoal\u003e {","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":6}},{"path":"src/main/java/athleticli/data/activity/ActivityList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"public class ActivityList extends ArrayList\u003cActivity\u003e {","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":6}},{"path":"src/main/java/athleticli/data/activity/Cycle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":" * Represents a cycling activity consisting of relevant evaluation data.","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"public class Cycle extends Activity {","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"    private final int elevationGain;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"    private final double averageSpeed;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"     * Generates a new cycling activity with cycling specific stats.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"     * By default, calories is 0, i.e., not tracked.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"     * averageSpeed is calculated automatically based on the distance and movingTime.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"     * @param movingTime duration of the activity in minutes","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"     * @param distance distance covered in meters","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"     * @param startDateTime start date and time of the activity","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"     * @param caption a caption of the activity chosen by the user (e.g., \"Morning Run\")","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"     * @param elevationGain elevation gain in meters","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"    public Cycle(String caption, int movingTime, int distance, LocalDateTime startDateTime, int elevationGain) {","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"        super(caption, movingTime, distance, startDateTime);","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"        this.elevationGain \u003d elevationGain;","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"        this.averageSpeed \u003d this.calculateAverageSpeed();","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"     * Calculates the average speed of the cycle in km/h.","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"     * @return average speed of the cycle in km/h","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"    public double calculateAverageSpeed() {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"        double dist \u003d (double) this.getDistance();","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"        double time \u003d (double) this.getMovingTime();","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"        return (dist/1000) / (time/60);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"     * Returns a single line summary of the cycling activity.","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"     * @return a string representation of the cycle","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"        String result \u003d super.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"        result \u003d result.replace(\"[Activity]\", \"[Cycle]\");","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"        String speedOutput \u003d String.format(\"%.2f\", this.averageSpeed).replace(\",\", \".\") + \" km/h\";","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"        result \u003d result.replace(\"Time: \", \"Speed: \" + speedOutput + \" | Time: \");","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"        return result;","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"AlWo223":51}},{"path":"src/main/java/athleticli/data/activity/Run.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":" * Represents a running activity consisting of relevant evaluation data.","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"public class Run extends Activity{","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"    private int elevationGain;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"    private double averagePace;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"     * Generates a new running activity with running specific stats.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"     * By default, calories is 0, i.e., not tracked.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"     * averageSpeed is calculated automatically based on the distance and movingTime.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"     * @param movingTime duration of the activity in minutes","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"     * @param distance distance covered in meters","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"     * @param startDateTime start date and time of the activity","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"     * @param caption a caption of the activity chosen by the user (e.g., \"Morning Run\")","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"     * @param elevationGain elevation gain in meters","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    public Run(String caption, int movingTime, int distance, LocalDateTime startDateTime, int elevationGain) {","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"        super(caption, movingTime, distance, startDateTime);","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"        this.elevationGain \u003d elevationGain;","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"        this.averagePace \u003d this.calculateAveragePace();","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"     * Calculates the average pace of the run in minutes per km.","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"     * @return average pace of the run in minutes per km","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"    public double calculateAveragePace() {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"        double time \u003d (double) this.getMovingTime();","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"        double distance \u003d (double) this.getDistance() / 1000;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"        return time / distance;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"     * Converts the average pace of the run to the user-friendly format mm:ss.","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"     * @return average pace of run in mm:ss format","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"    public String convertAveragePaceToString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"        int totalSeconds \u003d (int) Math.round(this.averagePace*60);","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"        int minutes \u003d totalSeconds / 60;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"        int seconds \u003d totalSeconds % 60;","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"        return String.format(\"%d:%02d\", minutes, seconds);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"     * Returns a single line summary of the running activity.","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"     * @return a string representation of the run","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"        String result \u003d super.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"AlWo223"},"content":"        result \u003d result.replace(\"[Activity]\", \"[Run]\");","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"AlWo223"},"content":"        String paceOutput \u003d this.convertAveragePaceToString() + \" /km\";","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"AlWo223"},"content":"        result \u003d result.replace(\"Time: \", \"Pace: \" + paceOutput + \" | Time: \");","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"AlWo223"},"content":"        return result;","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"AlWo223":62}},{"path":"src/main/java/athleticli/data/activity/Swim.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"public class Swim extends Activity {","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"    private final int laps;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"    private final SwimmingStyle style;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"    private final int averageLapTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"    public enum SwimmingStyle {","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"        BUTTERFLY,","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"        BACKSTROKE,","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"        BREASTSTROKE,","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"        FREESTYLE","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"    public Swim(String caption, int movingTime, int distance, LocalDateTime startDateTime, SwimmingStyle style) {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"        super(caption, movingTime, distance, startDateTime);","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"        this.laps \u003d this.calculateLaps();","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"        this.style \u003d style;","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"        this.averageLapTime \u003d this.calculateAverageLapTime();","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"     * Calculates the average lap time in seconds.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"     * @return average lap time in seconds","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"    public int calculateAverageLapTime() {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"        int laps \u003d this.calculateLaps();","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"        return this.getMovingTime() * 60 / laps;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"    public int calculateLaps() {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"        return this.getDistance() / 50;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"    public int getLaps() {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"        return laps;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"    public int getAverageLapTime() {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"        return averageLapTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"AlWo223"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"AlWo223"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"AlWo223"},"content":"        String result \u003d super.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"        result \u003d result.replace(\"[Activity]\", \"[Swim]\");","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"AlWo223"},"content":"        String averageLapTimeOutput \u003d this.averageLapTime + \"s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"AlWo223"},"content":"        result \u003d result.replace(\"Time: \", \"Avg Lap Time: \" + averageLapTimeOutput + \" | Time: \");","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"AlWo223"},"content":"        return result;","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"AlWo223":54}},{"path":"src/main/java/athleticli/data/diet/Diet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.diet;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":" * Defines the basic fields and methods of a diet.","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"public class Diet {","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"    private int calories;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"    private int protein;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"    private int carb;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"    private int fat;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"     * Constructs a \u003ccode\u003eDiet\u003c/code\u003e object.","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"     * @param calories The caloric value of the diet in cal.","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"     * @param protein  Protein intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"     * @param carb     Carbohydrate intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"     * @param fat      Fat intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"    public Diet(int calories, int protein, int carb, int fat) {","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"        this.protein \u003d protein;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"        this.carb \u003d carb;","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"        this.fat \u003d fat;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"     * Returns the caloric value of the diet in cal.","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"     * @return The caloric value of the diet in cal.","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"    public int getCalories() {","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"        return calories;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"     * Sets the caloric value of the diet in cal.","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"     * @param calories The caloric value of the diet in cal.","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"    public void setCalories(int calories) {","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"nihalzp"},"content":"     * Returns the protein intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"nihalzp"},"content":"     * @return Protein intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"nihalzp"},"content":"    public int getProtein() {","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"nihalzp"},"content":"        return protein;","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"nihalzp"},"content":"     * Sets the protein intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"nihalzp"},"content":"     * @param protein Protein intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"nihalzp"},"content":"    public void setProtein(int protein) {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"nihalzp"},"content":"        this.protein \u003d protein;","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"nihalzp"},"content":"     * Returns the carbohydrate intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"nihalzp"},"content":"     * @return Carbohydrate intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"nihalzp"},"content":"    public int getCarb() {","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"nihalzp"},"content":"        return carb;","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"nihalzp"},"content":"     * Sets the carbohydrate intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"nihalzp"},"content":"     * @param carb Carbohydrate intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"nihalzp"},"content":"    public void setCarb(int carb) {","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"nihalzp"},"content":"        this.carb \u003d carb;","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"nihalzp"},"content":"     * Returns the fat intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"nihalzp"},"content":"     * @return Fat intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"nihalzp"},"content":"    public int getFat() {","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"nihalzp"},"content":"        return fat;","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"nihalzp"},"content":"     * Sets the fat intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"nihalzp"},"content":"     * @param fat Fat intake in grams.","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"nihalzp"},"content":"    public void setFat(int fat) {","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"nihalzp"},"content":"        this.fat \u003d fat;","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"nihalzp"},"content":"     * Returns a string representation of the diet.","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"nihalzp"},"content":"     * @return A string representation of the diet.","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"nihalzp"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"nihalzp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"nihalzp"},"content":"        return \"Calories: \" + calories + \" Protein: \" + protein + \" Carb: \" + carb + \" Fat: \" + fat;","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":3,"nihalzp":105}},{"path":"src/main/java/athleticli/data/diet/DietGoal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.diet;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":" * Represents a diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"public class DietGoal {","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"    private String nutrients;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"    private int targetValue;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"    private int currentValue;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"    private boolean isGoalAchieved;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"     * Constructs a diet goal with no current value.","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"     * @param nutrients   The nutrients of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"     * @param targetValue The target value of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"    public DietGoal(String nutrients, int targetValue) {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"        this.nutrients \u003d nutrients;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"        this.targetValue \u003d targetValue;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"        currentValue \u003d 0;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"        isGoalAchieved \u003d false;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"     * Constructs a diet goal with a current value.","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"     * @param nutrients    The nutrients of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"     * @param targetValue  The target value of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"     * @param currentValue The current value of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"    public DietGoal(String nutrients, int targetValue, int currentValue) {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"        this.nutrients \u003d nutrients;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"        this.targetValue \u003d targetValue;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"        this.currentValue \u003d currentValue;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"        isGoalAchieved \u003d currentValue \u003e\u003d targetValue;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"     * Returns the nutrients of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"     * @return The nutrients of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"    public String getNutrients() {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"nihalzp"},"content":"        return nutrients;","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"nihalzp"},"content":"     * Sets the nutrients of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"nihalzp"},"content":"     * @param nutrients The nutrients of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"nihalzp"},"content":"    public void setNutrients(String nutrients) {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"nihalzp"},"content":"        this.nutrients \u003d nutrients;","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"nihalzp"},"content":"     * Returns the target value of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"nihalzp"},"content":"     * @return The target value of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"nihalzp"},"content":"    public int getTargetValue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"nihalzp"},"content":"        return targetValue;","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"nihalzp"},"content":"     * Sets the target value of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"nihalzp"},"content":"     * @param targetValue The target value of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"nihalzp"},"content":"    public void setTargetValue(int targetValue) {","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"nihalzp"},"content":"        this.targetValue \u003d targetValue;","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"nihalzp"},"content":"        setIsGoalAchieved(currentValue \u003e\u003d targetValue);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"nihalzp"},"content":"     * Returns the current value of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"nihalzp"},"content":"     * @return The current value of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"nihalzp"},"content":"    public int getCurrentValue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"nihalzp"},"content":"        return currentValue;","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"nihalzp"},"content":"     * Sets the current value of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"nihalzp"},"content":"     * @param currentValue The current value of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"nihalzp"},"content":"    public void setCurrentValue(int currentValue) {","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"nihalzp"},"content":"        this.currentValue \u003d currentValue;","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"nihalzp"},"content":"        setIsGoalAchieved(currentValue \u003e\u003d targetValue);","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"nihalzp"},"content":"     * Returns whether the diet goal is achieved.","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"nihalzp"},"content":"     * @return Whether the diet goal is achieved.","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"nihalzp"},"content":"    public boolean getIsGoalAchieved() {","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"nihalzp"},"content":"        return isGoalAchieved;","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"nihalzp"},"content":"     * Sets whether the diet goal is achieved.","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"nihalzp"},"content":"     * @param isGoalAchieved Whether the diet goal is achieved.","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"nihalzp"},"content":"    private void setIsGoalAchieved(boolean isGoalAchieved) {","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"nihalzp"},"content":"        this.isGoalAchieved \u003d isGoalAchieved;","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"nihalzp"},"content":"     * Returns the string representation of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"nihalzp"},"content":"     * @return The string representation of the diet goal.","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"nihalzp"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"nihalzp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"nihalzp"},"content":"        return nutrients + \" intake progress: (\" + currentValue + \"/\" + targetValue + \")\\n\";","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":4,"nihalzp":118}},{"path":"src/main/java/athleticli/data/diet/DietGoalList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.diet;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":" * Represents a list of diet goals.","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"public class DietGoalList extends ArrayList\u003cDietGoal\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"     * Constructs a diet goal list.","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"    public DietGoalList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"        super();","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"     * Returns a string representation of the diet goal list.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"     * @return A string representation of the diet goal list.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"            result.append(i + 1).append(\". \").append(get(i).toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"            if (i !\u003d size() - 1) {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"                result.append(\"\\n\");","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"        return result.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":5,"nihalzp":27}},{"path":"src/main/java/athleticli/data/diet/DietList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.diet;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":" * Represents a list of diets.","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"public class DietList extends ArrayList\u003cDiet\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"     * Constructs a diet list.","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"    public DietList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"        super();","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"     * Returns a string representation of the diet list.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"     * @return A string representation of the diet list.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"            result.append(i + 1).append(\". \").append(get(i).toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"            if (i !\u003d size() - 1) {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"                result.append(\"\\n\");","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"        return result.toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":5,"nihalzp":27}},{"path":"src/main/java/athleticli/data/sleep/Sleep.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.sleep;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"public class Sleep {","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"    private String from;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"    private String to;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"    public Sleep(String from, String to) {","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"        return \"sleep from \" + from + \" to \" + to;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":4,"DaDevChia":11}},{"path":"src/main/java/athleticli/data/sleep/SleepGoal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":" * To be implemented in future version of AthletiCLI.","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"package athleticli.data.sleep;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"public class SleepGoal {","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":4,"DaDevChia":4}},{"path":"src/main/java/athleticli/data/sleep/SleepGoalList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":" * To be implemented in future version of AthletiCLI.","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"package athleticli.data.sleep;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"public class SleepGoalList extends ArrayList\u003cSleepGoal\u003e {","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":6,"DaDevChia":3}},{"path":"src/main/java/athleticli/data/sleep/SleepList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.data.sleep;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"public class SleepList extends ArrayList\u003cSleep\u003e {","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"            output.append((i + 1) + \". \" + this.get(i).toString() + \"\\n\");","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"        return output.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":6,"DaDevChia":7}},{"path":"src/main/java/athleticli/exceptions/AthletiException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.exceptions;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":" * Represents the exceptions that need to be shown to the user.","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"public class AthletiException extends Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"    public AthletiException(String message) {","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"        super(message);","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":10}},{"path":"src/main/java/athleticli/exceptions/EmptyArgumentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.exceptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"public class EmptyArgumentException extends AthletiException{","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"    public EmptyArgumentException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"        super(\"Please enter some information to your command!\");","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlWo223":8}},{"path":"src/main/java/athleticli/exceptions/UnknownCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.exceptions;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"public class UnknownCommandException extends AthletiException {","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":7}},{"path":"src/main/java/athleticli/ui/CommandName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.ui;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":" * Defines string literals for command names.","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"public class CommandName {","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"    public static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"    public static final String COMMAND_SLEEP_ADD \u003d \"add-sleep\";","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"    public static final String COMMAND_SLEEP_EDIT \u003d \"edit-sleep\";","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"    public static final String COMMAND_SLEEP_DELETE \u003d \"delete-sleep\";","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"    public static final String COMMAND_SLEEP_LIST \u003d \"list-sleep\";","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    public static final String COMMAND_RUN \u003d \"run\";","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    public static final String COMMAND_ACTIVITY \u003d \"activity\";","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    public static final String COMMAND_CYCLE \u003d \"cycle\";","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"    public static final String COMMAND_SWIM \u003d \"swim\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"    public static final String COMMAND_DIET_ADD \u003d \"add-diet\";","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"    public static final String COMMAND_DIET_DELETE \u003d \"delete-diet\";","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"    public static final String COMMAND_DIET_LIST \u003d \"list-diet\";","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":8,"DaDevChia":6,"AlWo223":4,"nihalzp":4}},{"path":"src/main/java/athleticli/ui/Message.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.ui;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"public class Message {","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"    public static final String PROMPT \u003d \"\u003e \";","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"    public static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"    public static final String PREFIX_MESSAGE \u003d \" \";","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"    public static final String PREFIX_EXCEPTION \u003d \"OOPS!!! \";","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":"    public static final String MESSAGE_BYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":"    public static final String[] MESSAGE_HELLO \u003d {\"Hello! I\u0027m AthletiCLI!\", \"What can I do for you?\"};","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_CAPTION_MISSING \u003d \"The caption of an activity cannot be empty!\";","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DURATION_MISSING \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"            \"Please specify the activity duration using \\\"duration/\\\"!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DISTANCE_MISSING \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"            \"Please specify the activity duration using \\\"distance/\\\"!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DATETIME_MISSING \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"            \"Please specify the activity duration using \\\"datetime/\\\"!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_CALORIES_MISSING \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"            \"Please specify the calories burned using \\\"calories/\\\"!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_PROTEIN_MISSING \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"            \"Please specify the protein intake using \\\"protein/\\\"!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_CARB_MISSING \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"            \"Please specify the carbohydrate intake using \\\"carbs/\\\"!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_FAT_MISSING \u003d \"Please specify the fat intake using \\\"fat/\\\"!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_CAPTION_EMPTY \u003d \"The caption of an activity cannot be empty!\";","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_DURATION_EMPTY \u003d \"The duration of an activity cannot be empty!\";","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_DISTANCE_EMPTY \u003d \"The distance of an activity cannot be empty!\";","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_DATETIME_EMPTY \u003d \"The datetime of an activity cannot be empty!\";","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_CALORIES_EMPTY \u003d \"The calories burned cannot be empty!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_PROTEIN_EMPTY \u003d \"The protein intake cannot be empty!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_CARB_EMPTY \u003d \"The carbohydrate intake cannot be empty!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_FAT_EMPTY \u003d \"The fat intake cannot be empty!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DURATION_INVALID \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"            \"The duration of an activity must be a positive integer!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DISTANCE_INVALID \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"            \"The distance of an activity must be a positive integer!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DATETIME_INVALID \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"            \"The datetime of an activity must be in the format \" + \"\\\"yyyy-MM-dd HH:mm\\\"!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_CALORIES_INVALID \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"            \"The calories burned must be a non-negative integer!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_PROTEIN_INVALID \u003d \"The protein intake must be a non-negative integer!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_CARB_INVALID \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"            \"The carbohydrate intake must be a non-negative integer!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_FAT_INVALID \u003d \"The fat intake must be a non-negative integer!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_ACTIVITY_ADDED \u003d \"Well done! I\u0027ve added this activity:\";","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DIET_ADDED \u003d \"Well done! I\u0027ve added this diet:\";","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_ELEVATION_MISSING \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"nihalzp"},"content":"            \"Please specify the elevation gain using \\\"elevation/\\\"!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"AlWo223"},"content":"    public static final String MESSAGE_ELEVATION_EMPTY \u003d \"The elevation gain of an activity cannot be empty!\";","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_ELEVATION_INVALID \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"nihalzp"},"content":"            \"The elevation gain of an activity must be an integer!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_SWIMMINGSTYLE_MISSING \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"nihalzp"},"content":"            \"Please specify the swimming style using \\\"style/\\\"!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_SWIMMINGSTYLE_INVALID \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"nihalzp"},"content":"            \"The swimming style of an activity must be one of \" +","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"AlWo223"},"content":"                    \"the following: \\\"butterfly\\\", \\\"backstroke\\\", \\\"breaststroke\\\", \\\"freestyle\\\"!\";","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_ACTIVITY_COUNT \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"nihalzp"},"content":"            \"Now you have tracked a total of %d activities. Keep pushing!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DIET_COUNT \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"nihalzp"},"content":"            \"Now you have tracked a total of %d diets. Keep grinding!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_ACTIVITY_FIRST \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"nihalzp"},"content":"            \"Now you have tracked your first activity. This is just the beginning!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DIET_FIRST \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"nihalzp"},"content":"            \"Now you have tracked your first diet. This is just the beginning!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_INVALID_DIET_INDEX \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"nihalzp"},"content":"            \"The diet index is invalid! Please enter a valid diet index!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DIET_INDEX_TYPE_INVALID \u003d \"The diet index must be an integer!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DIET_DELETED \u003d \"Noted. I\u0027ve removed this diet:\";","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"nihalzp"},"content":"    public static final String MESSAGE_DIET_LIST \u003d \"Here are the diets in your list:\";","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":10,"AlWo223":8,"nihalzp":52}},{"path":"src/main/java/athleticli/ui/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.ui;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.ByeCommand;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.Command;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import athleticli.commands.activity.AddActivityCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.diet.AddDietCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.diet.DeleteDietCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.diet.ListDietCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.sleep.AddSleepCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.sleep.DeleteSleepCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.sleep.EditSleepCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.sleep.ListSleepCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Activity;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Run;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Swim;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.Diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.UnknownCommandException;","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":" * Defines the basic methods for command parser.","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"public class Parser {","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"     * Splits the raw user input into two parts, and then returns them. The first part is the command type,","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"     * while the second part is the command arguments. The second part can be empty.","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"     * @param rawUserInput The raw user input.","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"     * @return A string array whose first element is the command type and the second element is the command","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"     *         arguments.","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"    public static String[] splitCommandWordAndArgs(String rawUserInput) {","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":"        final String[] split \u003d rawUserInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"skylee03"},"content":"        return split.length \u003d\u003d 2 ? split : new String[]{split[0], \"\"};","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"skylee03"},"content":"     * Parses the raw user input and returns the corresponding command object.","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"skylee03"},"content":"     * @param rawUserInput The raw user input.","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"skylee03"},"content":"     * @return An object representing the command.","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"skylee03"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"skylee03"},"content":"    public static Command parseCommand(String rawUserInput) throws AthletiException {","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"skylee03"},"content":"        final String[] commandTypeAndParams \u003d splitCommandWordAndArgs(rawUserInput);","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"skylee03"},"content":"        final String commandType \u003d commandTypeAndParams[0];","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"skylee03"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"skylee03"},"content":"        switch (commandType) {","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"skylee03"},"content":"        case CommandName.COMMAND_BYE:","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"skylee03"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"        case CommandName.COMMAND_SLEEP_ADD:","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"            return parseSleepAdd(commandArgs);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"        case CommandName.COMMAND_SLEEP_LIST:","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"            return new ListSleepCommand();","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"        case CommandName.COMMAND_SLEEP_EDIT:","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"DaDevChia"},"content":"            return parseSleepEdit(commandArgs);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"DaDevChia"},"content":"        case CommandName.COMMAND_SLEEP_DELETE:","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"DaDevChia"},"content":"            return parseSleepDelete(commandArgs);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"AlWo223"},"content":"        case CommandName.COMMAND_ACTIVITY:","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"AlWo223"},"content":"            return new AddActivityCommand(parseActivity(commandArgs));","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"AlWo223"},"content":"        case CommandName.COMMAND_CYCLE:","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"AlWo223"},"content":"        case CommandName.COMMAND_RUN:","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"AlWo223"},"content":"            return new AddActivityCommand(parseRunCycle(commandArgs));","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"AlWo223"},"content":"        case CommandName.COMMAND_SWIM:","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"AlWo223"},"content":"            return new AddActivityCommand(parseSwim(commandArgs));","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"nihalzp"},"content":"        case CommandName.COMMAND_DIET_ADD:","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"nihalzp"},"content":"            return new AddDietCommand(parseDiet(commandArgs));","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"nihalzp"},"content":"        case CommandName.COMMAND_DIET_DELETE:","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"nihalzp"},"content":"            return new DeleteDietCommand(parseDietIndex(commandArgs));","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"nihalzp"},"content":"        case CommandName.COMMAND_DIET_LIST:","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"nihalzp"},"content":"            return new ListDietCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"skylee03"},"content":"        default:","lastModifiedDate":"2023-10-08"},{"lineNumber":76,"author":{"gitId":"skylee03"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-10-08"},{"lineNumber":77,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":78,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":79,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"AlWo223"},"content":"     * Parses the raw user input for an activity and returns the corresponding activity object.","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"AlWo223"},"content":"     * @param arguments The raw user input containing the arguments.","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"AlWo223"},"content":"     * @return An object representing the activity.","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"AlWo223"},"content":"    public static Activity parseActivity(String arguments) throws AthletiException {","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"AlWo223"},"content":"        final int durationIndex \u003d arguments.indexOf(\"duration/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"AlWo223"},"content":"        final int distanceIndex \u003d arguments.indexOf(\"distance/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"AlWo223"},"content":"        final int datetimeIndex \u003d arguments.indexOf(\"datetime/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"AlWo223"},"content":"        checkMissingActivityArguments(durationIndex, distanceIndex, datetimeIndex);","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"AlWo223"},"content":"        final String caption \u003d arguments.substring(0, durationIndex).trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"AlWo223"},"content":"        final String duration \u003d arguments.substring(durationIndex + 9, distanceIndex).trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"AlWo223"},"content":"        final String distance \u003d arguments.substring(distanceIndex + 9, datetimeIndex).trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"AlWo223"},"content":"        final String datetime \u003d arguments.substring(datetimeIndex + 9).trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"AlWo223"},"content":"        checkEmptyActivityArguments(caption, duration, distance, datetime);","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"AlWo223"},"content":"        final int durationParsed \u003d parseDuration(duration);","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"AlWo223"},"content":"        final int distanceParsed \u003d parseDistance(distance);","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"AlWo223"},"content":"        final LocalDateTime datetimeParsed \u003d parseDateTime(datetime);","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"AlWo223"},"content":"        return new Activity(caption, durationParsed, distanceParsed, datetimeParsed);","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"AlWo223"},"content":"    public static int parseDuration(String duration) throws AthletiException {","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"AlWo223"},"content":"        int durationParsed;","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"AlWo223"},"content":"            durationParsed \u003d Integer.parseInt(duration);","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"AlWo223"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_DURATION_INVALID);","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"AlWo223"},"content":"        return durationParsed;","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"AlWo223"},"content":"    public static LocalDateTime parseDateTime(String datetime) throws AthletiException {","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"AlWo223"},"content":"        LocalDateTime datetimeParsed;","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"AlWo223"},"content":"            datetimeParsed \u003d LocalDateTime.parse(datetime.replace(\" \", \"T\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"AlWo223"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_DATETIME_INVALID);","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"AlWo223"},"content":"        return datetimeParsed;","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"AlWo223"},"content":"    public static int parseDistance(String distance) throws AthletiException {","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"AlWo223"},"content":"        int distanceParsed;","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"AlWo223"},"content":"            distanceParsed \u003d Integer.parseInt(distance);","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"AlWo223"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_DISTANCE_INVALID);","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"AlWo223"},"content":"        return distanceParsed;","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"nihalzp"},"content":"    public static void checkMissingActivityArguments(int durationIndex, int distanceIndex,","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"nihalzp"},"content":"                                                     int datetimeIndex) throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"AlWo223"},"content":"        if (durationIndex \u003d\u003d -1) {","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_DURATION_MISSING);","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"AlWo223"},"content":"        if (distanceIndex \u003d\u003d -1) {","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_DISTANCE_MISSING);","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"AlWo223"},"content":"        if (datetimeIndex \u003d\u003d -1) {","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_DATETIME_MISSING);","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"AlWo223"},"content":"     * Parses the raw user input for a run or cycle and returns the corresponding activity object.","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"AlWo223"},"content":"     * @param arguments The raw user input containing the arguments.","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"AlWo223"},"content":"     * @return An object representing the activity.","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"AlWo223"},"content":"    public static Activity parseRunCycle(String arguments) throws AthletiException {","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"AlWo223"},"content":"        final int durationIndex \u003d arguments.indexOf(\"duration/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"AlWo223"},"content":"        final int distanceIndex \u003d arguments.indexOf(\"distance/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"AlWo223"},"content":"        final int datetimeIndex \u003d arguments.indexOf(\"datetime/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"AlWo223"},"content":"        final int elevationIndex \u003d arguments.indexOf(\"elevation/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"AlWo223"},"content":"        checkMissingRunCycleArguments(durationIndex, distanceIndex, datetimeIndex, elevationIndex);","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"AlWo223"},"content":"        final String caption \u003d arguments.substring(0, durationIndex).trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"AlWo223"},"content":"        final String duration \u003d arguments.substring(durationIndex + 9, distanceIndex).trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"AlWo223"},"content":"        final String distance \u003d arguments.substring(distanceIndex + 9, datetimeIndex).trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"AlWo223"},"content":"        final String datetime \u003d arguments.substring(datetimeIndex + 9, elevationIndex).trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"AlWo223"},"content":"        final String elevation \u003d arguments.substring(elevationIndex + 10).trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"AlWo223"},"content":"        checkEmptyActivityArguments(caption, duration, distance, datetime, elevation);","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"AlWo223"},"content":"        final int durationParsed \u003d parseDuration(duration);","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"AlWo223"},"content":"        final int distanceParsed \u003d parseDistance(distance);","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"AlWo223"},"content":"        final LocalDateTime datetimeParsed \u003d parseDateTime(datetime);","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"AlWo223"},"content":"        final int elevationParsed \u003d parseElevation(elevation);","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"AlWo223"},"content":"        return new Run(caption, durationParsed, distanceParsed, datetimeParsed, elevationParsed);","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":181,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"AlWo223"},"content":"    public static int parseElevation(String elevation) throws AthletiException {","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"AlWo223"},"content":"        int elevationParsed;","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"AlWo223"},"content":"            elevationParsed \u003d Integer.parseInt(elevation);","lastModifiedDate":"2023-10-13"},{"lineNumber":186,"author":{"gitId":"AlWo223"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ELEVATION_INVALID);","lastModifiedDate":"2023-10-13"},{"lineNumber":188,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"AlWo223"},"content":"        return elevationParsed;","lastModifiedDate":"2023-10-13"},{"lineNumber":190,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":191,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":192,"author":{"gitId":"AlWo223"},"content":"    public static void checkMissingRunCycleArguments(int durationIndex, int distanceIndex, int datetimeIndex,","lastModifiedDate":"2023-10-13"},{"lineNumber":193,"author":{"gitId":"AlWo223"},"content":"                                                     int elevationIndex) throws AthletiException {","lastModifiedDate":"2023-10-13"},{"lineNumber":194,"author":{"gitId":"AlWo223"},"content":"        checkMissingActivityArguments(durationIndex, distanceIndex, datetimeIndex);","lastModifiedDate":"2023-10-13"},{"lineNumber":195,"author":{"gitId":"AlWo223"},"content":"        if (elevationIndex \u003d\u003d -1) {","lastModifiedDate":"2023-10-13"},{"lineNumber":196,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ELEVATION_MISSING);","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":198,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":199,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":200,"author":{"gitId":"AlWo223"},"content":"    public static void checkMissingSwimArguments(int durationIndex, int distanceIndex, int datetimeIndex,","lastModifiedDate":"2023-10-13"},{"lineNumber":201,"author":{"gitId":"AlWo223"},"content":"                                                 int swimmingStyleIndex) throws AthletiException {","lastModifiedDate":"2023-10-13"},{"lineNumber":202,"author":{"gitId":"AlWo223"},"content":"        checkMissingActivityArguments(durationIndex, distanceIndex, datetimeIndex);","lastModifiedDate":"2023-10-13"},{"lineNumber":203,"author":{"gitId":"AlWo223"},"content":"        if (swimmingStyleIndex \u003d\u003d -1) {","lastModifiedDate":"2023-10-13"},{"lineNumber":204,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_SWIMMINGSTYLE_MISSING);","lastModifiedDate":"2023-10-13"},{"lineNumber":205,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":206,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":207,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":208,"author":{"gitId":"nihalzp"},"content":"    public static void checkEmptyActivityArguments(String caption, String duration, String distance,","lastModifiedDate":"2023-10-15"},{"lineNumber":209,"author":{"gitId":"nihalzp"},"content":"                                                   String datetime) throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":210,"author":{"gitId":"AlWo223"},"content":"        if (caption.isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":211,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_CAPTION_EMPTY);","lastModifiedDate":"2023-10-13"},{"lineNumber":212,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":213,"author":{"gitId":"AlWo223"},"content":"        if (duration.isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":214,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_DURATION_EMPTY);","lastModifiedDate":"2023-10-13"},{"lineNumber":215,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":216,"author":{"gitId":"AlWo223"},"content":"        if (distance.isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":217,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_DISTANCE_EMPTY);","lastModifiedDate":"2023-10-13"},{"lineNumber":218,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":219,"author":{"gitId":"AlWo223"},"content":"        if (datetime.isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":220,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_DATETIME_EMPTY);","lastModifiedDate":"2023-10-13"},{"lineNumber":221,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":222,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":223,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":224,"author":{"gitId":"nihalzp"},"content":"    public static void checkEmptyActivityArguments(String caption, String duration, String distance,","lastModifiedDate":"2023-10-15"},{"lineNumber":225,"author":{"gitId":"nihalzp"},"content":"                                                   String datetime,","lastModifiedDate":"2023-10-15"},{"lineNumber":226,"author":{"gitId":"AlWo223"},"content":"                                                   String elevation) throws AthletiException {","lastModifiedDate":"2023-10-13"},{"lineNumber":227,"author":{"gitId":"AlWo223"},"content":"        checkEmptyActivityArguments(caption, duration, distance, datetime);","lastModifiedDate":"2023-10-13"},{"lineNumber":228,"author":{"gitId":"AlWo223"},"content":"        if (elevation.isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":229,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_ELEVATION_EMPTY);","lastModifiedDate":"2023-10-13"},{"lineNumber":230,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":231,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":232,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":233,"author":{"gitId":"nihalzp"},"content":"    public static void checkEmptyActivityArguments(String caption, String duration, String distance,","lastModifiedDate":"2023-10-15"},{"lineNumber":234,"author":{"gitId":"nihalzp"},"content":"                                                   String datetime,","lastModifiedDate":"2023-10-15"},{"lineNumber":235,"author":{"gitId":"AlWo223"},"content":"                                                   int swimmingStyleIndex) throws AthletiException {","lastModifiedDate":"2023-10-13"},{"lineNumber":236,"author":{"gitId":"AlWo223"},"content":"        checkEmptyActivityArguments(caption, duration, distance, datetime);","lastModifiedDate":"2023-10-13"},{"lineNumber":237,"author":{"gitId":"AlWo223"},"content":"        if (swimmingStyleIndex \u003d\u003d -1) {","lastModifiedDate":"2023-10-13"},{"lineNumber":238,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_SWIMMINGSTYLE_MISSING);","lastModifiedDate":"2023-10-13"},{"lineNumber":239,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":240,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":241,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":242,"author":{"gitId":"AlWo223"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":243,"author":{"gitId":"AlWo223"},"content":"     * Parses the raw user input for a swim and returns the corresponding activity object.","lastModifiedDate":"2023-10-13"},{"lineNumber":244,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":245,"author":{"gitId":"AlWo223"},"content":"     * @param arguments The raw user input containing the arguments.","lastModifiedDate":"2023-10-13"},{"lineNumber":246,"author":{"gitId":"AlWo223"},"content":"     * @return activity      An object representing the activity.","lastModifiedDate":"2023-10-13"},{"lineNumber":247,"author":{"gitId":"AlWo223"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-10-13"},{"lineNumber":248,"author":{"gitId":"AlWo223"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":249,"author":{"gitId":"AlWo223"},"content":"    public static Activity parseSwim(String arguments) throws AthletiException {","lastModifiedDate":"2023-10-13"},{"lineNumber":250,"author":{"gitId":"AlWo223"},"content":"        final int durationIndex \u003d arguments.indexOf(\"duration/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":251,"author":{"gitId":"AlWo223"},"content":"        final int distanceIndex \u003d arguments.indexOf(\"distance/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":252,"author":{"gitId":"AlWo223"},"content":"        final int datetimeIndex \u003d arguments.indexOf(\"datetime/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":253,"author":{"gitId":"AlWo223"},"content":"        final int swimmingStyleIndex \u003d arguments.indexOf(\"style/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":254,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":255,"author":{"gitId":"AlWo223"},"content":"        checkMissingSwimArguments(durationIndex, distanceIndex, datetimeIndex, swimmingStyleIndex);","lastModifiedDate":"2023-10-13"},{"lineNumber":256,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":257,"author":{"gitId":"AlWo223"},"content":"        final String caption \u003d arguments.substring(0, durationIndex).trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":258,"author":{"gitId":"AlWo223"},"content":"        final String duration \u003d arguments.substring(durationIndex + 9, distanceIndex).trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":259,"author":{"gitId":"AlWo223"},"content":"        final String distance \u003d arguments.substring(distanceIndex + 9, datetimeIndex).trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":260,"author":{"gitId":"AlWo223"},"content":"        final String datetime \u003d arguments.substring(datetimeIndex + 9, swimmingStyleIndex).trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":261,"author":{"gitId":"AlWo223"},"content":"        final String swimmingStyle \u003d arguments.substring(swimmingStyleIndex + 6).trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":262,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":263,"author":{"gitId":"AlWo223"},"content":"        checkEmptyActivityArguments(caption, duration, distance, datetime, swimmingStyleIndex);","lastModifiedDate":"2023-10-13"},{"lineNumber":264,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":265,"author":{"gitId":"AlWo223"},"content":"        final int durationParsed \u003d parseDuration(duration);","lastModifiedDate":"2023-10-13"},{"lineNumber":266,"author":{"gitId":"AlWo223"},"content":"        final int distanceParsed \u003d parseDistance(distance);","lastModifiedDate":"2023-10-13"},{"lineNumber":267,"author":{"gitId":"AlWo223"},"content":"        final LocalDateTime datetimeParsed \u003d parseDateTime(datetime);","lastModifiedDate":"2023-10-13"},{"lineNumber":268,"author":{"gitId":"AlWo223"},"content":"        final Swim.SwimmingStyle swimmingStyleParsed \u003d parseSwimmingStyle(swimmingStyle);","lastModifiedDate":"2023-10-13"},{"lineNumber":269,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":270,"author":{"gitId":"AlWo223"},"content":"        Swim swim \u003d new Swim(caption, durationParsed, distanceParsed, datetimeParsed, swimmingStyleParsed);","lastModifiedDate":"2023-10-13"},{"lineNumber":271,"author":{"gitId":"AlWo223"},"content":"        return swim;","lastModifiedDate":"2023-10-13"},{"lineNumber":272,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":273,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":274,"author":{"gitId":"AlWo223"},"content":"    public static Swim.SwimmingStyle parseSwimmingStyle(String swimmingStyle) throws AthletiException {","lastModifiedDate":"2023-10-13"},{"lineNumber":275,"author":{"gitId":"AlWo223"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":276,"author":{"gitId":"AlWo223"},"content":"            return Swim.SwimmingStyle.valueOf(swimmingStyle);","lastModifiedDate":"2023-10-13"},{"lineNumber":277,"author":{"gitId":"AlWo223"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-13"},{"lineNumber":278,"author":{"gitId":"AlWo223"},"content":"            throw new AthletiException(Message.MESSAGE_SWIMMINGSTYLE_INVALID);","lastModifiedDate":"2023-10-13"},{"lineNumber":279,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":280,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":281,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":282,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":283,"author":{"gitId":"DaDevChia"},"content":"    public static AddSleepCommand parseSleepAdd(String commandArgs) throws AthletiException {","lastModifiedDate":"2023-10-12"},{"lineNumber":284,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":285,"author":{"gitId":"DaDevChia"},"content":"        final String startMarkerConstant \u003d \"/start\";","lastModifiedDate":"2023-10-14"},{"lineNumber":286,"author":{"gitId":"DaDevChia"},"content":"        final String endMarkerConstant \u003d \"/end\";","lastModifiedDate":"2023-10-14"},{"lineNumber":287,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":288,"author":{"gitId":"DaDevChia"},"content":"        int startMarkerPos \u003d commandArgs.indexOf(startMarkerConstant);","lastModifiedDate":"2023-10-14"},{"lineNumber":289,"author":{"gitId":"DaDevChia"},"content":"        int endMarkerPos \u003d commandArgs.indexOf(endMarkerConstant);","lastModifiedDate":"2023-10-14"},{"lineNumber":290,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":291,"author":{"gitId":"DaDevChia"},"content":"        if (startMarkerPos \u003d\u003d -1 || endMarkerPos \u003d\u003d -1) {","lastModifiedDate":"2023-10-12"},{"lineNumber":292,"author":{"gitId":"DaDevChia"},"content":"            throw new AthletiException(\"Please specify both the start and end time of your sleep.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":293,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":294,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":295,"author":{"gitId":"DaDevChia"},"content":"        if (startMarkerPos \u003e endMarkerPos) {","lastModifiedDate":"2023-10-12"},{"lineNumber":296,"author":{"gitId":"DaDevChia"},"content":"            throw new AthletiException(\"Please specify the start time of your sleep before the end time.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":297,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":298,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":299,"author":{"gitId":"nihalzp"},"content":"        String startTime \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":300,"author":{"gitId":"nihalzp"},"content":"                commandArgs.substring(startMarkerPos + startMarkerConstant.length(), endMarkerPos).trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":301,"author":{"gitId":"DaDevChia"},"content":"        String endTime \u003d commandArgs.substring(endMarkerPos + endMarkerConstant.length()).trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":302,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":303,"author":{"gitId":"DaDevChia"},"content":"        if (startTime.isEmpty() || endTime.isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":304,"author":{"gitId":"DaDevChia"},"content":"            throw new AthletiException(\"Please specify both the start and end time of your sleep.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":305,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":306,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":307,"author":{"gitId":"DaDevChia"},"content":"        return new AddSleepCommand(startTime, endTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":308,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":309,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":310,"author":{"gitId":"DaDevChia"},"content":"    public static DeleteSleepCommand parseSleepDelete(String commandArgs) throws AthletiException {","lastModifiedDate":"2023-10-12"},{"lineNumber":311,"author":{"gitId":"DaDevChia"},"content":"        int index;","lastModifiedDate":"2023-10-12"},{"lineNumber":312,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":313,"author":{"gitId":"DaDevChia"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":314,"author":{"gitId":"DaDevChia"},"content":"            index \u003d Integer.parseInt(commandArgs.trim());","lastModifiedDate":"2023-10-12"},{"lineNumber":315,"author":{"gitId":"DaDevChia"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":316,"author":{"gitId":"DaDevChia"},"content":"            throw new AthletiException(\"Please specify the index of the sleep record you want to delete.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":317,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":318,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":319,"author":{"gitId":"DaDevChia"},"content":"        return new DeleteSleepCommand(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":320,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":321,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":322,"author":{"gitId":"DaDevChia"},"content":"    public static EditSleepCommand parseSleepEdit(String commandArgs) throws AthletiException {","lastModifiedDate":"2023-10-12"},{"lineNumber":323,"author":{"gitId":"DaDevChia"},"content":"        final String startMarkerConstant \u003d \"/start\";","lastModifiedDate":"2023-10-14"},{"lineNumber":324,"author":{"gitId":"DaDevChia"},"content":"        final String endMarkerConstant \u003d \"/end\";","lastModifiedDate":"2023-10-14"},{"lineNumber":325,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":326,"author":{"gitId":"DaDevChia"},"content":"        int startMarkerPos \u003d commandArgs.indexOf(startMarkerConstant);","lastModifiedDate":"2023-10-14"},{"lineNumber":327,"author":{"gitId":"DaDevChia"},"content":"        int endMarkerPos \u003d commandArgs.indexOf(endMarkerConstant);","lastModifiedDate":"2023-10-14"},{"lineNumber":328,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":329,"author":{"gitId":"DaDevChia"},"content":"        int index;","lastModifiedDate":"2023-10-12"},{"lineNumber":330,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":331,"author":{"gitId":"DaDevChia"},"content":"        if (startMarkerPos \u003d\u003d -1 || endMarkerPos \u003d\u003d -1) {","lastModifiedDate":"2023-10-12"},{"lineNumber":332,"author":{"gitId":"DaDevChia"},"content":"            throw new AthletiException(\"Please specify both the start and end time of your sleep.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":333,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":334,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":335,"author":{"gitId":"DaDevChia"},"content":"        if (startMarkerPos \u003e endMarkerPos) {","lastModifiedDate":"2023-10-12"},{"lineNumber":336,"author":{"gitId":"DaDevChia"},"content":"            throw new AthletiException(\"Please specify the start time of your sleep before the end time.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":337,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":338,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":339,"author":{"gitId":"DaDevChia"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":340,"author":{"gitId":"DaDevChia"},"content":"            index \u003d Integer.parseInt(commandArgs.substring(0, startMarkerPos).trim());","lastModifiedDate":"2023-10-12"},{"lineNumber":341,"author":{"gitId":"DaDevChia"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":342,"author":{"gitId":"DaDevChia"},"content":"            throw new AthletiException(\"Please specify the index of the sleep record you want to edit.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":343,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":344,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":345,"author":{"gitId":"nihalzp"},"content":"        String startTime \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":346,"author":{"gitId":"nihalzp"},"content":"                commandArgs.substring(startMarkerPos + startMarkerConstant.length(), endMarkerPos).trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":347,"author":{"gitId":"DaDevChia"},"content":"        String endTime \u003d commandArgs.substring(endMarkerPos + endMarkerConstant.length()).trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":348,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":349,"author":{"gitId":"DaDevChia"},"content":"        if (startTime.isEmpty() || endTime.isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":350,"author":{"gitId":"DaDevChia"},"content":"            throw new AthletiException(\"Please specify both the start and end time of your sleep.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":351,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":352,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":353,"author":{"gitId":"DaDevChia"},"content":"        return new EditSleepCommand(index, startTime, endTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":354,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":355,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":356,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":357,"author":{"gitId":"nihalzp"},"content":"     * Parses the raw user input for a diet and returns the corresponding diet object.","lastModifiedDate":"2023-10-15"},{"lineNumber":358,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":359,"author":{"gitId":"nihalzp"},"content":"     * @param commandArgs The raw user input containing the arguments.","lastModifiedDate":"2023-10-15"},{"lineNumber":360,"author":{"gitId":"nihalzp"},"content":"     * @return An object representing the diet.","lastModifiedDate":"2023-10-15"},{"lineNumber":361,"author":{"gitId":"nihalzp"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-10-15"},{"lineNumber":362,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":363,"author":{"gitId":"nihalzp"},"content":"    public static Diet parseDiet(String commandArgs) throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":364,"author":{"gitId":"nihalzp"},"content":"        final String caloriesMarkerConstant \u003d \"calories/\";","lastModifiedDate":"2023-10-15"},{"lineNumber":365,"author":{"gitId":"nihalzp"},"content":"        final String proteinMarkerConstant \u003d \"protein/\";","lastModifiedDate":"2023-10-15"},{"lineNumber":366,"author":{"gitId":"nihalzp"},"content":"        final String carbMarkerConstant \u003d \"carb/\";","lastModifiedDate":"2023-10-15"},{"lineNumber":367,"author":{"gitId":"nihalzp"},"content":"        final String fatMarkerConstant \u003d \"fat/\";","lastModifiedDate":"2023-10-15"},{"lineNumber":368,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":369,"author":{"gitId":"nihalzp"},"content":"        int caloriesMarkerPos \u003d commandArgs.indexOf(caloriesMarkerConstant);","lastModifiedDate":"2023-10-15"},{"lineNumber":370,"author":{"gitId":"nihalzp"},"content":"        int proteinMarkerPos \u003d commandArgs.indexOf(proteinMarkerConstant);","lastModifiedDate":"2023-10-15"},{"lineNumber":371,"author":{"gitId":"nihalzp"},"content":"        int carbMarkerPos \u003d commandArgs.indexOf(carbMarkerConstant);","lastModifiedDate":"2023-10-15"},{"lineNumber":372,"author":{"gitId":"nihalzp"},"content":"        int fatMarkerPos \u003d commandArgs.indexOf(fatMarkerConstant);","lastModifiedDate":"2023-10-15"},{"lineNumber":373,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":374,"author":{"gitId":"nihalzp"},"content":"        checkMissingDietArguments(caloriesMarkerPos, proteinMarkerPos, carbMarkerPos, fatMarkerPos);","lastModifiedDate":"2023-10-15"},{"lineNumber":375,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":376,"author":{"gitId":"nihalzp"},"content":"        String calories \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":377,"author":{"gitId":"nihalzp"},"content":"                commandArgs.substring(caloriesMarkerPos + caloriesMarkerConstant.length(), proteinMarkerPos)","lastModifiedDate":"2023-10-15"},{"lineNumber":378,"author":{"gitId":"nihalzp"},"content":"                        .trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":379,"author":{"gitId":"nihalzp"},"content":"        String protein \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":380,"author":{"gitId":"nihalzp"},"content":"                commandArgs.substring(proteinMarkerPos + proteinMarkerConstant.length(), carbMarkerPos)","lastModifiedDate":"2023-10-15"},{"lineNumber":381,"author":{"gitId":"nihalzp"},"content":"                        .trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":382,"author":{"gitId":"nihalzp"},"content":"        String carb \u003d commandArgs.substring(carbMarkerPos + carbMarkerConstant.length(), fatMarkerPos).trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":383,"author":{"gitId":"nihalzp"},"content":"        String fat \u003d commandArgs.substring(fatMarkerPos + fatMarkerConstant.length()).trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":384,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":385,"author":{"gitId":"nihalzp"},"content":"        checkEmptyDietArguments(calories, protein, carb, fat);","lastModifiedDate":"2023-10-15"},{"lineNumber":386,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":387,"author":{"gitId":"nihalzp"},"content":"        int caloriesParsed \u003d parseCalories(calories);","lastModifiedDate":"2023-10-15"},{"lineNumber":388,"author":{"gitId":"nihalzp"},"content":"        int proteinParsed \u003d parseProtein(protein);","lastModifiedDate":"2023-10-15"},{"lineNumber":389,"author":{"gitId":"nihalzp"},"content":"        int carbParsed \u003d parseCarb(carb);","lastModifiedDate":"2023-10-15"},{"lineNumber":390,"author":{"gitId":"nihalzp"},"content":"        int fatParsed \u003d parseFat(fat);","lastModifiedDate":"2023-10-15"},{"lineNumber":391,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":392,"author":{"gitId":"nihalzp"},"content":"        return new Diet(caloriesParsed, proteinParsed, carbParsed, fatParsed);","lastModifiedDate":"2023-10-15"},{"lineNumber":393,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":394,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":395,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":396,"author":{"gitId":"nihalzp"},"content":"     * Checks if the user input for a diet contains all the required arguments.","lastModifiedDate":"2023-10-15"},{"lineNumber":397,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":398,"author":{"gitId":"nihalzp"},"content":"     * @param caloriesMarkerPos The position of the calories marker.","lastModifiedDate":"2023-10-15"},{"lineNumber":399,"author":{"gitId":"nihalzp"},"content":"     * @param proteinMarkerPos  The position of the protein marker.","lastModifiedDate":"2023-10-15"},{"lineNumber":400,"author":{"gitId":"nihalzp"},"content":"     * @param carbMarkerPos     The position of the carb marker.","lastModifiedDate":"2023-10-15"},{"lineNumber":401,"author":{"gitId":"nihalzp"},"content":"     * @param fatMarkerPos      The position of the fat marker.","lastModifiedDate":"2023-10-15"},{"lineNumber":402,"author":{"gitId":"nihalzp"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-10-15"},{"lineNumber":403,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":404,"author":{"gitId":"nihalzp"},"content":"    private static void checkMissingDietArguments(int caloriesMarkerPos, int proteinMarkerPos,","lastModifiedDate":"2023-10-15"},{"lineNumber":405,"author":{"gitId":"nihalzp"},"content":"                                                  int carbMarkerPos,","lastModifiedDate":"2023-10-15"},{"lineNumber":406,"author":{"gitId":"nihalzp"},"content":"                                                  int fatMarkerPos) throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":407,"author":{"gitId":"nihalzp"},"content":"        if (caloriesMarkerPos \u003d\u003d -1) {","lastModifiedDate":"2023-10-15"},{"lineNumber":408,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_CALORIES_MISSING);","lastModifiedDate":"2023-10-15"},{"lineNumber":409,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":410,"author":{"gitId":"nihalzp"},"content":"        if (proteinMarkerPos \u003d\u003d -1) {","lastModifiedDate":"2023-10-15"},{"lineNumber":411,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_PROTEIN_MISSING);","lastModifiedDate":"2023-10-15"},{"lineNumber":412,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":413,"author":{"gitId":"nihalzp"},"content":"        if (carbMarkerPos \u003d\u003d -1) {","lastModifiedDate":"2023-10-15"},{"lineNumber":414,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_CARB_MISSING);","lastModifiedDate":"2023-10-15"},{"lineNumber":415,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":416,"author":{"gitId":"nihalzp"},"content":"        if (fatMarkerPos \u003d\u003d -1) {","lastModifiedDate":"2023-10-15"},{"lineNumber":417,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_FAT_MISSING);","lastModifiedDate":"2023-10-15"},{"lineNumber":418,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":419,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":420,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":421,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":422,"author":{"gitId":"nihalzp"},"content":"     * Checks if the user input for a diet is empty.","lastModifiedDate":"2023-10-15"},{"lineNumber":423,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":424,"author":{"gitId":"nihalzp"},"content":"     * @param calories The calories input.","lastModifiedDate":"2023-10-15"},{"lineNumber":425,"author":{"gitId":"nihalzp"},"content":"     * @param protein  The protein input.","lastModifiedDate":"2023-10-15"},{"lineNumber":426,"author":{"gitId":"nihalzp"},"content":"     * @param carb     The carb input.","lastModifiedDate":"2023-10-15"},{"lineNumber":427,"author":{"gitId":"nihalzp"},"content":"     * @param fat      The fat input.","lastModifiedDate":"2023-10-15"},{"lineNumber":428,"author":{"gitId":"nihalzp"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-10-15"},{"lineNumber":429,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":430,"author":{"gitId":"nihalzp"},"content":"    private static void checkEmptyDietArguments(String calories, String protein, String carb,","lastModifiedDate":"2023-10-15"},{"lineNumber":431,"author":{"gitId":"nihalzp"},"content":"                                                String fat) throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":432,"author":{"gitId":"nihalzp"},"content":"        if (calories.isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":433,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_CALORIES_EMPTY);","lastModifiedDate":"2023-10-15"},{"lineNumber":434,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":435,"author":{"gitId":"nihalzp"},"content":"        if (protein.isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":436,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_PROTEIN_EMPTY);","lastModifiedDate":"2023-10-15"},{"lineNumber":437,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":438,"author":{"gitId":"nihalzp"},"content":"        if (carb.isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":439,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_CARB_EMPTY);","lastModifiedDate":"2023-10-15"},{"lineNumber":440,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":441,"author":{"gitId":"nihalzp"},"content":"        if (fat.isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":442,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_FAT_EMPTY);","lastModifiedDate":"2023-10-15"},{"lineNumber":443,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":444,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":445,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":446,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":447,"author":{"gitId":"nihalzp"},"content":"     * Parses the calories input for a diet.","lastModifiedDate":"2023-10-15"},{"lineNumber":448,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":449,"author":{"gitId":"nihalzp"},"content":"     * @param calories The calories input.","lastModifiedDate":"2023-10-15"},{"lineNumber":450,"author":{"gitId":"nihalzp"},"content":"     * @return The parsed calories.","lastModifiedDate":"2023-10-15"},{"lineNumber":451,"author":{"gitId":"nihalzp"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-10-15"},{"lineNumber":452,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":453,"author":{"gitId":"nihalzp"},"content":"    private static int parseCalories(String calories) throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":454,"author":{"gitId":"nihalzp"},"content":"        int caloriesParsed;","lastModifiedDate":"2023-10-15"},{"lineNumber":455,"author":{"gitId":"nihalzp"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":456,"author":{"gitId":"nihalzp"},"content":"            caloriesParsed \u003d Integer.parseInt(calories);","lastModifiedDate":"2023-10-15"},{"lineNumber":457,"author":{"gitId":"nihalzp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":458,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_CALORIES_INVALID);","lastModifiedDate":"2023-10-15"},{"lineNumber":459,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":460,"author":{"gitId":"nihalzp"},"content":"        return caloriesParsed;","lastModifiedDate":"2023-10-15"},{"lineNumber":461,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":462,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":463,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":464,"author":{"gitId":"nihalzp"},"content":"     * Parses the protein input for a diet.","lastModifiedDate":"2023-10-15"},{"lineNumber":465,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":466,"author":{"gitId":"nihalzp"},"content":"     * @param protein The protein input.","lastModifiedDate":"2023-10-15"},{"lineNumber":467,"author":{"gitId":"nihalzp"},"content":"     * @return The parsed protein.","lastModifiedDate":"2023-10-15"},{"lineNumber":468,"author":{"gitId":"nihalzp"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-10-15"},{"lineNumber":469,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":470,"author":{"gitId":"nihalzp"},"content":"    public static int parseProtein(String protein) throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":471,"author":{"gitId":"nihalzp"},"content":"        int proteinParsed;","lastModifiedDate":"2023-10-15"},{"lineNumber":472,"author":{"gitId":"nihalzp"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":473,"author":{"gitId":"nihalzp"},"content":"            proteinParsed \u003d Integer.parseInt(protein);","lastModifiedDate":"2023-10-15"},{"lineNumber":474,"author":{"gitId":"nihalzp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":475,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_PROTEIN_INVALID);","lastModifiedDate":"2023-10-15"},{"lineNumber":476,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":477,"author":{"gitId":"nihalzp"},"content":"        return proteinParsed;","lastModifiedDate":"2023-10-15"},{"lineNumber":478,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":479,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":480,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":481,"author":{"gitId":"nihalzp"},"content":"     * Parses the carb input for a diet.","lastModifiedDate":"2023-10-15"},{"lineNumber":482,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":483,"author":{"gitId":"nihalzp"},"content":"     * @param carb The carb input.","lastModifiedDate":"2023-10-15"},{"lineNumber":484,"author":{"gitId":"nihalzp"},"content":"     * @return The parsed carb.","lastModifiedDate":"2023-10-15"},{"lineNumber":485,"author":{"gitId":"nihalzp"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-10-15"},{"lineNumber":486,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":487,"author":{"gitId":"nihalzp"},"content":"    public static int parseCarb(String carb) throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":488,"author":{"gitId":"nihalzp"},"content":"        int carbParsed;","lastModifiedDate":"2023-10-15"},{"lineNumber":489,"author":{"gitId":"nihalzp"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":490,"author":{"gitId":"nihalzp"},"content":"            carbParsed \u003d Integer.parseInt(carb);","lastModifiedDate":"2023-10-15"},{"lineNumber":491,"author":{"gitId":"nihalzp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":492,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_CARB_INVALID);","lastModifiedDate":"2023-10-15"},{"lineNumber":493,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":494,"author":{"gitId":"nihalzp"},"content":"        return carbParsed;","lastModifiedDate":"2023-10-15"},{"lineNumber":495,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":496,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":497,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":498,"author":{"gitId":"nihalzp"},"content":"     * Parses the fat input for a diet.","lastModifiedDate":"2023-10-15"},{"lineNumber":499,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":500,"author":{"gitId":"nihalzp"},"content":"     * @param fat The fat input.","lastModifiedDate":"2023-10-15"},{"lineNumber":501,"author":{"gitId":"nihalzp"},"content":"     * @return The parsed fat.","lastModifiedDate":"2023-10-15"},{"lineNumber":502,"author":{"gitId":"nihalzp"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-10-15"},{"lineNumber":503,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":504,"author":{"gitId":"nihalzp"},"content":"    public static int parseFat(String fat) throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":505,"author":{"gitId":"nihalzp"},"content":"        int fatParsed;","lastModifiedDate":"2023-10-15"},{"lineNumber":506,"author":{"gitId":"nihalzp"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":507,"author":{"gitId":"nihalzp"},"content":"            fatParsed \u003d Integer.parseInt(fat);","lastModifiedDate":"2023-10-15"},{"lineNumber":508,"author":{"gitId":"nihalzp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":509,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_FAT_INVALID);","lastModifiedDate":"2023-10-15"},{"lineNumber":510,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":511,"author":{"gitId":"nihalzp"},"content":"        return fatParsed;","lastModifiedDate":"2023-10-15"},{"lineNumber":512,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":513,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":514,"author":{"gitId":"nihalzp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":515,"author":{"gitId":"nihalzp"},"content":"     * Parses the index of a diet.","lastModifiedDate":"2023-10-15"},{"lineNumber":516,"author":{"gitId":"nihalzp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":517,"author":{"gitId":"nihalzp"},"content":"     * @param commandArgs The raw user input containing the index.","lastModifiedDate":"2023-10-15"},{"lineNumber":518,"author":{"gitId":"nihalzp"},"content":"     * @return The parsed index.","lastModifiedDate":"2023-10-15"},{"lineNumber":519,"author":{"gitId":"nihalzp"},"content":"     * @throws AthletiException","lastModifiedDate":"2023-10-15"},{"lineNumber":520,"author":{"gitId":"nihalzp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":521,"author":{"gitId":"nihalzp"},"content":"    public static int parseDietIndex(String commandArgs) throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":522,"author":{"gitId":"nihalzp"},"content":"        int index;","lastModifiedDate":"2023-10-15"},{"lineNumber":523,"author":{"gitId":"nihalzp"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":524,"author":{"gitId":"nihalzp"},"content":"            index \u003d Integer.parseInt(commandArgs.trim());","lastModifiedDate":"2023-10-15"},{"lineNumber":525,"author":{"gitId":"nihalzp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":526,"author":{"gitId":"nihalzp"},"content":"            throw new AthletiException(Message.MESSAGE_DIET_INDEX_TYPE_INVALID);","lastModifiedDate":"2023-10-15"},{"lineNumber":527,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":528,"author":{"gitId":"nihalzp"},"content":"        return index;","lastModifiedDate":"2023-10-15"},{"lineNumber":529,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":530,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":40,"DaDevChia":79,"AlWo223":204,"nihalzp":207}},{"path":"src/main/java/athleticli/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.ui;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"skylee03"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"skylee03"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"skylee03"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"skylee03"},"content":" * Defines the behavior of the CLI.","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"skylee03"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"skylee03"},"content":"public class Ui {","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"    private final Scanner in;","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"skylee03"},"content":"     * Constructs a \u003ccode\u003eUi\u003c/code\u003e object, whose input \u003ccode\u003ein\u003c/code\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"skylee03"},"content":"     * and output \u003ccode\u003eout\u003c/code\u003e is the standard input and the standard","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"skylee03"},"content":"     * output, respectively.","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"skylee03"},"content":"    public Ui() {","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"skylee03"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"     * Constructs a \u003ccode\u003eUi\u003c/code\u003e object, whose input is an \u003ccode\u003eInputStream\u003c/code\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"     * object \u003ccode\u003ein\u003c/code\u003e and output is an \u003ccode\u003ePrintStream\u003c/code\u003e object \u003ccode\u003eout\u003c/code\u003e.","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"     * @param in    The \u003ccode\u003eInputStream\u003c/code\u003e accepting the user\u0027s input.","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"     * @param out   The \u003ccode\u003ePrintStream\u003c/code\u003e displaying the program\u0027s output.","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":"     * Returns the user\u0027s input.","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"skylee03"},"content":"     * @return The user\u0027s input.","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"skylee03"},"content":"    public String getUserCommand() {","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"skylee03"},"content":"        out.print(Message.PROMPT);","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"skylee03"},"content":"        return in.nextLine();","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"skylee03"},"content":"     * Shows the \u003ccode\u003emessages\u003c/code\u003e in a beautiful format.","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"skylee03"},"content":"     * @param messages  The messages to be shown.","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"skylee03"},"content":"    public void showMessages(String... messages) {","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"skylee03"},"content":"        out.print(Message.LINE);","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"skylee03"},"content":"        for (String message : messages) {","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"skylee03"},"content":"            out.println(Message.PREFIX_MESSAGE + message);","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"skylee03"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"skylee03"},"content":"        out.println(Message.LINE);","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"skylee03"},"content":"     * Shows message for exception \u003ccode\u003ee\u003c/code\u003e.","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"skylee03"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"skylee03"},"content":"     * @param e The exception whose message will be shown.","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"skylee03"},"content":"    public void showException(Exception e) {","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"skylee03"},"content":"        showMessages(Message.PREFIX_EXCEPTION + e.getMessage());","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":67,"author":{"gitId":"skylee03"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"skylee03"},"content":"     * Shows the welcome message.","lastModifiedDate":"2023-10-08"},{"lineNumber":69,"author":{"gitId":"skylee03"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":70,"author":{"gitId":"skylee03"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-10-08"},{"lineNumber":71,"author":{"gitId":"skylee03"},"content":"        showMessages(Message.MESSAGE_HELLO);","lastModifiedDate":"2023-10-08"},{"lineNumber":72,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":73,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":73}},{"path":"src/test/java/athleticli/commands/activity/AddActivityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.commands.activity;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import athleticli.data.activity.Run;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"class AddActivityCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    private static final String CAPTION \u003d \"Night Run\";","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    private static final int DURATION \u003d 85;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    private static final int DISTANCE \u003d 18120;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"    private static final LocalDateTime DATE \u003d LocalDateTime.of(2023, 10, 10, 23, 21);","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    private static final int ELEVATION \u003d 60;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    private Run run;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"    private AddActivityCommand addActivityCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    private Data data;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"    void setUp() {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"        run \u003d new Run(CAPTION, DURATION, DISTANCE, DATE, ELEVATION);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"        addActivityCommand \u003d new AddActivityCommand(run);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"    void execute() {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"        String[] expected \u003d {\"Well done! I\u0027ve added this activity:\", run.toString(), \"Now you have tracked your \" +","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"                \"first activity. This is just the beginning!\"};","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"        String[] actual \u003d addActivityCommand.execute(data);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"        for (int i \u003d 0; i \u003c actual.length; i++) {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"            assertEquals(expected[i], actual[i]);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlWo223":41}},{"path":"src/test/java/athleticli/commands/diet/AddDietCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.Diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":" * Tests the add diet commands provided by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"public class AddDietCommandTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"    private static final int CALORIES \u003d 100;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"    private static final int PROTEIN \u003d 20;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"    private static final int CARB \u003d 30;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"    private static final int FAT \u003d 40;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"    private Diet diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"    private AddDietCommand addDietCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"    private Data data;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"    void setUp() {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"        diet \u003d new Diet(CALORIES, PROTEIN, CARB, FAT);","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"        addDietCommand \u003d new AddDietCommand(diet);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"    void execute() {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"        String[] expected \u003d {\"Well done! I\u0027ve added this diet:\", diet.toString(),","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"                             \"Now you have tracked your \" + \"first diet. This is just the beginning!\"};","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"        String[] actual \u003d addDietCommand.execute(data);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"        for (int i \u003d 0; i \u003c actual.length; i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"            assertEquals(expected[i], actual[i]);","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"nihalzp":39}},{"path":"src/test/java/athleticli/commands/diet/DeleteDietCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.Diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":" * Tests the delete diet commands provided by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"public class DeleteDietCommandTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"    private static final int CALORIES \u003d 100;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"    private static final int PROTEIN \u003d 20;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"    private static final int CARB \u003d 30;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"    private static final int FAT \u003d 40;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"    private Diet diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"    private DeleteDietCommand deleteDietCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"    private Data data;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"    void setUp() {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"        diet \u003d new Diet(CALORIES, PROTEIN, CARB, FAT);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"        deleteDietCommand \u003d new DeleteDietCommand(1);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"        data.getDiets().add(diet);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"    void execute() throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"        String[] expected \u003d {\"Noted. I\u0027ve removed this diet:\", diet.toString(),","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"                             \"Now you have tracked a total of 0 diets. Keep grinding!\"};","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"        String[] actual \u003d deleteDietCommand.execute(data);","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"        for (int i \u003d 0; i \u003c actual.length; i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"            assertEquals(expected[i], actual[i]);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"    void execute_invalidIndex_expectException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"        deleteDietCommand \u003d new DeleteDietCommand(2);","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e deleteDietCommand.execute(data));","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"nihalzp"},"content":"    void execute_negativeIndex_expectException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"nihalzp"},"content":"        deleteDietCommand \u003d new DeleteDietCommand(-1);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e deleteDietCommand.execute(data));","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"nihalzp":53}},{"path":"src/test/java/athleticli/commands/diet/ListDietCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.commands.diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import athleticli.data.diet.Diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":" * Tests the list diet commands provided by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"public class ListDietCommandTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"    private static final int CALORIES \u003d 100;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"    private static final int PROTEIN \u003d 20;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"    private static final int CARB \u003d 30;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"    private static final int FAT \u003d 40;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"    private Diet diet;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"    private ListDietCommand listDietCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"    private Data data;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"    void setUp() {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"        diet \u003d new Diet(CALORIES, PROTEIN, CARB, FAT);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"        listDietCommand \u003d new ListDietCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"        data \u003d new Data();","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"        data.getDiets().add(diet);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"    void execute() {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"        String[] expected \u003d {\"Here are the diets in your list:\", \"1. \" + diet.toString(),","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"                             \"Now you have tracked a total of 1 diets. Keep grinding!\"};","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"        String[] actual \u003d listDietCommand.execute(data);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"        for (int i \u003d 0; i \u003c actual.length; i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"            assertEquals(expected[i], actual[i]);","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"nihalzp":39}},{"path":"src/test/java/athleticli/commands/sleep/AddSleepCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.SleepList;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.Sleep;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"public class AddSleepCommandTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"    public void testExecute() {","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"        // Create a Data object with an empty SleepList","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"        Data data \u003d new Data();","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"        SleepList sleepList \u003d data.getSleeps();","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(0, sleepList.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"        // Create an AddSleepCommand and execute it","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"        AddSleepCommand command \u003d new AddSleepCommand(\"2021-01-01 23:00\", \"2021-01-02 07:00\");","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"        String[] result \u003d command.execute(data);","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"        // Check that the output is correct","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"        String[] expected \u003d {","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"            \"Got it. I\u0027ve added this sleep record:\",","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"            \"  2021-01-01 23:00 to 2021-01-02 07:00\",","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"            \"Now you have 1 sleep records in the list.\"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"        };","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"        for (int i \u003d 0; i \u003c expected.length; i++) {","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"            assertEquals(expected[i], result[i]);","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"        // Check that the SleepList now contains the new Sleep object","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(1, sleepList.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"        Sleep newSleep \u003d sleepList.get(0);","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(\"sleep from 2021-01-01 23:00 to 2021-01-02 07:00\", newSleep.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"DaDevChia":36}},{"path":"src/test/java/athleticli/commands/sleep/DeleteSleepCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.Sleep;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.SleepList;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"public class DeleteSleepCommandTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"    public void execute_validIndex_success() {","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"        Data data \u003d new Data();","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"        SleepList sleepList \u003d data.getSleeps();","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(new Sleep(\"08:00\", \"10:00\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(new Sleep(\"09:00\", \"11:00\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"        ","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"        // Execute command","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"        DeleteSleepCommand command \u003d new DeleteSleepCommand(1);","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"        String[] output \u003d command.execute(data);","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"        // Check that sleep was deleted","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(1, sleepList.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(\"sleep from 09:00 to 11:00\", sleepList.get(0).toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"        // Check output message","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(\"Got it. I\u0027ve deleted this sleep record at index 1: sleep from 08:00 to 10:00\", output[0]);","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"DaDevChia"},"content":"    public void execute_invalidIndex_failure() {","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"DaDevChia"},"content":"        Data data \u003d new Data();","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"DaDevChia"},"content":"        SleepList sleepList \u003d data.getSleeps();","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(new Sleep(\"08:00\", \"10:00\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"DaDevChia"},"content":"        // Execute command","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"DaDevChia"},"content":"        DeleteSleepCommand command \u003d new DeleteSleepCommand(2);","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"DaDevChia"},"content":"        String[] output \u003d command.execute(data);","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"DaDevChia"},"content":"        // Check that sleep was not deleted","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(1, sleepList.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"DaDevChia"},"content":"        // Check output message","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(\"Invalid index. Please enter a valid index.\", output[0]);","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"DaDevChia":47}},{"path":"src/test/java/athleticli/commands/sleep/EditSleepCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.SleepList;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.Sleep;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"public class EditSleepCommandTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"    public void testExecute() {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"        Data data \u003d new Data();","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"        SleepList sleepList \u003d data.getSleeps();","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(new Sleep(\"08:00\", \"10:00\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(new Sleep(\"09:00\", \"11:00\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"        ","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"        // Execute command","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"        EditSleepCommand command \u003d new EditSleepCommand(1, \"10:00\", \"20:00\");","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"        String[] output \u003d command.execute(data);","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"        // Check that sleep was edited","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(2, sleepList.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(\"sleep from 10:00 to 20:00\", sleepList.get(0).toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"        // Check output message","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(\"Got it. I\u0027ve changed this sleep record at index 1:\", output[0]);","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(\"original: sleep from 08:00 to 10:00\", output[1]);","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(\"to new: sleep from 10:00 to 20:00\", output[2]);","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"DaDevChia":31}},{"path":"src/test/java/athleticli/commands/sleep/ListSleepCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package athleticli.commands.sleep;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.SleepList;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.sleep.Sleep;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import athleticli.data.Data;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"public class ListSleepCommandTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"    public void testExecute() {","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"        // Create a Data object with an empty SleepList","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"        Data data \u003d new Data();","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"        SleepList sleepList \u003d data.getSleeps();","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(0, sleepList.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(new Sleep(\"10:00 PM\", \"6:00 AM\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(new Sleep(\"11:00 PM\", \"7:00 AM\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(new Sleep(\"12:00 PM\", \"8:00 AM\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"        // Create an ListSleepCommand and execute it","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"        ListSleepCommand command \u003d new ListSleepCommand();","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"DaDevChia"},"content":"        String[] result \u003d command.execute(data);","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(\"Here are the sleep records in your list:\" + \"\\n\", result[0]);","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(sleepList.toString(), result[1]);","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"DaDevChia":31}},{"path":"src/test/java/athleticli/data/activity/ActivityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"public class ActivityTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"    private static final String CAPTION \u003d \"Sunday \u003d Runday\";","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"    private static final int DURATION \u003d 84;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    private static final int DISTANCE \u003d 18120;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    private static final LocalDateTime DATE \u003d LocalDateTime.of(2023, 10, 10, 23, 21);","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    private Activity activity;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"        activity \u003d new Activity(CAPTION, DURATION, DISTANCE, DATE);","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"    public void testConstructor() {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"        assertEquals(CAPTION, activity.getCaption());","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"        assertEquals(DURATION, activity.getMovingTime());","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"        assertEquals(DISTANCE, activity.getDistance());","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"        assertEquals(DATE, activity.getStartDateTime());","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"    public void testToString_longRun() {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"[Activity] Sunday \u003d Runday | Distance: 18.12 km | Time: 1h 24m | \" +","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"                \"\\\"October\" +","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"                \" \" +","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"                \"10, 2023 at 11:21 PM\\\"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, activity.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlWo223":39}},{"path":"src/test/java/athleticli/data/activity/CycleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"public class CycleTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"    private static final String CAPTION \u003d \"Cycling in the afternoon\";","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"    private static final int DURATION \u003d 133;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    private static final int DISTANCE \u003d 40460;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    private static final int ELEVATION \u003d 101;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    private static final LocalDateTime DATE \u003d LocalDateTime.of(2023, 10, 7, 14, 0);","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"    private Cycle cycle;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"        cycle \u003d new Cycle(CAPTION, DURATION, DISTANCE, DATE, ELEVATION);","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"    public void calculateAverageSpeed() {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"        double expected \u003d 18.25;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"        double actual \u003d cycle.calculateAverageSpeed();","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual, 0.005);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"[Cycle] Cycling in the afternoon | Distance: 40.46 km | Speed: 18.25 km/h | Time: 2h 13m | \"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"                + \"\\\"October 7, 2023 at 2:00 PM\\\"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, cycle.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlWo223":37}},{"path":"src/test/java/athleticli/data/activity/RunTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"public class RunTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"    private static final String CAPTION \u003d \"Night Run\";","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"    private static final int DURATION \u003d 85;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    private static final int DISTANCE \u003d 18120;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    private static final LocalDateTime DATE \u003d LocalDateTime.of(2023, 10, 10, 23,","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"            21);","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"    private static final int ELEVATION \u003d 60;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"    private Run run;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"        run \u003d new Run(CAPTION, DURATION, DISTANCE, DATE, ELEVATION);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"    public void calculateAveragePace() {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"        double averagePace \u003d run.calculateAveragePace();","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"        assertEquals(4.69, averagePace, 0.005);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"    public void convertAveragePaceToString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"4:41\";","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"        String actual \u003d run.convertAveragePaceToString();","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"[Run] Night Run | Distance: 18.12 km | Pace: 4:41 /km | Time: 1h 25m | \" +","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"                \"\\\"October 10, 2023 at 11:21 PM\\\"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, run.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlWo223":44}},{"path":"src/test/java/athleticli/data/activity/SwimTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlWo223"},"content":"package athleticli.data.activity;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlWo223"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlWo223"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlWo223"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlWo223"},"content":"public class SwimTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlWo223"},"content":"    private static final String CAPTION \u003d \"Afternoon Swim\";","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"AlWo223"},"content":"    private static final int DURATION \u003d 35;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"AlWo223"},"content":"    private static final int DISTANCE \u003d 1000;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"AlWo223"},"content":"    private static final LocalDateTime DATE \u003d LocalDateTime.of(2023, 8, 29, 9, 45);","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"AlWo223"},"content":"    private static final Swim.SwimmingStyle STYLE \u003d Swim.SwimmingStyle.BUTTERFLY;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"AlWo223"},"content":"    private Swim swim;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AlWo223"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlWo223"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"AlWo223"},"content":"        swim \u003d new Swim(CAPTION, DURATION, DISTANCE, DATE, STYLE);","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlWo223"},"content":"    public void calculateAverageLapTime() {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"AlWo223"},"content":"        assertEquals(105, swim.calculateAverageLapTime());","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"AlWo223"},"content":"    public void calculateLaps() {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"AlWo223"},"content":"        assertEquals(20, swim.calculateLaps());","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"AlWo223"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"AlWo223"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"AlWo223"},"content":"        String expected \u003d \"[Swim] Afternoon Swim | Distance: 1.00 km | Avg Lap Time: 105s | Time: 0h 35m | \" +","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"AlWo223"},"content":"                \"\\\"August 29, 2023 at 9:45 AM\\\"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"AlWo223"},"content":"        assertEquals(expected, swim.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"AlWo223"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"AlWo223"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"AlWo223"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlWo223":42}},{"path":"src/test/java/athleticli/data/diet/DietGoalListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.data.diet;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"class DietGoalListTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"    private static final int PROTEIN \u003d 10000;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"    private DietGoal proteinGoal;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"    private DietGoalList dietGoals;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"    void setUp() {","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"        dietGoals \u003d new DietGoalList();","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"        proteinGoal \u003d new DietGoal(\"protein\", PROTEIN);","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"    void add_addOneGoal_expectSizeOne() {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"        dietGoals.add(proteinGoal);","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"        assertEquals(1, dietGoals.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"    void remove_removeExistingGoal_expectSizeOne() {","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"        dietGoals.add(proteinGoal);","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"        dietGoals.remove(0);","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"        assertEquals(0, dietGoals.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"    void remove_removeFromZeroGoals_expectIndexOutOfRangeError() {","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"yicheng-toh"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"            dietGoals.remove(0);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"yicheng-toh"},"content":"        });","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"    void get_addOneGoal_expectGetSameGoal() {","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"        dietGoals.add(proteinGoal);","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"        assertEquals(proteinGoal, dietGoals.get(0));","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"nihalzp"},"content":"    void size_initializeArgs_expectZero() {","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"nihalzp"},"content":"        assertEquals(0, dietGoals.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"nihalzp"},"content":"    void size_addTenGoals_expectTen() {","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"yicheng-toh"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"nihalzp"},"content":"            dietGoals.add(proteinGoal);","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"yicheng-toh"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"nihalzp"},"content":"        assertEquals(10, dietGoals.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"yicheng-toh"},"content":"    void testToString_oneExistingGoal_expectCorrectFormat() {","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"nihalzp"},"content":"        dietGoals.add(proteinGoal);","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"yicheng-toh"},"content":"        assertEquals(\"1. protein intake progress: (0/10000)\\n\", dietGoals.toString());","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"yicheng-toh":35,"nihalzp":29}},{"path":"src/test/java/athleticli/data/diet/DietGoalTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.data.diet;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"yicheng-toh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"yicheng-toh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"yicheng-toh"},"content":"class DietGoalTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"yicheng-toh"},"content":"    void getNutrients_initializeCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"yicheng-toh"},"content":"        DietGoal proteinGoal \u003d new DietGoal(\"protein\", 10000);","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"yicheng-toh"},"content":"        assertEquals(\"protein\", proteinGoal.getNutrients());","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"yicheng-toh"},"content":"    void setNutrients_setCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"yicheng-toh"},"content":"        DietGoal proteinGoal \u003d new DietGoal(\"protein\", 10000);","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"yicheng-toh"},"content":"        proteinGoal.setNutrients(\"Advanced Protein\");","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"yicheng-toh"},"content":"        assertEquals(\"Advanced Protein\", proteinGoal.getNutrients());","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"yicheng-toh"},"content":"    void getTargetValue_initializeCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"yicheng-toh"},"content":"        DietGoal proteinGoal \u003d new DietGoal(\"protein\", 10000);","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"yicheng-toh"},"content":"        assertEquals(10000, proteinGoal.getTargetValue());","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"yicheng-toh"},"content":"    void setTargetValue_initializeCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"yicheng-toh"},"content":"        DietGoal proteinGoal \u003d new DietGoal(\"protein\", 10000);","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"yicheng-toh"},"content":"        proteinGoal.setTargetValue(10);","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"yicheng-toh"},"content":"        assertEquals(10, proteinGoal.getTargetValue());","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"yicheng-toh"},"content":"    void getCurrentValue_initializeCommonArgs_expectZero() {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"yicheng-toh"},"content":"        DietGoal proteinGoal \u003d new DietGoal(\"protein\", 10000);","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"yicheng-toh"},"content":"        assertEquals(0, proteinGoal.getCurrentValue());","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"yicheng-toh"},"content":"    void setCurrentValue() {","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"yicheng-toh"},"content":"        DietGoal proteinGoal \u003d new DietGoal(\"protein\", 10000);","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"yicheng-toh"},"content":"        proteinGoal.setCurrentValue(20);","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"yicheng-toh"},"content":"        assertEquals(20, proteinGoal.getCurrentValue());","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"yicheng-toh"},"content":"    void getIsGoalAchieved_currentValueGreaterThanTargetValue_expectTrue() {","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"yicheng-toh"},"content":"        DietGoal proteinGoal \u003d new DietGoal(\"protein\", 10000);","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"yicheng-toh"},"content":"        proteinGoal.setCurrentValue(20000);","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"yicheng-toh"},"content":"        assertTrue(proteinGoal.getIsGoalAchieved());","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"yicheng-toh"},"content":"    void getIsGoalAchieved_currentValueEqualToTargetValue_expectTrue() {","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"yicheng-toh"},"content":"        DietGoal proteinGoal \u003d new DietGoal(\"protein\", 10000);","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"yicheng-toh"},"content":"        proteinGoal.setCurrentValue(10000);","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"yicheng-toh"},"content":"        assertTrue(proteinGoal.getIsGoalAchieved());","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"yicheng-toh"},"content":"    void getIsGoalAchieved_currentValueLesserThanTargetValue_expectFalse() {","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"yicheng-toh"},"content":"        DietGoal proteinGoal \u003d new DietGoal(\"protein\", 10000);","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"yicheng-toh"},"content":"        proteinGoal.setCurrentValue(100);","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"yicheng-toh"},"content":"        assertFalse(proteinGoal.getIsGoalAchieved());","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"yicheng-toh"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"yicheng-toh"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"yicheng-toh"},"content":"    void testToString_initializeCommonArgs_expectCorrectFormat() {","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"yicheng-toh"},"content":"        DietGoal proteinGoal \u003d new DietGoal(\"protein\", 10000);","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"yicheng-toh"},"content":"        assertEquals(\"protein intake progress: (0/10000)\\n\", proteinGoal.toString());","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"yicheng-toh"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"yicheng-toh"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"yicheng-toh":75,"nihalzp":1}},{"path":"src/test/java/athleticli/data/diet/DietListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.data.diet;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"public class DietListTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"    private static final int CALORIES \u003d 10000;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"    private static final int PROTEIN \u003d 20000;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"    private static final int CARB \u003d 30000;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"    private static final int FAT \u003d 40000;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"    private DietList dietList;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"    void setUp() {","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"        dietList \u003d new DietList();","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"    void add_addOneDiet_expectSizeOne() {","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"        Diet diet \u003d new Diet(CALORIES, PROTEIN, CARB, FAT);","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"        dietList.add(diet);","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"        assertEquals(1, dietList.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"    void remove_removeExistingDiet_expectSizeOne() {","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"        Diet diet \u003d new Diet(CALORIES, PROTEIN, CARB, FAT);","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"        dietList.add(diet);","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"        dietList.remove(0);","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"        assertEquals(0, dietList.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"    void remove_removeFromZeroDiets_expectIndexOutOfRangeError() {","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"            dietList.remove(0);","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"        });","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"nihalzp"},"content":"    void get_addOneDiet_expectGetSameDiet() {","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"nihalzp"},"content":"        Diet diet \u003d new Diet(CALORIES, PROTEIN, CARB, FAT);","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"nihalzp"},"content":"        dietList.add(diet);","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"nihalzp"},"content":"        assertEquals(diet, dietList.get(0));","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"nihalzp"},"content":"    void size_initializeArgs_expectZero() {","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"nihalzp"},"content":"        assertEquals(0, dietList.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"nihalzp"},"content":"    void size_addTenDiets_expectTen() {","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"nihalzp"},"content":"        Diet diet \u003d new Diet(CALORIES, PROTEIN, CARB, FAT);","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"nihalzp"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"nihalzp"},"content":"            dietList.add(diet);","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"nihalzp"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"nihalzp"},"content":"        assertEquals(10, dietList.size());","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"nihalzp"},"content":"    void testToString_oneExistingDiet_expectCorrectFormat() {","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"nihalzp"},"content":"        Diet diet \u003d new Diet(CALORIES, PROTEIN, CARB, FAT);","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"nihalzp"},"content":"        dietList.add(diet);","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"nihalzp"},"content":"        assertEquals(\"1. \" + diet.toString(), dietList.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"nihalzp"},"content":"    void testToString_twoExistingDiets_expectCorrectFormat() {","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"nihalzp"},"content":"        Diet diet1 \u003d new Diet(CALORIES, PROTEIN, CARB, FAT);","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"nihalzp"},"content":"        Diet diet2 \u003d new Diet(CALORIES, PROTEIN, CARB, FAT);","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"nihalzp"},"content":"        dietList.add(diet1);","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"nihalzp"},"content":"        dietList.add(diet2);","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"nihalzp"},"content":"        assertEquals(\"1. \" + diet1.toString() + \"\\n2. \" + diet2.toString(), dietList.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"nihalzp"},"content":"    void testToString_zeroExistingDiets_expectCorrectFormat() {","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"nihalzp"},"content":"        assertEquals(\"\", dietList.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"nihalzp"},"content":"    void testToString_threeExistingDiets_expectCorrectFormat() {","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"nihalzp"},"content":"        Diet diet1 \u003d new Diet(CALORIES, PROTEIN, CARB, FAT);","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"nihalzp"},"content":"        Diet diet2 \u003d new Diet(CALORIES, PROTEIN, CARB, FAT);","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"nihalzp"},"content":"        Diet diet3 \u003d new Diet(CALORIES, PROTEIN, CARB, FAT);","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"nihalzp"},"content":"        dietList.add(diet1);","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"nihalzp"},"content":"        dietList.add(diet2);","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"nihalzp"},"content":"        dietList.add(diet3);","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"nihalzp"},"content":"        assertEquals(\"1. \" + diet1.toString() + \"\\n2. \" + diet2.toString() + \"\\n3. \" + diet3.toString(),","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"nihalzp"},"content":"                dietList.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"nihalzp":97}},{"path":"src/test/java/athleticli/data/diet/DietTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nihalzp"},"content":"package athleticli.data.diet;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"nihalzp"},"content":"public class DietTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"    private static final int CALORIES \u003d 10000;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"nihalzp"},"content":"    private static final int PROTEIN \u003d 20000;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"nihalzp"},"content":"    private static final int CARB \u003d 30000;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"nihalzp"},"content":"    private static final int FAT \u003d 40000;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"    private Diet diet;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"    void setUp() {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"        diet \u003d new Diet(CALORIES, PROTEIN, CARB, FAT);","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"nihalzp"},"content":"    void getCalories_initializeCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"nihalzp"},"content":"        assertEquals(CALORIES, diet.getCalories());","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"nihalzp"},"content":"    void setCalories_setCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"nihalzp"},"content":"        diet.setCalories(10);","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"nihalzp"},"content":"        assertEquals(10, diet.getCalories());","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"nihalzp"},"content":"    void getProtein_initializeCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"nihalzp"},"content":"        assertEquals(PROTEIN, diet.getProtein());","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"nihalzp"},"content":"    void setProtein_setCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"nihalzp"},"content":"        diet.setProtein(20);","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"nihalzp"},"content":"        assertEquals(20, diet.getProtein());","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"nihalzp"},"content":"    void getCarb_initializeCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"nihalzp"},"content":"        assertEquals(CARB, diet.getCarb());","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"nihalzp"},"content":"    void setCarb_setCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"nihalzp"},"content":"        diet.setCarb(30);","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"nihalzp"},"content":"        assertEquals(30, diet.getCarb());","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"nihalzp"},"content":"    void getFat_initializeCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"nihalzp"},"content":"        assertEquals(FAT, diet.getFat());","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"nihalzp"},"content":"    void setFat_setCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"nihalzp"},"content":"        diet.setFat(40);","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"nihalzp"},"content":"        assertEquals(40, diet.getFat());","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"nihalzp"},"content":"    void toString_initializeCommonArgs_expectArgs() {","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"nihalzp"},"content":"        String expected \u003d \"Calories: 10000 Protein: 20000 Carb: 30000 Fat: 40000\";","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"nihalzp"},"content":"        assertEquals(expected, diet.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"nihalzp"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"nihalzp":69}},{"path":"src/test/java/athleticli/data/sleep/SleepListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package athleticli.data.sleep;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"public class SleepListTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"        SleepList sleepList \u003d new SleepList();","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(new Sleep(\"10:00 PM\", \"6:00 AM\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(new Sleep(\"11:00 PM\", \"7:00 AM\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(\"1. sleep from 10:00 PM to 6:00 AM\\n2. sleep from 11:00 PM to 7:00 AM\\n\", sleepList.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"DaDevChia"},"content":"    public void testAddAndGet() {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"DaDevChia"},"content":"        SleepList sleepList \u003d new SleepList();","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"DaDevChia"},"content":"        Sleep sleep1 \u003d new Sleep(\"10:00 PM\", \"6:00 AM\");","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"DaDevChia"},"content":"        Sleep sleep2 \u003d new Sleep(\"11:00 PM\", \"7:00 AM\");","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(sleep1);","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"DaDevChia"},"content":"        sleepList.add(sleep2);","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(sleep1, sleepList.get(0));","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(sleep2, sleepList.get(1));","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"DaDevChia":25}},{"path":"src/test/java/athleticli/data/sleep/SleepTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DaDevChia"},"content":"package athleticli.data.sleep;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"DaDevChia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"DaDevChia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"public class SleepTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"DaDevChia"},"content":"    public void testSleepToString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"        Sleep sleep \u003d new Sleep(\"10:00 PM\", \"6:00 AM\");","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"DaDevChia"},"content":"        assertEquals(\"sleep from 10:00 PM to 6:00 AM\", sleep.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"DaDevChia"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"DaDevChia":13}},{"path":"src/test/java/athleticli/ui/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"skylee03"},"content":"package athleticli.ui;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"skylee03"},"content":"import athleticli.commands.ByeCommand;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.diet.AddDietCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.diet.DeleteDietCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.diet.ListDietCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"DaDevChia"},"content":"import athleticli.commands.sleep.AddSleepCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"DaDevChia"},"content":"import athleticli.commands.sleep.DeleteSleepCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"nihalzp"},"content":"import athleticli.commands.sleep.EditSleepCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"DaDevChia"},"content":"import athleticli.commands.sleep.ListSleepCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.AthletiException;","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"skylee03"},"content":"import athleticli.exceptions.UnknownCommandException;","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"nihalzp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nihalzp"},"content":"import static athleticli.ui.Parser.parseCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nihalzp"},"content":"import static athleticli.ui.Parser.splitCommandWordAndArgs;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"nihalzp"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"skylee03"},"content":"class ParserTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"skylee03"},"content":"    void splitCommandWordAndArgs_noArgs_expectTwoParts() {","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"skylee03"},"content":"        final String commandWithNoArgs \u003d \"bye\";","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"skylee03"},"content":"        assertEquals(splitCommandWordAndArgs(commandWithNoArgs).length, 2);","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"skylee03"},"content":"    void splitCommandWordAndArgs_multipleArgs_expectTwoParts() {","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"skylee03"},"content":"        final String commandWithMultipleArgs \u003d \"set-diet-goal calories/1 carb/3\";","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"skylee03"},"content":"        assertEquals(splitCommandWordAndArgs(commandWithMultipleArgs).length, 2);","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"skylee03"},"content":"    void parseCommand_unknownCommand_expectUnknownCommandException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"skylee03"},"content":"        final String unknownCommand \u003d \"hello\";","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"skylee03"},"content":"        assertThrows(UnknownCommandException.class, () -\u003e parseCommand(unknownCommand));","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"skylee03"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"skylee03"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"skylee03"},"content":"    void parseCommand_byeCommand_expectByeCommand() throws AthletiException {","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"skylee03"},"content":"        final String byeCommand \u003d \"bye\";","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"skylee03"},"content":"        assertInstanceOf(ByeCommand.class, parseCommand(byeCommand));","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"skylee03"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"DaDevChia"},"content":"    void parseCommand_addSleepCommand_expectAddSleepCommand() throws AthletiException {","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"DaDevChia"},"content":"        final String addSleepCommandString \u003d \"add-sleep /start 10:00 PM /end 6:00 AM\";","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"DaDevChia"},"content":"        assertInstanceOf(AddSleepCommand.class, parseCommand(addSleepCommandString));","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"DaDevChia"},"content":"    void parseCommand_editSleepCommand_expectEditSleepCommand() throws AthletiException {","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"DaDevChia"},"content":"        final String editSleepCommandString \u003d \"edit-sleep 1 /start 10:00 PM /end 6:00 AM\";","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"DaDevChia"},"content":"        assertInstanceOf(EditSleepCommand.class, parseCommand(editSleepCommandString));","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"DaDevChia"},"content":"    void parseCommand_deleteSleepCommand_expectDeleteSleepCommand() throws AthletiException {","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"DaDevChia"},"content":"        final String deleteSleepCommandString \u003d \"delete-sleep 1\";","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"DaDevChia"},"content":"        assertInstanceOf(DeleteSleepCommand.class, parseCommand(deleteSleepCommandString));","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"DaDevChia"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"DaDevChia"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"DaDevChia"},"content":"    void parseCommand_listSleepCommand_expectListSleepCommand() throws AthletiException {","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"DaDevChia"},"content":"        final String listSleepCommandString \u003d \"list-sleep\";","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"DaDevChia"},"content":"        assertInstanceOf(ListSleepCommand.class, parseCommand(listSleepCommandString));","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"DaDevChia"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"nihalzp"},"content":"    void parseCommand_addDietCommand_expectAddDietCommand() throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"nihalzp"},"content":"        final String addDietCommandString \u003d \"add-diet calories/1 protein/2 carb/3 fat/4\";","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"nihalzp"},"content":"        assertInstanceOf(AddDietCommand.class, parseCommand(addDietCommandString));","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"nihalzp"},"content":"    void parseCommand_deleteDietCommand_expectDeleteDietCommand() throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"nihalzp"},"content":"        final String deleteDietCommandString \u003d \"delete-diet 1\";","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"nihalzp"},"content":"        assertInstanceOf(DeleteDietCommand.class, parseCommand(deleteDietCommandString));","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"nihalzp"},"content":"    void parseCommand_listDietCommand_expectListDietCommand() throws AthletiException {","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"nihalzp"},"content":"        final String listDietCommandString \u003d \"list-diet\";","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"nihalzp"},"content":"        assertInstanceOf(ListDietCommand.class, parseCommand(listDietCommandString));","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"nihalzp"},"content":"    void parseCommand_addDietCommand_missingCaloriesExpectAthletiException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"nihalzp"},"content":"        final String addDietCommandString \u003d \"add-diet protein/2 carb/3 fat/4\";","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"nihalzp"},"content":"    void parseCommand_addDietCommand_missingProteinExpectAthletiException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"nihalzp"},"content":"        final String addDietCommandString \u003d \"add-diet calories/1 carb/3 fat/4\";","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"nihalzp"},"content":"    void parseCommand_addDietCommand_missingCarbExpectAthletiException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"nihalzp"},"content":"        final String addDietCommandString \u003d \"add-diet calories/1 protein/2 fat/4\";","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"nihalzp"},"content":"    void parseCommand_addDietCommand_missingFatExpectAthletiException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"nihalzp"},"content":"        final String addDietCommandString \u003d \"add-diet calories/1 protein/2 carb/3\";","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"nihalzp"},"content":"    void parseCommand_addDietCommand_emptyCaloriesExpectAthletiException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"nihalzp"},"content":"        final String addDietCommandString \u003d \"add-diet calories/ protein/2 carb/3 fat/4\";","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"nihalzp"},"content":"    void parseCommand_addDietCommand_emptyProteinExpectAthletiException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"nihalzp"},"content":"        final String addDietCommandString \u003d \"add-diet calories/1 protein/ carb/3 fat/4\";","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"nihalzp"},"content":"    void parseCommand_addDietCommand_emptyCarbExpectAthletiException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"nihalzp"},"content":"        final String addDietCommandString \u003d \"add-diet calories/1 protein/2 carb/ fat/4\";","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"nihalzp"},"content":"    void parseCommand_addDietCommand_emptyFatExpectAthletiException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"nihalzp"},"content":"        final String addDietCommandString \u003d \"add-diet calories/1 protein/2 carb/3 fat/\";","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"nihalzp"},"content":"    void parseCommand_addDietCommand_invalidCaloriesExpectAthletiException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"nihalzp"},"content":"        final String addDietCommandString \u003d \"add-diet calories/abc protein/2 carb/3 fat/4\";","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"nihalzp"},"content":"    void parseCommand_addDietCommand_invalidProteinExpectAthletiException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"nihalzp"},"content":"        final String addDietCommandString \u003d \"add-diet calories/1 protein/abc carb/3 fat/4\";","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"nihalzp"},"content":"    void parseCommand_addDietCommand_invalidCarbExpectAthletiException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"nihalzp"},"content":"        final String addDietCommandString \u003d \"add-diet calories/1 protein/2 carb/abc fat/4\";","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"nihalzp"},"content":"    void parseCommand_addDietCommand_invalidFatExpectAthletiException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"nihalzp"},"content":"        final String addDietCommandString \u003d \"add-diet calories/1 protein/2 carb/3 fat/abc\";","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(addDietCommandString));","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"nihalzp"},"content":"    void parseCommand_deleteDietCommand_invalidIndexExpectAthletiException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"nihalzp"},"content":"        final String deleteDietCommandString \u003d \"delete-diet abc\";","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(deleteDietCommandString));","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"nihalzp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"nihalzp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"nihalzp"},"content":"    void parseCommand_deleteDietCommand_emptyIndexExpectAthletiException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"nihalzp"},"content":"        final String deleteDietCommandString \u003d \"delete-diet\";","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"nihalzp"},"content":"        assertThrows(AthletiException.class, () -\u003e parseCommand(deleteDietCommandString));","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"nihalzp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"skylee03"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"skylee03":31,"DaDevChia":27,"nihalzp":114}}]
