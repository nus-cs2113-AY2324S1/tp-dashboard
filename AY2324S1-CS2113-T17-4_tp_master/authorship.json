[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below: i love 2113 ","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"SebasFok":1,"-":63}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"rohitcube"},"content":"    implementation \u0027com.googlecode.json-simple:json-simple:1.1.1\u0027","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName.set(\"duke\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"janelleenqi":1,"rohitcube":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"| Display                        |          Name           |              Github Profile               |                     Portfolio                     |","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"|--------------------------------|:-----------------------:|:-----------------------------------------:|:-------------------------------------------------:|","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"| ![](photos/sebas_pic.png)      | Sebastian Fok Shin Hung |  [Github](https://github.com/SebasFok/)   |         [Portfolio](team/sebastianfok.md)         |","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"| ![](photos/j.png)              |    Liow Enqi Janelle    | [Github](https://github.com/janelleenqi/) |       [Portfolio](team/liowenqijanelle.md)        |","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"| ![](photos/rohit_pic.png)      |         Rohit R         |  [Github](https://github.com/rohitcube)   |           [Portfolio](team/johndoe.md)            |","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"| ![](photos/ryanPic.JPG)        |        Ryan Loh         |  [Github](https://github.com/ryanlohyr)   | [Portfolio](https://ryanlohyr.github.io/ryanloh/) |","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"| ![](photos/isaiah_profile.png) |      Isaiah Cerven      |  [Github](https://github.com/CerIsaiah/)  |            [Portfolio](team/isaiah.md)            |","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"SebasFok":7,"-":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"## Design \u0026 implementation, Architecture","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"## Features","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"- Pace","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"- Left","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"- Major","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"- Required","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"- Info (description, workload, command)","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"- Search ","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"- Add","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"- Delete","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"- Recommend","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"# Implementation","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"## [Proposed] Pacing and MC Calculation","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"The proposed \"Pacing and MC Calculation\" mechanism is implemented to help users track their academic progress and remaining Modular Credits (MCs) required for graduation. This feature is facilitated by the PacingManager, which stores user data and provides functions for calculating the recommended pacing and remaining MCs. The following operations are available:","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"- PacingManager#calculateRemainingMCs() — Calculates the remaining MCs required for graduation.","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"- PacingManager#calculateRecommendedPace() — Recommends the pacing for upcoming semesters.","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"These operations are exposed in the Pacing interface as Pacing#calculateRemainingMCs() and Pacing#calculateRecommendedPace() respectively.","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"### Usage Examples","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"Here are a few examples of how the \"Pacing and MC Calculation\" feature behaves:","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"#### Example 1: Calculate Remaining MCs","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"Command: `pace Y2/S1` (assuming that the user has completed 60 MCs from Y1S1 to Y2S1)","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"Response:","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"`You currently have 100 MCs left until graduation.`","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"#### Example 2: Calculate Remaining MCs (No Semester Specified)","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"Command: `pace`","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"Response:","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"`You currently have 100 MCs left until graduation.`","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"## [Proposed] Recommend Schedule Based on Course","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"Based on the course, we will provide an recommended schedules that is sorted based on prerequisites. This feature is facilitated by the scheudle manager which stores information about the schedule and performs actions like add and remove from schedule.","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"- PacingManager#recommend() — recommends a scheudle that is sorted based on pre requisites. ","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"- PacingManager#addRecommendedScheduleToSchedule() — adds the recommended schedue to the user\u0027s timetable.","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"These operations are exposed in the Scheulde interface as Schedule#addRecommendedScheduleListToSchedule() and ScheduleGenerator#generateRecommendedSchedule() respectively.","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"### Usage Examples","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"Here are a few examples of how the \"Recommend schedule\" feature behaves:","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"#### Step 1: Recommend schedule for computer engineering(CEG)","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"Command: `recommend ceg` ","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"Response:","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"`[GEA1000, MA1511, MA1512, DTK1234, GESS1000, CS1010, GEN2000, EG2501, EG1311, GEC1000, PF1101, CDE2000, IE2141, CG1111A, EG2401A, ES2631, ST2334, MA1508E, CS1231, CG2023, CG2111A, CS2040C, CG2027, EE2026, EE4204, EE2211, CG2271, CS2113, CG2028, CP3880, CG4002]","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"Do you want to add this to your draft schedule?, please input \u0027Y\u0027 or \u0027N\u0027","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"`","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"#### Step 2 (Only to be done after step 1): ","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"Command: `Y`","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"Response:","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"`","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"Sem 1: GESS1000 DTK1234 MA1512 MA1511 GEA1000 ","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"Sem 2: GEC1000 EG1311 EG2501 GEN2000 CS1010 ","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"Sem 3: EG2401A CG1111A IE2141 CDE2000 PF1101 ","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"Sem 4: CG2023 CS1231 MA1508E ST2334 ES2631 ","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"Sem 5: EE4204 EE2026 CG2027 CS2040C CG2111A ","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"Sem 6: CG2028 CS2113 CG2271 EE2211 ","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"Sem 7: CG4002 CP3880 ","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"Sem 8: `","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"## [Proposed] List Modules Left Feature","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"The proposed left mechanism is implemented to help users keep tracks of modules left for their major. It is facilitated by `modulesLeft`, `modulesMajor` and `modulesTaken`. Additionally, it implements the following operations:","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"- `modulesLeft#getDifference(modulesMajor, modulesTaken)` – Keeps the list of modules in `modulesMajor` but not in `modulesTaken` in `modulesLeft`.","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"- `modulesLeft#getMainModuleList()` – Returns the list of modules in `modulesLeft`.","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"This operation is exposed in the `ModulePlannerController` interface as `ModulePlannerController#listModulesLeft()`.","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"### Usage Examples","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"Here are a few examples of how the List Modules Left Feature behaves:","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"#### Example 1: ","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"`modulesMajor#getMainModuleList()` gives modules `CS1231S CS2030S CS2040S CS2100 CS2101 CS2106 CS2109S CS3230`.","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"`modulesTaken#getMainModuleList()` gives modules `CS1231S MA1511`","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"Command: `left`","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"Response:","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"`CS2030S CS2040S CS2100 CS2101 CS2106 CS2109S CS3230`","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"SebasFok"},"content":"## [Proposed] Input Major Feature","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"SebasFok"},"content":"The proposed input major feature is facilitated by `Student`. It tries to store the major specified in userInput txt ","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"SebasFok"},"content":"file such that it can be used across sessions. It will print different responses based on whether the storing of the ","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"SebasFok"},"content":"Major was successful. Additionally, it implements the following operation:","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"SebasFok"},"content":"- `Student#setMajor(Major major)` – Saves the selected major in its memory.","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"SebasFok"},"content":"This operation is exposed in the `Student` interface as `Student#updateMajor(String userInput)`.","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"SebasFok"},"content":"### Usage Examples","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"SebasFok"},"content":"Here are a few examples of how the Input Major Feature behaves:","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"SebasFok"},"content":"#### Example 1:","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"SebasFok"},"content":"If \"CS\" is a valid major: `Student#updateMajor(\"major CS\")` calls `Student#setMajor(\"CS\")`, which sets the Major in the ","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"SebasFok"},"content":"student object as `CS` and returns a string `newMajor`","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"SebasFok"},"content":"Command: `major CS`","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"SebasFok"},"content":"Response: `Major CS selected!`","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"SebasFok"},"content":"#### Example 2:","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"SebasFok"},"content":"If \"abc\" is an invalid major: `Student#updateMajor(\"major abc\")` calls `Student#setMajor(\"abc\")`, which generates an","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"SebasFok"},"content":"IllegalArgumentException, which is caught and returns a string `invalidMajor`","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"SebasFok"},"content":"Command: `major abc`","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"SebasFok"},"content":"Response: `Please select a major from this list: [list of currently available Majors]`","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"SebasFok"},"content":"#### Example 3:","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"SebasFok"},"content":"If no major was specified: `Student#updateMajor(\"major\")` returns a string `currentMajor`","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"SebasFok"},"content":"Command: `major`","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"SebasFok"},"content":"Response: `Current major is [current major in student object].`","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"janelleenqi"},"content":"## [Proposed] Show Required Modules Feature","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"rohitcube"},"content":"The proposed required mechanism is implemented to give users an overview of the modules they need to complete for ","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"rohitcube"},"content":"their major. It is facilitated by CEGRequirements.txt, CSRequirements.txt. Additionally, it implements the following ","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"rohitcube"},"content":"operations:","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"janelleenqi"},"content":"- `DataRepository#getFullRequirements(major)` – Returns the `filePath` for the requirements of a specified major.","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"janelleenqi"},"content":"- `MajorRequirements#printTXTFile(filePath)` – Displays the overview of modules required.","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"janelleenqi"},"content":"- `getLongestLineLength(f)` – Returns the `longestLineLength` of the file f.","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"janelleenqi"},"content":"- `returnJustified(name, description, length)` – Returns a string with a justified name according to length, appended with its description.","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"janelleenqi"},"content":"- `printSingleLine()`, `printDoubleLine()` – Displays lines for formatting","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":158,"author":{"gitId":"rohitcube"},"content":"### Usage Examples","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":160,"author":{"gitId":"rohitcube"},"content":"Here are a few examples of how the Show Required Modules Feature behaves:","lastModifiedDate":"2023-11-01"},{"lineNumber":161,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":162,"author":{"gitId":"rohitcube"},"content":"#### Example 1:","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"rohitcube"},"content":"Command: `required`","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"rohitcube"},"content":"Response:","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"rohitcube"},"content":"Module requirements for major selected by user","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":169,"author":{"gitId":"rohitcube"},"content":"## [Proposed] Get information about modules (from the NUSMods API)","lastModifiedDate":"2023-11-01"},{"lineNumber":170,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":171,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"rohitcube"},"content":"The proposed information feature returns information about the module at the user\u0027s request. It accepts 3 commands, ","lastModifiedDate":"2023-11-01"},{"lineNumber":173,"author":{"gitId":"rohitcube"},"content":"\u0027description\u0027, \u0027workload\u0027 and \u0027all\u0027. The \u0027description\u0027 command returns a string description of the module, the workload","lastModifiedDate":"2023-11-01"},{"lineNumber":174,"author":{"gitId":"rohitcube"},"content":"command returns an array, and all displays the module title and module code for all modules present in the NUSMods ","lastModifiedDate":"2023-11-01"},{"lineNumber":175,"author":{"gitId":"rohitcube"},"content":"directory.","lastModifiedDate":"2023-11-01"},{"lineNumber":176,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":177,"author":{"gitId":"rohitcube"},"content":"- `getFullModuleInfo(major)` – Returns the `filePath` for the requirements of a specified major.","lastModifiedDate":"2023-11-01"},{"lineNumber":178,"author":{"gitId":"rohitcube"},"content":"- `sendHttpRequestAndGetResponseBody(String url)` – Displays the overview of modules required.","lastModifiedDate":"2023-11-01"},{"lineNumber":179,"author":{"gitId":"rohitcube"},"content":"- `getDescription(String moduleCode)` – Returns the `longestLineLength` of the file f.","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"rohitcube"},"content":"- `getWorkload(String moduleCode)` – Returns a string with a justified name according to length, appended with its description.","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"rohitcube"},"content":"- `listAllModules(), `printDoubleTopLine()`, `printBottomLine()`, `printDoubleBottomLine()` – Displays lines for formatting","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"rohitcube"},"content":"- `infoCommands(String command, String userInput), `printDoubleTopLine()`, `printBottomLine()`, `printDoubleBottomLine()` – Displays lines for formatting","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"janelleenqi"},"content":"### Usage Examples","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"janelleenqi"},"content":"Here are a few examples of how the Show Required Modules Feature behaves:","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"janelleenqi"},"content":"#### Example 1:","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"janelleenqi"},"content":"Command: `required`","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"janelleenqi"},"content":"Response:","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"janelleenqi"},"content":"Module requirements for major selected by user","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"SebasFok":42,"ryanlohyr":58,"janelleenqi":55,"rohitcube":29,"-":38}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"# NUSDegs User Guide","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"NUSDegs streamlines computing degree planning by offering personalized module schedules, tracking progress, ","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"and ensuring on-time graduation. It eliminates guesswork, reduces stress, and saves time for students. ","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"It\u0027s a comprehensive tool for efficient and successful degree completion.","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Down the latest version of `Duke` from [here](http://link.to/duke).","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"- Left","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"- Required","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"- Info","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"- Search","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"- Major","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"- Add","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"- Delete","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"### Checking modules left: `left`","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"Displays the modules left, which are the modules required for the user\u0027s major that have not been completed.","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"Format: `left n/MAJOR`","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"* The `MAJOR` is an optional argument and can be CS or CEG.","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"Example of usage 1: (scenario where user\u0027s selected major is CS)","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"User input: ","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"`left`","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"`Modules Left: CS2030S CS2040S CS2100 CS2101 CS2106 CS2109S CS3230\"`","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"Example of usage 2: ","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"User input:","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"`left CEG`","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"`Modules Left: ","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"CG4002","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"MA1508E","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"EG2401A","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"CP3880","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"CG2111A","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"CS1231","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"CG2023","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"CG2027","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"CG2028","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"CG2271","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"ST2334","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"CS2040C","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"CS2113","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"EE2026","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"EE4204\"`","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"### Getting a list of required modules: `required`","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"Get an overview of required modules for the user\u0027s major","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"Format: `required n/MAJOR`","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"* The `MAJOR` is an optional argument and can be CS or CEG.","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"Example of usage 1: (scenario where user\u0027s selected major is CS)","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"User input:","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"`required`","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"SebasFok"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"Module requirements for CS","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"Example of usage 2:","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"User input:","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"`required CEG`","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"SebasFok"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"Module requirements for CEG","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"rohitcube"},"content":"### Get information about a module: `info`","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"rohitcube"},"content":"Get information about a module using the info command, followed by one of the commands \u0027description\u0027, \u0027workload\u0027 ","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"rohitcube"},"content":"and \u0027all\u0027.","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":92,"author":{"gitId":"rohitcube"},"content":"Format: `info n/command n/moduleCode`","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":94,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"rohitcube"},"content":"* The `command` cannot be empty.","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"rohitcube"},"content":"* The `moduleCode` cannot be empty.","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"rohitcube"},"content":"`info description CS2113`","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"SebasFok"},"content":"- Expected outcome: This course introduces the necessary skills for systematic and rigorous development of software systems. It covers requirements, design, implementation, quality assurance, and project management aspects of small-to-medium size multi-person software projects. The course uses the Object Oriented Programming paradigm. Students of this course will receive hands-on practice of tools commonly used in the industry, such as test automation tools, build automation tools, and code revisioning tools will be covered.","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"rohitcube"},"content":"`info workload CS2113`","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"SebasFok"},"content":"- Expected outcome: \"[2,1,0,3,4]\"","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"SebasFok"},"content":"`info all`","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"SebasFok"},"content":"- Expected outcome: \"returns module title and module code of all available modules\"","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"rohitcube"},"content":"### Searching for a module by title: `search`","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"rohitcube"},"content":"Search for module title using a keyword.","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"rohitcube"},"content":"Format: `search n/KEYWORD`","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"rohitcube"},"content":"* The `KEYWORD` cannot be empty.","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2020-05-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":122,"author":{"gitId":"rohitcube"},"content":"`search n/Darwinian`","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":124,"author":{"gitId":"SebasFok"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"rohitcube"},"content":"These are the modules that contain your keyword in the title:","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":127,"author":{"gitId":"SebasFok"},"content":"### Selecting your current major: `major`","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"SebasFok"},"content":"Saves the selected major into the programme if a major is specified.","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"SebasFok"},"content":"Returns the current saved major if no major is specified.","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"SebasFok"},"content":"Format: `major n/MAJOR`","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"SebasFok"},"content":"* The `MAJOR` is an optional argument and can be CS or CEG.","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"SebasFok"},"content":"Examples of usage:","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"SebasFok"},"content":"`major` (Assume no major has been selected)","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"SebasFok"},"content":"- Expected outcome: \"No major selected!\"","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"SebasFok"},"content":"`major CEG`","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"SebasFok"},"content":"- Expected outcome: \"Major CEG selected!\"","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"SebasFok"},"content":"`major` (Assume CEG has been selected by the previous command)","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"SebasFok"},"content":"- Expected outcome: \"Current major is CEG.\"","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"SebasFok"},"content":"### Add module to schedule: `add`","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"SebasFok"},"content":"Opens the user\u0027s personalized module schedule and adds the chosen module to the semester specified by the user.","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"SebasFok"},"content":"Format: `add n/MODULE n/SEMESTER`","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"SebasFok"},"content":"* The `MODULE` cannot be empty and must be valid.","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"SebasFok"},"content":"* The `SEMESTER` cannot be empty and must be an integer between 1-8 inclusive.","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"SebasFok"},"content":"Examples of usage:","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"SebasFok"},"content":"`add CS1010 1`","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"SebasFok"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"SebasFok"},"content":"![](photos/add_outcome.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"SebasFok"},"content":"### Delete module from schedule: `delete`","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"SebasFok"},"content":"Opens the user\u0027s personalized module schedule and deletes the chosen module.","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"SebasFok"},"content":"Format: `delete n/MODULE`","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"SebasFok"},"content":"* The `MODULE` cannot be empty and must be valid.","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"SebasFok"},"content":"Examples of usage:","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"SebasFok"},"content":"`delete CS1010` (Assume schedule is currently in the state from the example in `add`)","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"SebasFok"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"SebasFok"},"content":"![](photos/delete_outcome.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2020-05-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"* Add todo `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"SebasFok":70,"janelleenqi":57,"rohitcube":24,"-":40}},{"path":"docs/team/isaiah.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CerIsaiah"},"content":"# Isaiah - Project Portfolio Page","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"CerIsaiah"},"content":"## Overview","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"CerIsaiah"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"CerIsaiah":6}},{"path":"docs/team/liowenqijanelle.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"# Liow Enqi Janelle - Project Portfolio Page","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"## Overview","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"janelleenqi":6}},{"path":"docs/team/sebastianfok.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"# Sebastian Fok - Project Portfolio Page","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"## Overview","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"SebasFok":6}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"rohitcube"},"content":"import seedu.duke.controllers.ModulePlannerController;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"    //main should have basically no code except start","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"        ModulePlannerController controller \u003d new ModulePlannerController();","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"        controller.start();","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ryanlohyr":3,"rohitcube":1,"-":10}},{"path":"src/main/java/seedu/duke/controllers/ModulePlannerController.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.exceptions.FailPrereqException;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.logic.CompletePreqs;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.logic.MajorRequirements;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.logic.ModulesLeft;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.ModuleList;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Major;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.Schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.logic.Api;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.views.CommandLineView;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.Parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.views.ErrorHandler;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"CerIsaiah"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"CerIsaiah"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Objects;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.Api.getFullModuleInfo;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.Api.getModulePrereqBasedOnCourse;","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.DataRepository.getRequirements;","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.ScheduleGenerator.generateRecommendedSchedule;","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"public class ModulePlannerController {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"    private CommandLineView view;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"    private Parser parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"    private Student student;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"    private ModuleList modulesMajor;","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"    private ModuleList modulesTaken;","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    private ModuleList modulesLeft;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"CerIsaiah"},"content":"    private HashMap\u003cString, List\u003cString\u003e\u003e modsWithPreqs;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"CerIsaiah"},"content":"    private CompletePreqs addModulePreqs;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"    public ModulePlannerController() {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"        this.view \u003d new CommandLineView();","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"        this.student \u003d new Student();","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"CerIsaiah"},"content":"        //This modules list of taken and classes left can be in a storage class later on.","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"        this.modulesMajor \u003d null;","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"        this.modulesTaken \u003d new ModuleList();","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"        this.modulesLeft \u003d new ModuleList();","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"        Schedule schedule \u003d new Schedule();","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"SebasFok"},"content":"        student.setSchedule(schedule);","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"CerIsaiah"},"content":"        modsWithPreqs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"CerIsaiah"},"content":"        //Pass in Hashmap of mods with Preqs","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"CerIsaiah"},"content":"        this.addModulePreqs \u003d new CompletePreqs(addModsWithPreqs(modsWithPreqs));","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"CerIsaiah"},"content":"        //Pass in the list of mods completed.","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"CerIsaiah"},"content":"        addModulePreqs.initializeCompletedMods(modulesTaken);","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"     * Starts the interactive command-line interface for the academic module management system.","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"     * This method displays a welcome message, reads user input, and processes various commands.","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"     * While the user input is not \"bye,\" the method processes the input and responds accordingly.","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"     * The commands are case-insensitive, and the response is displayed in the view.","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"rohitcube"},"content":"    public void start() {","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"        view.displayWelcome();","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"            String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"CerIsaiah"},"content":"            String initialWord \u003d words[0].toLowerCase();","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"rohitcube"},"content":"            boolean validInput;","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"rohitcube"},"content":"            validInput \u003d Parser.isValidInput(initialWord, words);","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"rohitcube"},"content":"            if (validInput) {","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"                switch (initialWord) {","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"                case \"left\": {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"                    if (modulesMajor !\u003d null \u0026\u0026 modulesTaken !\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"                        ModulesLeft modulesLeft \u003d new ModulesLeft(modulesMajor, modulesTaken);","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"                        ArrayList\u003cString\u003e modules \u003d modulesLeft.listModulesLeft();","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"                        view.displayMessage(\"Modules left:\");","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"                        for (String module : modules) {","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"                            view.displayMessage(module);","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"                        }","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"                    } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"                        ErrorHandler.emptyMajor();;","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"                    }","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"                    break;","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"                }","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"                case \"pace\": {","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"                    //assumed that everyone graduates at y4s2","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"                    //waiting for retrieving logic","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"                    int modulesCreditsCompleted \u003d 100;","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"                    int totalCreditsToGraduate \u003d 160;","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"                    int creditsLeft \u003d totalCreditsToGraduate - modulesCreditsCompleted;","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"                    computePace(words, creditsLeft);","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"                    break;","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"                case \"prereq\": {","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"                    String module \u003d words[1];","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"                    determinePrereq(module.toUpperCase(),\"CEG\"); //to convert \"CEG\" to dynamic course","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"                    break;","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"                case \"test\": {","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(getRequirements(\"CEG\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"                    break;","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"ryanlohyr"},"content":"                case \"recommend\": {","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"ryanlohyr"},"content":"                    String keyword \u003d words[1];","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"ryanlohyr"},"content":"                    chooseToAddToSchedule(generateRecommendedSchedule(keyword.toUpperCase()),in);","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"ryanlohyr"},"content":"                    break;","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"SebasFok"},"content":"                case \"major\": {","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"SebasFok"},"content":"                    if (words.length \u003d\u003d 2) {","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"SebasFok"},"content":"                        Major major \u003d Major.valueOf(words[1].toUpperCase());","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"SebasFok"},"content":"                        student.setMajor(major);","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"                        modulesMajor \u003d new ModuleList(student.getMajor());","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"SebasFok"},"content":"                    }","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"SebasFok"},"content":"                    view.handleMajorMessage(words.length, student.getMajor());","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"SebasFok"},"content":"                    break;","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"rohitcube"},"content":"                }","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"SebasFok"},"content":"                case \"add\": {","lastModifiedDate":"2023-10-29"},{"lineNumber":131,"author":{"gitId":"SebasFok"},"content":"                    String module \u003d words[1].toUpperCase();","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"SebasFok"},"content":"                    int targetSem \u003d Integer.parseInt(words[2]);","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"SebasFok"},"content":"                    try {","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"SebasFok"},"content":"                        student.getSchedule().addModule(module, targetSem);","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"SebasFok"},"content":"                        view.displaySuccessfulAddMessage();","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"SebasFok"},"content":"                        student.getSchedule().printMainModuleList();","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"SebasFok"},"content":"                    } catch (InvalidObjectException | IllegalArgumentException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"SebasFok"},"content":"                        view.displayMessage(e.getMessage());","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"SebasFok"},"content":"                    } catch (FailPrereqException f) {","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"SebasFok"},"content":"                        view.showPrereqCEG(module);","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"SebasFok"},"content":"                        view.displayMessage(f.getMessage());","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"SebasFok"},"content":"                    }","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"SebasFok"},"content":"                    break;","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"SebasFok"},"content":"                }","lastModifiedDate":"2023-10-29"},{"lineNumber":145,"author":{"gitId":"SebasFok"},"content":"                case \"delete\": {","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"SebasFok"},"content":"                    String module \u003d words[1].toUpperCase();","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"SebasFok"},"content":"                    try {","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"SebasFok"},"content":"                        student.getSchedule().deleteModule(module);","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"SebasFok"},"content":"                        view.displaySuccessfulDeleteMessage();","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"SebasFok"},"content":"                        student.getSchedule().printMainModuleList();","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"SebasFok"},"content":"                    } catch (IllegalArgumentException | FailPrereqException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"SebasFok"},"content":"                        view.displayMessage(e.getMessage());","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"SebasFok"},"content":"                    }","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"SebasFok"},"content":"                    break;","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"SebasFok"},"content":"                }","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"SebasFok"},"content":"                case \"schedule\": {","lastModifiedDate":"2023-10-29"},{"lineNumber":157,"author":{"gitId":"SebasFok"},"content":"                    student.getSchedule().printMainModuleList();","lastModifiedDate":"2023-10-29"},{"lineNumber":158,"author":{"gitId":"SebasFok"},"content":"                    break;","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"SebasFok"},"content":"                }","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"CerIsaiah"},"content":"                case \"complete\": {","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"janelleenqi"},"content":"                    if (modulesMajor !\u003d null) {","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"CerIsaiah"},"content":"                        if (addModulePreqs.checkModInput(words, modulesMajor)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"janelleenqi"},"content":"                            String moduleCompleted \u003d words[1].toUpperCase();","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"CerIsaiah"},"content":"                            addModulePreqs.getUnlockedMods(moduleCompleted);","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"CerIsaiah"},"content":"                            addModulePreqs.printUnlockedMods(moduleCompleted);","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"janelleenqi"},"content":"                            modulesTaken.addModule(moduleCompleted);","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"CerIsaiah"},"content":"                            break;","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"CerIsaiah"},"content":"                        }","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"janelleenqi"},"content":"                    } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"janelleenqi"},"content":"                        ErrorHandler.emptyMajor();;","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"janelleenqi"},"content":"                    }","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"CerIsaiah"},"content":"                    break;","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"rohitcube"},"content":"                }","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"ryanlohyr"},"content":"                case \"required\": {","lastModifiedDate":"2023-10-30"},{"lineNumber":175,"author":{"gitId":"janelleenqi"},"content":"                    if (modulesMajor !\u003d null) {","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"rohitcube"},"content":"                        getRequiredModules(student.getMajor());","lastModifiedDate":"2023-11-01"},{"lineNumber":177,"author":{"gitId":"janelleenqi"},"content":"                    } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"janelleenqi"},"content":"                        ErrorHandler.emptyMajor();;","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"janelleenqi"},"content":"                    }","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"ryanlohyr"},"content":"                    break;","lastModifiedDate":"2023-10-30"},{"lineNumber":181,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-10-30"},{"lineNumber":182,"author":{"gitId":"rohitcube"},"content":"                case \"info\": {","lastModifiedDate":"2023-10-30"},{"lineNumber":183,"author":{"gitId":"rohitcube"},"content":"                    Api.infoCommands(words[1], userInput);","lastModifiedDate":"2023-10-30"},{"lineNumber":184,"author":{"gitId":"rohitcube"},"content":"                    break;","lastModifiedDate":"2023-10-30"},{"lineNumber":185,"author":{"gitId":"rohitcube"},"content":"                }","lastModifiedDate":"2023-10-30"},{"lineNumber":186,"author":{"gitId":"rohitcube"},"content":"                case \"search\": {","lastModifiedDate":"2023-10-30"},{"lineNumber":187,"author":{"gitId":"rohitcube"},"content":"                    Api.searchCommand(userInput);","lastModifiedDate":"2023-11-01"},{"lineNumber":188,"author":{"gitId":"ryanlohyr"},"content":"                    break;","lastModifiedDate":"2023-10-30"},{"lineNumber":189,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-10-30"},{"lineNumber":190,"author":{"gitId":"ryanlohyr"},"content":"                default: {","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"ryanlohyr"},"content":"                    view.displayMessage(\"Invalid Input\");","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"ryanlohyr"},"content":"                    break;","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"rohitcube"},"content":"                }","lastModifiedDate":"2023-11-01"},{"lineNumber":195,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"ryanlohyr"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":200,"author":{"gitId":"ryanlohyr"},"content":"    public void determinePrereq(String module, String major){","lastModifiedDate":"2023-11-02"},{"lineNumber":201,"author":{"gitId":"ryanlohyr"},"content":"        JSONObject moduleInfo \u003d  getFullModuleInfo(module);","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"ryanlohyr"},"content":"        if(moduleInfo \u003d\u003d null){","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"ryanlohyr"},"content":"            return;","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":205,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":206,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e prereq \u003d getModulePrereqBasedOnCourse(module, major);","lastModifiedDate":"2023-11-02"},{"lineNumber":207,"author":{"gitId":"ryanlohyr"},"content":"        view.displayMessage(Objects.requireNonNullElseGet(prereq, () -\u003e \"Module \" + module +","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"ryanlohyr"},"content":"                \" has no prerequisites.\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":209,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":210,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":211,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":212,"author":{"gitId":"rohitcube"},"content":"     * Prompts the user to choose whether to add a list of modules to their draft schedule.","lastModifiedDate":"2023-11-01"},{"lineNumber":213,"author":{"gitId":"rohitcube"},"content":"     * Displays the list of modules and asks for user input. Handles user input validation.","lastModifiedDate":"2023-11-01"},{"lineNumber":214,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":215,"author":{"gitId":"rohitcube"},"content":"     * @param scheduleToAdd A list of modules to be added to the schedule.","lastModifiedDate":"2023-11-01"},{"lineNumber":216,"author":{"gitId":"rohitcube"},"content":"     * @param in            A Scanner object for user input.","lastModifiedDate":"2023-11-01"},{"lineNumber":217,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":218,"author":{"gitId":"ryanlohyr"},"content":"    public void chooseToAddToSchedule(ArrayList\u003cString\u003e scheduleToAdd, Scanner in){","lastModifiedDate":"2023-11-01"},{"lineNumber":219,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":220,"author":{"gitId":"ryanlohyr"},"content":"        view.displayMessage(scheduleToAdd);","lastModifiedDate":"2023-11-01"},{"lineNumber":221,"author":{"gitId":"ryanlohyr"},"content":"        view.displayMessage(\"Do you want to add this to your draft schedule?, please input \u0027Y\u0027 or \u0027N\u0027\");","lastModifiedDate":"2023-11-01"},{"lineNumber":222,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":223,"author":{"gitId":"ryanlohyr"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2023-11-01"},{"lineNumber":224,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":225,"author":{"gitId":"ryanlohyr"},"content":"        while (!userInput.equals(\"N\") \u0026\u0026 !userInput.equals((\"Y\"))){","lastModifiedDate":"2023-11-01"},{"lineNumber":226,"author":{"gitId":"ryanlohyr"},"content":"            view.displayMessage(\"Invalid input, please choose Y/N\");","lastModifiedDate":"2023-11-01"},{"lineNumber":227,"author":{"gitId":"ryanlohyr"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2023-11-01"},{"lineNumber":228,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":229,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":230,"author":{"gitId":"ryanlohyr"},"content":"        if(userInput.equals(\"Y\")){","lastModifiedDate":"2023-11-01"},{"lineNumber":231,"author":{"gitId":"ryanlohyr"},"content":"            view.displayMessage(\"yes was chosen\");","lastModifiedDate":"2023-11-01"},{"lineNumber":232,"author":{"gitId":"ryanlohyr"},"content":"            student.getSchedule().addRecommendedScheduleListToSchedule(scheduleToAdd);","lastModifiedDate":"2023-11-01"},{"lineNumber":233,"author":{"gitId":"ryanlohyr"},"content":"            student.getSchedule().printMainModuleList();","lastModifiedDate":"2023-11-01"},{"lineNumber":234,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":235,"author":{"gitId":"ryanlohyr"},"content":"        }else {","lastModifiedDate":"2023-11-01"},{"lineNumber":236,"author":{"gitId":"ryanlohyr"},"content":"            view.displayMessage(\"No was chosen\");","lastModifiedDate":"2023-11-01"},{"lineNumber":237,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":238,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":239,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":240,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":241,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":242,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":243,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":244,"author":{"gitId":"ryanlohyr"},"content":"     * Computes the recommended pace for completing a degree based on the provided academic year","lastModifiedDate":"2023-10-15"},{"lineNumber":245,"author":{"gitId":"ryanlohyr"},"content":"     * and credits left until graduation.","lastModifiedDate":"2023-10-15"},{"lineNumber":246,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":247,"author":{"gitId":"ryanlohyr"},"content":"     * @author ryanlohyr","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"ryanlohyr"},"content":"     * @param userInput   An array of user input where userInput[0] is the command and userInput[1]","lastModifiedDate":"2023-10-30"},{"lineNumber":249,"author":{"gitId":"ryanlohyr"},"content":"     *                    is the academic year.","lastModifiedDate":"2023-10-30"},{"lineNumber":250,"author":{"gitId":"ryanlohyr"},"content":"     * @param creditsLeft The number of credits left until graduation.","lastModifiedDate":"2023-10-15"},{"lineNumber":251,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":252,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":253,"author":{"gitId":"ryanlohyr"},"content":"    public void computePace(String[] userInput, int creditsLeft) {","lastModifiedDate":"2023-10-15"},{"lineNumber":254,"author":{"gitId":"ryanlohyr"},"content":"        boolean argumentProvided \u003d userInput.length !\u003d 1;","lastModifiedDate":"2023-10-15"},{"lineNumber":255,"author":{"gitId":"ryanlohyr"},"content":"        //wait for text file logic","lastModifiedDate":"2023-10-15"},{"lineNumber":256,"author":{"gitId":"ryanlohyr"},"content":"        if (!argumentProvided) {","lastModifiedDate":"2023-10-15"},{"lineNumber":257,"author":{"gitId":"ryanlohyr"},"content":"            view.displayMessage(\"You currently have \" + creditsLeft + \" MCs till graduation\");","lastModifiedDate":"2023-10-15"},{"lineNumber":258,"author":{"gitId":"ryanlohyr"},"content":"            return;","lastModifiedDate":"2023-10-15"},{"lineNumber":259,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":260,"author":{"gitId":"ryanlohyr"},"content":"        if (!parser.isValidAcademicYear(userInput[1])) {","lastModifiedDate":"2023-10-15"},{"lineNumber":261,"author":{"gitId":"ryanlohyr"},"content":"            return;","lastModifiedDate":"2023-10-15"},{"lineNumber":262,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":263,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":264,"author":{"gitId":"ryanlohyr"},"content":"        String[] parts \u003d userInput[1].split(\"/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":265,"author":{"gitId":"ryanlohyr"},"content":"        String year \u003d parts[0].toUpperCase();","lastModifiedDate":"2023-10-15"},{"lineNumber":266,"author":{"gitId":"ryanlohyr"},"content":"        String semester \u003d parts[1].toUpperCase();","lastModifiedDate":"2023-10-15"},{"lineNumber":267,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":268,"author":{"gitId":"ryanlohyr"},"content":"        int lastSemesterOfYear \u003d 2;","lastModifiedDate":"2023-10-15"},{"lineNumber":269,"author":{"gitId":"ryanlohyr"},"content":"        int lastYearOfDegree \u003d 4;","lastModifiedDate":"2023-10-15"},{"lineNumber":270,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":271,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":272,"author":{"gitId":"ryanlohyr"},"content":"        int yearIntValue \u003d Character.getNumericValue(year.charAt(1));","lastModifiedDate":"2023-10-15"},{"lineNumber":273,"author":{"gitId":"ryanlohyr"},"content":"        int semesterIntValue \u003d Character.getNumericValue(semester.charAt(1));","lastModifiedDate":"2023-10-15"},{"lineNumber":274,"author":{"gitId":"ryanlohyr"},"content":"        //if we are at y2s1, we have 5 semesters left","lastModifiedDate":"2023-10-15"},{"lineNumber":275,"author":{"gitId":"ryanlohyr"},"content":"        int semestersLeft \u003d (lastYearOfDegree - yearIntValue) * 2 + (lastSemesterOfYear - semesterIntValue);","lastModifiedDate":"2023-10-15"},{"lineNumber":276,"author":{"gitId":"ryanlohyr"},"content":"        int creditsPerSem \u003d Math.round((float) creditsLeft / semestersLeft);","lastModifiedDate":"2023-10-15"},{"lineNumber":277,"author":{"gitId":"ryanlohyr"},"content":"        view.displayMessage(\"You have \" + creditsLeft + \"MCs for \" + semestersLeft + \" semesters. \"","lastModifiedDate":"2023-10-15"},{"lineNumber":278,"author":{"gitId":"ryanlohyr"},"content":"                + \"Recommended Pace: \" + creditsPerSem + \"MCs per sem until graduation\");","lastModifiedDate":"2023-10-15"},{"lineNumber":279,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":280,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":281,"author":{"gitId":"CerIsaiah"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":282,"author":{"gitId":"CerIsaiah"},"content":"     * Add all mods that require prerequisites to a map storing the mod and a set of preqs","lastModifiedDate":"2023-10-18"},{"lineNumber":283,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":284,"author":{"gitId":"CerIsaiah"},"content":"     * @param list","lastModifiedDate":"2023-10-18"},{"lineNumber":285,"author":{"gitId":"CerIsaiah"},"content":"     * @return HashMap of Mods with their corresponding preqs","lastModifiedDate":"2023-10-18"},{"lineNumber":286,"author":{"gitId":"CerIsaiah"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":287,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":288,"author":{"gitId":"CerIsaiah"},"content":"    private HashMap\u003cString, List\u003cString\u003e\u003e addModsWithPreqs(HashMap\u003cString, List\u003cString\u003e\u003e list) {","lastModifiedDate":"2023-10-18"},{"lineNumber":289,"author":{"gitId":"CerIsaiah"},"content":"        //Only two mods don\u0027t have preqs MA1511 and CS1231S.","lastModifiedDate":"2023-10-18"},{"lineNumber":290,"author":{"gitId":"CerIsaiah"},"content":"        // In the future this will be dealt","lastModifiedDate":"2023-10-18"},{"lineNumber":291,"author":{"gitId":"CerIsaiah"},"content":"        addValue(list, \"CS3230\", \"CS2030S\");","lastModifiedDate":"2023-10-18"},{"lineNumber":292,"author":{"gitId":"CerIsaiah"},"content":"        addValue(list, \"CS3230\", \"CS1231S\");","lastModifiedDate":"2023-10-18"},{"lineNumber":293,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":294,"author":{"gitId":"CerIsaiah"},"content":"        addValue(list, \"CS2030S\", \"CS1231S\");","lastModifiedDate":"2023-10-18"},{"lineNumber":295,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":296,"author":{"gitId":"CerIsaiah"},"content":"        addValue(list, \"CS2040S\", \"CS1231S\");","lastModifiedDate":"2023-10-18"},{"lineNumber":297,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":298,"author":{"gitId":"CerIsaiah"},"content":"        addValue(list, \"CS2106\", \"CS1231S\");","lastModifiedDate":"2023-10-18"},{"lineNumber":299,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":300,"author":{"gitId":"CerIsaiah"},"content":"        addValue(list, \"CS2109S\", \"CS1231S\");","lastModifiedDate":"2023-10-18"},{"lineNumber":301,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":302,"author":{"gitId":"CerIsaiah"},"content":"        return list;","lastModifiedDate":"2023-10-18"},{"lineNumber":303,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":304,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":305,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":306,"author":{"gitId":"CerIsaiah"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":307,"author":{"gitId":"CerIsaiah"},"content":"     * Helper function to addModsWithPreqs to add Strings and sets together","lastModifiedDate":"2023-10-18"},{"lineNumber":308,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":309,"author":{"gitId":"CerIsaiah"},"content":"     * @param map","lastModifiedDate":"2023-10-18"},{"lineNumber":310,"author":{"gitId":"CerIsaiah"},"content":"     * @param key","lastModifiedDate":"2023-10-18"},{"lineNumber":311,"author":{"gitId":"CerIsaiah"},"content":"     * @param value","lastModifiedDate":"2023-10-18"},{"lineNumber":312,"author":{"gitId":"CerIsaiah"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":313,"author":{"gitId":"CerIsaiah"},"content":"    public static void addValue(HashMap\u003cString, List\u003cString\u003e\u003e map, String key, String value) {","lastModifiedDate":"2023-10-18"},{"lineNumber":314,"author":{"gitId":"CerIsaiah"},"content":"        // If the map does not contain the key, put an empty list for that key","lastModifiedDate":"2023-10-18"},{"lineNumber":315,"author":{"gitId":"CerIsaiah"},"content":"        if (!map.containsKey(key)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":316,"author":{"gitId":"CerIsaiah"},"content":"            map.put(key, new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-18"},{"lineNumber":317,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":318,"author":{"gitId":"CerIsaiah"},"content":"        // Add the value to the list associated with the key","lastModifiedDate":"2023-10-18"},{"lineNumber":319,"author":{"gitId":"CerIsaiah"},"content":"        map.get(key).add(value);","lastModifiedDate":"2023-10-18"},{"lineNumber":320,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":321,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":322,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":323,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves and prints the required modules for a specified major.","lastModifiedDate":"2023-11-02"},{"lineNumber":324,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":325,"author":{"gitId":"janelleenqi"},"content":"     * This method initializes a `MajorRequirements` object based on the provided `major`.","lastModifiedDate":"2023-11-02"},{"lineNumber":326,"author":{"gitId":"janelleenqi"},"content":"     * It then attempts to print the required modules from a corresponding TXT file.","lastModifiedDate":"2023-11-02"},{"lineNumber":327,"author":{"gitId":"janelleenqi"},"content":"     * If the TXT file is not found, an error message is displayed.","lastModifiedDate":"2023-11-02"},{"lineNumber":328,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":329,"author":{"gitId":"janelleenqi"},"content":"     * @param major The major for which to retrieve required modules.","lastModifiedDate":"2023-11-02"},{"lineNumber":330,"author":{"gitId":"janelleenqi"},"content":"     * @throws NullPointerException If `major` is null.","lastModifiedDate":"2023-11-02"},{"lineNumber":331,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":332,"author":{"gitId":"janelleenqi"},"content":"    public void getRequiredModules(Major major) throws NullPointerException {","lastModifiedDate":"2023-11-02"},{"lineNumber":333,"author":{"gitId":"janelleenqi"},"content":"        if (major \u003d\u003d null) {","lastModifiedDate":"2023-11-02"},{"lineNumber":334,"author":{"gitId":"janelleenqi"},"content":"            throw new NullPointerException();","lastModifiedDate":"2023-11-02"},{"lineNumber":335,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":336,"author":{"gitId":"janelleenqi"},"content":"        MajorRequirements modulesRequired \u003d new MajorRequirements(major);","lastModifiedDate":"2023-11-01"},{"lineNumber":337,"author":{"gitId":"janelleenqi"},"content":"        modulesRequired.printRequiredModules(major);","lastModifiedDate":"2023-11-02"},{"lineNumber":338,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":339,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":340,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"SebasFok":48,"ryanlohyr":154,"janelleenqi":54,"rohitcube":22,"CerIsaiah":62}},{"path":"src/main/java/seedu/duke/controllers/ModuleServicesController.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"public class ModuleServicesController {","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"    //to add non case classes here","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"ryanlohyr":6}},{"path":"src/main/java/seedu/duke/exceptions/FailPrereqException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"public class FailPrereqException extends Exception{","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"    public FailPrereqException(String message) {","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"        super(message);","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"SebasFok":7}},{"path":"src/main/java/seedu/duke/models/logic/Api.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"rohitcube"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"rohitcube"},"content":"import java.net.URI;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"rohitcube"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"rohitcube"},"content":"import java.net.http.HttpClient;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"rohitcube"},"content":"import java.net.http.HttpRequest;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"rohitcube"},"content":"import java.net.http.HttpResponse;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"//import java.util.*;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.JSONArray;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.parser.JSONParser;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.parser.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.ModuleList;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.DataRepository.getRequirements;","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"rohitcube"},"content":"import seedu.duke.utils.Parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"rohitcube"},"content":"import seedu.duke.views.ErrorHandler;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"rohitcube"},"content":"import seedu.duke.views.ModuleInfo;","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"rohitcube"},"content":"import seedu.duke.views.UnknownCommandException;","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"rohitcube"},"content":"public class Api {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"     * Retrieves the prerequisite tree for a module specified by its code.","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"     * @author ryanlohyr","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"     * @param moduleCode The code of the module for which prerequisites are to be retrieved.","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"     * @return A JSON object representing the prerequisite tree for the module. The prerequisite tree can be in one of","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"    private static JSONObject getModulePrereqTree(String moduleCode) {","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"        JSONObject fullModuleInfo \u003d getFullModuleInfo(moduleCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"        if (fullModuleInfo \u003d\u003d null) {","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"            return null;","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"        //prereqTree can be returned as a string(single pre requisite), null(No pre requisites) or object","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"        Object prereqTree \u003d fullModuleInfo.get(\"prereqTree\");","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"        if (prereqTree \u003d\u003d null) {","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"            return null;","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"        } else if (prereqTree instanceof String) {","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"            JSONObject jsonObject \u003d new JSONObject();","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e requirementList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"            requirementList.add((String) prereqTree);","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"            jsonObject.put(\"or\", requirementList);","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"            return jsonObject;","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"        return (JSONObject) fullModuleInfo.get(\"prereqTree\");","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"rohitcube"},"content":"     * Checks if a given module code is exempted from certain requirements.","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode The module code to check.","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"rohitcube"},"content":"     * @return True if the module is exempted, false otherwise.","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"    private static boolean isModuleException(String moduleCode) {","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e exemptedModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"        exemptedModules.add(\"CS1231\");","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"        exemptedModules.add(\"MA1508E\");","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"        exemptedModules.add(\"EE4204\");","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"SebasFok"},"content":"        exemptedModules.add(\"MA1511\");","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"SebasFok"},"content":"        exemptedModules.add(\"MA1512\");","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"        return exemptedModules.contains(moduleCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"rohitcube"},"content":"     * Retrieves a list of exempted prerequisites for a given module code.","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode The module code to retrieve exempted prerequisites for.","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"rohitcube"},"content":"     * @return An ArrayList of exempted prerequisite module codes.","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"    private static ArrayList\u003cString\u003e getExemptedPrerequisite(String moduleCode) {","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"        HashMap\u003cString, ArrayList\u003cString\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e list1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"        list1.add(\"MA1511\");","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"        list1.add(\"MA1512\");","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"CS1231\", list1);","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e list2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"        list2.add(\"MA1511\");","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"        list2.add(\"MA1512\");","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"MA1508E\", list2);","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e list3 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"        list3.add(\"ST2334\");","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"EE4204\", list3);","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"SebasFok"},"content":"        ArrayList\u003cString\u003e list4 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"SebasFok"},"content":"        map.put(\"MA1511\", list4);","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"SebasFok"},"content":"        ArrayList\u003cString\u003e list5 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"SebasFok"},"content":"        map.put(\"MA1512\", list5);","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"        return map.get(moduleCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"rohitcube"},"content":"    private static String sendHttpRequestAndGetResponseBody(String url) throws ParseException,","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"rohitcube"},"content":"            IOException, InterruptedException, URISyntaxException {","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"rohitcube"},"content":"        HttpClient client \u003d HttpClient.newHttpClient();","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"rohitcube"},"content":"        HttpRequest request \u003d HttpRequest.newBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"rohitcube"},"content":"                .uri(new URI(url))","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"rohitcube"},"content":"                .GET()","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"rohitcube"},"content":"                .build();","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"rohitcube"},"content":"        HttpResponse\u003cString\u003e response \u003d client.send(request, HttpResponse.BodyHandlers.ofString());","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"rohitcube"},"content":"        return response.body();","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"rohitcube"},"content":"     * Retrieves detailed module information from an external API based on the module code.","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"rohitcube"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode The module code to retrieve information for.","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"rohitcube"},"content":"     * @return A JSONObject containing module information.","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"ryanlohyr"},"content":"    public static JSONObject getFullModuleInfo(String moduleCode) {","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"rohitcube"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"rohitcube"},"content":"            String url \u003d \"https://api.nusmods.com/v2/2023-2024/modules/\" + moduleCode + \".json\";","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"rohitcube"},"content":"            String responseBody \u003d sendHttpRequestAndGetResponseBody(url);","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"rohitcube"},"content":"            if (responseBody.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"rohitcube"},"content":"                return new JSONObject();","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"rohitcube"},"content":"            JSONParser parser \u003d new JSONParser();","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"ryanlohyr"},"content":"            return (JSONObject) parser.parse(responseBody);","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"rohitcube"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"rohitcube"},"content":"            //to be replaced with more robust error class in the future","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Invalid Module Name\");","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"rohitcube"},"content":"        } catch (IOException | InterruptedException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Invalid Module Name\");","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"rohitcube"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"rohitcube"},"content":"        } catch (URISyntaxException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"rohitcube"},"content":"            //to be replaced with more robust error class in the future","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"rohitcube"},"content":"            System.out.println(\"Sorry, there was an error with\" +","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"rohitcube"},"content":"                    \" the provided URL: \" + e.getMessage());","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"rohitcube"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":145,"author":{"gitId":"rohitcube"},"content":"            //System.out.println(\"Invalid Module Name\");","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"rohitcube"},"content":"        return null;","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"rohitcube"},"content":"     * Retrieves the name of a module based on its module code.","lastModifiedDate":"2023-11-01"},{"lineNumber":152,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode The module code to retrieve the name for.","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"rohitcube"},"content":"     * @return The name of the module.","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"ryanlohyr"},"content":"    public static String getModuleName(String moduleCode) {","lastModifiedDate":"2023-10-28"},{"lineNumber":157,"author":{"gitId":"ryanlohyr"},"content":"        JSONObject fullModuleInfo \u003d getFullModuleInfo(moduleCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"ryanlohyr"},"content":"        assert fullModuleInfo !\u003d null;","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"ryanlohyr"},"content":"        return (String) fullModuleInfo.get(\"title\");","lastModifiedDate":"2023-10-28"},{"lineNumber":160,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":161,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":162,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"rohitcube"},"content":"     * Retrieves the description of a module based on its module code.","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"rohitcube"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode The module code to retrieve the description for.","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"rohitcube"},"content":"     * @return The description of the module.","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"rohitcube"},"content":"    public static String getDescription(String moduleCode) {","lastModifiedDate":"2023-10-30"},{"lineNumber":169,"author":{"gitId":"rohitcube"},"content":"        JSONObject moduleInfo \u003d getFullModuleInfo(moduleCode);","lastModifiedDate":"2023-10-30"},{"lineNumber":170,"author":{"gitId":"rohitcube"},"content":"        String error \u003d \" \";","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"rohitcube"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"rohitcube"},"content":"            String descr \u003d (String) moduleInfo.get(\"description\");","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"rohitcube"},"content":"            return descr;","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"rohitcube"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"rohitcube"},"content":"            System.out.println(\" \");","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"rohitcube"},"content":"        return error;","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":179,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"rohitcube"},"content":"     * Retrieves the workload information for a module based on its module code.","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"rohitcube"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode The module code to retrieve workload information for.","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"rohitcube"},"content":"     * @return A JSONArray containing workload details.","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":187,"author":{"gitId":"rohitcube"},"content":"    public static JSONArray getWorkload(String moduleCode) {","lastModifiedDate":"2023-10-30"},{"lineNumber":188,"author":{"gitId":"rohitcube"},"content":"        JSONObject moduleInfo \u003d getFullModuleInfo(moduleCode);","lastModifiedDate":"2023-10-30"},{"lineNumber":189,"author":{"gitId":"rohitcube"},"content":"        JSONArray emptyArray \u003d new JSONArray();","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"rohitcube"},"content":"        assert moduleInfo !\u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":191,"author":{"gitId":"rohitcube"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"rohitcube"},"content":"            return (JSONArray) moduleInfo.get(\"workload\");","lastModifiedDate":"2023-10-30"},{"lineNumber":193,"author":{"gitId":"rohitcube"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"rohitcube"},"content":"            System.out.println(\" \");","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":196,"author":{"gitId":"rohitcube"},"content":"        return emptyArray;","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":198,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":199,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":200,"author":{"gitId":"ryanlohyr"},"content":"     * Recursively flattens and processes a list of module prerequisites.","lastModifiedDate":"2023-10-28"},{"lineNumber":201,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":202,"author":{"gitId":"ryanlohyr"},"content":"     * @author ryanlohyr","lastModifiedDate":"2023-10-28"},{"lineNumber":203,"author":{"gitId":"ryanlohyr"},"content":"     * @param major              The major or program for which prerequisites are being flattened.","lastModifiedDate":"2023-10-28"},{"lineNumber":204,"author":{"gitId":"ryanlohyr"},"content":"     * @param prerequisites      An ArrayList to store the flattened prerequisites.","lastModifiedDate":"2023-10-28"},{"lineNumber":205,"author":{"gitId":"ryanlohyr"},"content":"     * @param modulePrereqArray  An ArrayList containing the module prerequisites to be processed.","lastModifiedDate":"2023-10-28"},{"lineNumber":206,"author":{"gitId":"ryanlohyr"},"content":"     * @param courseRequirements An ArrayList containing course requirements.","lastModifiedDate":"2023-10-28"},{"lineNumber":207,"author":{"gitId":"ryanlohyr"},"content":"     * @param currRequisite      The type of the current prerequisite (e.g., \"and\" or \"or\").","lastModifiedDate":"2023-10-28"},{"lineNumber":208,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":209,"author":{"gitId":"ryanlohyr"},"content":"    private static void flattenPrereq(","lastModifiedDate":"2023-10-28"},{"lineNumber":210,"author":{"gitId":"ryanlohyr"},"content":"            String major,","lastModifiedDate":"2023-10-28"},{"lineNumber":211,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e prerequisites,","lastModifiedDate":"2023-10-28"},{"lineNumber":212,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cObjects\u003e modulePrereqArray,","lastModifiedDate":"2023-10-28"},{"lineNumber":213,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e courseRequirements,","lastModifiedDate":"2023-10-28"},{"lineNumber":214,"author":{"gitId":"ryanlohyr"},"content":"            String currRequisite) {","lastModifiedDate":"2023-10-28"},{"lineNumber":215,"author":{"gitId":"ryanlohyr"},"content":"        //base case","lastModifiedDate":"2023-10-28"},{"lineNumber":216,"author":{"gitId":"ryanlohyr"},"content":"        for (Object module : modulePrereqArray) {","lastModifiedDate":"2023-10-28"},{"lineNumber":217,"author":{"gitId":"ryanlohyr"},"content":"            if (module instanceof String) {","lastModifiedDate":"2023-10-28"},{"lineNumber":218,"author":{"gitId":"ryanlohyr"},"content":"                String formattedModule \u003d ((String) module).replace(\":D\", \"\");","lastModifiedDate":"2023-10-28"},{"lineNumber":219,"author":{"gitId":"ryanlohyr"},"content":"                formattedModule \u003d formattedModule.replace(\"%\", \"\");","lastModifiedDate":"2023-10-28"},{"lineNumber":220,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":221,"author":{"gitId":"ryanlohyr"},"content":"                if (courseRequirements.contains(formattedModule)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":222,"author":{"gitId":"ryanlohyr"},"content":"                    prerequisites.add(formattedModule);","lastModifiedDate":"2023-10-28"},{"lineNumber":223,"author":{"gitId":"ryanlohyr"},"content":"                    if (currRequisite.equals(\"or\")) {","lastModifiedDate":"2023-10-28"},{"lineNumber":224,"author":{"gitId":"ryanlohyr"},"content":"                        return;","lastModifiedDate":"2023-10-28"},{"lineNumber":225,"author":{"gitId":"ryanlohyr"},"content":"                    }","lastModifiedDate":"2023-10-28"},{"lineNumber":226,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-10-28"},{"lineNumber":227,"author":{"gitId":"ryanlohyr"},"content":"            } else {","lastModifiedDate":"2023-10-28"},{"lineNumber":228,"author":{"gitId":"ryanlohyr"},"content":"                //item is an object","lastModifiedDate":"2023-10-28"},{"lineNumber":229,"author":{"gitId":"ryanlohyr"},"content":"                //here, we determine if its \u0027or\u0027 or \u0027and\u0027","lastModifiedDate":"2023-10-28"},{"lineNumber":230,"author":{"gitId":"ryanlohyr"},"content":"                JSONObject moduleJSON \u003d (JSONObject) module;","lastModifiedDate":"2023-10-28"},{"lineNumber":231,"author":{"gitId":"ryanlohyr"},"content":"                String key \u003d (String) moduleJSON.keySet().toArray()[0];","lastModifiedDate":"2023-10-28"},{"lineNumber":232,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":233,"author":{"gitId":"ryanlohyr"},"content":"                ArrayList\u003cObjects\u003e initial \u003d (ArrayList\u003cObjects\u003e) moduleJSON.get(key);","lastModifiedDate":"2023-10-28"},{"lineNumber":234,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":235,"author":{"gitId":"ryanlohyr"},"content":"                flattenPrereq(major, prerequisites, initial, getRequirements(major), key);","lastModifiedDate":"2023-10-28"},{"lineNumber":236,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":237,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":238,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":239,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":240,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":241,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":242,"author":{"gitId":"ryanlohyr"},"content":"     * Retrieves the prerequisite array for a module specified by its code and also taking into account the degree","lastModifiedDate":"2023-10-28"},{"lineNumber":243,"author":{"gitId":"ryanlohyr"},"content":"     * requirements of the course.","lastModifiedDate":"2023-10-28"},{"lineNumber":244,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":245,"author":{"gitId":"ryanlohyr"},"content":"     * @author ryanlohyr","lastModifiedDate":"2023-10-28"},{"lineNumber":246,"author":{"gitId":"ryanlohyr"},"content":"     * @param moduleCode The code of the module for which prerequisites are to be retrieved.","lastModifiedDate":"2023-10-28"},{"lineNumber":247,"author":{"gitId":"rohitcube"},"content":"     * @return A JSONObject representing the prerequisite tree for the module or NULL if no prerequisites are specified.","lastModifiedDate":"2023-11-01"},{"lineNumber":248,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":249,"author":{"gitId":"ryanlohyr"},"content":"    public static ArrayList\u003cString\u003e getModulePrereqBasedOnCourse(String moduleCode, String major) {","lastModifiedDate":"2023-10-28"},{"lineNumber":250,"author":{"gitId":"ryanlohyr"},"content":"        // Only accepts CEG requirements now","lastModifiedDate":"2023-10-28"},{"lineNumber":251,"author":{"gitId":"ryanlohyr"},"content":"        if (!Objects.equals(major, \"CEG\")) {","lastModifiedDate":"2023-10-28"},{"lineNumber":252,"author":{"gitId":"ryanlohyr"},"content":"            return null;","lastModifiedDate":"2023-10-28"},{"lineNumber":253,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":254,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":255,"author":{"gitId":"ryanlohyr"},"content":"        //Modules that has prerequisites incorrectly identified by NUSMods","lastModifiedDate":"2023-10-28"},{"lineNumber":256,"author":{"gitId":"ryanlohyr"},"content":"        if (isModuleException(moduleCode)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":257,"author":{"gitId":"ryanlohyr"},"content":"            return getExemptedPrerequisite(moduleCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":258,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":259,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":260,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e prerequisites \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":261,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":262,"author":{"gitId":"ryanlohyr"},"content":"        JSONObject modulePrereqTree \u003d getModulePrereqTree(moduleCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":263,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":264,"author":{"gitId":"ryanlohyr"},"content":"        if (modulePrereqTree \u003d\u003d null) {","lastModifiedDate":"2023-10-28"},{"lineNumber":265,"author":{"gitId":"ryanlohyr"},"content":"            return null;","lastModifiedDate":"2023-10-28"},{"lineNumber":266,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":267,"author":{"gitId":"ryanlohyr"},"content":"        String key \u003d (String) modulePrereqTree.keySet().toArray()[0];","lastModifiedDate":"2023-10-28"},{"lineNumber":268,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":269,"author":{"gitId":"ryanlohyr"},"content":"        //settle this warning","lastModifiedDate":"2023-10-28"},{"lineNumber":270,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cObjects\u003e initial \u003d (ArrayList\u003cObjects\u003e) modulePrereqTree.get(key);","lastModifiedDate":"2023-10-28"},{"lineNumber":271,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":272,"author":{"gitId":"ryanlohyr"},"content":"        flattenPrereq(major, prerequisites, initial, getRequirements(major), key);","lastModifiedDate":"2023-10-28"},{"lineNumber":273,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":274,"author":{"gitId":"ryanlohyr"},"content":"        return prerequisites;","lastModifiedDate":"2023-10-28"},{"lineNumber":275,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":276,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":277,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":278,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":279,"author":{"gitId":"SebasFok"},"content":"     * Checks if a module with the given module code exists in the NUSMods database.","lastModifiedDate":"2023-10-31"},{"lineNumber":280,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":281,"author":{"gitId":"SebasFok"},"content":"     * @param moduleCode The module code to check for existence.","lastModifiedDate":"2023-10-31"},{"lineNumber":282,"author":{"gitId":"SebasFok"},"content":"     * @return `true` if the module exists, `false` if the module does not exist.","lastModifiedDate":"2023-10-31"},{"lineNumber":283,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":284,"author":{"gitId":"SebasFok"},"content":"    public static boolean doesModuleExist(String moduleCode) {","lastModifiedDate":"2023-10-31"},{"lineNumber":285,"author":{"gitId":"SebasFok"},"content":"        JSONObject moduleInfo \u003d getFullModuleInfo(moduleCode);","lastModifiedDate":"2023-10-31"},{"lineNumber":286,"author":{"gitId":"SebasFok"},"content":"        return (!(moduleInfo \u003d\u003d null));","lastModifiedDate":"2023-10-31"},{"lineNumber":287,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":288,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":289,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":290,"author":{"gitId":"SebasFok"},"content":"     * Checks if a student satisfies all prerequisites for a given module.","lastModifiedDate":"2023-10-30"},{"lineNumber":291,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":292,"author":{"gitId":"SebasFok"},"content":"     * @param moduleCode       The code of the module for which prerequisites need to be checked.","lastModifiedDate":"2023-10-30"},{"lineNumber":293,"author":{"gitId":"SebasFok"},"content":"     * @param completedModules The list of completed modules by the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":294,"author":{"gitId":"SebasFok"},"content":"     * @return `true` if the student satisfies all prerequisites for the module, `false` otherwise.","lastModifiedDate":"2023-10-30"},{"lineNumber":295,"author":{"gitId":"SebasFok"},"content":"     * @throws IllegalArgumentException If the module code is invalid.","lastModifiedDate":"2023-10-31"},{"lineNumber":296,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":297,"author":{"gitId":"SebasFok"},"content":"    public static boolean satisfiesAllPrereq(String moduleCode, ModuleList completedModules)","lastModifiedDate":"2023-10-30"},{"lineNumber":298,"author":{"gitId":"SebasFok"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2023-10-31"},{"lineNumber":299,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":300,"author":{"gitId":"SebasFok"},"content":"        if (!doesModuleExist(moduleCode)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":301,"author":{"gitId":"SebasFok"},"content":"            throw new IllegalArgumentException(\"Invalid module code\");","lastModifiedDate":"2023-10-31"},{"lineNumber":302,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":303,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":304,"author":{"gitId":"SebasFok"},"content":"        JSONObject modulePrereqTree \u003d getModulePrereqTree(moduleCode);","lastModifiedDate":"2023-10-30"},{"lineNumber":305,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":306,"author":{"gitId":"SebasFok"},"content":"        if (modulePrereqTree \u003d\u003d null) {","lastModifiedDate":"2023-10-30"},{"lineNumber":307,"author":{"gitId":"SebasFok"},"content":"            return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":308,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":309,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":310,"author":{"gitId":"SebasFok"},"content":"        String key \u003d (String) modulePrereqTree.keySet().toArray()[0];","lastModifiedDate":"2023-10-31"},{"lineNumber":311,"author":{"gitId":"SebasFok"},"content":"        ArrayList\u003cObjects\u003e initial \u003d (ArrayList\u003cObjects\u003e) modulePrereqTree.get(key);","lastModifiedDate":"2023-10-30"},{"lineNumber":312,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":313,"author":{"gitId":"SebasFok"},"content":"        //Modules that has prerequisites incorrectly identified by NUSMods","lastModifiedDate":"2023-10-30"},{"lineNumber":314,"author":{"gitId":"SebasFok"},"content":"        if (isModuleException(moduleCode)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":315,"author":{"gitId":"SebasFok"},"content":"            JSONObject exceptionPrereqTree \u003d new JSONObject();","lastModifiedDate":"2023-10-31"},{"lineNumber":316,"author":{"gitId":"SebasFok"},"content":"            ArrayList\u003cString\u003e requirementList \u003d getExemptedPrerequisite(moduleCode);","lastModifiedDate":"2023-10-31"},{"lineNumber":317,"author":{"gitId":"SebasFok"},"content":"            exceptionPrereqTree.put(\"and\", requirementList);","lastModifiedDate":"2023-10-31"},{"lineNumber":318,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":319,"author":{"gitId":"SebasFok"},"content":"            key \u003d (String) exceptionPrereqTree.keySet().toArray()[0];","lastModifiedDate":"2023-10-31"},{"lineNumber":320,"author":{"gitId":"SebasFok"},"content":"            initial \u003d (ArrayList\u003cObjects\u003e) exceptionPrereqTree.get(key);","lastModifiedDate":"2023-10-31"},{"lineNumber":321,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":322,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":323,"author":{"gitId":"SebasFok"},"content":"        return checkPrereq(initial, key, completedModules);","lastModifiedDate":"2023-10-30"},{"lineNumber":324,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":325,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":326,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":327,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":328,"author":{"gitId":"SebasFok"},"content":"     * Recursively checks if each branch of the prereq tree is satisfied by the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":329,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":330,"author":{"gitId":"SebasFok"},"content":"     * @param modulePrereqArray The array of prerequisite modules or conditions to be checked.","lastModifiedDate":"2023-10-30"},{"lineNumber":331,"author":{"gitId":"SebasFok"},"content":"     * @param currRequisite     The type of prerequisite condition (\"or\" or \"and\").","lastModifiedDate":"2023-10-30"},{"lineNumber":332,"author":{"gitId":"SebasFok"},"content":"     * @param completedModules  The list of completed modules by the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":333,"author":{"gitId":"SebasFok"},"content":"     * @return `true` if the student satisfies all prerequisites, `false` otherwise.","lastModifiedDate":"2023-10-30"},{"lineNumber":334,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":335,"author":{"gitId":"SebasFok"},"content":"    private static boolean checkPrereq(","lastModifiedDate":"2023-10-30"},{"lineNumber":336,"author":{"gitId":"SebasFok"},"content":"            ArrayList\u003cObjects\u003e modulePrereqArray,","lastModifiedDate":"2023-10-30"},{"lineNumber":337,"author":{"gitId":"SebasFok"},"content":"            String currRequisite,","lastModifiedDate":"2023-10-30"},{"lineNumber":338,"author":{"gitId":"SebasFok"},"content":"            ModuleList completedModules) {","lastModifiedDate":"2023-10-31"},{"lineNumber":339,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":340,"author":{"gitId":"SebasFok"},"content":"        if (currRequisite.equals(\"or\")) {","lastModifiedDate":"2023-10-30"},{"lineNumber":341,"author":{"gitId":"SebasFok"},"content":"            for (Object module : modulePrereqArray) {","lastModifiedDate":"2023-10-30"},{"lineNumber":342,"author":{"gitId":"SebasFok"},"content":"                if (module instanceof String) {","lastModifiedDate":"2023-10-30"},{"lineNumber":343,"author":{"gitId":"SebasFok"},"content":"                    String formattedModule \u003d ((String) module).replace(\":D\", \"\");","lastModifiedDate":"2023-10-30"},{"lineNumber":344,"author":{"gitId":"SebasFok"},"content":"                    formattedModule \u003d formattedModule.replace(\"%\", \"\");","lastModifiedDate":"2023-10-30"},{"lineNumber":345,"author":{"gitId":"SebasFok"},"content":"                    try {","lastModifiedDate":"2023-10-31"},{"lineNumber":346,"author":{"gitId":"SebasFok"},"content":"                        if (completedModules.exists(formattedModule)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":347,"author":{"gitId":"SebasFok"},"content":"                            return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":348,"author":{"gitId":"SebasFok"},"content":"                        }","lastModifiedDate":"2023-10-30"},{"lineNumber":349,"author":{"gitId":"SebasFok"},"content":"                    } catch (InvalidObjectException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":350,"author":{"gitId":"SebasFok"},"content":"                        throw new RuntimeException(e);","lastModifiedDate":"2023-10-31"},{"lineNumber":351,"author":{"gitId":"SebasFok"},"content":"                    }","lastModifiedDate":"2023-10-31"},{"lineNumber":352,"author":{"gitId":"SebasFok"},"content":"                } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":353,"author":{"gitId":"SebasFok"},"content":"                    JSONObject prereqBranch \u003d (JSONObject) module;","lastModifiedDate":"2023-10-30"},{"lineNumber":354,"author":{"gitId":"SebasFok"},"content":"                    String key \u003d (String) prereqBranch.keySet().toArray()[0];","lastModifiedDate":"2023-10-30"},{"lineNumber":355,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":356,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":357,"author":{"gitId":"SebasFok"},"content":"                    JSONArray prereqBranchArray \u003d (JSONArray) prereqBranch.get(key);","lastModifiedDate":"2023-10-30"},{"lineNumber":358,"author":{"gitId":"SebasFok"},"content":"                    return checkPrereq(prereqBranchArray, key, completedModules);","lastModifiedDate":"2023-11-01"},{"lineNumber":359,"author":{"gitId":"SebasFok"},"content":"                }","lastModifiedDate":"2023-10-30"},{"lineNumber":360,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":361,"author":{"gitId":"SebasFok"},"content":"            return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":362,"author":{"gitId":"SebasFok"},"content":"        } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":363,"author":{"gitId":"SebasFok"},"content":"            for (Object module : modulePrereqArray) {","lastModifiedDate":"2023-10-30"},{"lineNumber":364,"author":{"gitId":"SebasFok"},"content":"                if (module instanceof String) {","lastModifiedDate":"2023-10-30"},{"lineNumber":365,"author":{"gitId":"SebasFok"},"content":"                    String formattedModule \u003d ((String) module).replace(\":D\", \"\");","lastModifiedDate":"2023-10-30"},{"lineNumber":366,"author":{"gitId":"SebasFok"},"content":"                    formattedModule \u003d formattedModule.replace(\"%\", \"\");","lastModifiedDate":"2023-10-30"},{"lineNumber":367,"author":{"gitId":"SebasFok"},"content":"                    try {","lastModifiedDate":"2023-10-31"},{"lineNumber":368,"author":{"gitId":"SebasFok"},"content":"                        if (!completedModules.exists(formattedModule)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":369,"author":{"gitId":"SebasFok"},"content":"                            return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":370,"author":{"gitId":"SebasFok"},"content":"                        }","lastModifiedDate":"2023-10-30"},{"lineNumber":371,"author":{"gitId":"SebasFok"},"content":"                    } catch (InvalidObjectException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":372,"author":{"gitId":"SebasFok"},"content":"                        throw new RuntimeException(e);","lastModifiedDate":"2023-10-31"},{"lineNumber":373,"author":{"gitId":"SebasFok"},"content":"                    }","lastModifiedDate":"2023-10-31"},{"lineNumber":374,"author":{"gitId":"SebasFok"},"content":"                } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":375,"author":{"gitId":"SebasFok"},"content":"                    JSONObject prereqBranch \u003d (JSONObject) module;","lastModifiedDate":"2023-10-30"},{"lineNumber":376,"author":{"gitId":"SebasFok"},"content":"                    String key \u003d (String) prereqBranch.keySet().toArray()[0];","lastModifiedDate":"2023-10-30"},{"lineNumber":377,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":378,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":379,"author":{"gitId":"SebasFok"},"content":"                    JSONArray prereqBranchArray \u003d (JSONArray) prereqBranch.get(key);","lastModifiedDate":"2023-10-30"},{"lineNumber":380,"author":{"gitId":"SebasFok"},"content":"                    if (!checkPrereq(prereqBranchArray, key, completedModules)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":381,"author":{"gitId":"SebasFok"},"content":"                        return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":382,"author":{"gitId":"SebasFok"},"content":"                    }","lastModifiedDate":"2023-10-30"},{"lineNumber":383,"author":{"gitId":"SebasFok"},"content":"                }","lastModifiedDate":"2023-10-30"},{"lineNumber":384,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":385,"author":{"gitId":"SebasFok"},"content":"            return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":386,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":387,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":388,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":389,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":390,"author":{"gitId":"rohitcube"},"content":"     * Retrieves a list of modules from an external API and returns it as a JSONArray.","lastModifiedDate":"2023-11-01"},{"lineNumber":391,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":392,"author":{"gitId":"rohitcube"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-01"},{"lineNumber":393,"author":{"gitId":"rohitcube"},"content":"     * @return A JSONArray containing module information.","lastModifiedDate":"2023-11-01"},{"lineNumber":394,"author":{"gitId":"rohitcube"},"content":"     * @throws RuntimeException If there is an issue with the HTTP request or JSON parsing.","lastModifiedDate":"2023-11-01"},{"lineNumber":395,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":396,"author":{"gitId":"rohitcube"},"content":"    public static JSONArray listAllModules() {","lastModifiedDate":"2023-10-28"},{"lineNumber":397,"author":{"gitId":"rohitcube"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":398,"author":{"gitId":"rohitcube"},"content":"            String url \u003d \"https://api.nusmods.com/v2/2023-2024/moduleList.json\";","lastModifiedDate":"2023-10-28"},{"lineNumber":399,"author":{"gitId":"rohitcube"},"content":"            String responseBody \u003d sendHttpRequestAndGetResponseBody(url);","lastModifiedDate":"2023-11-01"},{"lineNumber":400,"author":{"gitId":"rohitcube"},"content":"            JSONParser parser \u003d new JSONParser();","lastModifiedDate":"2023-10-28"},{"lineNumber":401,"author":{"gitId":"rohitcube"},"content":"            return (JSONArray) parser.parse(responseBody);","lastModifiedDate":"2023-11-01"},{"lineNumber":402,"author":{"gitId":"rohitcube"},"content":"        } catch (URISyntaxException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":403,"author":{"gitId":"rohitcube"},"content":"            System.out.println(\"Sorry, there was an error with\" +","lastModifiedDate":"2023-10-28"},{"lineNumber":404,"author":{"gitId":"rohitcube"},"content":"                    \" the provided URL: \" + e.getMessage());","lastModifiedDate":"2023-10-28"},{"lineNumber":405,"author":{"gitId":"rohitcube"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-28"},{"lineNumber":406,"author":{"gitId":"rohitcube"},"content":"        } catch (IOException | InterruptedException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":407,"author":{"gitId":"rohitcube"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-28"},{"lineNumber":408,"author":{"gitId":"rohitcube"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":409,"author":{"gitId":"rohitcube"},"content":"            //to be replaced with more robust error class in the future","lastModifiedDate":"2023-10-28"},{"lineNumber":410,"author":{"gitId":"rohitcube"},"content":"            System.out.println(\"Sorry, the JSON object could not be parsed\");","lastModifiedDate":"2023-10-28"},{"lineNumber":411,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":412,"author":{"gitId":"rohitcube"},"content":"        return null;","lastModifiedDate":"2023-10-28"},{"lineNumber":413,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":414,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":415,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":416,"author":{"gitId":"rohitcube"},"content":"     * Searches for modules containing a specified keyword in their title within a given module list.","lastModifiedDate":"2023-11-01"},{"lineNumber":417,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":418,"author":{"gitId":"rohitcube"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-01"},{"lineNumber":419,"author":{"gitId":"rohitcube"},"content":"     * @param keyword    The keyword to search for.","lastModifiedDate":"2023-11-01"},{"lineNumber":420,"author":{"gitId":"rohitcube"},"content":"     * @param moduleList The list of modules to search within.","lastModifiedDate":"2023-11-01"},{"lineNumber":421,"author":{"gitId":"rohitcube"},"content":"     * @return A JSONArray containing modules matching the keyword.","lastModifiedDate":"2023-11-01"},{"lineNumber":422,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":423,"author":{"gitId":"rohitcube"},"content":"    public static JSONArray search(String keyword, JSONArray moduleList) {","lastModifiedDate":"2023-10-28"},{"lineNumber":424,"author":{"gitId":"rohitcube"},"content":"        JSONArray modulesContainingKeyword \u003d new JSONArray();","lastModifiedDate":"2023-10-28"},{"lineNumber":425,"author":{"gitId":"rohitcube"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":426,"author":{"gitId":"rohitcube"},"content":"            return new JSONArray();","lastModifiedDate":"2023-10-30"},{"lineNumber":427,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":428,"author":{"gitId":"rohitcube"},"content":"        for (Object moduleObject : moduleList) {","lastModifiedDate":"2023-10-28"},{"lineNumber":429,"author":{"gitId":"rohitcube"},"content":"            JSONObject module \u003d (JSONObject) moduleObject; // Cast to JSONObject","lastModifiedDate":"2023-10-28"},{"lineNumber":430,"author":{"gitId":"rohitcube"},"content":"            String title \u003d (String) module.get(\"title\");","lastModifiedDate":"2023-10-28"},{"lineNumber":431,"author":{"gitId":"rohitcube"},"content":"            if (title.contains(keyword)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":432,"author":{"gitId":"rohitcube"},"content":"                modulesContainingKeyword.add(module);","lastModifiedDate":"2023-10-30"},{"lineNumber":433,"author":{"gitId":"rohitcube"},"content":"                //not sure how to resolve this yellow line","lastModifiedDate":"2023-10-28"},{"lineNumber":434,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":435,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":436,"author":{"gitId":"rohitcube"},"content":"        return modulesContainingKeyword;","lastModifiedDate":"2023-10-28"},{"lineNumber":437,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":438,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":439,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":440,"author":{"gitId":"rohitcube"},"content":"     * Executes commands based on user input for module information retrieval.","lastModifiedDate":"2023-11-01"},{"lineNumber":441,"author":{"gitId":"rohitcube"},"content":"     * Supports commands: \"description\", \"workload\", \"all\".","lastModifiedDate":"2023-11-01"},{"lineNumber":442,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":443,"author":{"gitId":"rohitcube"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-01"},{"lineNumber":444,"author":{"gitId":"rohitcube"},"content":"     * @param command   The command provided by the user.","lastModifiedDate":"2023-11-01"},{"lineNumber":445,"author":{"gitId":"rohitcube"},"content":"     * @param userInput The user input string containing the command and module code (if applicable).","lastModifiedDate":"2023-11-01"},{"lineNumber":446,"author":{"gitId":"rohitcube"},"content":"     * @throws UnknownCommandException If an unknown command is provided.","lastModifiedDate":"2023-11-01"},{"lineNumber":447,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":448,"author":{"gitId":"rohitcube"},"content":"    public static void infoCommands(String command, String userInput) {","lastModifiedDate":"2023-11-01"},{"lineNumber":449,"author":{"gitId":"rohitcube"},"content":"        if (command.equals(\"description\")) {","lastModifiedDate":"2023-10-28"},{"lineNumber":450,"author":{"gitId":"rohitcube"},"content":"            String moduleCode \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":451,"author":{"gitId":"rohitcube"},"content":"                    userInput.substring(userInput.indexOf(\"description\") + 11).trim().toUpperCase();","lastModifiedDate":"2023-11-01"},{"lineNumber":452,"author":{"gitId":"rohitcube"},"content":"            if (!Api.getDescription(moduleCode).isEmpty()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":453,"author":{"gitId":"rohitcube"},"content":"                String description \u003d Api.getDescription(moduleCode);","lastModifiedDate":"2023-10-30"},{"lineNumber":454,"author":{"gitId":"rohitcube"},"content":"                System.out.println(description);","lastModifiedDate":"2023-10-30"},{"lineNumber":455,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":456,"author":{"gitId":"rohitcube"},"content":"        } else if (command.equals(\"workload\")) {","lastModifiedDate":"2023-10-28"},{"lineNumber":457,"author":{"gitId":"rohitcube"},"content":"            String moduleCode \u003d userInput.substring(userInput.indexOf(\"workload\") + 8).trim().toUpperCase();","lastModifiedDate":"2023-11-01"},{"lineNumber":458,"author":{"gitId":"rohitcube"},"content":"            if (!Api.getWorkload(moduleCode).isEmpty()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":459,"author":{"gitId":"rohitcube"},"content":"                JSONArray workload \u003d Api.getWorkload(moduleCode);","lastModifiedDate":"2023-10-30"},{"lineNumber":460,"author":{"gitId":"rohitcube"},"content":"                System.out.println(workload);","lastModifiedDate":"2023-10-30"},{"lineNumber":461,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":462,"author":{"gitId":"rohitcube"},"content":"        } else if (command.equals(\"all\")) {","lastModifiedDate":"2023-10-30"},{"lineNumber":463,"author":{"gitId":"rohitcube"},"content":"            JSONArray allModules \u003d listAllModules();","lastModifiedDate":"2023-10-30"},{"lineNumber":464,"author":{"gitId":"rohitcube"},"content":"            assert allModules !\u003d null;","lastModifiedDate":"2023-11-01"},{"lineNumber":465,"author":{"gitId":"rohitcube"},"content":"            ModuleInfo.printJsonArray(allModules);","lastModifiedDate":"2023-11-01"},{"lineNumber":466,"author":{"gitId":"rohitcube"},"content":"        } else {","lastModifiedDate":"2023-10-28"},{"lineNumber":467,"author":{"gitId":"rohitcube"},"content":"            System.out.println(\"man\");","lastModifiedDate":"2023-11-02"},{"lineNumber":468,"author":{"gitId":"rohitcube"},"content":"            ErrorHandler.invalidCommandforInfoCommand();","lastModifiedDate":"2023-11-01"},{"lineNumber":469,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":470,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":471,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":472,"author":{"gitId":"rohitcube"},"content":"    public static void searchCommand(String userInput) {","lastModifiedDate":"2023-11-01"},{"lineNumber":473,"author":{"gitId":"rohitcube"},"content":"        if (!Parser.isValidKeywordInput(userInput)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":474,"author":{"gitId":"rohitcube"},"content":"            ErrorHandler.emptyKeywordforSearchCommand();","lastModifiedDate":"2023-11-01"},{"lineNumber":475,"author":{"gitId":"rohitcube"},"content":"            return;","lastModifiedDate":"2023-11-01"},{"lineNumber":476,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":477,"author":{"gitId":"rohitcube"},"content":"        String keywords \u003d userInput.substring(userInput.indexOf(\"search\") + 6);","lastModifiedDate":"2023-11-01"},{"lineNumber":478,"author":{"gitId":"rohitcube"},"content":"        JSONArray modulesToPrint \u003d Api.search(keywords, Api.listAllModules());","lastModifiedDate":"2023-11-01"},{"lineNumber":479,"author":{"gitId":"rohitcube"},"content":"        if (modulesToPrint.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":480,"author":{"gitId":"rohitcube"},"content":"            ErrorHandler.emptyArrayforSearchCommand();","lastModifiedDate":"2023-11-01"},{"lineNumber":481,"author":{"gitId":"rohitcube"},"content":"            return;","lastModifiedDate":"2023-11-01"},{"lineNumber":482,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":483,"author":{"gitId":"rohitcube"},"content":"        ModuleInfo.searchHeader();","lastModifiedDate":"2023-11-01"},{"lineNumber":484,"author":{"gitId":"rohitcube"},"content":"        ModuleInfo.printJsonArray(modulesToPrint);","lastModifiedDate":"2023-11-01"},{"lineNumber":485,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":486,"author":{"gitId":"rohitcube"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"SebasFok":119,"ryanlohyr":136,"rohitcube":231}},{"path":"src/main/java/seedu/duke/models/logic/CompletePreqs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.ModuleList;","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"CerIsaiah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"CerIsaiah"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"CerIsaiah"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"CerIsaiah"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"CerIsaiah"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"CerIsaiah"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"CerIsaiah"},"content":" * CompletePreqs checks which mods are unlocked once you finish a specific module","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"CerIsaiah"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"CerIsaiah"},"content":"public class CompletePreqs {","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"CerIsaiah"},"content":"    //Full list of mods with modulesWithPreqs","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"CerIsaiah"},"content":"    private HashMap\u003cString, List\u003cString\u003e\u003e modulesWithPreqs;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"CerIsaiah"},"content":"    private ArrayList\u003cString\u003e addToModulesCompleted;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"CerIsaiah"},"content":"    // To track modules that are already unlocked","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"CerIsaiah"},"content":"    private Set\u003cString\u003e unlockedModulesSet;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"CerIsaiah"},"content":"    public CompletePreqs(HashMap\u003cString, List\u003cString\u003e\u003e inputMods) {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"CerIsaiah"},"content":"        modulesWithPreqs \u003d new HashMap\u003c\u003e(inputMods);","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"CerIsaiah"},"content":"        unlockedModulesSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"CerIsaiah"},"content":"        addToModulesCompleted \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"CerIsaiah"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"CerIsaiah"},"content":"     * Create a list of completed mods, hardcoded from startup.","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"CerIsaiah"},"content":"     * @param list","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"CerIsaiah"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"CerIsaiah"},"content":"    public void initializeCompletedMods(ModuleList list) {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"CerIsaiah"},"content":"        addToModulesCompleted.addAll(list.getMainModuleList());","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"CerIsaiah"},"content":"        for (String mod : addToModulesCompleted) {","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"CerIsaiah"},"content":"            processModuleForUnlockingWithoutPrint(mod);","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"CerIsaiah"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"CerIsaiah"},"content":"     * Prints what mods have been unlocked after input","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"CerIsaiah"},"content":"     * @param moduleCompleted","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"CerIsaiah"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"CerIsaiah"},"content":"    public void getUnlockedMods(String moduleCompleted) {","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"CerIsaiah"},"content":"        // Check prerequisites of the moduleCompleted","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"CerIsaiah"},"content":"        if (modulesWithPreqs.containsKey(moduleCompleted)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"CerIsaiah"},"content":"            List\u003cString\u003e unmetPrerequisites \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"CerIsaiah"},"content":"            for (String preq : modulesWithPreqs.get(moduleCompleted)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"CerIsaiah"},"content":"                if (!addToModulesCompleted.contains(preq)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"CerIsaiah"},"content":"                    unmetPrerequisites.add(preq);","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"CerIsaiah"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"CerIsaiah"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"CerIsaiah"},"content":"            //Stops if a completedMod shouldn\u0027t be able to be completed with proper preqs","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"CerIsaiah"},"content":"            if (!unmetPrerequisites.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"                System.out.println(moduleCompleted +","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"                        \" cannot be marked as completed because of uncompleted prerequisites: \"","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"                        + unmetPrerequisites);","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"CerIsaiah"},"content":"                return;","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"CerIsaiah"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"CerIsaiah"},"content":"        //If its not marked as completed, properly add it to the list","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"CerIsaiah"},"content":"        if (!addToModulesCompleted.contains(moduleCompleted)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"CerIsaiah"},"content":"            addToModulesCompleted.add(moduleCompleted);","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"CerIsaiah"},"content":"        System.out.println(\"Mod completed: \" + moduleCompleted);","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"CerIsaiah"},"content":"        printUnlockedMods(moduleCompleted);","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"CerIsaiah"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"CerIsaiah"},"content":"     * This is only used for the first initalization of the mods.","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"CerIsaiah"},"content":"     * @param moduleCompleted","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"CerIsaiah"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"    private void processModuleForUnlockingWithoutPrint(String moduleCompleted) {","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"CerIsaiah"},"content":"        ArrayList\u003cString\u003e newMods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"CerIsaiah"},"content":"        for (String key : modulesWithPreqs.keySet()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"CerIsaiah"},"content":"            //If new unlocked mod isn\u0027t marked as complete or unlocked already","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"CerIsaiah"},"content":"            if (!unlockedModulesSet.contains(key) \u0026\u0026 !addToModulesCompleted.contains(key)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"CerIsaiah"},"content":"                boolean allPrerequisitesMet \u003d true;","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"CerIsaiah"},"content":"                for (String preq : modulesWithPreqs.get(key)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"CerIsaiah"},"content":"                    if (!addToModulesCompleted.contains(preq)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"CerIsaiah"},"content":"                        //Make sure preq isn\u0027t already marked as done","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"CerIsaiah"},"content":"                        allPrerequisitesMet \u003d false;","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"CerIsaiah"},"content":"                        break;","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"CerIsaiah"},"content":"                    }","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"CerIsaiah"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"CerIsaiah"},"content":"                if (allPrerequisitesMet) {","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"CerIsaiah"},"content":"                    newMods.add(key);","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"CerIsaiah"},"content":"                    unlockedModulesSet.add(key);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"CerIsaiah"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"CerIsaiah"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"CerIsaiah"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"CerIsaiah"},"content":"     * @param moduleCompleted","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"CerIsaiah"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"CerIsaiah"},"content":"    public void printUnlockedMods(String moduleCompleted) {","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"CerIsaiah"},"content":"        ArrayList\u003cString\u003e newlyUnlockedMods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"CerIsaiah"},"content":"        for (String key : modulesWithPreqs.keySet()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"CerIsaiah"},"content":"            //If new unlocked mod isn\u0027t marked as complete or unlocked already","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"CerIsaiah"},"content":"            if (!unlockedModulesSet.contains(key) \u0026\u0026 !addToModulesCompleted.contains(key)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"CerIsaiah"},"content":"                boolean allPrerequisitesMet \u003d true;","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"CerIsaiah"},"content":"                for (String preq : modulesWithPreqs.get(key)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"CerIsaiah"},"content":"                    if (!addToModulesCompleted.contains(preq)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"CerIsaiah"},"content":"                        //Make sure preq isn\u0027t already marked as done","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"CerIsaiah"},"content":"                        allPrerequisitesMet \u003d false;","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"CerIsaiah"},"content":"                        break;","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"CerIsaiah"},"content":"                    }","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"CerIsaiah"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"CerIsaiah"},"content":"                if (allPrerequisitesMet) {","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"CerIsaiah"},"content":"                    newlyUnlockedMods.add(key);","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"CerIsaiah"},"content":"                    unlockedModulesSet.add(key);","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"CerIsaiah"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"CerIsaiah"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"CerIsaiah"},"content":"        for (String mod : newlyUnlockedMods) {","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"CerIsaiah"},"content":"            System.out.println(mod + \" has been unlocked!\");","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"CerIsaiah"},"content":"    public void printModsCompleted(){","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"CerIsaiah"},"content":"        for (String mod: addToModulesCompleted){","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"CerIsaiah"},"content":"            System.out.println(mod + \"has been completed\");","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"CerIsaiah"},"content":"    public boolean checkModInput(String[] words, ModuleList list){","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"CerIsaiah"},"content":"        if (words.length \u003d\u003d 2){","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"janelleenqi"},"content":"            if (list.getMainModuleList().contains(words[1].toUpperCase())){","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"CerIsaiah"},"content":"                return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"CerIsaiah"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"CerIsaiah"},"content":"            System.out.println(\"Please enter a available mod: \");","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"CerIsaiah"},"content":"            list.printMainModuleList();","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"CerIsaiah"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"CerIsaiah"},"content":"        System.out.println(\"Please enter a available mod after the complete keyword\");","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"CerIsaiah"},"content":"        list.printMainModuleList();","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"CerIsaiah"},"content":"        return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"CerIsaiah"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"SebasFok":2,"ryanlohyr":7,"janelleenqi":1,"CerIsaiah":141}},{"path":"src/main/java/seedu/duke/models/logic/DataRepository.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.Major;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import java.io.File;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"public class DataRepository {","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves a list of modules requirements for a specified major.","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"     * @param major The major for which to retrieve requirements.","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"     * @return An ArrayList of module codes.","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"     * @throws RuntimeException If the specified major requirements file is not found.","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"    public static ArrayList\u003cString\u003e getRequirements(String major) {","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"            //add validation if wrong major?","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"            String fileName \u003d String.format(\"src/main/java/seedu/duke/models/data/%sRequirementsModuleCodes\", major);","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"            File f \u003d new File(fileName);","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"                String[] courseArray \u003d {","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"                    \"CG1111A\", \"MA1511\", \"MA1512\", \"CS1010\", \"GESS1000\",","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"                    \"GEC1000\", \"GEN2000\", \"ES2631\", \"GEA1000\", \"DTK1234\",","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"                    \"EG1311\", \"IE2141\", \"EE2211\", \"EG2501\", \"CDE2000\",","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"                    \"PF1101\", \"CG4002\", \"MA1508E\", \"EG2401A\", \"CP3880\",","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"                    \"CG2111A\", \"CS1231\", \"CG2023\", \"CG2027\", \"CG2028\",","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"                    \"CG2271\", \"ST2334\", \"CS2040C\", \"CS2113\", \"EE2026\", \"EE4204\"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"                };","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"                return new ArrayList\u003c\u003e(Arrays.asList(courseArray));","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e currentArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"                String currentLine \u003d s.nextLine();","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"                String[] words \u003d currentLine.split(\" \");","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"                if (!currentLine.isEmpty() \u0026\u0026 !currentLine.startsWith(\"*\")) { // not empty line, not title","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"                    currentArray.add(words[0]);","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"                }","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"            return currentArray;","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"     * Returns the file path for the requirements of a specified major.","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"     * @param major The major for which to retrieve the requirements file path.","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"     * @return The file path to the major\u0027s requirements file.","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"    public static String getFullRequirements(Major major) {","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"        return String.format(\"src/main/java/seedu/duke/models/data/%sRequirements\", major.toString());","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"ryanlohyr":39,"janelleenqi":26}},{"path":"src/main/java/seedu/duke/models/logic/MajorRequirements.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.Major;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.views.CommandLineView;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"public class MajorRequirements {","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"    private CommandLineView view;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"    private Major major;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"    public MajorRequirements(Major major) {","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"        this.major \u003d major;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"        view \u003d new CommandLineView();","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"    public void printRequiredModules(Major major) {","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"        if (major !\u003d Major.valueOf(\"CEG\")) {","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"            view.displayMessage(\"Sorry this major has not be included in our app yet.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"        view.displayMessage(","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"                \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"                \"║\\tModular Requirements for CEG                                                \\tUnits\\t║\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"                \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"                \"+-------------------------------------------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"                \"│\\tCommon Curriculum Requirements                                              \\t60\\t\\t│\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"                \"+-------------------------------------------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"                \"\\tGES1000 (Singapore Studies)                                                 \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"                \"\\tGEC1000 (Cultures and Connections)                                          \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"                \"\\tGEN2000 (Communities and Engagement)                                        \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"                \"\\tES2631 Critique \u0026 Communication of Thinking \u0026 Design (Critique \u0026 Expression)\\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCS1010 Programming Methodology (Digital Literacy)                           \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"                \"\\tGEA1000 Quantitative Reasoning with Data (Data Literacy)                    \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"                \"\\tDTK1234 Design Thinking (Design Thinking)                                   \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"                \"\\tEG1311 Design and Make (Maker Space)                                        \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"                \"\\tIE2141 Systems Thinking and Dynamics (Systems Thinking)                     \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"                \"\\tEE2211 Introduction to Machine Learning (Artificial Intelligence)           \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCDE2501 Liveable Cities (Sustainable Futures)                               \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCDE2000 (Creating Narratives)                                               \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"                \"\\tPF1101 Fundamentals of Project Management (Project Management)              \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCG4002 Computer Engineering Capstone Project 1 (Integrated Project)         \\t8\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"                \"+-------------------------------------------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"                \"│\\tProgramme Requirements                                                      \\t60\\t\\t│\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"                \"+-------------------------------------------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"                \" ~~\\tEngineering Core                                                            \\t20\\t ~~\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"                \"\\tMA1511 Engineering Calculus                                                 \\t2\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"                \"\\tMA1512 Differential Equations for Engineering                               \\t2\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"                \"\\tMA1508E Linear Algebra for Engineering                                      \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"                \"\\tEG2401A Engineering Professionalism                                         \\t2\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCP3880 Advanced Technology Attachment Programme                             \\t12\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"                \" ~~\\tCEG Major                                                                   \\t40\\t ~~\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCG1111A Engineering Principles and Practice I                               \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCG2111A Engineering Principles and Practice II                              \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCS1231 Discrete Structures                                                  \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCG2023 Signals \u0026 Systems                                                    \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCG2027 Transistor-level Digital Circuit                                     \\t2\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCG2028 Computer Organization                                                \\t2\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCG2271 Real-time Operating System                                           \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCS2040C Data Structures and Algorithms                                      \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCS2113 Software Engineering \u0026 Object-Oriented Programming                   \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"                \"\\tEE2026 Digital Design                                                       \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"                \"\\tEE4204 Computer Networks                                                    \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"                \"+-------------------------------------------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"                \"│\\tUnrestricted Electives                                                      \\t40\\t\\t│\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"                \"+-------------------------------------------------------------------------------------------+\");","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"janelleenqi":75}},{"path":"src/main/java/seedu/duke/models/logic/ModulesLeft.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.ModuleList;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.views.CommandLineView;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"public class ModulesLeft {","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"    private CommandLineView view;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"    private ModuleList modulesMajor;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"    private ModuleList modulesTaken;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"    public ModulesLeft(ModuleList modulesMajor, ModuleList modulesTaken) {","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"        this.view \u003d new CommandLineView();","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"        this.modulesMajor \u003d modulesMajor;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"        this.modulesTaken \u003d modulesTaken;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"     * Computes and returns the list of modules that are left in the ModuleList modulesMajor","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"     * after subtracting the modules in the ModuleList modulesTaken.","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"     * @author janelleenqi","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"     * @return An ArrayList of module codes representing the modules left after the subtraction.","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    public ArrayList\u003cString\u003e listModulesLeft() {","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"        ModuleList modulesLeft \u003d new ModuleList();","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"            modulesLeft.getDifference(modulesMajor, modulesTaken);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"            return modulesLeft.getMainModuleList();","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"        } catch (InvalidObjectException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"            view.displayMessage(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"        return null;","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"janelleenqi":39}},{"path":"src/main/java/seedu/duke/models/logic/ScheduleGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Queue;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.Api.getModulePrereqBasedOnCourse;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.DataRepository.getRequirements;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"public class ScheduleGenerator {","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"    //Topological sort to create schedule","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"    public static ArrayList\u003cString\u003e generateRecommendedSchedule(String course){","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e requirements \u003d getRequirements(course);","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"        HashMap\u003cString, Integer\u003e degreeMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"        Queue\u003cString\u003e q \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e schedule \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"        HashMap\u003cString, ArrayList\u003cString\u003e\u003e adjacencyList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"        //initialisation","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"        for(String requirement: requirements) {","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"            adjacencyList.put(requirement, new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"            degreeMap.put(requirement, 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"        for (String requirement : requirements) {","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e prereqArray \u003d getModulePrereqBasedOnCourse(requirement, course);","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"            if (prereqArray \u003d\u003d null) {","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"                prereqArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"            //we need to create an adjacency list to add all the connections","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"            // from pre req -\u003e item","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"            for (String s : prereqArray) {","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"                adjacencyList.get(s).add(requirement);","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"                Integer value \u003d degreeMap.get(requirement) + 1;","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"                degreeMap.put(requirement, value);","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"        for (String key : degreeMap.keySet()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"            Integer value \u003d degreeMap.get(key);","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"            if(value \u003d\u003d 0){","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"                q.offer(key);","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"        while(!q.isEmpty()){","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"            String curr \u003d q.poll();","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"            schedule.add(curr);","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e currReq \u003d adjacencyList.get(curr);","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"            for (String s : currReq) {","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"                int num \u003d degreeMap.get(s) - 1;","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"                degreeMap.put(s, num);","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"                if (num \u003d\u003d 0) {","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"                    q.offer(s);","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"        return schedule;","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"ryanlohyr":68}},{"path":"src/main/java/seedu/duke/models/schema/Major.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":" * The `Major` enum represents different majors that can be selected by our application.","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"public enum Major {","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"    CEG","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"SebasFok":6,"ryanlohyr":1,"janelleenqi":1}},{"path":"src/main/java/seedu/duke/models/schema/ModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.models.logic.DataRepository.getRequirements;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":" * A class representing a list of modules and providing operations to manage them.","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"public class ModuleList {","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"    private ArrayList\u003cString\u003e mainModuleList;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"    private int numberOfModules;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a ModuleList based on the module requirements for a specific major.","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"     * @param major The major for which module requirements are needed.","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    public ModuleList(Major major) {","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"        mainModuleList \u003d getRequirements(major.toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"        for (String ignored : mainModuleList) {","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"            numberOfModules +\u003d 1;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a ModuleList from a space-separated string of modules.","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"     * @param modules A space-separated string of module codes.","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"    public ModuleList(String modules) {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"            String[] moduleArray \u003d modules.split(\" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"            mainModuleList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"            numberOfModules \u003d 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"            for (String module : moduleArray) {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"                mainModuleList.add(module);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"                numberOfModules +\u003d 1;","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"            new ModuleList();","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"     * Constructs an empty ModuleList.","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"    public ModuleList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"        mainModuleList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"        numberOfModules \u003d 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"    public void addModule (String module) {","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"        mainModuleList.add(module);","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"     * Computes the difference between two ModuleList objects (A - B) and updates the current list.","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"     * @author janelleenqi","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"     * @param a The first ModuleList.","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"     * @param b The second ModuleList.","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"     * @throws InvalidObjectException If either A or B is null.","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"    public void getDifference (ModuleList a, ModuleList b) throws InvalidObjectException {","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"        //A - B","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"        if (a \u003d\u003d null || b \u003d\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"            throw new InvalidObjectException(\"Null Inputs\");","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"        mainModuleList.clear();","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"        for (String moduleA : a.mainModuleList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"            try {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"                if (!b.exists(moduleA)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"                    mainModuleList.add(moduleA);","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"                    numberOfModules +\u003d 1;","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"                }","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"            } catch (InvalidObjectException e) {","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"                System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"     * Checks if a module exists in the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"     * @author janelleenqi","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"     * @param moduleA The module to check for existence.","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"     * @return true if the module exists in the list; false otherwise.","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"     * @throws InvalidObjectException If moduleA is null.","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"    public boolean exists(String moduleA) throws InvalidObjectException {","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"        if (moduleA \u003d\u003d null || mainModuleList \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"            throw new InvalidObjectException(\"Null Inputs\");","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"        for (String moduleB : mainModuleList) {","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"            if (moduleA.equals(moduleB)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"                return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"        return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves the list of modules.","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"     * @author janelleenqi","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"     * @return The ArrayList containing the modules.","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"    public ArrayList\u003cString\u003e getMainModuleList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"        assert mainModuleList !\u003d null: \"null mainModuleList\";","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"        return mainModuleList;","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"CerIsaiah"},"content":"    public void printMainModuleList(){","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"CerIsaiah"},"content":"        for (String mod: mainModuleList){","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"CerIsaiah"},"content":"            System.out.print(mod + \" \");","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"CerIsaiah"},"content":"        System.out.println();","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves the number of modules.","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"janelleenqi"},"content":"     * @return The number of modules.","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"janelleenqi"},"content":"    public int getNumberOfModules() {","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"janelleenqi"},"content":"        assert numberOfModules \u003e\u003d 0: \"negative numberOfModules\";","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"janelleenqi"},"content":"        return numberOfModules;","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"SebasFok"},"content":"     * Changes the number of modules by the specified difference.","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"SebasFok"},"content":"     * @param difference The difference by which to change the number of modules.","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"SebasFok"},"content":"     *                   A positive value increases the number, while a negative value decreases it.","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"SebasFok"},"content":"    public void changeNumberOfModules(int difference) {","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"SebasFok"},"content":"        numberOfModules +\u003d difference;","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"SebasFok":11,"ryanlohyr":8,"janelleenqi":121,"CerIsaiah":7}},{"path":"src/main/java/seedu/duke/models/schema/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.exceptions.FailPrereqException;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.models.logic.Api.doesModuleExist;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.models.logic.Api.satisfiesAllPrereq;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":" * The `Schedule` class represents a student\u0027s course schedule and extends the `ModuleList` class.","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":" * It allows a student to manage and manipulate their enrolled modules across multiple semesters.","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"public class Schedule extends ModuleList {","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"    private static final int MAXIMUM_SEMESTERS \u003d 8;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"    protected int[] modulesPerSem;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"     * Constructs a new `Schedule` with the provided modules and distribution across semesters.","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"     * @param modules      A string containing module codes representing the student\u0027s schedule.","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"SebasFok"},"content":"     * @param modulesPerSem An array indicating the distribution of modules across semesters.","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"SebasFok"},"content":"    public Schedule(String modules, int[] modulesPerSem) {","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"SebasFok"},"content":"        super(modules);","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"        this.modulesPerSem \u003d modulesPerSem;","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"     * Constructs a new, empty `Schedule` with no modules and a default semester distribution.","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"SebasFok"},"content":"    public Schedule() {","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"SebasFok"},"content":"        super();","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"        this.modulesPerSem \u003d new int[]{0, 0, 0, 0, 0, 0, 0, 0};","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"     * Retrieves the maximum number of semesters allowed in a student\u0027s course schedule.","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"     * @return The maximum number of semesters allowed.","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"    public static int getMaximumSemesters() {","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"SebasFok"},"content":"        return MAXIMUM_SEMESTERS;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"    public void addRecommendedScheduleListToSchedule(ArrayList\u003cString\u003e scheduleToAdd){","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"        final int modsToAddPerSem \u003d 5;","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"        int currentIndexOfMod \u003d 0;","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"        int currentSem \u003d 1;","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"        for (String module : scheduleToAdd) {","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"            // Check if the module fulfill pre req, if not we move it to next sem","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"            // ModuleList completedModules \u003d new ModuleList(String.join(\" \", getMainModuleList()));","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"            int indexToAdd \u003d 0;","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"            for (int i \u003d 1; i \u003c currentSem; i++) {","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"                indexToAdd +\u003d this.modulesPerSem[i - 1];","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"            //Sub list as we only want modules before the current target semester","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"            List\u003cString\u003e completedModulesArray \u003d getMainModuleList().subList(0, (indexToAdd));","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"            ModuleList completedModules \u003d new ModuleList(String.join(\" \", completedModulesArray));","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"            if(!satisfiesAllPrereq(module,completedModules)){","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"                currentSem +\u003d 1;","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"                currentIndexOfMod \u003d 0;","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"SebasFok"},"content":"            try {","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"                addModule(module, currentSem);","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"SebasFok"},"content":"            } catch (InvalidObjectException | IllegalArgumentException | FailPrereqException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"SebasFok"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"            currentIndexOfMod +\u003d 1;","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"            if(currentIndexOfMod \u003e\u003d modsToAddPerSem){","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"                currentIndexOfMod \u003d 0;","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"                currentSem +\u003d 1;","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"SebasFok"},"content":"     * Adds a module to the schedule for a specified semester.","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"SebasFok"},"content":"     * @param module The module code to be added.","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"SebasFok"},"content":"     * @param targetSem The target semester (an integer from 1 to 8) in which to add the module.","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"SebasFok"},"content":"     * @throws IllegalArgumentException If the provided semester is out of the valid range (1 to 8),","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"SebasFok"},"content":"     *     or if the module already exists in the schedule, or if the module is not valid.","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"SebasFok"},"content":"     * @throws InvalidObjectException If the module is null.","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"SebasFok"},"content":"     * @throws FailPrereqException If the prerequisites for the module are not satisfied","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"SebasFok"},"content":"    public void addModule(String module, int targetSem) throws IllegalArgumentException, InvalidObjectException,","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"SebasFok"},"content":"            FailPrereqException {","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"SebasFok"},"content":"        if (targetSem \u003c 1 || targetSem \u003e MAXIMUM_SEMESTERS) {","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"SebasFok"},"content":"            throw new IllegalArgumentException(\"Please select an integer from 1 to 8 for semester selection\");","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"SebasFok"},"content":"            if (exists(module)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"SebasFok"},"content":"                throw new IllegalArgumentException(\"Module already exists in the schedule\");","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"SebasFok"},"content":"        } catch (InvalidObjectException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"SebasFok"},"content":"            throw new InvalidObjectException(\"Module cannot be null\");","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"SebasFok"},"content":"        int indexToAdd \u003d 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"SebasFok"},"content":"        for (int i \u003d 1; i \u003c targetSem; i++) {","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"SebasFok"},"content":"            indexToAdd +\u003d this.modulesPerSem[i - 1];","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"        //Sub list as we only want modules before the current target semester","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"SebasFok"},"content":"        List\u003cString\u003e completedModulesArray \u003d getMainModuleList().subList(0, (indexToAdd));","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"SebasFok"},"content":"        ModuleList completedModules \u003d new ModuleList(String.join(\" \", completedModulesArray));","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"SebasFok"},"content":"            if (satisfiesAllPrereq(module, completedModules)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"SebasFok"},"content":"                this.getMainModuleList().add(indexToAdd, module);","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"SebasFok"},"content":"                modulesPerSem[targetSem - 1] +\u003d 1;","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"SebasFok"},"content":"                changeNumberOfModules(1);","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"SebasFok"},"content":"                return;","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":125,"author":{"gitId":"SebasFok"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"SebasFok"},"content":"            throw new IllegalArgumentException(\"Please select a valid module\");","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":128,"author":{"gitId":"SebasFok"},"content":"        throw new FailPrereqException(\"Unable to add module as prerequisites not satisfied for: \" + module);","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":130,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"SebasFok"},"content":"     * Deletes a module from the schedule by its module code.","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"SebasFok"},"content":"     * @param module The module code to be deleted from the schedule.","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"SebasFok"},"content":"     * @throws FailPrereqException If the module to be deleted is a prerequisite for other modules in the schedule.","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"SebasFok"},"content":"     * @throws IllegalArgumentException If the provided module code is not valid, the module is not in the schedule","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"SebasFok"},"content":"    public void deleteModule(String module) throws FailPrereqException, IllegalArgumentException {","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"SebasFok"},"content":"        int targetIndex \u003d getMainModuleList().indexOf(module);","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"SebasFok"},"content":"        if (!doesModuleExist(module)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"SebasFok"},"content":"            throw new IllegalArgumentException(\"Please select a valid module\");","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":145,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"SebasFok"},"content":"        if (targetIndex \u003d\u003d -1) {","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"SebasFok"},"content":"            throw new IllegalArgumentException(\"Module is not in schedule\");","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"SebasFok"},"content":"        int targetSem \u003d 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"SebasFok"},"content":"        int moduleCount \u003d modulesPerSem[0];","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"SebasFok"},"content":"        while ((moduleCount - 1) \u003c targetIndex) {","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"SebasFok"},"content":"            moduleCount +\u003d modulesPerSem[targetSem];","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"SebasFok"},"content":"            targetSem +\u003d 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"SebasFok"},"content":"        int nextSemStartingIndex \u003d moduleCount;","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"SebasFok"},"content":"        int lastModuleIndex \u003d getNumberOfModules() - 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"SebasFok"},"content":"        List\u003cString\u003e completedModulesArray \u003d getMainModuleList().subList(0, nextSemStartingIndex);","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"SebasFok"},"content":"        ModuleList completedModules \u003d new ModuleList(String.join(\" \", completedModulesArray));","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"SebasFok"},"content":"        completedModules.getMainModuleList().remove(module);","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"SebasFok"},"content":"        List\u003cString\u003e modulesAheadArray;","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"SebasFok"},"content":"            modulesAheadArray \u003d getMainModuleList().subList(nextSemStartingIndex, lastModuleIndex + 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"SebasFok"},"content":"        } catch (IndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"SebasFok"},"content":"            modulesAheadArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"SebasFok"},"content":"            for (String moduleAhead : modulesAheadArray){","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"SebasFok"},"content":"                if (!satisfiesAllPrereq(moduleAhead, completedModules)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"SebasFok"},"content":"                    throw new FailPrereqException(\"Unable to delete module. This module is a prerequisite for \"","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"SebasFok"},"content":"                            + moduleAhead);","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"SebasFok"},"content":"                }","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"SebasFok"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"SebasFok"},"content":"            // This catch should never occur as it should not be possible to add an invalid module","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"SebasFok"},"content":"            assert false;","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"SebasFok"},"content":"            throw new IllegalArgumentException(\"Invalid Module in Schedule\");","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"SebasFok"},"content":"        getMainModuleList().remove(module);","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"SebasFok"},"content":"        modulesPerSem[targetSem - 1] -\u003d 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"SebasFok"},"content":"        changeNumberOfModules(-1);","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"SebasFok"},"content":"     * Prints the student\u0027s course schedule, displaying modules organized by semesters.","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":195,"author":{"gitId":"SebasFok"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":196,"author":{"gitId":"SebasFok"},"content":"    public void printMainModuleList() {","lastModifiedDate":"2023-10-30"},{"lineNumber":197,"author":{"gitId":"SebasFok"},"content":"        int moduleCounter \u003d 0;","lastModifiedDate":"2023-10-30"},{"lineNumber":198,"author":{"gitId":"SebasFok"},"content":"        for (int i \u003d 0; i \u003c modulesPerSem.length; i++) {","lastModifiedDate":"2023-10-30"},{"lineNumber":199,"author":{"gitId":"SebasFok"},"content":"            System.out.print(\"Sem \" + (i + 1) + \": \");","lastModifiedDate":"2023-10-30"},{"lineNumber":200,"author":{"gitId":"SebasFok"},"content":"            for (int j \u003d 0; j \u003c modulesPerSem[i]; j++) {","lastModifiedDate":"2023-10-30"},{"lineNumber":201,"author":{"gitId":"SebasFok"},"content":"                System.out.print(getMainModuleList().get(moduleCounter) + \" \");","lastModifiedDate":"2023-10-30"},{"lineNumber":202,"author":{"gitId":"SebasFok"},"content":"                moduleCounter++;","lastModifiedDate":"2023-10-30"},{"lineNumber":203,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":204,"author":{"gitId":"SebasFok"},"content":"            System.out.println();","lastModifiedDate":"2023-10-30"},{"lineNumber":205,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":206,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":207,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"SebasFok":175,"ryanlohyr":32}},{"path":"src/main/java/seedu/duke/models/schema/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":" * The Student class represents a student with a name, major, and module schedule.","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"public class Student {","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"    private String name;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"    private Major major;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"    private Schedule schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"     * Constructs a student with a name, major, and module schedule.","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"     * @param name     The name of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"     * @param major    The major of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"     * @param schedule The module schedule of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"    public Student(String name, Major major, Schedule schedule) {","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"        this.major \u003d major;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"SebasFok"},"content":"     * Constructs a student with a null name, null major, and an empty module schedule.","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"    public Student() {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"        this.name \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"        this.major \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"        this.schedule \u003d new Schedule();","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"SebasFok"},"content":"     * Sets the class schedule of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"     * @param schedule The new module schedule.","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"    public void setSchedule(Schedule schedule) {","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"     * Retrieves the module schedule of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"     * @return The module schedule of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"SebasFok"},"content":"    public Schedule getSchedule() {","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"SebasFok"},"content":"        return schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"SebasFok"},"content":"     * Retrieves the name of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"SebasFok"},"content":"     * @return The name of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"SebasFok"},"content":"    public String getName() {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"SebasFok"},"content":"        return name;","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"SebasFok"},"content":"     * Retrieves the major of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"SebasFok"},"content":"     * @return The major of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"SebasFok"},"content":"     * @throws NullPointerException If the major has not been set (i.e., it is `null`).","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"    public Major getMajor() throws NullPointerException {","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"        if (major \u003d\u003d null) {","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"            throw new NullPointerException();","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"SebasFok"},"content":"        return major;","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"SebasFok"},"content":"     * Sets the name of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"SebasFok"},"content":"     * @param name The new name of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"SebasFok"},"content":"    public void setName(String name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"SebasFok"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"SebasFok"},"content":"     * Sets the major of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"SebasFok"},"content":"     * @param major The new major to set.","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"SebasFok"},"content":"    public void setMajor(Major major) {","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"SebasFok"},"content":"        this.major \u003d major;","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"SebasFok":89,"ryanlohyr":1,"janelleenqi":4}},{"path":"src/main/java/seedu/duke/utils/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.utils;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.Major;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.views.ErrorHandler;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"public class Parser {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"     * Checks if the given academic year input is valid.","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"     * The academic year should be in the format \"Yn/Sx\", where \u0027n\u0027 represents the year","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"     * and \u0027x\u0027 represents the semester (e.g., Y1/S1, Y2/S2).","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"     * @author @ryanlohyr","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"     * @param userInput The academic year input to be validated.","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"     * @return true if the input is a valid academic year, false otherwise.","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"     * @throws IllegalArgumentException if the input format is incorrect or if the year or semester is invalid.","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"    public static boolean isValidAcademicYear( String userInput ) {","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"            String[] parts \u003d userInput.split(\"/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"            if(parts.length !\u003d 2){","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"                throw new IllegalArgumentException(\"Needs to be in format of Y2/S1\");","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"            String year \u003d parts[0].toUpperCase();","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"            String semester \u003d parts[1].toUpperCase();","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"            //last year","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"            if(year.equals(\"Y4\") \u0026\u0026 semester.equals(\"S2\")){","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"                throw new IllegalArgumentException(\"Its your last sem!! A bit too late ya....\");","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"            //validate semester","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"            if(!semester.equals(\"S1\") \u0026\u0026 !semester.equals(\"S2\")){","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"                throw new IllegalArgumentException(\"Invalid Semester\");","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"            //validate year","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"            if (!(year.equals(\"Y1\") || year.equals(\"Y2\") || year.equals(\"Y3\") || year.equals(\"Y4\"))) {","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"                // The input is not \"Y1,\" \"Y2,\" \"Y3,\" or \"Y4\"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"                throw new IllegalArgumentException(\"Invalid Year\");","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"rohitcube"},"content":"     * Checks the validity of user input based on the provided command and words array.","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"rohitcube"},"content":"     * @param command The command provided by the user.","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"rohitcube"},"content":"     * @param words   An array of words parsed from the user input.","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"rohitcube"},"content":"     * @return        True if the input is valid, false otherwise.","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"    public static boolean isValidInput(String command, String[] words) {","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"        switch (command) {","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"        case \"prereq\": {","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"            if (words.length \u003c 2) {","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"                ErrorHandler.invalidInput();","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"        case \"recommend\": {","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"            if (words.length \u003c 2) {","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"                ErrorHandler.invalidInput();","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"            if (!Objects.equals(words[1].toUpperCase(), \"CEG\")){","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"                ErrorHandler.invalidInput();","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"SebasFok"},"content":"        case \"major\": {","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"SebasFok"},"content":"            if (words.length \u003d\u003d 1) {","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"SebasFok"},"content":"                return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"SebasFok"},"content":"            if (words.length \u003e 2) {","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"SebasFok"},"content":"                ErrorHandler.invalidMajorFormat();","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"SebasFok"},"content":"                return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"SebasFok"},"content":"            try {","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"SebasFok"},"content":"                Major.valueOf(words[1].toUpperCase());","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"SebasFok"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"SebasFok"},"content":"                String availableMajors \u003d Arrays.toString(Major.values());","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"SebasFok"},"content":"                ErrorHandler.invalidMajor(availableMajors);","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"SebasFok"},"content":"                return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"SebasFok"},"content":"            break;","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"SebasFok"},"content":"        case \"add\": {","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"SebasFok"},"content":"            if (words.length !\u003d 3) {","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"SebasFok"},"content":"                ErrorHandler.invalidAddFormat();","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"SebasFok"},"content":"                return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"SebasFok"},"content":"            try {","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"SebasFok"},"content":"                Integer.parseInt(words[2]);","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"SebasFok"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"SebasFok"},"content":"                ErrorHandler.invalidSemester();","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"SebasFok"},"content":"                return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"SebasFok"},"content":"            break;","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"SebasFok"},"content":"        case \"delete\": {","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"SebasFok"},"content":"            if (words.length !\u003d 2) {","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"SebasFok"},"content":"                ErrorHandler.invalidDeleteFormat();","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"SebasFok"},"content":"                return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"SebasFok"},"content":"            break;","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"ryanlohyr"},"content":"        case \"test2\": {","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"ryanlohyr"},"content":"            if (words.length \u003c 21) {","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"rohitcube"},"content":"        case \"info\": {","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"rohitcube"},"content":"            if (words.length \u003c 2) {","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"rohitcube"},"content":"                ErrorHandler.emptyInputforInfoCommand();","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"rohitcube"},"content":"                return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"rohitcube"},"content":"            if (!words[1].equals(\"description\") \u0026\u0026 !words[1].equals(\"workload\")","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"rohitcube"},"content":"                    \u0026\u0026 !words[1].equals(\"all\") \u0026\u0026 !words[1].equals(\"requirements\")) {","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"rohitcube"},"content":"                ErrorHandler.invalidCommandforInfoCommand();","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"rohitcube"},"content":"                return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"rohitcube"},"content":"            break;","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"ryanlohyr"},"content":"        default: {","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"ryanlohyr"},"content":"            return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"ryanlohyr"},"content":"        return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"rohitcube"},"content":"     * Checks the validity of keyword input for a search command.","lastModifiedDate":"2023-11-01"},{"lineNumber":147,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"rohitcube"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"rohitcube"},"content":"     * @param userInput The user input string containing the search command and keywords.","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"rohitcube"},"content":"     * @return          True if the keyword input is valid, false otherwise.","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":152,"author":{"gitId":"rohitcube"},"content":"    public static boolean isValidKeywordInput(String userInput) {","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"rohitcube"},"content":"        String keywords \u003d userInput.substring(userInput.indexOf(\"search\") + 6);","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"rohitcube"},"content":"        // need to add a function to make search case-insensitive","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"rohitcube"},"content":"        return !keywords.trim().isEmpty();","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":158,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"SebasFok":40,"ryanlohyr":86,"rohitcube":33}},{"path":"src/main/java/seedu/duke/views/CommandLineView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.views;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.Major;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.models.logic.Api.getModulePrereqBasedOnCourse;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"public class CommandLineView {","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"    public void displayWelcome(){","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"What is your name?\");","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"    public void handleMajorMessage(int userInputLength, Major major) {","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"        assert (userInputLength \u003d\u003d 1 || userInputLength \u003d\u003d 2);","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"        if (userInputLength \u003d\u003d 1) {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"            if (major \u003d\u003d null) {","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"SebasFok"},"content":"                displayMessage(\"No major selected!\");","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"                return;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"SebasFok"},"content":"            displayMessage(\"Current major is \" + major + \".\");","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"            return;","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"        displayMessage(\"Major \" + major + \" selected!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"SebasFok"},"content":"    public void showPrereqCEG(String module) {","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"This module\u0027s prerequisites are \"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"SebasFok"},"content":"                + getModulePrereqBasedOnCourse(module.toUpperCase(),\"CEG\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"    public void displaySuccessfulAddMessage() {","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"        displayMessage(\"Module Successfully Added\");","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"    public void displaySuccessfulDeleteMessage() {","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"        displayMessage(\"Module Successfully Deleted\");","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"SebasFok"},"content":"     * Display a message to the command line view.","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"SebasFok"},"content":"     * @param o The object to be displayed.","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"SebasFok"},"content":"    public void displayMessage(Object o) {","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"SebasFok"},"content":"        System.out.println(o);","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"    public void printNewline(){","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println();","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"SebasFok":40,"ryanlohyr":18,"janelleenqi":4}},{"path":"src/main/java/seedu/duke/views/ErrorHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.views;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"public class ErrorHandler {","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"    public static void invalidInput(){","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"Invalid Input provided\");","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"    public static void invalidMajorFormat() {","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"Please select a major using this format: major [major]\");","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"To check your current major, type: major\");","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"    public static void invalidMajor(String availableMajors) {","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"Please select a major from this list: \" + availableMajors);","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"    public static void invalidAddFormat() {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"Please add a module using this format: add [module code] [semester]\");","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"    public static void invalidSemester() {","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"Please select an integer from 1 to 8 for semester selection\");","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"    public static void invalidDeleteFormat() {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"Please delete a module using this format: delete [module code]\");","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"rohitcube"},"content":"    public static void emptyInputforInfoCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"rohitcube"},"content":"        System.out.println(\"Empty input detected. Please enter a valid input after the info command.\" +","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"rohitcube"},"content":"                \" (E.g description, workload, all)\");","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"rohitcube"},"content":"    public static void invalidCommandforInfoCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"rohitcube"},"content":"        System.out.println(\"Please enter a valid command after the info command. (E.g description, workload, all)\");","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"rohitcube"},"content":"    public static void emptyKeywordforSearchCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"rohitcube"},"content":"        System.out.println(\"Empty input detected. Please enter a valid keyword after the search command.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"rohitcube"},"content":"    public static void emptyArrayforSearchCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"rohitcube"},"content":"        System.out.println(\"Oops! Your search results came up empty. Please try searching with different keywords.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"    public static void emptyMajor() {","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(\"Major has not been provided yet.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"SebasFok":18,"ryanlohyr":7,"janelleenqi":4,"rohitcube":18}},{"path":"src/main/java/seedu/duke/views/ModuleInfo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rohitcube"},"content":"package seedu.duke.views;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.JSONArray;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"rohitcube"},"content":"public class ModuleInfo {","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"rohitcube"},"content":"    public static void printModule(JSONObject module) {","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"rohitcube"},"content":"        System.out.println(module);","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"rohitcube"},"content":"    public static void print(String output) {","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"rohitcube"},"content":"        System.out.println(output);","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"rohitcube"},"content":"    public static void printLine() {","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"rohitcube"},"content":"        System.out.println(\"_________________________________________\");","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"rohitcube"},"content":"    public static void printJsonArray(JSONArray modules) {","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"rohitcube"},"content":"        for (Object module: modules) {","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"rohitcube"},"content":"            JSONObject castedModule \u003d (JSONObject) module;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"rohitcube"},"content":"            print(\"Title: \" + (String)castedModule.get(\"title\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"rohitcube"},"content":"            print(\"Module Code: \" + (String)castedModule.get(\"moduleCode\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"rohitcube"},"content":"            printLine();","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"rohitcube"},"content":"    public static void searchHeader() {","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"rohitcube"},"content":"        printLine();","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"rohitcube"},"content":"        print(\"These are the modules that contain your keyword in the title:\");","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"rohitcube"},"content":"        print(\"\");","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"rohitcube"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"rohitcube":34}},{"path":"src/main/java/seedu/duke/views/UnknownCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rohitcube"},"content":"package seedu.duke.views;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"rohitcube"},"content":"public class UnknownCommandException extends Exception{","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"rohitcube"},"content":"    public UnknownCommandException(String command) {","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"rohitcube"},"content":"        super(\"Unknown command: \" + command);","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"rohitcube"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"rohitcube":7}},{"path":"src/test/java/seedu/duke/ApiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rohitcube"},"content":"package seedu.duke;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.JSONArray;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.logic.Api;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"rohitcube"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"rohitcube"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"rohitcube"},"content":"import seedu.duke.views.ModuleInfo;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"rohitcube"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"rohitcube"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"rohitcube"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"rohitcube"},"content":"public class ApiTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"rohitcube"},"content":"    void testGetModuleInfo_shouldReturnTrueForCS2113() {","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"rohitcube"},"content":"        String correctModuleInfo \u003d \"\\\"description\\\":\\\"This course introduces the necessary skills for systematic \" +","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"rohitcube"},"content":"                \"and rigorous development of software systems. It covers\";","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"rohitcube"},"content":"        String moduleCode \u003d \"CS2113\";","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"rohitcube"},"content":"        String moduleInfo \u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"rohitcube"},"content":"        moduleInfo \u003d Objects.requireNonNull(Api.getFullModuleInfo(moduleCode)).toJSONString();","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"rohitcube"},"content":"        assertNotNull(moduleInfo, \"Module info should not be null\");","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"rohitcube"},"content":"        assertTrue(moduleInfo.contains(correctModuleInfo), \"Module info should contain relevant info\");","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"rohitcube"},"content":"    void testGetDescription_shouldReturnEquals() {","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"rohitcube"},"content":"        String correctDescription \u003d \"This course introduces the necessary skills for systematic and \" +","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"rohitcube"},"content":"                \"rigorous development of software systems. It covers requirements, design, implementation, \" +","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"rohitcube"},"content":"                \"quality assurance, and project management aspects of small-to-medium size multi-person software\" +","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"rohitcube"},"content":"                \" projects. The course uses the Object Oriented Programming paradigm. Students of this course will \" +","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"rohitcube"},"content":"                \"receive hands-on practice of tools commonly used in the industry, such as test automation tools,\" +","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"rohitcube"},"content":"                \" build automation tools, and code revisioning tools will be covered.\";","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"rohitcube"},"content":"        String moduleCode \u003d \"CS2113\";","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"rohitcube"},"content":"        String description \u003d Api.getDescription(moduleCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"rohitcube"},"content":"        assertEquals(correctDescription, description);","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"rohitcube"},"content":"    void testGetWorkload_shouldReturnCorrectValue() {","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"rohitcube"},"content":"        // uses unchecked or unsafe operations, Note: Recompile with -Xlint:unchecked for details.","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"rohitcube"},"content":"        JSONArray workload \u003d Api.getWorkload(\"CS2113\");","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"rohitcube"},"content":"        JSONArray jsonArray \u003d new JSONArray();","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"rohitcube"},"content":"        jsonArray.add(2);","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"rohitcube"},"content":"        jsonArray.add(1);","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"rohitcube"},"content":"        jsonArray.add(0);","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"rohitcube"},"content":"        jsonArray.add(3);","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"rohitcube"},"content":"        jsonArray.add(4);","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"rohitcube"},"content":"        String jsonString1 \u003d jsonArray.toJSONString();","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"rohitcube"},"content":"        String jsonString2 \u003d workload.toJSONString();","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"rohitcube"},"content":"        assertEquals(jsonString2, jsonString1);","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"rohitcube"},"content":"    void testListAllModules() {","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"rohitcube"},"content":"        Api.listAllModules();","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"rohitcube"},"content":"    void testSearchModules_emptyInput_expectedEmptyJsonArray() {","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"rohitcube"},"content":"        JSONArray modulesToPrint;","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"rohitcube"},"content":"        modulesToPrint \u003d Api.search(\"     \", Api.listAllModules());","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"rohitcube"},"content":"        assertEquals(0, modulesToPrint.size(), \"The JSON array should be empty.\");","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"rohitcube"},"content":"    void testSearchModules_invalidInput_expectedEmptyJsonArray() {","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"rohitcube"},"content":"        JSONArray modulesToPrint;","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"rohitcube"},"content":"        modulesToPrint \u003d Api.search(\"bs#4%ggh\", Api.listAllModules());","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"rohitcube"},"content":"        assertEquals(0, modulesToPrint.size(), \"The JSON array should be empty.\");","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"rohitcube"},"content":"    void testSearchModules_validInput_expectedJsonArray() {","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"rohitcube"},"content":"        JSONArray modulesToPrint;","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"rohitcube"},"content":"        modulesToPrint \u003d Api.search(\"Trustworthy Machine Learning\", Api.listAllModules());","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"rohitcube"},"content":"        JSONArray expectedArray \u003d new JSONArray();","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"rohitcube"},"content":"        JSONObject expectedObject \u003d new JSONObject();","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"rohitcube"},"content":"        expectedObject.put(\"moduleCode\", \"CS5562\");","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"rohitcube"},"content":"        JSONArray semester1 \u003d new JSONArray();","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"rohitcube"},"content":"        semester1.add(1);","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"rohitcube"},"content":"        expectedObject.put(\"semesters\", semester1);","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"rohitcube"},"content":"        expectedObject.put(\"title\", \"Trustworthy Machine Learning\");","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"rohitcube"},"content":"        expectedArray.add(expectedObject);","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"rohitcube"},"content":"        String expectedOutput \u003d expectedArray.toJSONString();","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"rohitcube"},"content":"        String output \u003d modulesToPrint.toJSONString();","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"rohitcube"},"content":"        assertEquals(expectedOutput, output, \"The string should be equal\");","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"rohitcube"},"content":"    void testPrintJsonArray() {","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"rohitcube"},"content":"        JSONArray modulesToPrint \u003d Api.search(\"Machine Learning\", Api.listAllModules());","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"rohitcube"},"content":"        ModuleInfo.printJsonArray(modulesToPrint);","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"rohitcube"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ryanlohyr":1,"rohitcube":101}},{"path":"src/test/java/seedu/duke/controllers/ModulePlannerControllerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.logic.DataRepository;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"class ModulePlannerControllerTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"    @AfterEach","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"    void computePaceWithoutArgument() {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"        ModulePlannerController controller \u003d new ModulePlannerController();","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"        String[] userInput \u003d {\"pace\"};","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"        int creditsLeft \u003d 60;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"        controller.computePace(userInput,creditsLeft);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"        // Capture the printed output","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(String.format(\"You currently have %s MCs till graduation\",creditsLeft), printedOutput);","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"    void computePaceInvalidArgument() {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"        ModulePlannerController controller \u003d new ModulePlannerController();","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"        String[] userInput \u003d {\"pace\",\"y2s1\"};","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"        int creditsLeft \u003d 60;","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"        controller.computePace(userInput,creditsLeft);","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"        // Capture the printed output","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(\"Needs to be in format of Y2/S1\", printedOutput);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"    void test() throws FileNotFoundException {","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"testttt\");","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(DataRepository.getRequirements(\"CEG\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(\"Needs to be in format of Y2/S1\", \"Needs to be in format of Y2/S1\");","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"    void computePaceInvalidSemester() {","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"        ModulePlannerController controller \u003d new ModulePlannerController();","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"        String[] userInput \u003d {\"pace\",\"y2/s10\"};","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"        int creditsLeft \u003d 60;","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"        controller.computePace(userInput,creditsLeft);","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"        // Capture the printed output","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(\"Invalid Semester\", printedOutput);","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"    void computePaceInvalidYear() {","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"        ModulePlannerController controller \u003d new ModulePlannerController();","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"        String[] userInput \u003d {\"pace\",\"y20/s1\"};","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"        int creditsLeft \u003d 60;","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"        controller.computePace(userInput,creditsLeft);","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"        // Capture the printed output","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(\"Invalid Year\", printedOutput);","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"    void computePaceValidYear() {","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"        ModulePlannerController controller \u003d new ModulePlannerController();","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"        String[] userInput \u003d {\"pace\",\"y2/s1\"};","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"        int creditsLeft \u003d 60;","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"        controller.computePace(userInput,creditsLeft);","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"        String test \u003d \"hi\";","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"        // Capture the printed output","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"        String line \u003d \"You have 60MCs for 5 semesters. Recommended Pace: 12MCs per sem until graduation\";","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(printedOutput, line);","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"SebasFok":1,"ryanlohyr":93,"janelleenqi":7}},{"path":"src/test/java/seedu/duke/models/logic/DataRepositoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"class DataRepositoryTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"    void validRequirementsReturned() {","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e cegRequirementArray \u003d DataRepository.getRequirements(\"CEG\");","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"        assert(!cegRequirementArray.isEmpty());","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"ryanlohyr":13}},{"path":"src/test/java/seedu/duke/models/logic/MajorRequirementsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.controllers.ModulePlannerController;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.Major;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"class MajorRequirementsTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"    @AfterEach","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"    void printRequiredModules_validMajor_expectRequiredModulesShown() {","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"        ModulePlannerController controller \u003d new ModulePlannerController();","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"        controller.getRequiredModules(Major.valueOf(\"CEG\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"        // Capture the printed output","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"        String printedOutput \u003d outputStream.toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"        assertTrue(printedOutput.startsWith(","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"                \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\")","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"        );","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"janelleenqi":42}},{"path":"src/test/java/seedu/duke/models/logic/ModulesLeftTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.Major;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.ModuleList;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"class ModulesLeftTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"    //success scenario: difference","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"    void listModulesLeftTest_expectArrayList() {","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"        Student student \u003d new Student();","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"        ModuleList modulesMajor \u003d null;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"        ModuleList modulesTaken \u003d new ModuleList(\"CG1111A CS1231 MA1511 MA1512 CS1010 GESS1000 GEC1000 \" +","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"                \"GEN2000 ES2631 GEA1000 DTK1234 EG1311 IE2141\");","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"        student.setMajor(Major.valueOf(\"CEG\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"        modulesMajor \u003d new ModuleList(student.getMajor());","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"        ModulesLeft modulesLeft \u003d new ModulesLeft(modulesMajor, modulesTaken);","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"        ModuleList expectedModulesLeft \u003d new ModuleList(\"EE2211 EG2501 CDE2000 PF1101 CG4002 MA1508E \" +","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"                \"EG2401A CP3880 CG2111A CG2023 CG2027 CG2028 CG2271 ST2334 CS2040C CS2113 EE2026 EE4204\");","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"        assertEquals(expectedModulesLeft.getMainModuleList(), modulesLeft.listModulesLeft());","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"janelleenqi":30}},{"path":"src/test/java/seedu/duke/models/logic/ScheduleGeneratorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.ScheduleGenerator.generateRecommendedSchedule;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"class ScheduleGeneratorTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    void validRecommendedSchedule() {","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e cegRequirementArray \u003d generateRecommendedSchedule(\"CEG\");","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"        assert(!cegRequirementArray.isEmpty());","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"ryanlohyr":15}},{"path":"src/test/java/seedu/duke/models/schema/ModuleListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"class ModuleListTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"    //success scenario 1: 2 ModuleList --\u003e difference","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"    void getDifferenceTest_twoModuleList_expectDifference() throws InvalidObjectException {","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"        ModuleList first \u003d new ModuleList(\"CS1231S CS2030S CS2040S CS2100 CS2101 CS2106 CS2109S CS3230\");","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"        ModuleList second \u003d new ModuleList(\"CS1231S CS2030S CS2040S MA1511\");","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"        ModuleList difference \u003d new ModuleList();","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"        ModuleList actualDifference \u003d new ModuleList(\"CS2100 CS2101 CS2106 CS2109S CS3230\");","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"        difference.getDifference(first, second);","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"        //test","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"        int numberOfModules \u003d difference.getNumberOfModules();","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"        for (int i \u003d 0; i \u003c numberOfModules; i +\u003d 1) {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"            assertEquals(difference.getMainModuleList().get(i), actualDifference.getMainModuleList().get(i));","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"    //success scenario 2: 1 empty ModuleList, 1 ModuleList --\u003e difference which is empty","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"    void getDifferenceTest_oneEmptyModuleListAnotherModuleList_expectEmptyDifference() throws InvalidObjectException {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"        ModuleList first \u003d new ModuleList();","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"        ModuleList second \u003d new ModuleList(\"CS1231S CS2030S CS2040S MA1511\");","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"        ModuleList difference \u003d new ModuleList();","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"        ModuleList actualDifference \u003d new ModuleList();","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"        difference.getDifference(first, second);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"        //test","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"        int numberOfModules \u003d difference.getNumberOfModules();","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"        for (int i \u003d 0; i \u003c numberOfModules; i +\u003d 1) {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"            assertEquals(difference.getMainModuleList().get(i), actualDifference.getMainModuleList().get(i));","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"    //failure scenario 1: null ModuleList input --\u003e throw exception","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"    void getDifferenceTest_nullModuleListInput_expectException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"        ModuleList second \u003d new ModuleList(\"CS1231S CS2030S CS2040S MA1511\");","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"        ModuleList difference \u003d new ModuleList();","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"        //test","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"        assertThrows(InvalidObjectException.class, () -\u003e difference.getDifference(null, second));","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"    //success scenario 1: 1 input String, 1 ModuleList that contains input String --\u003e true","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"    void existsTest_moduleListContainsModule_expectTrue() throws InvalidObjectException {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"        String inputString \u003d \"CS1231S\";","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"        ModuleList ml \u003d new ModuleList(\"CS1231S CS2030S CS2040S CS2100 CS2101 CS2106 CS2109S CS3230\");","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"        //test","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"        boolean result \u003d ml.exists(inputString);","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"        assertTrue(result);","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"    //success scenario 2: 1 input String, 1 ModuleList that does not contain input String --\u003e false","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"    void existsTest_moduleListDoesNotContainModule_expectFalse() throws InvalidObjectException {","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"        String inputString \u003d \"CS1231S\";","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"        ModuleList ml \u003d new ModuleList(\"CS2030S CS2040S CS2100 CS2101 CS2106 CS2109S CS3230\");","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"        //test","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"        boolean result \u003d ml.exists(inputString);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"        assertFalse(result);","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"    //failure scenario 1: input null string, 1 ModuleList --\u003e throw exception","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"    void existsTest_nullInput_expectException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"        ModuleList ml \u003d new ModuleList(\"CS2030S CS2040S CS2100 CS2101 CS2106 CS2109S CS3230\");","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"        //test","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"        assertThrows(InvalidObjectException.class, () -\u003e ml.exists(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"    //success scenario 3: input string, 1 empty ModuleList --\u003e false","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"    void existsTest_nullMainModuleList_expectException() throws InvalidObjectException {","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"        String inputString \u003d \"CS1231S\";","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"        ModuleList ml \u003d new ModuleList();","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"        //test","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"        boolean result \u003d ml.exists(inputString);","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"        assertFalse(result);","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"SebasFok":1,"janelleenqi":99}},{"path":"src/test/java/seedu/duke/models/schema/ScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.exceptions.FailPrereqException;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"class ScheduleTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"    //success scenario: String containing valid module, int containing valid targetSem","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"    //module satisfies prereqs --\u003e module added","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"    void addModuleTest_correctInputsSatisfyPrereqs_expectModuleAdded() throws Exception {","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule();","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"        schedule.addModule(\"CS1010\", 1);","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"        ArrayList\u003cString\u003e testArray\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"        testArray.add(\"CS1010\");","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"        assertEquals(testArray, schedule.getMainModuleList());","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"    //failure scenario 1: String containing valid module, int containing valid targetSem","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"SebasFok"},"content":"    //module does not satisfy prereqs --\u003e throw FailPrereqException","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"    void addModuleTest_correctInputsDoesNotSatisfyPrereqs_expectException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule(\"CS1231S MA1511\", new int[]{2, 0, 0, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"        assertThrows(FailPrereqException.class, () -\u003e schedule.addModule(\"CS2040C\", 1));","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"SebasFok"},"content":"    //failure scenario 2: String containing invalid module, int containing valid targetSem","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"SebasFok"},"content":"    //--\u003e throws IllegalArgumentException","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"    void addModuleTest_invalidModule_expectException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule(\"CS1231S MA1511\", new int[]{2, 0, 0, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e schedule.addModule(\"wrong\", 1));","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"    //failure scenario 3: String containing valid module, int containing invalid targetSem","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"    //--\u003e throws IllegalArgumentException","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"SebasFok"},"content":"    void addModuleTest_invalidTargetSem_expectException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule(\"CS1231S MA1511\", new int[]{2, 0, 0, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"SebasFok"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e schedule.addModule(\"CS2040C\", 1000));","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"SebasFok":51}},{"path":"src/test/java/seedu/duke/models/schema/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"public class StudentTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"SebasFok":5}}]
