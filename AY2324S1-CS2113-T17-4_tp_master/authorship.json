[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below: i love 2113 ","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"SebasFok":1,"-":63}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"rohitcube"},"content":"    implementation \u0027com.googlecode.json-simple:json-simple:1.1.1\u0027","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"rohitcube"},"content":"    implementation group: \u0027me.xdrop\u0027, name: \u0027fuzzywuzzy\u0027, version: \u00271.4.0\u0027","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveBaseName.set(\"duke\")","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"janelleenqi":1,"rohitcube":2,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"| Display                        |          Name           |              Github Profile               |                     Portfolio                     |","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"|--------------------------------|:-----------------------:|:-----------------------------------------:|:-------------------------------------------------:|","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"| ![](photos/sebas_pic.png)      | Sebastian Fok Shin Hung |  [Github](https://github.com/SebasFok/)   |         [Portfolio](team/sebastianfok.md)         |","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"| ![](photos/j.png)              |    Liow Enqi Janelle    | [Github](https://github.com/janelleenqi/) |       [Portfolio](team/janelleenqi.md)        |","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"rohitcube"},"content":"|     ![rohit_pic1.JPG](photos%2Frohit_pic1.JPG)                           |         Rohit R         |  [Github](https://github.com/rohitcube)   |           [Portfolio](team/ryanlohyr.md)            |","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"| ![](photos/ryanPic.JPG)        |        Ryan Loh         |  [Github](https://github.com/ryanlohyr)   | [Portfolio](https://ryanlohyr.github.io/ryanloh/) |","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"| ![](photos/isaiah_profile.png) |      Isaiah Cerven      |  [Github](https://github.com/CerIsaiah/)  |            [Portfolio](team/isaiah.md)            |","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"SebasFok":5,"janelleenqi":1,"rohitcube":1,"-":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"\u003ch1 style\u003d\"text-align: center; ","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"background-image: linear-gradient(to right, #370505, #5b2829, #814c4c, #a97171, #d19999);\"\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"    \u003cimg src\u003d\"https://picsum.photos/320\" alt\u003d\"Header Image\"\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"\u003c/h1\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"\u003ch1\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"\u003cspan style\u003d\"background-image: linear-gradient(to right, #14499b, #0065b7, #0081d1, #009ee9, #00bcff);","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"-webkit-background-clip: text; color: transparent;\"\u003eN\u003c/span\u003eUS ","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"\u003cspan style\u003d\"background-image: linear-gradient(to right, #e50000, #e84034, #e6615a, #de7e7b, #d19999);","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"-webkit-background-clip: text; color: transparent;\"\u003eD\u003c/span\u003eEGs","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"\u003cspan style\u003d\"background-image: linear-gradient(to right, #9b2614, #b70036, #c3006b, #ac00b2, #002cff);","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"-webkit-background-clip: text; color: transparent;\"\u003eDeveloper Guide\u003c/span\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"\u003c/h1\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"## Design \u0026 implementation, Architecture","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"\u003cimg src\u003d\"diagrams/architectureDiagram.jpeg\" alt\u003d\"Image\" width\u003d\"450\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"The Architecture Diagram given above explains the high-level design of the application.","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"The main logic of the application is handled by these four components","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"- **Controller**: ","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"  - Handles Commands coming from the User ","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"  - Combines data from the **Model** and UI Components from **View**","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"  - Never handles data logic","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"- **View**:","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"  - Responsible for printing onto the Command Line Application","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"- **Model**:","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"  - Stores the data and data logic methods that handles and manages the data ","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"  - Performs REST API calls to the NUSModsAPI","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"- **Storage**:","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"  - can save both schedule data and user data in .txt format, and read them back into corresponding objects.","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"  - depends on some classes in the Model component","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"### How the architecture components interact with each other","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"![updatedAddModule.png](diagrams%2FupdatedAddModule.png)","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"The Sequence Diagram above shows how the components interact with each other when the user inserts a module ","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"into his schedule","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"### View Component","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"The component is specified in Ui.java","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"\u003cimg src\u003d\"diagrams/UI.jpeg\" alt\u003d\"Image\" width\u003d\"300\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"The `UI` component:","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"- displays messages to the user by printing to the CLI","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"- displays results from commands executed by the ModulePlannerController class","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"rohitcube"},"content":"### Controller Component","lastModifiedDate":"2023-11-14"},{"lineNumber":57,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"rohitcube"},"content":"![ss_logicDiagram.jpg](screenshots%2Fss_logicDiagram.jpg)","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"rohitcube"},"content":"The `Controller` component:","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"rohitcube"},"content":"1. Input from the user is received through `Ui` class, is the pass into `ModulePlannerController`.","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"rohitcube"},"content":"2. When `ModulePlannerController` is called upon to execute a command, it uses the `Parser` class to parse for ","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"rohitcube"},"content":"`UserCommand`.","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"rohitcube"},"content":"2. This results in a `UserCommand` object which is executed by the `ModulePlannerController`.","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"rohitcube"},"content":"3. The `UserCommand` calls the methods specific to each `UserCommand` from `ModuleMethodsController`.","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"rohitcube"},"content":"(`ModuleServiceController` contains helper functions for `ModuleMethodsController`) ","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"rohitcube"},"content":"4. The result of the command execution is returned to the `Ui` and printed to the CLI.","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"### Model Component","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"![ModelComponent.png](diagrams%2FModelComponent.png)","lastModifiedDate":"2023-11-14"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"The `Model` component:","lastModifiedDate":"2023-11-14"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"- Stores the student data","lastModifiedDate":"2023-11-14"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"  - Stores `Student` student that has student details (name, major, year), `Schedule` schedule, `Timetable` timetable and other student data (completedModuleCredits, majorModuleCodes, currentSemesterModules)","lastModifiedDate":"2023-11-14"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"  - Stores `Schedule` schedule that has `ModuleList` modulesPlanned, and other schedule data like modulesPerSem, completedModules","lastModifiedDate":"2023-11-14"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"  - Stores `ModuleList` modulesPlanned","lastModifiedDate":"2023-11-14"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"  - Stores `Timetable` timetable that has currentSemesterModulesWeekly","lastModifiedDate":"2023-11-14"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"- Makes REST API calls to NUSModsAPI ","lastModifiedDate":"2023-11-14"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"### Storage Component","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"SebasFok"},"content":"The component is specified in the `storage` package and facilitated by StorageManager.java","lastModifiedDate":"2023-11-14"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"SebasFok"},"content":"![StorageDiagram.png](diagrams%2FStorageDiagram.png)","lastModifiedDate":"2023-11-14"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"SebasFok"},"content":"The `storage` component:","lastModifiedDate":"2023-11-14"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"SebasFok"},"content":"- can save the student\u0027s name, major and year to `studentDetails.txt` whenever the user starts NUSDegs for the first time","lastModifiedDate":"2023-11-14"},{"lineNumber":91,"author":{"gitId":"SebasFok"},"content":"and read them back into corresponding objects.","lastModifiedDate":"2023-11-14"},{"lineNumber":92,"author":{"gitId":"SebasFok"},"content":"- can save the student\u0027s schedule and timetable whenever it is updated in NUSDegs and read them back into corresponding ","lastModifiedDate":"2023-11-14"},{"lineNumber":93,"author":{"gitId":"SebasFok"},"content":"objects.","lastModifiedDate":"2023-11-14"},{"lineNumber":94,"author":{"gitId":"SebasFok"},"content":"- uses `FileDecoder` class to read saved files in the data folder back to `Student` object.","lastModifiedDate":"2023-11-14"},{"lineNumber":95,"author":{"gitId":"SebasFok"},"content":"- uses `ResourceStorage` to store and retrieve core module details for CEG and CS.","lastModifiedDate":"2023-11-14"},{"lineNumber":96,"author":{"gitId":"SebasFok"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s jon is to save/retrieve objects","lastModifiedDate":"2023-11-14"},{"lineNumber":97,"author":{"gitId":"SebasFok"},"content":"that belong to the `Model`)","lastModifiedDate":"2023-11-14"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"SebasFok"},"content":"## Features featured in Developer\u0027s Guide: ","lastModifiedDate":"2023-11-14"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"- Required","lastModifiedDate":"2023-11-14"},{"lineNumber":102,"author":{"gitId":"SebasFok"},"content":"- Add","lastModifiedDate":"2023-11-14"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"- Recommend","lastModifiedDate":"2023-11-14"},{"lineNumber":104,"author":{"gitId":"SebasFok"},"content":"- Clear","lastModifiedDate":"2023-11-14"},{"lineNumber":105,"author":{"gitId":"rohitcube"},"content":"- Info (description, command)","lastModifiedDate":"2023-11-14"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"- Pace","lastModifiedDate":"2023-11-14"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"- Left","lastModifiedDate":"2023-11-14"},{"lineNumber":108,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":109,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":110,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":111,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":112,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"# Implementation","lastModifiedDate":"2023-11-14"},{"lineNumber":114,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"## Required Feature","lastModifiedDate":"2023-11-14"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"The following sequence diagram shows how the Required Command function works.","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"![RequiredFeature_Seq.png](diagrams%2FRequiredFeature_Seq.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"The required command is implemented to give users an overview of the modules they need to complete for","lastModifiedDate":"2023-11-03"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"their major. It is facilitated by major. Additionally, it implements the following operations:","lastModifiedDate":"2023-11-03"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"### Function List","lastModifiedDate":"2023-11-14"},{"lineNumber":124,"author":{"gitId":"janelleenqi"},"content":"- `student#getMajor()` – Returns the `major` of the student.","lastModifiedDate":"2023-11-14"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"- `ModuleMethodsController#executeGetRequiredModulesForStudent(major)` - Calls functions below to print required modules for the user\u0027s major","lastModifiedDate":"2023-11-14"},{"lineNumber":126,"author":{"gitId":"janelleenqi"},"content":"- `ModuleRequirementsView#printRequiredModules(major)` - Calls the specific printing function depending on the user\u0027s major","lastModifiedDate":"2023-11-14"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"- `ModuleRequirementsView#printRequiredModulesCEG()` - Specific printing function for CEG required modules","lastModifiedDate":"2023-11-14"},{"lineNumber":128,"author":{"gitId":"janelleenqi"},"content":"- `ModuleRequirementsView#printRequiredModulesCS()` - Specific printing function for CS required modules","lastModifiedDate":"2023-11-14"},{"lineNumber":129,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":130,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"rohitcube"},"content":"### Usage Examples","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"rohitcube"},"content":"Here are a few examples of how the Show Required Modules Feature behaves:","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"janelleenqi"},"content":"#### Example of usage 1: (user\u0027s major is CEG)","lastModifiedDate":"2023-11-14"},{"lineNumber":136,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"janelleenqi"},"content":"User input:","lastModifiedDate":"2023-11-14"},{"lineNumber":138,"author":{"gitId":"janelleenqi"},"content":"`required`","lastModifiedDate":"2023-11-14"},{"lineNumber":139,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"janelleenqi"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-14"},{"lineNumber":141,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":142,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":143,"author":{"gitId":"janelleenqi"},"content":"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#","lastModifiedDate":"2023-11-14"},{"lineNumber":144,"author":{"gitId":"janelleenqi"},"content":"║   Modular Requirements for CEG                    Units  ║","lastModifiedDate":"2023-11-14"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#","lastModifiedDate":"2023-11-14"},{"lineNumber":146,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-14"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"│   Common Curriculum Requirements                  60     │","lastModifiedDate":"2023-11-14"},{"lineNumber":148,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-14"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"    GES1000 (Singapore Studies)                     4","lastModifiedDate":"2023-11-14"},{"lineNumber":150,"author":{"gitId":"janelleenqi"},"content":"    GEC1000 (Cultures and Connections)              4","lastModifiedDate":"2023-11-14"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"    GEN2000 (Communities and Engagement)            4","lastModifiedDate":"2023-11-14"},{"lineNumber":152,"author":{"gitId":"janelleenqi"},"content":"    ES2631 Critique \u0026 Communication of Thinking","lastModifiedDate":"2023-11-14"},{"lineNumber":153,"author":{"gitId":"janelleenqi"},"content":"    \u0026 Design (Critique \u0026 Expression)                4","lastModifiedDate":"2023-11-14"},{"lineNumber":154,"author":{"gitId":"janelleenqi"},"content":"    CS1010 Programming Methodology (Digital ","lastModifiedDate":"2023-11-14"},{"lineNumber":155,"author":{"gitId":"janelleenqi"},"content":"    Literacy)                                       4","lastModifiedDate":"2023-11-14"},{"lineNumber":156,"author":{"gitId":"janelleenqi"},"content":"    GEA1000 Quantitative Reasoning with Data (Data ","lastModifiedDate":"2023-11-14"},{"lineNumber":157,"author":{"gitId":"janelleenqi"},"content":"    Literacy)                                       4","lastModifiedDate":"2023-11-14"},{"lineNumber":158,"author":{"gitId":"janelleenqi"},"content":"    DTK1234 Design Thinking (Design Thinking)       4","lastModifiedDate":"2023-11-14"},{"lineNumber":159,"author":{"gitId":"janelleenqi"},"content":"    EG1311 Design and Make (Maker Space)            4","lastModifiedDate":"2023-11-14"},{"lineNumber":160,"author":{"gitId":"janelleenqi"},"content":"    IE2141 Systems Thinking and Dynamics (Systems ","lastModifiedDate":"2023-11-14"},{"lineNumber":161,"author":{"gitId":"janelleenqi"},"content":"    Thinking)                                       4","lastModifiedDate":"2023-11-14"},{"lineNumber":162,"author":{"gitId":"janelleenqi"},"content":"    EE2211 Introduction to Machine Learning ","lastModifiedDate":"2023-11-14"},{"lineNumber":163,"author":{"gitId":"janelleenqi"},"content":"    (Artificial Intelligence)                       4","lastModifiedDate":"2023-11-14"},{"lineNumber":164,"author":{"gitId":"janelleenqi"},"content":"    CDE2501 Liveable Cities (Sustainable Futures)   4","lastModifiedDate":"2023-11-14"},{"lineNumber":165,"author":{"gitId":"janelleenqi"},"content":"    CDE2000 (Creating Narratives)                   4","lastModifiedDate":"2023-11-14"},{"lineNumber":166,"author":{"gitId":"janelleenqi"},"content":"    PF1101 Fundamentals of Project Management ","lastModifiedDate":"2023-11-14"},{"lineNumber":167,"author":{"gitId":"janelleenqi"},"content":"    (Project Management)                            4","lastModifiedDate":"2023-11-14"},{"lineNumber":168,"author":{"gitId":"janelleenqi"},"content":"    CG4002 Computer Engineering Capstone Project 1 ","lastModifiedDate":"2023-11-14"},{"lineNumber":169,"author":{"gitId":"janelleenqi"},"content":"    (Integrated Project)                            8","lastModifiedDate":"2023-11-14"},{"lineNumber":170,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":171,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-14"},{"lineNumber":172,"author":{"gitId":"janelleenqi"},"content":"│   Programme Requirements                          60     │","lastModifiedDate":"2023-11-14"},{"lineNumber":173,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-14"},{"lineNumber":174,"author":{"gitId":"janelleenqi"},"content":" ~~ Engineering Core                                20  ~~","lastModifiedDate":"2023-11-14"},{"lineNumber":175,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":176,"author":{"gitId":"janelleenqi"},"content":"    MA1511 Engineering Calculus                     2","lastModifiedDate":"2023-11-14"},{"lineNumber":177,"author":{"gitId":"janelleenqi"},"content":"    MA1512 Differential Equations for Engineering   2","lastModifiedDate":"2023-11-14"},{"lineNumber":178,"author":{"gitId":"janelleenqi"},"content":"    MA1508E Linear Algebra for Engineering          4","lastModifiedDate":"2023-11-14"},{"lineNumber":179,"author":{"gitId":"janelleenqi"},"content":"    EG2401A Engineering Professionalism             2","lastModifiedDate":"2023-11-14"},{"lineNumber":180,"author":{"gitId":"janelleenqi"},"content":"    CP3880 Advanced Technology Attachment Programme 12","lastModifiedDate":"2023-11-14"},{"lineNumber":181,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":182,"author":{"gitId":"janelleenqi"},"content":" ~~ CEG Major                                       40  ~~","lastModifiedDate":"2023-11-14"},{"lineNumber":183,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":184,"author":{"gitId":"janelleenqi"},"content":"    CG1111A Engineering Principles and Practice I   4","lastModifiedDate":"2023-11-14"},{"lineNumber":185,"author":{"gitId":"janelleenqi"},"content":"    CG2111A Engineering Principles and Practice II  4","lastModifiedDate":"2023-11-14"},{"lineNumber":186,"author":{"gitId":"janelleenqi"},"content":"    CS1231 Discrete Structures                      4","lastModifiedDate":"2023-11-14"},{"lineNumber":187,"author":{"gitId":"janelleenqi"},"content":"    CG2023 Signals \u0026 Systems                        4","lastModifiedDate":"2023-11-14"},{"lineNumber":188,"author":{"gitId":"janelleenqi"},"content":"    CG2027 Transistor-level Digital Circuit         2","lastModifiedDate":"2023-11-14"},{"lineNumber":189,"author":{"gitId":"janelleenqi"},"content":"    CG2028 Computer Organization                    2","lastModifiedDate":"2023-11-14"},{"lineNumber":190,"author":{"gitId":"janelleenqi"},"content":"    CG2271 Real-time Operating System               4","lastModifiedDate":"2023-11-14"},{"lineNumber":191,"author":{"gitId":"janelleenqi"},"content":"    CS2040C Data Structures and Algorithms          4","lastModifiedDate":"2023-11-14"},{"lineNumber":192,"author":{"gitId":"janelleenqi"},"content":"    CS2113 Software Engineering \u0026 Object-Oriented ","lastModifiedDate":"2023-11-14"},{"lineNumber":193,"author":{"gitId":"janelleenqi"},"content":"    Programming                                     4","lastModifiedDate":"2023-11-14"},{"lineNumber":194,"author":{"gitId":"janelleenqi"},"content":"    EE2026 Digital Design                           4","lastModifiedDate":"2023-11-14"},{"lineNumber":195,"author":{"gitId":"janelleenqi"},"content":"    EE4204 Computer Networks                        4","lastModifiedDate":"2023-11-14"},{"lineNumber":196,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":197,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-14"},{"lineNumber":198,"author":{"gitId":"janelleenqi"},"content":"│   Unrestricted Electives                          40     │","lastModifiedDate":"2023-11-14"},{"lineNumber":199,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-14"},{"lineNumber":200,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":201,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":202,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":203,"author":{"gitId":"janelleenqi"},"content":"#### Example of usage 2: (user\u0027s major is CS)","lastModifiedDate":"2023-11-14"},{"lineNumber":204,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":205,"author":{"gitId":"janelleenqi"},"content":"User input:","lastModifiedDate":"2023-11-14"},{"lineNumber":206,"author":{"gitId":"janelleenqi"},"content":"`required`","lastModifiedDate":"2023-11-14"},{"lineNumber":207,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":208,"author":{"gitId":"janelleenqi"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-14"},{"lineNumber":209,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":210,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":211,"author":{"gitId":"janelleenqi"},"content":"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#","lastModifiedDate":"2023-11-14"},{"lineNumber":212,"author":{"gitId":"janelleenqi"},"content":"║   Modular Requirements for CS                     Units  ║","lastModifiedDate":"2023-11-14"},{"lineNumber":213,"author":{"gitId":"janelleenqi"},"content":"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#","lastModifiedDate":"2023-11-14"},{"lineNumber":214,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-14"},{"lineNumber":215,"author":{"gitId":"janelleenqi"},"content":"│   Common Curriculum Requirements                  40     │","lastModifiedDate":"2023-11-14"},{"lineNumber":216,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-14"},{"lineNumber":217,"author":{"gitId":"janelleenqi"},"content":" ~~ University Requirements: 6 University Pillars   24  ~~","lastModifiedDate":"2023-11-14"},{"lineNumber":218,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":219,"author":{"gitId":"janelleenqi"},"content":"    CS1101S Programming Methodology (Digital ","lastModifiedDate":"2023-11-14"},{"lineNumber":220,"author":{"gitId":"janelleenqi"},"content":"    Literacy)                                       4","lastModifiedDate":"2023-11-14"},{"lineNumber":221,"author":{"gitId":"janelleenqi"},"content":"    ES2660 Communicating in the Information Age ","lastModifiedDate":"2023-11-14"},{"lineNumber":222,"author":{"gitId":"janelleenqi"},"content":"    (Critique and Expression)                       4","lastModifiedDate":"2023-11-14"},{"lineNumber":223,"author":{"gitId":"janelleenqi"},"content":"    GEC1% (Cultures and Connections)                4","lastModifiedDate":"2023-11-14"},{"lineNumber":224,"author":{"gitId":"janelleenqi"},"content":"    GEA1000 / BT1101 / ST1131 / DSA1101 (Data ","lastModifiedDate":"2023-11-14"},{"lineNumber":225,"author":{"gitId":"janelleenqi"},"content":"    Literacy)                                       4","lastModifiedDate":"2023-11-14"},{"lineNumber":226,"author":{"gitId":"janelleenqi"},"content":"    GES1% (Singapore Studies)                       4","lastModifiedDate":"2023-11-14"},{"lineNumber":227,"author":{"gitId":"janelleenqi"},"content":"    GEN2% (Communities and Engagement)              4","lastModifiedDate":"2023-11-14"},{"lineNumber":228,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":229,"author":{"gitId":"janelleenqi"},"content":" ~~ Computing Ethics                                4  ~~","lastModifiedDate":"2023-11-14"},{"lineNumber":230,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":231,"author":{"gitId":"janelleenqi"},"content":"    IS1108 Digital Ethics and Data Privacy          4","lastModifiedDate":"2023-11-14"},{"lineNumber":232,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":233,"author":{"gitId":"janelleenqi"},"content":" ~~   Inter \u0026 Cross-Disciplinary Education          12 ~~","lastModifiedDate":"2023-11-14"},{"lineNumber":234,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":235,"author":{"gitId":"janelleenqi"},"content":"    Interdisciplinary (ID) Courses (at least 2)","lastModifiedDate":"2023-11-14"},{"lineNumber":236,"author":{"gitId":"janelleenqi"},"content":"    Cross-disciplinary (CD) Courses (no more than 1)","lastModifiedDate":"2023-11-14"},{"lineNumber":237,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":238,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-14"},{"lineNumber":239,"author":{"gitId":"janelleenqi"},"content":"│   Programme Requirements                          80     │","lastModifiedDate":"2023-11-14"},{"lineNumber":240,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-14"},{"lineNumber":241,"author":{"gitId":"janelleenqi"},"content":" ~~ Computer Science Foundation                     36  ~~","lastModifiedDate":"2023-11-14"},{"lineNumber":242,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":243,"author":{"gitId":"janelleenqi"},"content":"    CS1231S Discrete Structures                     4","lastModifiedDate":"2023-11-14"},{"lineNumber":244,"author":{"gitId":"janelleenqi"},"content":"    CS2030S Programming Methodology II              4","lastModifiedDate":"2023-11-14"},{"lineNumber":245,"author":{"gitId":"janelleenqi"},"content":"    CS2040S Data Structures and Algorithms          4","lastModifiedDate":"2023-11-14"},{"lineNumber":246,"author":{"gitId":"janelleenqi"},"content":"    CS2100 Computer Organisation                    4","lastModifiedDate":"2023-11-14"},{"lineNumber":247,"author":{"gitId":"janelleenqi"},"content":"    CS2101 Effective Communication for Computing ","lastModifiedDate":"2023-11-14"},{"lineNumber":248,"author":{"gitId":"janelleenqi"},"content":"    Professionals                                   4","lastModifiedDate":"2023-11-14"},{"lineNumber":249,"author":{"gitId":"janelleenqi"},"content":"    CS2103T Software Engineering                    4","lastModifiedDate":"2023-11-14"},{"lineNumber":250,"author":{"gitId":"janelleenqi"},"content":"    CS2106 Introduction to Operating Systems        4","lastModifiedDate":"2023-11-14"},{"lineNumber":251,"author":{"gitId":"janelleenqi"},"content":"    CS2109S Introduction to AI and Machine Learning 4","lastModifiedDate":"2023-11-14"},{"lineNumber":252,"author":{"gitId":"janelleenqi"},"content":"    CS3230 Design and Analysis of Algorithms        4","lastModifiedDate":"2023-11-14"},{"lineNumber":253,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":254,"author":{"gitId":"janelleenqi"},"content":" ~~ Computer Science Breadth and Depth              32  ~~","lastModifiedDate":"2023-11-14"},{"lineNumber":255,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":256,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":257,"author":{"gitId":"janelleenqi"},"content":" ~~ Mathematics and Sciences                        12  ~~","lastModifiedDate":"2023-11-14"},{"lineNumber":258,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":259,"author":{"gitId":"janelleenqi"},"content":"    MA1521 Calculus for Computing                   4","lastModifiedDate":"2023-11-14"},{"lineNumber":260,"author":{"gitId":"janelleenqi"},"content":"    MA1522 Linear Algebra for Computing             4","lastModifiedDate":"2023-11-14"},{"lineNumber":261,"author":{"gitId":"janelleenqi"},"content":"    ST2334 Probability and Statistics               4","lastModifiedDate":"2023-11-14"},{"lineNumber":262,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":263,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-14"},{"lineNumber":264,"author":{"gitId":"janelleenqi"},"content":"│   Unrestricted Electives                          40     │","lastModifiedDate":"2023-11-14"},{"lineNumber":265,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-14"},{"lineNumber":266,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":267,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":268,"author":{"gitId":"janelleenqi"},"content":"## Add Module Feature","lastModifiedDate":"2023-11-14"},{"lineNumber":269,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":270,"author":{"gitId":"janelleenqi"},"content":"The add module mechanism is facilitated by `ModuleMethodsController`. It tries to add the module to a target semester,","lastModifiedDate":"2023-11-14"},{"lineNumber":271,"author":{"gitId":"janelleenqi"},"content":"specified in userInput by the user, to their module schedule planner. It will print different responses based on whether","lastModifiedDate":"2023-11-14"},{"lineNumber":272,"author":{"gitId":"janelleenqi"},"content":"the adding of module was successful.","lastModifiedDate":"2023-11-14"},{"lineNumber":273,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":274,"author":{"gitId":"janelleenqi"},"content":"### Usage Example","lastModifiedDate":"2023-11-14"},{"lineNumber":275,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":276,"author":{"gitId":"janelleenqi"},"content":"Here is an example of how the add module feature behaves:","lastModifiedDate":"2023-11-14"},{"lineNumber":277,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":278,"author":{"gitId":"janelleenqi"},"content":"#### Example:","lastModifiedDate":"2023-11-14"},{"lineNumber":279,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":280,"author":{"gitId":"janelleenqi"},"content":"**Step 1.** The user inputs the `add CS1010 1` command to insert the module CS1010 to Year 1 Semester 1 of their","lastModifiedDate":"2023-11-14"},{"lineNumber":281,"author":{"gitId":"janelleenqi"},"content":"schedule. The add UserCommand() object is created from the user input.","lastModifiedDate":"2023-11-14"},{"lineNumber":282,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":283,"author":{"gitId":"janelleenqi"},"content":"**Step 2.** If the user inputs are valid, `processCommand` is called by the UserCommand object. The command is then","lastModifiedDate":"2023-11-14"},{"lineNumber":284,"author":{"gitId":"janelleenqi"},"content":"passed to the `ModuleMethodsController` through `executeAddModuleCommand()`. The `ModuleMethodsController` would then","lastModifiedDate":"2023-11-14"},{"lineNumber":285,"author":{"gitId":"janelleenqi"},"content":"call the `addModuleToSchedule()` method in `Student`, which would then continue to call the `addModule()` method in","lastModifiedDate":"2023-11-14"},{"lineNumber":286,"author":{"gitId":"janelleenqi"},"content":"`Schedule` and finally the `modulesPlanned` object.","lastModifiedDate":"2023-11-14"},{"lineNumber":287,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":288,"author":{"gitId":"janelleenqi"},"content":"**Step 3.** Upon successful execution of all of the above, `ModuleMethodsController` would then construct a message","lastModifiedDate":"2023-11-14"},{"lineNumber":289,"author":{"gitId":"janelleenqi"},"content":"which also includes an updated schedule which would be returned to the `UI` class to be formatted to the Command Line","lastModifiedDate":"2023-11-14"},{"lineNumber":290,"author":{"gitId":"janelleenqi"},"content":"Interface.","lastModifiedDate":"2023-11-14"},{"lineNumber":291,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":292,"author":{"gitId":"janelleenqi"},"content":"The following sequence diagram shows how the `add` command works:","lastModifiedDate":"2023-11-14"},{"lineNumber":293,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":294,"author":{"gitId":"janelleenqi"},"content":"![updatedAddModule.png](diagrams%2FupdatedAddModule.png)","lastModifiedDate":"2023-11-14"},{"lineNumber":295,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":296,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":297,"author":{"gitId":"janelleenqi"},"content":"## Recommend Schedule Based on Course Feature","lastModifiedDate":"2023-11-14"},{"lineNumber":298,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":299,"author":{"gitId":"janelleenqi"},"content":"The following sequence diagrams shows how the recommend command function works.","lastModifiedDate":"2023-11-14"},{"lineNumber":300,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":301,"author":{"gitId":"janelleenqi"},"content":"Recommended a schedule based on the user\u0027s major:","lastModifiedDate":"2023-11-14"},{"lineNumber":302,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":303,"author":{"gitId":"janelleenqi"},"content":"\u003cimg src\u003d\"diagrams/recommended_one.jpeg\" alt\u003d\"Image\" width\u003d\"600\"\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":304,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":305,"author":{"gitId":"janelleenqi"},"content":"Recommended a schedule based on the user\u0027s major:","lastModifiedDate":"2023-11-14"},{"lineNumber":306,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":307,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":308,"author":{"gitId":"janelleenqi"},"content":"\u003cimg src\u003d\"diagrams/recommended_two.jpeg\" alt\u003d\"Image\" width\u003d\"600\"\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":309,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":310,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":311,"author":{"gitId":"janelleenqi"},"content":"Based on the course, we will provide a recommended schedules that is sorted based on prerequisites. ","lastModifiedDate":"2023-11-14"},{"lineNumber":312,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":313,"author":{"gitId":"janelleenqi"},"content":"This feature is facilitated by the `ModuleMethodsController`. which stores information about the schedule and performs actions like add and remove from schedule.","lastModifiedDate":"2023-11-14"},{"lineNumber":314,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":315,"author":{"gitId":"janelleenqi"},"content":"### Usage Examples","lastModifiedDate":"2023-11-14"},{"lineNumber":316,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":317,"author":{"gitId":"janelleenqi"},"content":"Here are a few examples of how the \"Recommend schedule\" feature behaves:","lastModifiedDate":"2023-11-14"},{"lineNumber":318,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":319,"author":{"gitId":"janelleenqi"},"content":"#### Step 1: Recommend schedule for computer engineering(CEG)","lastModifiedDate":"2023-11-14"},{"lineNumber":320,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":321,"author":{"gitId":"janelleenqi"},"content":"Command: `recommend` ","lastModifiedDate":"2023-11-14"},{"lineNumber":322,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":323,"author":{"gitId":"janelleenqi"},"content":"Response:","lastModifiedDate":"2023-11-14"},{"lineNumber":324,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":325,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":326,"author":{"gitId":"janelleenqi"},"content":"1. GEA1000     2. MA1511      3. MA1512      4. DTK1234     5. GESS1000","lastModifiedDate":"2023-11-14"},{"lineNumber":327,"author":{"gitId":"janelleenqi"},"content":"6. CS1231      7. CS1010      8. GEN2000     9. EG2501      10. EG1311","lastModifiedDate":"2023-11-14"},{"lineNumber":328,"author":{"gitId":"janelleenqi"},"content":"11. GEC1000    12. PF1101     13. CDE2000    14. IE2141     15. CG1111A","lastModifiedDate":"2023-11-14"},{"lineNumber":329,"author":{"gitId":"janelleenqi"},"content":"16. EG2401A    17. ES2631     18. ST2334     19. MA1508E    20. CG2023","lastModifiedDate":"2023-11-14"},{"lineNumber":330,"author":{"gitId":"janelleenqi"},"content":"21. CG2111A    22. CS2040C    23. CG2027     24. EE2026     25. EE4204","lastModifiedDate":"2023-11-14"},{"lineNumber":331,"author":{"gitId":"janelleenqi"},"content":"26. EE2211     27. CG2271     28. CS2113     29. CG2028     30. CP3880","lastModifiedDate":"2023-11-14"},{"lineNumber":332,"author":{"gitId":"janelleenqi"},"content":"31. CG4002     ","lastModifiedDate":"2023-11-14"},{"lineNumber":333,"author":{"gitId":"janelleenqi"},"content":"Here you go!","lastModifiedDate":"2023-11-14"},{"lineNumber":334,"author":{"gitId":"janelleenqi"},"content":"Taking the modules in this order will ensure a prerequisite worry free uni life!","lastModifiedDate":"2023-11-14"},{"lineNumber":335,"author":{"gitId":"janelleenqi"},"content":"Do you want to add this to your schedule planner? (This will overwrite your current schedule!)","lastModifiedDate":"2023-11-14"},{"lineNumber":336,"author":{"gitId":"janelleenqi"},"content":"Please input \u0027Y\u0027 or \u0027N\u0027 ","lastModifiedDate":"2023-11-14"},{"lineNumber":337,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":338,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":339,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":340,"author":{"gitId":"janelleenqi"},"content":"#### Step 2 (Only to be done after step 1): ","lastModifiedDate":"2023-11-14"},{"lineNumber":341,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":342,"author":{"gitId":"janelleenqi"},"content":"Command: `Y`","lastModifiedDate":"2023-11-14"},{"lineNumber":343,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":344,"author":{"gitId":"janelleenqi"},"content":"Response:","lastModifiedDate":"2023-11-14"},{"lineNumber":345,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":346,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":347,"author":{"gitId":"janelleenqi"},"content":"Here is your schedule planner!","lastModifiedDate":"2023-11-14"},{"lineNumber":348,"author":{"gitId":"janelleenqi"},"content":"Sem 1:   X GESS1000     X DTK1234      X MA1512       X MA1511       X GEA1000      ","lastModifiedDate":"2023-11-14"},{"lineNumber":349,"author":{"gitId":"janelleenqi"},"content":"Sem 2:   X EG1311       X EG2501       X GEN2000      X CS1010       X CS1231       ","lastModifiedDate":"2023-11-14"},{"lineNumber":350,"author":{"gitId":"janelleenqi"},"content":"Sem 3:   X CG1111A      X IE2141       X CDE2000      X PF1101       X GEC1000      ","lastModifiedDate":"2023-11-14"},{"lineNumber":351,"author":{"gitId":"janelleenqi"},"content":"Sem 4:   X CG2023       X MA1508E      X ST2334       X ES2631       X EG2401A      ","lastModifiedDate":"2023-11-14"},{"lineNumber":352,"author":{"gitId":"janelleenqi"},"content":"Sem 5:   X EE4204       X EE2026       X CG2027       X CS2040C      X CG2111A      ","lastModifiedDate":"2023-11-14"},{"lineNumber":353,"author":{"gitId":"janelleenqi"},"content":"Sem 6:   X CG2028       X CS2113       X CG2271       X EE2211       ","lastModifiedDate":"2023-11-14"},{"lineNumber":354,"author":{"gitId":"janelleenqi"},"content":"Sem 7:   X CG4002       X CP3880       ","lastModifiedDate":"2023-11-14"},{"lineNumber":355,"author":{"gitId":"janelleenqi"},"content":"Sem 8:   ","lastModifiedDate":"2023-11-14"},{"lineNumber":356,"author":{"gitId":"janelleenqi"},"content":"Happy degree planning!","lastModifiedDate":"2023-11-14"},{"lineNumber":357,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":358,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":359,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":360,"author":{"gitId":"janelleenqi"},"content":"## Clear Schedule Feature","lastModifiedDate":"2023-11-14"},{"lineNumber":361,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":362,"author":{"gitId":"janelleenqi"},"content":"The clear schedule mechanism is facilitated by `ModuleMethodsController`. It clears the schedule of the user and resets","lastModifiedDate":"2023-11-14"},{"lineNumber":363,"author":{"gitId":"janelleenqi"},"content":"the completion data of the modules in the schedule.","lastModifiedDate":"2023-11-14"},{"lineNumber":364,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":365,"author":{"gitId":"janelleenqi"},"content":"### Usage Examples","lastModifiedDate":"2023-11-14"},{"lineNumber":366,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":367,"author":{"gitId":"janelleenqi"},"content":"Here is an example of how the clear schedule feature behaves:","lastModifiedDate":"2023-11-14"},{"lineNumber":368,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":369,"author":{"gitId":"janelleenqi"},"content":"#### Example 1:","lastModifiedDate":"2023-11-14"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":371,"author":{"gitId":"janelleenqi"},"content":"**Step 1.** The user inputs the `clear` command to clear their schedule. The clear UserCommand() object is created ","lastModifiedDate":"2023-11-14"},{"lineNumber":372,"author":{"gitId":"janelleenqi"},"content":"from the user input.","lastModifiedDate":"2023-11-14"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":374,"author":{"gitId":"janelleenqi"},"content":"**Step 2.** If the user inputs are valid, `processCommand` is called by the UserCommand object. The command is then","lastModifiedDate":"2023-11-14"},{"lineNumber":375,"author":{"gitId":"janelleenqi"},"content":"passed to the `ModuleMethodsController` through `executeClearModuleCommand()`. The `ModuleMethodsController` would then","lastModifiedDate":"2023-11-14"},{"lineNumber":376,"author":{"gitId":"janelleenqi"},"content":"call the `clearAllModuleFromSchedule()` method in `Student`, which would replace the current `Schedule` object in ","lastModifiedDate":"2023-11-14"},{"lineNumber":377,"author":{"gitId":"janelleenqi"},"content":"`Student` with a new schedule and reset `completedModuleCredits` in the `Student` object to 0.","lastModifiedDate":"2023-11-14"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":379,"author":{"gitId":"janelleenqi"},"content":"**Step 3.** Upon successful execution of all of the above, `ModuleMethodsController` would then construct a message","lastModifiedDate":"2023-11-14"},{"lineNumber":380,"author":{"gitId":"janelleenqi"},"content":"which would be returned to the `UI` class to be formatted to the Command Line Interface.","lastModifiedDate":"2023-11-14"},{"lineNumber":381,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":382,"author":{"gitId":"janelleenqi"},"content":"The following sequence diagram shows how the `clear` command works:","lastModifiedDate":"2023-11-14"},{"lineNumber":383,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":384,"author":{"gitId":"janelleenqi"},"content":"![ClearDiagram.png](diagrams%2FClearDiagram.png)","lastModifiedDate":"2023-11-14"},{"lineNumber":385,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":386,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":387,"author":{"gitId":"janelleenqi"},"content":"## Get information about modules (from the NUSMods API)","lastModifiedDate":"2023-11-03"},{"lineNumber":388,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":389,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":390,"author":{"gitId":"janelleenqi"},"content":"The information feature returns information about the module at the user\u0027s request. It accepts 3 commands, ","lastModifiedDate":"2023-11-03"},{"lineNumber":391,"author":{"gitId":"rohitcube"},"content":"\u0027description\u0027, \u0027workload\u0027 and \u0027all\u0027. The \u0027description\u0027 command returns a string description of the module, the workload","lastModifiedDate":"2023-11-01"},{"lineNumber":392,"author":{"gitId":"rohitcube"},"content":"command returns an array, and all displays the module title and module code for all modules present in the NUSMods ","lastModifiedDate":"2023-11-01"},{"lineNumber":393,"author":{"gitId":"rohitcube"},"content":"directory.","lastModifiedDate":"2023-11-01"},{"lineNumber":394,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":395,"author":{"gitId":"rohitcube"},"content":"- `getFullModuleInfo(major)` – Returns the `filePath` for the requirements of a specified major.","lastModifiedDate":"2023-11-01"},{"lineNumber":396,"author":{"gitId":"rohitcube"},"content":"- `sendHttpRequestAndGetResponseBody(String url)` – Displays the overview of modules required.","lastModifiedDate":"2023-11-01"},{"lineNumber":397,"author":{"gitId":"rohitcube"},"content":"- `getDescription(String moduleCode)` – Returns the `longestLineLength` of the file f.","lastModifiedDate":"2023-11-01"},{"lineNumber":398,"author":{"gitId":"rohitcube"},"content":"- `listAllModules(), `printDoubleTopLine()`, `printBottomLine()`, `printDoubleBottomLine()` – Displays lines for formatting","lastModifiedDate":"2023-11-01"},{"lineNumber":399,"author":{"gitId":"rohitcube"},"content":"- `infoCommands(String command, String userInput), `printDoubleTopLine()`, `printBottomLine()`, `printDoubleBottomLine()` – Displays lines for formatting","lastModifiedDate":"2023-11-01"},{"lineNumber":400,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":401,"author":{"gitId":"janelleenqi"},"content":"### Usage Examples","lastModifiedDate":"2023-10-31"},{"lineNumber":402,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":403,"author":{"gitId":"janelleenqi"},"content":"Here are a few examples of how the Show Required Modules Feature behaves:","lastModifiedDate":"2023-10-31"},{"lineNumber":404,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":405,"author":{"gitId":"janelleenqi"},"content":"#### Example 1:","lastModifiedDate":"2023-10-31"},{"lineNumber":406,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":407,"author":{"gitId":"janelleenqi"},"content":"Command: `required`","lastModifiedDate":"2023-10-31"},{"lineNumber":408,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":409,"author":{"gitId":"janelleenqi"},"content":"Response:","lastModifiedDate":"2023-10-31"},{"lineNumber":410,"author":{"gitId":"janelleenqi"},"content":"Module requirements for major selected by user","lastModifiedDate":"2023-10-31"},{"lineNumber":411,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":412,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":413,"author":{"gitId":"janelleenqi"},"content":"## List Required Modules Left Feature","lastModifiedDate":"2023-11-14"},{"lineNumber":414,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":415,"author":{"gitId":"janelleenqi"},"content":"The following sequence diagram shows how the Left Command function works.","lastModifiedDate":"2023-11-14"},{"lineNumber":416,"author":{"gitId":"janelleenqi"},"content":"![LeftFeature_Seq.png](diagrams%2FLeftFeature_Seq.png)","lastModifiedDate":"2023-11-14"},{"lineNumber":417,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":418,"author":{"gitId":"janelleenqi"},"content":"When the user\u0027s command is determined to be `left`, the program implements the following operations:","lastModifiedDate":"2023-11-14"},{"lineNumber":419,"author":{"gitId":"janelleenqi"},"content":"### Function List","lastModifiedDate":"2023-11-14"},{"lineNumber":420,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":421,"author":{"gitId":"janelleenqi"},"content":"- `new ArrayList\u003cString\u003e()`: Instantiate moduleCodesLeft","lastModifiedDate":"2023-11-14"},{"lineNumber":422,"author":{"gitId":"janelleenqi"},"content":"- `student#getModuleCodesLeft()`: Calls the functions below to get the module codes left","lastModifiedDate":"2023-11-14"},{"lineNumber":423,"author":{"gitId":"janelleenqi"},"content":"- `schedule#getModulesPlanned()`: Returns modulesPlanned (Module List)","lastModifiedDate":"2023-11-14"},{"lineNumber":424,"author":{"gitId":"janelleenqi"},"content":"- `modulesPlanned#getCompletedModuleCodes()`: Returns completedModuleCodes (ArrayList \u003cString\u003e)","lastModifiedDate":"2023-11-14"},{"lineNumber":425,"author":{"gitId":"janelleenqi"},"content":"- `completedModuleCodes#contains(moduleCode)`: Returns true if completedModuleCodes contain moduleCode","lastModifiedDate":"2023-11-14"},{"lineNumber":426,"author":{"gitId":"janelleenqi"},"content":"- `moduleCodesLeft#add(moduleCode)`: Add moduleCode to moduleCodesLeft","lastModifiedDate":"2023-11-14"},{"lineNumber":427,"author":{"gitId":"janelleenqi"},"content":"- `ModuleMethodsController#showModulesLeft(moduleCodesLeft)`: Calls methods `displayMessage(\"Modules Left:\")` and","lastModifiedDate":"2023-11-14"},{"lineNumber":428,"author":{"gitId":"janelleenqi"},"content":"  `printModuleStringArray(moduleCodesLeft)` to display the modules left to the user","lastModifiedDate":"2023-11-14"},{"lineNumber":429,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":430,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":431,"author":{"gitId":"janelleenqi"},"content":"### Usage Examples","lastModifiedDate":"2023-11-14"},{"lineNumber":432,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":433,"author":{"gitId":"janelleenqi"},"content":"Here are a few examples of how the List Required Modules Left Feature behaves:","lastModifiedDate":"2023-11-14"},{"lineNumber":434,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":435,"author":{"gitId":"janelleenqi"},"content":"#### Example 1:","lastModifiedDate":"2023-11-14"},{"lineNumber":436,"author":{"gitId":"janelleenqi"},"content":"- Major is CEG","lastModifiedDate":"2023-11-14"},{"lineNumber":437,"author":{"gitId":"janelleenqi"},"content":"- Modules CG1111A, MA1511, MA1512, CS1010, GESS1000, CFG1002 are added to schedule planner and completed","lastModifiedDate":"2023-11-14"},{"lineNumber":438,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":439,"author":{"gitId":"janelleenqi"},"content":"Command: `left`","lastModifiedDate":"2023-11-14"},{"lineNumber":440,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":441,"author":{"gitId":"janelleenqi"},"content":"Response:","lastModifiedDate":"2023-11-14"},{"lineNumber":442,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":443,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":444,"author":{"gitId":"janelleenqi"},"content":"Required Modules Left:","lastModifiedDate":"2023-11-14"},{"lineNumber":445,"author":{"gitId":"janelleenqi"},"content":"1. GEC1000     2. GEN2000     3. ES2631      4. GEA1000     5. DTK1234","lastModifiedDate":"2023-11-14"},{"lineNumber":446,"author":{"gitId":"janelleenqi"},"content":"6. EG1311      7. IE2141      8. EE2211      9. EG2501      10. CDE2000","lastModifiedDate":"2023-11-14"},{"lineNumber":447,"author":{"gitId":"janelleenqi"},"content":"11. PF1101     12. CG4002     13. MA1508E    14. EG2401A    15. CP3880","lastModifiedDate":"2023-11-14"},{"lineNumber":448,"author":{"gitId":"janelleenqi"},"content":"16. CG2111A    17. CS1231     18. CG2023     19. CG2027     20. CG2028","lastModifiedDate":"2023-11-14"},{"lineNumber":449,"author":{"gitId":"janelleenqi"},"content":"21. CG2271     22. ST2334     23. CS2040C    24. CS2113     25. EE2026","lastModifiedDate":"2023-11-14"},{"lineNumber":450,"author":{"gitId":"janelleenqi"},"content":"26. EE4204    ","lastModifiedDate":"2023-11-14"},{"lineNumber":451,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":452,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":453,"author":{"gitId":"janelleenqi"},"content":"## Pacing and MC Calculation Feature","lastModifiedDate":"2023-11-14"},{"lineNumber":454,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":455,"author":{"gitId":"janelleenqi"},"content":"The following sequence diagram shows how the pace command function works.","lastModifiedDate":"2023-11-14"},{"lineNumber":456,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":457,"author":{"gitId":"janelleenqi"},"content":"\u003cimg src\u003d\"diagrams/pace_sequenceDiagram.jpeg\" alt\u003d\"Image\" width\u003d\"600\"\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":458,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":459,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":460,"author":{"gitId":"janelleenqi"},"content":"The \"Pacing and MC Calculation\" mechanism is implemented to help users track their","lastModifiedDate":"2023-11-14"},{"lineNumber":461,"author":{"gitId":"janelleenqi"},"content":"academic progress and remaining Modular Credits (MCs) required for graduation.","lastModifiedDate":"2023-11-14"},{"lineNumber":462,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":463,"author":{"gitId":"janelleenqi"},"content":"This feature is facilitated by the `ModuleMethodsController`. It calculates the average amount of modular credits the user","lastModifiedDate":"2023-11-14"},{"lineNumber":464,"author":{"gitId":"janelleenqi"},"content":"has to take in each semester in order to graduate on time.","lastModifiedDate":"2023-11-14"},{"lineNumber":465,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":466,"author":{"gitId":"janelleenqi"},"content":"### Usage Examples","lastModifiedDate":"2023-11-14"},{"lineNumber":467,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":468,"author":{"gitId":"janelleenqi"},"content":"Here are a few examples of how the \"Pacing and MC Calculation\" feature behaves:","lastModifiedDate":"2023-11-14"},{"lineNumber":469,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":470,"author":{"gitId":"janelleenqi"},"content":"#### Example 1: Calculate Remaining MCs","lastModifiedDate":"2023-11-14"},{"lineNumber":471,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":472,"author":{"gitId":"janelleenqi"},"content":"Command: `pace Y1/S1` (assuming 0 modular credits were done in semester one)","lastModifiedDate":"2023-11-14"},{"lineNumber":473,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":474,"author":{"gitId":"janelleenqi"},"content":"Response:","lastModifiedDate":"2023-11-14"},{"lineNumber":475,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":476,"author":{"gitId":"janelleenqi"},"content":"`You have 160MCs for 7 semesters. Recommended pace: 23MCs per sem until graduation`","lastModifiedDate":"2023-11-14"},{"lineNumber":477,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":478,"author":{"gitId":"janelleenqi"},"content":"#### Example 2: Calculate Remaining MCs (No Semester Specified)","lastModifiedDate":"2023-11-14"},{"lineNumber":479,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":480,"author":{"gitId":"janelleenqi"},"content":"Note: If no semester is specified, we will take the initial semester that the user has inputted upon initialisation.","lastModifiedDate":"2023-11-14"},{"lineNumber":481,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":482,"author":{"gitId":"janelleenqi"},"content":"Command: `pace` (Assuming user is y2/s1 and has completed 40 modular credits)","lastModifiedDate":"2023-11-14"},{"lineNumber":483,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":484,"author":{"gitId":"janelleenqi"},"content":"Response:","lastModifiedDate":"2023-11-14"},{"lineNumber":485,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":486,"author":{"gitId":"janelleenqi"},"content":"`You have 120MCs for 6 semesters. Recommended pace: 20MCs per sem until graduation`","lastModifiedDate":"2023-11-14"},{"lineNumber":487,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":488,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":489,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":490,"author":{"gitId":"janelleenqi"},"content":"## Modify lessons in the Weekly Timetable Feature","lastModifiedDate":"2023-11-14"},{"lineNumber":491,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":492,"author":{"gitId":"rohitcube"},"content":"User Input: `timetable modify`","lastModifiedDate":"2023-11-13"},{"lineNumber":493,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":494,"author":{"gitId":"rohitcube"},"content":"The following sequence diagram details the process of the \u0027timetable modify loop\u0027","lastModifiedDate":"2023-11-13"},{"lineNumber":495,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":496,"author":{"gitId":"janelleenqi"},"content":"![tt_modify_seq_diag.png](diagrams%2Ftt_modify_seq_diag.png)","lastModifiedDate":"2023-11-14"},{"lineNumber":497,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":498,"author":{"gitId":"rohitcube"},"content":"### Function List","lastModifiedDate":"2023-11-13"},{"lineNumber":499,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":500,"author":{"gitId":"rohitcube"},"content":"- `getUserCommand`: Retrieves user input for a timetable command.","lastModifiedDate":"2023-11-13"},{"lineNumber":501,"author":{"gitId":"rohitcube"},"content":"- `getArguments`: Retrieves arguments from a TimetableUserCommand.","lastModifiedDate":"2023-11-13"},{"lineNumber":502,"author":{"gitId":"rohitcube"},"content":"- `isModifyExit`: Checks if the user entered \u0027exit\u0027 as an argument.","lastModifiedDate":"2023-11-13"},{"lineNumber":503,"author":{"gitId":"rohitcube"},"content":"- `addLecture`: Adds a lecture to the selected module.","lastModifiedDate":"2023-11-13"},{"lineNumber":504,"author":{"gitId":"rohitcube"},"content":"- `addTutorial`: Adds a tutorial to the selected module.","lastModifiedDate":"2023-11-13"},{"lineNumber":505,"author":{"gitId":"rohitcube"},"content":"- `addLab`: Adds a lab to the selected module.","lastModifiedDate":"2023-11-13"},{"lineNumber":506,"author":{"gitId":"rohitcube"},"content":"- `isModifyClear`: Removes all lessons for the selected module.","lastModifiedDate":"2023-11-13"},{"lineNumber":507,"author":{"gitId":"rohitcube"},"content":"- `saveTimetable`: Saves the current timetable to storage.","lastModifiedDate":"2023-11-13"},{"lineNumber":508,"author":{"gitId":"rohitcube"},"content":"- `printTimetable`: Returns a formatted timetable display to the command-line interface.","lastModifiedDate":"2023-11-13"},{"lineNumber":509,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":510,"author":{"gitId":"janelleenqi"},"content":"## Show Weekly Timetable Feature","lastModifiedDate":"2023-11-13"},{"lineNumber":511,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":512,"author":{"gitId":"janelleenqi"},"content":"User Input: `timetable show`","lastModifiedDate":"2023-11-13"},{"lineNumber":513,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":514,"author":{"gitId":"janelleenqi"},"content":"The following sequence diagram shows how the timetable show feature works:","lastModifiedDate":"2023-11-13"},{"lineNumber":515,"author":{"gitId":"janelleenqi"},"content":"![TimetableShowFeature_Seq.png](diagrams%2FTimetableShowFeature_Seq.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":516,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":517,"author":{"gitId":"janelleenqi"},"content":"The following sequence diagram shows how the printTimetable operation works:","lastModifiedDate":"2023-11-13"},{"lineNumber":518,"author":{"gitId":"janelleenqi"},"content":"![PrintTimetable_Seq.png](diagrams%2FPrintTimetable_Seq.png)","lastModifiedDate":"2023-11-13"},{"lineNumber":519,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":520,"author":{"gitId":"janelleenqi"},"content":"When the user\u0027s command is determined to be `timetable show`, the program implements the following operations:","lastModifiedDate":"2023-11-13"},{"lineNumber":521,"author":{"gitId":"janelleenqi"},"content":"### Function List (when timetableCommandWord \u003d\u003d \"SHOW\")","lastModifiedDate":"2023-11-13"},{"lineNumber":522,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":523,"author":{"gitId":"janelleenqi"},"content":"- `getCurrentSemesterModulesWeekly()`: Returns the ArrayList of ModuleWeekly for the current semester","lastModifiedDate":"2023-11-13"},{"lineNumber":524,"author":{"gitId":"janelleenqi"},"content":"- `showTimetable(currentSemModulesWeekly)`: Calls the printTimetable function ","lastModifiedDate":"2023-11-14"},{"lineNumber":525,"author":{"gitId":"janelleenqi"},"content":"- `printTimetable(currentSemModulesWeekly)`: Prints the Weekly Timetable to the console","lastModifiedDate":"2023-11-14"},{"lineNumber":526,"author":{"gitId":"janelleenqi"},"content":"- `createDailyEvents(currentSemesterModules)`: Converts the ArrayList\u003cModuleWeekly\u003e to a ","lastModifiedDate":"2023-11-14"},{"lineNumber":527,"author":{"gitId":"janelleenqi"},"content":"List of ArrayList\u003cEvents\u003e for different days","lastModifiedDate":"2023-11-13"},{"lineNumber":528,"author":{"gitId":"janelleenqi"},"content":"- `sortByTime(currentDayEvents)`: Sorts Events in currentDayEvents by start time, duration, then ","lastModifiedDate":"2023-11-14"},{"lineNumber":529,"author":{"gitId":"janelleenqi"},"content":"module code, in ascending order","lastModifiedDate":"2023-11-13"},{"lineNumber":530,"author":{"gitId":"janelleenqi"},"content":"- `printTimetableHeader()`: Display timetable header","lastModifiedDate":"2023-11-13"},{"lineNumber":531,"author":{"gitId":"janelleenqi"},"content":"- `printlnHorizontalLine()`: Display horizontal line","lastModifiedDate":"2023-11-13"},{"lineNumber":532,"author":{"gitId":"janelleenqi"},"content":"- `printCurrentDayEvents(currentDayEvents, day)`: Calls the function below to display the day\u0027s events","lastModifiedDate":"2023-11-14"},{"lineNumber":533,"author":{"gitId":"janelleenqi"},"content":"- `printCurrentDayOneEvent(currentDayEvents, day, isFirstLine)`: Display the current event of the current day","lastModifiedDate":"2023-11-14"},{"lineNumber":534,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":535,"author":{"gitId":"janelleenqi"},"content":"### Example of usage:","lastModifiedDate":"2023-11-14"},{"lineNumber":536,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":537,"author":{"gitId":"janelleenqi"},"content":"Scenario: The lessons have been specified in Timetable Modify Mode","lastModifiedDate":"2023-11-14"},{"lineNumber":538,"author":{"gitId":"janelleenqi"},"content":"- CS2101 has a lecture at 5 for 2 hours on Monday","lastModifiedDate":"2023-11-14"},{"lineNumber":539,"author":{"gitId":"janelleenqi"},"content":"- GESS1000 has a lecture at 11 for 3 hours","lastModifiedDate":"2023-11-14"},{"lineNumber":540,"author":{"gitId":"janelleenqi"},"content":"  on Tuesday","lastModifiedDate":"2023-11-14"},{"lineNumber":541,"author":{"gitId":"janelleenqi"},"content":"- GESS1000 has a tutorial at 19 for 0 hours on Wednesday.","lastModifiedDate":"2023-11-14"},{"lineNumber":542,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":543,"author":{"gitId":"janelleenqi"},"content":"User input:","lastModifiedDate":"2023-11-14"},{"lineNumber":544,"author":{"gitId":"janelleenqi"},"content":"`timetable show`","lastModifiedDate":"2023-11-14"},{"lineNumber":545,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":546,"author":{"gitId":"janelleenqi"},"content":"Expected outcome:","lastModifiedDate":"2023-11-14"},{"lineNumber":547,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":548,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-14"},{"lineNumber":549,"author":{"gitId":"janelleenqi"},"content":"| DAY       | TIMETABLE                                    |","lastModifiedDate":"2023-11-14"},{"lineNumber":550,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-14"},{"lineNumber":551,"author":{"gitId":"janelleenqi"},"content":"| Monday    | CS2101 Lecture (5am-7am)                     |","lastModifiedDate":"2023-11-14"},{"lineNumber":552,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-14"},{"lineNumber":553,"author":{"gitId":"janelleenqi"},"content":"| Tuesday   | GESS1000 Lecture (11am-2pm)                  |","lastModifiedDate":"2023-11-14"},{"lineNumber":554,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-14"},{"lineNumber":555,"author":{"gitId":"janelleenqi"},"content":"| Wednesday | GESS1000 Tutorial (7pm)                      |","lastModifiedDate":"2023-11-14"},{"lineNumber":556,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-14"},{"lineNumber":557,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":558,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":559,"author":{"gitId":"janelleenqi"},"content":"### Design considerations","lastModifiedDate":"2023-11-13"},{"lineNumber":560,"author":{"gitId":"janelleenqi"},"content":"Aspect: How timetable is printed:","lastModifiedDate":"2023-11-13"},{"lineNumber":561,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":562,"author":{"gitId":"janelleenqi"},"content":"#### Current implementation: One table row per day","lastModifiedDate":"2023-11-14"},{"lineNumber":563,"author":{"gitId":"janelleenqi"},"content":"- Pros: Each table cell can be wider allowing each event to be printed in 1 line","lastModifiedDate":"2023-11-13"},{"lineNumber":564,"author":{"gitId":"janelleenqi"},"content":"- Cons: The user needs to read the time for each event to understand when they are free.","lastModifiedDate":"2023-11-13"},{"lineNumber":565,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":566,"author":{"gitId":"janelleenqi"},"content":"#### Previous implementation: One table row per hour, one table column per day","lastModifiedDate":"2023-11-14"},{"lineNumber":567,"author":{"gitId":"janelleenqi"},"content":"- Pros: The user can see when they are free by day and hour easily","lastModifiedDate":"2023-11-13"},{"lineNumber":568,"author":{"gitId":"janelleenqi"},"content":"- Cons: The console must be wide enough for it to be usable and aesthetic. Each table cell for an event was only about ","lastModifiedDate":"2023-11-13"},{"lineNumber":569,"author":{"gitId":"janelleenqi"},"content":"11 characters wide.","lastModifiedDate":"2023-11-13"},{"lineNumber":570,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":571,"author":{"gitId":"rohitcube"},"content":"  ","lastModifiedDate":"2023-11-13"},{"lineNumber":572,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":573,"author":{"gitId":"rohitcube"},"content":"### Target User Profile","lastModifiedDate":"2023-11-14"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":575,"author":{"gitId":"rohitcube"},"content":"- Computer Engineering and Computer Science Students at NUS","lastModifiedDate":"2023-11-14"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":577,"author":{"gitId":"rohitcube"},"content":"- **Desktop CLI Preference:** Students in Computer Engineering ","lastModifiedDate":"2023-11-14"},{"lineNumber":578,"author":{"gitId":"rohitcube"},"content":"and Computer Science at NUS show a preference for desktop ","lastModifiedDate":"2023-11-14"},{"lineNumber":579,"author":{"gitId":"rohitcube"},"content":"Command Line Interface (CLI) apps over other planners.","lastModifiedDate":"2023-11-14"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":581,"author":{"gitId":"rohitcube"},"content":"- **Typing-Centric Interaction:** This group favors ","lastModifiedDate":"2023-11-14"},{"lineNumber":582,"author":{"gitId":"rohitcube"},"content":"typing for efficiency, valuing keyboard-based operations","lastModifiedDate":"2023-11-14"},{"lineNumber":583,"author":{"gitId":"rohitcube"},"content":"over mouse interactions.","lastModifiedDate":"2023-11-14"},{"lineNumber":584,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":585,"author":{"gitId":"rohitcube"},"content":"- **Minimization of NUSMods Website Reliance:** These","lastModifiedDate":"2023-11-14"},{"lineNumber":586,"author":{"gitId":"rohitcube"},"content":"students seek to reduce dependence on frequent ","lastModifiedDate":"2023-11-14"},{"lineNumber":587,"author":{"gitId":"rohitcube"},"content":"NUSMods website visits. Instead, they prefer ","lastModifiedDate":"2023-11-14"},{"lineNumber":588,"author":{"gitId":"rohitcube"},"content":"a comprehensive planner in a desktop CLI","lastModifiedDate":"2023-11-14"},{"lineNumber":589,"author":{"gitId":"rohitcube"},"content":"environment, meeting their specific needs.","lastModifiedDate":"2023-11-14"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":593,"author":{"gitId":"rohitcube"},"content":"### Value Proposition","lastModifiedDate":"2023-11-14"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":595,"author":{"gitId":"rohitcube"},"content":"Efficiently navigate and organize a planner without ","lastModifiedDate":"2023-11-14"},{"lineNumber":596,"author":{"gitId":"rohitcube"},"content":"the typical delays associated with mouse-driven GUI ","lastModifiedDate":"2023-11-14"},{"lineNumber":597,"author":{"gitId":"rohitcube"},"content":"applications. Recognizing the substantial module load","lastModifiedDate":"2023-11-14"},{"lineNumber":598,"author":{"gitId":"rohitcube"},"content":"and hectic schedules faced by NUS engineering students ","lastModifiedDate":"2023-11-14"},{"lineNumber":599,"author":{"gitId":"rohitcube"},"content":"throughout their four-year program, this application is","lastModifiedDate":"2023-11-14"},{"lineNumber":600,"author":{"gitId":"rohitcube"},"content":"designed to streamline the module planning process. By","lastModifiedDate":"2023-11-14"},{"lineNumber":601,"author":{"gitId":"rohitcube"},"content":"eliminating the need for frequent reference to various ","lastModifiedDate":"2023-11-14"},{"lineNumber":602,"author":{"gitId":"rohitcube"},"content":"websites and GUIs, such as NUSMods and scheduling sites,","lastModifiedDate":"2023-11-14"},{"lineNumber":603,"author":{"gitId":"rohitcube"},"content":"the app aims to enhance the efficiency of module ","lastModifiedDate":"2023-11-14"},{"lineNumber":604,"author":{"gitId":"rohitcube"},"content":"planning for these students.","lastModifiedDate":"2023-11-14"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":606,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":608,"author":{"gitId":"-"},"content":"| Version | As a ... | I want to ...                                                                     | So that I can ...                                           |","lastModifiedDate":"2020-05-24"},{"lineNumber":609,"author":{"gitId":"janelleenqi"},"content":"|---------|----------|-----------------------------------------------------------------------------------|-------------------------------------------------------------|","lastModifiedDate":"2023-11-13"},{"lineNumber":610,"author":{"gitId":"janelleenqi"},"content":"| v1.0    | new user | view help                                                                         | refer to them when I forget how to use the application      |","lastModifiedDate":"2023-11-14"},{"lineNumber":611,"author":{"gitId":"janelleenqi"},"content":"| v1.0    | user     | view my pace                                                                      | graduate on time                                            |","lastModifiedDate":"2023-11-13"},{"lineNumber":612,"author":{"gitId":"janelleenqi"},"content":"| v1.0    | user     | view the required modules I am left with for my major                             | plan ahead for other semesters                              |","lastModifiedDate":"2023-11-13"},{"lineNumber":613,"author":{"gitId":"janelleenqi"},"content":"| v2.0    | user     | search for specific modules based on keywords, course codes, or professors\u0027 names | quickly find the modules I need for my semesters            |","lastModifiedDate":"2023-11-13"},{"lineNumber":614,"author":{"gitId":"janelleenqi"},"content":"| v2.0    | user     | alter (add, swap, delete) the modules in the schedule planner                     | update the recommended schedule to my preferences           |","lastModifiedDate":"2023-11-13"},{"lineNumber":615,"author":{"gitId":"janelleenqi"},"content":"| v2.0    | user     | get the recommended schedule for my major                                         | have a starting point to use the app                        |","lastModifiedDate":"2023-11-13"},{"lineNumber":616,"author":{"gitId":"janelleenqi"},"content":"| v2.0    | user     | get an overview of module requirements for my major                               | know which modules I must take to graduate                  |","lastModifiedDate":"2023-11-13"},{"lineNumber":617,"author":{"gitId":"janelleenqi"},"content":"| v2.1    | user     | shift the modules in the schedule planner                                         | more easily edit my schedule and save more time             |","lastModifiedDate":"2023-11-13"},{"lineNumber":618,"author":{"gitId":"janelleenqi"},"content":"| v2.1    | user     | plan my weekly timetable for my current semester                                  | keep track of my weekly lessons for my current semester     |","lastModifiedDate":"2023-11-13"},{"lineNumber":619,"author":{"gitId":"janelleenqi"},"content":"| v2.1    | user     | mark modules I have added as completed                                            | keep track of my progress                                   |","lastModifiedDate":"2023-11-13"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":621,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":623,"author":{"gitId":"janelleenqi"},"content":"### General Requirements","lastModifiedDate":"2023-11-14"},{"lineNumber":624,"author":{"gitId":"janelleenqi"},"content":"- NUSDegs should work on any mainstream OS that has Java 11 or above installed.","lastModifiedDate":"2023-11-14"},{"lineNumber":625,"author":{"gitId":"janelleenqi"},"content":"- NUSDegs requires a stable internet connection to be able to use its maximal functionalities as NUSMods API is used.","lastModifiedDate":"2023-11-14"},{"lineNumber":626,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":627,"author":{"gitId":"janelleenqi"},"content":"### Specific Requirements","lastModifiedDate":"2023-11-14"},{"lineNumber":628,"author":{"gitId":"janelleenqi"},"content":"- Year 4 Semester 2 students aren\u0027t able to use the app! (As we specifically cater the app to only students who have at","lastModifiedDate":"2023-11-14"},{"lineNumber":629,"author":{"gitId":"janelleenqi"},"content":"  least one semester left!)","lastModifiedDate":"2023-11-14"},{"lineNumber":630,"author":{"gitId":"janelleenqi"},"content":"- Due to the requirements of the CS2113, users are allowed to edit the txt files created. However, the course","lastModifiedDate":"2023-11-14"},{"lineNumber":631,"author":{"gitId":"janelleenqi"},"content":"should not be modified from \"CEG\" to \"CS\" and vice versa","lastModifiedDate":"2023-11-14"},{"lineNumber":632,"author":{"gitId":"janelleenqi"},"content":"in the txt file as it will break the prerequisite constraints in your","lastModifiedDate":"2023-11-14"},{"lineNumber":633,"author":{"gitId":"janelleenqi"},"content":"schedule and may cause the schedule to not work as intended (e.g show the incorrect preclusion).","lastModifiedDate":"2023-11-14"},{"lineNumber":634,"author":{"gitId":"janelleenqi"},"content":"  - This is due to the prerequisite algorithm that takes into account your course. Hope you understand!","lastModifiedDate":"2023-11-14"},{"lineNumber":635,"author":{"gitId":"janelleenqi"},"content":"- Users are strongly **recommended to not modify the data/schedule.txt** as well as the schedule is supposed to be sorted","lastModifiedDate":"2023-11-14"},{"lineNumber":636,"author":{"gitId":"janelleenqi"},"content":"based on prerequisites. Hence, a manual modification of an invalid module into the schedule.txt file may cause your schedule info","lastModifiedDate":"2023-11-14"},{"lineNumber":637,"author":{"gitId":"janelleenqi"},"content":"to be corrupted and therefore lost!","lastModifiedDate":"2023-11-14"},{"lineNumber":638,"author":{"gitId":"janelleenqi"},"content":"- The prerequisites are calculated based on module data available on NUSMods API, where some modules had complicated prerequisites. Thus, we were unable to process it so an error message will be returned. Unfortunately for such modules, you would not be able to add them to your schedule as well! (This is something we would require more time and hopefully be able to work out in the future!)","lastModifiedDate":"2023-11-14"},{"lineNumber":639,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":640,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":641,"author":{"gitId":"janelleenqi"},"content":"___________________________________________________________","lastModifiedDate":"2023-11-14"},{"lineNumber":642,"author":{"gitId":"janelleenqi"},"content":"Input command here: prereq cs3282","lastModifiedDate":"2023-11-14"},{"lineNumber":643,"author":{"gitId":"janelleenqi"},"content":"Sorry but we could not get the prerequisite for CS3282 as NUSMods API provided it in a invalid format :\u003c","lastModifiedDate":"2023-11-14"},{"lineNumber":644,"author":{"gitId":"janelleenqi"},"content":"___________________________________________________________","lastModifiedDate":"2023-11-14"},{"lineNumber":645,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":646,"author":{"gitId":"janelleenqi"},"content":"- Module data is limited to what is available on NUSMods API, where some modules are outdated. NUSDegs will be able to include them into your schedule planner, even though their prerequisites cannot be calculated.","lastModifiedDate":"2023-11-14"},{"lineNumber":647,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":648,"author":{"gitId":"janelleenqi"},"content":"Input command here: prereq cs3230R","lastModifiedDate":"2023-11-14"},{"lineNumber":649,"author":{"gitId":"janelleenqi"},"content":"1. CS2020      2. CS1231      ","lastModifiedDate":"2023-11-14"},{"lineNumber":650,"author":{"gitId":"janelleenqi"},"content":"___________________________________________________________","lastModifiedDate":"2023-11-14"},{"lineNumber":651,"author":{"gitId":"janelleenqi"},"content":"Input command here: prereq cs2020","lastModifiedDate":"2023-11-14"},{"lineNumber":652,"author":{"gitId":"janelleenqi"},"content":"Invalid Module Name","lastModifiedDate":"2023-11-14"},{"lineNumber":653,"author":{"gitId":"janelleenqi"},"content":"___________________________________________________________","lastModifiedDate":"2023-11-14"},{"lineNumber":654,"author":{"gitId":"janelleenqi"},"content":"Input command here: ","lastModifiedDate":"2023-11-14"},{"lineNumber":655,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":657,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":659,"author":{"gitId":"janelleenqi"},"content":"- Mainstream OS - Windows, Linux, Unix, OS-X","lastModifiedDate":"2023-11-14"},{"lineNumber":660,"author":{"gitId":"janelleenqi"},"content":"- CLI - Command Line Interface","lastModifiedDate":"2023-11-14"},{"lineNumber":661,"author":{"gitId":"janelleenqi"},"content":"- API - Application Programming Interface","lastModifiedDate":"2023-11-14"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":663,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":665,"author":{"gitId":"janelleenqi"},"content":"### Launch","lastModifiedDate":"2023-11-14"},{"lineNumber":666,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":667,"author":{"gitId":"janelleenqi"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2023-11-14"},{"lineNumber":668,"author":{"gitId":"janelleenqi"},"content":"2. Download the latest version of `NUSDegs` from [here](https://github.com/AY2324S1-CS2113-T17-4/tp/releases/download/v2.1/CS2113-T17-4.NUSDegs.jar)","lastModifiedDate":"2023-11-14"},{"lineNumber":669,"author":{"gitId":"janelleenqi"},"content":"3. Download the CS2113-T17-4.NUSDegs.jar to the folder you want to use as the home folder for NUSDegs.","lastModifiedDate":"2023-11-14"},{"lineNumber":670,"author":{"gitId":"janelleenqi"},"content":"4. Open a command terminal, cd into the folder you put the .jar file in, and run the command","lastModifiedDate":"2023-11-14"},{"lineNumber":671,"author":{"gitId":"janelleenqi"},"content":"   java -jar CS2113-T17-4.NUSDegs.jar to run the application.","lastModifiedDate":"2023-11-14"},{"lineNumber":672,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":673,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":674,"author":{"gitId":"janelleenqi"},"content":"Starting point:","lastModifiedDate":"2023-11-14"},{"lineNumber":675,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":676,"author":{"gitId":"janelleenqi"},"content":"Hey there CS and CEG Students! Welcome to ","lastModifiedDate":"2023-11-14"},{"lineNumber":677,"author":{"gitId":"janelleenqi"},"content":"  _   _ _   _ ____  ____                 ","lastModifiedDate":"2023-11-14"},{"lineNumber":678,"author":{"gitId":"janelleenqi"},"content":" | \\ | | | | / ___||  _ \\  ___  __ _ ___ ","lastModifiedDate":"2023-11-14"},{"lineNumber":679,"author":{"gitId":"janelleenqi"},"content":" |  \\| | | | \\___ \\| | | |/ _ \\/ _` / __|","lastModifiedDate":"2023-11-14"},{"lineNumber":680,"author":{"gitId":"janelleenqi"},"content":" | |\\  | |_| |___) | |_| |  __/ (_| \\__ \\","lastModifiedDate":"2023-11-14"},{"lineNumber":681,"author":{"gitId":"janelleenqi"},"content":" |_| \\_|\\___/|____/|____/ \\___|\\__, |___/","lastModifiedDate":"2023-11-14"},{"lineNumber":682,"author":{"gitId":"janelleenqi"},"content":"                               |___/     ","lastModifiedDate":"2023-11-14"},{"lineNumber":683,"author":{"gitId":"janelleenqi"},"content":"Attempting to look for your data file...","lastModifiedDate":"2023-11-14"},{"lineNumber":684,"author":{"gitId":"janelleenqi"},"content":"Loading (.O_O.)","lastModifiedDate":"2023-11-14"},{"lineNumber":685,"author":{"gitId":"janelleenqi"},"content":"Looks like you\u0027re new, new save files will be created.","lastModifiedDate":"2023-11-14"},{"lineNumber":686,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":687,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":688,"author":{"gitId":"janelleenqi"},"content":"Input your study details (Prompts Provided)","lastModifiedDate":"2023-11-14"},{"lineNumber":689,"author":{"gitId":"janelleenqi"},"content":"Prompt for name:","lastModifiedDate":"2023-11-14"},{"lineNumber":690,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":691,"author":{"gitId":"janelleenqi"},"content":"___________________________________________________________","lastModifiedDate":"2023-11-14"},{"lineNumber":692,"author":{"gitId":"janelleenqi"},"content":"Please enter your name:","lastModifiedDate":"2023-11-14"},{"lineNumber":693,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":694,"author":{"gitId":"janelleenqi"},"content":"Example Input for name: `Janelle`","lastModifiedDate":"2023-11-14"},{"lineNumber":695,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":696,"author":{"gitId":"janelleenqi"},"content":"Prompt for major:","lastModifiedDate":"2023-11-14"},{"lineNumber":697,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":698,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":699,"author":{"gitId":"janelleenqi"},"content":"Welcome Janelle! What major are you? (Only two available: CEG or CS)","lastModifiedDate":"2023-11-14"},{"lineNumber":700,"author":{"gitId":"janelleenqi"},"content":"___________________________________________________________","lastModifiedDate":"2023-11-14"},{"lineNumber":701,"author":{"gitId":"janelleenqi"},"content":"Please enter major:","lastModifiedDate":"2023-11-14"},{"lineNumber":702,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":703,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":704,"author":{"gitId":"janelleenqi"},"content":"Example Input for major: `CEG`","lastModifiedDate":"2023-11-14"},{"lineNumber":705,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":706,"author":{"gitId":"janelleenqi"},"content":"Prompt for current academic year:","lastModifiedDate":"2023-11-14"},{"lineNumber":707,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":708,"author":{"gitId":"janelleenqi"},"content":"What Year and Semester are you? Ex: Y1/S2 for year 1 semester 2","lastModifiedDate":"2023-11-14"},{"lineNumber":709,"author":{"gitId":"janelleenqi"},"content":"___________________________________________________________","lastModifiedDate":"2023-11-14"},{"lineNumber":710,"author":{"gitId":"janelleenqi"},"content":"Please enter your current academic year: ","lastModifiedDate":"2023-11-14"},{"lineNumber":711,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":712,"author":{"gitId":"janelleenqi"},"content":"Example Input for current academic year: `y2/s1`","lastModifiedDate":"2023-11-14"},{"lineNumber":713,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":714,"author":{"gitId":"janelleenqi"},"content":"Student details have been created","lastModifiedDate":"2023-11-14"},{"lineNumber":715,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":716,"author":{"gitId":"janelleenqi"},"content":"New save files successfully created!","lastModifiedDate":"2023-11-14"},{"lineNumber":717,"author":{"gitId":"janelleenqi"},"content":"Now you\u0027re all set to use NUSDegs to kick start your degree planning!","lastModifiedDate":"2023-11-14"},{"lineNumber":718,"author":{"gitId":"janelleenqi"},"content":"Type \u0027help\u0027 to see the available commands","lastModifiedDate":"2023-11-14"},{"lineNumber":719,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":720,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":721,"author":{"gitId":"janelleenqi"},"content":"Prompt for command: ","lastModifiedDate":"2023-11-14"},{"lineNumber":722,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":723,"author":{"gitId":"janelleenqi"},"content":"___________________________________________________________","lastModifiedDate":"2023-11-14"},{"lineNumber":724,"author":{"gitId":"janelleenqi"},"content":"Input command here: ","lastModifiedDate":"2023-11-14"},{"lineNumber":725,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":726,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":727,"author":{"gitId":"janelleenqi"},"content":"### Modify lessons in the Weekly Timetable Feature","lastModifiedDate":"2023-11-14"},{"lineNumber":728,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":729,"author":{"gitId":"janelleenqi"},"content":"#### Set-up:","lastModifiedDate":"2023-11-14"},{"lineNumber":730,"author":{"gitId":"janelleenqi"},"content":"- Add a module to your current semester: `add cs1010 3`","lastModifiedDate":"2023-11-14"},{"lineNumber":731,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":732,"author":{"gitId":"janelleenqi"},"content":"- Module Successfully Added","lastModifiedDate":"2023-11-14"},{"lineNumber":733,"author":{"gitId":"janelleenqi"},"content":"  Sem 1:   ","lastModifiedDate":"2023-11-14"},{"lineNumber":734,"author":{"gitId":"janelleenqi"},"content":"  Sem 2:   ","lastModifiedDate":"2023-11-14"},{"lineNumber":735,"author":{"gitId":"janelleenqi"},"content":"  Sem 3:   X CS1010       ","lastModifiedDate":"2023-11-14"},{"lineNumber":736,"author":{"gitId":"janelleenqi"},"content":"  Sem 4:   ","lastModifiedDate":"2023-11-14"},{"lineNumber":737,"author":{"gitId":"janelleenqi"},"content":"  Sem 5:   ","lastModifiedDate":"2023-11-14"},{"lineNumber":738,"author":{"gitId":"janelleenqi"},"content":"  Sem 6:   ","lastModifiedDate":"2023-11-14"},{"lineNumber":739,"author":{"gitId":"janelleenqi"},"content":"  Sem 7:   ","lastModifiedDate":"2023-11-14"},{"lineNumber":740,"author":{"gitId":"janelleenqi"},"content":"  Sem 8:","lastModifiedDate":"2023-11-14"},{"lineNumber":741,"author":{"gitId":"janelleenqi"},"content":"___________________________________________________________","lastModifiedDate":"2023-11-14"},{"lineNumber":742,"author":{"gitId":"janelleenqi"},"content":"Input command here: ","lastModifiedDate":"2023-11-14"},{"lineNumber":743,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":744,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":745,"author":{"gitId":"janelleenqi"},"content":"- Enter timetable modify: `timetable modify`","lastModifiedDate":"2023-11-14"},{"lineNumber":746,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":747,"author":{"gitId":"janelleenqi"},"content":"List of modules in current semester: ","lastModifiedDate":"2023-11-14"},{"lineNumber":748,"author":{"gitId":"janelleenqi"},"content":"CS1010","lastModifiedDate":"2023-11-14"},{"lineNumber":749,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":750,"author":{"gitId":"janelleenqi"},"content":"Entered Timetable Modify Mode","lastModifiedDate":"2023-11-14"},{"lineNumber":751,"author":{"gitId":"janelleenqi"},"content":"To add a lesson to a module: [moduleCode] [lessonType] [startTime] [duration] [day]","lastModifiedDate":"2023-11-14"},{"lineNumber":752,"author":{"gitId":"janelleenqi"},"content":"     lessonType   lecture, tutorial, lab","lastModifiedDate":"2023-11-14"},{"lineNumber":753,"author":{"gitId":"janelleenqi"},"content":"     startTime    integer from 5 to 23 (representing 5am to 11pm)","lastModifiedDate":"2023-11-14"},{"lineNumber":754,"author":{"gitId":"janelleenqi"},"content":"     duration     time in hours","lastModifiedDate":"2023-11-14"},{"lineNumber":755,"author":{"gitId":"janelleenqi"},"content":"     day          eg. monday, tuesday, wednesday","lastModifiedDate":"2023-11-14"},{"lineNumber":756,"author":{"gitId":"janelleenqi"},"content":"To clear all lessons for a module: [moduleCode] clear","lastModifiedDate":"2023-11-14"},{"lineNumber":757,"author":{"gitId":"janelleenqi"},"content":"To exit timetable modify: exit","lastModifiedDate":"2023-11-14"},{"lineNumber":758,"author":{"gitId":"janelleenqi"},"content":"___________________________________________________________","lastModifiedDate":"2023-11-14"},{"lineNumber":759,"author":{"gitId":"janelleenqi"},"content":"Input timetable modify command here: ","lastModifiedDate":"2023-11-14"},{"lineNumber":760,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":761,"author":{"gitId":"janelleenqi"},"content":"#### Test Cases:","lastModifiedDate":"2023-11-14"},{"lineNumber":762,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":763,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":764,"author":{"gitId":"janelleenqi"},"content":"Success test case 1: `cs1010 lecture 9 2 monday`","lastModifiedDate":"2023-11-14"},{"lineNumber":765,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":766,"author":{"gitId":"janelleenqi"},"content":"Expected output: ","lastModifiedDate":"2023-11-14"},{"lineNumber":767,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":768,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-14"},{"lineNumber":769,"author":{"gitId":"janelleenqi"},"content":"| DAY       | TIMETABLE                                    |","lastModifiedDate":"2023-11-14"},{"lineNumber":770,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-14"},{"lineNumber":771,"author":{"gitId":"janelleenqi"},"content":"| Monday    | CS1010 Lecture (9am-11am)                    |","lastModifiedDate":"2023-11-14"},{"lineNumber":772,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-14"},{"lineNumber":773,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":774,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":775,"author":{"gitId":"janelleenqi"},"content":"Success test case 2: `cs1010 lab 20 0 friday`","lastModifiedDate":"2023-11-14"},{"lineNumber":776,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":777,"author":{"gitId":"janelleenqi"},"content":"Expected output:","lastModifiedDate":"2023-11-14"},{"lineNumber":778,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":779,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-14"},{"lineNumber":780,"author":{"gitId":"janelleenqi"},"content":"| DAY       | TIMETABLE                                    |","lastModifiedDate":"2023-11-14"},{"lineNumber":781,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-14"},{"lineNumber":782,"author":{"gitId":"janelleenqi"},"content":"| Monday    | CS1010 Lecture (9am-11am)                    |","lastModifiedDate":"2023-11-14"},{"lineNumber":783,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-14"},{"lineNumber":784,"author":{"gitId":"janelleenqi"},"content":"| Friday    | CS1010 Lab (8pm)                             |","lastModifiedDate":"2023-11-14"},{"lineNumber":785,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-14"},{"lineNumber":786,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":787,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":788,"author":{"gitId":"janelleenqi"},"content":"Success test case 3: `cs1010 clear`","lastModifiedDate":"2023-11-14"},{"lineNumber":789,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":790,"author":{"gitId":"janelleenqi"},"content":"Expected output:","lastModifiedDate":"2023-11-14"},{"lineNumber":791,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":792,"author":{"gitId":"janelleenqi"},"content":"All lessons for selected module are cleared.","lastModifiedDate":"2023-11-14"},{"lineNumber":793,"author":{"gitId":"janelleenqi"},"content":"Timetable view is unavailable as modules in your current semester have no lessons yet.","lastModifiedDate":"2023-11-14"},{"lineNumber":794,"author":{"gitId":"janelleenqi"},"content":"To add a lesson for a module, enter: [moduleCode] [lessonType] [startTime] [duration] [day]","lastModifiedDate":"2023-11-14"},{"lineNumber":795,"author":{"gitId":"janelleenqi"},"content":"To clear lessons for a module, enter: [moduleCode] clear","lastModifiedDate":"2023-11-14"},{"lineNumber":796,"author":{"gitId":"janelleenqi"},"content":"To exit Timetable Modify Mode, enter: EXIT","lastModifiedDate":"2023-11-14"},{"lineNumber":797,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":798,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":799,"author":{"gitId":"janelleenqi"},"content":"Failure test case 1: `cs1010 lect 10 1 saturday`","lastModifiedDate":"2023-11-14"},{"lineNumber":800,"author":{"gitId":"janelleenqi"},"content":"(valid lesson types are only lecture, tutorial, lab)","lastModifiedDate":"2023-11-14"},{"lineNumber":801,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":802,"author":{"gitId":"janelleenqi"},"content":"Expected output:","lastModifiedDate":"2023-11-14"},{"lineNumber":803,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":804,"author":{"gitId":"janelleenqi"},"content":"Invalid lesson type","lastModifiedDate":"2023-11-14"},{"lineNumber":805,"author":{"gitId":"janelleenqi"},"content":"Please enter in the format: [moduleCode] [lessonType] [startTime] [duration] [day]","lastModifiedDate":"2023-11-14"},{"lineNumber":806,"author":{"gitId":"janelleenqi"},"content":" If you wish to clear lessons for a module, enter: [moduleCode] clear","lastModifiedDate":"2023-11-14"},{"lineNumber":807,"author":{"gitId":"janelleenqi"},"content":" If you with to exit modify, enter: exit ","lastModifiedDate":"2023-11-14"},{"lineNumber":808,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":809,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":810,"author":{"gitId":"janelleenqi"},"content":"Failure test case 2: `cs1010 lect 10 2`","lastModifiedDate":"2023-11-14"},{"lineNumber":811,"author":{"gitId":"janelleenqi"},"content":"(valid lesson types are only lecture, tutorial, lab)","lastModifiedDate":"2023-11-14"},{"lineNumber":812,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":813,"author":{"gitId":"janelleenqi"},"content":"Expected output:","lastModifiedDate":"2023-11-14"},{"lineNumber":814,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":815,"author":{"gitId":"janelleenqi"},"content":"Invalid Number of Arguments","lastModifiedDate":"2023-11-14"},{"lineNumber":816,"author":{"gitId":"janelleenqi"},"content":"Please enter in the format: [moduleCode] [lessonType] [startTime] [duration] [day]","lastModifiedDate":"2023-11-14"},{"lineNumber":817,"author":{"gitId":"janelleenqi"},"content":" If you wish to clear lessons for a module, enter: [moduleCode] clear","lastModifiedDate":"2023-11-14"},{"lineNumber":818,"author":{"gitId":"janelleenqi"},"content":" If you with to exit modify, enter: exit ","lastModifiedDate":"2023-11-14"},{"lineNumber":819,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":820,"author":{"gitId":"janelleenqi"},"content":" ","lastModifiedDate":"2023-11-14"},{"lineNumber":821,"author":{"gitId":"janelleenqi"},"content":"Other incorrect timetable commands to try:","lastModifiedDate":"2023-11-14"},{"lineNumber":822,"author":{"gitId":"janelleenqi"},"content":"`cs101 lecture 10 2 monday` ","lastModifiedDate":"2023-11-14"},{"lineNumber":823,"author":{"gitId":"janelleenqi"},"content":"`lecture 10 2 monday`","lastModifiedDate":"2023-11-14"},{"lineNumber":824,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":825,"author":{"gitId":"janelleenqi"},"content":"Expected output: Error message specific to number of arguments (clearing lessons and exiting needs 2 and 1 arguments respectively) then validity of arguments","lastModifiedDate":"2023-11-14"},{"lineNumber":826,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":827,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":828,"author":{"gitId":"janelleenqi"},"content":"- Exit timetable modify: `exit`","lastModifiedDate":"2023-11-14"},{"lineNumber":829,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":830,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":831,"author":{"gitId":"janelleenqi"},"content":"Exited Timetable Modify Mode","lastModifiedDate":"2023-11-14"},{"lineNumber":832,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":833,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"SebasFok":21,"ryanlohyr":50,"janelleenqi":654,"rohitcube":78,"-":30}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"\u003ch1 style\u003d\"text-align: center; ","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"background-image: linear-gradient(to right, #370505, #5b2829, #814c4c, #a97171, #d19999);\"\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"    \u003cimg src\u003d\"https://picsum.photos/320\" alt\u003d\"Header Image\"\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"\u003c/h1\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"\u003ch1\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"\u003cspan style\u003d\"background-image: linear-gradient(to right, #14499b, #0065b7, #0081d1, #009ee9, #00bcff);","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"-webkit-background-clip: text; color: transparent;\"\u003eN\u003c/span\u003eUS ","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"\u003cspan style\u003d\"background-image: linear-gradient(to right, #e50000, #e84034, #e6615a, #de7e7b, #d19999);","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"-webkit-background-clip: text; color: transparent;\"\u003eD\u003c/span\u003eEGS","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"\u003c/h1\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"NUSDegs streamlines computing degree planning by offering personalized module schedules, tracking progress,","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"and ensuring on-time graduation. It eliminates guesswork, reduces stress, and saves time for students.","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"It\u0027s a comprehensive tool for efficient and successful degree completion.","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"ryanlohyr":15,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"\u003ch1 style\u003d\"text-align: center; ","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"background-image: linear-gradient(to right, #370505, #5b2829, #814c4c, #a97171, #d19999);\"\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"    \u003cimg src\u003d\"https://picsum.photos/320\" alt\u003d\"Header Image\"\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"\u003c/h1\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"\u003ch1\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"\u003cspan style\u003d\"background-image: linear-gradient(to right, #14499b, #0065b7, #0081d1, #009ee9, #00bcff);","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"-webkit-background-clip: text; color: transparent;\"\u003eN\u003c/span\u003eUS ","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"\u003cspan style\u003d\"background-image: linear-gradient(to right, #e50000, #e84034, #e6615a, #de7e7b, #d19999);","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"-webkit-background-clip: text; color: transparent;\"\u003eD\u003c/span\u003eEGs","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"\u003cspan style\u003d\"background-image: linear-gradient(to right, #959b14, #00a754, #00a9a9, #00a0f0, #0085ff);","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"-webkit-background-clip: text; color: transparent;\"\u003eUser Guide\u003c/span\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"\u003c/h1\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"NUSDegs streamlines computing degree planning by offering personalized module schedules, tracking progress, ","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"and ensuring on-time graduation. It eliminates guesswork, reduces stress, and saves time for students. ","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"It\u0027s a comprehensive tool for efficient and successful degree completion.","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"2. Download the latest version of `NUSDegs` from [here](https://github.com/AY2324S1-CS2113-T17-4/tp/releases/download/v2.1/CS2113-T17-4.NUSDegs.jar) ","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"3. Download the CS2113-T17-4.NUSDegs.jar to the folder you want to use as the home folder for NUSDegs.","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"4. Open a command terminal, cd into the folder you put the .jar file in, and run the command","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"   java -jar CS2113-T17-4.NUSDegs.jar to run the application.","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"## Note","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"1. Year 4 Semester 2 students aren\u0027t able to use the app! (As we specifically cater the app to only students who have at","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"least one semester left!)","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"2. Due to the requirements of the CS2113, users are allowed to edit the txt files created. However, the course ","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"should not be modified from \"CEG\" to \"CS\" and vice versa ","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"in the txt file as it will break the prerequisite constraints in your ","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"schedule and may cause the schedule to not work as intended (e.g show the incorrect preclusion). ","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"   1. This is due to the prerequisite algorithm that takes into account your course. Hope you understand!","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"3. Users are strongly **recommended to not modify the data/schedule.txt** as well as the schedule is supposed to be sorted","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"based on prerequisites. Hence, a manual modification of an invalid module into the schedule.txt file may cause your schedule info ","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"to be corrupted and therefore lost!","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"4. The prerequisites are calculated using NUSMods API, and there are some modules that we were not able to process and a error as such will be returned.","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"___________________________________________________________","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"Input command here: prereq cs3282","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"Sorry but we could not get the prerequisite for CS3282 as NUSMods API provided it in a invalid format :\u003c","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"___________________________________________________________","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"Unfortunately for such modules, you would not be able to add them to your schedule as well! (This is something we would require more time and hopefully be able to work out in the future!)","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"5. NUSMods has an issue where some modules are not being able to be added despite being a prerequisite","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"For example ","lastModifiedDate":"2023-11-14"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"Input command here: prereq cs3230R","lastModifiedDate":"2023-11-14"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"1. CS2020      2. CS1231      ","lastModifiedDate":"2023-11-14"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"___________________________________________________________","lastModifiedDate":"2023-11-14"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"Input command here: prereq cs2020","lastModifiedDate":"2023-11-14"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"Invalid Module Name","lastModifiedDate":"2023-11-14"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"___________________________________________________________","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"Input command here: ","lastModifiedDate":"2023-11-14"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"6. Any inconsistencies in data could be due to the NUSMods api.","lastModifiedDate":"2023-11-14"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"- [View help : `help`](#viewing-help-help)","lastModifiedDate":"2023-11-11"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"- [View modules required for major: `required`](#getting-a-list-of-required-modulesrequired)","lastModifiedDate":"2023-11-11"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"- [Check prerequisite for a module: `prereq`](#view-module-prerequisitesprereq)","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"- [Search for modules based on keywords: `search`](#searching-for-a-module-by-title-search)","lastModifiedDate":"2023-11-11"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"- [View info about a module: `info`](#get-information-about-a-module-info-description)","lastModifiedDate":"2023-11-14"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"- [View schedule planner: `schedule`](#view-schedule-planner-schedule)","lastModifiedDate":"2023-11-11"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"- [Recommend a schedule based on major: `recommend`](#view-recommended-schedule-based-on-course-recommend)","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"- [Add module to schedule planner: `add`](#add-module-to-schedule-planner-add)","lastModifiedDate":"2023-11-11"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"- [Delete module from schedule planner: `delete`](#delete-module-from-schedule-planner-delete)","lastModifiedDate":"2023-11-11"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"- [Shift module in schedule planner: `shift`](#shift-module-in-schedule-planner-shift)","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"- [Clear all schedule planner and completion data: `clear`](#clear-all-schedule-planner-and-completion-data-clear)","lastModifiedDate":"2023-11-11"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"- [Complete a module in your schedule planner: `complete`](#complete-a-module-complete)","lastModifiedDate":"2023-11-11"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"- [View modules left for graduation: `left`](#list-required-modules-left-left)","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"- [Check current pace to graduate: `pace`](#check-current-pace-to-graduate-pace)","lastModifiedDate":"2023-11-11"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"- [View weekly timetable: `timetable show`](#view-weekly-timetable-timetable-show)","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"- [Modify weekly timetable: `timetable modify`](#modify-weekly-timetable-timetable-modify)","lastModifiedDate":"2023-11-11"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"- [Saves user\u0027s schedule and exits program: `bye`](#save-schedule-and-timetable-and-exit-the-program-bye)","lastModifiedDate":"2023-11-14"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"Note: Between arguments, spaces are required. Arguments need to be passed in the correct order.","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"### Viewing help: `help`","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"To view a list of all possible commands, a brief description of their functionality and syntax.","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"SebasFok"},"content":"##### Format: `help`","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"User input:","lastModifiedDate":"2023-11-10"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"`help`","lastModifiedDate":"2023-11-10"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-10"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"Here are all the commands currently available in NUSDegs!","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"- Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"- Parameters in [] are optional.","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"help                           Shows the list of commands.","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"required                       Displays the full requirements for your major.","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"recommend                      Displays a recommended schedule based on a keyword.","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"search KEYWORD                 Searches for modules to take based on keyword","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"info COMMAND MODULE_CODE       Displays information about a specific module.","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"prereq MODULE_CODE             Displays the prerequisites for a specific module.","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"schedule                       Shows schedule planner","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"add MODULE_CODE SEMESTER       Adds module to the schedule planner.","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"delete MODULE_CODE             Deletes module from the schedule planner.","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"shift MODULE_CODE SEMESTER     Shifts module in the schedule planner.","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"clear                          Clears all schedule planner and completion data.","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"complete MODULE_CODE           Marks a module as complete on schedule planner.","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"left                           Displays a list of remaining required modules.","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"pace [CURRENT_SEMESTER]        Computes and displays your graduation pace.","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"timetable COMMAND              Displays a grid containing this semester\u0027s classes","lastModifiedDate":"2023-11-13"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"bye                            Saves user\u0027s schedule and timetable and exits program.","lastModifiedDate":"2023-11-14"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"For more information, please read our User Guide at this link:","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"https://ay2324s1-cs2113-t17-4.github.io/tp/UserGuide.html","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":124,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"### Getting a list of required modules:`required`","lastModifiedDate":"2023-11-08"},{"lineNumber":126,"author":{"gitId":"janelleenqi"},"content":"Get an overview of required modules for the user\u0027s major","lastModifiedDate":"2023-11-08"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"SebasFok"},"content":"##### Format: `required`","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"SebasFok"},"content":"##### Example of usage 1: (user\u0027s major is CEG)","lastModifiedDate":"2023-11-10"},{"lineNumber":131,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"janelleenqi"},"content":"User input:","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"janelleenqi"},"content":"`required`","lastModifiedDate":"2023-11-08"},{"lineNumber":134,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"SebasFok"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":137,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":138,"author":{"gitId":"janelleenqi"},"content":"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#","lastModifiedDate":"2023-11-13"},{"lineNumber":139,"author":{"gitId":"janelleenqi"},"content":"║   Modular Requirements for CEG                    Units  ║","lastModifiedDate":"2023-11-13"},{"lineNumber":140,"author":{"gitId":"janelleenqi"},"content":"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#","lastModifiedDate":"2023-11-13"},{"lineNumber":141,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-13"},{"lineNumber":142,"author":{"gitId":"janelleenqi"},"content":"│   Common Curriculum Requirements                  60     │","lastModifiedDate":"2023-11-13"},{"lineNumber":143,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-13"},{"lineNumber":144,"author":{"gitId":"janelleenqi"},"content":"    GES1000 (Singapore Studies)                     4","lastModifiedDate":"2023-11-13"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"    GEC1000 (Cultures and Connections)              4","lastModifiedDate":"2023-11-13"},{"lineNumber":146,"author":{"gitId":"janelleenqi"},"content":"    GEN2000 (Communities and Engagement)            4","lastModifiedDate":"2023-11-13"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"    ES2631 Critique \u0026 Communication of Thinking","lastModifiedDate":"2023-11-13"},{"lineNumber":148,"author":{"gitId":"janelleenqi"},"content":"    \u0026 Design (Critique \u0026 Expression)                4","lastModifiedDate":"2023-11-13"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"    CS1010 Programming Methodology (Digital ","lastModifiedDate":"2023-11-13"},{"lineNumber":150,"author":{"gitId":"janelleenqi"},"content":"    Literacy)                                       4","lastModifiedDate":"2023-11-13"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"    GEA1000 Quantitative Reasoning with Data (Data ","lastModifiedDate":"2023-11-13"},{"lineNumber":152,"author":{"gitId":"janelleenqi"},"content":"    Literacy)                                       4","lastModifiedDate":"2023-11-13"},{"lineNumber":153,"author":{"gitId":"janelleenqi"},"content":"    DTK1234 Design Thinking (Design Thinking)       4","lastModifiedDate":"2023-11-13"},{"lineNumber":154,"author":{"gitId":"janelleenqi"},"content":"    EG1311 Design and Make (Maker Space)            4","lastModifiedDate":"2023-11-13"},{"lineNumber":155,"author":{"gitId":"janelleenqi"},"content":"    IE2141 Systems Thinking and Dynamics (Systems ","lastModifiedDate":"2023-11-13"},{"lineNumber":156,"author":{"gitId":"janelleenqi"},"content":"    Thinking)                                       4","lastModifiedDate":"2023-11-13"},{"lineNumber":157,"author":{"gitId":"janelleenqi"},"content":"    EE2211 Introduction to Machine Learning ","lastModifiedDate":"2023-11-13"},{"lineNumber":158,"author":{"gitId":"janelleenqi"},"content":"    (Artificial Intelligence)                       4","lastModifiedDate":"2023-11-13"},{"lineNumber":159,"author":{"gitId":"janelleenqi"},"content":"    CDE2501 Liveable Cities (Sustainable Futures)   4","lastModifiedDate":"2023-11-13"},{"lineNumber":160,"author":{"gitId":"janelleenqi"},"content":"    CDE2000 (Creating Narratives)                   4","lastModifiedDate":"2023-11-13"},{"lineNumber":161,"author":{"gitId":"janelleenqi"},"content":"    PF1101 Fundamentals of Project Management ","lastModifiedDate":"2023-11-13"},{"lineNumber":162,"author":{"gitId":"janelleenqi"},"content":"    (Project Management)                            4","lastModifiedDate":"2023-11-13"},{"lineNumber":163,"author":{"gitId":"janelleenqi"},"content":"    CG4002 Computer Engineering Capstone Project 1 ","lastModifiedDate":"2023-11-13"},{"lineNumber":164,"author":{"gitId":"janelleenqi"},"content":"    (Integrated Project)                            8","lastModifiedDate":"2023-11-13"},{"lineNumber":165,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"janelleenqi"},"content":"│   Programme Requirements                          60     │","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"janelleenqi"},"content":" ~~ Engineering Core                                20  ~~","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":171,"author":{"gitId":"janelleenqi"},"content":"    MA1511 Engineering Calculus                     2","lastModifiedDate":"2023-11-13"},{"lineNumber":172,"author":{"gitId":"janelleenqi"},"content":"    MA1512 Differential Equations for Engineering   2","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"janelleenqi"},"content":"    MA1508E Linear Algebra for Engineering          4","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"janelleenqi"},"content":"    EG2401A Engineering Professionalism             2","lastModifiedDate":"2023-11-13"},{"lineNumber":175,"author":{"gitId":"janelleenqi"},"content":"    CP3880 Advanced Technology Attachment Programme 12","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":177,"author":{"gitId":"janelleenqi"},"content":" ~~ CEG Major                                       40  ~~","lastModifiedDate":"2023-11-13"},{"lineNumber":178,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":179,"author":{"gitId":"janelleenqi"},"content":"    CG1111A Engineering Principles and Practice I   4","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"janelleenqi"},"content":"    CG2111A Engineering Principles and Practice II  4","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"janelleenqi"},"content":"    CS1231 Discrete Structures                      4","lastModifiedDate":"2023-11-13"},{"lineNumber":182,"author":{"gitId":"janelleenqi"},"content":"    CG2023 Signals \u0026 Systems                        4","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"janelleenqi"},"content":"    CG2027 Transistor-level Digital Circuit         2","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"janelleenqi"},"content":"    CG2028 Computer Organization                    2","lastModifiedDate":"2023-11-13"},{"lineNumber":185,"author":{"gitId":"janelleenqi"},"content":"    CG2271 Real-time Operating System               4","lastModifiedDate":"2023-11-13"},{"lineNumber":186,"author":{"gitId":"janelleenqi"},"content":"    CS2040C Data Structures and Algorithms          4","lastModifiedDate":"2023-11-13"},{"lineNumber":187,"author":{"gitId":"janelleenqi"},"content":"    CS2113 Software Engineering \u0026 Object-Oriented ","lastModifiedDate":"2023-11-13"},{"lineNumber":188,"author":{"gitId":"janelleenqi"},"content":"    Programming                                     4","lastModifiedDate":"2023-11-13"},{"lineNumber":189,"author":{"gitId":"janelleenqi"},"content":"    EE2026 Digital Design                           4","lastModifiedDate":"2023-11-13"},{"lineNumber":190,"author":{"gitId":"janelleenqi"},"content":"    EE4204 Computer Networks                        4","lastModifiedDate":"2023-11-13"},{"lineNumber":191,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":192,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"janelleenqi"},"content":"│   Unrestricted Electives                          40     │","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":196,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":197,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":198,"author":{"gitId":"SebasFok"},"content":"##### Example of usage 2: (user\u0027s major is CS)","lastModifiedDate":"2023-11-10"},{"lineNumber":199,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":200,"author":{"gitId":"janelleenqi"},"content":"User input:","lastModifiedDate":"2023-11-08"},{"lineNumber":201,"author":{"gitId":"janelleenqi"},"content":"`required`","lastModifiedDate":"2023-11-08"},{"lineNumber":202,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":203,"author":{"gitId":"janelleenqi"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-08"},{"lineNumber":204,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":205,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":206,"author":{"gitId":"janelleenqi"},"content":"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#","lastModifiedDate":"2023-11-13"},{"lineNumber":207,"author":{"gitId":"janelleenqi"},"content":"║   Modular Requirements for CS                     Units  ║","lastModifiedDate":"2023-11-13"},{"lineNumber":208,"author":{"gitId":"janelleenqi"},"content":"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#","lastModifiedDate":"2023-11-13"},{"lineNumber":209,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-13"},{"lineNumber":210,"author":{"gitId":"janelleenqi"},"content":"│   Common Curriculum Requirements                  40     │","lastModifiedDate":"2023-11-13"},{"lineNumber":211,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-13"},{"lineNumber":212,"author":{"gitId":"janelleenqi"},"content":" ~~ University Requirements: 6 University Pillars   24  ~~","lastModifiedDate":"2023-11-13"},{"lineNumber":213,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":214,"author":{"gitId":"janelleenqi"},"content":"    CS1101S Programming Methodology (Digital ","lastModifiedDate":"2023-11-13"},{"lineNumber":215,"author":{"gitId":"janelleenqi"},"content":"    Literacy)                                       4","lastModifiedDate":"2023-11-13"},{"lineNumber":216,"author":{"gitId":"janelleenqi"},"content":"    ES2660 Communicating in the Information Age ","lastModifiedDate":"2023-11-13"},{"lineNumber":217,"author":{"gitId":"janelleenqi"},"content":"    (Critique and Expression)                       4","lastModifiedDate":"2023-11-13"},{"lineNumber":218,"author":{"gitId":"janelleenqi"},"content":"    GEC1% (Cultures and Connections)                4","lastModifiedDate":"2023-11-13"},{"lineNumber":219,"author":{"gitId":"janelleenqi"},"content":"    GEA1000 / BT1101 / ST1131 / DSA1101 (Data ","lastModifiedDate":"2023-11-13"},{"lineNumber":220,"author":{"gitId":"janelleenqi"},"content":"    Literacy)                                       4","lastModifiedDate":"2023-11-13"},{"lineNumber":221,"author":{"gitId":"janelleenqi"},"content":"    GES1% (Singapore Studies)                       4","lastModifiedDate":"2023-11-13"},{"lineNumber":222,"author":{"gitId":"janelleenqi"},"content":"    GEN2% (Communities and Engagement)              4","lastModifiedDate":"2023-11-13"},{"lineNumber":223,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":224,"author":{"gitId":"janelleenqi"},"content":" ~~ Computing Ethics                                4  ~~","lastModifiedDate":"2023-11-13"},{"lineNumber":225,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":226,"author":{"gitId":"janelleenqi"},"content":"    IS1108 Digital Ethics and Data Privacy          4","lastModifiedDate":"2023-11-13"},{"lineNumber":227,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":228,"author":{"gitId":"janelleenqi"},"content":" ~~   Inter \u0026 Cross-Disciplinary Education          12 ~~","lastModifiedDate":"2023-11-13"},{"lineNumber":229,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":230,"author":{"gitId":"janelleenqi"},"content":"    Interdisciplinary (ID) Courses (at least 2)","lastModifiedDate":"2023-11-13"},{"lineNumber":231,"author":{"gitId":"janelleenqi"},"content":"    Cross-disciplinary (CD) Courses (no more than 1)","lastModifiedDate":"2023-11-13"},{"lineNumber":232,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":233,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-13"},{"lineNumber":234,"author":{"gitId":"janelleenqi"},"content":"│   Programme Requirements                          80     │","lastModifiedDate":"2023-11-13"},{"lineNumber":235,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-13"},{"lineNumber":236,"author":{"gitId":"janelleenqi"},"content":" ~~ Computer Science Foundation                     36  ~~","lastModifiedDate":"2023-11-13"},{"lineNumber":237,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":238,"author":{"gitId":"janelleenqi"},"content":"    CS1231S Discrete Structures                     4","lastModifiedDate":"2023-11-13"},{"lineNumber":239,"author":{"gitId":"janelleenqi"},"content":"    CS2030S Programming Methodology II              4","lastModifiedDate":"2023-11-13"},{"lineNumber":240,"author":{"gitId":"janelleenqi"},"content":"    CS2040S Data Structures and Algorithms          4","lastModifiedDate":"2023-11-13"},{"lineNumber":241,"author":{"gitId":"janelleenqi"},"content":"    CS2100 Computer Organisation                    4","lastModifiedDate":"2023-11-13"},{"lineNumber":242,"author":{"gitId":"janelleenqi"},"content":"    CS2101 Effective Communication for Computing ","lastModifiedDate":"2023-11-13"},{"lineNumber":243,"author":{"gitId":"janelleenqi"},"content":"    Professionals                                   4","lastModifiedDate":"2023-11-13"},{"lineNumber":244,"author":{"gitId":"janelleenqi"},"content":"    CS2103T Software Engineering                    4","lastModifiedDate":"2023-11-13"},{"lineNumber":245,"author":{"gitId":"janelleenqi"},"content":"    CS2106 Introduction to Operating Systems        4","lastModifiedDate":"2023-11-13"},{"lineNumber":246,"author":{"gitId":"janelleenqi"},"content":"    CS2109S Introduction to AI and Machine Learning 4","lastModifiedDate":"2023-11-13"},{"lineNumber":247,"author":{"gitId":"janelleenqi"},"content":"    CS3230 Design and Analysis of Algorithms        4","lastModifiedDate":"2023-11-13"},{"lineNumber":248,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":249,"author":{"gitId":"janelleenqi"},"content":" ~~ Computer Science Breadth and Depth              32  ~~","lastModifiedDate":"2023-11-13"},{"lineNumber":250,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":251,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":252,"author":{"gitId":"janelleenqi"},"content":" ~~ Mathematics and Sciences                        12  ~~","lastModifiedDate":"2023-11-13"},{"lineNumber":253,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":254,"author":{"gitId":"janelleenqi"},"content":"    MA1521 Calculus for Computing                   4","lastModifiedDate":"2023-11-13"},{"lineNumber":255,"author":{"gitId":"janelleenqi"},"content":"    MA1522 Linear Algebra for Computing             4","lastModifiedDate":"2023-11-13"},{"lineNumber":256,"author":{"gitId":"janelleenqi"},"content":"    ST2334 Probability and Statistics               4","lastModifiedDate":"2023-11-13"},{"lineNumber":257,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":258,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-13"},{"lineNumber":259,"author":{"gitId":"janelleenqi"},"content":"│   Unrestricted Electives                          40     │","lastModifiedDate":"2023-11-13"},{"lineNumber":260,"author":{"gitId":"janelleenqi"},"content":"+----------------------------------------------------------+","lastModifiedDate":"2023-11-13"},{"lineNumber":261,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":262,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":263,"author":{"gitId":"ryanlohyr"},"content":"### View module prerequisites:`prereq`","lastModifiedDate":"2023-11-06"},{"lineNumber":264,"author":{"gitId":"ryanlohyr"},"content":"Based on the module selected, we will show what prerequisites the course has.","lastModifiedDate":"2023-11-06"},{"lineNumber":265,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":266,"author":{"gitId":"ryanlohyr"},"content":"##### Note:","lastModifiedDate":"2023-11-06"},{"lineNumber":267,"author":{"gitId":"ryanlohyr"},"content":"- Since NUS has the concept of preclusions, when prerequisites are shown, it is shown based on the degree of the current ","lastModifiedDate":"2023-11-06"},{"lineNumber":268,"author":{"gitId":"ryanlohyr"},"content":"user.","lastModifiedDate":"2023-11-06"},{"lineNumber":269,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":270,"author":{"gitId":"ryanlohyr"},"content":"- If the module is not a requisite of the students major, we will only show one preclusion as a prerequisite","lastModifiedDate":"2023-11-06"},{"lineNumber":271,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":272,"author":{"gitId":"SebasFok"},"content":"##### Format: `prereq MODULE_CODE`","lastModifiedDate":"2023-11-09"},{"lineNumber":273,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":274,"author":{"gitId":"SebasFok"},"content":"- The input is not case-sensitive. E.g. eg1311 or EG1311 is shown","lastModifiedDate":"2023-11-09"},{"lineNumber":275,"author":{"gitId":"ryanlohyr"},"content":"out","lastModifiedDate":"2023-11-06"},{"lineNumber":276,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":277,"author":{"gitId":"SebasFok"},"content":"##### Example of Usage:","lastModifiedDate":"2023-11-10"},{"lineNumber":278,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":279,"author":{"gitId":"SebasFok"},"content":"User input:","lastModifiedDate":"2023-11-09"},{"lineNumber":280,"author":{"gitId":"ryanlohyr"},"content":"`prereq ee2211` ","lastModifiedDate":"2023-11-13"},{"lineNumber":281,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":282,"author":{"gitId":"ryanlohyr"},"content":"Assuming the user is from Computer Engineering","lastModifiedDate":"2023-11-06"},{"lineNumber":283,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":284,"author":{"gitId":"SebasFok"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-14"},{"lineNumber":285,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":286,"author":{"gitId":"ryanlohyr"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":287,"author":{"gitId":"ryanlohyr"},"content":"1. CS1010      2. MA1511      3. MA1508E","lastModifiedDate":"2023-11-13"},{"lineNumber":288,"author":{"gitId":"ryanlohyr"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":289,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":290,"author":{"gitId":"ryanlohyr"},"content":"### Searching for a module by title: `search`","lastModifiedDate":"2023-11-06"},{"lineNumber":291,"author":{"gitId":"ryanlohyr"},"content":"Search for module title using a keyword.","lastModifiedDate":"2023-11-06"},{"lineNumber":292,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":293,"author":{"gitId":"SebasFok"},"content":"##### Format: `search KEYWORD`","lastModifiedDate":"2023-11-09"},{"lineNumber":294,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":295,"author":{"gitId":"ryanlohyr"},"content":"* The `KEYWORD` cannot be empty.","lastModifiedDate":"2023-11-06"},{"lineNumber":296,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":297,"author":{"gitId":"SebasFok"},"content":"##### Example of usage:","lastModifiedDate":"2023-11-10"},{"lineNumber":298,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":299,"author":{"gitId":"SebasFok"},"content":"User input:","lastModifiedDate":"2023-11-09"},{"lineNumber":300,"author":{"gitId":"SebasFok"},"content":"`search Darwinian`","lastModifiedDate":"2023-11-09"},{"lineNumber":301,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":302,"author":{"gitId":"SebasFok"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-14"},{"lineNumber":303,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":304,"author":{"gitId":"SebasFok"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":305,"author":{"gitId":"ryanlohyr"},"content":"These are the modules that contain your keyword in the title:","lastModifiedDate":"2023-11-06"},{"lineNumber":306,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":307,"author":{"gitId":"rohitcube"},"content":"Title: Junior Seminar: The Darwinian Revolution","lastModifiedDate":"2023-11-09"},{"lineNumber":308,"author":{"gitId":"SebasFok"},"content":"Module Code: UTC1102B","lastModifiedDate":"2023-11-14"},{"lineNumber":309,"author":{"gitId":"SebasFok"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":310,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":311,"author":{"gitId":"rohitcube"},"content":"### Get information about a module: `info description`","lastModifiedDate":"2023-11-13"},{"lineNumber":312,"author":{"gitId":"rohitcube"},"content":"Get information about a module using the info command, followed by the command \u0027description\u0027.","lastModifiedDate":"2023-11-09"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":314,"author":{"gitId":"rohitcube"},"content":"##### Format: `info description MODULE_CODE`","lastModifiedDate":"2023-11-13"},{"lineNumber":315,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":316,"author":{"gitId":"SebasFok"},"content":"* The `MODULE_CODE` cannot be empty.","lastModifiedDate":"2023-11-09"},{"lineNumber":317,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":318,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":319,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":320,"author":{"gitId":"SebasFok"},"content":"##### Examples of usage:","lastModifiedDate":"2023-11-10"},{"lineNumber":321,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":322,"author":{"gitId":"SebasFok"},"content":"User input:","lastModifiedDate":"2023-11-09"},{"lineNumber":323,"author":{"gitId":"rohitcube"},"content":"`info description CS2113`","lastModifiedDate":"2023-11-01"},{"lineNumber":324,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":325,"author":{"gitId":"SebasFok"},"content":"- Expected outcome: ","lastModifiedDate":"2023-11-14"},{"lineNumber":326,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":327,"author":{"gitId":"SebasFok"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":328,"author":{"gitId":"SebasFok"},"content":"This course introduces the necessary skills for systematic and rigorous development of software","lastModifiedDate":"2023-11-14"},{"lineNumber":329,"author":{"gitId":"SebasFok"},"content":" systems. It covers requirements, design, implementation, quality assurance, and project management","lastModifiedDate":"2023-11-14"},{"lineNumber":330,"author":{"gitId":"SebasFok"},"content":" aspects of small-to-medium size multi-person software projects. The course uses the Object","lastModifiedDate":"2023-11-14"},{"lineNumber":331,"author":{"gitId":"SebasFok"},"content":" Oriented Programming paradigm. Students of this course will receive hands-on practice of tools","lastModifiedDate":"2023-11-14"},{"lineNumber":332,"author":{"gitId":"SebasFok"},"content":" commonly used in the industry, such as test automation tools, build automation tools, and code","lastModifiedDate":"2023-11-14"},{"lineNumber":333,"author":{"gitId":"SebasFok"},"content":" revisioning tools will be covered.","lastModifiedDate":"2023-11-14"},{"lineNumber":334,"author":{"gitId":"SebasFok"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":335,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":336,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":337,"author":{"gitId":"ryanlohyr"},"content":"### View schedule planner: `schedule`","lastModifiedDate":"2023-11-06"},{"lineNumber":338,"author":{"gitId":"SebasFok"},"content":"Shows the user their current schedule planner","lastModifiedDate":"2023-11-08"},{"lineNumber":339,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":340,"author":{"gitId":"SebasFok"},"content":"##### Format: `schedule`","lastModifiedDate":"2023-11-09"},{"lineNumber":341,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":342,"author":{"gitId":"SebasFok"},"content":"- The input does not accept any arguments after the command word.","lastModifiedDate":"2023-11-09"},{"lineNumber":343,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":344,"author":{"gitId":"SebasFok"},"content":"##### Example of usage: ","lastModifiedDate":"2023-11-10"},{"lineNumber":345,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":346,"author":{"gitId":"SebasFok"},"content":"User input: `schedule`","lastModifiedDate":"2023-11-09"},{"lineNumber":347,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":348,"author":{"gitId":"ryanlohyr"},"content":"- Expected outcome :","lastModifiedDate":"2023-11-13"},{"lineNumber":349,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":350,"author":{"gitId":"ryanlohyr"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":351,"author":{"gitId":"ryanlohyr"},"content":"Sem 1:   X GESS1000     X DTK1234      X MA1512       X MA1511       X GEA1000      ","lastModifiedDate":"2023-11-13"},{"lineNumber":352,"author":{"gitId":"ryanlohyr"},"content":"Sem 2:   X EG1311       X EG2501       X GEN2000      X CS1010       X CS1231       ","lastModifiedDate":"2023-11-13"},{"lineNumber":353,"author":{"gitId":"ryanlohyr"},"content":"Sem 3:   X CG1111A      X IE2141       X CDE2000      X PF1101       X GEC1000      ","lastModifiedDate":"2023-11-13"},{"lineNumber":354,"author":{"gitId":"ryanlohyr"},"content":"Sem 4:   X CG2023       X MA1508E      X ST2334       X ES2631       X EG2401A      ","lastModifiedDate":"2023-11-13"},{"lineNumber":355,"author":{"gitId":"ryanlohyr"},"content":"Sem 5:   X EE4204       X EE2026       X CG2027       X CS2040C      X CG2111A      ","lastModifiedDate":"2023-11-13"},{"lineNumber":356,"author":{"gitId":"ryanlohyr"},"content":"Sem 6:   X CG2028       X CS2113       X CG2271       X EE2211       ","lastModifiedDate":"2023-11-13"},{"lineNumber":357,"author":{"gitId":"ryanlohyr"},"content":"Sem 7:   X CG4002       X CP3880       ","lastModifiedDate":"2023-11-13"},{"lineNumber":358,"author":{"gitId":"ryanlohyr"},"content":"Sem 8: ","lastModifiedDate":"2023-11-13"},{"lineNumber":359,"author":{"gitId":"ryanlohyr"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":360,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":361,"author":{"gitId":"ryanlohyr"},"content":"### View recommended schedule based on course: `recommend`","lastModifiedDate":"2023-11-06"},{"lineNumber":362,"author":{"gitId":"SebasFok"},"content":"Based on the student\u0027s course, we will provide a recommended schedule that is sorted based on prerequisites.","lastModifiedDate":"2023-11-09"},{"lineNumber":363,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":364,"author":{"gitId":"SebasFok"},"content":"##### Format: `recommend`","lastModifiedDate":"2023-11-09"},{"lineNumber":365,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":366,"author":{"gitId":"SebasFok"},"content":"##### Example of usage:","lastModifiedDate":"2023-11-10"},{"lineNumber":367,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":368,"author":{"gitId":"ryanlohyr"},"content":"User input:","lastModifiedDate":"2023-11-12"},{"lineNumber":369,"author":{"gitId":"ryanlohyr"},"content":"`recommend`","lastModifiedDate":"2023-11-12"},{"lineNumber":370,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":371,"author":{"gitId":"ryanlohyr"},"content":"##### Note:","lastModifiedDate":"2023-11-12"},{"lineNumber":372,"author":{"gitId":"ryanlohyr"},"content":"- Even if you have inputted Y2/S2(Year 2, Semester 2) for example, we would still recommend you a schedule with all the","lastModifiedDate":"2023-11-12"},{"lineNumber":373,"author":{"gitId":"ryanlohyr"},"content":"required modules from Year 1, Semester 1 till Year 4 semester 2 as the goal of the recommend function is to provide you","lastModifiedDate":"2023-11-12"},{"lineNumber":374,"author":{"gitId":"ryanlohyr"},"content":"a template order of you can take your modules!","lastModifiedDate":"2023-11-12"},{"lineNumber":375,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":376,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":377,"author":{"gitId":"ryanlohyr"},"content":"User input:","lastModifiedDate":"2023-11-06"},{"lineNumber":378,"author":{"gitId":"ryanlohyr"},"content":"`recommend`","lastModifiedDate":"2023-11-06"},{"lineNumber":379,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":380,"author":{"gitId":"SebasFok"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-09"},{"lineNumber":381,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":382,"author":{"gitId":"ryanlohyr"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":383,"author":{"gitId":"ryanlohyr"},"content":"Hold on a sec! Generating your recommended schedule \u003c3....","lastModifiedDate":"2023-11-13"},{"lineNumber":384,"author":{"gitId":"ryanlohyr"},"content":"Loading (.\u003e_\u003c.)","lastModifiedDate":"2023-11-13"},{"lineNumber":385,"author":{"gitId":"ryanlohyr"},"content":"1. GEA1000     2. MA1511      3. MA1512      4. DTK1234     5. GESS1000    ","lastModifiedDate":"2023-11-13"},{"lineNumber":386,"author":{"gitId":"ryanlohyr"},"content":"6. CS1231      7. CS1010      8. GEN2000     9. EG2501      10. EG1311     ","lastModifiedDate":"2023-11-13"},{"lineNumber":387,"author":{"gitId":"ryanlohyr"},"content":"11. GEC1000    12. PF1101     13. CDE2000    14. IE2141     15. CG1111A    ","lastModifiedDate":"2023-11-13"},{"lineNumber":388,"author":{"gitId":"ryanlohyr"},"content":"16. EG2401A    17. ES2631     18. ST2334     19. MA1508E    20. CG2023     ","lastModifiedDate":"2023-11-13"},{"lineNumber":389,"author":{"gitId":"ryanlohyr"},"content":"21. CG2111A    22. CS2040C    23. CG2027     24. EE2026     25. EE4204     ","lastModifiedDate":"2023-11-13"},{"lineNumber":390,"author":{"gitId":"ryanlohyr"},"content":"26. EE2211     27. CG2271     28. CS2113     29. CG2028     30. CP3880     ","lastModifiedDate":"2023-11-13"},{"lineNumber":391,"author":{"gitId":"ryanlohyr"},"content":"31. CG4002     ","lastModifiedDate":"2023-11-13"},{"lineNumber":392,"author":{"gitId":"ryanlohyr"},"content":"Here you go!","lastModifiedDate":"2023-11-13"},{"lineNumber":393,"author":{"gitId":"ryanlohyr"},"content":"Taking the modules in this order will ensure a prerequisite worry free uni life!","lastModifiedDate":"2023-11-13"},{"lineNumber":394,"author":{"gitId":"ryanlohyr"},"content":"Do you want to add this to your schedule planner? (This will overwrite your current schedule!)","lastModifiedDate":"2023-11-13"},{"lineNumber":395,"author":{"gitId":"ryanlohyr"},"content":"Please input \u0027Y\u0027 or \u0027N\u0027","lastModifiedDate":"2023-11-13"},{"lineNumber":396,"author":{"gitId":"ryanlohyr"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":397,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":398,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":399,"author":{"gitId":"ryanlohyr"},"content":"- If the user enters `Y`, the recommended schedule will be added to their schedule","lastModifiedDate":"2023-11-13"},{"lineNumber":400,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":401,"author":{"gitId":"ryanlohyr"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":402,"author":{"gitId":"ryanlohyr"},"content":"Here is your schedule planner!","lastModifiedDate":"2023-11-13"},{"lineNumber":403,"author":{"gitId":"ryanlohyr"},"content":"Sem 1:   X GESS1000     X DTK1234      X MA1512       X MA1511       X GEA1000      ","lastModifiedDate":"2023-11-13"},{"lineNumber":404,"author":{"gitId":"ryanlohyr"},"content":"Sem 2:   X EG1311       X EG2501       X GEN2000      X CS1010       X CS1231       ","lastModifiedDate":"2023-11-13"},{"lineNumber":405,"author":{"gitId":"ryanlohyr"},"content":"Sem 3:   X CG1111A      X IE2141       X CDE2000      X PF1101       X GEC1000      ","lastModifiedDate":"2023-11-13"},{"lineNumber":406,"author":{"gitId":"ryanlohyr"},"content":"Sem 4:   X CG2023       X MA1508E      X ST2334       X ES2631       X EG2401A      ","lastModifiedDate":"2023-11-13"},{"lineNumber":407,"author":{"gitId":"ryanlohyr"},"content":"Sem 5:   X EE4204       X EE2026       X CG2027       X CS2040C      X CG2111A      ","lastModifiedDate":"2023-11-13"},{"lineNumber":408,"author":{"gitId":"ryanlohyr"},"content":"Sem 6:   X CG2028       X CS2113       X CG2271       X EE2211       ","lastModifiedDate":"2023-11-13"},{"lineNumber":409,"author":{"gitId":"ryanlohyr"},"content":"Sem 7:   X CG4002       X CP3880       ","lastModifiedDate":"2023-11-13"},{"lineNumber":410,"author":{"gitId":"ryanlohyr"},"content":"Sem 8:   ","lastModifiedDate":"2023-11-13"},{"lineNumber":411,"author":{"gitId":"ryanlohyr"},"content":"Happy degree planning!","lastModifiedDate":"2023-11-13"},{"lineNumber":412,"author":{"gitId":"ryanlohyr"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":414,"author":{"gitId":"SebasFok"},"content":"### Add module to schedule planner: `add`","lastModifiedDate":"2023-11-08"},{"lineNumber":415,"author":{"gitId":"SebasFok"},"content":"Opens the user\u0027s personalized module schedule planner and adds the chosen module to the semester specified by the user.","lastModifiedDate":"2023-11-08"},{"lineNumber":416,"author":{"gitId":"SebasFok"},"content":"Adding will not be allowed if the current schedule planner does not contain the required prerequisites.","lastModifiedDate":"2023-11-08"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":418,"author":{"gitId":"SebasFok"},"content":"##### Format: `add MODULE_CODE SEMESTER`","lastModifiedDate":"2023-11-09"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":420,"author":{"gitId":"SebasFok"},"content":"* `MODULE_CODE` cannot be empty and must be valid.","lastModifiedDate":"2023-11-09"},{"lineNumber":421,"author":{"gitId":"SebasFok"},"content":"* `SEMESTER` cannot be empty and must be an integer between 1-8 inclusive.","lastModifiedDate":"2023-11-08"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":423,"author":{"gitId":"ryanlohyr"},"content":"##### Note:","lastModifiedDate":"2023-11-10"},{"lineNumber":424,"author":{"gitId":"SebasFok"},"content":"- We do not check for preclusions when adding. (It is something we hope to implement in the future!)","lastModifiedDate":"2023-11-13"},{"lineNumber":425,"author":{"gitId":"SebasFok"},"content":"- E.g. If you have added CS2040C in your schedule, you are still able to add CS2040 even though it is a preclusion.","lastModifiedDate":"2023-11-13"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":428,"author":{"gitId":"SebasFok"},"content":"##### Example of usage:","lastModifiedDate":"2023-11-10"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":430,"author":{"gitId":"SebasFok"},"content":"User input:","lastModifiedDate":"2023-11-09"},{"lineNumber":431,"author":{"gitId":"SebasFok"},"content":"`add CS1010 1`","lastModifiedDate":"2023-11-02"},{"lineNumber":432,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":433,"author":{"gitId":"SebasFok"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-02"},{"lineNumber":434,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":435,"author":{"gitId":"SebasFok"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":436,"author":{"gitId":"SebasFok"},"content":"Module Successfully Added","lastModifiedDate":"2023-11-14"},{"lineNumber":437,"author":{"gitId":"SebasFok"},"content":"Sem 1:   X CS1010","lastModifiedDate":"2023-11-14"},{"lineNumber":438,"author":{"gitId":"SebasFok"},"content":"Sem 2:","lastModifiedDate":"2023-11-14"},{"lineNumber":439,"author":{"gitId":"SebasFok"},"content":"Sem 3:","lastModifiedDate":"2023-11-14"},{"lineNumber":440,"author":{"gitId":"SebasFok"},"content":"Sem 4:","lastModifiedDate":"2023-11-14"},{"lineNumber":441,"author":{"gitId":"SebasFok"},"content":"Sem 5:","lastModifiedDate":"2023-11-14"},{"lineNumber":442,"author":{"gitId":"SebasFok"},"content":"Sem 6:","lastModifiedDate":"2023-11-14"},{"lineNumber":443,"author":{"gitId":"SebasFok"},"content":"Sem 7:","lastModifiedDate":"2023-11-14"},{"lineNumber":444,"author":{"gitId":"SebasFok"},"content":"Sem 8:","lastModifiedDate":"2023-11-14"},{"lineNumber":445,"author":{"gitId":"SebasFok"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":446,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":447,"author":{"gitId":"SebasFok"},"content":"### Delete module from schedule planner: `delete`","lastModifiedDate":"2023-11-08"},{"lineNumber":448,"author":{"gitId":"SebasFok"},"content":"Opens the user\u0027s personalized module schedule planner and deletes the chosen module. Deleting will not be allowed if","lastModifiedDate":"2023-11-08"},{"lineNumber":449,"author":{"gitId":"SebasFok"},"content":"the module to be deleted is a prerequisite of a module in later semesters on the schedule planner.","lastModifiedDate":"2023-11-08"},{"lineNumber":450,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":451,"author":{"gitId":"SebasFok"},"content":"##### Format: `delete MODULE_CODE`","lastModifiedDate":"2023-11-09"},{"lineNumber":452,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":453,"author":{"gitId":"SebasFok"},"content":"* `MODULE_CODE` cannot be empty and must be valid.","lastModifiedDate":"2023-11-09"},{"lineNumber":454,"author":{"gitId":"SebasFok"},"content":"* `MODULE_CODE` must also be in the current schedule planner","lastModifiedDate":"2023-11-09"},{"lineNumber":455,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":456,"author":{"gitId":"ryanlohyr"},"content":"##### Note:","lastModifiedDate":"2023-11-10"},{"lineNumber":457,"author":{"gitId":"ryanlohyr"},"content":"- Our delete function checks for validity of deletion by checking for the modules it \u0027unlocks\u0027, hence if you ","lastModifiedDate":"2023-11-10"},{"lineNumber":458,"author":{"gitId":"ryanlohyr"},"content":"were to add a module in semester one, but the following semester has already a module it \u0027unlocks\u0027, ","lastModifiedDate":"2023-11-10"},{"lineNumber":459,"author":{"gitId":"SebasFok"},"content":"you will not be able to delete it without deleting the module it satisfies! (However this is something we do as well ","lastModifiedDate":"2023-11-13"},{"lineNumber":460,"author":{"gitId":"SebasFok"},"content":"want to work on as well in the future!)","lastModifiedDate":"2023-11-13"},{"lineNumber":461,"author":{"gitId":"SebasFok"},"content":"- E.g. If you have both CS1010 and CS1101S in semester 1, and CS2040C in semester 2, you are unable to delete both","lastModifiedDate":"2023-11-13"},{"lineNumber":462,"author":{"gitId":"SebasFok"},"content":"CS1010 or CS1101S, even though just one of them is sufficient to unlock CS2040C.","lastModifiedDate":"2023-11-13"},{"lineNumber":463,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":464,"author":{"gitId":"SebasFok"},"content":"##### Examples of usage:","lastModifiedDate":"2023-11-10"},{"lineNumber":465,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":466,"author":{"gitId":"SebasFok"},"content":"User input:","lastModifiedDate":"2023-11-09"},{"lineNumber":467,"author":{"gitId":"SebasFok"},"content":"`delete CS1010` (Assume schedule is currently in the state from the example in `add`)","lastModifiedDate":"2023-11-02"},{"lineNumber":468,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":469,"author":{"gitId":"SebasFok"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-02"},{"lineNumber":470,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":471,"author":{"gitId":"SebasFok"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":472,"author":{"gitId":"SebasFok"},"content":"Module Successfully Deleted","lastModifiedDate":"2023-11-14"},{"lineNumber":473,"author":{"gitId":"SebasFok"},"content":"Sem 1:","lastModifiedDate":"2023-11-14"},{"lineNumber":474,"author":{"gitId":"SebasFok"},"content":"Sem 2:","lastModifiedDate":"2023-11-14"},{"lineNumber":475,"author":{"gitId":"SebasFok"},"content":"Sem 3:","lastModifiedDate":"2023-11-14"},{"lineNumber":476,"author":{"gitId":"SebasFok"},"content":"Sem 4:","lastModifiedDate":"2023-11-14"},{"lineNumber":477,"author":{"gitId":"SebasFok"},"content":"Sem 5:","lastModifiedDate":"2023-11-14"},{"lineNumber":478,"author":{"gitId":"SebasFok"},"content":"Sem 6:","lastModifiedDate":"2023-11-14"},{"lineNumber":479,"author":{"gitId":"SebasFok"},"content":"Sem 7:","lastModifiedDate":"2023-11-14"},{"lineNumber":480,"author":{"gitId":"SebasFok"},"content":"Sem 8:","lastModifiedDate":"2023-11-14"},{"lineNumber":481,"author":{"gitId":"SebasFok"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":482,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":483,"author":{"gitId":"SebasFok"},"content":"### Shift module in schedule planner: `shift`","lastModifiedDate":"2023-11-08"},{"lineNumber":484,"author":{"gitId":"SebasFok"},"content":"Opens the user\u0027s personalized module schedule planner and shifts the chosen module to the semester specified by the ","lastModifiedDate":"2023-11-08"},{"lineNumber":485,"author":{"gitId":"SebasFok"},"content":"user. Shifting will not be allowed if it causes conflicts with other modules in the schedule planner.","lastModifiedDate":"2023-11-08"},{"lineNumber":486,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":487,"author":{"gitId":"SebasFok"},"content":"##### Format: `shift MODULE_CODE SEMESTER`","lastModifiedDate":"2023-11-09"},{"lineNumber":488,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":489,"author":{"gitId":"SebasFok"},"content":"* `MODULE_CODE` cannot be empty and must be valid.","lastModifiedDate":"2023-11-09"},{"lineNumber":490,"author":{"gitId":"SebasFok"},"content":"* `MODULE_CODE` must also be in the current schedule planner","lastModifiedDate":"2023-11-09"},{"lineNumber":491,"author":{"gitId":"SebasFok"},"content":"* `SEMESTER` cannot be empty and must be an integer between 1-8 inclusive.","lastModifiedDate":"2023-11-08"},{"lineNumber":492,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":493,"author":{"gitId":"ryanlohyr"},"content":"##### Note:","lastModifiedDate":"2023-11-10"},{"lineNumber":494,"author":{"gitId":"SebasFok"},"content":"- Similar to the delete feature, shifting a module later checks for validity of shifting by checking for the modules it ","lastModifiedDate":"2023-11-13"},{"lineNumber":495,"author":{"gitId":"SebasFok"},"content":"\u0027unlocks\u0027, hence if there were two modules in semester 1 that both individually could satisfy a module in semester 2, you","lastModifiedDate":"2023-11-13"},{"lineNumber":496,"author":{"gitId":"SebasFok"},"content":"would not be able to shift any of the two semester 1 modules. (However this is something we do as well","lastModifiedDate":"2023-11-13"},{"lineNumber":497,"author":{"gitId":"SebasFok"},"content":"  want to work on as well in the future!)","lastModifiedDate":"2023-11-13"},{"lineNumber":498,"author":{"gitId":"SebasFok"},"content":"- E.g. If you have both CS1010 and CS1101S in semester 1, and CS2040C in semester 2, you are neither able to shift ","lastModifiedDate":"2023-11-13"},{"lineNumber":499,"author":{"gitId":"SebasFok"},"content":"  CS1010 nor CS1101S to semester 2 onwards, even though just one of them is sufficient to unlock CS2040C.","lastModifiedDate":"2023-11-13"},{"lineNumber":500,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":501,"author":{"gitId":"SebasFok"},"content":"##### Example of usage:","lastModifiedDate":"2023-11-10"},{"lineNumber":502,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":503,"author":{"gitId":"SebasFok"},"content":"User input:","lastModifiedDate":"2023-11-09"},{"lineNumber":504,"author":{"gitId":"SebasFok"},"content":"`shift CS1010 2` (Assume CS1010 was in Semester 1)","lastModifiedDate":"2023-11-14"},{"lineNumber":505,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":506,"author":{"gitId":"SebasFok"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-14"},{"lineNumber":507,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":508,"author":{"gitId":"SebasFok"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":509,"author":{"gitId":"SebasFok"},"content":"Module Successfully Shifted","lastModifiedDate":"2023-11-14"},{"lineNumber":510,"author":{"gitId":"SebasFok"},"content":"Sem 1:","lastModifiedDate":"2023-11-14"},{"lineNumber":511,"author":{"gitId":"SebasFok"},"content":"Sem 2:   X CS1010","lastModifiedDate":"2023-11-14"},{"lineNumber":512,"author":{"gitId":"SebasFok"},"content":"Sem 3:","lastModifiedDate":"2023-11-14"},{"lineNumber":513,"author":{"gitId":"SebasFok"},"content":"Sem 4:","lastModifiedDate":"2023-11-14"},{"lineNumber":514,"author":{"gitId":"SebasFok"},"content":"Sem 5:","lastModifiedDate":"2023-11-14"},{"lineNumber":515,"author":{"gitId":"SebasFok"},"content":"Sem 6:","lastModifiedDate":"2023-11-14"},{"lineNumber":516,"author":{"gitId":"SebasFok"},"content":"Sem 7:","lastModifiedDate":"2023-11-14"},{"lineNumber":517,"author":{"gitId":"SebasFok"},"content":"Sem 8:","lastModifiedDate":"2023-11-14"},{"lineNumber":518,"author":{"gitId":"SebasFok"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":519,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":520,"author":{"gitId":"SebasFok"},"content":"### Clear all schedule planner and completion data: `clear`","lastModifiedDate":"2023-11-09"},{"lineNumber":521,"author":{"gitId":"SebasFok"},"content":"Deletes every module in the module schedule planner and their completion data. The user will be prompted to confirm this","lastModifiedDate":"2023-11-09"},{"lineNumber":522,"author":{"gitId":"SebasFok"},"content":"action as this command cannot be undone.","lastModifiedDate":"2023-11-09"},{"lineNumber":523,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":524,"author":{"gitId":"SebasFok"},"content":"##### Format: `clear`","lastModifiedDate":"2023-11-09"},{"lineNumber":525,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":526,"author":{"gitId":"SebasFok"},"content":"##### Example of usage:","lastModifiedDate":"2023-11-10"},{"lineNumber":527,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":528,"author":{"gitId":"SebasFok"},"content":"User input:","lastModifiedDate":"2023-11-09"},{"lineNumber":529,"author":{"gitId":"SebasFok"},"content":"`clear` -\u003e `Y`","lastModifiedDate":"2023-11-14"},{"lineNumber":530,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":531,"author":{"gitId":"SebasFok"},"content":"* Expected outcome:","lastModifiedDate":"2023-11-08"},{"lineNumber":532,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":533,"author":{"gitId":"SebasFok"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":534,"author":{"gitId":"SebasFok"},"content":"Are you sure you want to clear your schedule? This action cannot be undone!","lastModifiedDate":"2023-11-14"},{"lineNumber":535,"author":{"gitId":"SebasFok"},"content":"Please input \u0027Y\u0027 or \u0027N\u0027","lastModifiedDate":"2023-11-14"},{"lineNumber":536,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":537,"author":{"gitId":"SebasFok"},"content":"Invalid input, please choose Y/N","lastModifiedDate":"2023-11-14"},{"lineNumber":538,"author":{"gitId":"SebasFok"},"content":"Y","lastModifiedDate":"2023-11-14"},{"lineNumber":539,"author":{"gitId":"SebasFok"},"content":"Schedule successfully cleared","lastModifiedDate":"2023-11-14"},{"lineNumber":540,"author":{"gitId":"SebasFok"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":541,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":542,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":543,"author":{"gitId":"ryanlohyr"},"content":"### Complete a module: `complete`","lastModifiedDate":"2023-11-06"},{"lineNumber":544,"author":{"gitId":"ryanlohyr"},"content":"Completes a module (Completes a module in your schedule planner).","lastModifiedDate":"2023-11-06"},{"lineNumber":545,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":546,"author":{"gitId":"SebasFok"},"content":"#### Note: ","lastModifiedDate":"2023-11-09"},{"lineNumber":547,"author":{"gitId":"SebasFok"},"content":"- The module you complete has to be first added in your schedule planner!","lastModifiedDate":"2023-11-09"},{"lineNumber":548,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":549,"author":{"gitId":"SebasFok"},"content":"##### Format: `complete MODULE_CODE`","lastModifiedDate":"2023-11-09"},{"lineNumber":550,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":551,"author":{"gitId":"SebasFok"},"content":"##### Example of usage 1: (scenario where user\u0027s selected major is CEG)","lastModifiedDate":"2023-11-10"},{"lineNumber":552,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":553,"author":{"gitId":"ryanlohyr"},"content":"User input:","lastModifiedDate":"2023-11-06"},{"lineNumber":554,"author":{"gitId":"ryanlohyr"},"content":"`complete ma1511`","lastModifiedDate":"2023-11-06"},{"lineNumber":555,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":556,"author":{"gitId":"ryanlohyr"},"content":"Expected outcome:","lastModifiedDate":"2023-11-06"},{"lineNumber":557,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":558,"author":{"gitId":"SebasFok"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":559,"author":{"gitId":"SebasFok"},"content":"Module Successfully Completed","lastModifiedDate":"2023-11-14"},{"lineNumber":560,"author":{"gitId":"SebasFok"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":561,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":562,"author":{"gitId":"janelleenqi"},"content":"### List required modules left: `left`","lastModifiedDate":"2023-11-13"},{"lineNumber":563,"author":{"gitId":"janelleenqi"},"content":"Displays the required modules left, which is the remainder after subtracting the modules completed ","lastModifiedDate":"2023-11-13"},{"lineNumber":564,"author":{"gitId":"janelleenqi"},"content":"(modules added to schedule planner and marked as completed), from the modules required for the user\u0027s major ","lastModifiedDate":"2023-11-13"},{"lineNumber":565,"author":{"gitId":"janelleenqi"},"content":"(modules displayed for `required` command) that have not been completed ","lastModifiedDate":"2023-11-13"},{"lineNumber":566,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":567,"author":{"gitId":"SebasFok"},"content":"##### Format: `left`","lastModifiedDate":"2023-11-10"},{"lineNumber":568,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":569,"author":{"gitId":"SebasFok"},"content":"##### Example of usage 1: (major is CEG, no modules completed)","lastModifiedDate":"2023-11-10"},{"lineNumber":570,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":571,"author":{"gitId":"janelleenqi"},"content":"User input:","lastModifiedDate":"2023-11-08"},{"lineNumber":572,"author":{"gitId":"janelleenqi"},"content":"`left`","lastModifiedDate":"2023-11-08"},{"lineNumber":573,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":574,"author":{"gitId":"janelleenqi"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-08"},{"lineNumber":575,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":576,"author":{"gitId":"janelleenqi"},"content":"Required Modules Left:","lastModifiedDate":"2023-11-13"},{"lineNumber":577,"author":{"gitId":"janelleenqi"},"content":"1. CG1111A     2. MA1511      3. MA1512      4. CS1010      5. GESS1000","lastModifiedDate":"2023-11-13"},{"lineNumber":578,"author":{"gitId":"janelleenqi"},"content":"6. GEC1000     7. GEN2000     8. ES2631      9. GEA1000     10. DTK1234","lastModifiedDate":"2023-11-13"},{"lineNumber":579,"author":{"gitId":"janelleenqi"},"content":"11. EG1311     12. IE2141     13. EE2211     14. EG2501     15. CDE2000","lastModifiedDate":"2023-11-13"},{"lineNumber":580,"author":{"gitId":"janelleenqi"},"content":"16. PF1101     17. CG4002     18. MA1508E    19. EG2401A    20. CP3880","lastModifiedDate":"2023-11-13"},{"lineNumber":581,"author":{"gitId":"janelleenqi"},"content":"21. CG2111A    22. CS1231     23. CG2023     24. CG2027     25. CG2028","lastModifiedDate":"2023-11-13"},{"lineNumber":582,"author":{"gitId":"janelleenqi"},"content":"26. CG2271     27. ST2334     28. CS2040C    29. CS2113     30. EE2026","lastModifiedDate":"2023-11-13"},{"lineNumber":583,"author":{"gitId":"janelleenqi"},"content":"31. EE4204","lastModifiedDate":"2023-11-13"},{"lineNumber":584,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":585,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":586,"author":{"gitId":"janelleenqi"},"content":"##### Example of usage 2: (major is CEG, CG1111A \u0026 CS1010 \u0026 GEC1000 are added and completed)","lastModifiedDate":"2023-11-13"},{"lineNumber":587,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":588,"author":{"gitId":"janelleenqi"},"content":"User input:","lastModifiedDate":"2023-11-08"},{"lineNumber":589,"author":{"gitId":"janelleenqi"},"content":"`left`","lastModifiedDate":"2023-11-08"},{"lineNumber":590,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":591,"author":{"gitId":"janelleenqi"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-08"},{"lineNumber":592,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":593,"author":{"gitId":"janelleenqi"},"content":"Required Modules Left:","lastModifiedDate":"2023-11-13"},{"lineNumber":594,"author":{"gitId":"janelleenqi"},"content":"1. MA1511      2. MA1512      3. GEC1000     4. GEN2000     5. ES2631","lastModifiedDate":"2023-11-13"},{"lineNumber":595,"author":{"gitId":"janelleenqi"},"content":"6. GEA1000     7. DTK1234     8. EG1311      9. IE2141      10. EE2211","lastModifiedDate":"2023-11-13"},{"lineNumber":596,"author":{"gitId":"janelleenqi"},"content":"11. EG2501     12. CDE2000    13. PF1101     14. CG4002     15. MA1508E","lastModifiedDate":"2023-11-13"},{"lineNumber":597,"author":{"gitId":"janelleenqi"},"content":"16. EG2401A    17. CP3880     18. CG2111A    19. CS1231     20. CG2023","lastModifiedDate":"2023-11-13"},{"lineNumber":598,"author":{"gitId":"janelleenqi"},"content":"21. CG2027     22. CG2028     23. CG2271     24. ST2334     25. CS2040C","lastModifiedDate":"2023-11-13"},{"lineNumber":599,"author":{"gitId":"janelleenqi"},"content":"26. CS2113     27. EE2026     28. EE4204","lastModifiedDate":"2023-11-13"},{"lineNumber":600,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":601,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":602,"author":{"gitId":"ryanlohyr"},"content":"### Check current pace to graduate: `pace`","lastModifiedDate":"2023-11-06"},{"lineNumber":603,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":604,"author":{"gitId":"ryanlohyr"},"content":"Based on the modules that have been completed, t","lastModifiedDate":"2023-11-06"},{"lineNumber":605,"author":{"gitId":"ryanlohyr"},"content":"The user can see how many MCs are left and how much time is left to complete the required MCs.","lastModifiedDate":"2023-11-06"},{"lineNumber":606,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":607,"author":{"gitId":"SebasFok"},"content":"##### Format: `pace`","lastModifiedDate":"2023-11-10"},{"lineNumber":608,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":609,"author":{"gitId":"SebasFok"},"content":"##### Note:","lastModifiedDate":"2023-11-10"},{"lineNumber":610,"author":{"gitId":"SebasFok"},"content":"- If no argument is given, we will take the year that you have initially inputted.","lastModifiedDate":"2023-11-09"},{"lineNumber":611,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":612,"author":{"gitId":"SebasFok"},"content":"- If an argument is given, we will take the academic year given and calculate the pace based on that.","lastModifiedDate":"2023-11-09"},{"lineNumber":613,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":614,"author":{"gitId":"ryanlohyr"},"content":"- The current number of modular credits to complete is set to 160. However, this is something we do want to modify in ","lastModifiedDate":"2023-11-10"},{"lineNumber":615,"author":{"gitId":"ryanlohyr"},"content":"future to cater to our double degree friends!","lastModifiedDate":"2023-11-10"},{"lineNumber":616,"author":{"gitId":"ryanlohyr"},"content":"- The pace function is to track the modules you have **completed** and not the modules you have **added**!","lastModifiedDate":"2023-11-12"},{"lineNumber":617,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":618,"author":{"gitId":"SebasFok"},"content":"##### Example of Usage:","lastModifiedDate":"2023-11-10"},{"lineNumber":619,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":620,"author":{"gitId":"ryanlohyr"},"content":"User input:","lastModifiedDate":"2023-11-06"},{"lineNumber":621,"author":{"gitId":"ryanlohyr"},"content":"`pace y1/s1`","lastModifiedDate":"2023-11-06"},{"lineNumber":622,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":623,"author":{"gitId":"SebasFok"},"content":"- Expected outcome: assuming 0 modular credits were done in semester one","lastModifiedDate":"2023-11-09"},{"lineNumber":624,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":625,"author":{"gitId":"SebasFok"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":626,"author":{"gitId":"SebasFok"},"content":"You have 160MCs for 7 semesters. Recommended Pace: 23MCs per sem until graduation","lastModifiedDate":"2023-11-14"},{"lineNumber":627,"author":{"gitId":"SebasFok"},"content":"```","lastModifiedDate":"2023-11-14"},{"lineNumber":628,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":629,"author":{"gitId":"rohitcube"},"content":"### View Weekly Timetable: `timetable show`","lastModifiedDate":"2023-11-09"},{"lineNumber":630,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":631,"author":{"gitId":"rohitcube"},"content":"Timetable view displays lectures, tutorials and classes (collectively referred to as lessons) ","lastModifiedDate":"2023-11-10"},{"lineNumber":632,"author":{"gitId":"rohitcube"},"content":"for each module in the student\u0027s current semester. ","lastModifiedDate":"2023-11-10"},{"lineNumber":633,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":634,"author":{"gitId":"rohitcube"},"content":"Format: `timetable show`","lastModifiedDate":"2023-11-09"},{"lineNumber":635,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":636,"author":{"gitId":"rohitcube"},"content":"##### Example of usage:","lastModifiedDate":"2023-11-10"},{"lineNumber":637,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":638,"author":{"gitId":"janelleenqi"},"content":"Scenario 1: No current semester modules (semester 4)","lastModifiedDate":"2023-11-13"},{"lineNumber":639,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":640,"author":{"gitId":"janelleenqi"},"content":"User input:","lastModifiedDate":"2023-11-10"},{"lineNumber":641,"author":{"gitId":"janelleenqi"},"content":"`timetable show`","lastModifiedDate":"2023-11-10"},{"lineNumber":642,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":643,"author":{"gitId":"janelleenqi"},"content":"Expected outcome:","lastModifiedDate":"2023-11-10"},{"lineNumber":644,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":645,"author":{"gitId":"janelleenqi"},"content":"Timetable view is unavailable as your current semester has no modules yet.","lastModifiedDate":"2023-11-13"},{"lineNumber":646,"author":{"gitId":"janelleenqi"},"content":"Add modules using this format: add [module code] 4","lastModifiedDate":"2023-11-13"},{"lineNumber":647,"author":{"gitId":"janelleenqi"},"content":"Alternatively, get the recommended schedule for your major: recommend","lastModifiedDate":"2023-11-13"},{"lineNumber":648,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":649,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":650,"author":{"gitId":"janelleenqi"},"content":"Scenario 2: No lectures, tutorials or labs exist (have current semester modules)","lastModifiedDate":"2023-11-13"},{"lineNumber":651,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":652,"author":{"gitId":"janelleenqi"},"content":"User input:","lastModifiedDate":"2023-11-13"},{"lineNumber":653,"author":{"gitId":"janelleenqi"},"content":"`timetable show`","lastModifiedDate":"2023-11-13"},{"lineNumber":654,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":655,"author":{"gitId":"janelleenqi"},"content":"Expected outcome:","lastModifiedDate":"2023-11-13"},{"lineNumber":656,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":657,"author":{"gitId":"janelleenqi"},"content":"Timetable view is unavailable as modules in your current semester have no lessons yet.","lastModifiedDate":"2023-11-13"},{"lineNumber":658,"author":{"gitId":"janelleenqi"},"content":"Enter Timetable Modify Mode to add lessons: timetable modify","lastModifiedDate":"2023-11-13"},{"lineNumber":659,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":660,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":661,"author":{"gitId":"janelleenqi"},"content":"Scenario 2: The lessons have been specified in Timetable Modify Mode","lastModifiedDate":"2023-11-10"},{"lineNumber":662,"author":{"gitId":"janelleenqi"},"content":"- CS2101 has a lecture at 5 for 2 hours on Monday","lastModifiedDate":"2023-11-13"},{"lineNumber":663,"author":{"gitId":"janelleenqi"},"content":"- GESS1000 has a lecture at 11 for 3 hours ","lastModifiedDate":"2023-11-13"},{"lineNumber":664,"author":{"gitId":"rohitcube"},"content":"on Tuesday","lastModifiedDate":"2023-11-10"},{"lineNumber":665,"author":{"gitId":"janelleenqi"},"content":"- GESS1000 has a tutorial at 19 for 0 hours on Wednesday. ","lastModifiedDate":"2023-11-13"},{"lineNumber":666,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":667,"author":{"gitId":"janelleenqi"},"content":"User input:","lastModifiedDate":"2023-11-10"},{"lineNumber":668,"author":{"gitId":"janelleenqi"},"content":"`timetable show`","lastModifiedDate":"2023-11-10"},{"lineNumber":669,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":670,"author":{"gitId":"janelleenqi"},"content":"Expected outcome:","lastModifiedDate":"2023-11-10"},{"lineNumber":671,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":672,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":673,"author":{"gitId":"janelleenqi"},"content":"| DAY       | TIMETABLE                                    |","lastModifiedDate":"2023-11-13"},{"lineNumber":674,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":675,"author":{"gitId":"janelleenqi"},"content":"| Monday    | CS2101 Lecture (5am-7am)                     |","lastModifiedDate":"2023-11-13"},{"lineNumber":676,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":677,"author":{"gitId":"janelleenqi"},"content":"| Tuesday   | GESS1000 Lecture (11am-2pm)                  |","lastModifiedDate":"2023-11-13"},{"lineNumber":678,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":679,"author":{"gitId":"janelleenqi"},"content":"| Wednesday | GESS1000 Tutorial (7pm)                      |","lastModifiedDate":"2023-11-13"},{"lineNumber":680,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":681,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":682,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":683,"author":{"gitId":"rohitcube"},"content":"### Modify Weekly Timetable: `timetable modify`","lastModifiedDate":"2023-11-09"},{"lineNumber":684,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":685,"author":{"gitId":"rohitcube"},"content":"Add lectures, tutorials and classes (collectively referred to as lessons) for a specific module ","lastModifiedDate":"2023-11-10"},{"lineNumber":686,"author":{"gitId":"rohitcube"},"content":"in the student\u0027s current semester. ","lastModifiedDate":"2023-11-10"},{"lineNumber":687,"author":{"gitId":"rohitcube"},"content":"The current semester\u0027s modules (if any) will be displayed. Users can perform actions such as add and clear ","lastModifiedDate":"2023-11-10"},{"lineNumber":688,"author":{"gitId":"rohitcube"},"content":"lessons in a module:","lastModifiedDate":"2023-11-10"},{"lineNumber":689,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":690,"author":{"gitId":"rohitcube"},"content":"#### Format for subcommands:","lastModifiedDate":"2023-11-10"},{"lineNumber":691,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":692,"author":{"gitId":"janelleenqi"},"content":"`timetable modify` - To enter Timetable Modify Mode","lastModifiedDate":"2023-11-10"},{"lineNumber":693,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":694,"author":{"gitId":"rohitcube"},"content":"`[MODULE CODE] [LECTURE / TUTORIAL / LAB] [TIME] [DURATION] [DAY]` -  Add a lesson","lastModifiedDate":"2023-11-10"},{"lineNumber":695,"author":{"gitId":"rohitcube"},"content":"and specify its details (time, duration, day)","lastModifiedDate":"2023-11-10"},{"lineNumber":696,"author":{"gitId":"janelleenqi"},"content":"- lessonType: lecture, tutorial, lab ","lastModifiedDate":"2023-11-10"},{"lineNumber":697,"author":{"gitId":"janelleenqi"},"content":"- startTime: integer from 5 to 23 (representing 5am to 11pm)","lastModifiedDate":"2023-11-12"},{"lineNumber":698,"author":{"gitId":"janelleenqi"},"content":"- duration: time in hours","lastModifiedDate":"2023-11-10"},{"lineNumber":699,"author":{"gitId":"janelleenqi"},"content":"- day: monday, tuesday, wednesday, thursday, friday, saturday, sunday","lastModifiedDate":"2023-11-10"},{"lineNumber":700,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":701,"author":{"gitId":"janelleenqi"},"content":"`[MODULE CODE] clear` - Clears all lessons of the selected module in current semester","lastModifiedDate":"2023-11-10"},{"lineNumber":702,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":703,"author":{"gitId":"janelleenqi"},"content":"`exit` - Exits Timetable Modify Mode and return to the main command loop","lastModifiedDate":"2023-11-10"},{"lineNumber":704,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":705,"author":{"gitId":"rohitcube"},"content":"##### Note: ","lastModifiedDate":"2023-11-10"},{"lineNumber":706,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":707,"author":{"gitId":"janelleenqi"},"content":"- Each argument has to be separated by whitespace.","lastModifiedDate":"2023-11-10"},{"lineNumber":708,"author":{"gitId":"janelleenqi"},"content":"- Input for TIME must be an integer from 5 to 23 (representing 5am to 11pm)","lastModifiedDate":"2023-11-12"},{"lineNumber":709,"author":{"gitId":"janelleenqi"},"content":"- Input for DURATION must be an integer that is at least 0","lastModifiedDate":"2023-11-12"},{"lineNumber":710,"author":{"gitId":"janelleenqi"},"content":"- If the sum of inputs for TIME and DURATION is greater than 23, only the start TIME will be displayed","lastModifiedDate":"2023-11-12"},{"lineNumber":711,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":712,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":713,"author":{"gitId":"rohitcube"},"content":"##### Example of Usage: ","lastModifiedDate":"2023-11-10"},{"lineNumber":714,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":715,"author":{"gitId":"rohitcube"},"content":"User input:","lastModifiedDate":"2023-11-09"},{"lineNumber":716,"author":{"gitId":"janelleenqi"},"content":"- `CS2101 LECTURE 5 2 MONDAY` ","lastModifiedDate":"2023-11-13"},{"lineNumber":717,"author":{"gitId":"janelleenqi"},"content":"- `GESS1000 LECTURE 12 3 TUESDAY`","lastModifiedDate":"2023-11-13"},{"lineNumber":718,"author":{"gitId":"janelleenqi"},"content":"- `GESS1000 TUTORIAL 19  WEDNESDAY`","lastModifiedDate":"2023-11-13"},{"lineNumber":719,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":720,"author":{"gitId":"janelleenqi"},"content":"Expected outcome:","lastModifiedDate":"2023-11-13"},{"lineNumber":721,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":722,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":723,"author":{"gitId":"janelleenqi"},"content":"| DAY       | TIMETABLE                                    |","lastModifiedDate":"2023-11-13"},{"lineNumber":724,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":725,"author":{"gitId":"janelleenqi"},"content":"| Monday    | CS2101 Lecture (5am-7am)                     |","lastModifiedDate":"2023-11-13"},{"lineNumber":726,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":727,"author":{"gitId":"janelleenqi"},"content":"| Tuesday   | GESS1000 Lecture (11am-2pm)                  |","lastModifiedDate":"2023-11-13"},{"lineNumber":728,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":729,"author":{"gitId":"janelleenqi"},"content":"| Wednesday | GESS1000 Tutorial (7pm)                      |","lastModifiedDate":"2023-11-13"},{"lineNumber":730,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":731,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":732,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":733,"author":{"gitId":"janelleenqi"},"content":"User input:","lastModifiedDate":"2023-11-13"},{"lineNumber":734,"author":{"gitId":"rohitcube"},"content":"- `GESS1000 clear` ","lastModifiedDate":"2023-11-10"},{"lineNumber":735,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":736,"author":{"gitId":"janelleenqi"},"content":"Expected outcome:","lastModifiedDate":"2023-11-13"},{"lineNumber":737,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":738,"author":{"gitId":"janelleenqi"},"content":"All lessons for selected module are cleared.","lastModifiedDate":"2023-11-13"},{"lineNumber":739,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":740,"author":{"gitId":"janelleenqi"},"content":"| DAY       | TIMETABLE                                    |","lastModifiedDate":"2023-11-13"},{"lineNumber":741,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":742,"author":{"gitId":"janelleenqi"},"content":"| Monday    | CS2101 Lecture (5am-7am)                     |","lastModifiedDate":"2023-11-13"},{"lineNumber":743,"author":{"gitId":"janelleenqi"},"content":"------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":744,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":745,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":746,"author":{"gitId":"janelleenqi"},"content":"User input:","lastModifiedDate":"2023-11-13"},{"lineNumber":747,"author":{"gitId":"rohitcube"},"content":"- `exit`","lastModifiedDate":"2023-11-10"},{"lineNumber":748,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":749,"author":{"gitId":"janelleenqi"},"content":"Expected Outcome:","lastModifiedDate":"2023-11-13"},{"lineNumber":750,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":751,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":752,"author":{"gitId":"janelleenqi"},"content":"Exited Timetable Modify Mode","lastModifiedDate":"2023-11-13"},{"lineNumber":753,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":754,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":755,"author":{"gitId":"janelleenqi"},"content":"### Save schedule and timetable and exit the program: `Bye`","lastModifiedDate":"2023-11-13"},{"lineNumber":756,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":757,"author":{"gitId":"janelleenqi"},"content":"Exit NUSDegs and save student details, schedule and current semester timetable into a data folder that will be in ","lastModifiedDate":"2023-11-13"},{"lineNumber":758,"author":{"gitId":"janelleenqi"},"content":"the same folder as where you placed `NUSDegs.jar`. The data folder will contain the user\u0027s student detail, ","lastModifiedDate":"2023-11-13"},{"lineNumber":759,"author":{"gitId":"janelleenqi"},"content":"their schedule planner and their current semester timetable.","lastModifiedDate":"2023-11-13"},{"lineNumber":760,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":761,"author":{"gitId":"janelleenqi"},"content":"##### Format: `bye`","lastModifiedDate":"2023-11-13"},{"lineNumber":762,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":763,"author":{"gitId":"SebasFok"},"content":"##### Example of usage:","lastModifiedDate":"2023-11-10"},{"lineNumber":764,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":765,"author":{"gitId":"janelleenqi"},"content":"User input: `bye`","lastModifiedDate":"2023-11-13"},{"lineNumber":766,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":767,"author":{"gitId":"SebasFok"},"content":"- Expected outcome","lastModifiedDate":"2023-11-10"},{"lineNumber":768,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":769,"author":{"gitId":"janelleenqi"},"content":"Data successfully saved in save files","lastModifiedDate":"2023-11-13"},{"lineNumber":770,"author":{"gitId":"janelleenqi"},"content":"Goodbye!","lastModifiedDate":"2023-11-13"},{"lineNumber":771,"author":{"gitId":"janelleenqi"},"content":"```","lastModifiedDate":"2023-11-13"},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":774,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":776,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":778,"author":{"gitId":"janelleenqi"},"content":"**A**: Currently, this feature is not included in NUSDegs.","lastModifiedDate":"2023-11-03"},{"lineNumber":779,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":780,"author":{"gitId":"ryanlohyr"},"content":"**Q**: What do I need to run this application? ","lastModifiedDate":"2023-11-09"},{"lineNumber":781,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":782,"author":{"gitId":"janelleenqi"},"content":"**A**: Your computer requires **Internet Access and Java 11** to run the application. ","lastModifiedDate":"2023-11-10"},{"lineNumber":783,"author":{"gitId":"ryanlohyr"},"content":"The operating system (Windows, macOS or Linux), doesn\u0027t matter.","lastModifiedDate":"2023-11-09"},{"lineNumber":784,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":785,"author":{"gitId":"SebasFok"},"content":"**Q**: Would my data be saved after I close NUSDegs?","lastModifiedDate":"2023-11-10"},{"lineNumber":786,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":787,"author":{"gitId":"janelleenqi"},"content":"**A**: Yes. Currently, your student details, schedule planner and current semester timetable will be saved inside a ","lastModifiedDate":"2023-11-13"},{"lineNumber":788,"author":{"gitId":"janelleenqi"},"content":"data folder which will be in the same folder as where you placed `NUSDegs.jar`. To access the save folder the next ","lastModifiedDate":"2023-11-13"},{"lineNumber":789,"author":{"gitId":"janelleenqi"},"content":"time you use NUSDegs, just start the jar file the same way and ensure that the data files have not been tempered with.","lastModifiedDate":"2023-11-13"},{"lineNumber":790,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":791,"author":{"gitId":"ryanlohyr"},"content":"**Q**: How is the `pace` function calculated?","lastModifiedDate":"2023-11-09"},{"lineNumber":792,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":793,"author":{"gitId":"ryanlohyr"},"content":"**A**: Currently, we set it at a default 160Modular credits to graduate, ","lastModifiedDate":"2023-11-09"},{"lineNumber":794,"author":{"gitId":"ryanlohyr"},"content":"however it is a feature we plan to include as to cater to double degree students!","lastModifiedDate":"2023-11-09"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":796,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":797,"author":{"gitId":"SebasFok"},"content":"Note: if an argument is wrapped with `[]` it means that it is optional. ","lastModifiedDate":"2023-11-09"},{"lineNumber":798,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":799,"author":{"gitId":"ryanlohyr"},"content":"| **Command**                                    | **Format**                        |","lastModifiedDate":"2023-11-06"},{"lineNumber":800,"author":{"gitId":"SebasFok"},"content":"|------------------------------------------------|-----------------------------------|","lastModifiedDate":"2023-11-09"},{"lineNumber":801,"author":{"gitId":"ryanlohyr"},"content":"| View Help                                      | `help`                            |","lastModifiedDate":"2023-11-06"},{"lineNumber":802,"author":{"gitId":"ryanlohyr"},"content":"| View modules left for graduation               | `left`                            | ","lastModifiedDate":"2023-11-06"},{"lineNumber":803,"author":{"gitId":"SebasFok"},"content":"| Check prerequisite for a module                | `prereq MODULE_CODE`              | ","lastModifiedDate":"2023-11-09"},{"lineNumber":804,"author":{"gitId":"SebasFok"},"content":"| Search for modules based on keywords           | `search KEYWORD`                  | ","lastModifiedDate":"2023-11-09"},{"lineNumber":805,"author":{"gitId":"SebasFok"},"content":"| View info about a module                       | `info description MODULE_CODE`    | ","lastModifiedDate":"2023-11-10"},{"lineNumber":806,"author":{"gitId":"ryanlohyr"},"content":"| View modules required for major                | `required`                        | ","lastModifiedDate":"2023-11-06"},{"lineNumber":807,"author":{"gitId":"ryanlohyr"},"content":"| View schedule planner                          | `schedule`                        | ","lastModifiedDate":"2023-11-06"},{"lineNumber":808,"author":{"gitId":"ryanlohyr"},"content":"| Recommend a schedule based on major            | `recommend`                       | ","lastModifiedDate":"2023-11-06"},{"lineNumber":809,"author":{"gitId":"SebasFok"},"content":"| Add module to schedule planner                 | `add MODULE_CODE SEMESTER_NUMBER` | ","lastModifiedDate":"2023-11-09"},{"lineNumber":810,"author":{"gitId":"SebasFok"},"content":"| Delete module from schedule planner            | `delete MODULE_CODE`              |","lastModifiedDate":"2023-11-09"},{"lineNumber":811,"author":{"gitId":"SebasFok"},"content":"| Shift module in schedule planner               | `shift MODULE_CODE SEMESTER`      |","lastModifiedDate":"2023-11-09"},{"lineNumber":812,"author":{"gitId":"SebasFok"},"content":"| Clear all schedule planner and completion data | `clear`                           |","lastModifiedDate":"2023-11-09"},{"lineNumber":813,"author":{"gitId":"SebasFok"},"content":"| Complete a module in your schedule planner     | `complete MODULE_CODE`            |","lastModifiedDate":"2023-11-09"},{"lineNumber":814,"author":{"gitId":"SebasFok"},"content":"| Check current pace to graduate                 | `pace [CURRENT_SEMESTER]`         | ","lastModifiedDate":"2023-11-09"},{"lineNumber":815,"author":{"gitId":"rohitcube"},"content":"| Modify weekly timetable                        | `timetable modify`                |","lastModifiedDate":"2023-11-09"},{"lineNumber":816,"author":{"gitId":"rohitcube"},"content":"| Show weekly timetable                          | `timetable show`                  |","lastModifiedDate":"2023-11-09"},{"lineNumber":817,"author":{"gitId":"ryanlohyr"},"content":"| Save schedule and timetable and exit the program             | `bye`                             |","lastModifiedDate":"2023-11-14"},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"SebasFok":206,"ryanlohyr":211,"janelleenqi":317,"rohitcube":55,"-":29}},{"path":"docs/diagrams/LeftFeature.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"@startuml","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"\u0027autonumber","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"\u0027autoactivate on","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"actor Student","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"participant \":Ui\" as UI","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"participant \"\u003c\u003cclass\u003e\u003e \\n:Module\\nInfoView\" as MIV","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"Student -\u003e UI: getUser\\nCommand() \\n\"left\"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"activate UI","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"note bottom","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"This command","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"returns the","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"modules left","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"to the user","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"end note","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"participant \"controller:\\nMain\\nController\" as MC #white","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"UI -\u003e MC: handleUser\\nInputTillExit\\nCommand()","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"activate MC","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"participant \"currentUser\\nCommand:\\nUserCommand\" as UC #white","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"participant \"\u003c\u003cclass\u003e\u003e \\n:ModuleMethods\\nController\" as MMC","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"MC -\u003e UC **: create","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"activate UC","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"UC --\u003e MC: currentUser\\nCommand \"left\"","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"deactivate UC","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"MC -\u003e UC: processCommand()","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"activate UC","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"box \"Model\" #LightBlue","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"participant \"student:\\nStudent\" as S #white","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"participant \"moduleCodesLeft:\\nArrayList\u003cString\u003e\" as MCL #white","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"participant \"schedule:\\nSchedule\" as SCH #white","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"participant \"modules\\nPlanned:\\nModuleList\" as MP #white","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"participant \"completed\\nModuleCodes:\\nArrayList\u003cString\u003e\" as CMC #white","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"UC -\u003e S: getModuleCodesLeft()","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"activate S","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"\u0027create moduleCodesLeft","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"S -\u003e MCL **: create","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"activate MCL","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"MCL --\u003e S","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"deactivate MCL","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"\u0027schedule.getModulesPlanned().getCompletedModuleCodes()","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"S -\u003e SCH: getModulesPlanned()","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"activate SCH","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"SCH --\u003e S: modulesPlanned:ModuleList","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"deactivate SCH","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"S -\u003e MP: modulesPlanned.getCompletedModuleCodes()","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"activate MP","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"MP --\u003e S: completedModuleCodes:ArrayList\u003cString\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"deactivate MP","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"loop moduleCode","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"    S -\u003e CMC: completedModuleCodes.contains(moduleCode)","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"    activate CMC","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"    CMC --\u003e S: contains:Boolean","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"    deactivate CMC","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"    opt !contains","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"        \u0027moduleCodesLeft.add(moduleCode)","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"        S -\u003e MCL: moduleCodesLeft\\n.add(moduleCode)","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"        activate MCL","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"        MCL --\u003e S","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"        deactivate MCL","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"    end","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"end","lastModifiedDate":"2023-11-13"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"destroy MCL","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"S --\u003e UC: moduleCodesLeft\\n:ArrayList\u003cString\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"deactivate S","lastModifiedDate":"2023-11-14"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"UC -\u003e MMC: showModulesLeft\\n(moduleCodesLeft)","lastModifiedDate":"2023-11-13"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"MMC -\u003e UI: displayMessage()","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"UI --\u003e Student","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"UI --\u003e MMC","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"MMC -\u003e MIV: printModuleStringArray(moduleCodesLeft)","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"activate MIV","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"MIV --\u003e Student","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"MIV --\u003e MMC","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"deactivate MIV","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"MMC --\u003e UC","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"UC --\u003e MC","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"destroy UC","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"MC --\u003e UI","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"deactivate MC","lastModifiedDate":"2023-11-14"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"UI --\u003e Student","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"deactivate UI","lastModifiedDate":"2023-11-14"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"@enduml","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"janelleenqi":122}},{"path":"docs/diagrams/ModelClass.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"class Student {","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"String name","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"String major","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"String year","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"Student --\u003e \"1\" Schedule","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"class Schedule {","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"int[] modulesPerSem;","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"ModuleList modulesPlanned;","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"Schedule --\u003e \"modulesPlanned\" ModuleList","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"class ModuleList {","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"ArrayList\u003cModule\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"Student --\u003e \"1\" Timetable","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"class Timetable {","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"Timetable timetable","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"ArrayList \u003cModuleWeekly\u003e currentSemesterModulesWeekly","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"janelleenqi":31}},{"path":"docs/diagrams/ModelComponent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"\u0027https://plantuml.com/component-diagram","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"component ModulePlannerController","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"package \"Student Data\" {","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"component Student","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"component Schedule","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"component Timetable","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"[ModuleList] as modulesPlanned","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"component NUSModsAPI","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"ModulePlannerController -\u003e \"1\" Student","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"Student *-down-\u003e \"1\"  Schedule","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"Schedule --\u003e \"modulesPlanned 1\" modulesPlanned","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"Schedule .right.\u003e NUSModsAPI: calls","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"Student *-right-\u003e \"1\" Timetable","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"janelleenqi":28}},{"path":"docs/diagrams/PrintTimetable.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"\u0027autonumber","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"\u0027autoactivate on","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"actor Student","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"participant \":TimetableView\" as TV","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"participant \"currentDayEvents\\n:ArrayList\u003cEvent\u003e\" as CDE #white","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"participant \"moduleService\\nController\\n:ModuleService\\nController\" as MSC #white","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"box \"Model\" #LightBlue","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"participant \"student:\\nStudent\" as S #white","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"participant \"timetable:\\nTimetable\" as T #white","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"activate S","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"opt timetableCommandWord \u003d\u003d \"SHOW\"","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"    \u0027timetable.getCurrentSemesterModulesWeekly()","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"    S -\u003e T: getCurrent\\nSemester\\nModulesWeekly()","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"    activate T","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"    T --\u003e S: currentSem\\nModulesWeekly","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"    deactivate T","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"    S -\u003e MSC: showTimetable\\n(currentSem\\nModulesWeekly)","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"    activate MSC","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    MSC -\u003e TV: printTimetable(currentSemesterModuleWeekly);","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"    activate TV","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"    \u0027createDailyEvents(currentSemesterModules)","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"    TV -\u003e TV: createDailyEvents(currentSemesterModules)","lastModifiedDate":"2023-11-14"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"    activate TV","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"    note left","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"    createDailyEvents converts","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"    the ArrayList\u003cModuleWeekly\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"    to a List of ArrayList\u003cEvents\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"    for different days","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"    end note","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"    TV --\u003e TV: weeklyTimetableByDay:List\u003cArrayList\u003cEvent\u003e\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"    deactivate TV","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"    loop currentDayEvents","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"        TV -\u003e TV: sortByTime(currentDayEvents)","lastModifiedDate":"2023-11-14"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"        activate TV","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"        note left","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"        sortByTime sorts Events","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"        in currentDayEvents by","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"        start time, duration,","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"        then module code, in","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"        ascending order","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"        end note","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"        TV --\u003e TV: currentDayEvents:ArrayList\u003cEvent\u003e (sorted)","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"        deactivate TV","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"    end","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"    TV -\u003e TV: printTimetableHeader()","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"    activate TV","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"    TV --\u003e Student: display Timetable Header","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"    TV --\u003e TV","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"    deactivate TV","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"    loop day","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"    TV -\u003e TV: printlnHorizontalLine()","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"    activate TV","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"    TV --\u003e Student: display Horizontal Line","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"    TV --\u003e TV","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"    deactivate TV","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"    TV -\u003e CDE: weeklyTimetableByDay.get(day)","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"    CDE --\u003e TV: currentDayEvents:ArrayList\u003cEvent\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"    TV -\u003e TV: printCurrentDayEvents(currentDayEvents, day)","lastModifiedDate":"2023-11-14"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"    activate TV","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"    loop !currentDayEvents.isEmpty()","lastModifiedDate":"2023-11-14"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"    TV -\u003e TV: printCurrentDayOneEvent(currentEvent, day, isFirstLine)","lastModifiedDate":"2023-11-14"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"    activate TV","lastModifiedDate":"2023-11-14"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"    note left","lastModifiedDate":"2023-11-14"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"        printCurrentDayOneEvent displays","lastModifiedDate":"2023-11-14"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"        one event with table formatting.","lastModifiedDate":"2023-11-14"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"        isFirstLine is a boolean variable","lastModifiedDate":"2023-11-14"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"        to determine if the Day header","lastModifiedDate":"2023-11-14"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"        needs to be printed out","lastModifiedDate":"2023-11-14"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"    end note","lastModifiedDate":"2023-11-14"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"    TV --\u003e Student: display one event of one \\nday with table formatting","lastModifiedDate":"2023-11-14"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"    TV --\u003e TV:","lastModifiedDate":"2023-11-14"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"    deactivate TV","lastModifiedDate":"2023-11-14"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"    end","lastModifiedDate":"2023-11-14"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"    TV --\u003e TV:","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"    deactivate TV","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"    end","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"    TV -\u003e TV: printlnHorizontalLine()","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"    activate TV","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"    TV --\u003e Student: display Horizontal Line","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"    TV --\u003e TV","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"    deactivate TV","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"    TV --\u003e MSC","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"    destroy TV","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"    MSC --\u003e S","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"    deactivate MSC","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"end","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"janelleenqi":115}},{"path":"docs/diagrams/RequiredFeature.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"\u0027autonumber","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"autoactivate on","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"actor Student","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"participant \":Ui\" as UI","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"Student -\u003e UI: getUser\\nCommand() \\n\"required\"","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"note bottom","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"This command","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"returns the","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"modules required","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"for the user\u0027s","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"major to the user","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"end note","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"participant \"controller:\\nMain\\nController\" as MC #white","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"UI -\u003e MC: handleUser\\nInputTillExit\\nCommand()","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"participant \"currentUser\\nCommand:\\nUserCommand\" as UC #white","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"MC -\u003e UC **: create","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"activate UC","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"UC --\u003e MC: currentUser\\nCommand \"required\"","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"MC -\u003e UC: processCommand()","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"participant \":ModuleMethods\\nController\" as MMC","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"participant \":Module\\nRequirements\\nView\" as MRV","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"box \"Model\" #LightBlue","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"participant \"student:\\nStudent\" as S #white","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"UC -\u003e S: getMajor()","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"S --\u003e UC: major:String","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"UC -\u003e MMC: Execute\\nGetRequired\\nModulesFor\\nStudent(major)","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"MMC -\u003e MRV: printRequired\\nModules\\n(major)","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"alt major \u003d\u003d \"CEG\"","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"    MRV -\u003e MRV: printRequired\\nModulesCEG()","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"    MRV --\u003e MRV: display","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"else major \u003d\u003d \"CS\"","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"    MRV -\u003e MRV: printRequired\\nModulesCS()","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"    MRV --\u003e MRV: display","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"end","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"MRV --\u003e MMC","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"MMC --\u003e UC","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"UC --\u003e MC: Display Required \\nModules","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"MC --\u003e UI","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"UI --\u003e Student","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"janelleenqi":62}},{"path":"docs/diagrams/TimetableShowFeature.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"\u0027autonumber","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"autoactivate on","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"actor Student","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"participant \":Ui\" as UI","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"Student -\u003e UI: getUser\\nCommand() \\n\"timetable \\nshow\"","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"participant \":TimetableView\" as TV","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"note bottom","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"This command","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"display\u0027s the","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"user\u0027s weekly","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"timetable if","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"available","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"end note","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"participant \"controller:\\nMain\\nController\" as MC #white","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"UI -\u003e MC: handleUser\\nInputTillExit\\nCommand()","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"participant \"currentUser\\nCommand:\\nUserCommand\" as UC #white","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"MC -\u003e UC **: create","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"activate UC","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"UC --\u003e MC: currentUser\\nCommand \\n\"timetable show\"","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"MC -\u003e UC: processCommand()","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"participant \":Module\\nMethods\\nController\" as MMC","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"participant \"moduleService\\nController\\n:ModuleService\\nController\" as MSC #white","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"box \"Model\" #LightBlue","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"participant \"student:\\nStudent\" as S #white","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"participant \"timetable:\\nTimetable\" as T #white","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"\u0027commandWord","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"\u0027timetableShowOrModify(commandWord);","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"UC -\u003e S: timetable\\nShowOrModify\\n(timetable\\nCommandWord)","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"S -\u003e S: updateTimetable();","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"S --\u003e S","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"S -\u003e MSC **: create","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"activate MSC","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"MSC --\u003e S","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"opt timetableCommandWord \u003d\u003d \"SHOW\"","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"    \u0027timetable.getCurrentSemesterModulesWeekly()","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"    S -\u003e T: getCurrent\\nSemester\\nModulesWeekly()","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"    T --\u003e S: currentSem\\nModulesWeekly","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"    S -\u003e MSC: showTimetable\\n(currentSem\\nModulesWeekly)","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"    MSC -\u003e TV: printTimetable\\n(currentSemester\\nModuleWeekly);","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"    TV --\u003e MSC","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"    MSC --\u003e S","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"end","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"S --\u003e UC","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"UC --\u003e MC: Display Timetable","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"MC --\u003e UI","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"UI --\u003e Student","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"janelleenqi":76}},{"path":"docs/diagrams/Timetable_Class.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"class Student {","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"-String year","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"-ModuleList currentSemesterModules","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"+getSchedule()","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"+setFirstMajor(String userInput)","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"+timetableShowOrModify(String argument)","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"+updateTimetable()","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"-setCurrentSemesterModules()","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"-setCurrentSemesterModulesWeekly()","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"Student --\u003e \"1\" Schedule","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"class Schedule {","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"int[] modulesPerSem;","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"ModuleList modulesPlanned;","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"Schedule --\u003e \"modulesPlanned\" ModuleList","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"class ModuleList {","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"ArrayList\u003cModule\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"Student --\u003e \"1\" Timetable","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"class Timetable {","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"ArrayList \u003cModuleWeekly\u003e currentSemesterModulesWeekly","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"class ModuleServiceController {","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"janelleenqi":43}},{"path":"docs/diagrams/timetableModify.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rohitcube"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"rohitcube"},"content":"participant Student","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"rohitcube"},"content":"participant ModuleServiceController","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"rohitcube"},"content":"participant Timetable","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"rohitcube"},"content":"participant Parser","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"rohitcube"},"content":"participant TimetableView","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"rohitcube"},"content":"participant TimetableUserCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"rohitcube"},"content":"participant Ui","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"rohitcube"},"content":"participant Storage","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"rohitcube"},"content":"activate Student","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"rohitcube"},"content":"Student -\u003e ModuleServiceController","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"rohitcube"},"content":"Student -\u003e Timetable","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"rohitcube"},"content":"activate Timetable","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"rohitcube"},"content":"activate ModuleServiceController","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"rohitcube"},"content":"Student -\u003e ModuleServiceController: modifyTimetable(student)","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"rohitcube"},"content":"ModuleServiceController -\u003e Ui","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"rohitcube"},"content":"activate Ui","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"rohitcube"},"content":"ModuleServiceController -\u003e Ui: getUserCommand()","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"rohitcube"},"content":"Ui --\u003e ModuleServiceController:","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"rohitcube"},"content":"loop inTimetableModifyMode","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"rohitcube"},"content":"    Timetable -\u003e TimetableUserCommand: getArguments()","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"rohitcube"},"content":"    TimetableUserCommand --\u003e Timetable","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"rohitcube"},"content":"    opt  isModifyExit()","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"rohitcube"},"content":"        ModuleServiceController -\u003e Parser: isModifyExit(arguments)","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"rohitcube"},"content":"            Parser --\u003e ModuleServiceController","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"rohitcube"},"content":"    end","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"rohitcube"},"content":"    Timetable -\u003e TimetableUserCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"rohitcube"},"content":"    activate TimetableUserCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"rohitcube"},"content":"    TimetableUserCommand -\u003e Parser: Check validity of (arguments)","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"rohitcube"},"content":"    Parser --\u003e TimetableUserCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"rohitcube"},"content":"    alt Lecture","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"rohitcube"},"content":"    TimetableUserCommand -\u003e TimetableUserCommand: addLecture()","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"rohitcube"},"content":"    else Tutorial","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"rohitcube"},"content":"     TimetableUserCommand -\u003e TimetableUserCommand: addTutorial()","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"rohitcube"},"content":"    else Lab","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"rohitcube"},"content":"    TimetableUserCommand -\u003e TimetableUserCommand: addLab()","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"rohitcube"},"content":"    end","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"rohitcube"},"content":"    opt  isModifyClear()","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"rohitcube"},"content":"    ModuleServiceController -\u003e Parser: isModifyClear(arguments)","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"rohitcube"},"content":"    Parser --\u003e ModuleServiceController","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"rohitcube"},"content":"    TimetableUserCommand -\u003e TimetableUserCommand: clearLessons()","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"rohitcube"},"content":"    end","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"rohitcube"},"content":"    deactivate TimetableUserCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"rohitcube"},"content":"        Ui --\u003e Student","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"rohitcube"},"content":"        deactivate Ui","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"rohitcube"},"content":"    ModuleServiceController -\u003e Storage: saveTimetable","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":71,"author":{"gitId":"rohitcube"},"content":"    Timetable -\u003e TimetableView: printTimetable","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":73,"author":{"gitId":"rohitcube"},"content":"    TimetableView --\u003e Timetable","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"rohitcube"},"content":"    Timetable --\u003e Student","lastModifiedDate":"2023-11-14"},{"lineNumber":76,"author":{"gitId":"rohitcube"},"content":"    deactivate ModuleServiceController","lastModifiedDate":"2023-11-14"},{"lineNumber":77,"author":{"gitId":"rohitcube"},"content":"    deactivate Timetable","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"rohitcube"},"content":"end","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"rohitcube"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"rohitcube":81}},{"path":"docs/team/AboutUsNew.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"\u003c!DOCTYPE html\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"\u003chtml lang\u003d\"en\"\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"\u003chead\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"    \u003cmeta charset\u003d\"UTF-8\"\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"    \u003cmeta name\u003d\"viewport\" content\u003d\"width\u003ddevice-width, initial-scale\u003d1.0\"\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"    \u003ctitle\u003eNUSDegs User Guide\u003c/title\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"    \u003cstyle\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"        body {","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"            font-family: \u0027Arial\u0027, sans-serif;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"            margin: 40px;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"            background: #f5f5f5;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"        h1 {","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"            text-align: center;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"            background-image: linear-gradient(to right, #370505, #5b2829, #814c4c, #a97171, #d19999);","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"            color: white;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"            padding: 20px;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"            border-radius: 10px;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"        h2 {","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"            color: #14499b;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"            background-image: linear-gradient(to right, #14499b, #0065b7, #0081d1, #009ee9, #00bcff);","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"            padding: 10px;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"            border-radius: 5px;","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"        p {","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"            margin-bottom: 20px;","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"        code {","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"            background-color: #f0f0f0;","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"            padding: 2px 5px;","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"            border-radius: 3px;","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"        ul {","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"            list-style-type: none;","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"            padding: 0;","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"        li {","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"            margin-bottom: 10px;","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"    \u003c/style\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"\u003c/head\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"\u003cbody\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"    \u003ch1\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"        \u003cimg src\u003d\"https://picsum.photos/320\" alt\u003d\"Header Image\"\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"    \u003c/h1\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"    \u003ch2\u003eNUS \u003cspan style\u003d\"color: #e50000;\"\u003eD\u003c/span\u003eEGS \u003cspan style\u003d\"color: #959b14;\"\u003eUser Guide\u003c/span\u003e\u003c/h2\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"    \u003csection\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"        \u003ch2\u003eIntroduction\u003c/h2\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"        \u003cp\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"            NUSDegs streamlines computing degree planning by offering personalized module schedules, tracking progress,","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"            and ensuring on-time graduation. It eliminates guesswork, reduces stress, and saves time for students.","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"            It\u0027s a comprehensive tool for efficient and successful degree completion.","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"        \u003c/p\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"    \u003c/section\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"    \u003c!-- Add more sections for Quick Start, Features, FAQ, etc. --\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"\u003c/body\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"\u003c/html\u003e","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"ryanlohyr":69}},{"path":"docs/team/isaiah.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CerIsaiah"},"content":"# Isaiah - Project Portfolio Page","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"CerIsaiah":1,"-":5}},{"path":"docs/team/janelleenqi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"# Liow Enqi Janelle\u0027s Project Portfolio Page","lastModifiedDate":"2023-11-14"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"## Project Overview","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"NUSDegs streamlines the process of degree planning for NUS computing students by offering personalized module ","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"schedules, progress tracking, and ensuring on-time graduation. It eliminates guesswork, reduces stress, and saves time ","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"for students. This is a comprehensive tool for efficient and successful degree completion.","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"## Summary of Contributions","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"### Code contributed: [Link to RepoSense Report](https://nus-cs2113-ay2324s1.github.io/tp-dashboard/?search\u003djanelleenqi\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"### Features Implemented","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"#### 1. Timetable Show Feature","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"- Displays the weekly timetable of the user. Using the lessons added by the user through Timetable Modify Feature, this feature displays the user\u0027s ","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"lessons sorted by time and day.","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"- Justification: This feature gives users a clear idea on how their current semester will look like on a weekly basis. ","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"This will enable them to view their timetable easily.","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"- Highlights: Lessons are displayed by time and day and does not show days that do not have lessons.","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"#### 2. Save Timetable Feature","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"- Saves the weekly timetable of the user throughout the program. Updates the save file for the weekly timetable of the user when the user uses any features that changes ","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"the timetable (timetable modify, recommend, shift, delete, clear).","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"- Justification: This feature allows the user to store their timetable data, so that they can built upon the same ","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"timetable across multiple sessions. ","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"- Highlights: The timetable needed to be updated when modules were deleted, to remove those modules from the timetable.","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"#### 3. Modules Left Feature","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"- Added the ability to view modules left. Allows the user to retrieve a list of modules that required for their major but have not been marked as","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"completed.","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"- Justification: This feature gives clarity to the user as they are able to easily view what modules they have yet to ","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"complete for graduation.","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"#### 4. Modules Required Feature","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"- Added the ability to view modules required. Provides students with easy access to the requirements of their major, and be aware of Common Curriculum ","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"Requirements.","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"- Justification: Gives students an easy access to a list of modules (and their names) they are required to take to ","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"graduate.","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"### Classes Implemented","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"#### 1. Event (and its child classes Lecture, Tutorial, Lab)","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"- Purpose: Allow information on a lesson to be store concisely for convenience, as well as methods for comparison ","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"between different events (for printing in order), printing and saving. ","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"#### 2. ModuleList","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"- Purpose: Provides multiple methods to use an ArrayList of Module, for easy retrieval of data (eg. ArrayList of module ","lastModifiedDate":"2023-11-14"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"codes, ArrayList of modules completed, module index)","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"#### 3. UserCommand \u0026 TimetableUserCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"- Purpose: Validate user commands, process commands","lastModifiedDate":"2023-11-14"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"#### 4. TimetableView","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"- Purpose: Provide a dynamic printing method for Timetable that adjusts according to number of  information of lessons ","lastModifiedDate":"2023-11-14"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"provided by user, ensuring optimal readability and good user experience. ","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"### Contributions to Team-based Tasks","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"#### 1. Refactor Code","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"- Justification: Improved abstraction, separation of concerns and made it easier for testing","lastModifiedDate":"2023-11-14"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"- Highlights: Required an in-depth understanding of code to ensure that no features were affected.","lastModifiedDate":"2023-11-14"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"#### 2. Project Management","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"- My contribution: Created the Labels and Milestones, and a majority of Story/Task-base Issues within the Github Tracker.","lastModifiedDate":"2023-11-14"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"- Justification: Allowed my team to be clearer on what we need to accomplish, to ensure productivity.","lastModifiedDate":"2023-11-14"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"#### 3. Documentation","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"##### User Guide:","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"- Added documentation for the features left and required","lastModifiedDate":"2023-11-14"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"- Updated documentation for the features timetable show, timetable modify, help, bye.","lastModifiedDate":"2023-11-14"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"##### Developer Guide:","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"- Added implementation details of the features left, required, timetable show.","lastModifiedDate":"2023-11-14"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"- Sections: Non-Functional Requirements, Glossary, Instructions for manual testing (Launch \u0026 Modify lessons in the Weekly Timetable Feature)","lastModifiedDate":"2023-11-14"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"- Diagrams (refer to extracts)","lastModifiedDate":"2023-11-14"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"#### 4. Fixed Bugs","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"- `Bye` command was case sensitive, needed to input twice to exit [#154](https://github.com/AY2324S1-CS2113-T17-4/tp/pull/154)","lastModifiedDate":"2023-11-14"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"- `timetable modify`: fix error messages (had cases with double errors, or no errors)","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"- infinite loop of error messages [#139](https://github.com/AY2324S1-CS2113-T17-4/tp/pull/139)","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"- `complete`: complete a completed module [#115](https://github.com/AY2324S1-CS2113-T17-4/tp/issues/115)","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"#### 5. Testing","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"- SUT tests for the features Left, Required, Timetable Modify \u0026 Timetable Show, the class ModuleList","lastModifiedDate":"2023-11-14"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"#### 6. Community","lastModifiedDate":"2023-11-14"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"- PRs reviewed: [#38](https://github.com/AY2324S1-CS2113-T17-4/tp/pull/38#pullrequestreview-1721555155), [#152](https://github.com/AY2324S1-CS2113-T17-4/tp/pull/152), [#155](https://github.com/AY2324S1-CS2113-T17-4/tp/pull/155#pullrequestreview-1721581031), [#157](https://github.com/AY2324S1-CS2113-T17-4/tp/pull/157#pullrequestreview-1719360399) ","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"- Made `timetable modify` less bug prone","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"### Diagram Contributions to the Developer Guide (Extracts)","lastModifiedDate":"2023-11-14"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"Model Component: Component Diagram","lastModifiedDate":"2023-11-14"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"![ModelComponent.png](..%2Fdiagrams%2FModelComponent.png)","lastModifiedDate":"2023-11-14"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"List Required Modules Left Feature: Sequence Diagram","lastModifiedDate":"2023-11-14"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"![LeftFeature_Seq.png](..%2Fdiagrams%2FLeftFeature_Seq.png)","lastModifiedDate":"2023-11-14"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"Required Feature: Sequence Diagram","lastModifiedDate":"2023-11-14"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"![RequiredFeature_Seq.png](..%2Fdiagrams%2FRequiredFeature_Seq.png)","lastModifiedDate":"2023-11-14"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"Show Weekly Timetable Feature: Sequence Diagram","lastModifiedDate":"2023-11-14"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"![TimetableShowFeature_Seq.png](..%2Fdiagrams%2FTimetableShowFeature_Seq.png)","lastModifiedDate":"2023-11-14"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"Show Weekly Timetable Feature: Sequence Diagram for printTimetable operation","lastModifiedDate":"2023-11-14"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"![PrintTimetable_Seq.png](..%2Fdiagrams%2FPrintTimetable_Seq.png)","lastModifiedDate":"2023-11-14"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"janelleenqi":119}},{"path":"docs/team/rohit.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rohitcube"},"content":"# Rohit - Project Portfolio Page","lastModifiedDate":"2023-11-14"},{"lineNumber":2,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"rohitcube"},"content":"## Overview","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"rohitcube"},"content":"NUSDegs streamlines the process of degree planning for NUS computing students by offering personalized module","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"rohitcube"},"content":"schedules, progress tracking, and ensuring on-time graduation. It eliminates guesswork, reduces stress, and saves time","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"rohitcube"},"content":"for students. This is a comprehensive tool for efficient and successful degree completion.","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"rohitcube"},"content":"### Code contributed: [Link to RepoSense Report](https://nus-cs2113-ay2324s1.github.io/tp-dashboard/?search\u003drohitcube\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003drohitcube\u0026tabRepo\u003dAY2324S1-CS2113-T17-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"rohitcube"},"content":"### Summary of Contributions","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"rohitcube"},"content":"#### Features Implemented","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"rohitcube"},"content":"#### 1. Search Feature Integration","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"rohitcube"},"content":"**Feature:** Enables users to search the NUSModsAPI database by keywords in the module title.","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"rohitcube"},"content":"**What it does:** This feature empowers users to efficiently search for modules based on specific keywords in the","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"rohitcube"},"content":"module title.","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"rohitcube"},"content":"**Justification:** The search functionality enhances the user experience by providing a convenient way for users to ","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"rohitcube"},"content":"find modules that align with their interests or requirements.","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"rohitcube"},"content":"#### 2. Info Description Feature Integration","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"rohitcube"},"content":"**Feature:** Enables users to retrieve detailed descriptions of modules using their respective module codes.","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"rohitcube"},"content":"**What it does:** This feature allows users to obtain comprehensive descriptions of modules by inputting ","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"rohitcube"},"content":"the module code. It offers users more in-depth","lastModifiedDate":"2023-11-14"},{"lineNumber":31,"author":{"gitId":"rohitcube"},"content":"information about specific modules they find interesting or relevant.","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"rohitcube"},"content":"**Justification:** Users often seek more detailed information about modules, and this feature addresses","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"rohitcube"},"content":"that need. This functionality enhances the user experience by providing valuable insights.","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"rohitcube"},"content":"#### 3. Timetable Feature Integration","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"rohitcube"},"content":"**Feature**: Displays the weekly timetable of the user.     ","lastModifiedDate":"2023-11-14"},{"lineNumber":39,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"rohitcube"},"content":"**What it does**: Using the lessons added by the user through Timetable Modify Feature, this feature displays the user\u0027s","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"rohitcube"},"content":"lessons sorted by time and day.","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"rohitcube"},"content":"**Justification**: This feature gives users a clear idea on how their current semester will look like on a weekly basis.","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"rohitcube"},"content":"This will enable them to view their timetable easily.","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"rohitcube"},"content":"**Credits**: I implemented the integration of the timetable feature into the main program by ","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"rohitcube"},"content":"developing dedicated functions. @janelleenqi wrote the display and print functions for Timetable.","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"rohitcube"},"content":"### Classes Implemented","lastModifiedDate":"2023-11-14"},{"lineNumber":50,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"rohitcube"},"content":"#### 1. API Integration","lastModifiedDate":"2023-11-14"},{"lineNumber":52,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"rohitcube"},"content":"- **Purpose:** The primary goal of this feature is to fetch and present information from the NUSModsAPI to the user.","lastModifiedDate":"2023-11-14"},{"lineNumber":54,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"rohitcube"},"content":"- **Highlights:** Implementing this feature posed a significant challenge, requiring knowledge in API integration.","lastModifiedDate":"2023-11-14"},{"lineNumber":56,"author":{"gitId":"rohitcube"},"content":"The process involved incorporating external dependencies to handle JSON files, necessitating the conversion of","lastModifiedDate":"2023-11-14"},{"lineNumber":57,"author":{"gitId":"rohitcube"},"content":"data into a readable format for user display. Learnt how to establish connections and send requests to APIs.","lastModifiedDate":"2023-11-14"},{"lineNumber":58,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":59,"author":{"gitId":"rohitcube"},"content":"#### 2. ModuleWeekly Class","lastModifiedDate":"2023-11-14"},{"lineNumber":60,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"rohitcube"},"content":"- **Purpose:** The ModuleWeekly class serves the crucial purpose of storing information related to modules ","lastModifiedDate":"2023-11-14"},{"lineNumber":62,"author":{"gitId":"rohitcube"},"content":"scheduled in the current semester, specifically those displayed in the weekly timetable.","lastModifiedDate":"2023-11-14"},{"lineNumber":63,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":64,"author":{"gitId":"rohitcube"},"content":"- **Highlights:**  The ModuleWeekly ","lastModifiedDate":"2023-11-14"},{"lineNumber":65,"author":{"gitId":"rohitcube"},"content":"class enhances the program\u0027s ability to manage and display","lastModifiedDate":"2023-11-14"},{"lineNumber":66,"author":{"gitId":"rohitcube"},"content":"module-specific details within the context of the current semester.","lastModifiedDate":"2023-11-14"},{"lineNumber":67,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":68,"author":{"gitId":"rohitcube"},"content":"#### 3. Timetable Parser and Associated Functions","lastModifiedDate":"2023-11-14"},{"lineNumber":69,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":70,"author":{"gitId":"rohitcube"},"content":"- **Purpose:** The Timetable Parser, along with its associated functions (in Parser), is designed ","lastModifiedDate":"2023-11-14"},{"lineNumber":71,"author":{"gitId":"rohitcube"},"content":"with the primary objective of parsing user arguments. ","lastModifiedDate":"2023-11-14"},{"lineNumber":72,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":73,"author":{"gitId":"rohitcube"},"content":"- **Highlights:** This parsing facilitates","lastModifiedDate":"2023-11-14"},{"lineNumber":74,"author":{"gitId":"rohitcube"},"content":"  the input of lessons for each module into the weekly timetable.","lastModifiedDate":"2023-11-14"},{"lineNumber":75,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":76,"author":{"gitId":"rohitcube"},"content":"### Enhancements Implemented","lastModifiedDate":"2023-11-14"},{"lineNumber":77,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":78,"author":{"gitId":"rohitcube"},"content":"#### 1. Refactored parser functions ","lastModifiedDate":"2023-11-14"},{"lineNumber":79,"author":{"gitId":"rohitcube"},"content":"Purpose: Rewrote this function into happy path and made the exception class for it.","lastModifiedDate":"2023-11-14"},{"lineNumber":80,"author":{"gitId":"rohitcube"},"content":"Credits: @ryanlohyr for providing the psuedocode which I implemented","lastModifiedDate":"2023-11-14"},{"lineNumber":81,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":82,"author":{"gitId":"rohitcube"},"content":"###  Code Omitted ","lastModifiedDate":"2023-11-14"},{"lineNumber":83,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":84,"author":{"gitId":"rohitcube"},"content":"#### 1. Info Feature","lastModifiedDate":"2023-11-14"},{"lineNumber":85,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":86,"author":{"gitId":"rohitcube"},"content":"The Info feature was initially intended to incorporate additional user commands, such as the `getWorkload` function.","lastModifiedDate":"2023-11-14"},{"lineNumber":87,"author":{"gitId":"rohitcube"},"content":"However, after careful consideration, it was deemed irrelevant for user interactions. Another function,","lastModifiedDate":"2023-11-14"},{"lineNumber":88,"author":{"gitId":"rohitcube"},"content":"`listAllModules()`, initially excluded from user access, found its place within the Search function.","lastModifiedDate":"2023-11-14"},{"lineNumber":89,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":90,"author":{"gitId":"rohitcube"},"content":"#### 2. Module Duration Retrieval","lastModifiedDate":"2023-11-14"},{"lineNumber":91,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":92,"author":{"gitId":"rohitcube"},"content":"Originally, the `moduleWeekly` class included a `getDuration()` function meant to automatically update","lastModifiedDate":"2023-11-14"},{"lineNumber":93,"author":{"gitId":"rohitcube"},"content":"the `ModuleWeekly` elements. This concept was abandoned in favor of a more user-friendly approach, requiring","lastModifiedDate":"2023-11-14"},{"lineNumber":94,"author":{"gitId":"rohitcube"},"content":"users to input module durations as arguments when creating a class.","lastModifiedDate":"2023-11-14"},{"lineNumber":95,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":96,"author":{"gitId":"rohitcube"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2023-11-14"},{"lineNumber":97,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"rohitcube"},"content":"- Reported 15 bugs for PE-D ","lastModifiedDate":"2023-11-14"},{"lineNumber":99,"author":{"gitId":"rohitcube"},"content":"- Helped another team debug their jar before final submission","lastModifiedDate":"2023-11-14"},{"lineNumber":100,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"rohitcube"},"content":"### Contribution to UG:","lastModifiedDate":"2023-11-14"},{"lineNumber":102,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":103,"author":{"gitId":"rohitcube"},"content":"- Added descriptions for info, search, timetable show and timetable modify","lastModifiedDate":"2023-11-14"},{"lineNumber":104,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":105,"author":{"gitId":"rohitcube"},"content":"### Contributions to DG:","lastModifiedDate":"2023-11-14"},{"lineNumber":106,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":107,"author":{"gitId":"rohitcube"},"content":"- Added Target user profile and value proposition","lastModifiedDate":"2023-11-14"},{"lineNumber":108,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":109,"author":{"gitId":"rohitcube"},"content":"![tt_seq_diag.png](..%2Fdiagrams%2Ftt_seq_diag.png)![tt_modify_seq_diag.png](..%2Fdiagrams%2Ftt_modify_seq_diag.png)","lastModifiedDate":"2023-11-14"},{"lineNumber":110,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"rohitcube"},"content":"![controller_diag.png](..%2Fdiagrams%2Fcontroller_diag.png)![ss_logicDiagram.jpg](screenshots%2Fss_logicDiagram.jpg)","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"rohitcube":111}},{"path":"docs/team/ryanlohyr.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"# Ryan Loh - Project Portfolio Page","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"## Overview","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"NUSDegs streamlines computing degree planning by offering personalized module schedules,","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"tracking progress, and ensuring on-time graduation. It eliminates guesswork, reduces stress,","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"and saves time for students. It’s a comprehensive tool for efficient and successful degree completion.","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"## Summary of Contributions","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"### Features Implemented","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"#### 1. Module Prerequisite Feature","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"- `What it does:` Allows the user to see the prerequisites the module has.","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"- `Justification:` This feature allows the user to plan their schedule more efficiently, eliminating guesswork. ","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"This Function is also used as a helper function for feature 2.","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"- `Highlights:` This feature was challenging as format of the prerequisites returned from NUSMODS API was unintuitive, ","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"and it required an in depth understanding of recursive functions due to its nested prerequisites. ","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"Furthermore, good understanding of the REST API convention in order to retrieve prerequisites based on module ","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"from the NUSMODS API. ","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"#### 2. Schedule Recommending Feature","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"- `What it does:` Allows the user to generate a course based recommended schedule that is sorted based on prerequisites.","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"- `Justification:` This allows the user to have a schedule based on their degree, which saves time for the user having to ","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"look through all the prerequisites of each module.","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"- `Highlights:` This feature was challenging as it required in depth data structure and algorithms knowledge. The ","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"feature utilised the topological sort algorithm, hashmaps, adjacency lists and queues. ","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"#### 3. Pace Feature","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"- `What it does:` Allows the user to see the average pace required for graduation","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"- `Justification:` Provides crucial information for users to plan their academic journey effectively. ","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"Enables students to track and manage their progress towards graduation.","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"  Assists in avoiding potential delays in completing the degree by offering insights into the necessary pace.","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"- `Highlights:` Challenging as it required careful validation of the inputs as well as taking into account various other","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"components such as the schedule and student class.","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"### Enhancements Implemented","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"#### 1. Optimised runtime on certain functions","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"- `Problem at hand:` Adding a recommended schedule to a schedule and deleting a module from a planner both took","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"significantly long (150 seconds and 20 seconds respectively) due to the checking of prerequisites which required API calls to NUS MODS.","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"- `Justification:` ","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"  - Initially, the GitHub actions consumed a total of ","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"  [18 minutes](https://github.com/AY2324S1-CS2113-T17-4/tp/actions/runs/6770254540). However, they were subsequently ","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"  optimized, resulting in a reduction to just","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"  [3 minutes](https://github.com/AY2324S1-CS2113-T17-4/tp/actions/runs/6773558838). ","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"  - Moreover, each execution of the functions previously required nearly 2 minutes to complete. ","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"  - This optimization not only enhanced the productivity of my colleagues by eliminating the need to wait for 20 minutes ","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"  for their GitHub actions to run but also significantly improved the overall user experience.","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"-  `Highlights:` In depth understanding of time complexities as well as the responses NUSMODs provided ","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"was required in order to make the optimisations. ","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"[Detailed explanation regarding the optimisations I did](https://github.com/AY2324S1-CS2113-T17-4/tp/pull/148) ","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"#### 2. Implemented overall architecture to adopt MVC design pattern","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"- `Justification`: Improved abstraction, separation of concerns and made it easier for my teammates to work on features","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"  independently","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"-  `Highlights`: Required an in-depth understanding of design patterns. The implementation was challenging as well as I","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"   had to constantly communicate with my teammates where respective functions had to be placed.","lastModifiedDate":"2023-11-11"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"### Code Contributions: ","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"[RepoSense link](https://nus-cs2113-ay2324s1.github.io/tp-dashboard/?search\u003dryanlohyr\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle)","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"### Contribution to UG:","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"- Added table of contents","lastModifiedDate":"2023-11-11"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"- Added header links to Table of contents ","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"- Restructure commands to have a natural progressive flow","lastModifiedDate":"2023-11-11"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"- GitHub Theme to enhance look","lastModifiedDate":"2023-11-11"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2023-11-07"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"- Maintain issue tracker and milestones","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"- Initiated team to do feature based integration tests","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"- Add JavaDoc to most methods","lastModifiedDate":"2023-11-11"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"- Suggested and maintained external","lastModifiedDate":"2023-11-11"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"[notion board](https://ryanloh.notion.site/2113-Task-Board-b13948bab54046c3b49b24d5d978379a?pvs\u003d4)","lastModifiedDate":"2023-11-11"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"### Reviews/mentoring contributions: ","lastModifiedDate":"2023-11-07"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"- PRs reviewed ([#152](https://github.com/AY2324S1-CS2113-T17-4/tp/pull/152), [#154](https://github.com/AY2324S1-CS2113-T17-4/tp/pull/154#pullrequestreview-1718105780), Provided pseudocode to help teammate understand my suggestion in this PR","lastModifiedDate":"2023-11-11"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"[#166](https://github.com/AY2324S1-CS2113-T17-4/tp/pull/166) , ","lastModifiedDate":"2023-11-11"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"[#185](https://github.com/AY2324S1-CS2113-T17-4/tp/pull/185))","lastModifiedDate":"2023-11-11"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"### Contributions beyond the project team: ","lastModifiedDate":"2023-11-07"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"- Reported 8 bugs for PED, helped other teams debug their jar and spot potential issues","lastModifiedDate":"2023-11-11"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"### Contributions to DG:","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"**Architecture diagram:**      ","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"\u003cimg src\u003d\"../diagrams/architectureDiagram.jpeg\" width\u003d \"320\"\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"**Ui class diagram:**","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"\u003cimg src\u003d\"../diagrams/UI.jpeg\" width\u003d \"220\"\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"**Pace feature sequence diagram:**                                                                               ","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"\u003cimg src\u003d\"../diagrams/pace_sequenceDiagram.jpeg\" width\u003d \"500\"\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"**Recommend feature sequence diagrams:**","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"Recommended a schedule based on the user\u0027s major:","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"\u003cimg src\u003d\"../diagrams/recommended_one.jpeg\" alt\u003d\"Image\" width\u003d\"500\"\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"Add a Recommended schedule to the user\u0027s schedule:","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"ryanlohyr"},"content":"\u003cimg src\u003d\"../diagrams/recommended_two.jpeg\" alt\u003d\"Image\" width\u003d\"500\"\u003e","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"ryanlohyr":117}},{"path":"docs/team/sebastianfok.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"# Sebastian Fok - Project Portfolio Page","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"## Overview","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"SebasFok":6}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.controllers.MainController;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"        MainController controller \u003d new MainController();","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"        controller.start();","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"SebasFok":2,"ryanlohyr":3,"rohitcube":1,"-":10}},{"path":"src/main/java/seedu/duke/controllers/MainController.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.storage.StorageManager;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.CommandManager;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.UserCommand;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.Schedule;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.Parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.utils.exceptions.CorruptedFileException;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.utils.exceptions.MissingFileException;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.TimetableUnavailableException;","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.views.Ui;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.controllers.ModuleServiceController.validateMajorInput;","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.storage.StorageManager.saveTimetable;","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.utils.Utility.detectInternet;","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.utils.Utility.saveStudentData;","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.Ui.displayWelcome;","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.displayReady;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.Ui.displayGoodbye;","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.displayGetMajor;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.displayGetYear;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.Ui.showLoadingAnimation;","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.Ui.stopLoadingAnimation;","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.storage.StorageManager.saveSchedule;","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"public class MainController {","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    private final Parser parser;","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"    private final Student student;","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"    private final CommandManager commandManager;","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"    private final Ui ui;","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"    public MainController() {","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"        this.commandManager \u003d new CommandManager();","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"        this.student \u003d new Student();","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"     * Starts the application, guiding the user through its execution.","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"     * This method performs the following steps:","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"     * 1. Display a welcome message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"     * 2. Initialize user-related data or settings.","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"     * 3. Display a message indicating that the application is ready for input.","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"     * 4. Handle user input until an exit command is given.","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"     * 5. Display a goodbye message when the application is finished.\\","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"    public void start() throws IOException {","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"        displayWelcome();","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"        detectInternet();","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"        initialiseUser();","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"        displayReady();","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"        handleUserInputTillExitCommand();","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"        saveStudentData(storageManager,student);","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"        displayGoodbye();","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"SebasFok"},"content":"     * Initializes the user by attempting to load data from save files. If successful, sets the user details,","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"SebasFok"},"content":"     * schedule, and timetable. If loading fails or save files are missing, creates new save files, prompts for","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"SebasFok"},"content":"     * user details, and resets the schedule and timetable.","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"SebasFok"},"content":"     * @throws IOException If an IO error occurs during file operations.","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"SebasFok"},"content":"    public void initialiseUser() throws IOException {","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"SebasFok"},"content":"        storageManager \u003d new StorageManager();","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"Attempting to look for your data file...\");","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"SebasFok"},"content":"            showLoadingAnimation();","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"SebasFok"},"content":"            // Load name, major and year from studentDetails.txt file","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"SebasFok"},"content":"            ArrayList\u003cString\u003e studentDetails \u003d storageManager.loadStudentDetails();","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"SebasFok"},"content":"            // Set name, major and year from loaded data, throws exception if file is corrupted.","lastModifiedDate":"2023-11-13"},{"lineNumber":89,"author":{"gitId":"SebasFok"},"content":"            setStudentDetails(studentDetails);","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"SebasFok"},"content":"            // Load and set schedule from schedule.txt file","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"SebasFok"},"content":"            student.setSchedule(storageManager.loadSchedule());","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"SebasFok"},"content":"            // Load timetable from timetable.txt file","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"SebasFok"},"content":"            try {","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"SebasFok"},"content":"                student.updateTimetable();","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"SebasFok"},"content":"                storageManager.addEventsToStudentTimetable(storageManager.loadTimetable(student), student);","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"SebasFok"},"content":"            } catch (TimetableUnavailableException e) {","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"SebasFok"},"content":"                // no modules in current sem, do nothing","lastModifiedDate":"2023-11-12"},{"lineNumber":101,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":102,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":103,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":104,"author":{"gitId":"SebasFok"},"content":"            stopLoadingAnimation();","lastModifiedDate":"2023-11-12"},{"lineNumber":105,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":106,"author":{"gitId":"SebasFok"},"content":"            String dataRetrievalSuccess \u003d \"Data successfully retrieved\";","lastModifiedDate":"2023-11-12"},{"lineNumber":107,"author":{"gitId":"SebasFok"},"content":"            String welcomeBackMessage \u003d \"Welcome back \" + student.getName() + \", you are currently in \"","lastModifiedDate":"2023-11-12"},{"lineNumber":108,"author":{"gitId":"SebasFok"},"content":"                    + student.getYear() +","lastModifiedDate":"2023-11-12"},{"lineNumber":109,"author":{"gitId":"SebasFok"},"content":"                    \" studying \" + student.getMajor();","lastModifiedDate":"2023-11-12"},{"lineNumber":110,"author":{"gitId":"SebasFok"},"content":"            ui.printMessage(dataRetrievalSuccess, welcomeBackMessage);","lastModifiedDate":"2023-11-12"},{"lineNumber":111,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":112,"author":{"gitId":"SebasFok"},"content":"            return;","lastModifiedDate":"2023-11-10"},{"lineNumber":113,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":114,"author":{"gitId":"SebasFok"},"content":"        } catch (MissingFileException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":115,"author":{"gitId":"SebasFok"},"content":"            stopLoadingAnimation();","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"Looks like you\u0027re new, new save files will be created.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"SebasFok"},"content":"        } catch (CorruptedFileException e) {","lastModifiedDate":"2023-11-12"},{"lineNumber":119,"author":{"gitId":"SebasFok"},"content":"            stopLoadingAnimation();","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"SebasFok"},"content":"            ui.printStorageError();","lastModifiedDate":"2023-11-12"},{"lineNumber":121,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":122,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":123,"author":{"gitId":"SebasFok"},"content":"        resetStorageData();","lastModifiedDate":"2023-11-13"},{"lineNumber":124,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"New save files successfully created!\");","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"SebasFok"},"content":"    public void resetStorageData() throws IOException {","lastModifiedDate":"2023-11-13"},{"lineNumber":129,"author":{"gitId":"SebasFok"},"content":"        storageManager.createUserStorageFile();","lastModifiedDate":"2023-11-13"},{"lineNumber":130,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":131,"author":{"gitId":"SebasFok"},"content":"        String userInput;","lastModifiedDate":"2023-11-13"},{"lineNumber":132,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"SebasFok"},"content":"        do {","lastModifiedDate":"2023-11-10"},{"lineNumber":134,"author":{"gitId":"SebasFok"},"content":"            stopLoadingAnimation();","lastModifiedDate":"2023-11-12"},{"lineNumber":135,"author":{"gitId":"SebasFok"},"content":"            userInput \u003d ui.getUserCommand(\"Please enter your name: \").trim();","lastModifiedDate":"2023-11-12"},{"lineNumber":136,"author":{"gitId":"SebasFok"},"content":"        } while (!parser.checkNameInput(userInput, commandManager.getListOfCommandNames()));","lastModifiedDate":"2023-11-10"},{"lineNumber":137,"author":{"gitId":"SebasFok"},"content":"        student.setName(userInput);","lastModifiedDate":"2023-11-10"},{"lineNumber":138,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":139,"author":{"gitId":"SebasFok"},"content":"        // Get and set student\u0027s major","lastModifiedDate":"2023-11-03"},{"lineNumber":140,"author":{"gitId":"SebasFok"},"content":"        displayGetMajor(student.getName());","lastModifiedDate":"2023-11-03"},{"lineNumber":141,"author":{"gitId":"SebasFok"},"content":"        do {","lastModifiedDate":"2023-11-03"},{"lineNumber":142,"author":{"gitId":"SebasFok"},"content":"            userInput \u003d ui.getUserCommand(\"Please enter major: \").trim();","lastModifiedDate":"2023-11-12"},{"lineNumber":143,"author":{"gitId":"SebasFok"},"content":"        } while (!validateMajorInput(userInput));","lastModifiedDate":"2023-11-04"},{"lineNumber":144,"author":{"gitId":"SebasFok"},"content":"        student.setFirstMajor(userInput);","lastModifiedDate":"2023-11-03"},{"lineNumber":145,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":146,"author":{"gitId":"SebasFok"},"content":"        // Get and set student\u0027s year","lastModifiedDate":"2023-11-03"},{"lineNumber":147,"author":{"gitId":"SebasFok"},"content":"        displayGetYear();","lastModifiedDate":"2023-11-03"},{"lineNumber":148,"author":{"gitId":"SebasFok"},"content":"        do {","lastModifiedDate":"2023-11-03"},{"lineNumber":149,"author":{"gitId":"SebasFok"},"content":"            userInput \u003d ui.getUserCommand(\"Please enter your current academic year: \").trim();","lastModifiedDate":"2023-11-12"},{"lineNumber":150,"author":{"gitId":"SebasFok"},"content":"        } while (!Parser.isValidAcademicYear(userInput.toUpperCase()));","lastModifiedDate":"2023-11-03"},{"lineNumber":151,"author":{"gitId":"SebasFok"},"content":"        student.setYear(userInput.toUpperCase());","lastModifiedDate":"2023-11-03"},{"lineNumber":152,"author":{"gitId":"SebasFok"},"content":"        storageManager.saveStudentDetails(student);","lastModifiedDate":"2023-11-13"},{"lineNumber":153,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":154,"author":{"gitId":"SebasFok"},"content":"        //get blank schedule.txt","lastModifiedDate":"2023-11-13"},{"lineNumber":155,"author":{"gitId":"SebasFok"},"content":"        student.setSchedule(new Schedule());","lastModifiedDate":"2023-11-13"},{"lineNumber":156,"author":{"gitId":"SebasFok"},"content":"        saveSchedule(student);","lastModifiedDate":"2023-11-13"},{"lineNumber":157,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":158,"author":{"gitId":"SebasFok"},"content":"        //get blank timetable.txt","lastModifiedDate":"2023-11-13"},{"lineNumber":159,"author":{"gitId":"SebasFok"},"content":"        //requires student details","lastModifiedDate":"2023-11-13"},{"lineNumber":160,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-11-13"},{"lineNumber":161,"author":{"gitId":"SebasFok"},"content":"            student.updateTimetable();","lastModifiedDate":"2023-11-13"},{"lineNumber":162,"author":{"gitId":"SebasFok"},"content":"        } catch (TimetableUnavailableException ignoredError) {","lastModifiedDate":"2023-11-13"},{"lineNumber":163,"author":{"gitId":"SebasFok"},"content":"            //should be unavailable","lastModifiedDate":"2023-11-13"},{"lineNumber":164,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":165,"author":{"gitId":"SebasFok"},"content":"        saveTimetable(student);","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":167,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":168,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"SebasFok"},"content":"     * Sets the student details based on the provided list of information, such as name, major, and year.","lastModifiedDate":"2023-11-13"},{"lineNumber":171,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":172,"author":{"gitId":"SebasFok"},"content":"     * @param studentDetails The list of student information containing name, major, and year in this order.","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"SebasFok"},"content":"     * @throws CorruptedFileException If the provided student information is null, has an incorrect number of elements,","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"SebasFok"},"content":"     *                                or if any of the information is invalid.","lastModifiedDate":"2023-11-13"},{"lineNumber":175,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"SebasFok"},"content":"    private void setStudentDetails(ArrayList\u003cString\u003e studentDetails) throws CorruptedFileException {","lastModifiedDate":"2023-11-13"},{"lineNumber":177,"author":{"gitId":"SebasFok"},"content":"        int correctNumOfStudentInfo \u003d 3;","lastModifiedDate":"2023-11-13"},{"lineNumber":178,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":179,"author":{"gitId":"SebasFok"},"content":"        if (studentDetails \u003d\u003d null || studentDetails.size() !\u003d correctNumOfStudentInfo) {","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"SebasFok"},"content":"            throw new CorruptedFileException();","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":182,"author":{"gitId":"SebasFok"},"content":"        // Check if name is valid and set if yes","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"SebasFok"},"content":"        if (!parser.checkNameInput(studentDetails.get(0), commandManager.getListOfCommandNames())) {","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"SebasFok"},"content":"            throw new CorruptedFileException();","lastModifiedDate":"2023-11-13"},{"lineNumber":185,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":186,"author":{"gitId":"SebasFok"},"content":"        student.setName(studentDetails.get(0));","lastModifiedDate":"2023-11-13"},{"lineNumber":187,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":188,"author":{"gitId":"SebasFok"},"content":"        // Check if major is valid and set if yes","lastModifiedDate":"2023-11-13"},{"lineNumber":189,"author":{"gitId":"SebasFok"},"content":"        if (!validateMajorInput(studentDetails.get(1))) {","lastModifiedDate":"2023-11-13"},{"lineNumber":190,"author":{"gitId":"SebasFok"},"content":"            throw new CorruptedFileException();","lastModifiedDate":"2023-11-13"},{"lineNumber":191,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":192,"author":{"gitId":"SebasFok"},"content":"        student.setFirstMajor(studentDetails.get(1));","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"SebasFok"},"content":"        //Check if year is valid and set if yes","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"SebasFok"},"content":"        if (!Parser.isValidAcademicYear(studentDetails.get(2).toUpperCase())) {","lastModifiedDate":"2023-11-13"},{"lineNumber":196,"author":{"gitId":"SebasFok"},"content":"            throw new CorruptedFileException();","lastModifiedDate":"2023-11-13"},{"lineNumber":197,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":198,"author":{"gitId":"SebasFok"},"content":"        student.setYear(studentDetails.get(2).toUpperCase());","lastModifiedDate":"2023-11-13"},{"lineNumber":199,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":200,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":201,"author":{"gitId":"SebasFok"},"content":"    public void handleUserInputTillExitCommand() {","lastModifiedDate":"2023-11-03"},{"lineNumber":202,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":203,"author":{"gitId":"SebasFok"},"content":"        UserCommand currentUserCommand \u003d new UserCommand();","lastModifiedDate":"2023-11-07"},{"lineNumber":204,"author":{"gitId":"SebasFok"},"content":"        while (!currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-07"},{"lineNumber":205,"author":{"gitId":"SebasFok"},"content":"            String userInput \u003d ui.getUserCommand(\"Input command here: \");","lastModifiedDate":"2023-11-12"},{"lineNumber":206,"author":{"gitId":"SebasFok"},"content":"            currentUserCommand \u003d new UserCommand(userInput.replace(\"\\r\", \"\"));","lastModifiedDate":"2023-11-12"},{"lineNumber":207,"author":{"gitId":"SebasFok"},"content":"            if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-07"},{"lineNumber":208,"author":{"gitId":"SebasFok"},"content":"                currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-08"},{"lineNumber":209,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":210,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":211,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":212,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":213,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":214,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":215,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"SebasFok":157,"ryanlohyr":47,"janelleenqi":10,"rohitcube":1}},{"path":"src/main/java/seedu/duke/controllers/ModuleMethodsController.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.MandatoryPrereqException;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.FailPrereqException;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.MissingModuleException;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.InvalidPrereqException;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.Module;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.Parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.errors.UserError;","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.controllers.ModuleServiceController.chooseToAddToSchedule;","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.controllers.ModuleServiceController.isConfirmedToClearSchedule;","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.Api.isValidModule;","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.Prerequisite.getModulePrereqBasedOnCourse;","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.storage.StorageManager.saveSchedule;","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.storage.StorageManager.saveTimetable;","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.utils.errors.HttpError.displaySocketError;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.Ui.displayMessage;","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.displaySuccessfulAddMessage;","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.showPrereq;","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.displaySuccessfulDeleteMessage;","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.views.CommandLineView.displaySuccessfulShiftMessage;","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.views.CommandLineView.displaySuccessfulClearMessage;","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.views.CommandLineView.displayUnsuccessfulClearMessage;","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.views.MajorRequirementsView.printRequiredModules;","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.ModuleInfoView.printModuleStringArray;","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.Ui.showLoadingAnimation;","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.Ui.stopLoadingAnimation;","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":" * This class houses all the methods for the Module Planner controller.","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":" * It provides functionality for computing the recommended pace, showing modules left,","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":" * adding, deleting, completing modules,","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":" * It provides functionality for computing the recommended pace,","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":" * showing modules left, adding, deleting, completing modules,","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":" * and getting required modules for a student.","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":" *","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"public class ModuleMethodsController {","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"     * Computes and displays the recommended pace for completing remaining module credits until graduation.","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"     * @param arguments              An array of strings containing academic year and semester information.","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"     * @param completedModuleCredits The number of module credits already completed by the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"    public static void executePaceCommand(String[] arguments, int completedModuleCredits, String currentAcademicYear) {","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"        int totalCreditsToGraduate \u003d 160;","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"        int creditsLeft \u003d totalCreditsToGraduate - completedModuleCredits;","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"        boolean argumentProvided \u003d arguments.length !\u003d 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"        String[] parts \u003d currentAcademicYear.split(\"/\");;","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"        //if the user provided a argument and it was invalid","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"        if (argumentProvided \u0026\u0026 !Parser.isValidAcademicYear(arguments[0])) {","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"            return;","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"        //if user provided argument, we will use this to calculate pace instead","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"        if(argumentProvided) {","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"            parts \u003d arguments[0].split(\"/\");","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"        String year \u003d parts[0].toUpperCase();","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"        String semester \u003d parts[1].toUpperCase();","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"        int lastSemesterOfYear \u003d 2;","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"        int lastYearOfDegree \u003d 4;","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"        int yearIntValue \u003d Character.getNumericValue(year.charAt(1));","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"        int semesterIntValue \u003d Character.getNumericValue(semester.charAt(1));","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"        //if we are at y2s1, we have 5 semesters left","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"        int semestersLeft \u003d (lastYearOfDegree - yearIntValue) * 2 + (lastSemesterOfYear - semesterIntValue);","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"        int creditsPerSem \u003d Math.round((float) creditsLeft / semestersLeft);","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"        displayMessage(\"You have \" + creditsLeft + \"MCs for \" + semestersLeft + \" semesters. \"","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"                + \"Recommended Pace: \" + creditsPerSem + \"MCs per sem until graduation\");","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"     * Displays the list of remaining module codes.","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"     * This method takes an ArrayList of module codes and prints them to the console","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"     * after displaying a header message.","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"     * @param moduleCodesLeft An ArrayList of Strings representing the remaining module codes.","lastModifiedDate":"2023-11-13"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"     *                        It should not be null.","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"    public static void showModulesLeft(ArrayList\u003cString\u003e moduleCodesLeft) {","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"        displayMessage(\"Required Modules Left: \");","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"        printModuleStringArray(moduleCodesLeft);","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"SebasFok"},"content":"     * Executes the command to add a module to the target semester of the student\u0027s schedule and saves the updated","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"SebasFok"},"content":"     * schedule. This method adds the specified module to the target semester of the student\u0027s schedule and prints","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"SebasFok"},"content":"     * the updated schedule. Additionally, it attempts to save the updated schedule to storage.","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"SebasFok"},"content":"     * Exceptions related to module deletion, missing modules, mandatory prerequisites, and","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"SebasFok"},"content":"     * storage I/O errors are caught and appropriate error messages are displayed.","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"SebasFok"},"content":"     * @param module     The module code of the module to be added.","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"SebasFok"},"content":"     * @param targetSem  The target semester for adding the module.","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"SebasFok"},"content":"     * @param student    The student object to which the module will be added.","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"SebasFok"},"content":"    public static void executeAddModuleCommand(String module, int targetSem, Student student) {","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"SebasFok"},"content":"            student.addModuleToSchedule(module, targetSem);","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"SebasFok"},"content":"            displaySuccessfulAddMessage();","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"SebasFok"},"content":"            student.printSchedule();","lastModifiedDate":"2023-11-03"},{"lineNumber":120,"author":{"gitId":"SebasFok"},"content":"            try{","lastModifiedDate":"2023-11-11"},{"lineNumber":121,"author":{"gitId":"SebasFok"},"content":"                saveSchedule(student);","lastModifiedDate":"2023-11-11"},{"lineNumber":122,"author":{"gitId":"SebasFok"},"content":"            }catch (IOException ignored){","lastModifiedDate":"2023-11-11"},{"lineNumber":123,"author":{"gitId":"SebasFok"},"content":"                //we ignore first as GitHub actions cant save schedule on the direcotry","lastModifiedDate":"2023-11-11"},{"lineNumber":124,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-11"},{"lineNumber":125,"author":{"gitId":"SebasFok"},"content":"        } catch (InvalidObjectException | IllegalArgumentException e) {","lastModifiedDate":"2023-11-03"},{"lineNumber":126,"author":{"gitId":"SebasFok"},"content":"            displayMessage(e.getMessage());","lastModifiedDate":"2023-11-03"},{"lineNumber":127,"author":{"gitId":"SebasFok"},"content":"        } catch (FailPrereqException f) {","lastModifiedDate":"2023-11-03"},{"lineNumber":128,"author":{"gitId":"SebasFok"},"content":"            showPrereq(module, student.getMajor());","lastModifiedDate":"2023-11-08"},{"lineNumber":129,"author":{"gitId":"SebasFok"},"content":"            displayMessage(f.getMessage());","lastModifiedDate":"2023-11-03"},{"lineNumber":130,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":131,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":132,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":133,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":134,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":135,"author":{"gitId":"ryanlohyr"},"content":"     * Recommends a schedule to the given student based on their major.","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"     * The method generates a recommended schedule, displays a loading animation,","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"ryanlohyr"},"content":"     * and allows the student to choose whether to add the recommended courses to their existing schedule.","lastModifiedDate":"2023-11-13"},{"lineNumber":138,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"     * @param student The student for whom the schedule recommendation is generated.","lastModifiedDate":"2023-11-13"},{"lineNumber":140,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":141,"author":{"gitId":"ryanlohyr"},"content":"    public static void executeRecommendCommand(Student student) {","lastModifiedDate":"2023-11-13"},{"lineNumber":142,"author":{"gitId":"ryanlohyr"},"content":"        try{","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(\"Hold on a sec! Generating your recommended schedule \u003c3....\");","lastModifiedDate":"2023-11-08"},{"lineNumber":144,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":145,"author":{"gitId":"ryanlohyr"},"content":"            showLoadingAnimation();","lastModifiedDate":"2023-11-12"},{"lineNumber":146,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":147,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e recommendedSchedule \u003d student.generateRecommendedSchedule();","lastModifiedDate":"2023-11-13"},{"lineNumber":148,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":149,"author":{"gitId":"ryanlohyr"},"content":"            stopLoadingAnimation();","lastModifiedDate":"2023-11-12"},{"lineNumber":150,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":151,"author":{"gitId":"ryanlohyr"},"content":"            printModuleStringArray(recommendedSchedule);","lastModifiedDate":"2023-11-13"},{"lineNumber":152,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":153,"author":{"gitId":"ryanlohyr"},"content":"            chooseToAddToSchedule(student, recommendedSchedule);","lastModifiedDate":"2023-11-04"},{"lineNumber":154,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":155,"author":{"gitId":"ryanlohyr"},"content":"        }catch (IOException e) {","lastModifiedDate":"2023-11-09"},{"lineNumber":156,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(\"Oh no, we could not generate your schedule\");","lastModifiedDate":"2023-11-09"},{"lineNumber":157,"author":{"gitId":"ryanlohyr"},"content":"            displaySocketError();","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":159,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":160,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":161,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":162,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":163,"author":{"gitId":"ryanlohyr"},"content":"     * Deletes a module from the student\u0027s schedule and saves the updated schedule.","lastModifiedDate":"2023-11-13"},{"lineNumber":164,"author":{"gitId":"ryanlohyr"},"content":"     * This method removes the specified module from the student\u0027s schedule and prints","lastModifiedDate":"2023-11-13"},{"lineNumber":165,"author":{"gitId":"ryanlohyr"},"content":"     * the updated schedule. Additionally, it attempts to save the updated schedule to storage.","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"ryanlohyr"},"content":"     * Exceptions related to module deletion, missing modules, mandatory prerequisites, and","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"ryanlohyr"},"content":"     * storage I/O errors are caught and appropriate error messages are displayed.","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"ryanlohyr"},"content":"     * @param module  The code or identifier of the module to be deleted.","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"ryanlohyr"},"content":"     * @param student The student object whose schedule is being updated.","lastModifiedDate":"2023-11-13"},{"lineNumber":171,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":172,"author":{"gitId":"ryanlohyr"},"content":"    public static void executeDeleteModuleCommand(String module, Student student) {","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-03"},{"lineNumber":174,"author":{"gitId":"ryanlohyr"},"content":"            student.deleteModuleFromSchedule(module);","lastModifiedDate":"2023-11-13"},{"lineNumber":175,"author":{"gitId":"ryanlohyr"},"content":"            displaySuccessfulDeleteMessage();","lastModifiedDate":"2023-11-03"},{"lineNumber":176,"author":{"gitId":"ryanlohyr"},"content":"            student.printSchedule();","lastModifiedDate":"2023-11-03"},{"lineNumber":177,"author":{"gitId":"ryanlohyr"},"content":"            try{","lastModifiedDate":"2023-11-11"},{"lineNumber":178,"author":{"gitId":"ryanlohyr"},"content":"                saveSchedule(student);","lastModifiedDate":"2023-11-11"},{"lineNumber":179,"author":{"gitId":"ryanlohyr"},"content":"                saveTimetable(student);","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"ryanlohyr"},"content":"            }catch (IOException ignored){","lastModifiedDate":"2023-11-11"},{"lineNumber":181,"author":{"gitId":"ryanlohyr"},"content":"                //we ignore first as GitHub actions cant save schedule on the direcotry","lastModifiedDate":"2023-11-11"},{"lineNumber":182,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-11"},{"lineNumber":183,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":184,"author":{"gitId":"ryanlohyr"},"content":"        } catch (MissingModuleException | MandatoryPrereqException e) {","lastModifiedDate":"2023-11-08"},{"lineNumber":185,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(e.getMessage());","lastModifiedDate":"2023-11-03"},{"lineNumber":186,"author":{"gitId":"ryanlohyr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-09"},{"lineNumber":187,"author":{"gitId":"ryanlohyr"},"content":"            displaySocketError();","lastModifiedDate":"2023-11-09"},{"lineNumber":188,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":189,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":190,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":191,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":192,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"SebasFok"},"content":"     * Executes the command to shift a module within a student\u0027s schedule to a different semester.","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"SebasFok"},"content":"     * This method shifts the specified module to the target semester of the student\u0027s schedule and prints","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"SebasFok"},"content":"     * the updated schedule. Additionally, it attempts to save the updated schedule to storage.","lastModifiedDate":"2023-11-13"},{"lineNumber":196,"author":{"gitId":"SebasFok"},"content":"     * Exceptions related to module deletion, missing modules, mandatory prerequisites, and","lastModifiedDate":"2023-11-13"},{"lineNumber":197,"author":{"gitId":"SebasFok"},"content":"     * storage I/O errors are caught and appropriate error messages are displayed.","lastModifiedDate":"2023-11-13"},{"lineNumber":198,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":199,"author":{"gitId":"SebasFok"},"content":"     * @param module     The module code of the module to be shifted.","lastModifiedDate":"2023-11-13"},{"lineNumber":200,"author":{"gitId":"SebasFok"},"content":"     * @param targetSem  The target semester for shifting the module.","lastModifiedDate":"2023-11-13"},{"lineNumber":201,"author":{"gitId":"SebasFok"},"content":"     * @param student    The student object whose schedule will be updated.","lastModifiedDate":"2023-11-13"},{"lineNumber":202,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":203,"author":{"gitId":"SebasFok"},"content":"    public static void executeShiftModuleCommand(String module, int targetSem, Student student) {","lastModifiedDate":"2023-11-13"},{"lineNumber":204,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-11-08"},{"lineNumber":205,"author":{"gitId":"SebasFok"},"content":"            student.shiftModuleInSchedule(module, targetSem);","lastModifiedDate":"2023-11-13"},{"lineNumber":206,"author":{"gitId":"SebasFok"},"content":"            displaySuccessfulShiftMessage();","lastModifiedDate":"2023-11-08"},{"lineNumber":207,"author":{"gitId":"SebasFok"},"content":"            student.printSchedule();","lastModifiedDate":"2023-11-08"},{"lineNumber":208,"author":{"gitId":"SebasFok"},"content":"            try{","lastModifiedDate":"2023-11-11"},{"lineNumber":209,"author":{"gitId":"SebasFok"},"content":"                saveSchedule(student);","lastModifiedDate":"2023-11-11"},{"lineNumber":210,"author":{"gitId":"SebasFok"},"content":"                saveTimetable(student);","lastModifiedDate":"2023-11-13"},{"lineNumber":211,"author":{"gitId":"SebasFok"},"content":"            }catch (IOException ignored){","lastModifiedDate":"2023-11-11"},{"lineNumber":212,"author":{"gitId":"SebasFok"},"content":"                //we ignore first as GitHub actions cant save schedule on the direcotry","lastModifiedDate":"2023-11-11"},{"lineNumber":213,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-11"},{"lineNumber":214,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":215,"author":{"gitId":"SebasFok"},"content":"        } catch (InvalidObjectException | IllegalArgumentException | MissingModuleException |","lastModifiedDate":"2023-11-08"},{"lineNumber":216,"author":{"gitId":"SebasFok"},"content":"                 MandatoryPrereqException e) {","lastModifiedDate":"2023-11-08"},{"lineNumber":217,"author":{"gitId":"SebasFok"},"content":"            displayMessage(e.getMessage());","lastModifiedDate":"2023-11-08"},{"lineNumber":218,"author":{"gitId":"SebasFok"},"content":"        } catch (FailPrereqException f) {","lastModifiedDate":"2023-11-08"},{"lineNumber":219,"author":{"gitId":"SebasFok"},"content":"            showPrereq(module, student.getMajor());","lastModifiedDate":"2023-11-08"},{"lineNumber":220,"author":{"gitId":"SebasFok"},"content":"            displayMessage(f.getMessage());","lastModifiedDate":"2023-11-08"},{"lineNumber":221,"author":{"gitId":"SebasFok"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-09"},{"lineNumber":222,"author":{"gitId":"SebasFok"},"content":"            displaySocketError();","lastModifiedDate":"2023-11-09"},{"lineNumber":223,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":224,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":225,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":226,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":227,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":228,"author":{"gitId":"SebasFok"},"content":"     * Executes the command to clear the student\u0027s schedule. This method clears the entire schedule of the student as","lastModifiedDate":"2023-11-13"},{"lineNumber":229,"author":{"gitId":"SebasFok"},"content":"     * well as the completion status of all modules. Additionally, it attempts to save the updated schedule to storage.","lastModifiedDate":"2023-11-13"},{"lineNumber":230,"author":{"gitId":"SebasFok"},"content":"     * Before clearing, the user will be prompted again to check if they truly want to clear their schedule.","lastModifiedDate":"2023-11-13"},{"lineNumber":231,"author":{"gitId":"SebasFok"},"content":"     * Exceptions related to module deletion, missing modules, mandatory prerequisites, and","lastModifiedDate":"2023-11-13"},{"lineNumber":232,"author":{"gitId":"SebasFok"},"content":"     * storage I/O errors are caught and appropriate error messages are displayed.","lastModifiedDate":"2023-11-13"},{"lineNumber":233,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":234,"author":{"gitId":"SebasFok"},"content":"     * @param student    The student object whose schedule will be cleared.","lastModifiedDate":"2023-11-13"},{"lineNumber":235,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":236,"author":{"gitId":"SebasFok"},"content":"    public static void executeClearScheduleCommand(Student student){","lastModifiedDate":"2023-11-13"},{"lineNumber":237,"author":{"gitId":"SebasFok"},"content":"        if(!isConfirmedToClearSchedule()){","lastModifiedDate":"2023-11-11"},{"lineNumber":238,"author":{"gitId":"SebasFok"},"content":"            displayUnsuccessfulClearMessage();","lastModifiedDate":"2023-11-11"},{"lineNumber":239,"author":{"gitId":"SebasFok"},"content":"            return;","lastModifiedDate":"2023-11-11"},{"lineNumber":240,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":241,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":242,"author":{"gitId":"SebasFok"},"content":"        student.clearAllModulesFromSchedule();","lastModifiedDate":"2023-11-08"},{"lineNumber":243,"author":{"gitId":"SebasFok"},"content":"        displaySuccessfulClearMessage();","lastModifiedDate":"2023-11-08"},{"lineNumber":244,"author":{"gitId":"SebasFok"},"content":"        try{","lastModifiedDate":"2023-11-11"},{"lineNumber":245,"author":{"gitId":"SebasFok"},"content":"            saveSchedule(student);","lastModifiedDate":"2023-11-11"},{"lineNumber":246,"author":{"gitId":"SebasFok"},"content":"            saveTimetable(student);","lastModifiedDate":"2023-11-13"},{"lineNumber":247,"author":{"gitId":"SebasFok"},"content":"        }catch (IOException e){","lastModifiedDate":"2023-11-11"},{"lineNumber":248,"author":{"gitId":"SebasFok"},"content":"            throw new RuntimeException();","lastModifiedDate":"2023-11-11"},{"lineNumber":249,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":250,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":251,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":252,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":253,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":254,"author":{"gitId":"SebasFok"},"content":"     * Completes the specified module for the given student.","lastModifiedDate":"2023-11-13"},{"lineNumber":255,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":256,"author":{"gitId":"SebasFok"},"content":"     * This method attempts to mark the specified module as completed for the given student.","lastModifiedDate":"2023-11-13"},{"lineNumber":257,"author":{"gitId":"SebasFok"},"content":"     * It checks if the module is already completed, and if so, displays an error message","lastModifiedDate":"2023-11-13"},{"lineNumber":258,"author":{"gitId":"SebasFok"},"content":"     * and exits the method. If the module is not found in the student\u0027s schedule planner,","lastModifiedDate":"2023-11-13"},{"lineNumber":259,"author":{"gitId":"SebasFok"},"content":"     * a message is displayed. If the prerequisites for the module are not met, an error","lastModifiedDate":"2023-11-13"},{"lineNumber":260,"author":{"gitId":"SebasFok"},"content":"     * message is displayed, and the prerequisites are shown.","lastModifiedDate":"2023-11-13"},{"lineNumber":261,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":262,"author":{"gitId":"SebasFok"},"content":"     * @param student The student for whom the module is to be completed. Must not be null.","lastModifiedDate":"2023-11-13"},{"lineNumber":263,"author":{"gitId":"SebasFok"},"content":"     * @param moduleCode The code of the module to be completed. Must not be null.","lastModifiedDate":"2023-11-13"},{"lineNumber":264,"author":{"gitId":"SebasFok"},"content":"     * @throws MissingModuleException If the module does not exist in the student\u0027s schedule planner.","lastModifiedDate":"2023-11-13"},{"lineNumber":265,"author":{"gitId":"SebasFok"},"content":"     * @throws FailPrereqException If the prerequisites for the module are not met.","lastModifiedDate":"2023-11-13"},{"lineNumber":266,"author":{"gitId":"SebasFok"},"content":"     *                            Displays an error message and shows the prerequisites.","lastModifiedDate":"2023-11-13"},{"lineNumber":267,"author":{"gitId":"SebasFok"},"content":"     * @throws RuntimeException If an unexpected InvalidPrereqException occurs (should not happen).","lastModifiedDate":"2023-11-13"},{"lineNumber":268,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":269,"author":{"gitId":"SebasFok"},"content":"    public static void completeModule(Student student, String moduleCode) {","lastModifiedDate":"2023-11-06"},{"lineNumber":270,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":271,"author":{"gitId":"SebasFok"},"content":"            Module module \u003d student.getModuleFromSchedule(moduleCode);","lastModifiedDate":"2023-11-07"},{"lineNumber":272,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":273,"author":{"gitId":"SebasFok"},"content":"            // if module is already completed, exit","lastModifiedDate":"2023-11-08"},{"lineNumber":274,"author":{"gitId":"SebasFok"},"content":"            if (module.getCompletionStatus()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":275,"author":{"gitId":"SebasFok"},"content":"                UserError.displayModuleAlreadyCompleted(module.getModuleCode());","lastModifiedDate":"2023-11-06"},{"lineNumber":276,"author":{"gitId":"SebasFok"},"content":"                return;","lastModifiedDate":"2023-11-08"},{"lineNumber":277,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":278,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":279,"author":{"gitId":"SebasFok"},"content":"            student.completeModuleSchedule(moduleCode);","lastModifiedDate":"2023-11-06"},{"lineNumber":280,"author":{"gitId":"SebasFok"},"content":"            // update save file","lastModifiedDate":"2023-11-13"},{"lineNumber":281,"author":{"gitId":"SebasFok"},"content":"            try {","lastModifiedDate":"2023-11-11"},{"lineNumber":282,"author":{"gitId":"SebasFok"},"content":"                saveSchedule(student);","lastModifiedDate":"2023-11-11"},{"lineNumber":283,"author":{"gitId":"SebasFok"},"content":"            } catch (IOException ignored){","lastModifiedDate":"2023-11-11"},{"lineNumber":284,"author":{"gitId":"SebasFok"},"content":"                // GitHub actions cannot save schedule on the directory","lastModifiedDate":"2023-11-13"},{"lineNumber":285,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-11"},{"lineNumber":286,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":287,"author":{"gitId":"SebasFok"},"content":"        } catch (MissingModuleException e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":288,"author":{"gitId":"SebasFok"},"content":"            // module not does exist in schedule planner","lastModifiedDate":"2023-11-13"},{"lineNumber":289,"author":{"gitId":"SebasFok"},"content":"            displayMessage(e.getMessage());","lastModifiedDate":"2023-11-06"},{"lineNumber":290,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":291,"author":{"gitId":"SebasFok"},"content":"        } catch (InvalidObjectException e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":292,"author":{"gitId":"SebasFok"},"content":"            assert false;","lastModifiedDate":"2023-11-06"},{"lineNumber":293,"author":{"gitId":"SebasFok"},"content":"        } catch (FailPrereqException e) {","lastModifiedDate":"2023-11-08"},{"lineNumber":294,"author":{"gitId":"SebasFok"},"content":"            // prerequisites are not met","lastModifiedDate":"2023-11-13"},{"lineNumber":295,"author":{"gitId":"SebasFok"},"content":"            displayMessage(\"Prerequisites not completed for \" + moduleCode);","lastModifiedDate":"2023-11-08"},{"lineNumber":296,"author":{"gitId":"SebasFok"},"content":"            showPrereq(moduleCode, student.getMajor());","lastModifiedDate":"2023-11-08"},{"lineNumber":297,"author":{"gitId":"SebasFok"},"content":"        } catch (InvalidPrereqException e) {","lastModifiedDate":"2023-11-08"},{"lineNumber":298,"author":{"gitId":"SebasFok"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-11-08"},{"lineNumber":299,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":300,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":301,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":302,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":303,"author":{"gitId":"SebasFok"},"content":"     * Prints the required modules for a student based on their major.","lastModifiedDate":"2023-11-13"},{"lineNumber":304,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":305,"author":{"gitId":"SebasFok"},"content":"     * This method calls the printRequiredModules function in MajorRequirementsView to print required modules for","lastModifiedDate":"2023-11-13"},{"lineNumber":306,"author":{"gitId":"SebasFok"},"content":"     * the specified major.","lastModifiedDate":"2023-11-13"},{"lineNumber":307,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":308,"author":{"gitId":"SebasFok"},"content":"     * @param major The major of the student that will be used to print the required modules.","lastModifiedDate":"2023-11-13"},{"lineNumber":309,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":310,"author":{"gitId":"SebasFok"},"content":"    public static void executeGetRequiredModulesForStudent(String major) {","lastModifiedDate":"2023-11-14"},{"lineNumber":311,"author":{"gitId":"SebasFok"},"content":"        printRequiredModules(major);","lastModifiedDate":"2023-11-03"},{"lineNumber":312,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":313,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":314,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":315,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":316,"author":{"gitId":"ryanlohyr"},"content":"     * Determines and displays the prerequisites of a module for a given major.","lastModifiedDate":"2023-11-07"},{"lineNumber":317,"author":{"gitId":"ryanlohyr"},"content":"     * This method determines the prerequisites of a module based on the provided module code and major.","lastModifiedDate":"2023-11-07"},{"lineNumber":318,"author":{"gitId":"ryanlohyr"},"content":"     * It checks if the module exists, retrieves its prerequisites, and displays them if they are available.","lastModifiedDate":"2023-11-07"},{"lineNumber":319,"author":{"gitId":"ryanlohyr"},"content":"     * If the module does not exist, or if there are any issues with retrieving prerequisites, appropriate","lastModifiedDate":"2023-11-07"},{"lineNumber":320,"author":{"gitId":"ryanlohyr"},"content":"     * messages are displayed.","lastModifiedDate":"2023-11-07"},{"lineNumber":321,"author":{"gitId":"ryanlohyr"},"content":"     * @param moduleCode The module code for which prerequisites need to be determined.","lastModifiedDate":"2023-11-07"},{"lineNumber":322,"author":{"gitId":"ryanlohyr"},"content":"     * @param major      The major for which the prerequisites are determined.","lastModifiedDate":"2023-11-07"},{"lineNumber":323,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":324,"author":{"gitId":"ryanlohyr"},"content":"    public static void determinePrereq(String moduleCode, String major) {","lastModifiedDate":"2023-11-03"},{"lineNumber":325,"author":{"gitId":"ryanlohyr"},"content":"        boolean isValid \u003d isValidModule(moduleCode);","lastModifiedDate":"2023-11-13"},{"lineNumber":326,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e prereq;","lastModifiedDate":"2023-11-13"},{"lineNumber":327,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":328,"author":{"gitId":"ryanlohyr"},"content":"        // Checks if the module is a valid module in NUS","lastModifiedDate":"2023-11-13"},{"lineNumber":329,"author":{"gitId":"ryanlohyr"},"content":"        if (!isValid) {","lastModifiedDate":"2023-11-13"},{"lineNumber":330,"author":{"gitId":"ryanlohyr"},"content":"            return;","lastModifiedDate":"2023-11-03"},{"lineNumber":331,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":332,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":333,"author":{"gitId":"ryanlohyr"},"content":"        try{","lastModifiedDate":"2023-11-07"},{"lineNumber":334,"author":{"gitId":"ryanlohyr"},"content":"            prereq \u003d getModulePrereqBasedOnCourse(moduleCode, major);","lastModifiedDate":"2023-11-07"},{"lineNumber":335,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":336,"author":{"gitId":"ryanlohyr"},"content":"            if (prereq \u003d\u003d null) {","lastModifiedDate":"2023-11-13"},{"lineNumber":337,"author":{"gitId":"ryanlohyr"},"content":"                displayMessage(\"Module \" + moduleCode + \" has no prerequisites.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":338,"author":{"gitId":"ryanlohyr"},"content":"                return;","lastModifiedDate":"2023-11-09"},{"lineNumber":339,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":340,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":341,"author":{"gitId":"ryanlohyr"},"content":"            printModuleStringArray(prereq);","lastModifiedDate":"2023-11-06"},{"lineNumber":342,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":343,"author":{"gitId":"ryanlohyr"},"content":"        } catch (InvalidPrereqException e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":344,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(e.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":345,"author":{"gitId":"ryanlohyr"},"content":"        }catch (IOException e){","lastModifiedDate":"2023-11-13"},{"lineNumber":346,"author":{"gitId":"ryanlohyr"},"content":"            //if there is an issue connecting to NUSMods/connecting to the internet","lastModifiedDate":"2023-11-13"},{"lineNumber":347,"author":{"gitId":"ryanlohyr"},"content":"            displaySocketError();","lastModifiedDate":"2023-11-13"},{"lineNumber":348,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":349,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":350,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"SebasFok":159,"ryanlohyr":167,"janelleenqi":24}},{"path":"src/main/java/seedu/duke/controllers/ModuleServiceController.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.Major;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Schedule;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.Timetable;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.ModuleWeekly;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.TimetableUserCommand;","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.InvalidModifyArgumentException;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.InvalidTimetableUserCommandException;","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.TimetableUnavailableException;","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.views.Ui;","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.storage.StorageManager.saveSchedule;","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.storage.StorageManager.saveTimetable;","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.utils.TimetableParser.isExitModify;","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.views.MajorRequirementsView.printRequiredModules;","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.SemesterPlannerView.displaySchedule;","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.views.TimetableUserGuideView.printCurrentSemModules;","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.views.TimetableUserGuideView.println;","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.views.TimetableUserGuideView.printTTModifyDetailedLessonGuide;","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.views.TimetableUserGuideView.printTTModifySimpleLessonGuide;","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.views.TimetableView.printTimetable;","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.Ui.displayMessage;","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"public class ModuleServiceController {","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"     * Checks if the user\u0027s major input is valid. A major input is valid if it exists in the enumeration","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"     * of valid majors.","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"     * @param userInput The user\u0027s major input.","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"     * @return True if the input is a valid major, false otherwise.","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"    public static boolean validateMajorInput(String userInput) {","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"            Major.valueOf(userInput.toUpperCase());","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"            return true;","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Please choose from the list: CS, or CEG\");","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"     * Prompts the user to choose whether to add a list of modules to their draft schedule.","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"     * Displays the list of modules and asks for user input. Handles user input validation.","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"     * @param scheduleToAdd A list of modules to be added to the schedule.","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"    public static void chooseToAddToSchedule(Student student, ArrayList\u003cString\u003e scheduleToAdd) throws IOException {","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"        displayMessage(\"Here you go!\");","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"        displayMessage(\"Taking the modules in this order will ensure a prerequisite worry free uni life!\");","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"        displayMessage(\"Do you want to add this to your schedule planner? \" +","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"                \"(This will overwrite your current schedule!)\");","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"        displayMessage(\"Please input \u0027Y\u0027 or \u0027N\u0027\");","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"        String userInput \u003d in.nextLine().replace(\"\\r\", \"\").toUpperCase();","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"        while (!userInput.equals(\"N\") \u0026\u0026 !userInput.equals((\"Y\"))) {","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(\"Invalid input, please choose Y/N\");","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"            userInput \u003d in.nextLine().replace(\"\\r\", \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"        if(userInput.equals(\"N\")){","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(\"Okay, we will not put it in your schedule\");","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"            return;","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"        student.addRecommendedSchedule(scheduleToAdd);","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"        displayMessage(\"Here is your schedule planner!\");","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"        Schedule currentSchedule \u003d student.getSchedule();","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"        displaySchedule(currentSchedule);","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"        displayMessage(\"Happy degree planning!\");","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"        saveSchedule(student);","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"     * Retrieves and prints the required modules for a specified major.","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"     * This method initializes a `MajorRequirements` object based on the provided `major`.","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"     * It then attempts to print the required modules from a corresponding TXT file.","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"     * If the TXT file is not found, an error message is displayed.","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"     * @param major The major for which to retrieve required modules.","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"     * @throws NullPointerException If `major` is null.","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"    public static void getRequiredModules(String major) throws NullPointerException {","lastModifiedDate":"2023-11-03"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"        printRequiredModules(major);","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"SebasFok"},"content":"     * Asks the user for confirmation to clear their schedule and returns the user\u0027s choice.","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"SebasFok"},"content":"     * Displays a message warning that clearing your schedule cannot be undone.","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"SebasFok"},"content":"     * @return true if the user confirms by entering \u0027Y\u0027, false if \u0027N\u0027.","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"SebasFok"},"content":"    public static boolean isConfirmedToClearSchedule() {","lastModifiedDate":"2023-11-08"},{"lineNumber":117,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":118,"author":{"gitId":"SebasFok"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-11-08"},{"lineNumber":119,"author":{"gitId":"SebasFok"},"content":"        displayMessage(\"Are you sure you want to clear your schedule? \" +","lastModifiedDate":"2023-11-08"},{"lineNumber":120,"author":{"gitId":"SebasFok"},"content":"                \"This action cannot be undone!\");","lastModifiedDate":"2023-11-08"},{"lineNumber":121,"author":{"gitId":"SebasFok"},"content":"        displayMessage(\"Please input \u0027Y\u0027 or \u0027N\u0027\");","lastModifiedDate":"2023-11-08"},{"lineNumber":122,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":123,"author":{"gitId":"SebasFok"},"content":"        String userInput \u003d in.nextLine().toUpperCase();","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":125,"author":{"gitId":"SebasFok"},"content":"        while (!userInput.equals(\"N\") \u0026\u0026 !userInput.equals((\"Y\"))) {","lastModifiedDate":"2023-11-08"},{"lineNumber":126,"author":{"gitId":"SebasFok"},"content":"            displayMessage(\"Invalid input, please choose Y/N\");","lastModifiedDate":"2023-11-08"},{"lineNumber":127,"author":{"gitId":"SebasFok"},"content":"            userInput \u003d in.nextLine().toUpperCase();","lastModifiedDate":"2023-11-14"},{"lineNumber":128,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":129,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":130,"author":{"gitId":"SebasFok"},"content":"        return userInput.equals(\"Y\");","lastModifiedDate":"2023-11-08"},{"lineNumber":131,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":132,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":134,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":135,"author":{"gitId":"janelleenqi"},"content":"     * Modifies the timetable for the given student based on user commands.","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"janelleenqi"},"content":"     * This method allows the user to modify the timetable for the current semester","lastModifiedDate":"2023-11-13"},{"lineNumber":138,"author":{"gitId":"janelleenqi"},"content":"     * by processing user commands. It enters a loop to continuously accept commands","lastModifiedDate":"2023-11-13"},{"lineNumber":139,"author":{"gitId":"janelleenqi"},"content":"     * until the user decides to exit. The modified timetable is saved after each","lastModifiedDate":"2023-11-13"},{"lineNumber":140,"author":{"gitId":"janelleenqi"},"content":"     * successful modification. If the timetable view is available, it is printed.","lastModifiedDate":"2023-11-13"},{"lineNumber":141,"author":{"gitId":"janelleenqi"},"content":"     * If the timetable view is unavailable, a simple guide is printed to inform the user.","lastModifiedDate":"2023-11-13"},{"lineNumber":142,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":143,"author":{"gitId":"janelleenqi"},"content":"     * @param student The student for whom the timetable is to be modified.","lastModifiedDate":"2023-11-13"},{"lineNumber":144,"author":{"gitId":"janelleenqi"},"content":"     *                Must not be null.","lastModifiedDate":"2023-11-13"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"     * @throws InvalidModifyArgumentException If an invalid argument is provided during modification.","lastModifiedDate":"2023-11-13"},{"lineNumber":146,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"    public void modifyTimetable(Student student) throws InvalidModifyArgumentException {","lastModifiedDate":"2023-11-13"},{"lineNumber":148,"author":{"gitId":"janelleenqi"},"content":"        Timetable timetable \u003d student.getTimetable();","lastModifiedDate":"2023-11-13"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"        ArrayList \u003cModuleWeekly\u003e currentSemModulesWeekly \u003d timetable.getCurrentSemesterModulesWeekly();","lastModifiedDate":"2023-11-13"},{"lineNumber":150,"author":{"gitId":"janelleenqi"},"content":"        //verify accepted timetableuser command","lastModifiedDate":"2023-11-13"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":152,"author":{"gitId":"janelleenqi"},"content":"        try {","lastModifiedDate":"2023-11-13"},{"lineNumber":153,"author":{"gitId":"janelleenqi"},"content":"            printCurrentSemModules(currentSemModulesWeekly);","lastModifiedDate":"2023-11-13"},{"lineNumber":154,"author":{"gitId":"janelleenqi"},"content":"        } catch (TimetableUnavailableException e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":155,"author":{"gitId":"janelleenqi"},"content":"            println(e.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":156,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":157,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":158,"author":{"gitId":"janelleenqi"},"content":"        printTTModifyDetailedLessonGuide(\"Entered Timetable Modify Mode\");","lastModifiedDate":"2023-11-13"},{"lineNumber":159,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":160,"author":{"gitId":"janelleenqi"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-11-13"},{"lineNumber":161,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":162,"author":{"gitId":"janelleenqi"},"content":"        boolean inTimetableModifyMode \u003d true;","lastModifiedDate":"2023-11-13"},{"lineNumber":163,"author":{"gitId":"janelleenqi"},"content":"        while (inTimetableModifyMode) {","lastModifiedDate":"2023-11-13"},{"lineNumber":164,"author":{"gitId":"janelleenqi"},"content":"            try {","lastModifiedDate":"2023-11-13"},{"lineNumber":165,"author":{"gitId":"janelleenqi"},"content":"                String userInput \u003d ui.getUserCommand(\"Input timetable modify command here: \");","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"janelleenqi"},"content":"                TimetableUserCommand currentTimetableCommand \u003d new TimetableUserCommand(student,","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"janelleenqi"},"content":"                        currentSemModulesWeekly, userInput);","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":171,"author":{"gitId":"janelleenqi"},"content":"                String[] arguments \u003d currentTimetableCommand.getArguments();","lastModifiedDate":"2023-11-13"},{"lineNumber":172,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"janelleenqi"},"content":"                //if exit","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"janelleenqi"},"content":"                if (isExitModify(arguments)) {","lastModifiedDate":"2023-11-13"},{"lineNumber":175,"author":{"gitId":"janelleenqi"},"content":"                    inTimetableModifyMode \u003d false;","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"janelleenqi"},"content":"                    println(\"Exited Timetable Modify Mode\");","lastModifiedDate":"2023-11-13"},{"lineNumber":177,"author":{"gitId":"janelleenqi"},"content":"                    continue;","lastModifiedDate":"2023-11-13"},{"lineNumber":178,"author":{"gitId":"janelleenqi"},"content":"                }","lastModifiedDate":"2023-11-13"},{"lineNumber":179,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"janelleenqi"},"content":"                currentTimetableCommand.processTimetableCommand(currentSemModulesWeekly);","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"janelleenqi"},"content":"                try {","lastModifiedDate":"2023-11-13"},{"lineNumber":182,"author":{"gitId":"janelleenqi"},"content":"                    saveTimetable(student);","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"janelleenqi"},"content":"                } catch (IOException ignored){","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"janelleenqi"},"content":"                    // GitHub actions cannott save timetable on the directory","lastModifiedDate":"2023-11-13"},{"lineNumber":185,"author":{"gitId":"janelleenqi"},"content":"                }","lastModifiedDate":"2023-11-13"},{"lineNumber":186,"author":{"gitId":"janelleenqi"},"content":"                if (timetable.timetableViewIsAvailable()) {","lastModifiedDate":"2023-11-13"},{"lineNumber":187,"author":{"gitId":"janelleenqi"},"content":"                    printTimetable(currentSemModulesWeekly);","lastModifiedDate":"2023-11-13"},{"lineNumber":188,"author":{"gitId":"janelleenqi"},"content":"                } else {","lastModifiedDate":"2023-11-13"},{"lineNumber":189,"author":{"gitId":"janelleenqi"},"content":"                    printTTModifySimpleLessonGuide(\"Timetable view is unavailable as modules in your \" +","lastModifiedDate":"2023-11-13"},{"lineNumber":190,"author":{"gitId":"janelleenqi"},"content":"                            \"current semester have no lessons yet.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":191,"author":{"gitId":"janelleenqi"},"content":"                }","lastModifiedDate":"2023-11-13"},{"lineNumber":192,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"janelleenqi"},"content":"            } catch (InvalidTimetableUserCommandException e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"janelleenqi"},"content":"                println(e.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-13"},{"lineNumber":196,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":197,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":198,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":199,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":200,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":201,"author":{"gitId":"janelleenqi"},"content":"     * Displays the timetable for the current semester based on the provided module weekly data.","lastModifiedDate":"2023-11-13"},{"lineNumber":202,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":203,"author":{"gitId":"janelleenqi"},"content":"     * This method displays the timetable for the current semester using the ArrayList of ModuleWeekly objects to the","lastModifiedDate":"2023-11-13"},{"lineNumber":204,"author":{"gitId":"janelleenqi"},"content":"     * user.","lastModifiedDate":"2023-11-13"},{"lineNumber":205,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":206,"author":{"gitId":"janelleenqi"},"content":"     * @param currentSemesterModuleWeekly The list of ModuleWeekly objects with information about","lastModifiedDate":"2023-11-13"},{"lineNumber":207,"author":{"gitId":"janelleenqi"},"content":"     *                                     the timetable for the current semester","lastModifiedDate":"2023-11-13"},{"lineNumber":208,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":209,"author":{"gitId":"janelleenqi"},"content":"    public void showTimetable(ArrayList\u003cModuleWeekly\u003e currentSemesterModuleWeekly) {","lastModifiedDate":"2023-11-13"},{"lineNumber":210,"author":{"gitId":"janelleenqi"},"content":"        printTimetable(currentSemesterModuleWeekly);","lastModifiedDate":"2023-11-13"},{"lineNumber":211,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":212,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"SebasFok":26,"ryanlohyr":90,"janelleenqi":96}},{"path":"src/main/java/seedu/duke/models/logic/Api.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"rohitcube"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"rohitcube"},"content":"import java.net.URI;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"rohitcube"},"content":"import java.net.URL;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import java.net.HttpURLConnection;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"rohitcube"},"content":"import java.net.http.HttpClient;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"rohitcube"},"content":"import java.net.http.HttpRequest;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"rohitcube"},"content":"import java.net.http.HttpResponse;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.JSONArray;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.parser.JSONParser;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.parser.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.exceptions.InvalidModuleCodeException;","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.exceptions.InvalidModuleException;","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.utils.errors.HttpError.displaySocketError;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"rohitcube"},"content":"import seedu.duke.utils.Parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.errors.UserError;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.views.ModuleInfoView;","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"rohitcube"},"content":"public class Api {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"rohitcube"},"content":"     * Sends an HTTP GET request to the specified URL and returns the response body as a String.","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"rohitcube"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"rohitcube"},"content":"     * @param url The URL to which the HTTP GET request is sent.","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"rohitcube"},"content":"     * @return The response body as a String.","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"rohitcube"},"content":"     * @throws ParseException If there is an issue parsing the response.","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"rohitcube"},"content":"     * @throws IOException If an I/O error occurs during the HTTP request.","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"rohitcube"},"content":"     * @throws InterruptedException If the HTTP request is interrupted.","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"rohitcube"},"content":"     * @throws URISyntaxException If the URL is not a valid URI.","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"rohitcube"},"content":"    private static String sendHttpRequestAndGetResponseBody(String url) throws ParseException,","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"rohitcube"},"content":"            IOException, InterruptedException, URISyntaxException {","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"rohitcube"},"content":"        HttpClient client \u003d HttpClient.newHttpClient();","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"rohitcube"},"content":"        HttpRequest request \u003d HttpRequest.newBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"rohitcube"},"content":"                .uri(new URI(url))","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"rohitcube"},"content":"                .GET()","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"rohitcube"},"content":"                .build();","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"rohitcube"},"content":"        HttpResponse\u003cString\u003e response \u003d client.send(request, HttpResponse.BodyHandlers.ofString());","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"rohitcube"},"content":"        return response.body();","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"rohitcube"},"content":"     * Retrieves detailed module information from an external API based on the module code.","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode The module code to retrieve information for.","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"rohitcube"},"content":"     * @return A JSONObject containing module information.","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"    public static JSONObject getFullModuleInfo(String moduleCode) throws RuntimeException, IOException {","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"rohitcube"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"            // Regex pattern to match only letters and numbers","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"            String regexPattern \u003d \"^[a-zA-Z0-9]+$\";","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"            if (!moduleCode.matches(regexPattern)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"                throw new InvalidModuleException();","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":67,"author":{"gitId":"rohitcube"},"content":"            String url \u003d \"https://api.nusmods.com/v2/2023-2024/modules/\" + moduleCode + \".json\";","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"rohitcube"},"content":"            URL obj \u003d new URL(url);","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"rohitcube"},"content":"            HttpURLConnection connection \u003d (HttpURLConnection) obj.openConnection();","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"rohitcube"},"content":"            int responseCode \u003d connection.getResponseCode();","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"rohitcube"},"content":"            if (responseCode \u003d\u003d HttpURLConnection.HTTP_NOT_FOUND) {","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"rohitcube"},"content":"                throw new InvalidModuleCodeException();","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"rohitcube"},"content":"            String responseBody \u003d sendHttpRequestAndGetResponseBody(url);","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"rohitcube"},"content":"            JSONParser parser \u003d new JSONParser();","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"            return (JSONObject) parser.parse(responseBody);","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"rohitcube"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"SebasFok"},"content":"            //System.out.println(\"Invalid Module Name\");","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"rohitcube"},"content":"        } catch (IOException | InterruptedException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"            throw new IOException(e);","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"rohitcube"},"content":"        } catch (URISyntaxException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"rohitcube"},"content":"            //to be replaced with more robust error class in the future","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"rohitcube"},"content":"            System.out.println(\"Sorry, there was an error with\" +","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"rohitcube"},"content":"                    \" the provided URL: \" + e.getMessage());","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"rohitcube"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"rohitcube"},"content":"            //System.out.println(\"Invalid Module Name\");","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"        } catch (InvalidModuleException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":88,"author":{"gitId":"rohitcube"},"content":"            System.out.println(\"Invalid Module Code: \" + e.getMessage());","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"rohitcube"},"content":"        } catch (InvalidModuleCodeException e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"rohitcube"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"rohitcube"},"content":"        return null;","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"rohitcube"},"content":"     * Retrieves the name of a module based on its module code.","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode The module code to retrieve the name for.","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"rohitcube"},"content":"     * @return The name of the module.","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"    public static String getModuleName(String moduleCode) {","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"            JSONObject fullModuleInfo \u003d getFullModuleInfo(moduleCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"            assert fullModuleInfo !\u003d null;","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"            return (String) fullModuleInfo.get(\"title\");","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"rohitcube"},"content":"     * Retrieves the description of a module based on its module code.","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-04"},{"lineNumber":115,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode The module code to retrieve the description for.","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"rohitcube"},"content":"     * @return The description of the module.","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":118,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"rohitcube"},"content":"    public static String getDescription(String moduleCode) throws InvalidModuleException, InvalidModuleCodeException {","lastModifiedDate":"2023-11-06"},{"lineNumber":120,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-09"},{"lineNumber":121,"author":{"gitId":"rohitcube"},"content":"            JSONObject moduleInfo \u003d getFullModuleInfo(moduleCode);","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"rohitcube"},"content":"            if (moduleInfo \u003d\u003d null) {","lastModifiedDate":"2023-11-06"},{"lineNumber":123,"author":{"gitId":"rohitcube"},"content":"                throw new InvalidModuleCodeException();","lastModifiedDate":"2023-11-06"},{"lineNumber":124,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"rohitcube"},"content":"            return (String) moduleInfo.get(\"description\");","lastModifiedDate":"2023-11-06"},{"lineNumber":126,"author":{"gitId":"ryanlohyr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"ryanlohyr"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":130,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":132,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":133,"author":{"gitId":"ryanlohyr"},"content":"     * Wraps a long input string into multiple lines at a specified wrap index.","lastModifiedDate":"2023-11-07"},{"lineNumber":134,"author":{"gitId":"ryanlohyr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"ryanlohyr"},"content":"     * This method takes an input string and wraps it into multiple lines by inserting newline","lastModifiedDate":"2023-11-07"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"     * characters at or before the specified wrap index. It ensures that the words are not split,","lastModifiedDate":"2023-11-07"},{"lineNumber":137,"author":{"gitId":"ryanlohyr"},"content":"     * and the text remains readable.","lastModifiedDate":"2023-11-07"},{"lineNumber":138,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-07"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"     * @param input     The input string to be wrapped.","lastModifiedDate":"2023-11-07"},{"lineNumber":140,"author":{"gitId":"ryanlohyr"},"content":"     * @param wrapIndex The wrap index, indicating the maximum number of characters per line.","lastModifiedDate":"2023-11-07"},{"lineNumber":141,"author":{"gitId":"ryanlohyr"},"content":"     * @return A new string with newline characters added for wrapping.","lastModifiedDate":"2023-11-07"},{"lineNumber":142,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":143,"author":{"gitId":"rohitcube"},"content":"    public static String wrapText(String input, int wrapIndex) {","lastModifiedDate":"2023-11-06"},{"lineNumber":144,"author":{"gitId":"rohitcube"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":145,"author":{"gitId":"rohitcube"},"content":"            return \"\";","lastModifiedDate":"2023-11-06"},{"lineNumber":146,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":147,"author":{"gitId":"rohitcube"},"content":"        StringBuilder description \u003d new StringBuilder(input);","lastModifiedDate":"2023-11-06"},{"lineNumber":148,"author":{"gitId":"rohitcube"},"content":"        int currIndex \u003d 0;","lastModifiedDate":"2023-11-06"},{"lineNumber":149,"author":{"gitId":"rohitcube"},"content":"        int markerIndex \u003d 0;","lastModifiedDate":"2023-11-06"},{"lineNumber":150,"author":{"gitId":"rohitcube"},"content":"        while (currIndex \u003c description.length()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":151,"author":{"gitId":"rohitcube"},"content":"            if (markerIndex \u003e\u003d wrapIndex) { //index where string is wrapped","lastModifiedDate":"2023-11-06"},{"lineNumber":152,"author":{"gitId":"rohitcube"},"content":"                if (description.charAt(currIndex) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2023-11-06"},{"lineNumber":153,"author":{"gitId":"rohitcube"},"content":"                    description.insert(currIndex, \u0027\\n\u0027);","lastModifiedDate":"2023-11-06"},{"lineNumber":154,"author":{"gitId":"rohitcube"},"content":"                    markerIndex \u003d 0;","lastModifiedDate":"2023-11-06"},{"lineNumber":155,"author":{"gitId":"rohitcube"},"content":"                    continue;","lastModifiedDate":"2023-11-06"},{"lineNumber":156,"author":{"gitId":"rohitcube"},"content":"                }","lastModifiedDate":"2023-11-06"},{"lineNumber":157,"author":{"gitId":"rohitcube"},"content":"                currIndex--;","lastModifiedDate":"2023-11-06"},{"lineNumber":158,"author":{"gitId":"rohitcube"},"content":"                continue;","lastModifiedDate":"2023-11-06"},{"lineNumber":159,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":160,"author":{"gitId":"rohitcube"},"content":"            currIndex++;","lastModifiedDate":"2023-11-06"},{"lineNumber":161,"author":{"gitId":"rohitcube"},"content":"            markerIndex++;","lastModifiedDate":"2023-11-06"},{"lineNumber":162,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":163,"author":{"gitId":"rohitcube"},"content":"        return description.toString();","lastModifiedDate":"2023-11-06"},{"lineNumber":164,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":165,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":166,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"rohitcube"},"content":"     * Retrieves the workload information for a module based on its module code.","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"ryanlohyr"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-04"},{"lineNumber":169,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode The module code to retrieve workload information for.","lastModifiedDate":"2023-11-01"},{"lineNumber":170,"author":{"gitId":"rohitcube"},"content":"     * @return A JSONArray containing workload details.","lastModifiedDate":"2023-11-01"},{"lineNumber":171,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":172,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":173,"author":{"gitId":"rohitcube"},"content":"    public static JSONArray getWorkload(String moduleCode) throws InvalidModuleCodeException {","lastModifiedDate":"2023-11-06"},{"lineNumber":174,"author":{"gitId":"rohitcube"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":175,"author":{"gitId":"rohitcube"},"content":"            JSONObject moduleInfo \u003d getFullModuleInfo(moduleCode);","lastModifiedDate":"2023-10-30"},{"lineNumber":176,"author":{"gitId":"rohitcube"},"content":"            if (moduleInfo \u003d\u003d null) {","lastModifiedDate":"2023-11-06"},{"lineNumber":177,"author":{"gitId":"rohitcube"},"content":"                throw new InvalidModuleCodeException();","lastModifiedDate":"2023-11-06"},{"lineNumber":178,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":179,"author":{"gitId":"rohitcube"},"content":"            return (JSONArray) moduleInfo.get(\"workload\");","lastModifiedDate":"2023-10-30"},{"lineNumber":180,"author":{"gitId":"rohitcube"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"rohitcube"},"content":"            throw new InvalidModuleCodeException();","lastModifiedDate":"2023-11-06"},{"lineNumber":182,"author":{"gitId":"ryanlohyr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-09"},{"lineNumber":183,"author":{"gitId":"ryanlohyr"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-11-09"},{"lineNumber":184,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":186,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":187,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":188,"author":{"gitId":"ryanlohyr"},"content":"     * Retrieves the requirements the module fulfills","lastModifiedDate":"2023-11-06"},{"lineNumber":189,"author":{"gitId":"ryanlohyr"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-06"},{"lineNumber":190,"author":{"gitId":"ryanlohyr"},"content":"     * @param moduleCode The module code to retrieve workload information for.","lastModifiedDate":"2023-11-06"},{"lineNumber":191,"author":{"gitId":"ryanlohyr"},"content":"     * @return A JSONArray containing workload details.","lastModifiedDate":"2023-11-06"},{"lineNumber":192,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":193,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":194,"author":{"gitId":"ryanlohyr"},"content":"    public static ArrayList\u003cString\u003e getModuleFulfilledRequirements(String moduleCode) throws IOException {","lastModifiedDate":"2023-11-09"},{"lineNumber":195,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":196,"author":{"gitId":"ryanlohyr"},"content":"            JSONObject moduleInfo \u003d getFullModuleInfo(moduleCode);","lastModifiedDate":"2023-11-06"},{"lineNumber":197,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e fulfilledArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":198,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e response \u003d (ArrayList\u003cString\u003e) moduleInfo.get(\"fulfillRequirements\");","lastModifiedDate":"2023-11-06"},{"lineNumber":199,"author":{"gitId":"ryanlohyr"},"content":"            if (response !\u003d null) {","lastModifiedDate":"2023-11-06"},{"lineNumber":200,"author":{"gitId":"ryanlohyr"},"content":"                fulfilledArray \u003d response;","lastModifiedDate":"2023-11-06"},{"lineNumber":201,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":202,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":203,"author":{"gitId":"ryanlohyr"},"content":"            return fulfilledArray;","lastModifiedDate":"2023-11-06"},{"lineNumber":204,"author":{"gitId":"ryanlohyr"},"content":"        } catch (ClassCastException | NullPointerException e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":205,"author":{"gitId":"ryanlohyr"},"content":"            return new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":206,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":207,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":208,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":209,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"SebasFok"},"content":"     * Checks if a module with the given module code exists in the NUSMods database.","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"SebasFok"},"content":"     * @param moduleCode The module code to check for existence.","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"SebasFok"},"content":"     * @return `true` if the module exists, `false` if the module does not exist.","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"ryanlohyr"},"content":"    public static boolean isValidModule(String moduleCode) {","lastModifiedDate":"2023-11-13"},{"lineNumber":216,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-09"},{"lineNumber":217,"author":{"gitId":"SebasFok"},"content":"            JSONObject moduleInfo \u003d getFullModuleInfo(moduleCode);","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"SebasFok"},"content":"            return (!(moduleInfo \u003d\u003d null));","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"ryanlohyr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-09"},{"lineNumber":220,"author":{"gitId":"ryanlohyr"},"content":"            displaySocketError();","lastModifiedDate":"2023-11-09"},{"lineNumber":221,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":222,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":223,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":226,"author":{"gitId":"rohitcube"},"content":"     * Retrieves a list of modules from an external API and returns it as a JSONArray.","lastModifiedDate":"2023-11-01"},{"lineNumber":227,"author":{"gitId":"ryanlohyr"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-04"},{"lineNumber":228,"author":{"gitId":"rohitcube"},"content":"     * @return A JSONArray containing module information.","lastModifiedDate":"2023-11-01"},{"lineNumber":229,"author":{"gitId":"rohitcube"},"content":"     * @throws RuntimeException If there is an issue with the HTTP request or JSON parsing.","lastModifiedDate":"2023-11-01"},{"lineNumber":230,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":231,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":232,"author":{"gitId":"rohitcube"},"content":"    public static JSONArray listAllModules() {","lastModifiedDate":"2023-10-28"},{"lineNumber":233,"author":{"gitId":"rohitcube"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":234,"author":{"gitId":"rohitcube"},"content":"            String url \u003d \"https://api.nusmods.com/v2/2023-2024/moduleList.json\";","lastModifiedDate":"2023-10-28"},{"lineNumber":235,"author":{"gitId":"rohitcube"},"content":"            String responseBody \u003d sendHttpRequestAndGetResponseBody(url);","lastModifiedDate":"2023-11-01"},{"lineNumber":236,"author":{"gitId":"rohitcube"},"content":"            JSONParser parser \u003d new JSONParser();","lastModifiedDate":"2023-10-28"},{"lineNumber":237,"author":{"gitId":"rohitcube"},"content":"            return (JSONArray) parser.parse(responseBody);","lastModifiedDate":"2023-11-01"},{"lineNumber":238,"author":{"gitId":"rohitcube"},"content":"        } catch (URISyntaxException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":239,"author":{"gitId":"rohitcube"},"content":"            System.out.println(\"Sorry, there was an error with\" +","lastModifiedDate":"2023-10-28"},{"lineNumber":240,"author":{"gitId":"rohitcube"},"content":"                    \" the provided URL: \" + e.getMessage());","lastModifiedDate":"2023-10-28"},{"lineNumber":241,"author":{"gitId":"rohitcube"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-28"},{"lineNumber":242,"author":{"gitId":"rohitcube"},"content":"        } catch (IOException | InterruptedException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":243,"author":{"gitId":"ryanlohyr"},"content":"            displaySocketError();","lastModifiedDate":"2023-11-09"},{"lineNumber":244,"author":{"gitId":"rohitcube"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":245,"author":{"gitId":"rohitcube"},"content":"            //to be replaced with more robust error class in the future","lastModifiedDate":"2023-10-28"},{"lineNumber":246,"author":{"gitId":"rohitcube"},"content":"            System.out.println(\"Sorry, the JSON object could not be parsed\");","lastModifiedDate":"2023-10-28"},{"lineNumber":247,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":248,"author":{"gitId":"rohitcube"},"content":"        return null;","lastModifiedDate":"2023-10-28"},{"lineNumber":249,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":250,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":251,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":252,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":253,"author":{"gitId":"rohitcube"},"content":"     * Executes commands based on user input for module information retrieval.","lastModifiedDate":"2023-11-01"},{"lineNumber":254,"author":{"gitId":"rohitcube"},"content":"     * Supports commands: \"description\", \"workload\", \"all\".","lastModifiedDate":"2023-11-01"},{"lineNumber":255,"author":{"gitId":"ryanlohyr"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-04"},{"lineNumber":256,"author":{"gitId":"rohitcube"},"content":"     * @param command   The command provided by the user.","lastModifiedDate":"2023-11-01"},{"lineNumber":257,"author":{"gitId":"rohitcube"},"content":"     * @param userInput The user input string containing the command and module code (if applicable).","lastModifiedDate":"2023-11-01"},{"lineNumber":258,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":259,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":260,"author":{"gitId":"rohitcube"},"content":"    public static void infoCommands(String command, String userInput) {","lastModifiedDate":"2023-11-01"},{"lineNumber":261,"author":{"gitId":"rohitcube"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":262,"author":{"gitId":"rohitcube"},"content":"            if (command.equals(\"description\")) {","lastModifiedDate":"2023-10-28"},{"lineNumber":263,"author":{"gitId":"rohitcube"},"content":"                String moduleCode \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":264,"author":{"gitId":"rohitcube"},"content":"                        userInput.substring(userInput.indexOf(\"description\") + 11).trim().toUpperCase();","lastModifiedDate":"2023-11-01"},{"lineNumber":265,"author":{"gitId":"rohitcube"},"content":"                if (!Api.getDescription(moduleCode).isEmpty()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":266,"author":{"gitId":"rohitcube"},"content":"                    String description \u003d Api.getDescription(moduleCode);","lastModifiedDate":"2023-10-30"},{"lineNumber":267,"author":{"gitId":"rohitcube"},"content":"                    System.out.println(Api.wrapText(description, 100));","lastModifiedDate":"2023-11-06"},{"lineNumber":268,"author":{"gitId":"rohitcube"},"content":"                }","lastModifiedDate":"2023-10-28"},{"lineNumber":269,"author":{"gitId":"rohitcube"},"content":"            } else if (command.equals(\"workload\")) {","lastModifiedDate":"2023-10-28"},{"lineNumber":270,"author":{"gitId":"rohitcube"},"content":"                String moduleCode \u003d userInput.substring(userInput.indexOf(\"workload\") + 8).trim().toUpperCase();","lastModifiedDate":"2023-11-01"},{"lineNumber":271,"author":{"gitId":"rohitcube"},"content":"                if (!Api.getWorkload(moduleCode).isEmpty()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":272,"author":{"gitId":"rohitcube"},"content":"                    JSONArray workload \u003d Api.getWorkload(moduleCode);","lastModifiedDate":"2023-10-30"},{"lineNumber":273,"author":{"gitId":"rohitcube"},"content":"                    System.out.println(workload);","lastModifiedDate":"2023-10-30"},{"lineNumber":274,"author":{"gitId":"rohitcube"},"content":"                }","lastModifiedDate":"2023-10-28"},{"lineNumber":275,"author":{"gitId":"rohitcube"},"content":"            } else {","lastModifiedDate":"2023-10-28"},{"lineNumber":276,"author":{"gitId":"ryanlohyr"},"content":"                UserError.invalidCommandforInfoCommand();","lastModifiedDate":"2023-11-03"},{"lineNumber":277,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":278,"author":{"gitId":"rohitcube"},"content":"        } catch (InvalidModuleException e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":279,"author":{"gitId":"rohitcube"},"content":"            //  System.out.println(\"Invalid entry\" + e.getMessage());","lastModifiedDate":"2023-11-06"},{"lineNumber":280,"author":{"gitId":"rohitcube"},"content":"        } catch (InvalidModuleCodeException e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":281,"author":{"gitId":"rohitcube"},"content":"            //  System.out.println(e.getMessage());","lastModifiedDate":"2023-11-06"},{"lineNumber":282,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":283,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":284,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":285,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":286,"author":{"gitId":"rohitcube"},"content":"     * Searches for modules containing a specified keyword in their title within a given module list.","lastModifiedDate":"2023-11-06"},{"lineNumber":287,"author":{"gitId":"rohitcube"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-06"},{"lineNumber":288,"author":{"gitId":"rohitcube"},"content":"     * @param keyword    The keyword to search for.","lastModifiedDate":"2023-11-06"},{"lineNumber":289,"author":{"gitId":"rohitcube"},"content":"     * @param moduleList The list of modules to search within.","lastModifiedDate":"2023-11-06"},{"lineNumber":290,"author":{"gitId":"rohitcube"},"content":"     * @return A JSONArray containing modules matching the keyword.","lastModifiedDate":"2023-11-06"},{"lineNumber":291,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":292,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":293,"author":{"gitId":"rohitcube"},"content":"    public static JSONArray search(String keyword, JSONArray moduleList) {","lastModifiedDate":"2023-11-06"},{"lineNumber":294,"author":{"gitId":"rohitcube"},"content":"        JSONArray modulesContainingKeyword \u003d new JSONArray();","lastModifiedDate":"2023-11-06"},{"lineNumber":295,"author":{"gitId":"rohitcube"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":296,"author":{"gitId":"rohitcube"},"content":"            return new JSONArray();","lastModifiedDate":"2023-11-06"},{"lineNumber":297,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":298,"author":{"gitId":"rohitcube"},"content":"        String[] wordsInKeyword \u003d keyword.split(\" \");","lastModifiedDate":"2023-11-08"},{"lineNumber":299,"author":{"gitId":"rohitcube"},"content":"        for (int i \u003d 0; i \u003c wordsInKeyword.length; i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":300,"author":{"gitId":"rohitcube"},"content":"            wordsInKeyword[i] \u003d capitalizeFirstLetter(wordsInKeyword[i]);","lastModifiedDate":"2023-11-08"},{"lineNumber":301,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":302,"author":{"gitId":"rohitcube"},"content":"        String keywordToSearch \u003d String.join(\" \", wordsInKeyword);","lastModifiedDate":"2023-11-08"},{"lineNumber":303,"author":{"gitId":"rohitcube"},"content":"        for (Object moduleObject : moduleList) {","lastModifiedDate":"2023-11-06"},{"lineNumber":304,"author":{"gitId":"rohitcube"},"content":"            JSONObject module \u003d (JSONObject) moduleObject; // Cast to JSONObject","lastModifiedDate":"2023-11-06"},{"lineNumber":305,"author":{"gitId":"rohitcube"},"content":"            String title \u003d (String) module.get(\"title\");","lastModifiedDate":"2023-11-06"},{"lineNumber":306,"author":{"gitId":"rohitcube"},"content":"            if (title.contains(keywordToSearch)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":307,"author":{"gitId":"rohitcube"},"content":"                modulesContainingKeyword.add(module);","lastModifiedDate":"2023-11-06"},{"lineNumber":308,"author":{"gitId":"rohitcube"},"content":"                //not sure how to resolve this yellow line","lastModifiedDate":"2023-11-06"},{"lineNumber":309,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":310,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":311,"author":{"gitId":"rohitcube"},"content":"        return modulesContainingKeyword;","lastModifiedDate":"2023-11-06"},{"lineNumber":312,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":313,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":314,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":315,"author":{"gitId":"rohitcube"},"content":"     * Capitalizes the first letter of a given string.","lastModifiedDate":"2023-11-08"},{"lineNumber":316,"author":{"gitId":"rohitcube"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-08"},{"lineNumber":317,"author":{"gitId":"rohitcube"},"content":"     * @param input The input string.","lastModifiedDate":"2023-11-08"},{"lineNumber":318,"author":{"gitId":"rohitcube"},"content":"     * @return A new string with the first letter capitalized, or the original string if it is null or empty.","lastModifiedDate":"2023-11-08"},{"lineNumber":319,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":320,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":321,"author":{"gitId":"rohitcube"},"content":"    public static String capitalizeFirstLetter(String input) {","lastModifiedDate":"2023-11-08"},{"lineNumber":322,"author":{"gitId":"rohitcube"},"content":"        if (input \u003d\u003d null || input.isEmpty()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":323,"author":{"gitId":"rohitcube"},"content":"            return input;","lastModifiedDate":"2023-11-08"},{"lineNumber":324,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":325,"author":{"gitId":"rohitcube"},"content":"        StringBuilder result \u003d new StringBuilder(input.length());","lastModifiedDate":"2023-11-08"},{"lineNumber":326,"author":{"gitId":"rohitcube"},"content":"        result.append(Character.toUpperCase(input.charAt(0)));","lastModifiedDate":"2023-11-08"},{"lineNumber":327,"author":{"gitId":"rohitcube"},"content":"        result.append(input.substring(1));","lastModifiedDate":"2023-11-08"},{"lineNumber":328,"author":{"gitId":"rohitcube"},"content":"        return result.toString();","lastModifiedDate":"2023-11-08"},{"lineNumber":329,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":330,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":331,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":332,"author":{"gitId":"ryanlohyr"},"content":"     * Performs a module search and displays the results.","lastModifiedDate":"2023-11-07"},{"lineNumber":333,"author":{"gitId":"ryanlohyr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":334,"author":{"gitId":"ryanlohyr"},"content":"     * This method takes a user input string, extracts keywords from it, performs a search using","lastModifiedDate":"2023-11-07"},{"lineNumber":335,"author":{"gitId":"ryanlohyr"},"content":"     * the API, and displays the results in a structured format.","lastModifiedDate":"2023-11-07"},{"lineNumber":336,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-07"},{"lineNumber":337,"author":{"gitId":"ryanlohyr"},"content":"     * @param userInput The user input string for searching modules.","lastModifiedDate":"2023-11-07"},{"lineNumber":338,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":339,"author":{"gitId":"rohitcube"},"content":"    public static void searchCommand(String userInput) {","lastModifiedDate":"2023-11-01"},{"lineNumber":340,"author":{"gitId":"rohitcube"},"content":"        if (!Parser.isValidKeywordInput(userInput)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":341,"author":{"gitId":"ryanlohyr"},"content":"            UserError.emptyKeywordforSearchCommand();","lastModifiedDate":"2023-11-03"},{"lineNumber":342,"author":{"gitId":"rohitcube"},"content":"            return;","lastModifiedDate":"2023-11-01"},{"lineNumber":343,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":344,"author":{"gitId":"rohitcube"},"content":"        String keywords \u003d userInput.substring(userInput.indexOf(\"search\") + 6);","lastModifiedDate":"2023-11-01"},{"lineNumber":345,"author":{"gitId":"rohitcube"},"content":"        JSONArray modulesToPrint \u003d Api.search(keywords, Api.listAllModules());","lastModifiedDate":"2023-11-01"},{"lineNumber":346,"author":{"gitId":"rohitcube"},"content":"        if (modulesToPrint.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":347,"author":{"gitId":"ryanlohyr"},"content":"            UserError.emptyArrayforSearchCommand();","lastModifiedDate":"2023-11-03"},{"lineNumber":348,"author":{"gitId":"rohitcube"},"content":"            return;","lastModifiedDate":"2023-11-01"},{"lineNumber":349,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":350,"author":{"gitId":"ryanlohyr"},"content":"        ModuleInfoView.searchHeader();","lastModifiedDate":"2023-11-04"},{"lineNumber":351,"author":{"gitId":"ryanlohyr"},"content":"        ModuleInfoView.printJsonArray(modulesToPrint);","lastModifiedDate":"2023-11-04"},{"lineNumber":352,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":353,"author":{"gitId":"rohitcube"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"SebasFok":11,"ryanlohyr":101,"rohitcube":241}},{"path":"src/main/java/seedu/duke/models/logic/Prerequisite.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.json.simple.JSONArray;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.ModuleList;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.exceptions.InvalidPrereqException;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"import java.util.List;","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Objects;","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.storage.StorageManager.getRequirements;","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"public class Prerequisite {","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"     * Recursively checks if each branch of the prereq tree is satisfied by the student.","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"     * @param modulePrereqArray The array of prerequisite modules or conditions to be checked.","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"     * @param currRequisite     The type of prerequisite condition (\"or\" or \"and\").","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"SebasFok"},"content":"     * @param completedModules  The list of completed modules by the student.","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"     * @return `true` if the student satisfies all prerequisites, `false` otherwise.","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"SebasFok"},"content":"    private static boolean isPrereqSatisfied(","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"            ArrayList\u003cObjects\u003e modulePrereqArray,","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"            String currRequisite,","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"            ModuleList completedModules) {","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"SebasFok"},"content":"            if (currRequisite.equals(\"or\")) {","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"SebasFok"},"content":"                return isOrBranchSatisfied(modulePrereqArray, completedModules);","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"SebasFok"},"content":"            } else {","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"                return isAndBranchSatisfied(modulePrereqArray, completedModules);","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"        } catch (ClassCastException e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"Error checking prereq for this module\");","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"            return false;","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"SebasFok"},"content":"     * Checks if the AND branch of a module\u0027s prerequisites is satisfied based on completed modules.","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"SebasFok"},"content":"     * Recursively checks the branch if there are nested prerequisite structures in the AND branch","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"SebasFok"},"content":"     * @param modulePrereqArray The array representing the AND branch of prerequisites.","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"SebasFok"},"content":"     * @param completedModules  The list of modules that have been completed.","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"SebasFok"},"content":"     * @return true if the AND branch is satisfied, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"SebasFok"},"content":"     * @throws RuntimeException If an unexpected exception occurs during prerequisite checking.","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"SebasFok"},"content":"    private static boolean isAndBranchSatisfied(ArrayList\u003cObjects\u003e modulePrereqArray, ModuleList completedModules) {","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"SebasFok"},"content":"        for (Object module : modulePrereqArray) {","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"SebasFok"},"content":"            if (module instanceof String) {","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"SebasFok"},"content":"                String formattedModule \u003d ((String) module).replace(\":D\", \"\");","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"SebasFok"},"content":"                formattedModule \u003d formattedModule.replace(\"%\", \"\");","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"SebasFok"},"content":"                try {","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"SebasFok"},"content":"                    if (!completedModules.existsByCode(formattedModule)) {","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"SebasFok"},"content":"                        return false;","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"SebasFok"},"content":"                    }","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"SebasFok"},"content":"                } catch (InvalidObjectException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"SebasFok"},"content":"                    throw new RuntimeException(e);","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"SebasFok"},"content":"                }","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"SebasFok"},"content":"            } else {","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"SebasFok"},"content":"                JSONObject prereqBranch \u003d (JSONObject) module;","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"SebasFok"},"content":"                //for cs, some modules return pre req in this form {\"nOf\":[2,[\"MA1511:D\",\"MA1512:D\"]]}","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"SebasFok"},"content":"                //have to convert first","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"SebasFok"},"content":"                if (prereqBranch.containsKey(\"nOf\")) {","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"SebasFok"},"content":"                    String key \u003d \"and\";","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"SebasFok"},"content":"                    ArrayList\u003cArrayList\u003cObjects\u003e\u003e initial \u003d","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"SebasFok"},"content":"                            (ArrayList\u003cArrayList\u003cObjects\u003e\u003e) prereqBranch.get(\"nOf\");","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"SebasFok"},"content":"                    ArrayList\u003cObjects\u003e formattedInitial \u003d initial.get(1);","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"SebasFok"},"content":"                    JSONArray prereqBranchArray \u003d (JSONArray) formattedInitial;","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"SebasFok"},"content":"                    if (!isPrereqSatisfied(prereqBranchArray, key, completedModules)){","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"SebasFok"},"content":"                        return false;","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"SebasFok"},"content":"                    }","lastModifiedDate":"2023-11-11"},{"lineNumber":82,"author":{"gitId":"SebasFok"},"content":"                } else {","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"SebasFok"},"content":"                    String key \u003d (String) prereqBranch.keySet().toArray()[0];","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"SebasFok"},"content":"                    JSONArray prereqBranchArray \u003d (JSONArray) prereqBranch.get(key);","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"SebasFok"},"content":"                    if (!isPrereqSatisfied(prereqBranchArray, key, completedModules)) {","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"SebasFok"},"content":"                        return false;","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"SebasFok"},"content":"                    }","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"SebasFok"},"content":"                }","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"SebasFok"},"content":"        return true;","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":95,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":96,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"SebasFok"},"content":"     * Checks if the OR branch of a module\u0027s prerequisites is satisfied based on completed modules.","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"SebasFok"},"content":"     * Recursively checks the branch if there are nested prerequisite structures in the OR branch","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"SebasFok"},"content":"     * @param modulePrereqArray The array representing the OR branch of prerequisites.","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"SebasFok"},"content":"     * @param completedModules  The list of modules that have been completed.","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"SebasFok"},"content":"     * @return true if the OR branch is satisfied, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"SebasFok"},"content":"     * @throws RuntimeException If an unexpected exception occurs during prerequisite checking.","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"SebasFok"},"content":"    private static boolean isOrBranchSatisfied(ArrayList\u003cObjects\u003e modulePrereqArray, ModuleList completedModules) {","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"SebasFok"},"content":"        for (Object module : modulePrereqArray) {","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"SebasFok"},"content":"            if (module instanceof String) {","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"SebasFok"},"content":"                String formattedModule \u003d ((String) module).replace(\":D\", \"\");","lastModifiedDate":"2023-11-10"},{"lineNumber":109,"author":{"gitId":"SebasFok"},"content":"                formattedModule \u003d formattedModule.replace(\"%\", \"\");","lastModifiedDate":"2023-11-10"},{"lineNumber":110,"author":{"gitId":"SebasFok"},"content":"                try {","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"SebasFok"},"content":"                    if (completedModules.existsByCode(formattedModule)) {","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"SebasFok"},"content":"                        return true;","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"SebasFok"},"content":"                    }","lastModifiedDate":"2023-11-10"},{"lineNumber":114,"author":{"gitId":"SebasFok"},"content":"                } catch (InvalidObjectException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":115,"author":{"gitId":"SebasFok"},"content":"                    throw new RuntimeException(e);","lastModifiedDate":"2023-11-10"},{"lineNumber":116,"author":{"gitId":"SebasFok"},"content":"                }","lastModifiedDate":"2023-11-10"},{"lineNumber":117,"author":{"gitId":"SebasFok"},"content":"            } else {","lastModifiedDate":"2023-11-10"},{"lineNumber":118,"author":{"gitId":"SebasFok"},"content":"                JSONObject prereqBranch \u003d (JSONObject) module;","lastModifiedDate":"2023-11-10"},{"lineNumber":119,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"SebasFok"},"content":"                //for cs, some modules return pre req in this form {\"nOf\":[2,[\"MA1511:D\",\"MA1512:D\"]]}","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"SebasFok"},"content":"                //have to convert first","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"SebasFok"},"content":"                if (prereqBranch.containsKey(\"nOf\")) {","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"SebasFok"},"content":"                    String key \u003d \"and\";","lastModifiedDate":"2023-11-13"},{"lineNumber":124,"author":{"gitId":"SebasFok"},"content":"                    ArrayList\u003cArrayList\u003cObjects\u003e\u003e initial \u003d","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"SebasFok"},"content":"                            (ArrayList\u003cArrayList\u003cObjects\u003e\u003e) prereqBranch.get(\"nOf\");","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"SebasFok"},"content":"                    ArrayList\u003cObjects\u003e formattedInitial \u003d initial.get(1);","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"SebasFok"},"content":"                    JSONArray prereqBranchArray \u003d (JSONArray) formattedInitial;","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"SebasFok"},"content":"                    if (isPrereqSatisfied(prereqBranchArray, key, completedModules)){","lastModifiedDate":"2023-11-13"},{"lineNumber":129,"author":{"gitId":"SebasFok"},"content":"                        return true;","lastModifiedDate":"2023-11-13"},{"lineNumber":130,"author":{"gitId":"SebasFok"},"content":"                    }","lastModifiedDate":"2023-11-13"},{"lineNumber":131,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":132,"author":{"gitId":"SebasFok"},"content":"                } else {","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"SebasFok"},"content":"                    String key \u003d (String) prereqBranch.keySet().toArray()[0];","lastModifiedDate":"2023-11-10"},{"lineNumber":134,"author":{"gitId":"SebasFok"},"content":"                    JSONArray prereqBranchArray \u003d (JSONArray) prereqBranch.get(key);","lastModifiedDate":"2023-11-10"},{"lineNumber":135,"author":{"gitId":"SebasFok"},"content":"                    return isPrereqSatisfied(prereqBranchArray, key, completedModules);","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"SebasFok"},"content":"                }","lastModifiedDate":"2023-11-10"},{"lineNumber":137,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":138,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":139,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":140,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":141,"author":{"gitId":"SebasFok"},"content":"        return false;","lastModifiedDate":"2023-11-10"},{"lineNumber":142,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":143,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":144,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":145,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":146,"author":{"gitId":"ryanlohyr"},"content":"     * Recursively flattens and processes a list of module prerequisites.","lastModifiedDate":"2023-11-10"},{"lineNumber":147,"author":{"gitId":"ryanlohyr"},"content":"     * More info on the data structure being processed can be found in","lastModifiedDate":"2023-11-13"},{"lineNumber":148,"author":{"gitId":"ryanlohyr"},"content":"     *  the prereqTree key in an example \u003ca href\u003d\"https://api.nusmods.com/v2/2023-2024/modules/EE2211.json\"\u003e...\u003c/a\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":149,"author":{"gitId":"ryanlohyr"},"content":"     * @param major              The major or program for which prerequisites are being flattened.","lastModifiedDate":"2023-11-10"},{"lineNumber":150,"author":{"gitId":"ryanlohyr"},"content":"     * @param prerequisites      An ArrayList to store the flattened prerequisites.","lastModifiedDate":"2023-11-10"},{"lineNumber":151,"author":{"gitId":"ryanlohyr"},"content":"     * @param modulePrereqArray  An ArrayList containing the module prerequisites to be processed.","lastModifiedDate":"2023-11-10"},{"lineNumber":152,"author":{"gitId":"ryanlohyr"},"content":"     * @param courseRequirements An ArrayList containing course requirements.","lastModifiedDate":"2023-11-10"},{"lineNumber":153,"author":{"gitId":"ryanlohyr"},"content":"     * @param currRequisite      The type of the current prerequisite (e.g., \"and\" or \"or\").","lastModifiedDate":"2023-11-10"},{"lineNumber":154,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":155,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":156,"author":{"gitId":"ryanlohyr"},"content":"    private static void flattenPrereq(","lastModifiedDate":"2023-11-10"},{"lineNumber":157,"author":{"gitId":"ryanlohyr"},"content":"            String major,","lastModifiedDate":"2023-11-10"},{"lineNumber":158,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e prerequisites,","lastModifiedDate":"2023-11-10"},{"lineNumber":159,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cObjects\u003e modulePrereqArray,","lastModifiedDate":"2023-11-10"},{"lineNumber":160,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e courseRequirements,","lastModifiedDate":"2023-11-10"},{"lineNumber":161,"author":{"gitId":"ryanlohyr"},"content":"            String currRequisite) throws ClassCastException {","lastModifiedDate":"2023-11-10"},{"lineNumber":162,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":163,"author":{"gitId":"ryanlohyr"},"content":"            int lengthOfModulePreReqArray \u003d modulePrereqArray.size();","lastModifiedDate":"2023-11-10"},{"lineNumber":164,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":165,"author":{"gitId":"ryanlohyr"},"content":"            // we keep a counter as if no preclusion is a module requirement for the major","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"ryanlohyr"},"content":"            // we will take the last module in the list of preclusions","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"ryanlohyr"},"content":"            int counter \u003d 0;","lastModifiedDate":"2023-11-10"},{"lineNumber":168,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"ryanlohyr"},"content":"            for (Object module : modulePrereqArray) {","lastModifiedDate":"2023-11-10"},{"lineNumber":170,"author":{"gitId":"ryanlohyr"},"content":"                if (module instanceof String) {","lastModifiedDate":"2023-11-10"},{"lineNumber":171,"author":{"gitId":"ryanlohyr"},"content":"                    String formattedModule \u003d ((String) module).split(\":\")[0];","lastModifiedDate":"2023-11-10"},{"lineNumber":172,"author":{"gitId":"ryanlohyr"},"content":"                    formattedModule \u003d formattedModule.replace(\"%\", \"\");","lastModifiedDate":"2023-11-10"},{"lineNumber":173,"author":{"gitId":"ryanlohyr"},"content":"                    if (courseRequirements.contains(formattedModule) || currRequisite.equals(\"and\")) {","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"ryanlohyr"},"content":"                        prerequisites.add(formattedModule);","lastModifiedDate":"2023-11-10"},{"lineNumber":175,"author":{"gitId":"ryanlohyr"},"content":"                        if (currRequisite.equals(\"or\")) {","lastModifiedDate":"2023-11-10"},{"lineNumber":176,"author":{"gitId":"ryanlohyr"},"content":"                            return;","lastModifiedDate":"2023-11-10"},{"lineNumber":177,"author":{"gitId":"ryanlohyr"},"content":"                        }","lastModifiedDate":"2023-11-10"},{"lineNumber":178,"author":{"gitId":"ryanlohyr"},"content":"                    }","lastModifiedDate":"2023-11-10"},{"lineNumber":179,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"ryanlohyr"},"content":"                    //if this is the last item and the module also part of the courseRequirements, we add it anw","lastModifiedDate":"2023-11-10"},{"lineNumber":181,"author":{"gitId":"ryanlohyr"},"content":"                    if (currRequisite.equals(\"or\") \u0026\u0026 counter \u003d\u003d (lengthOfModulePreReqArray - 1)","lastModifiedDate":"2023-11-10"},{"lineNumber":182,"author":{"gitId":"ryanlohyr"},"content":"                            \u0026\u0026 !courseRequirements.contains((formattedModule))) {","lastModifiedDate":"2023-11-10"},{"lineNumber":183,"author":{"gitId":"ryanlohyr"},"content":"                        prerequisites.add(formattedModule);","lastModifiedDate":"2023-11-10"},{"lineNumber":184,"author":{"gitId":"ryanlohyr"},"content":"                        return;","lastModifiedDate":"2023-11-10"},{"lineNumber":185,"author":{"gitId":"ryanlohyr"},"content":"                    }","lastModifiedDate":"2023-11-10"},{"lineNumber":186,"author":{"gitId":"ryanlohyr"},"content":"                } else {","lastModifiedDate":"2023-11-10"},{"lineNumber":187,"author":{"gitId":"ryanlohyr"},"content":"                    //item is an object","lastModifiedDate":"2023-11-10"},{"lineNumber":188,"author":{"gitId":"ryanlohyr"},"content":"                    //here, we determine if its \u0027or\u0027 or \u0027and\u0027","lastModifiedDate":"2023-11-10"},{"lineNumber":189,"author":{"gitId":"ryanlohyr"},"content":"                    JSONObject moduleJSON \u003d (JSONObject) module;","lastModifiedDate":"2023-11-10"},{"lineNumber":190,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":191,"author":{"gitId":"ryanlohyr"},"content":"                    if (moduleJSON.containsKey(\"nOf\")) {","lastModifiedDate":"2023-11-10"},{"lineNumber":192,"author":{"gitId":"ryanlohyr"},"content":"                        throw new ClassCastException();","lastModifiedDate":"2023-11-14"},{"lineNumber":193,"author":{"gitId":"ryanlohyr"},"content":"                    } else {","lastModifiedDate":"2023-11-10"},{"lineNumber":194,"author":{"gitId":"ryanlohyr"},"content":"                        String key \u003d (String) moduleJSON.keySet().toArray()[0];","lastModifiedDate":"2023-11-10"},{"lineNumber":195,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":196,"author":{"gitId":"ryanlohyr"},"content":"                        ArrayList\u003cObjects\u003e initial \u003d (ArrayList\u003cObjects\u003e) moduleJSON.get(key);","lastModifiedDate":"2023-11-10"},{"lineNumber":197,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":198,"author":{"gitId":"ryanlohyr"},"content":"                        flattenPrereq(major, prerequisites, initial, courseRequirements, key);","lastModifiedDate":"2023-11-10"},{"lineNumber":199,"author":{"gitId":"ryanlohyr"},"content":"                    }","lastModifiedDate":"2023-11-10"},{"lineNumber":200,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":201,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-11-10"},{"lineNumber":202,"author":{"gitId":"ryanlohyr"},"content":"                counter +\u003d 1;","lastModifiedDate":"2023-11-10"},{"lineNumber":203,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":204,"author":{"gitId":"ryanlohyr"},"content":"        } catch (ClassCastException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":205,"author":{"gitId":"ryanlohyr"},"content":"            throw new ClassCastException();","lastModifiedDate":"2023-11-10"},{"lineNumber":206,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":207,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":208,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":209,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":210,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":211,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":212,"author":{"gitId":"ryanlohyr"},"content":"     * Retrieves the prerequisite array for a module specified by its code and also taking into account the degree","lastModifiedDate":"2023-11-10"},{"lineNumber":213,"author":{"gitId":"ryanlohyr"},"content":"     * requirements of the course.","lastModifiedDate":"2023-11-10"},{"lineNumber":214,"author":{"gitId":"ryanlohyr"},"content":"     * @param moduleCode The code of the module for which prerequisites are to be retrieved.","lastModifiedDate":"2023-11-10"},{"lineNumber":215,"author":{"gitId":"ryanlohyr"},"content":"     * @return A JSONObject representing the prerequisite tree for the module or NULL if no prerequisites are specified.","lastModifiedDate":"2023-11-10"},{"lineNumber":216,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":217,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":218,"author":{"gitId":"ryanlohyr"},"content":"    public static ArrayList\u003cString\u003e getModulePrereqBasedOnCourse(String moduleCode, String major)","lastModifiedDate":"2023-11-10"},{"lineNumber":219,"author":{"gitId":"ryanlohyr"},"content":"            throws InvalidPrereqException, IOException {","lastModifiedDate":"2023-11-10"},{"lineNumber":220,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":221,"author":{"gitId":"ryanlohyr"},"content":"        //Modules that has prerequisites incorrectly identified by NUSMods","lastModifiedDate":"2023-11-10"},{"lineNumber":222,"author":{"gitId":"ryanlohyr"},"content":"        if (isModuleException(moduleCode)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":223,"author":{"gitId":"ryanlohyr"},"content":"            return getExemptedPrerequisite(moduleCode);","lastModifiedDate":"2023-11-10"},{"lineNumber":224,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":225,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":226,"author":{"gitId":"ryanlohyr"},"content":"        JSONObject modulePrereqTree \u003d getModulePrereqTree(moduleCode);","lastModifiedDate":"2023-11-10"},{"lineNumber":227,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":228,"author":{"gitId":"ryanlohyr"},"content":"        if (modulePrereqTree \u003d\u003d null) {","lastModifiedDate":"2023-11-10"},{"lineNumber":229,"author":{"gitId":"ryanlohyr"},"content":"            return null;","lastModifiedDate":"2023-11-10"},{"lineNumber":230,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":231,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":232,"author":{"gitId":"ryanlohyr"},"content":"        String key \u003d (String) modulePrereqTree.keySet().toArray()[0];","lastModifiedDate":"2023-11-10"},{"lineNumber":233,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":234,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e prerequisites \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-10"},{"lineNumber":235,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":236,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cObjects\u003e initial \u003d (ArrayList\u003cObjects\u003e) modulePrereqTree.get(key);","lastModifiedDate":"2023-11-10"},{"lineNumber":237,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":238,"author":{"gitId":"ryanlohyr"},"content":"            flattenPrereq(major, prerequisites, initial, getRequirements(major), key);","lastModifiedDate":"2023-11-10"},{"lineNumber":239,"author":{"gitId":"ryanlohyr"},"content":"        } catch (ClassCastException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":240,"author":{"gitId":"ryanlohyr"},"content":"            throw new InvalidPrereqException(moduleCode);","lastModifiedDate":"2023-11-10"},{"lineNumber":241,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":242,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":243,"author":{"gitId":"ryanlohyr"},"content":"        //As some modules in NUSMods return empty objects, we will return null to standardize","lastModifiedDate":"2023-11-13"},{"lineNumber":244,"author":{"gitId":"ryanlohyr"},"content":"        if(prerequisites.isEmpty()){","lastModifiedDate":"2023-11-13"},{"lineNumber":245,"author":{"gitId":"ryanlohyr"},"content":"            return null;","lastModifiedDate":"2023-11-13"},{"lineNumber":246,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":247,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":248,"author":{"gitId":"ryanlohyr"},"content":"        return prerequisites;","lastModifiedDate":"2023-11-10"},{"lineNumber":249,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":250,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":251,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":252,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":253,"author":{"gitId":"ryanlohyr"},"content":"     * Retrieves the prerequisite tree for a module specified by its code.","lastModifiedDate":"2023-11-10"},{"lineNumber":254,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":255,"author":{"gitId":"ryanlohyr"},"content":"     * @param moduleCode The code of the module for which prerequisites are to be retrieved.","lastModifiedDate":"2023-11-10"},{"lineNumber":256,"author":{"gitId":"ryanlohyr"},"content":"     * @return A JSON object representing the prerequisite tree for the module. The prerequisite tree can be in one of","lastModifiedDate":"2023-11-10"},{"lineNumber":257,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":258,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":259,"author":{"gitId":"ryanlohyr"},"content":"    static JSONObject getModulePrereqTree(String moduleCode) throws IOException {","lastModifiedDate":"2023-11-10"},{"lineNumber":260,"author":{"gitId":"ryanlohyr"},"content":"        JSONObject fullModuleInfo \u003d Api.getFullModuleInfo(moduleCode);","lastModifiedDate":"2023-11-10"},{"lineNumber":261,"author":{"gitId":"ryanlohyr"},"content":"        if (fullModuleInfo \u003d\u003d null) {","lastModifiedDate":"2023-11-10"},{"lineNumber":262,"author":{"gitId":"ryanlohyr"},"content":"            return null;","lastModifiedDate":"2023-11-10"},{"lineNumber":263,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":264,"author":{"gitId":"ryanlohyr"},"content":"        //prereqTree can be returned as a string(single pre requisite), null(No pre requisites) or object","lastModifiedDate":"2023-11-10"},{"lineNumber":265,"author":{"gitId":"ryanlohyr"},"content":"        Object prereqTree \u003d fullModuleInfo.get(\"prereqTree\");","lastModifiedDate":"2023-11-10"},{"lineNumber":266,"author":{"gitId":"ryanlohyr"},"content":"        if (prereqTree \u003d\u003d null) {","lastModifiedDate":"2023-11-10"},{"lineNumber":267,"author":{"gitId":"ryanlohyr"},"content":"            return null;","lastModifiedDate":"2023-11-10"},{"lineNumber":268,"author":{"gitId":"ryanlohyr"},"content":"        } else if (prereqTree instanceof String) {","lastModifiedDate":"2023-11-10"},{"lineNumber":269,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":270,"author":{"gitId":"ryanlohyr"},"content":"            JSONObject jsonObject \u003d new JSONObject();","lastModifiedDate":"2023-11-10"},{"lineNumber":271,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e requirementList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-10"},{"lineNumber":272,"author":{"gitId":"ryanlohyr"},"content":"            requirementList.add((String) prereqTree);","lastModifiedDate":"2023-11-10"},{"lineNumber":273,"author":{"gitId":"ryanlohyr"},"content":"            jsonObject.put(\"or\", requirementList);","lastModifiedDate":"2023-11-10"},{"lineNumber":274,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":275,"author":{"gitId":"ryanlohyr"},"content":"            return jsonObject;","lastModifiedDate":"2023-11-10"},{"lineNumber":276,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":277,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":278,"author":{"gitId":"ryanlohyr"},"content":"        return (JSONObject) fullModuleInfo.get(\"prereqTree\");","lastModifiedDate":"2023-11-10"},{"lineNumber":279,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":280,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":281,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":282,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":283,"author":{"gitId":"ryanlohyr"},"content":"     * Checks if a given module code is exempted from certain requirements.","lastModifiedDate":"2023-11-10"},{"lineNumber":284,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":285,"author":{"gitId":"ryanlohyr"},"content":"     * @param moduleCode The module code to check.","lastModifiedDate":"2023-11-10"},{"lineNumber":286,"author":{"gitId":"ryanlohyr"},"content":"     * @return True if the module is exempted, false otherwise.","lastModifiedDate":"2023-11-10"},{"lineNumber":287,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":288,"author":{"gitId":"ryanlohyr"},"content":"    static boolean isModuleException(String moduleCode) {","lastModifiedDate":"2023-11-10"},{"lineNumber":289,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e exemptedModules \u003d new ArrayList\u003c\u003e(List.of(\"CS1231\", \"CS1231S\", \"MA1508E\", \"EE4204\",","lastModifiedDate":"2023-11-10"},{"lineNumber":290,"author":{"gitId":"ryanlohyr"},"content":"                \"MA1511\", \"MA1512\", \"MA1521\", \"MA1522\", \"CS2109S\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":291,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":292,"author":{"gitId":"ryanlohyr"},"content":"        return exemptedModules.contains(moduleCode);","lastModifiedDate":"2023-11-10"},{"lineNumber":293,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":294,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":295,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":296,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":297,"author":{"gitId":"ryanlohyr"},"content":"     * Retrieves a list of exempted prerequisites for a given module code.","lastModifiedDate":"2023-11-10"},{"lineNumber":298,"author":{"gitId":"ryanlohyr"},"content":"     * @param moduleCode The module code to retrieve exempted prerequisites for.","lastModifiedDate":"2023-11-10"},{"lineNumber":299,"author":{"gitId":"ryanlohyr"},"content":"     * @return An ArrayList of exempted prerequisite module codes.","lastModifiedDate":"2023-11-10"},{"lineNumber":300,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":301,"author":{"gitId":"ryanlohyr"},"content":"    static ArrayList\u003cString\u003e getExemptedPrerequisite(String moduleCode) {","lastModifiedDate":"2023-11-10"},{"lineNumber":302,"author":{"gitId":"ryanlohyr"},"content":"        HashMap\u003cString, ArrayList\u003cString\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-11-10"},{"lineNumber":303,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e list1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-10"},{"lineNumber":304,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"CS1231\", list1);","lastModifiedDate":"2023-11-10"},{"lineNumber":305,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":306,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e list2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-10"},{"lineNumber":307,"author":{"gitId":"ryanlohyr"},"content":"        list2.add(\"MA1511\");","lastModifiedDate":"2023-11-10"},{"lineNumber":308,"author":{"gitId":"ryanlohyr"},"content":"        list2.add(\"MA1512\");","lastModifiedDate":"2023-11-10"},{"lineNumber":309,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"MA1508E\", list2);","lastModifiedDate":"2023-11-10"},{"lineNumber":310,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":311,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e list3 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-10"},{"lineNumber":312,"author":{"gitId":"ryanlohyr"},"content":"        list3.add(\"ST2334\");","lastModifiedDate":"2023-11-10"},{"lineNumber":313,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"EE4204\", list3);","lastModifiedDate":"2023-11-10"},{"lineNumber":314,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":315,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e list4 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-13"},{"lineNumber":316,"author":{"gitId":"ryanlohyr"},"content":"        list4.add(\"CS2040S\");","lastModifiedDate":"2023-11-13"},{"lineNumber":317,"author":{"gitId":"ryanlohyr"},"content":"        list4.add(\"CS1231S\");","lastModifiedDate":"2023-11-13"},{"lineNumber":318,"author":{"gitId":"ryanlohyr"},"content":"        list4.add(\"MA1521\");","lastModifiedDate":"2023-11-13"},{"lineNumber":319,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"CS2109S\", list4);","lastModifiedDate":"2023-11-13"},{"lineNumber":320,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":321,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e emptyList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-10"},{"lineNumber":322,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":323,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"MA1511\", emptyList);","lastModifiedDate":"2023-11-10"},{"lineNumber":324,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":325,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"CS1231S\", emptyList);","lastModifiedDate":"2023-11-10"},{"lineNumber":326,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":327,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"MA1512\", emptyList);","lastModifiedDate":"2023-11-10"},{"lineNumber":328,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":329,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"MA1521\", emptyList);","lastModifiedDate":"2023-11-10"},{"lineNumber":330,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":331,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"MA1522\", emptyList);","lastModifiedDate":"2023-11-10"},{"lineNumber":332,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":333,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":334,"author":{"gitId":"ryanlohyr"},"content":"        return map.get(moduleCode);","lastModifiedDate":"2023-11-10"},{"lineNumber":335,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":336,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":337,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":338,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":339,"author":{"gitId":"SebasFok"},"content":"     * Checks if a student satisfies all prerequisites for a given module.","lastModifiedDate":"2023-11-10"},{"lineNumber":340,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":341,"author":{"gitId":"SebasFok"},"content":"     * @param moduleCode       The code of the module for which prerequisites need to be checked.","lastModifiedDate":"2023-11-10"},{"lineNumber":342,"author":{"gitId":"SebasFok"},"content":"     * @param completedModules The list of completed modules by the student.","lastModifiedDate":"2023-11-10"},{"lineNumber":343,"author":{"gitId":"SebasFok"},"content":"     * @return `true` if the student satisfies all prerequisites for the module, `false` otherwise.","lastModifiedDate":"2023-11-10"},{"lineNumber":344,"author":{"gitId":"SebasFok"},"content":"     * @throws IllegalArgumentException If the module code is invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":345,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":346,"author":{"gitId":"SebasFok"},"content":"    public static boolean satisfiesAllPrereq(String moduleCode, ModuleList completedModules)","lastModifiedDate":"2023-11-10"},{"lineNumber":347,"author":{"gitId":"SebasFok"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2023-11-10"},{"lineNumber":348,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":349,"author":{"gitId":"SebasFok"},"content":"            if (!Api.isValidModule(moduleCode)) {","lastModifiedDate":"2023-11-13"},{"lineNumber":350,"author":{"gitId":"SebasFok"},"content":"                throw new IllegalArgumentException(\"Invalid module code\");","lastModifiedDate":"2023-11-10"},{"lineNumber":351,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":352,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":353,"author":{"gitId":"SebasFok"},"content":"            JSONObject modulePrereqTree \u003d getModulePrereqTree(moduleCode);","lastModifiedDate":"2023-11-10"},{"lineNumber":354,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":355,"author":{"gitId":"SebasFok"},"content":"            if (modulePrereqTree \u003d\u003d null) {","lastModifiedDate":"2023-11-10"},{"lineNumber":356,"author":{"gitId":"SebasFok"},"content":"                return true;","lastModifiedDate":"2023-11-10"},{"lineNumber":357,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":358,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":359,"author":{"gitId":"SebasFok"},"content":"            String key \u003d (String) modulePrereqTree.keySet().toArray()[0];","lastModifiedDate":"2023-11-10"},{"lineNumber":360,"author":{"gitId":"SebasFok"},"content":"            ArrayList\u003cObjects\u003e initial \u003d (ArrayList\u003cObjects\u003e) modulePrereqTree.get(key);","lastModifiedDate":"2023-11-10"},{"lineNumber":361,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":362,"author":{"gitId":"SebasFok"},"content":"            //Modules that has prerequisites incorrectly identified by NUSMods","lastModifiedDate":"2023-11-10"},{"lineNumber":363,"author":{"gitId":"SebasFok"},"content":"            if (isModuleException(moduleCode)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":364,"author":{"gitId":"SebasFok"},"content":"                JSONObject exceptionPrereqTree \u003d new JSONObject();","lastModifiedDate":"2023-11-10"},{"lineNumber":365,"author":{"gitId":"SebasFok"},"content":"                ArrayList\u003cString\u003e requirementList \u003d getExemptedPrerequisite(moduleCode);","lastModifiedDate":"2023-11-10"},{"lineNumber":366,"author":{"gitId":"SebasFok"},"content":"                exceptionPrereqTree.put(\"and\", requirementList);","lastModifiedDate":"2023-11-10"},{"lineNumber":367,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":368,"author":{"gitId":"SebasFok"},"content":"                key \u003d (String) exceptionPrereqTree.keySet().toArray()[0];","lastModifiedDate":"2023-11-10"},{"lineNumber":369,"author":{"gitId":"SebasFok"},"content":"                initial \u003d (ArrayList\u003cObjects\u003e) exceptionPrereqTree.get(key);","lastModifiedDate":"2023-11-10"},{"lineNumber":370,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":371,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":372,"author":{"gitId":"SebasFok"},"content":"            return isPrereqSatisfied(initial, key, completedModules);","lastModifiedDate":"2023-11-13"},{"lineNumber":373,"author":{"gitId":"SebasFok"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":374,"author":{"gitId":"SebasFok"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-11-10"},{"lineNumber":375,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":376,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":377,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"SebasFok":168,"ryanlohyr":209}},{"path":"src/main/java/seedu/duke/models/schema/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":" * Represents a command with its associated information such as command name, arguments, and description.","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":" * The class provides methods to retrieve details of the command and to generate a formatted string","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":" * for displaying the command\u0027s information.","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"public class Command {","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"    private static final int JUSTIFY_LENGTH \u003d 30;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"    private final String commandName;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"    private final String description;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"    private final String arguments;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a Command object with the specified command name and description.","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"     * @param commandName The name of the command. Must not be null.","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"     * @param description The description of the command. Must not be null.","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    public Command(String commandName, String description) {","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"        this.commandName \u003d commandName;","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"        this.arguments \u003d \"\";","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a Command object with the specified command name, arguments, and description.","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"     * @param commandName The name of the command. Must not be null.","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"     * @param arguments   The arguments of the command. Must not be null.","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"     * @param description The description of the command. Must not be null.","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    public Command(String commandName, String arguments, String description) {","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"        this.commandName \u003d commandName;","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"     * Gets the name of the command.","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"     * @return The command name.","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"    public String getCommandName() {","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"        return commandName;","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"     * Gets the description of the command.","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"     * @return The command description.","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"    public String getDescription() {","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"        return description;","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"     * Generates a formatted string representation of the command for display purposes.","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"     * @return The formatted string containing the command name, arguments, and description.","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"    public String toString() {","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"        int rightPadding \u003d JUSTIFY_LENGTH - commandName.length() - arguments.length();","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"        return commandName + \" \" + arguments + \" \".repeat(rightPadding) + description;","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"janelleenqi":71}},{"path":"src/main/java/seedu/duke/models/schema/CommandManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import java.util.List;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":" * This class represents the command system for the application.","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":" * It stores and provides descriptions for each available command.","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"public class CommandManager {","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"    private ArrayList\u003cCommand\u003e commandArrayList;","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"    public CommandManager() {","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"        commandArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"        addCurrentCommands();","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"     * Populates the commandsAndDescription HashMap with the current commands and their descriptions.","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"    private void addCurrentCommands() {","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"        commandArrayList.addAll(List.of(","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"                new Command(\"help\", \"Shows the list of commands.\"),","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"                new Command(\"required\", \"Displays the full requirements for your major.\"),","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"                new Command(\"recommend\", \"Displays a recommended schedule based on a keyword.\"),","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"SebasFok"},"content":"                new Command(\"search\", \"KEYWORD\",","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"                        \"Searches for modules to take based on keyword\"),","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"                new Command(\"info\", \"COMMAND MODULE_CODE\",","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"                        \"Displays information about a specific module.\"),","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"                new Command(\"prereq\", \"MODULE_CODE\",","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"                        \"Displays the prerequisites for a specific module.\"),","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"                new Command(\"schedule\", \"Shows schedule planner\"),","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"SebasFok"},"content":"                new Command(\"add\", \"MODULE_CODE SEMESTER\",","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"                        \"Adds module to the schedule planner.\"),","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"                new Command(\"delete\", \"MODULE_CODE\",","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"                        \"Deletes module from the schedule planner.\"),","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"                new Command(\"shift\", \"MODULE_CODE SEMESTER\",","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"                        \"Shifts module in the schedule planner.\"),","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"                new Command(\"clear\", \"Clears all schedule planner and completion data.\"),","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"                new Command(\"complete\", \"MODULE_CODE\",","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"                        \"Marks a module as complete on schedule planner.\"),","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"                new Command(\"left\", \"Displays a list of remaining required modules.\"),","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"                new Command(\"pace\", \"[CURRENT_SEMESTER]\", \"Computes and displays your graduation pace.\"),","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"SebasFok"},"content":"                new Command(\"timetable\", \"COMMAND\", \"Displays a grid containing this semester\u0027s classes\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"                new Command(\"bye\", \"Saves user\u0027s schedule and timetable and exits program.\")));","lastModifiedDate":"2023-11-14"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"    /*","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"     * Retrieves the description for a specific command.","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"     * @param command The command to retrieve the description for.","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"     * @return The description of the command, or \"Command not recognized\" if the command is not in the HashMap.","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"    public String getDescription(String commandName) {","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"        for (Command command : commandArrayList) {","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"            if (commandName.equals(command.getCommandName())) {","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"                return command.getDescription();","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"        return \"Command not recognized\";","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"        //return commandArrayList.getOrDefault(command, \"Command not recognized\");","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"     * Retrieves a list of all available commands.","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"     * @return An ArrayList containing all available commands.","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"    public ArrayList\u003cString\u003e getListOfCommandNames() {","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cString\u003e commandNameArrayList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"        for (Command command : commandArrayList) {","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"            commandNameArrayList.add(command.getCommandName());","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"        return commandNameArrayList;","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"     * Returns a formatted list of all commands and their descriptions.","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"     * @return An ArrayList of strings, where each string represents a command and its description.","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"    public ArrayList\u003cString\u003e printListOfCommands() {","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e commandList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"        for (Command command : commandArrayList) {","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"            commandList.add(command.toString());","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"        return commandList;","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"SebasFok":17,"ryanlohyr":46,"janelleenqi":34,"rohitcube":1}},{"path":"src/main/java/seedu/duke/models/schema/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-11-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import java.util.List;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"//@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":" * Represents a scheduled event, with details like the day, start time,","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":" * duration, module code, and utility methods for time calculations and comparisons.","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"public class Event {","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"    private static final List\u003cString\u003e days \u003d List.of(\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\",","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"            \"saturday\", \"sunday\");","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"    private String day;","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"    private int startTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"    private int duration;","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"    private String moduleCode;","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"     * Constructs an Event object with the specified day, start time, duration, and module code.","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"     * @param day        The day of the event. Must not be null.","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"     * @param startTime  The start time of the event.","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"     * @param duration   The duration of the event.","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"     * @param moduleCode The module code associated with the event. Must not be null.","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"    public Event(String day, int startTime, int duration, String moduleCode) {","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"        this.day \u003d day;","lastModifiedDate":"2023-11-05"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"     * Gets the start time of the event.","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"     * @return The start time.","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"    public int getStartTime() {","lastModifiedDate":"2023-11-05"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"        return startTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"     * Gets the duration of the event.","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"     * @return The duration.","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"    public int getDuration() {","lastModifiedDate":"2023-11-05"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"        return duration;","lastModifiedDate":"2023-11-05"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"     * Gets the day of the event as an integer index (0 for Monday, 1 for Tuesday, etc.).","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"     * @return The index of the day.","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"    public int getDayInt() {","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"        String lowercaseDay \u003d day.toLowerCase();","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"        if (!days.contains(lowercaseDay)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"            return -1;","lastModifiedDate":"2023-11-05"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"        return days.indexOf(lowercaseDay);","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"     * Gets the day of the event.","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"     * @return The day.","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"    public String getDay() {","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"        return day;","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"     * Gets the event type (empty string for general events).","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"     * @return The event type.","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"    public String getEventType() {","lastModifiedDate":"2023-11-05"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"        return \"\";","lastModifiedDate":"2023-11-05"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"     * Gets the module code associated with the event.","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"     * @return The module code.","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"    public String getModuleCode() {","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"        return moduleCode;","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"     * Calculates the time range for a given time period and duration.","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"     * @param timePeriod The starting time period.","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"     * @param duration   The duration of the event.","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"     * @return A string representing the time range.","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"    public static String getTime(int timePeriod, int duration) {","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"        String startTime \u003d getTime(timePeriod);","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"        // time is outside 5am-11pm","lastModifiedDate":"2023-11-12"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"        if (startTime.isEmpty()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"            return \"\";","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"        // event has no duration, just return start time","lastModifiedDate":"2023-11-12"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"        if (duration \u003d\u003d 0) {","lastModifiedDate":"2023-11-12"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"            return \"(\" + startTime + \")\";","lastModifiedDate":"2023-11-12"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"        String endTime \u003d getTime(timePeriod + duration);","lastModifiedDate":"2023-11-12"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"        // time is outside 5am-11pm, just return start time","lastModifiedDate":"2023-11-12"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"        if (endTime.isEmpty()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"            return \"(\" + startTime + \")\";","lastModifiedDate":"2023-11-12"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"        return \"(\" + startTime + \"-\" + endTime + \")\";","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"     * Gets the time string for the given time period.","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"     * @param timePeriod Index of the time period.","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"janelleenqi"},"content":"     * @return A string representing the time.","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"janelleenqi"},"content":"    private static String getTime(int timePeriod) {","lastModifiedDate":"2023-11-12"},{"lineNumber":129,"author":{"gitId":"janelleenqi"},"content":"        if (5 \u003c\u003d timePeriod \u0026\u0026 timePeriod \u003c\u003d 11) {","lastModifiedDate":"2023-11-12"},{"lineNumber":130,"author":{"gitId":"janelleenqi"},"content":"            return (timePeriod) + \"am\";","lastModifiedDate":"2023-11-09"},{"lineNumber":131,"author":{"gitId":"janelleenqi"},"content":"        } else if (timePeriod \u003d\u003d 12) {","lastModifiedDate":"2023-11-09"},{"lineNumber":132,"author":{"gitId":"janelleenqi"},"content":"            return (timePeriod) + \"pm\";","lastModifiedDate":"2023-11-09"},{"lineNumber":133,"author":{"gitId":"janelleenqi"},"content":"        } else if (13 \u003c\u003d timePeriod \u0026\u0026 timePeriod \u003c\u003d 23) {","lastModifiedDate":"2023-11-12"},{"lineNumber":134,"author":{"gitId":"janelleenqi"},"content":"            return (timePeriod - 12) + \"pm\";","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"janelleenqi"},"content":"        } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"janelleenqi"},"content":"            // time is outside 5am-11pm","lastModifiedDate":"2023-11-12"},{"lineNumber":137,"author":{"gitId":"janelleenqi"},"content":"            return \"\";","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":141,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":142,"author":{"gitId":"janelleenqi"},"content":"     * Checks if two events are equal by comparing their day, start time, duration, and module code.","lastModifiedDate":"2023-11-13"},{"lineNumber":143,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":144,"author":{"gitId":"janelleenqi"},"content":"     * @param event The event to compare with.","lastModifiedDate":"2023-11-13"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"     * @return true if the events are equal, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":146,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"    public boolean equals(Event event) {","lastModifiedDate":"2023-11-09"},{"lineNumber":148,"author":{"gitId":"janelleenqi"},"content":"        if (this.getDayInt() !\u003d event.getDayInt()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":150,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":152,"author":{"gitId":"janelleenqi"},"content":"        if (this.startTime !\u003d event.getStartTime()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":153,"author":{"gitId":"janelleenqi"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":154,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":155,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":156,"author":{"gitId":"janelleenqi"},"content":"        if (this.duration !\u003d event.getDuration()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":157,"author":{"gitId":"janelleenqi"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":159,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":160,"author":{"gitId":"janelleenqi"},"content":"        if (!this.moduleCode.equals(event.getModuleCode())) {","lastModifiedDate":"2023-11-09"},{"lineNumber":161,"author":{"gitId":"janelleenqi"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":162,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":163,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":164,"author":{"gitId":"janelleenqi"},"content":"        return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":165,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":166,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":167,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"janelleenqi"},"content":"     * Checks if the current event is earlier than another event based on start time, duration,","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"janelleenqi"},"content":"     * and module code.","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":171,"author":{"gitId":"janelleenqi"},"content":"     * @param event The event to compare with.","lastModifiedDate":"2023-11-13"},{"lineNumber":172,"author":{"gitId":"janelleenqi"},"content":"     * @return true if the current event is earlier, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"janelleenqi"},"content":"    public boolean isEarlierThan(Event event) {","lastModifiedDate":"2023-11-09"},{"lineNumber":175,"author":{"gitId":"janelleenqi"},"content":"        // compare startTime","lastModifiedDate":"2023-11-09"},{"lineNumber":176,"author":{"gitId":"janelleenqi"},"content":"        if (this.startTime \u003c event.getStartTime()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":177,"author":{"gitId":"janelleenqi"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":178,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":179,"author":{"gitId":"janelleenqi"},"content":"        if (this.startTime \u003e event.getStartTime()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":180,"author":{"gitId":"janelleenqi"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":181,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":182,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":183,"author":{"gitId":"janelleenqi"},"content":"        // same startTime, compare duration","lastModifiedDate":"2023-11-09"},{"lineNumber":184,"author":{"gitId":"janelleenqi"},"content":"        if (this.duration \u003c event.getDuration()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":185,"author":{"gitId":"janelleenqi"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":186,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":187,"author":{"gitId":"janelleenqi"},"content":"        if (this.duration \u003e event.getDuration()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":188,"author":{"gitId":"janelleenqi"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":189,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":190,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":191,"author":{"gitId":"janelleenqi"},"content":"        int currentCharIndex \u003d 0;","lastModifiedDate":"2023-11-09"},{"lineNumber":192,"author":{"gitId":"janelleenqi"},"content":"        while (currentCharIndex \u003c this.moduleCode.length() \u0026\u0026 currentCharIndex \u003c event.getModuleCode().length()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":193,"author":{"gitId":"janelleenqi"},"content":"            // same startTime \u0026 duration, compare moduleCode characters","lastModifiedDate":"2023-11-09"},{"lineNumber":194,"author":{"gitId":"janelleenqi"},"content":"            if (this.moduleCode.charAt(currentCharIndex) \u003c event.getModuleCode().charAt(currentCharIndex)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":195,"author":{"gitId":"janelleenqi"},"content":"                return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":196,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":197,"author":{"gitId":"janelleenqi"},"content":"            if (this.moduleCode.charAt(currentCharIndex) \u003e event.getModuleCode().charAt(currentCharIndex)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":198,"author":{"gitId":"janelleenqi"},"content":"                return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":199,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":200,"author":{"gitId":"janelleenqi"},"content":"            currentCharIndex++;","lastModifiedDate":"2023-11-09"},{"lineNumber":201,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":202,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":203,"author":{"gitId":"janelleenqi"},"content":"        // same startTime \u0026 duration, compare moduleCode length (shorter is earlier)","lastModifiedDate":"2023-11-09"},{"lineNumber":204,"author":{"gitId":"janelleenqi"},"content":"        if (this.moduleCode.length() \u003c event.getModuleCode().length()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":205,"author":{"gitId":"janelleenqi"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":206,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":207,"author":{"gitId":"janelleenqi"},"content":"        if (this.moduleCode.length() \u003e event.getModuleCode().length()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":208,"author":{"gitId":"janelleenqi"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":209,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":210,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":211,"author":{"gitId":"janelleenqi"},"content":"        // difference in Lecture, Tutorial, Lab","lastModifiedDate":"2023-11-09"},{"lineNumber":212,"author":{"gitId":"janelleenqi"},"content":"        return false; // no swap in bubble sort","lastModifiedDate":"2023-11-09"},{"lineNumber":213,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":214,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":215,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":216,"author":{"gitId":"janelleenqi"},"content":"     * Generates a string representation of the event, which is the module code.","lastModifiedDate":"2023-11-13"},{"lineNumber":217,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":218,"author":{"gitId":"janelleenqi"},"content":"     * @return The string representation of the event.","lastModifiedDate":"2023-11-13"},{"lineNumber":219,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":220,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":221,"author":{"gitId":"janelleenqi"},"content":"    public String toString() {","lastModifiedDate":"2023-11-09"},{"lineNumber":222,"author":{"gitId":"janelleenqi"},"content":"        return moduleCode;","lastModifiedDate":"2023-11-09"},{"lineNumber":223,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":224,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":225,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":226,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":227,"author":{"gitId":"janelleenqi"},"content":"     * Generates a string representation of the event for saving purposes, which is the module code.","lastModifiedDate":"2023-11-13"},{"lineNumber":228,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":229,"author":{"gitId":"janelleenqi"},"content":"     * @return The string representation of the event for saving.","lastModifiedDate":"2023-11-13"},{"lineNumber":230,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":231,"author":{"gitId":"janelleenqi"},"content":"    public String toSave() {","lastModifiedDate":"2023-11-12"},{"lineNumber":232,"author":{"gitId":"janelleenqi"},"content":"        return moduleCode;","lastModifiedDate":"2023-11-12"},{"lineNumber":233,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":234,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"janelleenqi":234}},{"path":"src/main/java/seedu/duke/models/schema/Lab.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-11-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"//@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":" * Represents a Lab that extends the Event class.","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"public class Lab extends Event{","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"    private static final String EVENT_TYPE \u003d \"Lab\";","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a Lab object with the specified day, start time, duration, and module code.","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"     * @param day        The day of the lab session. Must not be null.","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"     * @param startTime  The start time of the lab session.","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"     * @param duration   The duration of the lab session.","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"     * @param moduleCode The module code associated with the lab session. Must not be null.","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"    public Lab(String day, int startTime, int duration, String moduleCode) {","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"        super(day, startTime, duration, moduleCode);","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"     * Gets the type of the event, which is \"Lab\".","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"     * @return The event type.","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    public String getEventType() {","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"        return EVENT_TYPE;","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"     * Checks if this Lab object is equal to another Event object by comparing their common attributes.","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"     * @param event The event to compare with.","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"     * @return true if the events are equal, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"    public boolean equals(Event event) {","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"        boolean isSameEvent \u003d super.equals(event);","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"        if (!isSameEvent) {","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"        if (!this.getEventType().equals(event.getEventType())) {","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"        return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"     * Generates a string representation of this Lab, including module code, event type, and time range.","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"     * @return The string representation of this Lab.","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"    public String toString() {","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"        return super.toString() + \" \" + getEventType() + \" \" + getTime(getStartTime(), getDuration());","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"     * Generates a string representation of this Lab for saving purposes, including module code,","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"     * event type, start time, duration, and day.","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"     * @return The string representation of this Lab for saving.","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"    public String toSave() {","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"        return super.toSave() + \" \" + getEventType() + \" \" + getStartTime() + \" \" + getDuration() + \" \" + getDay();","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"janelleenqi":74}},{"path":"src/main/java/seedu/duke/models/schema/Lecture.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-11-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"//@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":" * Represents a Lecture that extends the Event class.","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"public class Lecture extends Event{","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"    private static final String EVENT_TYPE \u003d \"Lecture\";","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a Lecture object with the specified day, start time, duration, and module code.","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"     * @param day        The day of the lab session. Must not be null.","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"     * @param startTime  The start time of the lab session.","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"     * @param duration   The duration of the lab session.","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"     * @param moduleCode The module code associated with the lab session. Must not be null.","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"    public Lecture(String day, int startTime, int duration, String moduleCode) {","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"        super(day, startTime, duration, moduleCode);","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"     * Gets the type of the event, which is \"Lecture\".","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"     * @return The event type.","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    public String getEventType() {","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"        return EVENT_TYPE;","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"     * Checks if this Lecture object is equal to another Event object by comparing their common attributes.","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"     * @param event The event to compare with.","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"     * @return true if the events are equal, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"    public boolean equals(Event event) {","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"        boolean isSameEvent \u003d super.equals(event);","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"        if (!isSameEvent) {","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"        if (!this.getEventType().equals(event.getEventType())) {","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"        return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"     * Generates a string representation of this Lecture, including module code, event type, and time range.","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"     * @return The string representation of this Lecture.","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"    public String toString() {","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"        return super.toString() + \" \" + getEventType() + \" \" + getTime(getStartTime(), getDuration());","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"     * Generates a string representation of this Lecture for saving purposes, including module code,","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"     * event type, start time, duration, and day.","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"     * @return The string representation of this Lecture for saving.","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"    public String toSave() {","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"        return super.toSave() + \" \" + getEventType() + \" \" + getStartTime() + \" \" + getDuration() + \" \" + getDay();","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"janelleenqi":74}},{"path":"src/main/java/seedu/duke/models/schema/Major.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"//@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":" * The `Major` enum represents different majors that can be selected by our application.","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":" *","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"public enum Major {","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"    CEG, CS","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"SebasFok":9,"ryanlohyr":1}},{"path":"src/main/java/seedu/duke/models/schema/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.Api.getFullModuleInfo;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.utils.errors.HttpError.displaySocketError;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"public class Module {","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    //module class requires Name","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"    private String moduleName;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"    private String moduleDescription;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"    private String moduleCode;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"    private int moduleCredits;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"    private boolean isModularCreditsLoaded;","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"     * Represents a module with the specified module code. This class fetches module information","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"     * using the NUSMods API and stores details such as the module description, name, credits, and completion status.","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"     * @param moduleCode The code of the module.","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"    public Module(String moduleCode) throws RuntimeException{","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"        if (moduleCode.isEmpty()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"            throw new NullPointerException();","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"        this.moduleCredits \u003d 4;","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"        this.isModularCreditsLoaded \u003d false;","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"     * Marks this module as completed.","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"    public void markModuleAsCompleted() {","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"    public boolean getCompletionStatus() {","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"        return isCompleted;","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"     * Retrieves the modular credits for a module.","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"     * This method fetches the modular credits for a module by calling the NUSMods API.","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"     * If the modular credits have already been loaded, it returns the cached value.","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"     * If not, it makes an API call to get the full module information and extracts the modular credits.","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"     * In case of a ClassCastException (edge case when module has no credits), a default value of 4 credits is set.","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"     * Handles IOException by displaying a socket error message.","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"     * @return The number of modular credits for the module.","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"    public int getModuleCredits() {","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"        if(this.isModularCreditsLoaded){","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"            return this.moduleCredits;","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"            JSONObject response \u003d getFullModuleInfo(moduleCode);","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"            assert response !\u003d null: \"Response from NUSMods API is null\";","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"            assert !response.isEmpty(): \"Response Object is empty\";","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"            this.moduleCredits \u003d Integer.parseInt((String) response.get(\"moduleCredit\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"            this.isModularCreditsLoaded \u003d true;","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"        }catch (ClassCastException e){","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Sorry there was issue retrieving the MCs\");","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"            return -1;","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"        }catch (IOException e){","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"            displaySocketError();","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"            return -1;","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"        return this.moduleCredits;","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"     * Gets the module code.","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"     * @return The code of this module.","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"    public String getModuleCode() {","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"        return this.moduleCode;","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"     * Checks if this module is equal to another module by comparing their module codes.","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"     * @param module The module to compare with.","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"     * @return true if the modules have the same module code, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"    public boolean equals(Module module) {","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"        return this.moduleCode.equals(module.moduleCode);","lastModifiedDate":"2023-11-06"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"     * Generates a string representation of this module, which is its module code.","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"     * @return The string representation of this module.","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-11-06"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"    public String toString() {","lastModifiedDate":"2023-11-06"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"        return this.moduleCode;","lastModifiedDate":"2023-11-06"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"ryanlohyr":79,"janelleenqi":30}},{"path":"src/main/java/seedu/duke/models/schema/ModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"//@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":" * The ModuleList class represents a list of modules and provides various methods for managing modules.","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":" * It includes functionality for adding, deleting, and retrieving modules from the list.","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"public class ModuleList {","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"    private ArrayList\u003cModule\u003e mainModuleList;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"     * Constructs an empty ModuleList.","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"    public ModuleList() {","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"        mainModuleList \u003d new ArrayList\u003cModule\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a ModuleList from a space-separated string of moduleCodes.","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"     * @param moduleCodes A space-separated string of module codes.","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"    public ModuleList(String moduleCodes) {","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"        this();","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"        if (moduleCodes \u003d\u003d null || moduleCodes.isEmpty()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"        String[] moduleArray \u003d moduleCodes.split(\" \");","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"        for (String moduleCode : moduleArray) {","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"            try {","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"                mainModuleList.add(new Module(moduleCode));","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"                //fail","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"                System.out.println(\"null pointer\");","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves the list of modules.","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"     * @return The ArrayList containing the modules.","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"    public ArrayList\u003cModule\u003e getMainModuleList() {","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"        assert mainModuleList !\u003d null: \"null mainModuleList\";","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"        return mainModuleList;","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves the list of module codes from the modules in the mainModuleList.","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"     * @return The ArrayList containing module codes.","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"    public ArrayList\u003cString\u003e getModuleCodes() {","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cString\u003e moduleCodes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"        for (Module module: mainModuleList){","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"            moduleCodes.add(module.getModuleCode());","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"        return moduleCodes;","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves the list of module codes for completed modules from the main module list.","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"     * @return The ArrayList containing module codes of completed modules.","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"    public ArrayList\u003cString\u003e getCompletedModuleCodes(){","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cString\u003e completedModuleCodes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"        for (Module module: mainModuleList){","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"            if (module.getCompletionStatus()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"                completedModuleCodes.add(module.getModuleCode());","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"        return completedModuleCodes;","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"     * Creates and returns a new HashMap containing completed modules from the main module list, indexed by module code.","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"     * @return A HashMap containing completed modules indexed by module code.","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"    public HashMap\u003cString, Module\u003e newHashMapOfCompleted(){","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"        HashMap\u003cString, Module\u003e completedModules \u003d new HashMap\u003cString, Module\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"        // add modules to HashMap\u003cString, Module\u003e for easy retrieval","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"        for (Module module: mainModuleList){","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"            if (module.getCompletionStatus()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"                completedModules.put(module.getModuleCode(), module);","lastModifiedDate":"2023-11-06"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"        return completedModules;","lastModifiedDate":"2023-11-06"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"     * Adds a module to the main module list.","lastModifiedDate":"2023-11-08"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"     * @param module The module to be added.","lastModifiedDate":"2023-11-08"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"    public void addModule (Module module) {","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"        mainModuleList.add(module);","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"     * Adds a module to the main module list at the specified index.","lastModifiedDate":"2023-11-08"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"     * @param index  The index at which the module should be added.","lastModifiedDate":"2023-11-08"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"     * @param module The module to be added.","lastModifiedDate":"2023-11-08"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"    public void addModule (int index, Module module) {","lastModifiedDate":"2023-11-06"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"        mainModuleList.add(index, module);","lastModifiedDate":"2023-11-06"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"    public void replaceModule (int index, Module module) {","lastModifiedDate":"2023-11-06"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"        mainModuleList.set(index, module);","lastModifiedDate":"2023-11-06"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":124,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":126,"author":{"gitId":"janelleenqi"},"content":"     * Deletes a module from the main module list.","lastModifiedDate":"2023-11-08"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":128,"author":{"gitId":"janelleenqi"},"content":"     * @param module The module to be deleted.","lastModifiedDate":"2023-11-08"},{"lineNumber":129,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":130,"author":{"gitId":"janelleenqi"},"content":"    public void deleteModule (Module module) {","lastModifiedDate":"2023-11-03"},{"lineNumber":131,"author":{"gitId":"janelleenqi"},"content":"        mainModuleList.remove(module);","lastModifiedDate":"2023-11-03"},{"lineNumber":132,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":135,"author":{"gitId":"janelleenqi"},"content":"     * Deletes a module from the main module list by its module code.","lastModifiedDate":"2023-11-08"},{"lineNumber":136,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":137,"author":{"gitId":"janelleenqi"},"content":"     * @param moduleCode The module code of the module to be deleted.","lastModifiedDate":"2023-11-08"},{"lineNumber":138,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":139,"author":{"gitId":"janelleenqi"},"content":"    public void deleteModuleByCode (String moduleCode) {","lastModifiedDate":"2023-11-08"},{"lineNumber":140,"author":{"gitId":"janelleenqi"},"content":"        try {","lastModifiedDate":"2023-11-08"},{"lineNumber":141,"author":{"gitId":"janelleenqi"},"content":"            Module moduleToBeDeleted \u003d getModule(moduleCode);","lastModifiedDate":"2023-11-08"},{"lineNumber":142,"author":{"gitId":"janelleenqi"},"content":"            deleteModule(moduleToBeDeleted);","lastModifiedDate":"2023-11-08"},{"lineNumber":143,"author":{"gitId":"janelleenqi"},"content":"        } catch (InvalidObjectException e) {","lastModifiedDate":"2023-11-08"},{"lineNumber":144,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-11-06"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":146,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":148,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"     * Checks if a module exists in the main module list.","lastModifiedDate":"2023-11-13"},{"lineNumber":150,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"     * @param module The module to check for existence.","lastModifiedDate":"2023-11-13"},{"lineNumber":152,"author":{"gitId":"janelleenqi"},"content":"     * @return true if the module exists, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":153,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":154,"author":{"gitId":"janelleenqi"},"content":"    public boolean exists(Module module) {","lastModifiedDate":"2023-11-06"},{"lineNumber":155,"author":{"gitId":"janelleenqi"},"content":"        if (mainModuleList \u003d\u003d null) {","lastModifiedDate":"2023-11-06"},{"lineNumber":156,"author":{"gitId":"janelleenqi"},"content":"            return false;","lastModifiedDate":"2023-11-06"},{"lineNumber":157,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":158,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":159,"author":{"gitId":"janelleenqi"},"content":"        assert module !\u003d null;","lastModifiedDate":"2023-11-06"},{"lineNumber":160,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":161,"author":{"gitId":"janelleenqi"},"content":"        for (Module moduleB : mainModuleList) {","lastModifiedDate":"2023-11-06"},{"lineNumber":162,"author":{"gitId":"janelleenqi"},"content":"            if (module.equals(moduleB)) {","lastModifiedDate":"2023-11-06"},{"lineNumber":163,"author":{"gitId":"janelleenqi"},"content":"                return true;","lastModifiedDate":"2023-11-06"},{"lineNumber":164,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":165,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":166,"author":{"gitId":"janelleenqi"},"content":"        return false;","lastModifiedDate":"2023-11-06"},{"lineNumber":167,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":168,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":169,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":170,"author":{"gitId":"janelleenqi"},"content":"     * Checks if a module with the specified module code exists in the main module list.","lastModifiedDate":"2023-11-07"},{"lineNumber":171,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-07"},{"lineNumber":172,"author":{"gitId":"janelleenqi"},"content":"     * @param moduleCodeA The module code to check for existence.","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"janelleenqi"},"content":"     * @return true if the module with the specified code exists, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"janelleenqi"},"content":"     * @throws InvalidObjectException If the main module list is null or the provided module code is null.","lastModifiedDate":"2023-11-07"},{"lineNumber":175,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":176,"author":{"gitId":"janelleenqi"},"content":"    public boolean existsByCode(String moduleCodeA) throws InvalidObjectException {","lastModifiedDate":"2023-11-06"},{"lineNumber":177,"author":{"gitId":"janelleenqi"},"content":"        if (mainModuleList \u003d\u003d null) {","lastModifiedDate":"2023-11-03"},{"lineNumber":178,"author":{"gitId":"janelleenqi"},"content":"            throw new InvalidObjectException(\"Null Module List\");","lastModifiedDate":"2023-11-03"},{"lineNumber":179,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":180,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":181,"author":{"gitId":"janelleenqi"},"content":"        if (moduleCodeA \u003d\u003d null) {","lastModifiedDate":"2023-11-03"},{"lineNumber":182,"author":{"gitId":"janelleenqi"},"content":"            throw new InvalidObjectException(\"Null Module Code\");","lastModifiedDate":"2023-11-03"},{"lineNumber":183,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":184,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":185,"author":{"gitId":"janelleenqi"},"content":"        for (Module moduleB : mainModuleList) {","lastModifiedDate":"2023-11-03"},{"lineNumber":186,"author":{"gitId":"janelleenqi"},"content":"            if (moduleCodeA.equals(moduleB.getModuleCode())) {","lastModifiedDate":"2023-11-03"},{"lineNumber":187,"author":{"gitId":"janelleenqi"},"content":"                return true;","lastModifiedDate":"2023-11-03"},{"lineNumber":188,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":189,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":190,"author":{"gitId":"janelleenqi"},"content":"        return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":191,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":192,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":193,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":194,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves a module from the main module list by its module code.","lastModifiedDate":"2023-11-08"},{"lineNumber":195,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":196,"author":{"gitId":"janelleenqi"},"content":"     * @param moduleCode The module code to search for.","lastModifiedDate":"2023-11-08"},{"lineNumber":197,"author":{"gitId":"janelleenqi"},"content":"     * @return The module with the specified module code.","lastModifiedDate":"2023-11-08"},{"lineNumber":198,"author":{"gitId":"janelleenqi"},"content":"     * @throws InvalidObjectException If the module does not exist.","lastModifiedDate":"2023-11-08"},{"lineNumber":199,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":200,"author":{"gitId":"janelleenqi"},"content":"    public Module getModule(String moduleCode) throws InvalidObjectException {","lastModifiedDate":"2023-11-03"},{"lineNumber":201,"author":{"gitId":"janelleenqi"},"content":"        for (Module module: mainModuleList) {","lastModifiedDate":"2023-11-03"},{"lineNumber":202,"author":{"gitId":"janelleenqi"},"content":"            if (moduleCode.equals(module.getModuleCode())) {","lastModifiedDate":"2023-11-03"},{"lineNumber":203,"author":{"gitId":"janelleenqi"},"content":"                return module;","lastModifiedDate":"2023-11-03"},{"lineNumber":204,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":205,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":206,"author":{"gitId":"janelleenqi"},"content":"        throw new InvalidObjectException(\"Module does not exist, please add it in your schedule.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":207,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":208,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":209,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":210,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":211,"author":{"gitId":"janelleenqi"},"content":"     * Gets the size of the main module list.","lastModifiedDate":"2023-11-13"},{"lineNumber":212,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":213,"author":{"gitId":"janelleenqi"},"content":"     * @return The number of modules in the list.","lastModifiedDate":"2023-11-13"},{"lineNumber":214,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":215,"author":{"gitId":"janelleenqi"},"content":"    public int size() {","lastModifiedDate":"2023-11-06"},{"lineNumber":216,"author":{"gitId":"janelleenqi"},"content":"        return mainModuleList.size();","lastModifiedDate":"2023-11-06"},{"lineNumber":217,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":218,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":219,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":220,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":221,"author":{"gitId":"janelleenqi"},"content":"     * Finds the index of a module in the main module list by its module code.","lastModifiedDate":"2023-11-07"},{"lineNumber":222,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-07"},{"lineNumber":223,"author":{"gitId":"janelleenqi"},"content":"     * This method searches for a module in the main module list based on its module code.","lastModifiedDate":"2023-11-07"},{"lineNumber":224,"author":{"gitId":"janelleenqi"},"content":"     * If the module code is found in the list, it returns the index at which the module","lastModifiedDate":"2023-11-07"},{"lineNumber":225,"author":{"gitId":"janelleenqi"},"content":"     * is located. If the module code is not found, it returns -1 to indicate that the module","lastModifiedDate":"2023-11-07"},{"lineNumber":226,"author":{"gitId":"janelleenqi"},"content":"     * is not present in the list.","lastModifiedDate":"2023-11-07"},{"lineNumber":227,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-07"},{"lineNumber":228,"author":{"gitId":"janelleenqi"},"content":"     * @param moduleCode The module code to search for.","lastModifiedDate":"2023-11-07"},{"lineNumber":229,"author":{"gitId":"janelleenqi"},"content":"     * @return The index of the module in the list if found, or -1 if not found.","lastModifiedDate":"2023-11-07"},{"lineNumber":230,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":231,"author":{"gitId":"janelleenqi"},"content":"    public int getIndexByString(String moduleCode) {","lastModifiedDate":"2023-11-07"},{"lineNumber":232,"author":{"gitId":"janelleenqi"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-11-04"},{"lineNumber":233,"author":{"gitId":"janelleenqi"},"content":"        for (Module module: mainModuleList){","lastModifiedDate":"2023-11-04"},{"lineNumber":234,"author":{"gitId":"janelleenqi"},"content":"            if (moduleCode.equals(module.getModuleCode())) {","lastModifiedDate":"2023-11-04"},{"lineNumber":235,"author":{"gitId":"janelleenqi"},"content":"                return i;","lastModifiedDate":"2023-11-04"},{"lineNumber":236,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":237,"author":{"gitId":"janelleenqi"},"content":"            i++;","lastModifiedDate":"2023-11-04"},{"lineNumber":238,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":239,"author":{"gitId":"janelleenqi"},"content":"        return -1;","lastModifiedDate":"2023-11-04"},{"lineNumber":240,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":241,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":242,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":243,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves a module from the main module list by its index.","lastModifiedDate":"2023-11-08"},{"lineNumber":244,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":245,"author":{"gitId":"janelleenqi"},"content":"     * @param index The index of the module to retrieve.","lastModifiedDate":"2023-11-08"},{"lineNumber":246,"author":{"gitId":"janelleenqi"},"content":"     * @return The module at the specified index.","lastModifiedDate":"2023-11-08"},{"lineNumber":247,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":248,"author":{"gitId":"janelleenqi"},"content":"    public Module getModuleByIndex(int index) {","lastModifiedDate":"2023-11-06"},{"lineNumber":249,"author":{"gitId":"janelleenqi"},"content":"        return this.mainModuleList.get(index);","lastModifiedDate":"2023-11-06"},{"lineNumber":250,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":251,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"SebasFok":1,"janelleenqi":250}},{"path":"src/main/java/seedu/duke/models/schema/ModuleWeekly.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rohitcube"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-11-05"},{"lineNumber":2,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.errors.UserError;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"rohitcube"},"content":"public class ModuleWeekly extends Module {","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"rohitcube"},"content":"    private String moduleCode;","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"rohitcube"},"content":"    private int lectureTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"rohitcube"},"content":"    private int tutorialTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":12,"author":{"gitId":"rohitcube"},"content":"    private int labTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":13,"author":{"gitId":"rohitcube"},"content":"    private int lectureDuration;","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"rohitcube"},"content":"    private int labDuration;","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"rohitcube"},"content":"    private int tutorialDuration;","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"rohitcube"},"content":"    private String day;","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"    private ArrayList\u003cEvent\u003e lessons \u003d new ArrayList\u003cEvent\u003e();","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"rohitcube"},"content":"    public ModuleWeekly(String moduleCode, int lectureTime, int tutorialTime,","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"rohitcube"},"content":"                        int labTime) throws NullPointerException, RuntimeException {","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"rohitcube"},"content":"        super(moduleCode);","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"rohitcube"},"content":"        this.lectureTime \u003d lectureTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"rohitcube"},"content":"        this.tutorialTime \u003d tutorialTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"rohitcube"},"content":"        this.labTime \u003d labTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"rohitcube"},"content":"    public ModuleWeekly(String moduleCode) {","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"rohitcube"},"content":"        super(moduleCode);","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"rohitcube"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"rohitcube"},"content":"        this.lectureTime \u003d 8;","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"rohitcube"},"content":"        this.labTime \u003d 7;","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"rohitcube"},"content":"        this.lectureDuration \u003d 1;","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"rohitcube"},"content":"        this.tutorialTime \u003d 1;","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"rohitcube"},"content":"        this.labDuration \u003d 1;","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"rohitcube"},"content":"    public void printModuleWeekly(ModuleWeekly moduleWeekly) {","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"rohitcube"},"content":"        System.out.println(\"lect time: \" + moduleWeekly.getLectureTime());","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"rohitcube"},"content":"        System.out.println(\"tut time: \" + moduleWeekly.getTutorialTime());","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"rohitcube"},"content":"        System.out.println(\"lab time: \"+ moduleWeekly.getLabTime());","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":43,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":44,"author":{"gitId":"rohitcube"},"content":"    public String getModuleCode() {","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"rohitcube"},"content":"        return moduleCode;","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"rohitcube"},"content":"    public int getLectureTime() {","lastModifiedDate":"2023-11-05"},{"lineNumber":48,"author":{"gitId":"rohitcube"},"content":"        return lectureTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":49,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":50,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":51,"author":{"gitId":"rohitcube"},"content":"    public String getDay() {","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"rohitcube"},"content":"        return day;","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"rohitcube"},"content":"    public int getTutorialTime() {","lastModifiedDate":"2023-11-05"},{"lineNumber":55,"author":{"gitId":"rohitcube"},"content":"        return tutorialTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":56,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"rohitcube"},"content":"    public int getLabTime() {","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"rohitcube"},"content":"        return labTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":60,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":63,"author":{"gitId":"rohitcube"},"content":"    public void setDay(String day) {","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"rohitcube"},"content":"        this.day \u003d day;","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"     * Checks if a specific event exists in this ModuleWeekly.","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"     * @param newEvent The event to check for existence.","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"     * @return true if the event exists, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"    public boolean exists(Event newEvent) {","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"        for (Event existingEvent : lessons) {","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"            if (newEvent.equals(existingEvent)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"                return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"        return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"     * Checks if there are any lessons in the weekly schedule.","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"     * @return true if there are lessons, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"    public boolean haveLessons() {","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"        return !lessons.isEmpty();","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"     * Checks if an event can be added to the timetable and adds it if possible.","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"     * @param event The event to add.","lastModifiedDate":"2023-11-13"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"     * @return true if the event can be added, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"    public boolean canAddToTimetable(Event event) {","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"        if (this.exists(event)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"            UserError.displayLessonAlreadyAdded(event);","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"        return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"     * Adds a lecture to the weekly timetable.","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"     * @param day      The day of the lecture.","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"     * @param time     The time of the lecture.","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"     * @param duration The duration of the lecture.","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"    public void addLecture(String day, int time, int duration) {","lastModifiedDate":"2023-11-05"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"        Event newLecture \u003d new Lecture(day, time, duration, moduleCode);","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"        if (canAddToTimetable(newLecture)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"            lessons.add(newLecture);","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"     * Adds a tutorial to the weekly timetable.","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"     * @param day      The day of the tutorial.","lastModifiedDate":"2023-11-13"},{"lineNumber":124,"author":{"gitId":"janelleenqi"},"content":"     * @param time     The time of the tutorial.","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"     * @param duration The duration of the tutorial.","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"    public void addTutorial(String day, int time, int duration) {","lastModifiedDate":"2023-11-05"},{"lineNumber":128,"author":{"gitId":"janelleenqi"},"content":"        Event newTutorial \u003d new Tutorial(day, time, duration, moduleCode);","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"janelleenqi"},"content":"        if (canAddToTimetable(newTutorial)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":130,"author":{"gitId":"janelleenqi"},"content":"            lessons.add(newTutorial);","lastModifiedDate":"2023-11-09"},{"lineNumber":131,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":132,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":133,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":134,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":135,"author":{"gitId":"janelleenqi"},"content":"     * Adds a lab to the weekly timetable.","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"janelleenqi"},"content":"     * @param day      The day of the tutorial.","lastModifiedDate":"2023-11-13"},{"lineNumber":138,"author":{"gitId":"janelleenqi"},"content":"     * @param time     The time of the tutorial.","lastModifiedDate":"2023-11-13"},{"lineNumber":139,"author":{"gitId":"janelleenqi"},"content":"     * @param duration The duration of the tutorial.","lastModifiedDate":"2023-11-13"},{"lineNumber":140,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":141,"author":{"gitId":"janelleenqi"},"content":"    public void addLab(String day, int time, int duration) {","lastModifiedDate":"2023-11-05"},{"lineNumber":142,"author":{"gitId":"janelleenqi"},"content":"        Event newLab \u003d new Lab(day, time, duration, moduleCode);","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"janelleenqi"},"content":"        if (canAddToTimetable(newLab)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":144,"author":{"gitId":"janelleenqi"},"content":"            lessons.add(newLab);","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":146,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":148,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":150,"author":{"gitId":"janelleenqi"},"content":"     * Clears all lessons from the weekly timetable.","lastModifiedDate":"2023-11-13"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":152,"author":{"gitId":"janelleenqi"},"content":"    public void clearLessons() {","lastModifiedDate":"2023-11-09"},{"lineNumber":153,"author":{"gitId":"janelleenqi"},"content":"        lessons.clear();","lastModifiedDate":"2023-11-09"},{"lineNumber":154,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":155,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":156,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":157,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":158,"author":{"gitId":"janelleenqi"},"content":"     * Gets the ArrayList of events representing the weekly timetable.","lastModifiedDate":"2023-11-13"},{"lineNumber":159,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":160,"author":{"gitId":"janelleenqi"},"content":"     * @return The ArrayList of events.","lastModifiedDate":"2023-11-13"},{"lineNumber":161,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":162,"author":{"gitId":"janelleenqi"},"content":"    public ArrayList\u003cEvent\u003e getWeeklyTimetable() {","lastModifiedDate":"2023-11-08"},{"lineNumber":163,"author":{"gitId":"janelleenqi"},"content":"        return lessons;","lastModifiedDate":"2023-11-05"},{"lineNumber":164,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":165,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-05"},{"lineNumber":166,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"janelleenqi":104,"rohitcube":62}},{"path":"src/main/java/seedu/duke/models/schema/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.utils.exceptions.MandatoryPrereqException;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.exceptions.FailPrereqException;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.exceptions.MissingModuleException;","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.exceptions.InvalidPrereqException;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Queue;","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.Prerequisite.getModulePrereqBasedOnCourse;","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.Api.getModuleFulfilledRequirements;","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.Prerequisite.satisfiesAllPrereq;","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.storage.StorageManager.getRequirements;","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.views.SemesterPlannerView.printSemesterPlanner;","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":" * The `Schedule` class represents a student\u0027s course schedule.","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":" * It allows a student to manage and manipulate their enrolled modules across multiple semesters.","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"public class Schedule {","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"SebasFok"},"content":"    private static final int MAXIMUM_SEMESTERS \u003d 8;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"SebasFok"},"content":"    protected int[] modulesPerSem;","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    private ModuleList modulesPlanned;","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"    private HashMap\u003cString, Module\u003e completedModules;","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"    //DO NOT USE PREREQ MAP, ONLY USED FOR OPTIMISING RECOMMENDED SCHEDULE FUNCTION","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"    private HashMap\u003cString, ArrayList\u003cString\u003e\u003e prereqMap;","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"     * Constructs a Schedule object with the given planned modules and the target distribution of modules per semester.","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"     * Initializes the completedModules map to store completed modules.","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"     * @param modulesPlanned The list of modules that are planned for the schedule.","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"     * @param modulesPerSem  An array representing the target number of modules to be taken in each semester.","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"    public Schedule(ModuleList modulesPlanned, int[] modulesPerSem) {","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"SebasFok"},"content":"        this.modulesPerSem \u003d modulesPerSem;","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"        this.modulesPlanned \u003d modulesPlanned;","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"SebasFok"},"content":"        completedModules \u003d new HashMap\u003cString, Module\u003e();","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"SebasFok"},"content":"     * Constructs a new `Schedule` with the provided modules and distribution across semesters.","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"SebasFok"},"content":"     * @param modules      A string containing module codes representing the student\u0027s schedule.","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"SebasFok"},"content":"     * @param modulesPerSem An array indicating the distribution of modules across semesters.","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"SebasFok"},"content":"    public Schedule(String modules, int[] modulesPerSem) {","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"SebasFok"},"content":"        this.modulesPerSem \u003d modulesPerSem;","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"        modulesPlanned \u003d new ModuleList(modules);","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"        completedModules \u003d new HashMap\u003cString, Module\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"SebasFok"},"content":"     * Constructs a new, empty `Schedule` with no modules and a default semester distribution.","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"SebasFok"},"content":"    public Schedule() {","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"        modulesPerSem \u003d new int[]{0, 0, 0, 0, 0, 0, 0, 0};","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"        modulesPlanned \u003d new ModuleList();","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"        completedModules \u003d new HashMap\u003cString, Module\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"SebasFok"},"content":"     * Retrieves the maximum number of semesters allowed in a student\u0027s course schedule.","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"SebasFok"},"content":"     * @return The maximum number of semesters allowed.","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"SebasFok"},"content":"    public static int getMaximumSemesters() {","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"SebasFok"},"content":"        return MAXIMUM_SEMESTERS;","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves the ModuleList for modules planned in the schedule.","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"     * @return The ModuleList containing the planned modules.","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"    public ModuleList getModulesPlanned() {","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"        return modulesPlanned;","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"rohitcube"},"content":"    public int[] getModulesPerSem() {","lastModifiedDate":"2023-11-07"},{"lineNumber":91,"author":{"gitId":"rohitcube"},"content":"        return modulesPerSem;","lastModifiedDate":"2023-11-07"},{"lineNumber":92,"author":{"gitId":"rohitcube"},"content":"    };","lastModifiedDate":"2023-11-07"},{"lineNumber":93,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"     * Adds a recommended schedule list to the current schedule, updating completion statuses if needed.","lastModifiedDate":"2023-11-07"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"     * This method adds a list of recommended schedule modules to the current schedule. You can choose to","lastModifiedDate":"2023-11-07"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"     * either keep or clear the completion statuses of modules. The recommended schedule modules are added","lastModifiedDate":"2023-11-07"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"     * to the schedule, taking into account prerequisites and distributing them across semesters based on","lastModifiedDate":"2023-11-07"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"     * fulfillment of prerequisites.","lastModifiedDate":"2023-11-07"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-07"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"     * @param scheduleToAdd The list of recommended schedule modules to add.","lastModifiedDate":"2023-11-07"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"    public void addReccToSchedule(ArrayList\u003cString\u003e scheduleToAdd) {","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"        final int modsToAddPerSem \u003d 5;","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"        int currentIndexOfMod \u003d 0;","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"        int currentSem \u003d 1;","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"ryanlohyr"},"content":"        modulesPlanned \u003d new ModuleList();","lastModifiedDate":"2023-11-06"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"        modulesPerSem \u003d new int[]{0, 0, 0, 0, 0, 0, 0, 0};","lastModifiedDate":"2023-11-06"},{"lineNumber":113,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"        for (String module : scheduleToAdd) {","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"ryanlohyr"},"content":"            // Check if the module fulfill pre req, else we move it to next sem","lastModifiedDate":"2023-11-03"},{"lineNumber":116,"author":{"gitId":"ryanlohyr"},"content":"            int indexToAdd \u003d 0;","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"ryanlohyr"},"content":"            for (int i \u003d 1; i \u003c currentSem; i++) {","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"ryanlohyr"},"content":"                indexToAdd +\u003d this.modulesPerSem[i - 1];","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"ryanlohyr"},"content":"            //Sub list as we only want modules before the current target semester","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"ryanlohyr"},"content":"            List\u003cString\u003e currentSemestersModules \u003d scheduleToAdd.subList(indexToAdd, indexToAdd + currentIndexOfMod);","lastModifiedDate":"2023-11-06"},{"lineNumber":123,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e currModulesPrereq \u003d prereqMap.get(module);","lastModifiedDate":"2023-11-06"},{"lineNumber":124,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":125,"author":{"gitId":"ryanlohyr"},"content":"            //now we check if the modules prereq is contained on current line","lastModifiedDate":"2023-11-06"},{"lineNumber":126,"author":{"gitId":"ryanlohyr"},"content":"            for(String currModule:currentSemestersModules){","lastModifiedDate":"2023-11-06"},{"lineNumber":127,"author":{"gitId":"ryanlohyr"},"content":"                if(currModulesPrereq.contains(currModule)){","lastModifiedDate":"2023-11-06"},{"lineNumber":128,"author":{"gitId":"ryanlohyr"},"content":"                    currentSem +\u003d 1;","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"ryanlohyr"},"content":"                    currentIndexOfMod \u003d 0;","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":132,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":133,"author":{"gitId":"ryanlohyr"},"content":"            try {","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"ryanlohyr"},"content":"                addModuleWithoutCheckingPrereq(module, currentSem);","lastModifiedDate":"2023-11-04"},{"lineNumber":135,"author":{"gitId":"ryanlohyr"},"content":"            } catch (InvalidObjectException | IllegalArgumentException e){","lastModifiedDate":"2023-11-04"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"            currentIndexOfMod +\u003d 1;","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"ryanlohyr"},"content":"            if (currentIndexOfMod \u003e\u003d modsToAddPerSem){","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"ryanlohyr"},"content":"                currentIndexOfMod \u003d 0;","lastModifiedDate":"2023-11-01"},{"lineNumber":142,"author":{"gitId":"ryanlohyr"},"content":"                currentSem +\u003d 1;","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":144,"author":{"gitId":"ryanlohyr"},"content":"            if (currentSem \u003e 8) {","lastModifiedDate":"2023-11-06"},{"lineNumber":145,"author":{"gitId":"ryanlohyr"},"content":"                return;","lastModifiedDate":"2023-11-06"},{"lineNumber":146,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":147,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":151,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"SebasFok"},"content":"     * Adds a module to the schedule for a specified semester.","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"SebasFok"},"content":"     * @param moduleCode The module code to be added.","lastModifiedDate":"2023-11-07"},{"lineNumber":155,"author":{"gitId":"SebasFok"},"content":"     * @param targetSem The target semester (an integer from 1 to 8) in which to add the module.","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"SebasFok"},"content":"     * @throws IllegalArgumentException If the provided semester is out of the valid range (1 to 8),","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"SebasFok"},"content":"     *     or if the module already exists in the schedule, or if the module is not valid.","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"SebasFok"},"content":"     * @throws InvalidObjectException If the module is null.","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"SebasFok"},"content":"     * @throws FailPrereqException If the prerequisites for the module are not satisfied","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"SebasFok"},"content":"    public void addModule(String moduleCode, int targetSem) throws IllegalArgumentException, InvalidObjectException,","lastModifiedDate":"2023-11-07"},{"lineNumber":162,"author":{"gitId":"SebasFok"},"content":"            FailPrereqException {","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"SebasFok"},"content":"        if (targetSem \u003c 1 || targetSem \u003e MAXIMUM_SEMESTERS) {","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"SebasFok"},"content":"            throw new IllegalArgumentException(\"Please select an integer from 1 to 8 for semester selection\");","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":169,"author":{"gitId":"SebasFok"},"content":"            if (modulesPlanned.existsByCode(moduleCode)) {","lastModifiedDate":"2023-11-07"},{"lineNumber":170,"author":{"gitId":"SebasFok"},"content":"                throw new IllegalArgumentException(\"Module already exists in the schedule\");","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"SebasFok"},"content":"        } catch (InvalidObjectException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":173,"author":{"gitId":"SebasFok"},"content":"            throw new InvalidObjectException(\"Module cannot be null\");","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":175,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":176,"author":{"gitId":"SebasFok"},"content":"        int indexToAdd \u003d 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":177,"author":{"gitId":"SebasFok"},"content":"        int startIndexOfSem \u003d 0;","lastModifiedDate":"2023-11-10"},{"lineNumber":178,"author":{"gitId":"SebasFok"},"content":"        for (int i \u003d 0; i \u003c targetSem; i++) {","lastModifiedDate":"2023-11-10"},{"lineNumber":179,"author":{"gitId":"SebasFok"},"content":"            startIndexOfSem \u003d indexToAdd;","lastModifiedDate":"2023-11-10"},{"lineNumber":180,"author":{"gitId":"SebasFok"},"content":"            indexToAdd +\u003d this.modulesPerSem[i];","lastModifiedDate":"2023-11-10"},{"lineNumber":181,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":182,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":183,"author":{"gitId":"SebasFok"},"content":"        //Sub list as we only want modules before the current target semester","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":185,"author":{"gitId":"SebasFok"},"content":"        List\u003cString\u003e partialModulesPlannedArray \u003d modulesPlanned.getModuleCodes().subList(0, (startIndexOfSem));","lastModifiedDate":"2023-11-10"},{"lineNumber":186,"author":{"gitId":"SebasFok"},"content":"        ModuleList partialModulesPlanned \u003d new ModuleList(String.join(\" \", partialModulesPlannedArray));","lastModifiedDate":"2023-11-07"},{"lineNumber":187,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":188,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":189,"author":{"gitId":"SebasFok"},"content":"            if (satisfiesAllPrereq(moduleCode, partialModulesPlanned)) {","lastModifiedDate":"2023-11-07"},{"lineNumber":190,"author":{"gitId":"SebasFok"},"content":"                //module initialization will be here","lastModifiedDate":"2023-11-04"},{"lineNumber":191,"author":{"gitId":"SebasFok"},"content":"                Module newModule \u003d completedModules.get(moduleCode);","lastModifiedDate":"2023-11-08"},{"lineNumber":192,"author":{"gitId":"SebasFok"},"content":"                if (newModule \u003d\u003d null) {","lastModifiedDate":"2023-11-08"},{"lineNumber":193,"author":{"gitId":"SebasFok"},"content":"                    newModule \u003d new Module(moduleCode);","lastModifiedDate":"2023-11-08"},{"lineNumber":194,"author":{"gitId":"SebasFok"},"content":"                }","lastModifiedDate":"2023-11-08"},{"lineNumber":195,"author":{"gitId":"SebasFok"},"content":"                modulesPlanned.addModule(indexToAdd, newModule);","lastModifiedDate":"2023-11-07"},{"lineNumber":196,"author":{"gitId":"SebasFok"},"content":"                modulesPerSem[targetSem - 1] +\u003d 1;","lastModifiedDate":"2023-10-30"},{"lineNumber":197,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":198,"author":{"gitId":"SebasFok"},"content":"                return;","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":200,"author":{"gitId":"SebasFok"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"SebasFok"},"content":"            throw new IllegalArgumentException(\"Please select a valid module\");","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":203,"author":{"gitId":"SebasFok"},"content":"        throw new FailPrereqException(\"Unable to add module as prerequisites not satisfied for: \" + moduleCode);","lastModifiedDate":"2023-11-07"},{"lineNumber":204,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":205,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":206,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":207,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"ryanlohyr"},"content":"     * Deletes a module from the schedule by its module code.","lastModifiedDate":"2023-11-02"},{"lineNumber":209,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"ryanlohyr"},"content":"     * @param module The module code to be deleted from the schedule.","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"ryanlohyr"},"content":"     * @throws MandatoryPrereqException If the module to be deleted is a prerequisite for other modules in the schedule.","lastModifiedDate":"2023-11-09"},{"lineNumber":212,"author":{"gitId":"ryanlohyr"},"content":"     * @throws MissingModuleException If the provided module code is not valid, the module is not in the schedule","lastModifiedDate":"2023-11-09"},{"lineNumber":213,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"ryanlohyr"},"content":"    public void deleteModule(String module) throws MandatoryPrereqException, MissingModuleException, IOException {","lastModifiedDate":"2023-11-09"},{"lineNumber":215,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":216,"author":{"gitId":"ryanlohyr"},"content":"        int targetIndex \u003d modulesPlanned.getIndexByString(module);","lastModifiedDate":"2023-11-08"},{"lineNumber":217,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":218,"author":{"gitId":"ryanlohyr"},"content":"        if (targetIndex \u003d\u003d -1) {","lastModifiedDate":"2023-11-08"},{"lineNumber":219,"author":{"gitId":"ryanlohyr"},"content":"            throw new MissingModuleException(\"Module does not exist in schedule\");","lastModifiedDate":"2023-11-06"},{"lineNumber":220,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":221,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":222,"author":{"gitId":"ryanlohyr"},"content":"        int targetSem \u003d 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"ryanlohyr"},"content":"        int moduleCount \u003d modulesPerSem[0];","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"ryanlohyr"},"content":"        while ((moduleCount - 1) \u003c targetIndex) {","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"ryanlohyr"},"content":"            moduleCount +\u003d modulesPerSem[targetSem];","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"ryanlohyr"},"content":"            targetSem +\u003d 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":229,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":230,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e requirementsFulfilledFromModule \u003d getModuleFulfilledRequirements(module);","lastModifiedDate":"2023-11-06"},{"lineNumber":231,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"ryanlohyr"},"content":"        List\u003cString\u003e modulesAheadArray;","lastModifiedDate":"2023-11-06"},{"lineNumber":233,"author":{"gitId":"ryanlohyr"},"content":"        int lastModuleIndex \u003d modulesPlanned.getMainModuleList().size() - 1;","lastModifiedDate":"2023-11-06"},{"lineNumber":234,"author":{"gitId":"ryanlohyr"},"content":"        int nextSemStartingIndex \u003d moduleCount;","lastModifiedDate":"2023-11-06"},{"lineNumber":235,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":236,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"ryanlohyr"},"content":"            modulesAheadArray \u003d modulesPlanned.getModuleCodes().subList(nextSemStartingIndex, lastModuleIndex + 1);","lastModifiedDate":"2023-11-06"},{"lineNumber":238,"author":{"gitId":"ryanlohyr"},"content":"        } catch (IndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":239,"author":{"gitId":"ryanlohyr"},"content":"            modulesAheadArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":240,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":241,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":242,"author":{"gitId":"ryanlohyr"},"content":"        for(String fulfilledModule: requirementsFulfilledFromModule ){","lastModifiedDate":"2023-11-06"},{"lineNumber":243,"author":{"gitId":"ryanlohyr"},"content":"            //over here we check if the semesters in front of us contain a module in fulfilled module","lastModifiedDate":"2023-11-06"},{"lineNumber":244,"author":{"gitId":"ryanlohyr"},"content":"            if(modulesAheadArray.contains(fulfilledModule)){","lastModifiedDate":"2023-11-06"},{"lineNumber":245,"author":{"gitId":"ryanlohyr"},"content":"                throw new MandatoryPrereqException(\"Unable to delete module. \" +","lastModifiedDate":"2023-11-08"},{"lineNumber":246,"author":{"gitId":"ryanlohyr"},"content":"                        \"This module is a mandatory prerequisite for \" + fulfilledModule);","lastModifiedDate":"2023-11-08"},{"lineNumber":247,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":248,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":249,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":250,"author":{"gitId":"ryanlohyr"},"content":"        modulesPlanned.deleteModuleByCode(module);","lastModifiedDate":"2023-11-08"},{"lineNumber":251,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":252,"author":{"gitId":"ryanlohyr"},"content":"        modulesPerSem[targetSem - 1] -\u003d 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":254,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":255,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":256,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":257,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":258,"author":{"gitId":"SebasFok"},"content":"     * Shifts a module within the student\u0027s planned schedule to a different semester.","lastModifiedDate":"2023-11-13"},{"lineNumber":259,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":260,"author":{"gitId":"SebasFok"},"content":"     * @param module      The module code to be shifted.","lastModifiedDate":"2023-11-13"},{"lineNumber":261,"author":{"gitId":"SebasFok"},"content":"     * @param targetSem   The target semester to which the module will be shifted.","lastModifiedDate":"2023-11-13"},{"lineNumber":262,"author":{"gitId":"SebasFok"},"content":"     * @throws IllegalArgumentException    If the target semester is not within the valid range (1 to 8).","lastModifiedDate":"2023-11-13"},{"lineNumber":263,"author":{"gitId":"SebasFok"},"content":"     * @throws MissingModuleException      If the module to be shifted does not exist in the schedule.","lastModifiedDate":"2023-11-13"},{"lineNumber":264,"author":{"gitId":"SebasFok"},"content":"     * @throws IllegalArgumentException    If the module is already in the target semester.","lastModifiedDate":"2023-11-13"},{"lineNumber":265,"author":{"gitId":"SebasFok"},"content":"     * @throws FailPrereqException         If shifting the module fails due to unsatisfied prerequisites.","lastModifiedDate":"2023-11-13"},{"lineNumber":266,"author":{"gitId":"SebasFok"},"content":"     * @throws MandatoryPrereqException    If shifting the module creates a mandatory prerequisite conflict.","lastModifiedDate":"2023-11-13"},{"lineNumber":267,"author":{"gitId":"SebasFok"},"content":"     * @throws InvalidObjectException      If the module does not exist in the schedule.","lastModifiedDate":"2023-11-13"},{"lineNumber":268,"author":{"gitId":"SebasFok"},"content":"     * @throws IOException                 If an IO error occurs during module shifting.","lastModifiedDate":"2023-11-13"},{"lineNumber":269,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":270,"author":{"gitId":"SebasFok"},"content":"    public void shiftModule(String module, int targetSem) throws IllegalArgumentException,","lastModifiedDate":"2023-11-08"},{"lineNumber":271,"author":{"gitId":"SebasFok"},"content":"            FailPrereqException, MandatoryPrereqException, MissingModuleException, IOException {","lastModifiedDate":"2023-11-09"},{"lineNumber":272,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":273,"author":{"gitId":"SebasFok"},"content":"        if (targetSem \u003c 1 || targetSem \u003e MAXIMUM_SEMESTERS) {","lastModifiedDate":"2023-11-08"},{"lineNumber":274,"author":{"gitId":"SebasFok"},"content":"            throw new IllegalArgumentException(\"Please select an integer from 1 to 8 for semester selection\");","lastModifiedDate":"2023-11-08"},{"lineNumber":275,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":276,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":277,"author":{"gitId":"SebasFok"},"content":"        int originalIndex \u003d modulesPlanned.getIndexByString(module);","lastModifiedDate":"2023-11-08"},{"lineNumber":278,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":279,"author":{"gitId":"SebasFok"},"content":"        if (originalIndex \u003d\u003d -1) {","lastModifiedDate":"2023-11-08"},{"lineNumber":280,"author":{"gitId":"SebasFok"},"content":"            throw new MissingModuleException(\"Module does not exist in schedule\");","lastModifiedDate":"2023-11-08"},{"lineNumber":281,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":282,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":283,"author":{"gitId":"SebasFok"},"content":"        int originalSem \u003d 1;","lastModifiedDate":"2023-11-08"},{"lineNumber":284,"author":{"gitId":"SebasFok"},"content":"        int moduleCount \u003d modulesPerSem[0];","lastModifiedDate":"2023-11-08"},{"lineNumber":285,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":286,"author":{"gitId":"SebasFok"},"content":"        while ((moduleCount - 1) \u003c originalIndex) {","lastModifiedDate":"2023-11-08"},{"lineNumber":287,"author":{"gitId":"SebasFok"},"content":"            moduleCount +\u003d modulesPerSem[originalSem];","lastModifiedDate":"2023-11-08"},{"lineNumber":288,"author":{"gitId":"SebasFok"},"content":"            originalSem +\u003d 1;","lastModifiedDate":"2023-11-08"},{"lineNumber":289,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":290,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":291,"author":{"gitId":"SebasFok"},"content":"        int indexToAdd \u003d 0;","lastModifiedDate":"2023-11-08"},{"lineNumber":292,"author":{"gitId":"SebasFok"},"content":"        for (int i \u003d 1; i \u003c targetSem; i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":293,"author":{"gitId":"SebasFok"},"content":"            indexToAdd +\u003d this.modulesPerSem[i - 1];","lastModifiedDate":"2023-11-08"},{"lineNumber":294,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":295,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":296,"author":{"gitId":"SebasFok"},"content":"        // User input sem that module is already in","lastModifiedDate":"2023-11-08"},{"lineNumber":297,"author":{"gitId":"SebasFok"},"content":"        if (originalSem \u003d\u003d targetSem) {","lastModifiedDate":"2023-11-08"},{"lineNumber":298,"author":{"gitId":"SebasFok"},"content":"            throw new IllegalArgumentException(\"Module is already in semester \" + targetSem);","lastModifiedDate":"2023-11-08"},{"lineNumber":299,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":300,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":301,"author":{"gitId":"SebasFok"},"content":"        // If shifting module earlier","lastModifiedDate":"2023-11-08"},{"lineNumber":302,"author":{"gitId":"SebasFok"},"content":"        if (originalSem \u003e targetSem) {","lastModifiedDate":"2023-11-08"},{"lineNumber":303,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":304,"author":{"gitId":"SebasFok"},"content":"            shiftModuleEarlier(module, targetSem, indexToAdd, originalSem);","lastModifiedDate":"2023-11-13"},{"lineNumber":305,"author":{"gitId":"SebasFok"},"content":"            return;","lastModifiedDate":"2023-11-08"},{"lineNumber":306,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":307,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":308,"author":{"gitId":"SebasFok"},"content":"        // If shifting module later","lastModifiedDate":"2023-11-08"},{"lineNumber":309,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":310,"author":{"gitId":"SebasFok"},"content":"        shiftModuleLater(module, targetSem, indexToAdd, originalSem);","lastModifiedDate":"2023-11-13"},{"lineNumber":311,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":312,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":313,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":314,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":315,"author":{"gitId":"SebasFok"},"content":"     * Shifts a module later within the student\u0027s planned schedule to a different semester.","lastModifiedDate":"2023-11-13"},{"lineNumber":316,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":317,"author":{"gitId":"SebasFok"},"content":"     * @param module         The module code to be shifted later.","lastModifiedDate":"2023-11-13"},{"lineNumber":318,"author":{"gitId":"SebasFok"},"content":"     * @param targetSem      The target semester to which the module will be shifted.","lastModifiedDate":"2023-11-13"},{"lineNumber":319,"author":{"gitId":"SebasFok"},"content":"     * @param indexToAdd     The index at which the module will be added in the schedule.","lastModifiedDate":"2023-11-13"},{"lineNumber":320,"author":{"gitId":"SebasFok"},"content":"     * @param originalSem    The original semester in which the module is currently placed.","lastModifiedDate":"2023-11-13"},{"lineNumber":321,"author":{"gitId":"SebasFok"},"content":"     * @throws IOException                 If an IO error occurs during module shifting.","lastModifiedDate":"2023-11-13"},{"lineNumber":322,"author":{"gitId":"SebasFok"},"content":"     * @throws MandatoryPrereqException    If shifting the module later creates a mandatory prerequisite conflict.","lastModifiedDate":"2023-11-13"},{"lineNumber":323,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":324,"author":{"gitId":"SebasFok"},"content":"    private void shiftModuleLater(String module, int targetSem, int indexToAdd, int originalSem) throws IOException,","lastModifiedDate":"2023-11-13"},{"lineNumber":325,"author":{"gitId":"SebasFok"},"content":"            MandatoryPrereqException {","lastModifiedDate":"2023-11-13"},{"lineNumber":326,"author":{"gitId":"SebasFok"},"content":"        ArrayList\u003cString\u003e requirementsFulfilledFromModule \u003d getModuleFulfilledRequirements(module);","lastModifiedDate":"2023-11-08"},{"lineNumber":327,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":328,"author":{"gitId":"SebasFok"},"content":"        List\u003cString\u003e modulesAheadArray;","lastModifiedDate":"2023-11-08"},{"lineNumber":329,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":330,"author":{"gitId":"SebasFok"},"content":"        int modulesAheadFromIndex \u003d 0;","lastModifiedDate":"2023-11-08"},{"lineNumber":331,"author":{"gitId":"SebasFok"},"content":"        int modulesAheadToIndex\u003d 0;","lastModifiedDate":"2023-11-08"},{"lineNumber":332,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":333,"author":{"gitId":"SebasFok"},"content":"        for (int i \u003d 1; i \u003c originalSem + 1; i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":334,"author":{"gitId":"SebasFok"},"content":"            modulesAheadFromIndex +\u003d this.modulesPerSem[i - 1];","lastModifiedDate":"2023-11-08"},{"lineNumber":335,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":336,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":337,"author":{"gitId":"SebasFok"},"content":"        for (int i \u003d 1; i \u003c targetSem + 1; i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":338,"author":{"gitId":"SebasFok"},"content":"            modulesAheadToIndex +\u003d this.modulesPerSem[i - 1];","lastModifiedDate":"2023-11-08"},{"lineNumber":339,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":340,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":341,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-11-08"},{"lineNumber":342,"author":{"gitId":"SebasFok"},"content":"            modulesAheadArray \u003d modulesPlanned.getModuleCodes()","lastModifiedDate":"2023-11-08"},{"lineNumber":343,"author":{"gitId":"SebasFok"},"content":"                    .subList(modulesAheadFromIndex, modulesAheadToIndex);","lastModifiedDate":"2023-11-08"},{"lineNumber":344,"author":{"gitId":"SebasFok"},"content":"        } catch (IndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2023-11-08"},{"lineNumber":345,"author":{"gitId":"SebasFok"},"content":"            modulesAheadArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-08"},{"lineNumber":346,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":347,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":348,"author":{"gitId":"SebasFok"},"content":"        for(String fulfilledModule: requirementsFulfilledFromModule ){","lastModifiedDate":"2023-11-08"},{"lineNumber":349,"author":{"gitId":"SebasFok"},"content":"            //over here we check if the semesters in front of us contain a module in fulfilled module","lastModifiedDate":"2023-11-08"},{"lineNumber":350,"author":{"gitId":"SebasFok"},"content":"            if(modulesAheadArray.contains(fulfilledModule)){","lastModifiedDate":"2023-11-08"},{"lineNumber":351,"author":{"gitId":"SebasFok"},"content":"                throw new MandatoryPrereqException(\"Unable to shift module. \" +","lastModifiedDate":"2023-11-08"},{"lineNumber":352,"author":{"gitId":"SebasFok"},"content":"                        \"This module is a mandatory prerequisite for \" + fulfilledModule);","lastModifiedDate":"2023-11-08"},{"lineNumber":353,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":354,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":355,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":356,"author":{"gitId":"SebasFok"},"content":"        //module shifting will be here","lastModifiedDate":"2023-11-08"},{"lineNumber":357,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":358,"author":{"gitId":"SebasFok"},"content":"        Module moduleToBeShifted \u003d getModule(module);","lastModifiedDate":"2023-11-08"},{"lineNumber":359,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":360,"author":{"gitId":"SebasFok"},"content":"        modulesPlanned.deleteModule(moduleToBeShifted);","lastModifiedDate":"2023-11-08"},{"lineNumber":361,"author":{"gitId":"SebasFok"},"content":"        modulesPerSem[originalSem - 1] -\u003d 1;","lastModifiedDate":"2023-11-08"},{"lineNumber":362,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":363,"author":{"gitId":"SebasFok"},"content":"        modulesPlanned.addModule(indexToAdd - 1, moduleToBeShifted);","lastModifiedDate":"2023-11-08"},{"lineNumber":364,"author":{"gitId":"SebasFok"},"content":"        modulesPerSem[targetSem - 1] +\u003d 1;","lastModifiedDate":"2023-11-08"},{"lineNumber":365,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":366,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":367,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":368,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":369,"author":{"gitId":"SebasFok"},"content":"     * Shifts a module earlier within the student\u0027s planned schedule to a different semester.","lastModifiedDate":"2023-11-13"},{"lineNumber":370,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":371,"author":{"gitId":"SebasFok"},"content":"     * @param module         The module code to be shifted earlier.","lastModifiedDate":"2023-11-13"},{"lineNumber":372,"author":{"gitId":"SebasFok"},"content":"     * @param targetSem      The target semester to which the module will be shifted.","lastModifiedDate":"2023-11-13"},{"lineNumber":373,"author":{"gitId":"SebasFok"},"content":"     * @param indexToAdd     The index at which the module will be added in the schedule.","lastModifiedDate":"2023-11-13"},{"lineNumber":374,"author":{"gitId":"SebasFok"},"content":"     * @param originalSem    The original semester in which the module is currently placed.","lastModifiedDate":"2023-11-13"},{"lineNumber":375,"author":{"gitId":"SebasFok"},"content":"     * @throws InvalidObjectException      If the module does not exist in the schedule.","lastModifiedDate":"2023-11-13"},{"lineNumber":376,"author":{"gitId":"SebasFok"},"content":"     * @throws FailPrereqException         If shifting the module earlier fails due to unsatisfied prerequisites.","lastModifiedDate":"2023-11-13"},{"lineNumber":377,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":378,"author":{"gitId":"SebasFok"},"content":"    private void shiftModuleEarlier(String module, int targetSem, int indexToAdd, int originalSem)","lastModifiedDate":"2023-11-13"},{"lineNumber":379,"author":{"gitId":"SebasFok"},"content":"            throws InvalidObjectException, FailPrereqException {","lastModifiedDate":"2023-11-13"},{"lineNumber":380,"author":{"gitId":"SebasFok"},"content":"        //Sub list as we only want modules before the current target semester","lastModifiedDate":"2023-11-13"},{"lineNumber":381,"author":{"gitId":"SebasFok"},"content":"        List\u003cString\u003e plannedModulesArray \u003d modulesPlanned.getModuleCodes().subList(0, indexToAdd);","lastModifiedDate":"2023-11-13"},{"lineNumber":382,"author":{"gitId":"SebasFok"},"content":"        ModuleList plannedModules \u003d new ModuleList(String.join(\" \", plannedModulesArray));","lastModifiedDate":"2023-11-13"},{"lineNumber":383,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":384,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-11-13"},{"lineNumber":385,"author":{"gitId":"SebasFok"},"content":"            if (satisfiesAllPrereq(module, plannedModules)) {","lastModifiedDate":"2023-11-13"},{"lineNumber":386,"author":{"gitId":"SebasFok"},"content":"                //module shifting will be here","lastModifiedDate":"2023-11-13"},{"lineNumber":387,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":388,"author":{"gitId":"SebasFok"},"content":"                Module moduleToBeShifted \u003d getModule(module);","lastModifiedDate":"2023-11-13"},{"lineNumber":389,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":390,"author":{"gitId":"SebasFok"},"content":"                modulesPlanned.deleteModule(moduleToBeShifted);","lastModifiedDate":"2023-11-13"},{"lineNumber":391,"author":{"gitId":"SebasFok"},"content":"                modulesPerSem[originalSem - 1] -\u003d 1;","lastModifiedDate":"2023-11-13"},{"lineNumber":392,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":393,"author":{"gitId":"SebasFok"},"content":"                modulesPlanned.addModule(indexToAdd, moduleToBeShifted);","lastModifiedDate":"2023-11-13"},{"lineNumber":394,"author":{"gitId":"SebasFok"},"content":"                modulesPerSem[targetSem - 1] +\u003d 1;","lastModifiedDate":"2023-11-13"},{"lineNumber":395,"author":{"gitId":"SebasFok"},"content":"                return;","lastModifiedDate":"2023-11-13"},{"lineNumber":396,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-13"},{"lineNumber":397,"author":{"gitId":"SebasFok"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":398,"author":{"gitId":"SebasFok"},"content":"            throw new IllegalArgumentException(\"Please select a valid module\");","lastModifiedDate":"2023-11-13"},{"lineNumber":399,"author":{"gitId":"SebasFok"},"content":"        } catch (InvalidObjectException e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":400,"author":{"gitId":"SebasFok"},"content":"            throw new InvalidObjectException(\"Module does not exist in the schedule.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":401,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":402,"author":{"gitId":"SebasFok"},"content":"        throw new FailPrereqException(\"Unable to shift module as prerequisites will not be satisfied for: \"","lastModifiedDate":"2023-11-13"},{"lineNumber":403,"author":{"gitId":"SebasFok"},"content":"                + module);","lastModifiedDate":"2023-11-13"},{"lineNumber":404,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":405,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":406,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":407,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":408,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves a specific module from the planned modules based on its module code.","lastModifiedDate":"2023-11-13"},{"lineNumber":409,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":410,"author":{"gitId":"janelleenqi"},"content":"     * @param moduleCode The module code of the module to retrieve.","lastModifiedDate":"2023-11-13"},{"lineNumber":411,"author":{"gitId":"janelleenqi"},"content":"     * @return The Module object with the specified module code.","lastModifiedDate":"2023-11-13"},{"lineNumber":412,"author":{"gitId":"janelleenqi"},"content":"     * @throws InvalidObjectException If the module with the given code is not found.","lastModifiedDate":"2023-11-13"},{"lineNumber":413,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":414,"author":{"gitId":"janelleenqi"},"content":"    public Module getModule(String moduleCode) throws InvalidObjectException {","lastModifiedDate":"2023-11-06"},{"lineNumber":415,"author":{"gitId":"janelleenqi"},"content":"        return modulesPlanned.getModule(moduleCode);","lastModifiedDate":"2023-11-06"},{"lineNumber":416,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":417,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":418,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":419,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":420,"author":{"gitId":"ryanlohyr"},"content":"     * Completes the given module, checking prerequisites if applicable.","lastModifiedDate":"2023-11-13"},{"lineNumber":421,"author":{"gitId":"ryanlohyr"},"content":"     * @param module        The module to be completed.","lastModifiedDate":"2023-11-13"},{"lineNumber":422,"author":{"gitId":"ryanlohyr"},"content":"     * @param modulePrereq The list of prerequisites for the module.","lastModifiedDate":"2023-11-13"},{"lineNumber":423,"author":{"gitId":"ryanlohyr"},"content":"     * @throws FailPrereqException   If prerequisites are not met.","lastModifiedDate":"2023-11-13"},{"lineNumber":424,"author":{"gitId":"ryanlohyr"},"content":"     * @throws InvalidObjectException If the module is invalid.","lastModifiedDate":"2023-11-13"},{"lineNumber":425,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":426,"author":{"gitId":"ryanlohyr"},"content":"    public void completeModule(Module module, ArrayList\u003cString\u003e modulePrereq) throws","lastModifiedDate":"2023-11-08"},{"lineNumber":427,"author":{"gitId":"ryanlohyr"},"content":"            FailPrereqException,","lastModifiedDate":"2023-11-08"},{"lineNumber":428,"author":{"gitId":"ryanlohyr"},"content":"            InvalidObjectException {","lastModifiedDate":"2023-11-08"},{"lineNumber":429,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":430,"author":{"gitId":"ryanlohyr"},"content":"        String moduleCode \u003d module.getModuleCode();","lastModifiedDate":"2023-11-08"},{"lineNumber":431,"author":{"gitId":"ryanlohyr"},"content":"        int targetIndex \u003d modulesPlanned.getIndexByString(moduleCode);","lastModifiedDate":"2023-11-08"},{"lineNumber":432,"author":{"gitId":"ryanlohyr"},"content":"        int targetSem \u003d 1;","lastModifiedDate":"2023-11-08"},{"lineNumber":433,"author":{"gitId":"ryanlohyr"},"content":"        int moduleCount \u003d modulesPerSem[0];","lastModifiedDate":"2023-11-08"},{"lineNumber":434,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":435,"author":{"gitId":"ryanlohyr"},"content":"        // finding the index of the target module","lastModifiedDate":"2023-11-13"},{"lineNumber":436,"author":{"gitId":"ryanlohyr"},"content":"        while ((moduleCount - 1) \u003c targetIndex) {","lastModifiedDate":"2023-11-08"},{"lineNumber":437,"author":{"gitId":"ryanlohyr"},"content":"            moduleCount +\u003d modulesPerSem[targetSem];","lastModifiedDate":"2023-11-08"},{"lineNumber":438,"author":{"gitId":"ryanlohyr"},"content":"            targetSem +\u003d 1;","lastModifiedDate":"2023-11-08"},{"lineNumber":439,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":440,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":441,"author":{"gitId":"ryanlohyr"},"content":"        //Array of modules that are before target module","lastModifiedDate":"2023-11-13"},{"lineNumber":442,"author":{"gitId":"ryanlohyr"},"content":"        List\u003cString\u003e partialModulesPlannedArray \u003d modulesPlanned.getModuleCodes().subList(0, (moduleCount));","lastModifiedDate":"2023-11-08"},{"lineNumber":443,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":444,"author":{"gitId":"ryanlohyr"},"content":"        //if there are no prerequisites, we can just mark the module as complicated","lastModifiedDate":"2023-11-13"},{"lineNumber":445,"author":{"gitId":"ryanlohyr"},"content":"        if(modulePrereq \u003d\u003d null){","lastModifiedDate":"2023-11-08"},{"lineNumber":446,"author":{"gitId":"ryanlohyr"},"content":"            module.markModuleAsCompleted();","lastModifiedDate":"2023-11-13"},{"lineNumber":447,"author":{"gitId":"ryanlohyr"},"content":"            return;","lastModifiedDate":"2023-11-13"},{"lineNumber":448,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":449,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":450,"author":{"gitId":"ryanlohyr"},"content":"        for(String currModule: modulePrereq){","lastModifiedDate":"2023-11-08"},{"lineNumber":451,"author":{"gitId":"ryanlohyr"},"content":"            if(partialModulesPlannedArray.contains(currModule) \u0026\u0026 !getModule(currModule).getCompletionStatus()){","lastModifiedDate":"2023-11-08"},{"lineNumber":452,"author":{"gitId":"ryanlohyr"},"content":"                throw new FailPrereqException(moduleCode);","lastModifiedDate":"2023-11-08"},{"lineNumber":453,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":454,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":455,"author":{"gitId":"ryanlohyr"},"content":"        module.markModuleAsCompleted();","lastModifiedDate":"2023-11-08"},{"lineNumber":456,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":457,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":458,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":459,"author":{"gitId":"ryanlohyr"},"content":"     * Adds a module to the schedule for a specified semester.","lastModifiedDate":"2023-11-04"},{"lineNumber":460,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":461,"author":{"gitId":"ryanlohyr"},"content":"     * @param moduleCode The module code to be added.","lastModifiedDate":"2023-11-06"},{"lineNumber":462,"author":{"gitId":"ryanlohyr"},"content":"     * @param targetSem The target semester (an integer from 1 to 8) in which to add the module.","lastModifiedDate":"2023-11-04"},{"lineNumber":463,"author":{"gitId":"ryanlohyr"},"content":"     * @throws IllegalArgumentException If the provided semester is out of the valid range (1 to 8),","lastModifiedDate":"2023-11-04"},{"lineNumber":464,"author":{"gitId":"ryanlohyr"},"content":"     *     or if the module already exists in the schedule, or if the module is not valid.","lastModifiedDate":"2023-11-04"},{"lineNumber":465,"author":{"gitId":"ryanlohyr"},"content":"     * @throws InvalidObjectException If the module is null.","lastModifiedDate":"2023-11-04"},{"lineNumber":466,"author":{"gitId":"ryanlohyr"},"content":"     * @throws FailPrereqException If the prerequisites for the module are not satisfied","lastModifiedDate":"2023-11-04"},{"lineNumber":467,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":468,"author":{"gitId":"ryanlohyr"},"content":"    public void addModuleWithoutCheckingPrereq(String moduleCode, int targetSem)","lastModifiedDate":"2023-11-06"},{"lineNumber":469,"author":{"gitId":"ryanlohyr"},"content":"            throws InvalidObjectException, IllegalArgumentException {","lastModifiedDate":"2023-11-06"},{"lineNumber":470,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":471,"author":{"gitId":"ryanlohyr"},"content":"        if (targetSem \u003c 1 || targetSem \u003e MAXIMUM_SEMESTERS) {","lastModifiedDate":"2023-11-04"},{"lineNumber":472,"author":{"gitId":"ryanlohyr"},"content":"            throw new IllegalArgumentException(\"Please select an integer from 1 to 8 for semester selection\");","lastModifiedDate":"2023-11-04"},{"lineNumber":473,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":474,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":475,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-04"},{"lineNumber":476,"author":{"gitId":"ryanlohyr"},"content":"            if (modulesPlanned.existsByCode(moduleCode)) {","lastModifiedDate":"2023-11-06"},{"lineNumber":477,"author":{"gitId":"ryanlohyr"},"content":"                throw new IllegalArgumentException(\"Module already exists in the schedule\");","lastModifiedDate":"2023-11-04"},{"lineNumber":478,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":479,"author":{"gitId":"ryanlohyr"},"content":"        } catch (InvalidObjectException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":480,"author":{"gitId":"ryanlohyr"},"content":"            throw new InvalidObjectException(\"Module cannot be null\");","lastModifiedDate":"2023-11-04"},{"lineNumber":481,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":482,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":483,"author":{"gitId":"ryanlohyr"},"content":"        int indexToAdd \u003d 0;","lastModifiedDate":"2023-11-04"},{"lineNumber":484,"author":{"gitId":"ryanlohyr"},"content":"        for (int i \u003d 1; i \u003c targetSem; i++) {","lastModifiedDate":"2023-11-04"},{"lineNumber":485,"author":{"gitId":"ryanlohyr"},"content":"            indexToAdd +\u003d this.modulesPerSem[i - 1];","lastModifiedDate":"2023-11-04"},{"lineNumber":486,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":487,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":488,"author":{"gitId":"ryanlohyr"},"content":"        //reuse module data if existed","lastModifiedDate":"2023-11-06"},{"lineNumber":489,"author":{"gitId":"ryanlohyr"},"content":"        Module module \u003d completedModules.get(moduleCode);","lastModifiedDate":"2023-11-06"},{"lineNumber":490,"author":{"gitId":"ryanlohyr"},"content":"        if (module !\u003d null) {","lastModifiedDate":"2023-11-06"},{"lineNumber":491,"author":{"gitId":"ryanlohyr"},"content":"            modulesPlanned.addModule(indexToAdd, module);","lastModifiedDate":"2023-11-06"},{"lineNumber":492,"author":{"gitId":"ryanlohyr"},"content":"            modulesPerSem[targetSem - 1] +\u003d 1;","lastModifiedDate":"2023-11-06"},{"lineNumber":493,"author":{"gitId":"ryanlohyr"},"content":"            return;","lastModifiedDate":"2023-11-06"},{"lineNumber":494,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":495,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":496,"author":{"gitId":"ryanlohyr"},"content":"        modulesPlanned.addModule(indexToAdd, new Module(moduleCode));","lastModifiedDate":"2023-11-06"},{"lineNumber":497,"author":{"gitId":"ryanlohyr"},"content":"        modulesPerSem[targetSem - 1] +\u003d 1;","lastModifiedDate":"2023-11-04"},{"lineNumber":498,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":499,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":500,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":501,"author":{"gitId":"ryanlohyr"},"content":"     * Prints the student\u0027s course schedule, displaying modules organized by semesters.","lastModifiedDate":"2023-10-31"},{"lineNumber":502,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":503,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":504,"author":{"gitId":"ryanlohyr"},"content":"    public void printMainModuleList() {","lastModifiedDate":"2023-10-30"},{"lineNumber":505,"author":{"gitId":"ryanlohyr"},"content":"        printSemesterPlanner(modulesPerSem, modulesPlanned);","lastModifiedDate":"2023-11-06"},{"lineNumber":506,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":507,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":508,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":509,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":510,"author":{"gitId":"ryanlohyr"},"content":"     * Generates a recommended schedule for a given course based on its requirements and prerequisites.","lastModifiedDate":"2023-11-06"},{"lineNumber":511,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":512,"author":{"gitId":"ryanlohyr"},"content":"     * @param course The course for which to generate a recommended schedule.","lastModifiedDate":"2023-11-06"},{"lineNumber":513,"author":{"gitId":"ryanlohyr"},"content":"     * @return An ArrayList of strings representing the recommended schedule in order of completion.","lastModifiedDate":"2023-11-06"},{"lineNumber":514,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":515,"author":{"gitId":"ryanlohyr"},"content":"    public ArrayList\u003cString\u003e generateRecommendedSchedule(String course) throws IOException {","lastModifiedDate":"2023-11-09"},{"lineNumber":516,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e requirements \u003d getRequirements(course);","lastModifiedDate":"2023-11-06"},{"lineNumber":517,"author":{"gitId":"ryanlohyr"},"content":"        HashMap\u003cString, Integer\u003e degreeMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":518,"author":{"gitId":"ryanlohyr"},"content":"        Queue\u003cString\u003e q \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":519,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e schedule \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":520,"author":{"gitId":"ryanlohyr"},"content":"        HashMap\u003cString, ArrayList\u003cString\u003e\u003e adjacencyList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":521,"author":{"gitId":"ryanlohyr"},"content":"        this.prereqMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":522,"author":{"gitId":"ryanlohyr"},"content":"        //initialisation","lastModifiedDate":"2023-11-06"},{"lineNumber":523,"author":{"gitId":"ryanlohyr"},"content":"        for(String requirement: requirements) {","lastModifiedDate":"2023-11-06"},{"lineNumber":524,"author":{"gitId":"ryanlohyr"},"content":"            adjacencyList.put(requirement, new ArrayList\u003c\u003e());","lastModifiedDate":"2023-11-06"},{"lineNumber":525,"author":{"gitId":"ryanlohyr"},"content":"            degreeMap.put(requirement, 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":526,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":527,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":528,"author":{"gitId":"ryanlohyr"},"content":"        for (String requirement : requirements) {","lastModifiedDate":"2023-11-06"},{"lineNumber":529,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e prereqArray;","lastModifiedDate":"2023-11-07"},{"lineNumber":530,"author":{"gitId":"ryanlohyr"},"content":"            try{","lastModifiedDate":"2023-11-07"},{"lineNumber":531,"author":{"gitId":"ryanlohyr"},"content":"                prereqArray \u003d getModulePrereqBasedOnCourse(requirement, course);","lastModifiedDate":"2023-11-07"},{"lineNumber":532,"author":{"gitId":"ryanlohyr"},"content":"            } catch (InvalidPrereqException e){","lastModifiedDate":"2023-11-07"},{"lineNumber":533,"author":{"gitId":"ryanlohyr"},"content":"                prereqArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-07"},{"lineNumber":534,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":535,"author":{"gitId":"ryanlohyr"},"content":"            if (prereqArray \u003d\u003d null) {","lastModifiedDate":"2023-11-06"},{"lineNumber":536,"author":{"gitId":"ryanlohyr"},"content":"                prereqArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":537,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":538,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":539,"author":{"gitId":"ryanlohyr"},"content":"            prereqMap.put(requirement, prereqArray);","lastModifiedDate":"2023-11-06"},{"lineNumber":540,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":541,"author":{"gitId":"ryanlohyr"},"content":"            //we need to create an adjacency list to add all the connections","lastModifiedDate":"2023-11-06"},{"lineNumber":542,"author":{"gitId":"ryanlohyr"},"content":"            // from pre req -\u003e item","lastModifiedDate":"2023-11-06"},{"lineNumber":543,"author":{"gitId":"ryanlohyr"},"content":"            for (String s : prereqArray) {","lastModifiedDate":"2023-11-06"},{"lineNumber":544,"author":{"gitId":"ryanlohyr"},"content":"                adjacencyList.get(s).add(requirement);","lastModifiedDate":"2023-11-06"},{"lineNumber":545,"author":{"gitId":"ryanlohyr"},"content":"                Integer value \u003d degreeMap.get(requirement) + 1;","lastModifiedDate":"2023-11-06"},{"lineNumber":546,"author":{"gitId":"ryanlohyr"},"content":"                degreeMap.put(requirement, value);","lastModifiedDate":"2023-11-06"},{"lineNumber":547,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":548,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":549,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":550,"author":{"gitId":"ryanlohyr"},"content":"        for (String key : degreeMap.keySet()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":551,"author":{"gitId":"ryanlohyr"},"content":"            Integer value \u003d degreeMap.get(key);","lastModifiedDate":"2023-11-06"},{"lineNumber":552,"author":{"gitId":"ryanlohyr"},"content":"            if(value \u003d\u003d 0){","lastModifiedDate":"2023-11-06"},{"lineNumber":553,"author":{"gitId":"ryanlohyr"},"content":"                q.offer(key);","lastModifiedDate":"2023-11-06"},{"lineNumber":554,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":555,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":556,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":557,"author":{"gitId":"ryanlohyr"},"content":"        while(!q.isEmpty()){","lastModifiedDate":"2023-11-06"},{"lineNumber":558,"author":{"gitId":"ryanlohyr"},"content":"            String curr \u003d q.poll();","lastModifiedDate":"2023-11-06"},{"lineNumber":559,"author":{"gitId":"ryanlohyr"},"content":"            schedule.add(curr);","lastModifiedDate":"2023-11-06"},{"lineNumber":560,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e currReq \u003d adjacencyList.get(curr);","lastModifiedDate":"2023-11-06"},{"lineNumber":561,"author":{"gitId":"ryanlohyr"},"content":"            for (String s : currReq) {","lastModifiedDate":"2023-11-06"},{"lineNumber":562,"author":{"gitId":"ryanlohyr"},"content":"                int num \u003d degreeMap.get(s) - 1;","lastModifiedDate":"2023-11-06"},{"lineNumber":563,"author":{"gitId":"ryanlohyr"},"content":"                degreeMap.put(s, num);","lastModifiedDate":"2023-11-06"},{"lineNumber":564,"author":{"gitId":"ryanlohyr"},"content":"                if (num \u003d\u003d 0) {","lastModifiedDate":"2023-11-06"},{"lineNumber":565,"author":{"gitId":"ryanlohyr"},"content":"                    q.offer(s);","lastModifiedDate":"2023-11-06"},{"lineNumber":566,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-11-06"},{"lineNumber":567,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":568,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":569,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":570,"author":{"gitId":"ryanlohyr"},"content":"        return schedule;","lastModifiedDate":"2023-11-06"},{"lineNumber":571,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":572,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"SebasFok":261,"ryanlohyr":274,"janelleenqi":32,"rohitcube":5}},{"path":"src/main/java/seedu/duke/models/schema/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.controllers.ModuleServiceController;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.InvalidModifyArgumentException;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.FailPrereqException;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.InvalidPrereqException;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.MandatoryPrereqException;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.MissingModuleException;","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.TimetableUnavailableException;","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"rohitcube"},"content":"import seedu.duke.utils.Parser;","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.Prerequisite.getModulePrereqBasedOnCourse;","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.storage.StorageManager.getRequirements;","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.utils.errors.HttpError.displaySocketError;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.views.CommandLineView.displaySuccessfulCompleteMessage;","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.views.TimetableUserGuideView.addOrRecommendGuide;","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":" * The Student class represents a student with a name, major, and module schedule.","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"SebasFok"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"public class Student {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"rohitcube"},"content":"    private static int counter;","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"    private String name;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"    private String major;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"    private Schedule schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"    private String year;","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"    private int completedModuleCredits;","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    private ArrayList\u003cString\u003e majorModuleCodes;","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"rohitcube"},"content":"    private ModuleList currentSemesterModules;","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"rohitcube"},"content":"    private Timetable timetable;","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"     * Constructs a student with a name, major, and module schedule.","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"     * @param name     The name of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"     * @param major    The major of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"     * @param schedule The module schedule of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"    public Student(String name, String major, Schedule schedule) {","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"SebasFok"},"content":"        this.major \u003d major;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"SebasFok"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"        this.year \u003d null;","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"rohitcube"},"content":"        this.timetable \u003d Timetable.timetable;","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"rohitcube"},"content":"        counter++;","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"SebasFok"},"content":"     * Constructs a student with a null name, null major, and an empty module schedule.","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"SebasFok"},"content":"    public Student() {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"SebasFok"},"content":"        this.name \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"SebasFok"},"content":"        this.major \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"SebasFok"},"content":"        this.schedule \u003d new Schedule();","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"rohitcube"},"content":"        this.timetable \u003d Timetable.timetable;","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"        this.year \u003d null;","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"rohitcube"},"content":"    public static int getNumOfInstances() {","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"rohitcube"},"content":"        return counter;","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"SebasFok"},"content":"     * Retrieves the module schedule of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"SebasFok"},"content":"     * @return The module schedule of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"SebasFok"},"content":"    public Schedule getSchedule() {","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"SebasFok"},"content":"        return schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"rohitcube"},"content":"     * Sets the class schedule of the student.","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"rohitcube"},"content":"     * @param schedule The new module schedule.","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"rohitcube"},"content":"    public void setSchedule(Schedule schedule) {","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"rohitcube"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"    public int getCurrentModuleCredits() {","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"        return completedModuleCredits;","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"SebasFok"},"content":"     * Retrieves the name of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"SebasFok"},"content":"     * @return The name of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"SebasFok"},"content":"    public String getName() {","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"SebasFok"},"content":"        return name;","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-08"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"     * Sets the name of the student.","lastModifiedDate":"2023-11-08"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"     * @param name The new name of the student.","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"    public void setName(String name) {","lastModifiedDate":"2023-11-08"},{"lineNumber":111,"author":{"gitId":"ryanlohyr"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-11-08"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":113,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"ryanlohyr"},"content":"     * Retrieves the major of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"ryanlohyr"},"content":"     * @return The major of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"ryanlohyr"},"content":"     * @throws NullPointerException If the major has not been set (i.e., it is `null`).","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"ryanlohyr"},"content":"    public String getMajor() {","lastModifiedDate":"2023-11-03"},{"lineNumber":122,"author":{"gitId":"ryanlohyr"},"content":"        return major;","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":126,"author":{"gitId":"ryanlohyr"},"content":"     * Sets the major of the student.","lastModifiedDate":"2023-11-08"},{"lineNumber":127,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":128,"author":{"gitId":"ryanlohyr"},"content":"     * @param major The new major to set.","lastModifiedDate":"2023-11-08"},{"lineNumber":129,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":130,"author":{"gitId":"ryanlohyr"},"content":"    public void setMajor(String major) {","lastModifiedDate":"2023-11-08"},{"lineNumber":131,"author":{"gitId":"ryanlohyr"},"content":"        this.major \u003d major;","lastModifiedDate":"2023-11-08"},{"lineNumber":132,"author":{"gitId":"ryanlohyr"},"content":"        majorModuleCodes \u003d getRequirements(major);","lastModifiedDate":"2023-11-08"},{"lineNumber":133,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":134,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":135,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"     * Sets the first major without the major command","lastModifiedDate":"2023-11-03"},{"lineNumber":137,"author":{"gitId":"ryanlohyr"},"content":"     * @author Isaiah Cerven","lastModifiedDate":"2023-11-03"},{"lineNumber":138,"author":{"gitId":"ryanlohyr"},"content":"     * @param userInput must be validated in parser as CS or CEG","lastModifiedDate":"2023-11-03"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":140,"author":{"gitId":"ryanlohyr"},"content":"    public void setFirstMajor(String userInput) {","lastModifiedDate":"2023-11-03"},{"lineNumber":141,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-03"},{"lineNumber":142,"author":{"gitId":"ryanlohyr"},"content":"            setMajor(userInput.toUpperCase());","lastModifiedDate":"2023-11-03"},{"lineNumber":143,"author":{"gitId":"ryanlohyr"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-11-03"},{"lineNumber":144,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(e);","lastModifiedDate":"2023-11-03"},{"lineNumber":145,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":146,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":147,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":148,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":149,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":150,"author":{"gitId":"SebasFok"},"content":"     * Adds a module to the student\u0027s schedule for a specified semester.","lastModifiedDate":"2023-11-13"},{"lineNumber":151,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":152,"author":{"gitId":"SebasFok"},"content":"     * @param moduleCode The code of the module to be added.","lastModifiedDate":"2023-11-13"},{"lineNumber":153,"author":{"gitId":"SebasFok"},"content":"     * @param targetSem  The semester in which the module will be added.","lastModifiedDate":"2023-11-13"},{"lineNumber":154,"author":{"gitId":"SebasFok"},"content":"     * @throws IllegalArgumentException If the target semester is not valid.","lastModifiedDate":"2023-11-13"},{"lineNumber":155,"author":{"gitId":"SebasFok"},"content":"     * @throws InvalidObjectException   If the module code is invalid or does not exist.","lastModifiedDate":"2023-11-13"},{"lineNumber":156,"author":{"gitId":"SebasFok"},"content":"     * @throws FailPrereqException      If the module cannot be added due to unsatisfied prerequisites.","lastModifiedDate":"2023-11-13"},{"lineNumber":157,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":158,"author":{"gitId":"SebasFok"},"content":"    public void addModuleToSchedule(String moduleCode, int targetSem) throws IllegalArgumentException,","lastModifiedDate":"2023-11-13"},{"lineNumber":159,"author":{"gitId":"SebasFok"},"content":"            InvalidObjectException, FailPrereqException {","lastModifiedDate":"2023-11-08"},{"lineNumber":160,"author":{"gitId":"SebasFok"},"content":"        this.schedule.addModule(moduleCode, targetSem);","lastModifiedDate":"2023-11-03"},{"lineNumber":161,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":162,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":163,"author":{"gitId":"SebasFok"},"content":"    public ArrayList\u003cString\u003e generateRecommendedSchedule() throws IOException {","lastModifiedDate":"2023-11-13"},{"lineNumber":164,"author":{"gitId":"SebasFok"},"content":"        return this.schedule.generateRecommendedSchedule(this.major);","lastModifiedDate":"2023-11-13"},{"lineNumber":165,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"SebasFok"},"content":"    public void addRecommendedSchedule(ArrayList\u003cString\u003e schedule){","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"SebasFok"},"content":"        this.schedule.addReccToSchedule(schedule);","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":171,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":172,"author":{"gitId":"SebasFok"},"content":"     * Completes a module with the specified module code.","lastModifiedDate":"2023-11-03"},{"lineNumber":173,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":174,"author":{"gitId":"SebasFok"},"content":"     * @param moduleCode The code of the module to be completed.","lastModifiedDate":"2023-11-03"},{"lineNumber":175,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":176,"author":{"gitId":"SebasFok"},"content":"    public void completeModuleSchedule(String moduleCode) throws InvalidObjectException,","lastModifiedDate":"2023-11-08"},{"lineNumber":177,"author":{"gitId":"SebasFok"},"content":"            FailPrereqException, InvalidPrereqException {","lastModifiedDate":"2023-11-08"},{"lineNumber":178,"author":{"gitId":"SebasFok"},"content":"        try{","lastModifiedDate":"2023-11-09"},{"lineNumber":179,"author":{"gitId":"SebasFok"},"content":"            Module module \u003d schedule.getModule(moduleCode);","lastModifiedDate":"2023-11-06"},{"lineNumber":180,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":181,"author":{"gitId":"SebasFok"},"content":"            ArrayList\u003cString\u003e modulePrereq \u003d getModulePrereqBasedOnCourse(moduleCode,this.getMajor());","lastModifiedDate":"2023-11-08"},{"lineNumber":182,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":183,"author":{"gitId":"SebasFok"},"content":"            schedule.completeModule(module,modulePrereq);","lastModifiedDate":"2023-11-08"},{"lineNumber":184,"author":{"gitId":"SebasFok"},"content":"            this.completedModuleCredits +\u003d module.getModuleCredits();","lastModifiedDate":"2023-11-03"},{"lineNumber":185,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":186,"author":{"gitId":"SebasFok"},"content":"            displaySuccessfulCompleteMessage();","lastModifiedDate":"2023-11-07"},{"lineNumber":187,"author":{"gitId":"SebasFok"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-09"},{"lineNumber":188,"author":{"gitId":"SebasFok"},"content":"            displaySocketError();","lastModifiedDate":"2023-11-09"},{"lineNumber":189,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":190,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":191,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":192,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":193,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":195,"author":{"gitId":"ryanlohyr"},"content":"     * Deletes a module with the specified module code. This method also updates the completed","lastModifiedDate":"2023-11-03"},{"lineNumber":196,"author":{"gitId":"ryanlohyr"},"content":"     * module credits and removes the module from the planned modules list.","lastModifiedDate":"2023-11-03"},{"lineNumber":197,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":198,"author":{"gitId":"ryanlohyr"},"content":"     * @param moduleCode The code of the module to be deleted.","lastModifiedDate":"2023-11-03"},{"lineNumber":199,"author":{"gitId":"ryanlohyr"},"content":"     * @throws MandatoryPrereqException If deleting the module fails due to prerequisite dependencies.","lastModifiedDate":"2023-11-09"},{"lineNumber":200,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":201,"author":{"gitId":"ryanlohyr"},"content":"    public void deleteModuleFromSchedule(String moduleCode) throws","lastModifiedDate":"2023-11-13"},{"lineNumber":202,"author":{"gitId":"ryanlohyr"},"content":"            MandatoryPrereqException,","lastModifiedDate":"2023-11-09"},{"lineNumber":203,"author":{"gitId":"ryanlohyr"},"content":"            MissingModuleException,","lastModifiedDate":"2023-11-09"},{"lineNumber":204,"author":{"gitId":"ryanlohyr"},"content":"            IOException {","lastModifiedDate":"2023-11-09"},{"lineNumber":205,"author":{"gitId":"ryanlohyr"},"content":"        try{","lastModifiedDate":"2023-11-08"},{"lineNumber":206,"author":{"gitId":"ryanlohyr"},"content":"            Module module \u003d schedule.getModule(moduleCode);","lastModifiedDate":"2023-11-08"},{"lineNumber":207,"author":{"gitId":"ryanlohyr"},"content":"            schedule.deleteModule(moduleCode);","lastModifiedDate":"2023-11-06"},{"lineNumber":208,"author":{"gitId":"ryanlohyr"},"content":"            if(module.getCompletionStatus()){","lastModifiedDate":"2023-11-08"},{"lineNumber":209,"author":{"gitId":"ryanlohyr"},"content":"                this.completedModuleCredits -\u003d module.getModuleCredits();","lastModifiedDate":"2023-11-08"},{"lineNumber":210,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":211,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":212,"author":{"gitId":"ryanlohyr"},"content":"        }catch (InvalidObjectException e) {","lastModifiedDate":"2023-11-08"},{"lineNumber":213,"author":{"gitId":"ryanlohyr"},"content":"            throw new MissingModuleException(\"Module does not exist in schedule\");","lastModifiedDate":"2023-11-09"},{"lineNumber":214,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":215,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":216,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":217,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":218,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":219,"author":{"gitId":"SebasFok"},"content":"     * Shifts a module within the student\u0027s schedule to a different semester.","lastModifiedDate":"2023-11-13"},{"lineNumber":220,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":221,"author":{"gitId":"SebasFok"},"content":"     * @param moduleCode The code of the module to be shifted.","lastModifiedDate":"2023-11-13"},{"lineNumber":222,"author":{"gitId":"SebasFok"},"content":"     * @param targetSem  The target semester to which the module will be shifted.","lastModifiedDate":"2023-11-13"},{"lineNumber":223,"author":{"gitId":"SebasFok"},"content":"     * @throws IllegalArgumentException   If the target semester is not valid.","lastModifiedDate":"2023-11-13"},{"lineNumber":224,"author":{"gitId":"SebasFok"},"content":"     * @throws FailPrereqException          If shifting the module fails due to unsatisfied prerequisites.","lastModifiedDate":"2023-11-13"},{"lineNumber":225,"author":{"gitId":"SebasFok"},"content":"     * @throws MissingModuleException      If the module to be shifted is missing from the schedule.","lastModifiedDate":"2023-11-13"},{"lineNumber":226,"author":{"gitId":"SebasFok"},"content":"     * @throws IOException                 If an I/O error occurs during the shift operation.","lastModifiedDate":"2023-11-13"},{"lineNumber":227,"author":{"gitId":"SebasFok"},"content":"     * @throws MandatoryPrereqException    If shifting the module violates mandatory prerequisites.","lastModifiedDate":"2023-11-13"},{"lineNumber":228,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":229,"author":{"gitId":"SebasFok"},"content":"    public void shiftModuleInSchedule(String moduleCode, int targetSem) throws IllegalArgumentException,","lastModifiedDate":"2023-11-13"},{"lineNumber":230,"author":{"gitId":"SebasFok"},"content":"            FailPrereqException, MissingModuleException, IOException, MandatoryPrereqException {","lastModifiedDate":"2023-11-09"},{"lineNumber":231,"author":{"gitId":"SebasFok"},"content":"        this.schedule.shiftModule(moduleCode, targetSem);","lastModifiedDate":"2023-11-08"},{"lineNumber":232,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":233,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":234,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":235,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":236,"author":{"gitId":"SebasFok"},"content":"     * Clears all modules from the student\u0027s schedule, resetting it to an empty schedule.","lastModifiedDate":"2023-11-13"},{"lineNumber":237,"author":{"gitId":"SebasFok"},"content":"     * Also resets the completed module credits to zero.","lastModifiedDate":"2023-11-13"},{"lineNumber":238,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":239,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":240,"author":{"gitId":"SebasFok"},"content":"    public void clearAllModulesFromSchedule() {","lastModifiedDate":"2023-11-08"},{"lineNumber":241,"author":{"gitId":"SebasFok"},"content":"        //Replaces current schedule with new schedule","lastModifiedDate":"2023-11-08"},{"lineNumber":242,"author":{"gitId":"SebasFok"},"content":"        this.schedule \u003d new Schedule();","lastModifiedDate":"2023-11-08"},{"lineNumber":243,"author":{"gitId":"SebasFok"},"content":"        this.completedModuleCredits \u003d 0;","lastModifiedDate":"2023-11-08"},{"lineNumber":244,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":245,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":246,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-06"},{"lineNumber":247,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":248,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves a module from the schedule planner based on its module code.","lastModifiedDate":"2023-11-13"},{"lineNumber":249,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":250,"author":{"gitId":"janelleenqi"},"content":"     * @param moduleCode The module code of the module to retrieve.","lastModifiedDate":"2023-11-13"},{"lineNumber":251,"author":{"gitId":"janelleenqi"},"content":"     * @return The Module object with the specified module code.","lastModifiedDate":"2023-11-13"},{"lineNumber":252,"author":{"gitId":"janelleenqi"},"content":"     * @throws MissingModuleException If the module with the given code is not found in the schedule.","lastModifiedDate":"2023-11-13"},{"lineNumber":253,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":254,"author":{"gitId":"janelleenqi"},"content":"    public Module getModuleFromSchedule(String moduleCode) throws MissingModuleException {","lastModifiedDate":"2023-11-07"},{"lineNumber":255,"author":{"gitId":"janelleenqi"},"content":"        try {","lastModifiedDate":"2023-11-03"},{"lineNumber":256,"author":{"gitId":"janelleenqi"},"content":"            return schedule.getModule(moduleCode);","lastModifiedDate":"2023-11-06"},{"lineNumber":257,"author":{"gitId":"janelleenqi"},"content":"        } catch (InvalidObjectException e) {","lastModifiedDate":"2023-11-03"},{"lineNumber":258,"author":{"gitId":"janelleenqi"},"content":"            throw new MissingModuleException(moduleCode + \" is not in Modules Planner. \" +","lastModifiedDate":"2023-11-07"},{"lineNumber":259,"author":{"gitId":"janelleenqi"},"content":"                    \"Please add the module to your schedule first!\");","lastModifiedDate":"2023-11-07"},{"lineNumber":260,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":261,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":262,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":263,"author":{"gitId":"janelleenqi"},"content":"    //@@author","lastModifiedDate":"2023-11-06"},{"lineNumber":264,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":265,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":266,"author":{"gitId":"ryanlohyr"},"content":"    public String getYear() {","lastModifiedDate":"2023-11-03"},{"lineNumber":267,"author":{"gitId":"ryanlohyr"},"content":"        return year;","lastModifiedDate":"2023-11-03"},{"lineNumber":268,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":269,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":270,"author":{"gitId":"ryanlohyr"},"content":"    public void setYear(String year) {","lastModifiedDate":"2023-11-03"},{"lineNumber":271,"author":{"gitId":"ryanlohyr"},"content":"        this.year \u003d year;","lastModifiedDate":"2023-11-03"},{"lineNumber":272,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":273,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":274,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":275,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":276,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":277,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves the module codes of the modules that are left to be completed based on the major\u0027s requirements.","lastModifiedDate":"2023-11-13"},{"lineNumber":278,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-07"},{"lineNumber":279,"author":{"gitId":"janelleenqi"},"content":"     * @return An ArrayList of module codes representing the modules that are left to be completed.","lastModifiedDate":"2023-11-13"},{"lineNumber":280,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":281,"author":{"gitId":"janelleenqi"},"content":"    public ArrayList\u003cString\u003e getModuleCodesLeft() {","lastModifiedDate":"2023-11-03"},{"lineNumber":282,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cString\u003e moduleCodesLeft \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-11-03"},{"lineNumber":283,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cString\u003e completedModuleCodes \u003d schedule.getModulesPlanned().getCompletedModuleCodes();","lastModifiedDate":"2023-11-13"},{"lineNumber":284,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":285,"author":{"gitId":"janelleenqi"},"content":"        for (String moduleCode : majorModuleCodes) {","lastModifiedDate":"2023-11-03"},{"lineNumber":286,"author":{"gitId":"janelleenqi"},"content":"            if (!completedModuleCodes.contains(moduleCode)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":287,"author":{"gitId":"janelleenqi"},"content":"                moduleCodesLeft.add(moduleCode);","lastModifiedDate":"2023-11-03"},{"lineNumber":288,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":289,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":290,"author":{"gitId":"janelleenqi"},"content":"        return moduleCodesLeft;","lastModifiedDate":"2023-11-03"},{"lineNumber":291,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":292,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":293,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":294,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves the module codes associated with the major\u0027s requirements.","lastModifiedDate":"2023-11-13"},{"lineNumber":295,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":296,"author":{"gitId":"janelleenqi"},"content":"     * @return An ArrayList of module codes representing the major\u0027s module requirements.","lastModifiedDate":"2023-11-13"},{"lineNumber":297,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":298,"author":{"gitId":"janelleenqi"},"content":"    public ArrayList\u003cString\u003e getMajorModuleCodes() {","lastModifiedDate":"2023-11-04"},{"lineNumber":299,"author":{"gitId":"janelleenqi"},"content":"        return majorModuleCodes;","lastModifiedDate":"2023-11-04"},{"lineNumber":300,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":301,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":302,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":303,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves the list of modules that are planned for a specific purpose or context.","lastModifiedDate":"2023-11-13"},{"lineNumber":304,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":305,"author":{"gitId":"janelleenqi"},"content":"     * @return The ModuleList containing the planned modules.","lastModifiedDate":"2023-11-13"},{"lineNumber":306,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":307,"author":{"gitId":"janelleenqi"},"content":"    public ModuleList getModulesPlanned() {","lastModifiedDate":"2023-11-04"},{"lineNumber":308,"author":{"gitId":"janelleenqi"},"content":"        return schedule.getModulesPlanned();","lastModifiedDate":"2023-11-06"},{"lineNumber":309,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":310,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":311,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":312,"author":{"gitId":"janelleenqi"},"content":"     * Prints the schedule, displaying the main module list.","lastModifiedDate":"2023-11-13"},{"lineNumber":313,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":314,"author":{"gitId":"janelleenqi"},"content":"    public void printSchedule() {","lastModifiedDate":"2023-11-06"},{"lineNumber":315,"author":{"gitId":"janelleenqi"},"content":"        this.schedule.printMainModuleList();","lastModifiedDate":"2023-11-06"},{"lineNumber":316,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":317,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":318,"author":{"gitId":"janelleenqi"},"content":"    //@@author","lastModifiedDate":"2023-11-13"},{"lineNumber":319,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":320,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":321,"author":{"gitId":"rohitcube"},"content":"     * Sets the current semester modules for the student based on their year and semester.","lastModifiedDate":"2023-11-08"},{"lineNumber":322,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":323,"author":{"gitId":"rohitcube"},"content":"     * @author @rohitcube","lastModifiedDate":"2023-11-08"},{"lineNumber":324,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":325,"author":{"gitId":"janelleenqi"},"content":"    private void setCurrentSemesterModules() {","lastModifiedDate":"2023-11-13"},{"lineNumber":326,"author":{"gitId":"rohitcube"},"content":"        try {","lastModifiedDate":"2023-11-07"},{"lineNumber":327,"author":{"gitId":"janelleenqi"},"content":"            int currSem \u003d getCurrentSem();","lastModifiedDate":"2023-11-08"},{"lineNumber":328,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":329,"author":{"gitId":"rohitcube"},"content":"            int[] modulesPerSem \u003d schedule.getModulesPerSem();","lastModifiedDate":"2023-11-07"},{"lineNumber":330,"author":{"gitId":"rohitcube"},"content":"            // modules planned for all sems","lastModifiedDate":"2023-11-08"},{"lineNumber":331,"author":{"gitId":"rohitcube"},"content":"            ModuleList modulesPlanned \u003d schedule.getModulesPlanned();","lastModifiedDate":"2023-11-07"},{"lineNumber":332,"author":{"gitId":"rohitcube"},"content":"            int numberOfModulesInCurrSem \u003d modulesPerSem[currSem - 1];","lastModifiedDate":"2023-11-07"},{"lineNumber":333,"author":{"gitId":"rohitcube"},"content":"            int numberOfModulesCleared \u003d 0;","lastModifiedDate":"2023-11-07"},{"lineNumber":334,"author":{"gitId":"rohitcube"},"content":"            for (int i \u003d 0; i \u003c currSem - 1; i++) {","lastModifiedDate":"2023-11-07"},{"lineNumber":335,"author":{"gitId":"rohitcube"},"content":"                numberOfModulesCleared +\u003d modulesPerSem[i];","lastModifiedDate":"2023-11-07"},{"lineNumber":336,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":337,"author":{"gitId":"rohitcube"},"content":"            int startIndex \u003d numberOfModulesCleared;","lastModifiedDate":"2023-11-07"},{"lineNumber":338,"author":{"gitId":"rohitcube"},"content":"            int endIndex \u003d startIndex + numberOfModulesInCurrSem;","lastModifiedDate":"2023-11-07"},{"lineNumber":339,"author":{"gitId":"rohitcube"},"content":"            currentSemesterModules \u003d new ModuleList();","lastModifiedDate":"2023-11-07"},{"lineNumber":340,"author":{"gitId":"rohitcube"},"content":"            for (int i \u003d startIndex; i \u003c endIndex; i++) {","lastModifiedDate":"2023-11-07"},{"lineNumber":341,"author":{"gitId":"janelleenqi"},"content":"                currentSemesterModules.addModule(modulesPlanned.getModuleByIndex(i));","lastModifiedDate":"2023-11-10"},{"lineNumber":342,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":343,"author":{"gitId":"rohitcube"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-11-07"},{"lineNumber":344,"author":{"gitId":"rohitcube"},"content":"            System.out.print(\"why array out of bounds bruh\");","lastModifiedDate":"2023-11-07"},{"lineNumber":345,"author":{"gitId":"rohitcube"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-11-07"},{"lineNumber":346,"author":{"gitId":"rohitcube"},"content":"            System.out.print(\"null ptr exception\");","lastModifiedDate":"2023-11-07"},{"lineNumber":347,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":348,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":349,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":350,"author":{"gitId":"janelleenqi"},"content":"    public int getCurrentSem() {","lastModifiedDate":"2023-11-08"},{"lineNumber":351,"author":{"gitId":"janelleenqi"},"content":"        int[] yearAndSem \u003d Parser.parseStudentYear(year);","lastModifiedDate":"2023-11-08"},{"lineNumber":352,"author":{"gitId":"janelleenqi"},"content":"        return ((yearAndSem[0] - 1) * 2) + yearAndSem[1];","lastModifiedDate":"2023-11-08"},{"lineNumber":353,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":354,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":355,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":356,"author":{"gitId":"rohitcube"},"content":"     * Sets the current semester modules with each module as a ModuleWeekly class.","lastModifiedDate":"2023-11-08"},{"lineNumber":357,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":358,"author":{"gitId":"rohitcube"},"content":"     * @author @rohitcube","lastModifiedDate":"2023-11-08"},{"lineNumber":359,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":360,"author":{"gitId":"janelleenqi"},"content":"    private void setCurrentSemesterModulesWeekly() throws TimetableUnavailableException {","lastModifiedDate":"2023-11-13"},{"lineNumber":361,"author":{"gitId":"janelleenqi"},"content":"        if (currentSemesterModules \u003d\u003d null || currentSemesterModules.getMainModuleList().isEmpty()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":362,"author":{"gitId":"janelleenqi"},"content":"            timetable.removeAll();","lastModifiedDate":"2023-11-12"},{"lineNumber":363,"author":{"gitId":"janelleenqi"},"content":"            int currentSem \u003d getCurrentSem();","lastModifiedDate":"2023-11-12"},{"lineNumber":364,"author":{"gitId":"janelleenqi"},"content":"            throw new TimetableUnavailableException(","lastModifiedDate":"2023-11-12"},{"lineNumber":365,"author":{"gitId":"janelleenqi"},"content":"                    addOrRecommendGuide(\"Timetable view is unavailable as your current semester has \" +","lastModifiedDate":"2023-11-12"},{"lineNumber":366,"author":{"gitId":"janelleenqi"},"content":"                            \"no modules yet.\", currentSem));","lastModifiedDate":"2023-11-12"},{"lineNumber":367,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":368,"author":{"gitId":"rohitcube"},"content":"        ArrayList\u003cModule\u003e newCurrentSemModuleList \u003d currentSemesterModules.getMainModuleList();","lastModifiedDate":"2023-11-08"},{"lineNumber":369,"author":{"gitId":"rohitcube"},"content":"        ArrayList\u003cModuleWeekly\u003e currentSemesterModulesWeekly \u003d timetable.getCurrentSemesterModulesWeekly();","lastModifiedDate":"2023-11-08"},{"lineNumber":370,"author":{"gitId":"rohitcube"},"content":"        for (int i \u003d 0; i \u003c currentSemesterModulesWeekly.size(); i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":371,"author":{"gitId":"rohitcube"},"content":"            ModuleWeekly currModule \u003d currentSemesterModulesWeekly.get(i);","lastModifiedDate":"2023-11-08"},{"lineNumber":372,"author":{"gitId":"rohitcube"},"content":"            String currModuleCode \u003d currModule.getModuleCode();","lastModifiedDate":"2023-11-08"},{"lineNumber":373,"author":{"gitId":"rohitcube"},"content":"            if (isExistInCurrentSemesterModule(currModuleCode, newCurrentSemModuleList)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":374,"author":{"gitId":"rohitcube"},"content":"                continue;","lastModifiedDate":"2023-11-08"},{"lineNumber":375,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":376,"author":{"gitId":"rohitcube"},"content":"            timetable.removeFromCurrentSemesterModulesWeekly(currModule);","lastModifiedDate":"2023-11-08"},{"lineNumber":377,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":378,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":379,"author":{"gitId":"rohitcube"},"content":"        for (int i \u003d 0; i \u003c newCurrentSemModuleList.size(); i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":380,"author":{"gitId":"rohitcube"},"content":"            String currModuleCode \u003d newCurrentSemModuleList.get(i).getModuleCode();","lastModifiedDate":"2023-11-08"},{"lineNumber":381,"author":{"gitId":"rohitcube"},"content":"            if (isExistInCurrentSemesterModuleWeekly(currModuleCode, currentSemesterModulesWeekly)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":382,"author":{"gitId":"rohitcube"},"content":"                continue;","lastModifiedDate":"2023-11-08"},{"lineNumber":383,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":384,"author":{"gitId":"rohitcube"},"content":"            ModuleWeekly currModule \u003d new ModuleWeekly(currModuleCode);","lastModifiedDate":"2023-11-07"},{"lineNumber":385,"author":{"gitId":"rohitcube"},"content":"            timetable.addToCurrentSemesterModulesWeekly(currModule);","lastModifiedDate":"2023-11-08"},{"lineNumber":386,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":387,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":388,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":389,"author":{"gitId":"janelleenqi"},"content":"    public void updateTimetable() throws TimetableUnavailableException {","lastModifiedDate":"2023-11-12"},{"lineNumber":390,"author":{"gitId":"janelleenqi"},"content":"        this.setCurrentSemesterModules();","lastModifiedDate":"2023-11-12"},{"lineNumber":391,"author":{"gitId":"janelleenqi"},"content":"        this.setCurrentSemesterModulesWeekly();","lastModifiedDate":"2023-11-12"},{"lineNumber":392,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":393,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":394,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":395,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":396,"author":{"gitId":"rohitcube"},"content":"     * Executes \u0027show\u0027 or \u0027modify\u0027 subcommands under the timetable command.","lastModifiedDate":"2023-11-08"},{"lineNumber":397,"author":{"gitId":"rohitcube"},"content":"     * @author @rohitcube","lastModifiedDate":"2023-11-08"},{"lineNumber":398,"author":{"gitId":"janelleenqi"},"content":"     * @param argument The user input specifying whether to show or modify the timetable.","lastModifiedDate":"2023-11-09"},{"lineNumber":399,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":400,"author":{"gitId":"janelleenqi"},"content":"    public void timetableShowOrModify(String argument) {","lastModifiedDate":"2023-11-09"},{"lineNumber":401,"author":{"gitId":"rohitcube"},"content":"        try {","lastModifiedDate":"2023-11-08"},{"lineNumber":402,"author":{"gitId":"janelleenqi"},"content":"            this.updateTimetable();","lastModifiedDate":"2023-11-12"},{"lineNumber":403,"author":{"gitId":"janelleenqi"},"content":"            ModuleServiceController moduleServiceController \u003d new ModuleServiceController();","lastModifiedDate":"2023-11-13"},{"lineNumber":404,"author":{"gitId":"janelleenqi"},"content":"            argument \u003d argument.trim().toUpperCase().replace(\"\\r\", \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":405,"author":{"gitId":"rohitcube"},"content":"            switch (argument) {","lastModifiedDate":"2023-11-07"},{"lineNumber":406,"author":{"gitId":"rohitcube"},"content":"            case \"SHOW\": {","lastModifiedDate":"2023-11-07"},{"lineNumber":407,"author":{"gitId":"janelleenqi"},"content":"                moduleServiceController.showTimetable(timetable.getCurrentSemesterModulesWeekly());","lastModifiedDate":"2023-11-13"},{"lineNumber":408,"author":{"gitId":"rohitcube"},"content":"                break;","lastModifiedDate":"2023-11-07"},{"lineNumber":409,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":410,"author":{"gitId":"rohitcube"},"content":"            case \"MODIFY\": {","lastModifiedDate":"2023-11-07"},{"lineNumber":411,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":412,"author":{"gitId":"janelleenqi"},"content":"                moduleServiceController.modifyTimetable(this);","lastModifiedDate":"2023-11-13"},{"lineNumber":413,"author":{"gitId":"rohitcube"},"content":"                break;","lastModifiedDate":"2023-11-07"},{"lineNumber":414,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":415,"author":{"gitId":"rohitcube"},"content":"            default: {","lastModifiedDate":"2023-11-07"},{"lineNumber":416,"author":{"gitId":"rohitcube"},"content":"                System.out.println(\"Invalid command (not show or modify). Please try again\");","lastModifiedDate":"2023-11-08"},{"lineNumber":417,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":418,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":419,"author":{"gitId":"rohitcube"},"content":"        } catch (InvalidModifyArgumentException e) {","lastModifiedDate":"2023-11-08"},{"lineNumber":420,"author":{"gitId":"rohitcube"},"content":"            System.out.println(\"Invalid argument. Please try again.\");","lastModifiedDate":"2023-11-08"},{"lineNumber":421,"author":{"gitId":"rohitcube"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-11-08"},{"lineNumber":422,"author":{"gitId":"rohitcube"},"content":"            System.out.println(\"Index out of bounds exception.\");","lastModifiedDate":"2023-11-08"},{"lineNumber":423,"author":{"gitId":"janelleenqi"},"content":"        } catch (TimetableUnavailableException e) {","lastModifiedDate":"2023-11-12"},{"lineNumber":424,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-11-12"},{"lineNumber":425,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":426,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":427,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":428,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":429,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":430,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":431,"author":{"gitId":"rohitcube"},"content":"     * Retrieves the ModuleWeekly object for a given module code.","lastModifiedDate":"2023-11-08"},{"lineNumber":432,"author":{"gitId":"rohitcube"},"content":"     * @author @rohitcube","lastModifiedDate":"2023-11-08"},{"lineNumber":433,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode                   The module code to search for.","lastModifiedDate":"2023-11-08"},{"lineNumber":434,"author":{"gitId":"rohitcube"},"content":"     * @param currentSemesterModulesWeekly The list of ModuleWeekly objects for the current semester.","lastModifiedDate":"2023-11-08"},{"lineNumber":435,"author":{"gitId":"rohitcube"},"content":"     * @return The ModuleWeekly object corresponding to the provided module code, or null if not found.","lastModifiedDate":"2023-11-08"},{"lineNumber":436,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":437,"author":{"gitId":"rohitcube"},"content":"    public static ModuleWeekly getModuleWeekly(String moduleCode,","lastModifiedDate":"2023-11-08"},{"lineNumber":438,"author":{"gitId":"rohitcube"},"content":"                                               ArrayList\u003cModuleWeekly\u003e currentSemesterModulesWeekly) {","lastModifiedDate":"2023-11-08"},{"lineNumber":439,"author":{"gitId":"rohitcube"},"content":"        for (int i \u003d 0; i \u003c currentSemesterModulesWeekly.size(); i++) {","lastModifiedDate":"2023-11-07"},{"lineNumber":440,"author":{"gitId":"rohitcube"},"content":"            ModuleWeekly module \u003d currentSemesterModulesWeekly.get(i);","lastModifiedDate":"2023-11-08"},{"lineNumber":441,"author":{"gitId":"rohitcube"},"content":"            if (module.getModuleCode().equals(moduleCode)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":442,"author":{"gitId":"rohitcube"},"content":"                return module;","lastModifiedDate":"2023-11-08"},{"lineNumber":443,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":444,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":445,"author":{"gitId":"rohitcube"},"content":"        return null;","lastModifiedDate":"2023-11-08"},{"lineNumber":446,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":447,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":448,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":449,"author":{"gitId":"rohitcube"},"content":"     * Retrieves the index of the ModuleWeekly object for a given module code.","lastModifiedDate":"2023-11-08"},{"lineNumber":450,"author":{"gitId":"rohitcube"},"content":"     * @author @rohitcube","lastModifiedDate":"2023-11-08"},{"lineNumber":451,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode                   The module code to search for.","lastModifiedDate":"2023-11-08"},{"lineNumber":452,"author":{"gitId":"rohitcube"},"content":"     * @param currentSemesterModulesWeekly The list of ModuleWeekly objects for the current semester.","lastModifiedDate":"2023-11-08"},{"lineNumber":453,"author":{"gitId":"rohitcube"},"content":"     * @return The index of the ModuleWeekly object corresponding to the provided module code, or -1 if not found.","lastModifiedDate":"2023-11-08"},{"lineNumber":454,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":455,"author":{"gitId":"rohitcube"},"content":"    public static int getIndexOfModuleWeekly(String moduleCode,","lastModifiedDate":"2023-11-08"},{"lineNumber":456,"author":{"gitId":"rohitcube"},"content":"                                             ArrayList\u003cModuleWeekly\u003e currentSemesterModulesWeekly) {","lastModifiedDate":"2023-11-08"},{"lineNumber":457,"author":{"gitId":"rohitcube"},"content":"        for (int i \u003d 0; i \u003c currentSemesterModulesWeekly.size(); i++) {","lastModifiedDate":"2023-11-07"},{"lineNumber":458,"author":{"gitId":"rohitcube"},"content":"            ModuleWeekly module \u003d currentSemesterModulesWeekly.get(i);","lastModifiedDate":"2023-11-08"},{"lineNumber":459,"author":{"gitId":"rohitcube"},"content":"            if (module.getModuleCode().equals(moduleCode)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":460,"author":{"gitId":"rohitcube"},"content":"                return i;","lastModifiedDate":"2023-11-08"},{"lineNumber":461,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":462,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":463,"author":{"gitId":"rohitcube"},"content":"        return -1;","lastModifiedDate":"2023-11-08"},{"lineNumber":464,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":465,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":466,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":467,"author":{"gitId":"rohitcube"},"content":"     * Checks if a module with a given module code exists in the current semester \u0027modules weekly\u0027 class.","lastModifiedDate":"2023-11-13"},{"lineNumber":468,"author":{"gitId":"rohitcube"},"content":"     * @author @rohitcube","lastModifiedDate":"2023-11-08"},{"lineNumber":469,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode                   The module code to search for.","lastModifiedDate":"2023-11-08"},{"lineNumber":470,"author":{"gitId":"rohitcube"},"content":"     * @param currentSemesterModulesWeekly The list of ModuleWeekly objects for the current semester.","lastModifiedDate":"2023-11-08"},{"lineNumber":471,"author":{"gitId":"rohitcube"},"content":"     * @return true if the module exists, false otherwise.","lastModifiedDate":"2023-11-08"},{"lineNumber":472,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":473,"author":{"gitId":"rohitcube"},"content":"    public static boolean isExistInCurrentSemesterModuleWeekly(String moduleCode,","lastModifiedDate":"2023-11-08"},{"lineNumber":474,"author":{"gitId":"rohitcube"},"content":"                                                          ArrayList\u003cModuleWeekly\u003e currentSemesterModulesWeekly) {","lastModifiedDate":"2023-11-08"},{"lineNumber":475,"author":{"gitId":"rohitcube"},"content":"        for (ModuleWeekly module : currentSemesterModulesWeekly) {","lastModifiedDate":"2023-11-08"},{"lineNumber":476,"author":{"gitId":"rohitcube"},"content":"            if (module.getModuleCode().equals(moduleCode)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":477,"author":{"gitId":"rohitcube"},"content":"                return true;","lastModifiedDate":"2023-11-07"},{"lineNumber":478,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":479,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":480,"author":{"gitId":"rohitcube"},"content":"        return false;","lastModifiedDate":"2023-11-07"},{"lineNumber":481,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":482,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":483,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":484,"author":{"gitId":"rohitcube"},"content":"     * Checks if a module with a given module code exists in the current semester modules.","lastModifiedDate":"2023-11-13"},{"lineNumber":485,"author":{"gitId":"rohitcube"},"content":"     * @author @rohitcube","lastModifiedDate":"2023-11-13"},{"lineNumber":486,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode                   The module code to search for.","lastModifiedDate":"2023-11-13"},{"lineNumber":487,"author":{"gitId":"rohitcube"},"content":"     * @param currentSemesterModulesWeekly The list of ModuleWeekly objects for the current semester.","lastModifiedDate":"2023-11-13"},{"lineNumber":488,"author":{"gitId":"rohitcube"},"content":"     * @return true if the module exists, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":489,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":490,"author":{"gitId":"rohitcube"},"content":"    public static boolean isExistInCurrentSemesterModule(String moduleCode,","lastModifiedDate":"2023-11-08"},{"lineNumber":491,"author":{"gitId":"rohitcube"},"content":"                                                               ArrayList\u003cModule\u003e currentSemesterModulesWeekly) {","lastModifiedDate":"2023-11-08"},{"lineNumber":492,"author":{"gitId":"rohitcube"},"content":"        for (Module module : currentSemesterModulesWeekly) {","lastModifiedDate":"2023-11-08"},{"lineNumber":493,"author":{"gitId":"rohitcube"},"content":"            if (module.getModuleCode().equals(moduleCode)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":494,"author":{"gitId":"rohitcube"},"content":"                return true;","lastModifiedDate":"2023-11-08"},{"lineNumber":495,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":496,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":497,"author":{"gitId":"rohitcube"},"content":"        return false;","lastModifiedDate":"2023-11-08"},{"lineNumber":498,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":499,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":500,"author":{"gitId":"rohitcube"},"content":"    public ModuleList getCurrentSemesterModules() {","lastModifiedDate":"2023-11-07"},{"lineNumber":501,"author":{"gitId":"rohitcube"},"content":"        return currentSemesterModules;","lastModifiedDate":"2023-11-07"},{"lineNumber":502,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":503,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":504,"author":{"gitId":"janelleenqi"},"content":"    public Timetable getTimetable() {","lastModifiedDate":"2023-11-10"},{"lineNumber":505,"author":{"gitId":"janelleenqi"},"content":"        return this.timetable;","lastModifiedDate":"2023-11-10"},{"lineNumber":506,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":507,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":508,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"SebasFok":128,"ryanlohyr":95,"janelleenqi":112,"rohitcube":173}},{"path":"src/main/java/seedu/duke/models/schema/Timetable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rohitcube"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"rohitcube"},"content":"import seedu.duke.views.TimetableView;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"rohitcube"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"rohitcube"},"content":"public class Timetable {","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"rohitcube"},"content":"    public static Timetable timetable \u003d new Timetable();","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"rohitcube"},"content":"    private ArrayList \u003cModuleWeekly\u003e currentSemesterModulesWeekly;","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"rohitcube"},"content":"    private Timetable() {","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"rohitcube"},"content":"        currentSemesterModulesWeekly \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"rohitcube"},"content":"    public void addToCurrentSemesterModulesWeekly(ModuleWeekly module) {","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"rohitcube"},"content":"        currentSemesterModulesWeekly.add(module);","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"rohitcube"},"content":"    public void removeFromCurrentSemesterModulesWeekly(ModuleWeekly module) {","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"rohitcube"},"content":"        currentSemesterModulesWeekly.remove(module);","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"     * Removes all ModuleWeekly from the current semester\u0027s weekly schedule.","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"    public void removeAll() {","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"        currentSemesterModulesWeekly \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    //@@author","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"rohitcube"},"content":"    public ArrayList\u003cModuleWeekly\u003e getCurrentSemesterModulesWeekly() {","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"rohitcube"},"content":"        return currentSemesterModulesWeekly;","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"rohitcube"},"content":"    public void modify(Student student) {","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"rohitcube"},"content":"    public void printCurrentSemesterModulesWeekly(Student student) {","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"rohitcube"},"content":"        for (ModuleWeekly moduleweekly : currentSemesterModulesWeekly) {","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"rohitcube"},"content":"            System.out.println(moduleweekly.getModuleCode());","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"rohitcube"},"content":"            ArrayList\u003cEvent\u003e weeklyschedule \u003d moduleweekly.getWeeklyTimetable();","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"rohitcube"},"content":"            if (weeklyschedule.isEmpty()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"rohitcube"},"content":"                System.out.println(\"aint nothin here\");","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"rohitcube"},"content":"            for (int i \u003d 0; i \u003c weeklyschedule.size(); i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"rohitcube"},"content":"                System.out.println(weeklyschedule.get(i).getEventType());","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"rohitcube"},"content":"                System.out.println(weeklyschedule.get(i).getStartTime());","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"     * Checks if there are any lessons in the current semester\u0027s weekly schedule, indicating the availability","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"     * of a timetable view.","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"     * @return true if there are lessons present, indicating timetable view can be printed, else otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"    public boolean timetableViewIsAvailable() {","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"        for (ModuleWeekly moduleWeekly : currentSemesterModulesWeekly) {","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"            if (moduleWeekly.haveLessons()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"                return true;","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"        return false;","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"    //@@author","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"rohitcube"},"content":"     * Retrieves the ModuleWeekly object for a given module code.","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"rohitcube"},"content":"     * @author @rohitcube","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode                   The module code to search for.","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"rohitcube"},"content":"     * @param currentSemesterModulesWeekly The list of ModuleWeekly objects for the current semester.","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"rohitcube"},"content":"     * @return The ModuleWeekly object corresponding to the provided module code, or null if not found.","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"rohitcube"},"content":"    public static ModuleWeekly getModuleWeekly(String moduleCode,","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"rohitcube"},"content":"                                               ArrayList\u003cModuleWeekly\u003e currentSemesterModulesWeekly) {","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"rohitcube"},"content":"        for (int i \u003d 0; i \u003c currentSemesterModulesWeekly.size(); i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"rohitcube"},"content":"            ModuleWeekly module \u003d currentSemesterModulesWeekly.get(i);","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"rohitcube"},"content":"            if (module.getModuleCode().equals(moduleCode)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"rohitcube"},"content":"                return module;","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"rohitcube"},"content":"        return null;","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"rohitcube"},"content":"     * Retrieves the index of the ModuleWeekly object for a given module code.","lastModifiedDate":"2023-11-08"},{"lineNumber":96,"author":{"gitId":"rohitcube"},"content":"     * @author @rohitcube","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode                   The module code to search for.","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"rohitcube"},"content":"     * @param currentSemesterModulesWeekly The list of ModuleWeekly objects for the current semester.","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"rohitcube"},"content":"     * @return The index of the ModuleWeekly object corresponding to the provided module code, or -1 if not found.","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":101,"author":{"gitId":"rohitcube"},"content":"    public static int getIndexOfModuleWeekly(String moduleCode,","lastModifiedDate":"2023-11-08"},{"lineNumber":102,"author":{"gitId":"rohitcube"},"content":"                                             ArrayList\u003cModuleWeekly\u003e currentSemesterModulesWeekly) {","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"rohitcube"},"content":"        for (int i \u003d 0; i \u003c currentSemesterModulesWeekly.size(); i++) {","lastModifiedDate":"2023-11-08"},{"lineNumber":104,"author":{"gitId":"rohitcube"},"content":"            ModuleWeekly module \u003d currentSemesterModulesWeekly.get(i);","lastModifiedDate":"2023-11-08"},{"lineNumber":105,"author":{"gitId":"rohitcube"},"content":"            if (module.getModuleCode().equals(moduleCode)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":106,"author":{"gitId":"rohitcube"},"content":"                return i;","lastModifiedDate":"2023-11-08"},{"lineNumber":107,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"rohitcube"},"content":"        return -1;","lastModifiedDate":"2023-11-08"},{"lineNumber":110,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":111,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":113,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":114,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":115,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":116,"author":{"gitId":"rohitcube"},"content":"    public void lessonsController(String lessonType, int indexOfModule, int time, int duration, String day) {","lastModifiedDate":"2023-11-10"},{"lineNumber":117,"author":{"gitId":"rohitcube"},"content":"        //TO BE REFACTORED","lastModifiedDate":"2023-11-10"},{"lineNumber":118,"author":{"gitId":"rohitcube"},"content":"        // parsing of day should be validated in the same as the above ^ if statements. Did not change this","lastModifiedDate":"2023-11-10"},{"lineNumber":119,"author":{"gitId":"rohitcube"},"content":"        //for you yet, but parserDayForModify should be moved up, and only if the day is valid as well,","lastModifiedDate":"2023-11-10"},{"lineNumber":120,"author":{"gitId":"rohitcube"},"content":"        // then you enter the switch statement. done","lastModifiedDate":"2023-11-10"},{"lineNumber":121,"author":{"gitId":"rohitcube"},"content":"        switch (lessonType) {","lastModifiedDate":"2023-11-10"},{"lineNumber":122,"author":{"gitId":"rohitcube"},"content":"        case \"LECTURE\": {","lastModifiedDate":"2023-11-10"},{"lineNumber":123,"author":{"gitId":"rohitcube"},"content":"            timetable.currentSemesterModulesWeekly.get(indexOfModule).addLecture(day,","lastModifiedDate":"2023-11-10"},{"lineNumber":124,"author":{"gitId":"rohitcube"},"content":"                    time, duration);","lastModifiedDate":"2023-11-10"},{"lineNumber":125,"author":{"gitId":"rohitcube"},"content":"            TimetableView.printTimetable(currentSemesterModulesWeekly);","lastModifiedDate":"2023-11-10"},{"lineNumber":126,"author":{"gitId":"rohitcube"},"content":"            return;","lastModifiedDate":"2023-11-10"},{"lineNumber":127,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":128,"author":{"gitId":"rohitcube"},"content":"        case \"TUTORIAL\": {","lastModifiedDate":"2023-11-10"},{"lineNumber":129,"author":{"gitId":"rohitcube"},"content":"            timetable.currentSemesterModulesWeekly.get(indexOfModule).addTutorial(day,","lastModifiedDate":"2023-11-10"},{"lineNumber":130,"author":{"gitId":"rohitcube"},"content":"                    time, duration);","lastModifiedDate":"2023-11-10"},{"lineNumber":131,"author":{"gitId":"rohitcube"},"content":"            TimetableView.printTimetable(currentSemesterModulesWeekly);","lastModifiedDate":"2023-11-10"},{"lineNumber":132,"author":{"gitId":"rohitcube"},"content":"            return;","lastModifiedDate":"2023-11-10"},{"lineNumber":133,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":134,"author":{"gitId":"rohitcube"},"content":"        case \"LAB\": {","lastModifiedDate":"2023-11-10"},{"lineNumber":135,"author":{"gitId":"rohitcube"},"content":"            timetable.currentSemesterModulesWeekly.get(indexOfModule).addLab(day,","lastModifiedDate":"2023-11-10"},{"lineNumber":136,"author":{"gitId":"rohitcube"},"content":"                    time, duration);","lastModifiedDate":"2023-11-10"},{"lineNumber":137,"author":{"gitId":"rohitcube"},"content":"            TimetableView.printTimetable(currentSemesterModulesWeekly);","lastModifiedDate":"2023-11-10"},{"lineNumber":138,"author":{"gitId":"rohitcube"},"content":"            return;","lastModifiedDate":"2023-11-10"},{"lineNumber":139,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":140,"author":{"gitId":"rohitcube"},"content":"        default: {","lastModifiedDate":"2023-11-10"},{"lineNumber":141,"author":{"gitId":"rohitcube"},"content":"            System.out.println(\"Invalid Command. Please try again!\");","lastModifiedDate":"2023-11-10"},{"lineNumber":142,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":143,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":144,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":146,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":147,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":148,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves the timetable associated with the current user or context.","lastModifiedDate":"2023-11-13"},{"lineNumber":150,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"     * @return The Timetable object representing the timetable.","lastModifiedDate":"2023-11-13"},{"lineNumber":152,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":153,"author":{"gitId":"janelleenqi"},"content":"    public Timetable getTimetable() {","lastModifiedDate":"2023-11-10"},{"lineNumber":154,"author":{"gitId":"janelleenqi"},"content":"        return timetable;","lastModifiedDate":"2023-11-10"},{"lineNumber":155,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":156,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":157,"author":{"gitId":"rohitcube"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"janelleenqi":38,"rohitcube":119}},{"path":"src/main/java/seedu/duke/models/schema/TimetableUserCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.InvalidTimetableUserCommandException;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.models.schema.Timetable.getIndexOfModuleWeekly;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.utils.Parser.removeNulls;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.utils.TimetableParser.isModifyValid;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.utils.TimetableParser.parseModuleCode;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.utils.TimetableParser.isModifyClear;","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.utils.TimetableParser.parseLessonType;","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.utils.TimetableParser.parseTime;","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.utils.TimetableParser.parseDuration;","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.utils.TimetableParser.parseDay;","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"//@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":" * The TimetableUserCommand class represents a user command related to the timetable and provides methods to process","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":" * and validate the user input.","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"public class TimetableUserCommand {","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"    private static final String ERROR_INVALID_NUMBER_OF_ARGUMENTS \u003d \"Invalid Number of Arguments\";","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"    private static final int NUMBER_OF_ARGUMENTS_EXIT \u003d 1;","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"    private static final int NUMBER_OF_ARGUMENTS_CLEAR \u003d 2;","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"    private static final int NUMBER_OF_ARGUMENTS_LESSON \u003d 5;","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    private static final String DELIMITER \u003d \" \";","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"    private Student student;","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"    private ArrayList\u003cModuleWeekly\u003e currentSemesterModulesWeekly;","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"    private String[] arguments;","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a TimetableUserCommand object with the specified student, current semester modules weekly,","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"     * and user timetable input.","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"     * @param student                       The student associated with the command.","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"     * @param currentSemesterModulesWeekly The list of current semester modules weekly.","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"     * @param userTimetableInput            The user input related to the timetable command.","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"     * @throws InvalidTimetableUserCommandException If there is an issue with the user command.","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"    public TimetableUserCommand(Student student, ArrayList\u003cModuleWeekly\u003e currentSemesterModulesWeekly,","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"                                String userTimetableInput)","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"            throws InvalidTimetableUserCommandException {","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"        this.student \u003d student;","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"        this.currentSemesterModulesWeekly \u003d currentSemesterModulesWeekly;","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"        arguments \u003d userTimetableInput.split(DELIMITER);","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"        cutArguments();","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"        clearNullArguments();","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"        //cleanArguments();","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"    private void cutArguments() throws InvalidTimetableUserCommandException {","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"        String[] cutArguments \u003d new String[NUMBER_OF_ARGUMENTS_LESSON];","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"        int currentIndex \u003d 0;","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"        for (int i \u003d 0; i \u003c arguments.length; i++) {","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"            arguments[i] \u003d arguments[i].trim();","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"            if (arguments[i].isEmpty()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"                continue;","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"            try {","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"                cutArguments[currentIndex] \u003d arguments[i];","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"                currentIndex++;","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"                // too many arguments","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"                throw new InvalidTimetableUserCommandException(ERROR_INVALID_NUMBER_OF_ARGUMENTS);","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"        if (currentIndex \u003d\u003d NUMBER_OF_ARGUMENTS_EXIT || currentIndex \u003d\u003d NUMBER_OF_ARGUMENTS_CLEAR ||","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"                currentIndex \u003d\u003d NUMBER_OF_ARGUMENTS_LESSON) {","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"            // shrink arguments","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"            String[] newCutArguments \u003d new String[currentIndex];","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"            int newCurrentIndex \u003d 0;","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"            for (int i \u003d 0; i \u003c cutArguments.length; i++) {","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"                if (cutArguments[i] \u003d\u003d null || cutArguments[i].isEmpty()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"                    continue;","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"                }","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"                newCutArguments[newCurrentIndex] \u003d cutArguments[i];","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"                newCurrentIndex++;","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"            arguments \u003d newCutArguments;","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"        // invalid number of arguments","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"        //System.out.println(currentIndex);","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"        throw new InvalidTimetableUserCommandException(ERROR_INVALID_NUMBER_OF_ARGUMENTS);","lastModifiedDate":"2023-11-10"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"    private void clearNullArguments() throws InvalidTimetableUserCommandException {","lastModifiedDate":"2023-11-10"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"        String[] argumentsNotNull \u003d removeNulls(arguments);","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"        if (!isModifyValid(arguments, currentSemesterModulesWeekly)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"        arguments \u003d argumentsNotNull;","lastModifiedDate":"2023-11-10"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"     * Processes the timetable command, lessons clear and lessons modification.","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"     * @param currentSemesterModulesWeekly The list of current semester modules weekly.","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"     * @throws InvalidTimetableUserCommandException If there is an issue with the user command.","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"    public void processTimetableCommand(ArrayList\u003cModuleWeekly\u003e currentSemesterModulesWeekly)","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"            throws InvalidTimetableUserCommandException {","lastModifiedDate":"2023-11-10"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"        String moduleCode \u003d parseModuleCode(arguments[0]);","lastModifiedDate":"2023-11-10"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"        int indexOfModuleWeeklyToModify \u003d getIndexOfModuleWeekly(moduleCode, currentSemesterModulesWeekly);","lastModifiedDate":"2023-11-10"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"        if (indexOfModuleWeeklyToModify \u003d\u003d -1) {","lastModifiedDate":"2023-11-10"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"            throw new InvalidTimetableUserCommandException(moduleCode + \" does not exist in your schedule.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"        if (isModifyClear(arguments)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"            currentSemesterModulesWeekly.get(indexOfModuleWeeklyToModify).clearLessons();","lastModifiedDate":"2023-11-10"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"All lessons for selected module are cleared.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-11-10"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":124,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"        processTimetableCommandLesson(currentSemesterModulesWeekly);","lastModifiedDate":"2023-11-12"},{"lineNumber":126,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":128,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":129,"author":{"gitId":"janelleenqi"},"content":"     * Processes the timetable command related to lessons modification.","lastModifiedDate":"2023-11-13"},{"lineNumber":130,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":131,"author":{"gitId":"janelleenqi"},"content":"     * @param currentSemesterModulesWeekly The list of current semester modules weekly.","lastModifiedDate":"2023-11-13"},{"lineNumber":132,"author":{"gitId":"janelleenqi"},"content":"     * @throws InvalidTimetableUserCommandException If there is an issue with the user command.","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":134,"author":{"gitId":"janelleenqi"},"content":"    public void processTimetableCommandLesson(ArrayList\u003cModuleWeekly\u003e currentSemesterModulesWeekly)","lastModifiedDate":"2023-11-12"},{"lineNumber":135,"author":{"gitId":"janelleenqi"},"content":"            throws InvalidTimetableUserCommandException {","lastModifiedDate":"2023-11-12"},{"lineNumber":136,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":137,"author":{"gitId":"janelleenqi"},"content":"        String moduleCode \u003d parseModuleCode(arguments[0]);","lastModifiedDate":"2023-11-12"},{"lineNumber":138,"author":{"gitId":"janelleenqi"},"content":"        int indexOfModuleWeeklyToModify \u003d getIndexOfModuleWeekly(moduleCode, currentSemesterModulesWeekly);","lastModifiedDate":"2023-11-12"},{"lineNumber":139,"author":{"gitId":"janelleenqi"},"content":"        if (indexOfModuleWeeklyToModify \u003d\u003d -1) {","lastModifiedDate":"2023-11-12"},{"lineNumber":140,"author":{"gitId":"janelleenqi"},"content":"            throw new InvalidTimetableUserCommandException(moduleCode + \" does not exist in your schedule.\");","lastModifiedDate":"2023-11-12"},{"lineNumber":141,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":142,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":143,"author":{"gitId":"janelleenqi"},"content":"        String lessonType \u003d parseLessonType(arguments[1]);","lastModifiedDate":"2023-11-10"},{"lineNumber":144,"author":{"gitId":"janelleenqi"},"content":"        int time \u003d parseTime(arguments[2]);","lastModifiedDate":"2023-11-10"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"        int duration \u003d parseDuration(arguments[3]);","lastModifiedDate":"2023-11-10"},{"lineNumber":146,"author":{"gitId":"janelleenqi"},"content":"        String day \u003d parseDay(arguments[4]);","lastModifiedDate":"2023-11-10"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":148,"author":{"gitId":"janelleenqi"},"content":"        switch (lessonType) {","lastModifiedDate":"2023-11-10"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"        case \"LECTURE\": {","lastModifiedDate":"2023-11-10"},{"lineNumber":150,"author":{"gitId":"janelleenqi"},"content":"            currentSemesterModulesWeekly.get(indexOfModuleWeeklyToModify).addLecture(day,","lastModifiedDate":"2023-11-10"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"                    time, duration);","lastModifiedDate":"2023-11-10"},{"lineNumber":152,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-11-10"},{"lineNumber":153,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":154,"author":{"gitId":"janelleenqi"},"content":"        case \"TUTORIAL\": {","lastModifiedDate":"2023-11-10"},{"lineNumber":155,"author":{"gitId":"janelleenqi"},"content":"            currentSemesterModulesWeekly.get(indexOfModuleWeeklyToModify).addTutorial(day,","lastModifiedDate":"2023-11-10"},{"lineNumber":156,"author":{"gitId":"janelleenqi"},"content":"                    time, duration);","lastModifiedDate":"2023-11-10"},{"lineNumber":157,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-11-10"},{"lineNumber":158,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":159,"author":{"gitId":"janelleenqi"},"content":"        case \"LAB\": {","lastModifiedDate":"2023-11-10"},{"lineNumber":160,"author":{"gitId":"janelleenqi"},"content":"            currentSemesterModulesWeekly.get(indexOfModuleWeeklyToModify).addLab(day,","lastModifiedDate":"2023-11-10"},{"lineNumber":161,"author":{"gitId":"janelleenqi"},"content":"                    time, duration);","lastModifiedDate":"2023-11-10"},{"lineNumber":162,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-11-10"},{"lineNumber":163,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":164,"author":{"gitId":"janelleenqi"},"content":"        default: {","lastModifiedDate":"2023-11-10"},{"lineNumber":165,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"Invalid Command. Please try again!\");","lastModifiedDate":"2023-11-10"},{"lineNumber":166,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":167,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":168,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":169,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":170,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":171,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves the arguments of the timetable user command.","lastModifiedDate":"2023-11-13"},{"lineNumber":172,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"janelleenqi"},"content":"     * @return The array of arguments.","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":175,"author":{"gitId":"janelleenqi"},"content":"    public String[] getArguments() {","lastModifiedDate":"2023-11-10"},{"lineNumber":176,"author":{"gitId":"janelleenqi"},"content":"        return arguments;","lastModifiedDate":"2023-11-10"},{"lineNumber":177,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":178,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":179,"author":{"gitId":"janelleenqi"},"content":"    public void printArguments() {","lastModifiedDate":"2023-11-10"},{"lineNumber":180,"author":{"gitId":"janelleenqi"},"content":"        for (String argument : arguments) {","lastModifiedDate":"2023-11-10"},{"lineNumber":181,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(argument);","lastModifiedDate":"2023-11-10"},{"lineNumber":182,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":183,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":184,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"janelleenqi":184}},{"path":"src/main/java/seedu/duke/models/schema/Tutorial.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-11-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"//@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":" * Represents a Tutorial that extends the Event class.","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"public class Tutorial extends Event {","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"    private static final String EVENT_TYPE \u003d \"Tutorial\";","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a Tutorial object with the specified day, start time, duration, and module code.","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"     * @param day        The day of the lab session. Must not be null.","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"     * @param startTime  The start time of the lab session.","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"     * @param duration   The duration of the lab session.","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"     * @param moduleCode The module code associated with the lab session. Must not be null.","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"    public Tutorial(String day, int startTime, int duration, String moduleCode) {","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"        super(day, startTime, duration, moduleCode);","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"     * Gets the type of the event, which is \"Tutorial\".","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"     * @return The event type.","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-11-05"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"    public String getEventType() {","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"        return EVENT_TYPE;","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"     * Checks if this Tutorial object is equal to another Event object by comparing their common attributes.","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"     * @param event The event to compare with.","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"     * @return true if the events are equal, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"    public boolean equals(Event event) {","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"        boolean isSameEvent \u003d super.equals(event);","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"        if (!isSameEvent) {","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"        if (!this.getEventType().equals(event.getEventType())) {","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"        return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"     * Generates a string representation of this Tutorial, including module code, event type, and time range.","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"     * @return The string representation of this Tutorial.","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"    public String toString() {","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"        return super.toString() + \" \" + getEventType() + \" \" + getTime(getStartTime(), getDuration());","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"     * Generates a string representation of this Tutorial for saving purposes, including module code,","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"     * event type, start time, duration, and day.","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"     * @return The string representation of this Tutorial for saving.","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"    public String toSave() {","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"        return super.toSave() + \" \" + getEventType() + \" \" + getStartTime() + \" \" + getDuration() + \" \" + getDay();","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"janelleenqi":73}},{"path":"src/main/java/seedu/duke/models/schema/UserCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.logic.Api;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.Parser;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.errors.UserError;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.utils.Parser.parseArguments;","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.utils.Parser.parseCommand;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.displayCommands;","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.controllers.ModuleMethodsController.executePaceCommand;","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.controllers.ModuleMethodsController.showModulesLeft;","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.controllers.ModuleMethodsController.determinePrereq;","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.controllers.ModuleMethodsController.executeRecommendCommand;","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.controllers.ModuleMethodsController.executeAddModuleCommand;","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.controllers.ModuleMethodsController.executeDeleteModuleCommand;","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.controllers.ModuleMethodsController.executeShiftModuleCommand;","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.controllers.ModuleMethodsController.executeClearScheduleCommand;","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.controllers.ModuleMethodsController.completeModule;","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.controllers.ModuleMethodsController.executeGetRequiredModulesForStudent;","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":" * The UserCommand class represents a command entered by the user and provides methods to process and execute the","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":" * command.","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"public class UserCommand implements UserCommandWord {","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    private final String userInput;","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"    private final String commandWord;","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"    private final String[] arguments;","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"    private final boolean isValid;","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    private CommandManager commandManager;","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a UserCommand object with the specified user input and validates it.","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"     * @param userInput The user input representing the command.","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"    public UserCommand(String userInput) {","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"        this.userInput \u003d userInput.trim();","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"        this.commandManager \u003d new CommandManager();","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"        commandWord \u003d parseCommand(this.userInput);","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"        arguments \u003d parseArguments(this.userInput);","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"        if (!commandManager.getListOfCommandNames().contains(commandWord)){","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"            UserError.displayInvalidInputCommand(commandWord);","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"            isValid \u003d false;","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"        boolean validArgument \u003d Parser.isValidInputForCommand(commandWord, arguments);","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"        if (!validArgument) {","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"            UserError.displayInvalidMethodCommand(commandWord);","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"            isValid \u003d false;","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"        isValid \u003d true;","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"    public UserCommand() {","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"        userInput \u003d null;","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"        commandWord \u003d null;","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"        arguments \u003d null;","lastModifiedDate":"2023-11-07"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"        isValid \u003d false;","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"     * Checks if the UserCommand is valid.","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"     * @return true if the command is valid, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"    public boolean isValid() {","lastModifiedDate":"2023-11-07"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"        return isValid;","lastModifiedDate":"2023-11-07"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-11-07"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"        return userInput;","lastModifiedDate":"2023-11-07"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-11-07"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"        return commandWord;","lastModifiedDate":"2023-11-07"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"    public String[] getArguments() {","lastModifiedDate":"2023-11-07"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"        return arguments;","lastModifiedDate":"2023-11-07"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"    @Override","lastModifiedDate":"2023-11-07"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-11-07"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"        return super.equals(obj);","lastModifiedDate":"2023-11-07"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"     * Checks if the command is an close program command.","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"     * @return true if the command is an exit command, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"    public boolean isBye() {","lastModifiedDate":"2023-11-07"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"        if (commandWord \u003d\u003d null) {","lastModifiedDate":"2023-11-07"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"            return false;","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"        if (!isValid) {","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"            return false;","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"        return this.commandWord.equalsIgnoreCase(UserCommandWord.EXIT_COMMAND);","lastModifiedDate":"2023-11-12"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"    //@@author","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"     * Processes and executes the user command based on the command word.","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"     * @param student The student object to perform operations on.","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"    public void processCommand(Student student) {","lastModifiedDate":"2023-11-08"},{"lineNumber":124,"author":{"gitId":"janelleenqi"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-11-08"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"        case UserCommandWord.LEFT_COMMAND: {","lastModifiedDate":"2023-11-08"},{"lineNumber":126,"author":{"gitId":"janelleenqi"},"content":"            showModulesLeft(student.getModuleCodesLeft());","lastModifiedDate":"2023-11-08"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"            break;","lastModifiedDate":"2023-11-08"},{"lineNumber":128,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":129,"author":{"gitId":"janelleenqi"},"content":"        case UserCommandWord.PACE_COMMAND: {","lastModifiedDate":"2023-11-08"},{"lineNumber":130,"author":{"gitId":"ryanlohyr"},"content":"            executePaceCommand(arguments, student.getCurrentModuleCredits(), student.getYear());","lastModifiedDate":"2023-11-13"},{"lineNumber":131,"author":{"gitId":"janelleenqi"},"content":"            break;","lastModifiedDate":"2023-11-08"},{"lineNumber":132,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":133,"author":{"gitId":"janelleenqi"},"content":"        case UserCommandWord.PREREQUISITE_COMMAND: {","lastModifiedDate":"2023-11-08"},{"lineNumber":134,"author":{"gitId":"janelleenqi"},"content":"            String module \u003d arguments[0];","lastModifiedDate":"2023-11-08"},{"lineNumber":135,"author":{"gitId":"janelleenqi"},"content":"            determinePrereq(module.toUpperCase(), student.getMajor()); //to convert \"CEG\" to dynamic course","lastModifiedDate":"2023-11-08"},{"lineNumber":136,"author":{"gitId":"janelleenqi"},"content":"            break;","lastModifiedDate":"2023-11-08"},{"lineNumber":137,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":138,"author":{"gitId":"janelleenqi"},"content":"        case UserCommandWord.RECOMMEND_COMMAND: {","lastModifiedDate":"2023-11-08"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"            executeRecommendCommand(student);","lastModifiedDate":"2023-11-13"},{"lineNumber":140,"author":{"gitId":"janelleenqi"},"content":"            break;","lastModifiedDate":"2023-11-08"},{"lineNumber":141,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":142,"author":{"gitId":"janelleenqi"},"content":"        case UserCommandWord.ADD_MODULE_COMMAND: {","lastModifiedDate":"2023-11-08"},{"lineNumber":143,"author":{"gitId":"janelleenqi"},"content":"            String module \u003d arguments[0].toUpperCase();","lastModifiedDate":"2023-11-08"},{"lineNumber":144,"author":{"gitId":"janelleenqi"},"content":"            int targetSem \u003d Integer.parseInt(arguments[1]);","lastModifiedDate":"2023-11-08"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":146,"author":{"gitId":"SebasFok"},"content":"            executeAddModuleCommand(module, targetSem, student);","lastModifiedDate":"2023-11-13"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"            break;","lastModifiedDate":"2023-11-08"},{"lineNumber":148,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"        case UserCommandWord.DELETE_MODULE_COMMAND: {","lastModifiedDate":"2023-11-08"},{"lineNumber":150,"author":{"gitId":"janelleenqi"},"content":"            String module \u003d arguments[0].toUpperCase();","lastModifiedDate":"2023-11-08"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":152,"author":{"gitId":"SebasFok"},"content":"            executeDeleteModuleCommand(module,student);","lastModifiedDate":"2023-11-13"},{"lineNumber":153,"author":{"gitId":"janelleenqi"},"content":"            break;","lastModifiedDate":"2023-11-08"},{"lineNumber":154,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":155,"author":{"gitId":"janelleenqi"},"content":"        case UserCommandWord.SHIFT_MODULE_COMMAND: {","lastModifiedDate":"2023-11-08"},{"lineNumber":156,"author":{"gitId":"janelleenqi"},"content":"            String module \u003d arguments[0].toUpperCase();","lastModifiedDate":"2023-11-08"},{"lineNumber":157,"author":{"gitId":"janelleenqi"},"content":"            int targetSem \u003d Integer.parseInt(arguments[1]);","lastModifiedDate":"2023-11-08"},{"lineNumber":158,"author":{"gitId":"SebasFok"},"content":"            executeShiftModuleCommand(module, targetSem, student);","lastModifiedDate":"2023-11-13"},{"lineNumber":159,"author":{"gitId":"janelleenqi"},"content":"            break;","lastModifiedDate":"2023-11-08"},{"lineNumber":160,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":161,"author":{"gitId":"janelleenqi"},"content":"        case UserCommandWord.VIEW_SCHEDULE_COMMAND: {","lastModifiedDate":"2023-11-08"},{"lineNumber":162,"author":{"gitId":"janelleenqi"},"content":"            student.printSchedule();","lastModifiedDate":"2023-11-08"},{"lineNumber":163,"author":{"gitId":"janelleenqi"},"content":"            break;","lastModifiedDate":"2023-11-08"},{"lineNumber":164,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":165,"author":{"gitId":"SebasFok"},"content":"        case UserCommandWord.CLEAR_SCHEDULE_COMMAND: {","lastModifiedDate":"2023-11-08"},{"lineNumber":166,"author":{"gitId":"SebasFok"},"content":"            executeClearScheduleCommand(student);","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"SebasFok"},"content":"            break;","lastModifiedDate":"2023-11-08"},{"lineNumber":168,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":169,"author":{"gitId":"janelleenqi"},"content":"        case UserCommandWord.COMPLETE_MODULE_COMMAND: {","lastModifiedDate":"2023-11-08"},{"lineNumber":170,"author":{"gitId":"janelleenqi"},"content":"            String module \u003d arguments[0].toUpperCase();","lastModifiedDate":"2023-11-08"},{"lineNumber":171,"author":{"gitId":"janelleenqi"},"content":"            //to add to user completed module","lastModifiedDate":"2023-11-08"},{"lineNumber":172,"author":{"gitId":"janelleenqi"},"content":"            completeModule(student, module);","lastModifiedDate":"2023-11-08"},{"lineNumber":173,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":174,"author":{"gitId":"janelleenqi"},"content":"            break;","lastModifiedDate":"2023-11-08"},{"lineNumber":175,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":176,"author":{"gitId":"janelleenqi"},"content":"        case UserCommandWord.REQUIRED_MODULES_COMMAND: {","lastModifiedDate":"2023-11-08"},{"lineNumber":177,"author":{"gitId":"janelleenqi"},"content":"            executeGetRequiredModulesForStudent(student.getMajor());","lastModifiedDate":"2023-11-14"},{"lineNumber":178,"author":{"gitId":"janelleenqi"},"content":"            break;","lastModifiedDate":"2023-11-08"},{"lineNumber":179,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":180,"author":{"gitId":"janelleenqi"},"content":"        case UserCommandWord.INFO_COMMAND: {","lastModifiedDate":"2023-11-08"},{"lineNumber":181,"author":{"gitId":"janelleenqi"},"content":"            Api.infoCommands(arguments[0], userInput);","lastModifiedDate":"2023-11-08"},{"lineNumber":182,"author":{"gitId":"janelleenqi"},"content":"            break;","lastModifiedDate":"2023-11-08"},{"lineNumber":183,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":184,"author":{"gitId":"janelleenqi"},"content":"        case UserCommandWord.SEARCH_MODULE_COMMAND: {","lastModifiedDate":"2023-11-08"},{"lineNumber":185,"author":{"gitId":"janelleenqi"},"content":"            Api.searchCommand(userInput);","lastModifiedDate":"2023-11-08"},{"lineNumber":186,"author":{"gitId":"janelleenqi"},"content":"            break;","lastModifiedDate":"2023-11-08"},{"lineNumber":187,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":188,"author":{"gitId":"janelleenqi"},"content":"        case UserCommandWord.HELP_COMMAND: {","lastModifiedDate":"2023-11-08"},{"lineNumber":189,"author":{"gitId":"ryanlohyr"},"content":"            displayCommands(commandManager);","lastModifiedDate":"2023-11-12"},{"lineNumber":190,"author":{"gitId":"janelleenqi"},"content":"            break;","lastModifiedDate":"2023-11-08"},{"lineNumber":191,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":192,"author":{"gitId":"janelleenqi"},"content":"        case UserCommandWord.TIMETABLE_COMMAND: {","lastModifiedDate":"2023-11-08"},{"lineNumber":193,"author":{"gitId":"janelleenqi"},"content":"            student.timetableShowOrModify(arguments[0]);","lastModifiedDate":"2023-11-09"},{"lineNumber":194,"author":{"gitId":"janelleenqi"},"content":"            break;","lastModifiedDate":"2023-11-08"},{"lineNumber":195,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":196,"author":{"gitId":"janelleenqi"},"content":"        default: {","lastModifiedDate":"2023-11-08"},{"lineNumber":197,"author":{"gitId":"janelleenqi"},"content":"            break;","lastModifiedDate":"2023-11-08"},{"lineNumber":198,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":199,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":200,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":201,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":202,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":203,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"SebasFok":15,"ryanlohyr":6,"janelleenqi":182}},{"path":"src/main/java/seedu/duke/models/schema/UserCommandWord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"public interface UserCommandWord {","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"    String EXIT_COMMAND \u003d \"Bye\";","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"    String LEFT_COMMAND \u003d \"left\";","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"    String PACE_COMMAND \u003d \"pace\";","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"    String PREREQUISITE_COMMAND \u003d \"prereq\";","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"    String RECOMMEND_COMMAND \u003d \"recommend\";","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"    String SET_MAJOR_COMMAND \u003d \"major\";","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"    String ADD_MODULE_COMMAND \u003d \"add\";","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    String DELETE_MODULE_COMMAND \u003d \"delete\";","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"    String SHIFT_MODULE_COMMAND \u003d \"shift\";","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"    String CLEAR_SCHEDULE_COMMAND \u003d \"clear\";","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"    String VIEW_SCHEDULE_COMMAND \u003d \"schedule\";","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"    String COMPLETE_MODULE_COMMAND \u003d \"complete\";","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"    String REQUIRED_MODULES_COMMAND \u003d \"required\";","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"    String INFO_COMMAND \u003d \"info\";","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"    String SEARCH_MODULE_COMMAND \u003d \"search\";","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"    String HELP_COMMAND \u003d \"help\";","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"rohitcube"},"content":"    String TIMETABLE_COMMAND \u003d \"timetable\";","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    String BYE_COMMAND \u003d \"bye\";","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"SebasFok":2,"ryanlohyr":18,"janelleenqi":2,"rohitcube":1}},{"path":"src/main/java/seedu/duke/storage/FileDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.Major;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.Schedule;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.TimetableUserCommand;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.utils.Parser;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.utils.exceptions.CorruptedFileException;","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.utils.exceptions.InvalidTimetableUserCommandException;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.utils.exceptions.MissingFileException;","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"import java.io.File;","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"public class FileDecoder {","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"SebasFok"},"content":"     * Retrieves a schedule from a specified file path.","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"SebasFok"},"content":"     * @param scheduleFilePath The file path where the schedule is stored.","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"SebasFok"},"content":"     * @return The retrieved schedule.","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"     * @throws MissingFileException If the file is missing.","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"     * @throws CorruptedFileException If the file is corrupted or the data format is invalid.","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"    public static Schedule retrieveSchedule(String scheduleFilePath) throws MissingFileException,","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"            CorruptedFileException {","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"SebasFok"},"content":"        if (!isFileExist(scheduleFilePath)) {","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"            throw new MissingFileException();","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule();","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"            // Create a FileReader and BufferedReader to read the file.","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"            FileReader fileReader \u003d new FileReader(scheduleFilePath);","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"            String line;","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"SebasFok"},"content":"            int targetIndex \u003d 0;","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"SebasFok"},"content":"            int[] modulesPerSemArray \u003d new int[]{0, 0, 0, 0, 0, 0, 0, 0};","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"SebasFok"},"content":"            // Read lines from the file and add them to the ArrayList.","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"SebasFok"},"content":"            while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"SebasFok"},"content":"                String[] splitParts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"SebasFok"},"content":"                switch (splitParts[0]) {","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"SebasFok"},"content":"                // Happens once on the first line of txt file so that sorting subsequent modules is possible","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"SebasFok"},"content":"                case \"ModulesPerSem\":","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"SebasFok"},"content":"                    String[] modulesPerSemStringArray \u003d splitParts[1].split(\",\");","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"SebasFok"},"content":"                    for (int i \u003d 0; i \u003c modulesPerSemArray.length; i++) {","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"SebasFok"},"content":"                        modulesPerSemArray[i] \u003d Integer.parseInt(modulesPerSemStringArray[i]);","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"SebasFok"},"content":"                    }","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"SebasFok"},"content":"                    break;","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"SebasFok"},"content":"                case \"Module\":","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"SebasFok"},"content":"                    String module \u003d splitParts[1];","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"SebasFok"},"content":"                    int targetSemester \u003d 1;","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"SebasFok"},"content":"                    int indexOfLastModuleOfSem \u003d modulesPerSemArray[targetSemester - 1] - 1;","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"SebasFok"},"content":"                    while (targetIndex \u003e indexOfLastModuleOfSem) {","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"SebasFok"},"content":"                        indexOfLastModuleOfSem +\u003d modulesPerSemArray[targetSemester];","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"SebasFok"},"content":"                        targetSemester +\u003d 1;","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"SebasFok"},"content":"                    }","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"SebasFok"},"content":"                    schedule.addModule(module, targetSemester);","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"SebasFok"},"content":"                    if (splitParts[2].equals(\"O\")) {","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"SebasFok"},"content":"                        schedule.getModule(module).markModuleAsCompleted();","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"SebasFok"},"content":"                    }","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"SebasFok"},"content":"                    targetIndex +\u003d 1;","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"SebasFok"},"content":"                    break;","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"SebasFok"},"content":"                default:","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"SebasFok"},"content":"                    if (!splitParts[0].trim().isEmpty()) {","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"SebasFok"},"content":"                        throw new CorruptedFileException();","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"SebasFok"},"content":"                    }","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"SebasFok"},"content":"                }","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"SebasFok"},"content":"            // Close the BufferedReader to release resources.","lastModifiedDate":"2023-11-13"},{"lineNumber":89,"author":{"gitId":"SebasFok"},"content":"            bufferedReader.close();","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"SebasFok"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"SebasFok"},"content":"            throw new CorruptedFileException();","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"SebasFok"},"content":"        return schedule;","lastModifiedDate":"2023-11-13"},{"lineNumber":95,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":96,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"SebasFok"},"content":"     * Retrieves student details from a specified file path.","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"SebasFok"},"content":"     * @param studentDetailsFilePath The file path where the student details are stored.","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"SebasFok"},"content":"     * @return The retrieved student details.","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"SebasFok"},"content":"     * @throws MissingFileException If the file is missing.","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"SebasFok"},"content":"     * @throws CorruptedFileException If the file is corrupted or the data format is invalid.","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"SebasFok"},"content":"    public static ArrayList\u003cString\u003e retrieveStudentDetails(String studentDetailsFilePath) throws MissingFileException,","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"SebasFok"},"content":"            CorruptedFileException {","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"SebasFok"},"content":"        if (!isFileExist(studentDetailsFilePath)) {","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"SebasFok"},"content":"            throw new MissingFileException();","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"SebasFok"},"content":"            // Create a FileReader and BufferedReader to read the file.","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"SebasFok"},"content":"            FileReader fileReader \u003d new FileReader(studentDetailsFilePath);","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"SebasFok"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"SebasFok"},"content":"            ArrayList\u003cString\u003e studentDetails \u003d new ArrayList\u003c\u003e(3);","lastModifiedDate":"2023-11-13"},{"lineNumber":119,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"SebasFok"},"content":"            String line;","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"SebasFok"},"content":"            int lineNumber \u003d 0;","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"SebasFok"},"content":"            // to track which line it is supposed to be on","lastModifiedDate":"2023-11-13"},{"lineNumber":124,"author":{"gitId":"SebasFok"},"content":"            HashMap\u003cString, Integer\u003e variableMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"SebasFok"},"content":"            // Adding key-value pairs","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"SebasFok"},"content":"            variableMap.put(\"Name\", 0);","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"SebasFok"},"content":"            variableMap.put(\"Major\", 1);","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"SebasFok"},"content":"            variableMap.put(\"Year\", 2);","lastModifiedDate":"2023-11-13"},{"lineNumber":129,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":130,"author":{"gitId":"SebasFok"},"content":"            // Read lines from the file and add them to the ArrayList.","lastModifiedDate":"2023-11-13"},{"lineNumber":131,"author":{"gitId":"SebasFok"},"content":"            while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-11-13"},{"lineNumber":132,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"SebasFok"},"content":"                String[] splitParts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-11-13"},{"lineNumber":134,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":135,"author":{"gitId":"SebasFok"},"content":"                String userAttribute \u003d splitParts[0];","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"SebasFok"},"content":"                //validation to see that variables has not been tampered with","lastModifiedDate":"2023-11-13"},{"lineNumber":138,"author":{"gitId":"SebasFok"},"content":"                if(variableMap.get(userAttribute) !\u003d lineNumber){","lastModifiedDate":"2023-11-13"},{"lineNumber":139,"author":{"gitId":"SebasFok"},"content":"                    throw new CorruptedFileException();","lastModifiedDate":"2023-11-13"},{"lineNumber":140,"author":{"gitId":"SebasFok"},"content":"                }","lastModifiedDate":"2023-11-13"},{"lineNumber":141,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":142,"author":{"gitId":"SebasFok"},"content":"                switch (splitParts[0]) {","lastModifiedDate":"2023-11-13"},{"lineNumber":143,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":144,"author":{"gitId":"SebasFok"},"content":"                case \"Name\":","lastModifiedDate":"2023-11-13"},{"lineNumber":145,"author":{"gitId":"SebasFok"},"content":"                    String name \u003d splitParts[1];","lastModifiedDate":"2023-11-13"},{"lineNumber":146,"author":{"gitId":"SebasFok"},"content":"                    studentDetails.add(0, name);","lastModifiedDate":"2023-11-13"},{"lineNumber":147,"author":{"gitId":"SebasFok"},"content":"                    break;","lastModifiedDate":"2023-11-13"},{"lineNumber":148,"author":{"gitId":"SebasFok"},"content":"                case \"Major\":","lastModifiedDate":"2023-11-13"},{"lineNumber":149,"author":{"gitId":"SebasFok"},"content":"                    String major \u003d splitParts[1];","lastModifiedDate":"2023-11-13"},{"lineNumber":150,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":151,"author":{"gitId":"SebasFok"},"content":"                    // Check if major stored in txt file is valid","lastModifiedDate":"2023-11-13"},{"lineNumber":152,"author":{"gitId":"SebasFok"},"content":"                    Major.valueOf(major.toUpperCase());","lastModifiedDate":"2023-11-13"},{"lineNumber":153,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":154,"author":{"gitId":"SebasFok"},"content":"                    studentDetails.add(1, major);","lastModifiedDate":"2023-11-13"},{"lineNumber":155,"author":{"gitId":"SebasFok"},"content":"                    break;","lastModifiedDate":"2023-11-13"},{"lineNumber":156,"author":{"gitId":"SebasFok"},"content":"                case \"Year\":","lastModifiedDate":"2023-11-13"},{"lineNumber":157,"author":{"gitId":"SebasFok"},"content":"                    String year \u003d splitParts[1];","lastModifiedDate":"2023-11-13"},{"lineNumber":158,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":159,"author":{"gitId":"SebasFok"},"content":"                    //Check if year stored in txt file is valid","lastModifiedDate":"2023-11-13"},{"lineNumber":160,"author":{"gitId":"SebasFok"},"content":"                    if (!Parser.isValidAcademicYear(year)){","lastModifiedDate":"2023-11-13"},{"lineNumber":161,"author":{"gitId":"SebasFok"},"content":"                        throw new CorruptedFileException();","lastModifiedDate":"2023-11-13"},{"lineNumber":162,"author":{"gitId":"SebasFok"},"content":"                    }","lastModifiedDate":"2023-11-13"},{"lineNumber":163,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":164,"author":{"gitId":"SebasFok"},"content":"                    studentDetails.add(2, year);","lastModifiedDate":"2023-11-13"},{"lineNumber":165,"author":{"gitId":"SebasFok"},"content":"                    break;","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"SebasFok"},"content":"                default:","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"SebasFok"},"content":"                    if (!splitParts[0].trim().isEmpty()) {","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"SebasFok"},"content":"                        throw new CorruptedFileException();","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"SebasFok"},"content":"                    }","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"SebasFok"},"content":"                }","lastModifiedDate":"2023-11-13"},{"lineNumber":171,"author":{"gitId":"SebasFok"},"content":"                lineNumber +\u003d 1;","lastModifiedDate":"2023-11-13"},{"lineNumber":172,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"SebasFok"},"content":"            // Close the BufferedReader to release resources.","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"SebasFok"},"content":"            bufferedReader.close();","lastModifiedDate":"2023-11-13"},{"lineNumber":175,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"SebasFok"},"content":"            return studentDetails;","lastModifiedDate":"2023-11-13"},{"lineNumber":177,"author":{"gitId":"SebasFok"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":178,"author":{"gitId":"SebasFok"},"content":"            throw new CorruptedFileException();","lastModifiedDate":"2023-11-13"},{"lineNumber":179,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":182,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves a timetable from a specified file path.","lastModifiedDate":"2023-11-13"},{"lineNumber":185,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":186,"author":{"gitId":"janelleenqi"},"content":"     * @param student The student for whom the timetable is retrieved.","lastModifiedDate":"2023-11-13"},{"lineNumber":187,"author":{"gitId":"janelleenqi"},"content":"     * @param timetableFilePath The file path where the timetable is stored.","lastModifiedDate":"2023-11-13"},{"lineNumber":188,"author":{"gitId":"janelleenqi"},"content":"     * @return The retrieved timetable as a list of commands.","lastModifiedDate":"2023-11-13"},{"lineNumber":189,"author":{"gitId":"janelleenqi"},"content":"     * @throws MissingFileException If the file is missing.","lastModifiedDate":"2023-11-13"},{"lineNumber":190,"author":{"gitId":"janelleenqi"},"content":"     * @throws CorruptedFileException If the file is corrupted or the data format is invalid.","lastModifiedDate":"2023-11-13"},{"lineNumber":191,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":192,"author":{"gitId":"janelleenqi"},"content":"    public static ArrayList\u003cTimetableUserCommand\u003e retrieveTimetable(Student student, String timetableFilePath)","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"janelleenqi"},"content":"            throws MissingFileException, CorruptedFileException {","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"janelleenqi"},"content":"        if (!isFileExist(timetableFilePath)) {","lastModifiedDate":"2023-11-13"},{"lineNumber":196,"author":{"gitId":"janelleenqi"},"content":"            throw new MissingFileException();","lastModifiedDate":"2023-11-13"},{"lineNumber":197,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":198,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":199,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cTimetableUserCommand\u003e timetableUserCommands;","lastModifiedDate":"2023-11-13"},{"lineNumber":200,"author":{"gitId":"janelleenqi"},"content":"        try {","lastModifiedDate":"2023-11-13"},{"lineNumber":201,"author":{"gitId":"janelleenqi"},"content":"            // Create a FileReader and BufferedReader to read the file.","lastModifiedDate":"2023-11-13"},{"lineNumber":202,"author":{"gitId":"janelleenqi"},"content":"            FileReader fileReader \u003d new FileReader(timetableFilePath);","lastModifiedDate":"2023-11-13"},{"lineNumber":203,"author":{"gitId":"janelleenqi"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2023-11-13"},{"lineNumber":204,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":205,"author":{"gitId":"janelleenqi"},"content":"            String line;","lastModifiedDate":"2023-11-13"},{"lineNumber":206,"author":{"gitId":"janelleenqi"},"content":"            if ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-11-13"},{"lineNumber":207,"author":{"gitId":"janelleenqi"},"content":"                if (!line.equals(\"TimetableForCurrentSem\")) {","lastModifiedDate":"2023-11-13"},{"lineNumber":208,"author":{"gitId":"janelleenqi"},"content":"                    throw new CorruptedFileException();","lastModifiedDate":"2023-11-13"},{"lineNumber":209,"author":{"gitId":"janelleenqi"},"content":"                }","lastModifiedDate":"2023-11-13"},{"lineNumber":210,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-13"},{"lineNumber":211,"author":{"gitId":"janelleenqi"},"content":"            timetableUserCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-13"},{"lineNumber":212,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":213,"author":{"gitId":"janelleenqi"},"content":"            // Read lines from the file and add them to the ArrayList.","lastModifiedDate":"2023-11-13"},{"lineNumber":214,"author":{"gitId":"janelleenqi"},"content":"            while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-11-13"},{"lineNumber":215,"author":{"gitId":"janelleenqi"},"content":"                try {","lastModifiedDate":"2023-11-13"},{"lineNumber":216,"author":{"gitId":"janelleenqi"},"content":"                    timetableUserCommands.add(new TimetableUserCommand(student,","lastModifiedDate":"2023-11-13"},{"lineNumber":217,"author":{"gitId":"janelleenqi"},"content":"                            student.getTimetable().getCurrentSemesterModulesWeekly(), line));","lastModifiedDate":"2023-11-13"},{"lineNumber":218,"author":{"gitId":"janelleenqi"},"content":"                } catch (InvalidTimetableUserCommandException e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":219,"author":{"gitId":"janelleenqi"},"content":"                    //corrupted","lastModifiedDate":"2023-11-13"},{"lineNumber":220,"author":{"gitId":"janelleenqi"},"content":"                    throw new CorruptedFileException();","lastModifiedDate":"2023-11-13"},{"lineNumber":221,"author":{"gitId":"janelleenqi"},"content":"                }","lastModifiedDate":"2023-11-13"},{"lineNumber":222,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":223,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-13"},{"lineNumber":224,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":225,"author":{"gitId":"janelleenqi"},"content":"            // Close the BufferedReader to release resources.","lastModifiedDate":"2023-11-13"},{"lineNumber":226,"author":{"gitId":"janelleenqi"},"content":"            bufferedReader.close();","lastModifiedDate":"2023-11-13"},{"lineNumber":227,"author":{"gitId":"janelleenqi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":228,"author":{"gitId":"janelleenqi"},"content":"            throw new CorruptedFileException();","lastModifiedDate":"2023-11-13"},{"lineNumber":229,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":230,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":231,"author":{"gitId":"janelleenqi"},"content":"        return timetableUserCommands;","lastModifiedDate":"2023-11-13"},{"lineNumber":232,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":233,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":234,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":235,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":236,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":237,"author":{"gitId":"SebasFok"},"content":"     * Creates \"schedule.txt\", \"studentDetails.txt\" and \"timetable.txt\" files in the data directory to store student","lastModifiedDate":"2023-11-13"},{"lineNumber":238,"author":{"gitId":"SebasFok"},"content":"     * data","lastModifiedDate":"2023-11-13"},{"lineNumber":239,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":240,"author":{"gitId":"SebasFok"},"content":"     * @param storageDirectory location of storage directory to be created","lastModifiedDate":"2023-11-13"},{"lineNumber":241,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":242,"author":{"gitId":"SebasFok"},"content":"    public static void createNewStorageFile(String storageDirectory) {","lastModifiedDate":"2023-11-13"},{"lineNumber":243,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":244,"author":{"gitId":"SebasFok"},"content":"        createDirectory(storageDirectory);","lastModifiedDate":"2023-11-13"},{"lineNumber":245,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":246,"author":{"gitId":"SebasFok"},"content":"        createFileInDirectory(storageDirectory, \"schedule.txt\");","lastModifiedDate":"2023-11-13"},{"lineNumber":247,"author":{"gitId":"SebasFok"},"content":"        createFileInDirectory(storageDirectory, \"studentDetails.txt\");","lastModifiedDate":"2023-11-13"},{"lineNumber":248,"author":{"gitId":"SebasFok"},"content":"        createFileInDirectory(storageDirectory, \"timetable.txt\");","lastModifiedDate":"2023-11-13"},{"lineNumber":249,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":250,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":251,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":252,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":253,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":254,"author":{"gitId":"SebasFok"},"content":"     * Takes in the location of the file in question and returns whether the file exist","lastModifiedDate":"2023-11-13"},{"lineNumber":255,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":256,"author":{"gitId":"SebasFok"},"content":"     * @param filePath location of the file in question","lastModifiedDate":"2023-11-13"},{"lineNumber":257,"author":{"gitId":"SebasFok"},"content":"     * @return return true if the file exist,return false otherwise","lastModifiedDate":"2023-11-13"},{"lineNumber":258,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":259,"author":{"gitId":"SebasFok"},"content":"    public static boolean isFileExist(String filePath) {","lastModifiedDate":"2023-11-13"},{"lineNumber":260,"author":{"gitId":"SebasFok"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-11-13"},{"lineNumber":261,"author":{"gitId":"SebasFok"},"content":"        return Files.exists(path);","lastModifiedDate":"2023-11-13"},{"lineNumber":262,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":263,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":264,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":265,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":266,"author":{"gitId":"SebasFok"},"content":"     * This method takes in a path and creates a directory at that location. Should the","lastModifiedDate":"2023-11-13"},{"lineNumber":267,"author":{"gitId":"SebasFok"},"content":"     * directory already exist, no new directory will be created.","lastModifiedDate":"2023-11-13"},{"lineNumber":268,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":269,"author":{"gitId":"SebasFok"},"content":"     * @param folderPath the location of where the directory should be created","lastModifiedDate":"2023-11-13"},{"lineNumber":270,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":271,"author":{"gitId":"SebasFok"},"content":"    public static void createDirectory(String folderPath) {","lastModifiedDate":"2023-11-13"},{"lineNumber":272,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":273,"author":{"gitId":"SebasFok"},"content":"        File folder \u003d new File(folderPath);","lastModifiedDate":"2023-11-13"},{"lineNumber":274,"author":{"gitId":"SebasFok"},"content":"        if (folder.mkdir()) {","lastModifiedDate":"2023-11-13"},{"lineNumber":275,"author":{"gitId":"SebasFok"},"content":"            //System.out.println(\"Folder created successfully.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":276,"author":{"gitId":"SebasFok"},"content":"        } else {","lastModifiedDate":"2023-11-13"},{"lineNumber":277,"author":{"gitId":"SebasFok"},"content":"            //System.out.println(\"Folder already exists\");","lastModifiedDate":"2023-11-13"},{"lineNumber":278,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":279,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":280,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":281,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":282,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":283,"author":{"gitId":"SebasFok"},"content":"     * This method takes in the path of a directory and creates a file \u0027fileName\u0027 in","lastModifiedDate":"2023-11-13"},{"lineNumber":284,"author":{"gitId":"SebasFok"},"content":"     * the directory. Should the file already exist, no new file will be created.","lastModifiedDate":"2023-11-13"},{"lineNumber":285,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":286,"author":{"gitId":"SebasFok"},"content":"     * @param directoryPath the location of the directory where the file should be created","lastModifiedDate":"2023-11-13"},{"lineNumber":287,"author":{"gitId":"SebasFok"},"content":"     * @param fileName the name of the file to be created","lastModifiedDate":"2023-11-13"},{"lineNumber":288,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":289,"author":{"gitId":"SebasFok"},"content":"    public static void createFileInDirectory(String directoryPath, String fileName) {","lastModifiedDate":"2023-11-13"},{"lineNumber":290,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":291,"author":{"gitId":"SebasFok"},"content":"        // Create the full path to the text file","lastModifiedDate":"2023-11-13"},{"lineNumber":292,"author":{"gitId":"SebasFok"},"content":"        String filePath \u003d directoryPath + \"/\" + fileName;","lastModifiedDate":"2023-11-13"},{"lineNumber":293,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":294,"author":{"gitId":"SebasFok"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-11-13"},{"lineNumber":295,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":296,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-11-13"},{"lineNumber":297,"author":{"gitId":"SebasFok"},"content":"            // Create the file","lastModifiedDate":"2023-11-13"},{"lineNumber":298,"author":{"gitId":"SebasFok"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-11-13"},{"lineNumber":299,"author":{"gitId":"SebasFok"},"content":"                //System.out.println(\"Text file created successfully at: \" + filePath);","lastModifiedDate":"2023-11-13"},{"lineNumber":300,"author":{"gitId":"SebasFok"},"content":"            } else {","lastModifiedDate":"2023-11-13"},{"lineNumber":301,"author":{"gitId":"SebasFok"},"content":"                //System.out.println(\"File already exists.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":302,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-13"},{"lineNumber":303,"author":{"gitId":"SebasFok"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":304,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"An IOException occurred: \" + e.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":305,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":306,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":307,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"SebasFok":254,"janelleenqi":53}},{"path":"src/main/java/seedu/duke/storage/ResourceStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"public class ResourceStorage {","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"     * Determines the course requirements based on the specified major. Function is used if file is not found","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"     * @param major A string representing the major (e.g., \"CEG\" for Computer Engineering, \"CS\" for Computer Science).","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"     * @return An array of strings containing the course requirements for the specified major.","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"    static String[] determineRequirements(String major) {","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"        String[] courseArray;","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"        String[] csCourseArray \u003d {","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"            \"CS1101S\", \"ES2660\", \"GEC1000\", \"GEA1000\", \"GESS1000\",","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"            \"GEN2000\", \"IS1108\", \"CS1231S\", \"CS2030\", \"CS2040S\",","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"            \"CS2100\", \"CS2101\", \"CS2103T\", \"CS2106\", \"CS2109S\",","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"            \"CS3230\", \"MA1521\", \"MA1522\", \"ST2334\", \"CP3880\"","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"        };","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"        String[] cegCourseArray \u003d {","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"            \"CG1111A\", \"MA1511\", \"MA1512\", \"CS1010\", \"GESS1000\",","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"            \"GEC1000\", \"GEN2000\", \"ES2631\", \"GEA1000\", \"DTK1234\",","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"            \"EG1311\", \"IE2141\", \"EE2211\", \"EG2501\", \"CDE2000\",","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"SebasFok"},"content":"            \"PF1101\", \"CG4002\", \"MA1508E\", \"EG2401A\", \"CP3880\",","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"            \"CG2111A\", \"CS1231\", \"CG2023\", \"CG2027\", \"CG2028\",","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"SebasFok"},"content":"            \"CG2271\", \"ST2334\", \"CS2040C\", \"CS2113\", \"EE2026\", \"EE4204\"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"SebasFok"},"content":"        };","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"        if(major.equals(\"CEG\")){","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"            courseArray \u003d cegCourseArray;","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"        }else{","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"            courseArray \u003d csCourseArray;","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"SebasFok"},"content":"        return courseArray;","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"SebasFok":37}},{"path":"src/main/java/seedu/duke/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.Event;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.ModuleList;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.ModuleWeekly;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.Schedule;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.TimetableUserCommand;","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.utils.exceptions.CorruptedFileException;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.InvalidTimetableUserCommandException;","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.utils.exceptions.MissingFileException;","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.TimetableUnavailableException;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.storage.FileDecoder.createNewStorageFile;","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.storage.FileDecoder.retrieveTimetable;","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.storage.FileDecoder.retrieveStudentDetails;","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.storage.FileDecoder.retrieveSchedule;","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.storage.ResourceStorage.determineRequirements;","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"SebasFok"},"content":"public class StorageManager {","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"    private final String userDirectory;","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"     * Constructs a new Storage instance with the specified file path.","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"SebasFok"},"content":"    public StorageManager() {","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"SebasFok"},"content":"        this.userDirectory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"     * Retrieves a list of modules requirements for a specified major.","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"     * @param major The major for which to retrieve requirements.","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"     * @return An ArrayList of module codes.","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"     * @throws RuntimeException If the specified major requirements file is not found.","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"    public static ArrayList\u003cString\u003e getRequirements(String major) {","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"        String[] courseArray \u003d determineRequirements(major);","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(courseArray));","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"SebasFok"},"content":"     * Creates a data directory containing txt folders to store student details, schedule and timetable.","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"SebasFok"},"content":"    public void createUserStorageFile() {","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"SebasFok"},"content":"        String dataDirectory \u003d userDirectory + \"/data\";","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"SebasFok"},"content":"        createNewStorageFile(dataDirectory);","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"SebasFok"},"content":"     * Loads the student\u0027s schedule from the \"schedule.txt\" file, including modules per semester and individual modules.","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"SebasFok"},"content":"     * Also retains the completion status of each module in the schedule.","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"SebasFok"},"content":"     * @return A Schedule object representing the loaded schedule.","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"SebasFok"},"content":"     * @throws MissingFileException    If the \"schedule.txt\" file is missing.","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"SebasFok"},"content":"     * @throws CorruptedFileException  If the file is corrupted or has unexpected content.","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"SebasFok"},"content":"    public Schedule loadSchedule() throws MissingFileException, CorruptedFileException {","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"SebasFok"},"content":"        String scheduleFilePath \u003d userDirectory + \"/data/schedule.txt\";","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"SebasFok"},"content":"        return retrieveSchedule(scheduleFilePath);","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"SebasFok"},"content":"     * Loads the student\u0027s details (name, major, and year) from the \"studentDetails.txt\" file.","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"SebasFok"},"content":"     * @return An ArrayList containing the loaded student details in the order [Name, Major, Year].","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"SebasFok"},"content":"     * @throws MissingFileException    If the \"studentDetails.txt\" file is missing.","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"SebasFok"},"content":"     * @throws CorruptedFileException  If the file is corrupted or has unexpected content.","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"SebasFok"},"content":"    public ArrayList\u003cString\u003e loadStudentDetails() throws MissingFileException, CorruptedFileException {","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"SebasFok"},"content":"        String studentDetailsFilePath \u003d userDirectory + \"/data/studentDetails.txt\";","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"SebasFok"},"content":"        return retrieveStudentDetails(studentDetailsFilePath);","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"     * Loads timetable user commands from the timetable.txt save file and processes them to update the student\u0027s","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"     * timetable.","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"     * @param student The student whose timetable is being updated.","lastModifiedDate":"2023-11-13"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"     * @return An ArrayList of TimetableUserCommand objects representing the loaded commands.","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"     * @throws MissingFileException If the timetable file is missing.","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"     * @throws CorruptedFileException If the timetable file is corrupted or contains invalid commands.","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"    public ArrayList\u003cTimetableUserCommand\u003e loadTimetable(Student student)","lastModifiedDate":"2023-11-12"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"            throws MissingFileException, CorruptedFileException {","lastModifiedDate":"2023-11-12"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"        String timetableFilePath \u003d userDirectory + \"/data/timetable.txt\";","lastModifiedDate":"2023-11-12"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"        return retrieveTimetable(student,timetableFilePath);","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"     * Adds events to the student\u0027s timetable based on the provided timetable user commands.","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"     * @param timetableUserCommands An ArrayList of TimetableUserCommand objects representing the commands to process.","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"     * @param student               The student whose timetable is being updated.","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"     * @throws CorruptedFileException If the provided timetable user commands are corrupted or contain invalid commands.","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"    public void addEventsToStudentTimetable(ArrayList\u003cTimetableUserCommand\u003e timetableUserCommands, Student student)","lastModifiedDate":"2023-11-12"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"            throws CorruptedFileException {","lastModifiedDate":"2023-11-12"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cModuleWeekly\u003e currentSemModulesWeekly \u003d student.getTimetable().getCurrentSemesterModulesWeekly();","lastModifiedDate":"2023-11-12"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"        for (TimetableUserCommand currentTimetableCommand : timetableUserCommands) {","lastModifiedDate":"2023-11-12"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"            //not exit, not clear","lastModifiedDate":"2023-11-12"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"            try {","lastModifiedDate":"2023-11-12"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"                currentTimetableCommand.processTimetableCommandLesson(currentSemModulesWeekly);","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"            } catch (InvalidTimetableUserCommandException e) {","lastModifiedDate":"2023-11-12"},{"lineNumber":124,"author":{"gitId":"janelleenqi"},"content":"                //corrupted","lastModifiedDate":"2023-11-12"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"                throw new CorruptedFileException();","lastModifiedDate":"2023-11-12"},{"lineNumber":126,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":128,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":129,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":130,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":131,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":132,"author":{"gitId":"SebasFok"},"content":"     * Saves the student\u0027s details (name, major, and year) to the \"studentDetails.txt\" file.","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":134,"author":{"gitId":"SebasFok"},"content":"     * @param student The Student object containing the details to be saved.","lastModifiedDate":"2023-11-13"},{"lineNumber":135,"author":{"gitId":"SebasFok"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"SebasFok"},"content":"    public void saveStudentDetails (Student student) throws IOException {","lastModifiedDate":"2023-11-10"},{"lineNumber":138,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":139,"author":{"gitId":"SebasFok"},"content":"        String studentDetailsFilePath \u003d userDirectory + \"/data/studentDetails.txt\";","lastModifiedDate":"2023-11-10"},{"lineNumber":140,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":141,"author":{"gitId":"SebasFok"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(studentDetailsFilePath))) {","lastModifiedDate":"2023-11-10"},{"lineNumber":142,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":143,"author":{"gitId":"SebasFok"},"content":"            String name \u003d student.getName();","lastModifiedDate":"2023-11-10"},{"lineNumber":144,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":145,"author":{"gitId":"SebasFok"},"content":"            String major \u003d student.getMajor();","lastModifiedDate":"2023-11-10"},{"lineNumber":146,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":147,"author":{"gitId":"SebasFok"},"content":"            String year \u003d student.getYear();","lastModifiedDate":"2023-11-10"},{"lineNumber":148,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":149,"author":{"gitId":"SebasFok"},"content":"            // Write the new content to the file","lastModifiedDate":"2023-11-10"},{"lineNumber":150,"author":{"gitId":"SebasFok"},"content":"            writer.write(\"Name | \" + name);","lastModifiedDate":"2023-11-10"},{"lineNumber":151,"author":{"gitId":"SebasFok"},"content":"            writer.newLine();","lastModifiedDate":"2023-11-10"},{"lineNumber":152,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":153,"author":{"gitId":"SebasFok"},"content":"            writer.write(\"Major | \" + major);","lastModifiedDate":"2023-11-10"},{"lineNumber":154,"author":{"gitId":"SebasFok"},"content":"            writer.newLine();","lastModifiedDate":"2023-11-10"},{"lineNumber":155,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":156,"author":{"gitId":"SebasFok"},"content":"            writer.write((\"Year | \" + year));","lastModifiedDate":"2023-11-10"},{"lineNumber":157,"author":{"gitId":"SebasFok"},"content":"            writer.newLine();","lastModifiedDate":"2023-11-10"},{"lineNumber":158,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":159,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":160,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":161,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":162,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":163,"author":{"gitId":"SebasFok"},"content":"     * Saves the student\u0027s schedule to the \"schedule.txt\" file.","lastModifiedDate":"2023-11-13"},{"lineNumber":164,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":165,"author":{"gitId":"SebasFok"},"content":"     * @param student The Student object containing the details to be saved.","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"SebasFok"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"SebasFok"},"content":"    public static void saveSchedule(Student student) throws IOException {","lastModifiedDate":"2023-11-11"},{"lineNumber":169,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":170,"author":{"gitId":"SebasFok"},"content":"        String scheduleFilePath \u003d System.getProperty(\"user.dir\") + \"/data/schedule.txt\";","lastModifiedDate":"2023-11-11"},{"lineNumber":171,"author":{"gitId":"SebasFok"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(scheduleFilePath))) {","lastModifiedDate":"2023-11-10"},{"lineNumber":172,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":173,"author":{"gitId":"SebasFok"},"content":"            int[] modulesPerSemArray \u003d student.getSchedule().getModulesPerSem();","lastModifiedDate":"2023-11-10"},{"lineNumber":174,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":175,"author":{"gitId":"SebasFok"},"content":"            StringBuilder modulesPerSemNumbers \u003d new StringBuilder(Integer.toString(modulesPerSemArray[0]));","lastModifiedDate":"2023-11-10"},{"lineNumber":176,"author":{"gitId":"SebasFok"},"content":"            for (int i \u003d 1; i \u003c modulesPerSemArray.length; i++) {","lastModifiedDate":"2023-11-10"},{"lineNumber":177,"author":{"gitId":"SebasFok"},"content":"                modulesPerSemNumbers.append(\",\").append(modulesPerSemArray[i]);","lastModifiedDate":"2023-11-10"},{"lineNumber":178,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":179,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":180,"author":{"gitId":"SebasFok"},"content":"            // Write the new content to the file","lastModifiedDate":"2023-11-10"},{"lineNumber":181,"author":{"gitId":"SebasFok"},"content":"            writer.write(\"ModulesPerSem | \" + modulesPerSemNumbers);","lastModifiedDate":"2023-11-10"},{"lineNumber":182,"author":{"gitId":"SebasFok"},"content":"            writer.newLine();","lastModifiedDate":"2023-11-10"},{"lineNumber":183,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":184,"author":{"gitId":"SebasFok"},"content":"            ModuleList modulesPlanned \u003d student.getSchedule().getModulesPlanned();","lastModifiedDate":"2023-11-10"},{"lineNumber":185,"author":{"gitId":"SebasFok"},"content":"            int numberOfModules \u003d student.getSchedule().getModulesPlanned().getMainModuleList().size();","lastModifiedDate":"2023-11-10"},{"lineNumber":186,"author":{"gitId":"SebasFok"},"content":"            String completionStatus;","lastModifiedDate":"2023-11-10"},{"lineNumber":187,"author":{"gitId":"SebasFok"},"content":"            for (int i \u003d 0; i \u003c numberOfModules; i++) {","lastModifiedDate":"2023-11-10"},{"lineNumber":188,"author":{"gitId":"SebasFok"},"content":"                String moduleCode \u003d modulesPlanned.getModuleByIndex(i).getModuleCode();","lastModifiedDate":"2023-11-10"},{"lineNumber":189,"author":{"gitId":"SebasFok"},"content":"                if (modulesPlanned.getModuleByIndex(i).getCompletionStatus()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":190,"author":{"gitId":"SebasFok"},"content":"                    completionStatus \u003d \"O\";","lastModifiedDate":"2023-11-10"},{"lineNumber":191,"author":{"gitId":"SebasFok"},"content":"                } else {","lastModifiedDate":"2023-11-10"},{"lineNumber":192,"author":{"gitId":"SebasFok"},"content":"                    completionStatus \u003d \"X\";","lastModifiedDate":"2023-11-10"},{"lineNumber":193,"author":{"gitId":"SebasFok"},"content":"                }","lastModifiedDate":"2023-11-10"},{"lineNumber":194,"author":{"gitId":"SebasFok"},"content":"                writer.write(\"Module | \" + moduleCode + \" | \" + completionStatus);","lastModifiedDate":"2023-11-10"},{"lineNumber":195,"author":{"gitId":"SebasFok"},"content":"                writer.newLine();  // Move to the next line","lastModifiedDate":"2023-11-10"},{"lineNumber":196,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":197,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":198,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":199,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":200,"author":{"gitId":"SebasFok"},"content":"    public static void saveTimetable(Student student) throws IOException {","lastModifiedDate":"2023-11-12"},{"lineNumber":201,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":202,"author":{"gitId":"SebasFok"},"content":"        String timetableFilePath \u003d System.getProperty(\"user.dir\") + \"/data/timetable.txt\";","lastModifiedDate":"2023-11-12"},{"lineNumber":203,"author":{"gitId":"SebasFok"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(timetableFilePath))) {","lastModifiedDate":"2023-11-12"},{"lineNumber":204,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":205,"author":{"gitId":"SebasFok"},"content":"            // Write the new content to the file","lastModifiedDate":"2023-11-12"},{"lineNumber":206,"author":{"gitId":"SebasFok"},"content":"            writer.write(\"TimetableForCurrentSem\");","lastModifiedDate":"2023-11-12"},{"lineNumber":207,"author":{"gitId":"SebasFok"},"content":"            writer.newLine();","lastModifiedDate":"2023-11-12"},{"lineNumber":208,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":209,"author":{"gitId":"SebasFok"},"content":"            //latest info","lastModifiedDate":"2023-11-12"},{"lineNumber":210,"author":{"gitId":"SebasFok"},"content":"            student.updateTimetable();","lastModifiedDate":"2023-11-12"},{"lineNumber":211,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":212,"author":{"gitId":"SebasFok"},"content":"            ArrayList\u003cModuleWeekly\u003e currentSemesterModules \u003d student.getTimetable().getCurrentSemesterModulesWeekly();","lastModifiedDate":"2023-11-12"},{"lineNumber":213,"author":{"gitId":"SebasFok"},"content":"            for (ModuleWeekly module : currentSemesterModules) {","lastModifiedDate":"2023-11-12"},{"lineNumber":214,"author":{"gitId":"SebasFok"},"content":"                for (Event event : module.getWeeklyTimetable()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":215,"author":{"gitId":"SebasFok"},"content":"                    writer.write(event.toSave());","lastModifiedDate":"2023-11-12"},{"lineNumber":216,"author":{"gitId":"SebasFok"},"content":"                    writer.newLine();","lastModifiedDate":"2023-11-12"},{"lineNumber":217,"author":{"gitId":"SebasFok"},"content":"                }","lastModifiedDate":"2023-11-12"},{"lineNumber":218,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":219,"author":{"gitId":"SebasFok"},"content":"        } catch (TimetableUnavailableException e) {","lastModifiedDate":"2023-11-12"},{"lineNumber":220,"author":{"gitId":"SebasFok"},"content":"            //no events in timetable, do nothing","lastModifiedDate":"2023-11-12"},{"lineNumber":221,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":222,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":223,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":224,"author":{"gitId":"SebasFok"},"content":"    // Below this comment are standard file methods","lastModifiedDate":"2023-11-10"},{"lineNumber":225,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":226,"author":{"gitId":"SebasFok"},"content":"    //@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":227,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":228,"author":{"gitId":"SebasFok"},"content":"     * This method takes in the path of a txt file and adds \u0027textToAdd\u0027 to the last line","lastModifiedDate":"2023-11-10"},{"lineNumber":229,"author":{"gitId":"SebasFok"},"content":"     * of the file","lastModifiedDate":"2023-11-10"},{"lineNumber":230,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":231,"author":{"gitId":"SebasFok"},"content":"     * @param filePath location of the file to be edited","lastModifiedDate":"2023-11-10"},{"lineNumber":232,"author":{"gitId":"SebasFok"},"content":"     * @param textToAdd String to be added to the end of the txt file","lastModifiedDate":"2023-11-10"},{"lineNumber":233,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":234,"author":{"gitId":"SebasFok"},"content":"    public static void addTextToFile(String filePath, String textToAdd) {","lastModifiedDate":"2023-11-10"},{"lineNumber":235,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":236,"author":{"gitId":"SebasFok"},"content":"            // Create a FileWriter object with the specified file path in append mode (true).","lastModifiedDate":"2023-11-10"},{"lineNumber":237,"author":{"gitId":"SebasFok"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-11-10"},{"lineNumber":238,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":239,"author":{"gitId":"SebasFok"},"content":"            // Create a BufferedWriter to efficiently write text.","lastModifiedDate":"2023-11-10"},{"lineNumber":240,"author":{"gitId":"SebasFok"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2023-11-10"},{"lineNumber":241,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":242,"author":{"gitId":"SebasFok"},"content":"            // Write the text to the file.","lastModifiedDate":"2023-11-10"},{"lineNumber":243,"author":{"gitId":"SebasFok"},"content":"            bufferedWriter.write(textToAdd);","lastModifiedDate":"2023-11-10"},{"lineNumber":244,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":245,"author":{"gitId":"SebasFok"},"content":"            // Write a newline character to separate lines.","lastModifiedDate":"2023-11-10"},{"lineNumber":246,"author":{"gitId":"SebasFok"},"content":"            bufferedWriter.newLine();","lastModifiedDate":"2023-11-10"},{"lineNumber":247,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":248,"author":{"gitId":"SebasFok"},"content":"            // Close the BufferedWriter to release resources.","lastModifiedDate":"2023-11-10"},{"lineNumber":249,"author":{"gitId":"SebasFok"},"content":"            bufferedWriter.close();","lastModifiedDate":"2023-11-10"},{"lineNumber":250,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":251,"author":{"gitId":"SebasFok"},"content":"            //System.out.println(\"Text added to the file successfully.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":252,"author":{"gitId":"SebasFok"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":253,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"An IOException occurred: \" + e.getMessage());","lastModifiedDate":"2023-11-10"},{"lineNumber":254,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":255,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":256,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"SebasFok":196,"ryanlohyr":17,"janelleenqi":43}},{"path":"src/main/java/seedu/duke/utils/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.utils;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.Major;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.UserCommandWord;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.errors.UserError;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"public class Parser {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"    public static final String DELIMITER \u003d \" \";","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"     * Parses a user input string to extract and return the main command.","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"     * @return The main command from the input string.","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"    public static String parseCommand(String userInput) {","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"        if (userInput \u003d\u003d null || userInput.isEmpty()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"            return null;","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"        String[] keywords \u003d userInput.split(DELIMITER);","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"        return keywords[0].toLowerCase().trim();","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"     * Excludes the command and extracts and returns an array of arguments from a user input string.","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"     * @return An array of arguments from the input string.","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"    public static String[] parseArguments(String userInput){","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"        if (userInput.isEmpty()){","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"            return null;","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"        String[] keywords \u003d userInput.split(DELIMITER);","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"        return Arrays.copyOfRange(keywords, 1, keywords.length);","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"     * Checks if the given academic year input is valid.","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"     * The academic year should be in the format \"Yn/Sx\", where \u0027n\u0027 represents the year","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"     * and \u0027x\u0027 represents the semester (e.g., Y1/S1, Y2/S2).","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"     * @param userInput The academic year input to be validated.","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"     * @return true if the input is a valid academic year, false otherwise.","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"     * @throws IllegalArgumentException if the input format is incorrect or if the year or semester is invalid.","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"    public static boolean isValidAcademicYear( String userInput ) {","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"            String[] parts \u003d userInput.split(\"/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"            if(parts.length !\u003d 2){","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"                throw new IllegalArgumentException(\"Needs to be in format of Y2/S1\");","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"            String year \u003d parts[0].toUpperCase();","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"            String semester \u003d parts[1].toUpperCase();","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"            //last year","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"            if(year.equals(\"Y4\") \u0026\u0026 semester.equals(\"S2\")){","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"                throw new IllegalArgumentException(\"Its your last sem!! A bit too late ya....\");","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"            //validate semester","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"            if(!semester.equals(\"S1\") \u0026\u0026 !semester.equals(\"S2\")){","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"                throw new IllegalArgumentException(\"Invalid Semester\");","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"            //validate year","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"            if (!(year.equals(\"Y1\") || year.equals(\"Y2\") || year.equals(\"Y3\") || year.equals(\"Y4\"))) {","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"                // The input is not \"Y1,\" \"Y2,\" \"Y3,\" or \"Y4\"","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"                throw new IllegalArgumentException(\"Invalid Year\");","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"    public boolean checkNameInput(String userInput, ArrayList\u003cString\u003e forbiddenCommands) {","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"        // Check for non-empty string","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"        if (userInput.trim().isEmpty()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Name cannot be empty. Please enter a valid name.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"        // Check for length constraints","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"        int minLength \u003d 2;  // Minimum length for a valid name","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"        int maxLength \u003d 50; // Maximum length for a valid name","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"        if (userInput.length() \u003c minLength || userInput.length() \u003e maxLength) {","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Name must be between \" + minLength + \" and \" + maxLength + \" characters.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"        // Check for valid characters","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"        if (!userInput.matches(\"[a-zA-Z- \u0027]+\")) {","lastModifiedDate":"2023-11-03"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Name can only contain letters, spaces, hyphens, and apostrophes.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"        // Check for no leading or trailing spaces","lastModifiedDate":"2023-11-03"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"        if (!userInput.equals(userInput.trim())) {","lastModifiedDate":"2023-11-03"},{"lineNumber":111,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Name cannot start or end with a space.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":113,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":115,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":116,"author":{"gitId":"ryanlohyr"},"content":"        if (forbiddenCommands.contains(userInput.trim().toLowerCase())) {","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Invalid name. This name is reserved for commands. Please enter a different name.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":120,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":121,"author":{"gitId":"ryanlohyr"},"content":"        return true;","lastModifiedDate":"2023-11-03"},{"lineNumber":122,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":123,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":124,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"ryanlohyr"},"content":"     * Checks the validity of user input based on the provided command and words array.","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"ryanlohyr"},"content":"     * @param commandWord The command provided by the user.","lastModifiedDate":"2023-11-10"},{"lineNumber":128,"author":{"gitId":"ryanlohyr"},"content":"     * @param arguments   An array of words parsed from the user input.","lastModifiedDate":"2023-11-03"},{"lineNumber":129,"author":{"gitId":"ryanlohyr"},"content":"     * @return        True if the input is valid, false otherwise.","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"ryanlohyr"},"content":"    public static boolean isValidInputForCommand(String commandWord, String[] arguments) {","lastModifiedDate":"2023-11-10"},{"lineNumber":132,"author":{"gitId":"ryanlohyr"},"content":"        int argumentsCounter \u003d 0;","lastModifiedDate":"2023-11-10"},{"lineNumber":133,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":134,"author":{"gitId":"ryanlohyr"},"content":"        //shift forward available arguments","lastModifiedDate":"2023-11-10"},{"lineNumber":135,"author":{"gitId":"ryanlohyr"},"content":"        if (arguments !\u003d null) {","lastModifiedDate":"2023-11-10"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"            for (int i \u003d 0; i \u003c arguments.length; i++) {","lastModifiedDate":"2023-11-10"},{"lineNumber":137,"author":{"gitId":"ryanlohyr"},"content":"                arguments[i] \u003d arguments[i].trim();","lastModifiedDate":"2023-11-10"},{"lineNumber":138,"author":{"gitId":"ryanlohyr"},"content":"                if (arguments[i].isEmpty()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"                    continue;","lastModifiedDate":"2023-11-10"},{"lineNumber":140,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-11-10"},{"lineNumber":141,"author":{"gitId":"ryanlohyr"},"content":"                arguments[argumentsCounter] \u003d arguments[i];","lastModifiedDate":"2023-11-10"},{"lineNumber":142,"author":{"gitId":"ryanlohyr"},"content":"                argumentsCounter++;","lastModifiedDate":"2023-11-10"},{"lineNumber":143,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":144,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":145,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":146,"author":{"gitId":"ryanlohyr"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-11-10"},{"lineNumber":147,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommandWord.COMPLETE_MODULE_COMMAND:","lastModifiedDate":"2023-11-07"},{"lineNumber":148,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommandWord.PREREQUISITE_COMMAND: {","lastModifiedDate":"2023-11-07"},{"lineNumber":149,"author":{"gitId":"ryanlohyr"},"content":"            if (argumentsCounter \u003c 1) {","lastModifiedDate":"2023-11-10"},{"lineNumber":150,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":152,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":154,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommandWord.VIEW_SCHEDULE_COMMAND:","lastModifiedDate":"2023-11-07"},{"lineNumber":155,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommandWord.CLEAR_SCHEDULE_COMMAND:","lastModifiedDate":"2023-11-08"},{"lineNumber":156,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommandWord.RECOMMEND_COMMAND: {","lastModifiedDate":"2023-11-07"},{"lineNumber":157,"author":{"gitId":"ryanlohyr"},"content":"            if (argumentsCounter \u003e 0) {","lastModifiedDate":"2023-11-10"},{"lineNumber":158,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":160,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-28"},{"lineNumber":161,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":162,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommandWord.SET_MAJOR_COMMAND: {","lastModifiedDate":"2023-11-07"},{"lineNumber":163,"author":{"gitId":"ryanlohyr"},"content":"            if (argumentsCounter \u003d\u003d 0) {","lastModifiedDate":"2023-11-10"},{"lineNumber":164,"author":{"gitId":"ryanlohyr"},"content":"                return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"ryanlohyr"},"content":"            if (argumentsCounter \u003e 1) {","lastModifiedDate":"2023-11-10"},{"lineNumber":167,"author":{"gitId":"ryanlohyr"},"content":"                UserError.invalidMajorFormat();","lastModifiedDate":"2023-11-03"},{"lineNumber":168,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"ryanlohyr"},"content":"            try {","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"ryanlohyr"},"content":"                Major.valueOf(arguments[0].toUpperCase());","lastModifiedDate":"2023-11-03"},{"lineNumber":172,"author":{"gitId":"ryanlohyr"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"ryanlohyr"},"content":"                String availableMajors \u003d Arrays.toString(Major.values());","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"ryanlohyr"},"content":"                UserError.invalidMajor(availableMajors);","lastModifiedDate":"2023-11-03"},{"lineNumber":175,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommandWord.LEFT_COMMAND:","lastModifiedDate":"2023-11-10"},{"lineNumber":180,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommandWord.REQUIRED_MODULES_COMMAND:","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommandWord.HELP_COMMAND:","lastModifiedDate":"2023-11-13"},{"lineNumber":182,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommandWord.BYE_COMMAND:{","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"ryanlohyr"},"content":"            if (argumentsCounter \u003d\u003d 0) {","lastModifiedDate":"2023-11-10"},{"lineNumber":184,"author":{"gitId":"ryanlohyr"},"content":"                return true;","lastModifiedDate":"2023-11-10"},{"lineNumber":185,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":186,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-11-10"},{"lineNumber":187,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":188,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommandWord.ADD_MODULE_COMMAND: {","lastModifiedDate":"2023-11-07"},{"lineNumber":189,"author":{"gitId":"ryanlohyr"},"content":"            if (argumentsCounter !\u003d 2) {","lastModifiedDate":"2023-11-10"},{"lineNumber":190,"author":{"gitId":"ryanlohyr"},"content":"                UserError.invalidAddFormat();","lastModifiedDate":"2023-11-03"},{"lineNumber":191,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"ryanlohyr"},"content":"            try {","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"ryanlohyr"},"content":"                Integer.parseInt(arguments[1]);","lastModifiedDate":"2023-11-03"},{"lineNumber":195,"author":{"gitId":"ryanlohyr"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"ryanlohyr"},"content":"                UserError.invalidSemester();","lastModifiedDate":"2023-11-03"},{"lineNumber":197,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"ryanlohyr"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":199,"author":{"gitId":"ryanlohyr"},"content":"                UserError.invalidAddFormat();","lastModifiedDate":"2023-11-10"},{"lineNumber":200,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-11-10"},{"lineNumber":201,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommandWord.DELETE_MODULE_COMMAND: {","lastModifiedDate":"2023-11-07"},{"lineNumber":205,"author":{"gitId":"ryanlohyr"},"content":"            if (argumentsCounter !\u003d 1) {","lastModifiedDate":"2023-11-10"},{"lineNumber":206,"author":{"gitId":"ryanlohyr"},"content":"                UserError.invalidDeleteFormat();","lastModifiedDate":"2023-11-03"},{"lineNumber":207,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommandWord.SHIFT_MODULE_COMMAND: {","lastModifiedDate":"2023-11-08"},{"lineNumber":212,"author":{"gitId":"ryanlohyr"},"content":"            if (argumentsCounter !\u003d 2) {","lastModifiedDate":"2023-11-10"},{"lineNumber":213,"author":{"gitId":"ryanlohyr"},"content":"                UserError.invalidShiftFormat();","lastModifiedDate":"2023-11-08"},{"lineNumber":214,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-11-08"},{"lineNumber":215,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":216,"author":{"gitId":"ryanlohyr"},"content":"            try {","lastModifiedDate":"2023-11-08"},{"lineNumber":217,"author":{"gitId":"ryanlohyr"},"content":"                Integer.parseInt(arguments[1]);","lastModifiedDate":"2023-11-08"},{"lineNumber":218,"author":{"gitId":"ryanlohyr"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-08"},{"lineNumber":219,"author":{"gitId":"ryanlohyr"},"content":"                UserError.invalidSemester();","lastModifiedDate":"2023-11-08"},{"lineNumber":220,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-11-08"},{"lineNumber":221,"author":{"gitId":"ryanlohyr"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":222,"author":{"gitId":"ryanlohyr"},"content":"                UserError.invalidShiftFormat();","lastModifiedDate":"2023-11-10"},{"lineNumber":223,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-11-10"},{"lineNumber":224,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":225,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-11-08"},{"lineNumber":226,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":227,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommandWord.INFO_COMMAND: {","lastModifiedDate":"2023-11-07"},{"lineNumber":228,"author":{"gitId":"ryanlohyr"},"content":"            if (argumentsCounter \u003c 1) {","lastModifiedDate":"2023-11-10"},{"lineNumber":229,"author":{"gitId":"ryanlohyr"},"content":"                UserError.emptyInputforInfoCommand();","lastModifiedDate":"2023-11-03"},{"lineNumber":230,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":231,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":232,"author":{"gitId":"ryanlohyr"},"content":"            if (!arguments[0].equals(\"description\")) {","lastModifiedDate":"2023-11-09"},{"lineNumber":233,"author":{"gitId":"ryanlohyr"},"content":"                UserError.invalidCommandforInfoCommand();","lastModifiedDate":"2023-11-03"},{"lineNumber":234,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":235,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":236,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-11-01"},{"lineNumber":238,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":239,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommandWord.TIMETABLE_COMMAND: {","lastModifiedDate":"2023-11-08"},{"lineNumber":240,"author":{"gitId":"ryanlohyr"},"content":"            if (argumentsCounter \u003c 1) {","lastModifiedDate":"2023-11-10"},{"lineNumber":241,"author":{"gitId":"ryanlohyr"},"content":"                UserError.emptyInputforTimetableCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":242,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-11-07"},{"lineNumber":243,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":244,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-11-07"},{"lineNumber":245,"author":{"gitId":"ryanlohyr"},"content":"            // add check for modules that are in the current sem","lastModifiedDate":"2023-11-07"},{"lineNumber":246,"author":{"gitId":"ryanlohyr"},"content":"            // if argument[1] is !show or in currSemModules, return false","lastModifiedDate":"2023-11-07"},{"lineNumber":247,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":248,"author":{"gitId":"ryanlohyr"},"content":"        default: {","lastModifiedDate":"2023-10-28"},{"lineNumber":249,"author":{"gitId":"ryanlohyr"},"content":"            return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":250,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":251,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":252,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":253,"author":{"gitId":"ryanlohyr"},"content":"        return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":254,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":255,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":256,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":257,"author":{"gitId":"ryanlohyr"},"content":"     * Checks the validity of keyword input for a search command.","lastModifiedDate":"2023-11-01"},{"lineNumber":258,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":259,"author":{"gitId":"ryanlohyr"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-01"},{"lineNumber":260,"author":{"gitId":"ryanlohyr"},"content":"     * @param userInput The user input string containing the search command and keywords.","lastModifiedDate":"2023-11-01"},{"lineNumber":261,"author":{"gitId":"ryanlohyr"},"content":"     * @return          True if the keyword input is valid, false otherwise.","lastModifiedDate":"2023-11-01"},{"lineNumber":262,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":263,"author":{"gitId":"ryanlohyr"},"content":"    public static boolean isValidKeywordInput(String userInput) {","lastModifiedDate":"2023-11-01"},{"lineNumber":264,"author":{"gitId":"ryanlohyr"},"content":"        String keywords \u003d userInput.substring(userInput.indexOf(\"search\") + 6);","lastModifiedDate":"2023-11-01"},{"lineNumber":265,"author":{"gitId":"ryanlohyr"},"content":"        // need to add a function to make search case-insensitive","lastModifiedDate":"2023-11-01"},{"lineNumber":266,"author":{"gitId":"ryanlohyr"},"content":"        return !keywords.trim().isEmpty();","lastModifiedDate":"2023-11-01"},{"lineNumber":267,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":268,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":269,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":270,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":271,"author":{"gitId":"ryanlohyr"},"content":"     * Parses the year and semester from the given input string.","lastModifiedDate":"2023-11-13"},{"lineNumber":272,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":273,"author":{"gitId":"ryanlohyr"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-13"},{"lineNumber":274,"author":{"gitId":"ryanlohyr"},"content":"     * @param yearAndSem The input string containing year and semester information.","lastModifiedDate":"2023-11-13"},{"lineNumber":275,"author":{"gitId":"ryanlohyr"},"content":"     * @return An array containing the parsed year and semester as integers.","lastModifiedDate":"2023-11-13"},{"lineNumber":276,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":277,"author":{"gitId":"ryanlohyr"},"content":"    public static int[] parseStudentYear(String yearAndSem) {","lastModifiedDate":"2023-11-07"},{"lineNumber":278,"author":{"gitId":"ryanlohyr"},"content":"        char yearValue \u003d yearAndSem.charAt(1);","lastModifiedDate":"2023-11-07"},{"lineNumber":279,"author":{"gitId":"ryanlohyr"},"content":"        int year \u003d Character.getNumericValue(yearValue);","lastModifiedDate":"2023-11-07"},{"lineNumber":280,"author":{"gitId":"ryanlohyr"},"content":"        char semValue \u003d yearAndSem.charAt(4);","lastModifiedDate":"2023-11-07"},{"lineNumber":281,"author":{"gitId":"ryanlohyr"},"content":"        int sem \u003d Character.getNumericValue(semValue);","lastModifiedDate":"2023-11-07"},{"lineNumber":282,"author":{"gitId":"ryanlohyr"},"content":"        return new int[]{year, sem};","lastModifiedDate":"2023-11-07"},{"lineNumber":283,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":284,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":285,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":286,"author":{"gitId":"ryanlohyr"},"content":"     * Checks if the given user input is a valid lesson type (lecture, tutorial, or lab).","lastModifiedDate":"2023-11-13"},{"lineNumber":287,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":288,"author":{"gitId":"ryanlohyr"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-13"},{"lineNumber":289,"author":{"gitId":"ryanlohyr"},"content":"     * @param userInput The user input to be validated.","lastModifiedDate":"2023-11-13"},{"lineNumber":290,"author":{"gitId":"ryanlohyr"},"content":"     * @return true if the input is a valid lesson type, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":291,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":292,"author":{"gitId":"ryanlohyr"},"content":"    public static boolean isValidLessonType(String userInput) {","lastModifiedDate":"2023-11-10"},{"lineNumber":293,"author":{"gitId":"ryanlohyr"},"content":"        String lowerCaseInput \u003d userInput.toLowerCase();","lastModifiedDate":"2023-11-10"},{"lineNumber":294,"author":{"gitId":"ryanlohyr"},"content":"        return lowerCaseInput.equals(\"lecture\") ||","lastModifiedDate":"2023-11-10"},{"lineNumber":295,"author":{"gitId":"ryanlohyr"},"content":"                lowerCaseInput.equals(\"tutorial\") ||","lastModifiedDate":"2023-11-10"},{"lineNumber":296,"author":{"gitId":"ryanlohyr"},"content":"                lowerCaseInput.equals(\"lab\");","lastModifiedDate":"2023-11-10"},{"lineNumber":297,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":298,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":299,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":300,"author":{"gitId":"ryanlohyr"},"content":"     * Checks if the given string can be converted to an integer.","lastModifiedDate":"2023-11-13"},{"lineNumber":301,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":302,"author":{"gitId":"ryanlohyr"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-13"},{"lineNumber":303,"author":{"gitId":"ryanlohyr"},"content":"     * @param input The string to be checked for integer conversion.","lastModifiedDate":"2023-11-13"},{"lineNumber":304,"author":{"gitId":"ryanlohyr"},"content":"     * @return true if the string can be converted to an integer, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":305,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":306,"author":{"gitId":"ryanlohyr"},"content":"    public static boolean isStringInteger(String input) {","lastModifiedDate":"2023-11-10"},{"lineNumber":307,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":308,"author":{"gitId":"ryanlohyr"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2023-11-10"},{"lineNumber":309,"author":{"gitId":"ryanlohyr"},"content":"            return true;","lastModifiedDate":"2023-11-10"},{"lineNumber":310,"author":{"gitId":"ryanlohyr"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":311,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-11-10"},{"lineNumber":312,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":313,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":314,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":315,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":316,"author":{"gitId":"ryanlohyr"},"content":"     * Checks if the given day is a valid day of the week (case-insensitive).","lastModifiedDate":"2023-11-13"},{"lineNumber":317,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":318,"author":{"gitId":"ryanlohyr"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-13"},{"lineNumber":319,"author":{"gitId":"ryanlohyr"},"content":"     * @param day The day to be validated.","lastModifiedDate":"2023-11-13"},{"lineNumber":320,"author":{"gitId":"ryanlohyr"},"content":"     * @return true if the day is a valid day of the week, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":321,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":322,"author":{"gitId":"ryanlohyr"},"content":"    public static boolean isDayValid(String day) {","lastModifiedDate":"2023-11-10"},{"lineNumber":323,"author":{"gitId":"ryanlohyr"},"content":"        String uppercaseDay \u003d day.toUpperCase();","lastModifiedDate":"2023-11-10"},{"lineNumber":324,"author":{"gitId":"ryanlohyr"},"content":"        return uppercaseDay.equals(\"MONDAY\") ||","lastModifiedDate":"2023-11-10"},{"lineNumber":325,"author":{"gitId":"ryanlohyr"},"content":"                uppercaseDay.equals(\"TUESDAY\") ||","lastModifiedDate":"2023-11-10"},{"lineNumber":326,"author":{"gitId":"ryanlohyr"},"content":"                uppercaseDay.equals(\"WEDNESDAY\") ||","lastModifiedDate":"2023-11-10"},{"lineNumber":327,"author":{"gitId":"ryanlohyr"},"content":"                uppercaseDay.equals(\"THURSDAY\") ||","lastModifiedDate":"2023-11-10"},{"lineNumber":328,"author":{"gitId":"ryanlohyr"},"content":"                uppercaseDay.equals(\"FRIDAY\") ||","lastModifiedDate":"2023-11-10"},{"lineNumber":329,"author":{"gitId":"ryanlohyr"},"content":"                uppercaseDay.equals(\"SATURDAY\") ||","lastModifiedDate":"2023-11-10"},{"lineNumber":330,"author":{"gitId":"ryanlohyr"},"content":"                uppercaseDay.equals(\"SUNDAY\");","lastModifiedDate":"2023-11-10"},{"lineNumber":331,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":332,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":333,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":334,"author":{"gitId":"ryanlohyr"},"content":"     * Checks if there are no null elements in the given array.","lastModifiedDate":"2023-11-13"},{"lineNumber":335,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":336,"author":{"gitId":"ryanlohyr"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-13"},{"lineNumber":337,"author":{"gitId":"ryanlohyr"},"content":"     * @param array The array to be checked for null elements.","lastModifiedDate":"2023-11-13"},{"lineNumber":338,"author":{"gitId":"ryanlohyr"},"content":"     * @return true if there are no null elements, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":339,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":340,"author":{"gitId":"ryanlohyr"},"content":"    public static boolean hasNoNulls(Object[] array) {","lastModifiedDate":"2023-11-10"},{"lineNumber":341,"author":{"gitId":"ryanlohyr"},"content":"        for (Object element : array) {","lastModifiedDate":"2023-11-10"},{"lineNumber":342,"author":{"gitId":"ryanlohyr"},"content":"            if (element \u003d\u003d null) {","lastModifiedDate":"2023-11-10"},{"lineNumber":343,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-11-10"},{"lineNumber":344,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":345,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":346,"author":{"gitId":"ryanlohyr"},"content":"        return true;","lastModifiedDate":"2023-11-10"},{"lineNumber":347,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":348,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":349,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":350,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":351,"author":{"gitId":"ryanlohyr"},"content":"     * Removes null elements from the given string array and returns a new array.","lastModifiedDate":"2023-11-13"},{"lineNumber":352,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":353,"author":{"gitId":"ryanlohyr"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-13"},{"lineNumber":354,"author":{"gitId":"ryanlohyr"},"content":"     * @param inputArray The array from which null elements need to be removed.","lastModifiedDate":"2023-11-13"},{"lineNumber":355,"author":{"gitId":"ryanlohyr"},"content":"     * @return A new array with null elements removed.","lastModifiedDate":"2023-11-13"},{"lineNumber":356,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":357,"author":{"gitId":"ryanlohyr"},"content":"    public static String[] removeNulls(String[] inputArray) {","lastModifiedDate":"2023-11-10"},{"lineNumber":358,"author":{"gitId":"ryanlohyr"},"content":"        int newSize \u003d 0;","lastModifiedDate":"2023-11-10"},{"lineNumber":359,"author":{"gitId":"ryanlohyr"},"content":"        for (String element : inputArray) {","lastModifiedDate":"2023-11-10"},{"lineNumber":360,"author":{"gitId":"ryanlohyr"},"content":"            if (element !\u003d null) {","lastModifiedDate":"2023-11-10"},{"lineNumber":361,"author":{"gitId":"ryanlohyr"},"content":"                newSize++;","lastModifiedDate":"2023-11-10"},{"lineNumber":362,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":363,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":364,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":365,"author":{"gitId":"ryanlohyr"},"content":"        String[] resultArray \u003d new String[newSize];","lastModifiedDate":"2023-11-10"},{"lineNumber":366,"author":{"gitId":"ryanlohyr"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-11-10"},{"lineNumber":367,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":368,"author":{"gitId":"ryanlohyr"},"content":"        for (String element : inputArray) {","lastModifiedDate":"2023-11-10"},{"lineNumber":369,"author":{"gitId":"ryanlohyr"},"content":"            if (element !\u003d null) {","lastModifiedDate":"2023-11-10"},{"lineNumber":370,"author":{"gitId":"ryanlohyr"},"content":"                resultArray[index++] \u003d element;","lastModifiedDate":"2023-11-10"},{"lineNumber":371,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":372,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":373,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":374,"author":{"gitId":"ryanlohyr"},"content":"        return resultArray;","lastModifiedDate":"2023-11-10"},{"lineNumber":375,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":376,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":377,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":378,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"SebasFok":2,"ryanlohyr":374,"janelleenqi":2}},{"path":"src/main/java/seedu/duke/utils/TimetableParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.utils;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.ModuleWeekly;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.InvalidTimetableUserCommandException;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import java.util.List;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.utils.Parser.removeNulls;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.utils.Parser.hasNoNulls;","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.utils.Parser.isStringInteger;","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.utils.Parser.isValidLessonType;","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.utils.Parser.isDayValid;","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"public class TimetableParser {","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"    private static final String ERROR_INVALID_LESSON_TYPE \u003d \"Invalid Lesson Type. Lesson Types available: Lecture, \" +","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"            \"Tutorial, Lab. \";","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"    private static final String ERROR_TIME_TYPE_IS_WRONG \u003d \"Invalid Time. Time should be a integer from 5 to 23. \" +","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"            \"5 represents 5am, 23 represents 11pm\";","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"    private static final String ERROR_DURATION_TYPE_IS_WRONG \u003d \"Invalid Duration. Duration should be a integer \" +","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"            \"representing the number of hours.\";","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"    private static final String ERROR_INVALID_DAY \u003d \"Invalid Day. Examples of day: Monday, Tuesday, Wednesday. \" +","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"            \"representing the number of hours.\";","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"    private static final List\u003cString\u003e lessonTypes \u003d List.of(\"LECTURE\", \"TUTORIAL\", \"LAB\");","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    private static final List\u003cString\u003e days \u003d List.of(\"MONDAY\", \"TUESDAY\", \"WEDNESDAY\", \"THURSDAY\", \"FRIDAY\",","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"            \"SATURDAY\", \"SUNDAY\");","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"    private static final String DELIMITER \u003d \" \";","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"rohitcube"},"content":"     * Checks if the provided array of arguments indicates an \"EXIT\" command for modifying the timetable.","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"rohitcube"},"content":"     * @author @rohitcube","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"rohitcube"},"content":"     * @param arguments An array of strings representing user input arguments.","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"rohitcube"},"content":"     * @return true if the command is to exit the modify mode, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"    public static boolean isExitModify(String[] arguments) {","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"        String[] argumentsNoNulls \u003d removeNulls(arguments);","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"        if ((argumentsNoNulls.length \u003d\u003d 1) \u0026\u0026 argumentsNoNulls[0].strip().equalsIgnoreCase(\"EXIT\")) {","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"            return true;","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"        return false;","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"rohitcube"},"content":"     * Checks if the provided array of arguments indicates a \"clear\" command for modifying the timetable.","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"rohitcube"},"content":"     * @author @rohitcube","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"rohitcube"},"content":"     * @param arguments An array of strings representing user input arguments.","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"rohitcube"},"content":"     * @return true if the command is to clear a modification, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"    public static boolean isModifyClear(String[] arguments) {","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"rohitcube"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"rohitcube"},"content":"            if (arguments[2] !\u003d null || !arguments[2].isEmpty()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"                return false;","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"rohitcube"},"content":"        } catch (ArrayIndexOutOfBoundsException e ) {","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"rohitcube"},"content":"            System.out.println();","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"        if (arguments[1].strip().equalsIgnoreCase(\"clear\")) {","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"            return true;","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"        return false;","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"rohitcube"},"content":"     * Checks if the provided array of arguments is valid for modifying the timetable and throws exceptions if not.","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"rohitcube"},"content":"     * @author @rohitcube","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"rohitcube"},"content":"     * @param arguments               An array of strings representing user input arguments.","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"rohitcube"},"content":"     * @param currentSemesterModulesWeekly A list of ModuleWeekly objects representing modules in the current semester.","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"rohitcube"},"content":"     * @return true if the modification is valid, false otherwise.","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"rohitcube"},"content":"     * @throws InvalidTimetableUserCommandException If the arguments are invalid.","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"rohitcube"},"content":"    public static boolean isModifyValid(String[] arguments, ArrayList \u003cModuleWeekly\u003e currentSemesterModulesWeekly)","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"rohitcube"},"content":"            throws InvalidTimetableUserCommandException {","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"        String[] argumentsNoNulls \u003d removeNulls(arguments);","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"rohitcube"},"content":"        if (!hasNoNulls(arguments)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"rohitcube"},"content":"            throw new InvalidTimetableUserCommandException(\"Invalid number of arguments\");","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"        if (argumentsNoNulls.length \u003d\u003d 1) {","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"            if (!arguments[0].strip().equalsIgnoreCase(\"EXIT\")) {","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"rohitcube"},"content":"                throw new InvalidTimetableUserCommandException(\"Invalid argument\");","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"        if (argumentsNoNulls.length \u003d\u003d 2) {","lastModifiedDate":"2023-11-10"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"            String moduleCode \u003d arguments[0].toUpperCase();","lastModifiedDate":"2023-11-10"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"            if (!isExistInCurrentSemesterModules(moduleCode, currentSemesterModulesWeekly)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":96,"author":{"gitId":"rohitcube"},"content":"                throw new InvalidTimetableUserCommandException(\"Module does not exist in current semester.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"            if (!argumentsNoNulls[1].strip().equalsIgnoreCase(\"clear\")) {","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"rohitcube"},"content":"                throw new InvalidTimetableUserCommandException(\"Invalid argument\");","lastModifiedDate":"2023-11-10"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"            return true;","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"        if (argumentsNoNulls.length \u003d\u003d 5) {","lastModifiedDate":"2023-11-10"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"            String moduleCode \u003d arguments[0].toUpperCase();","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"            String lessonType \u003d arguments[1].toUpperCase();","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"            String timeString \u003d arguments[2];","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"            String durationString \u003d arguments[3];","lastModifiedDate":"2023-11-10"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"            String day \u003d arguments[4].toUpperCase();","lastModifiedDate":"2023-11-10"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"            if (!isExistInCurrentSemesterModules(moduleCode, currentSemesterModulesWeekly)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"rohitcube"},"content":"                throw new InvalidTimetableUserCommandException(\"Module does not exist in current semester\");","lastModifiedDate":"2023-11-10"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"            if (!isValidLessonType(lessonType)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":114,"author":{"gitId":"rohitcube"},"content":"                throw new InvalidTimetableUserCommandException(\"Invalid lesson type\");","lastModifiedDate":"2023-11-10"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"            if (!isStringInteger(timeString)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"                throw new InvalidTimetableUserCommandException(\"Input for time is not a valid integer\");","lastModifiedDate":"2023-11-14"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"            int time \u003d Integer.parseInt(timeString);","lastModifiedDate":"2023-11-10"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"            if (time \u003c 5 || time \u003e 23) {","lastModifiedDate":"2023-11-12"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"                throw new InvalidTimetableUserCommandException(\"Input for time is outside the valid range. \" +","lastModifiedDate":"2023-11-12"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"                        \"Please try again!\");","lastModifiedDate":"2023-11-12"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":124,"author":{"gitId":"janelleenqi"},"content":"            if (!isStringInteger(durationString)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"                throw new InvalidTimetableUserCommandException(\"Input for duration is not a valid integer\");","lastModifiedDate":"2023-11-14"},{"lineNumber":126,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"            int duration \u003d Integer.parseInt(durationString);","lastModifiedDate":"2023-11-10"},{"lineNumber":128,"author":{"gitId":"janelleenqi"},"content":"            if (duration \u003c 0) {","lastModifiedDate":"2023-11-12"},{"lineNumber":129,"author":{"gitId":"janelleenqi"},"content":"                throw new InvalidTimetableUserCommandException(\"Input for duration must be at least 0\");","lastModifiedDate":"2023-11-12"},{"lineNumber":130,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":131,"author":{"gitId":"janelleenqi"},"content":"            if (duration \u003e 23 - time) {","lastModifiedDate":"2023-11-12"},{"lineNumber":132,"author":{"gitId":"rohitcube"},"content":"                throw new InvalidTimetableUserCommandException(\"Input for duration exceeds valid hours\" +","lastModifiedDate":"2023-11-10"},{"lineNumber":133,"author":{"gitId":"rohitcube"},"content":"                        \" on the timetable\");","lastModifiedDate":"2023-11-10"},{"lineNumber":134,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":135,"author":{"gitId":"janelleenqi"},"content":"            if (!isDayValid(day)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":136,"author":{"gitId":"janelleenqi"},"content":"                throw new InvalidTimetableUserCommandException(\"Invalid day\");","lastModifiedDate":"2023-11-12"},{"lineNumber":137,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":138,"author":{"gitId":"janelleenqi"},"content":"            return true;","lastModifiedDate":"2023-11-10"},{"lineNumber":139,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":140,"author":{"gitId":"janelleenqi"},"content":"        return false;","lastModifiedDate":"2023-11-10"},{"lineNumber":141,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":142,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":143,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":144,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"     * Checks if a module with a given module code exists in the current semester modules.","lastModifiedDate":"2023-11-10"},{"lineNumber":146,"author":{"gitId":"janelleenqi"},"content":"     * @author @rohitcube","lastModifiedDate":"2023-11-10"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"     * @param moduleCode                   The module code to search for.","lastModifiedDate":"2023-11-10"},{"lineNumber":148,"author":{"gitId":"janelleenqi"},"content":"     * @param currentSemesterModulesWeekly The list of ModuleWeekly objects for the current semester.","lastModifiedDate":"2023-11-10"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"     * @return true if the module exists, false otherwise.","lastModifiedDate":"2023-11-10"},{"lineNumber":150,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"    public static boolean isExistInCurrentSemesterModules(String moduleCode,","lastModifiedDate":"2023-11-10"},{"lineNumber":152,"author":{"gitId":"janelleenqi"},"content":"                                                          ArrayList\u003cModuleWeekly\u003e currentSemesterModulesWeekly) {","lastModifiedDate":"2023-11-10"},{"lineNumber":153,"author":{"gitId":"janelleenqi"},"content":"        for (ModuleWeekly module : currentSemesterModulesWeekly) {","lastModifiedDate":"2023-11-10"},{"lineNumber":154,"author":{"gitId":"janelleenqi"},"content":"            if (module.getModuleCode().equals(moduleCode)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":155,"author":{"gitId":"janelleenqi"},"content":"                return true;","lastModifiedDate":"2023-11-10"},{"lineNumber":156,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":157,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":158,"author":{"gitId":"janelleenqi"},"content":"        return false;","lastModifiedDate":"2023-11-10"},{"lineNumber":159,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":160,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":161,"author":{"gitId":"janelleenqi"},"content":"    // if return true,","lastModifiedDate":"2023-11-10"},{"lineNumber":162,"author":{"gitId":"janelleenqi"},"content":"    public static boolean validateClearCommand(String[] argument,","lastModifiedDate":"2023-11-10"},{"lineNumber":163,"author":{"gitId":"janelleenqi"},"content":"                                               ArrayList\u003cModuleWeekly\u003e currentSemesterModulesWeekly) {","lastModifiedDate":"2023-11-10"},{"lineNumber":164,"author":{"gitId":"janelleenqi"},"content":"        if (isExistInCurrentSemesterModules(argument[0].strip().toUpperCase(), currentSemesterModulesWeekly) \u0026\u0026","lastModifiedDate":"2023-11-10"},{"lineNumber":165,"author":{"gitId":"janelleenqi"},"content":"                argument[1].strip().equalsIgnoreCase(\"clear\")) {","lastModifiedDate":"2023-11-10"},{"lineNumber":166,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(argument[0].strip().toUpperCase());","lastModifiedDate":"2023-11-10"},{"lineNumber":167,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(argument[1].strip().toUpperCase());","lastModifiedDate":"2023-11-10"},{"lineNumber":168,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"Module does not exist in current semester.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":169,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"validate clear.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":170,"author":{"gitId":"janelleenqi"},"content":"            return true;","lastModifiedDate":"2023-11-10"},{"lineNumber":171,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":172,"author":{"gitId":"janelleenqi"},"content":"        return false;","lastModifiedDate":"2023-11-10"},{"lineNumber":173,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":174,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":175,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"janelleenqi"},"content":"     * Parses the module code by converting it to uppercase.","lastModifiedDate":"2023-11-13"},{"lineNumber":177,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":178,"author":{"gitId":"janelleenqi"},"content":"     * @param supposedModuleCode The supposed module code to be parsed.","lastModifiedDate":"2023-11-13"},{"lineNumber":179,"author":{"gitId":"janelleenqi"},"content":"     * @return The parsed module code in uppercase.","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"janelleenqi"},"content":"    public static String parseModuleCode(String supposedModuleCode) {","lastModifiedDate":"2023-11-10"},{"lineNumber":182,"author":{"gitId":"janelleenqi"},"content":"        supposedModuleCode \u003d supposedModuleCode.toUpperCase();","lastModifiedDate":"2023-11-10"},{"lineNumber":183,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":184,"author":{"gitId":"janelleenqi"},"content":"        return supposedModuleCode;","lastModifiedDate":"2023-11-10"},{"lineNumber":185,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":186,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":187,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":188,"author":{"gitId":"janelleenqi"},"content":"     * Parses the lesson type by converting it to uppercase and validating its existence in the predefined list.","lastModifiedDate":"2023-11-13"},{"lineNumber":189,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":190,"author":{"gitId":"janelleenqi"},"content":"     * @param supposedLesson The supposed lesson type to be parsed.","lastModifiedDate":"2023-11-13"},{"lineNumber":191,"author":{"gitId":"janelleenqi"},"content":"     * @return The parsed lesson type in uppercase.","lastModifiedDate":"2023-11-13"},{"lineNumber":192,"author":{"gitId":"janelleenqi"},"content":"     * @throws InvalidTimetableUserCommandException If the lesson type is invalid.","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"janelleenqi"},"content":"    public static String parseLessonType(String supposedLesson) throws InvalidTimetableUserCommandException {","lastModifiedDate":"2023-11-10"},{"lineNumber":195,"author":{"gitId":"janelleenqi"},"content":"        supposedLesson \u003d supposedLesson.toUpperCase();","lastModifiedDate":"2023-11-10"},{"lineNumber":196,"author":{"gitId":"janelleenqi"},"content":"        if (!lessonTypes.contains(supposedLesson)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":197,"author":{"gitId":"janelleenqi"},"content":"            throw new InvalidTimetableUserCommandException(ERROR_INVALID_LESSON_TYPE);","lastModifiedDate":"2023-11-10"},{"lineNumber":198,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":199,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":200,"author":{"gitId":"janelleenqi"},"content":"        return supposedLesson;","lastModifiedDate":"2023-11-10"},{"lineNumber":201,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":202,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":203,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":204,"author":{"gitId":"janelleenqi"},"content":"     * Parses the time by converting it to an integer.","lastModifiedDate":"2023-11-13"},{"lineNumber":205,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":206,"author":{"gitId":"janelleenqi"},"content":"     * @param supposedTime The supposed time to be parsed.","lastModifiedDate":"2023-11-13"},{"lineNumber":207,"author":{"gitId":"janelleenqi"},"content":"     * @return The parsed time as an integer.","lastModifiedDate":"2023-11-13"},{"lineNumber":208,"author":{"gitId":"janelleenqi"},"content":"     * @throws InvalidTimetableUserCommandException If the time format is incorrect.","lastModifiedDate":"2023-11-13"},{"lineNumber":209,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":210,"author":{"gitId":"janelleenqi"},"content":"    public static int parseTime(String supposedTime) throws InvalidTimetableUserCommandException {","lastModifiedDate":"2023-11-10"},{"lineNumber":211,"author":{"gitId":"janelleenqi"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":212,"author":{"gitId":"janelleenqi"},"content":"            return Integer.parseInt(supposedTime);","lastModifiedDate":"2023-11-10"},{"lineNumber":213,"author":{"gitId":"janelleenqi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":214,"author":{"gitId":"janelleenqi"},"content":"            throw new InvalidTimetableUserCommandException(ERROR_TIME_TYPE_IS_WRONG);","lastModifiedDate":"2023-11-10"},{"lineNumber":215,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":216,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":217,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":218,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":219,"author":{"gitId":"janelleenqi"},"content":"     * Parses the duration by converting it to an integer.","lastModifiedDate":"2023-11-13"},{"lineNumber":220,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":221,"author":{"gitId":"janelleenqi"},"content":"     * @param supposedDuration The supposed duration to be parsed.","lastModifiedDate":"2023-11-13"},{"lineNumber":222,"author":{"gitId":"janelleenqi"},"content":"     * @return The parsed duration as an integer.","lastModifiedDate":"2023-11-13"},{"lineNumber":223,"author":{"gitId":"janelleenqi"},"content":"     * @throws InvalidTimetableUserCommandException If the duration format is incorrect.","lastModifiedDate":"2023-11-13"},{"lineNumber":224,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":225,"author":{"gitId":"janelleenqi"},"content":"    public static int parseDuration(String supposedDuration) throws InvalidTimetableUserCommandException {","lastModifiedDate":"2023-11-10"},{"lineNumber":226,"author":{"gitId":"janelleenqi"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":227,"author":{"gitId":"janelleenqi"},"content":"            return Integer.parseInt(supposedDuration);","lastModifiedDate":"2023-11-10"},{"lineNumber":228,"author":{"gitId":"janelleenqi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":229,"author":{"gitId":"janelleenqi"},"content":"            throw new InvalidTimetableUserCommandException(ERROR_DURATION_TYPE_IS_WRONG);","lastModifiedDate":"2023-11-10"},{"lineNumber":230,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":231,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":232,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":233,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":234,"author":{"gitId":"janelleenqi"},"content":"     * Parses the day by converting it to uppercase and validating its existence in the predefined list.","lastModifiedDate":"2023-11-13"},{"lineNumber":235,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":236,"author":{"gitId":"janelleenqi"},"content":"     * @param supposedDay The supposed day to be parsed.","lastModifiedDate":"2023-11-13"},{"lineNumber":237,"author":{"gitId":"janelleenqi"},"content":"     * @return The parsed day in uppercase.","lastModifiedDate":"2023-11-13"},{"lineNumber":238,"author":{"gitId":"janelleenqi"},"content":"     * @throws InvalidTimetableUserCommandException If the day is invalid.","lastModifiedDate":"2023-11-13"},{"lineNumber":239,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":240,"author":{"gitId":"janelleenqi"},"content":"    public static String parseDay(String supposedDay) throws InvalidTimetableUserCommandException {","lastModifiedDate":"2023-11-10"},{"lineNumber":241,"author":{"gitId":"janelleenqi"},"content":"        supposedDay \u003d supposedDay.toUpperCase();","lastModifiedDate":"2023-11-10"},{"lineNumber":242,"author":{"gitId":"janelleenqi"},"content":"        if (!days.contains(supposedDay)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":243,"author":{"gitId":"janelleenqi"},"content":"            throw new InvalidTimetableUserCommandException(ERROR_INVALID_DAY);","lastModifiedDate":"2023-11-10"},{"lineNumber":244,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":245,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":246,"author":{"gitId":"janelleenqi"},"content":"        return supposedDay;","lastModifiedDate":"2023-11-10"},{"lineNumber":247,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":248,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":249,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":250,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":251,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"janelleenqi":209,"rohitcube":42}},{"path":"src/main/java/seedu/duke/utils/Utility.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.utils;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.storage.StorageManager;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import java.net.InetSocketAddress;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"import java.net.Socket;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.utils.errors.HttpError.displaySocketError;","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.Ui.displayGoodbye;","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":" * Utility class containing reusable functions for various tasks.","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":" * This class provides a set of static methods that can be used across different parts of an application.","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":" * The methods cover tasks such as checking internet reachability, handling internet connection detection,","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":" * and saving student data to storage.","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":" *","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":" * Note: Some methods in this class may throw IOException in case of errors, and appropriate error","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":" * messages are displayed to the console.","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"public class Utility {","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"    public static boolean isInternetReachable() {","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"        try (Socket socket \u003d new Socket()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"            // Try connecting to Google\u0027s DNS server on port 53 (DNS)","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"            socket.connect(new InetSocketAddress(\"8.8.8.8\", 53), 3000); // 3 seconds timeout","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"            return true; // Connection successful","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"            return false; // Unable to connect","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"    public static void detectInternet() throws IOException {","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"        if (!Utility.isInternetReachable()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"            displaySocketError();","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"            displayGoodbye();","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"            throw new IOException();","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"    public static void saveStudentData(StorageManager storage, Student student) {","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"            storage.saveStudentDetails(student);","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"            StorageManager.saveSchedule(student);","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"            StorageManager.saveTimetable(student);","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(\"Data successfully saved in save files\");","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Unable to save data.\");","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"SebasFok":4,"ryanlohyr":46,"janelleenqi":1}},{"path":"src/main/java/seedu/duke/utils/errors/ClassError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.utils.errors;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"public class ClassError {","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"    public static void defaultClassError(Object message){","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(message);","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"ryanlohyr":7}},{"path":"src/main/java/seedu/duke/utils/errors/HttpError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.utils.errors;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"public class HttpError {","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"    public static void displaySocketError(){","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"Please turn on your internet to use NUSDegs!\");","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"ryanlohyr":7}},{"path":"src/main/java/seedu/duke/utils/errors/UserError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.utils.errors;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.Event;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"public class UserError {","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"    public static void invalidInput(){","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"Invalid Input provided\");","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"    public static void invalidMajorFormat() {","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"Please select a major using this format: major [major]\");","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"To check your current major, type: major\");","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"    public static void invalidMajor(String availableMajors) {","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"Please select a major from this list: \" + availableMajors);","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"    public static void invalidModule(String moduleCode){","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"        String response \u003d String.format(\"Sorry, Module %s does not exist\",moduleCode);","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(response);","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"    public static void displayInvalidInputCommand(String command){","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"        String response \u003d String.format(\"Invalid command %s. Type help to see the available commands\",command);","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"        if(command \u003d\u003d null){","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"            response \u003d \"Empty commands are not allowed!\";","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(response);","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"    public static void displayInvalidMethodCommand(String command){","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"        String response \u003d String.format(\"Invalid argument for command %s\", command);","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(response);","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"    public static void invalidAddFormat() {","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"Please add a module using this format: add [module code] [semester]\");","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"    public static void invalidSemester() {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"Please select an integer from 1 to 8 for semester selection\");","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"    public static void invalidDeleteFormat() {","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"Please delete a module using this format: delete [module code]\");","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"SebasFok"},"content":"    public static void invalidShiftFormat() {","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"Please shift a module using this format: shift [module code] [semester to move to]\");","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"rohitcube"},"content":"    public static void emptyInputforInfoCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"rohitcube"},"content":"        System.out.println(\"Empty input detected. Please enter a valid input after the info command.\" +","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"rohitcube"},"content":"                \" (E.g description)\");","lastModifiedDate":"2023-11-14"},{"lineNumber":56,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"rohitcube"},"content":"    public static void invalidCommandforInfoCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"rohitcube"},"content":"        System.out.println(\"Please enter a valid command after the info command. (E.g description)\");","lastModifiedDate":"2023-11-14"},{"lineNumber":60,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"    public static void emptyModuleForInfoCommand(String infoCommand) {","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(\"Empty module detected. Please enter a valid module after the info \" + infoCommand +","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"                \" command.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"rohitcube"},"content":"    public static void emptyKeywordforSearchCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"rohitcube"},"content":"        System.out.println(\"Empty input detected. Please enter a valid keyword after the search command.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"rohitcube"},"content":"    public static void emptyArrayforSearchCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"rohitcube"},"content":"        System.out.println(\"Oops! Your search results came up empty. Please try searching with different keywords.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"    public static void emptyInputforTimetableCommand() {","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"Empty input detected. Please enter a valid argument after the timetable command. \" +","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"                \"(E.g.timetable show, timetable modify)\");","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"    public static void emptyMajor() {","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(\"Major has not been provided yet.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"    public static void moduleDoesNotExist(String moduleCode) {","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(moduleCode + \"does not exist in your schedule.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"rohitcube"},"content":"    public static void invalidModuleCode() {","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"rohitcube"},"content":"        System.out.println(\"Invalid Module Code. Please try again!\");","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"    public static void displayModuleAlreadyCompleted(String moduleCode){","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"        System.out.printf(\"%s has already been marked as completed.%n\", moduleCode);","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"    public static void displayLessonAlreadyAdded(Event event){","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"        System.out.printf(\"%s is already in your timetable.%n\", event);","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"SebasFok":21,"ryanlohyr":31,"janelleenqi":24,"rohitcube":23}},{"path":"src/main/java/seedu/duke/utils/exceptions/CorruptedFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.utils.exceptions;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"//@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":" * Custom exception to indicate that a file is corrupted or has unexpected content.","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":" * This exception should be thrown when an attempt to read or process a file reveals","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":" * that the file\u0027s structure or content is not as expected.","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":" *","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"public class CorruptedFileException extends Exception{","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"SebasFok":11}},{"path":"src/main/java/seedu/duke/utils/exceptions/FailPrereqException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.utils.exceptions;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"//@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":" * Custom exception to indicate that a prerequisite for a certain module is not satisfied.","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":" * This exception should be thrown when a required prerequisite for a module is not met,","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":" * preventing the successful completion of an operation.","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":" *","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"public class FailPrereqException extends Exception{","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"    public FailPrereqException(String message) {","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"        super(message);","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"SebasFok":13,"ryanlohyr":1}},{"path":"src/main/java/seedu/duke/utils/exceptions/InvalidModifyArgumentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.utils.exceptions;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"rohitcube"},"content":"public class InvalidModifyArgumentException extends Exception {","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"rohitcube"},"content":"    public InvalidModifyArgumentException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"rohitcube"},"content":"        super(\"Invalid Modify arguments\");","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"rohitcube"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"janelleenqi":1,"rohitcube":7}},{"path":"src/main/java/seedu/duke/utils/exceptions/InvalidModuleCodeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.utils.exceptions;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"//@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"/**","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":" * This class represents a custom exception that is thrown when an invalid module is encountered.","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":" * An invalid module that has illegal characters.","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":" */","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"public class InvalidModuleCodeException extends Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"    public InvalidModuleCodeException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"        super(\"Invalid Module Name\");","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"ryanlohyr":12,"rohitcube":1}},{"path":"src/main/java/seedu/duke/utils/exceptions/InvalidModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.utils.exceptions;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"//@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":" * This class represents a custom exception that is thrown when an invalid module is encountered.","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":" * An invalid module that has illegal characters.","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":" *","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"public class InvalidModuleException extends Exception{","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"    public InvalidModuleException() {","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"        super(\"Only alphabets and digits are allowed in module codes!\");","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"ryanlohyr":14}},{"path":"src/main/java/seedu/duke/utils/exceptions/InvalidPrereqException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.utils.exceptions;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"public class InvalidPrereqException extends Exception{","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"    public InvalidPrereqException(String moduleCode) {","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"        super(String.format(\"Sorry but we could not get the prerequisite for %s as \" +","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"                \"NUSMods API provided it in a invalid format :\u003c\",moduleCode));","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"ryanlohyr":9}},{"path":"src/main/java/seedu/duke/utils/exceptions/InvalidTimetableUserCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.utils.exceptions;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"//@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":" * This exception is thrown to indicate that a timetable user command is invalid.","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":" * It may occur due to invalid user input for timetable, missing information, etc.","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"public class InvalidTimetableUserCommandException extends Exception {","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a new `InvalidTimetableUserCommandException` with the specified detail message.","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"     * @param message the detail message (which is saved for later retrieval by the `getMessage()` method)","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"    public InvalidTimetableUserCommandException(String message) {","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"        super(message + \"\\nPlease enter in the format: [moduleCode] [lessonType] [startTime] [duration] [day]\\n \" +","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"                \"If you wish to clear lessons for a module, enter: [moduleCode] clear\\n If you with \" +","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"                \"to exit modify, enter: exit \");","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"janelleenqi":19}},{"path":"src/main/java/seedu/duke/utils/exceptions/MandatoryPrereqException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.utils.exceptions;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"//@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":" * Custom exception to indicate that a module, X, is a mandatory prerequisite for another module, Y.","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":" * This exception should be thrown when attempting an action that causes the module X to move to the same","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":" * semester or after module Y.","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":" *","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"public class MandatoryPrereqException extends Exception{","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"    public MandatoryPrereqException(String message) {","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"        super(message);","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"SebasFok":14}},{"path":"src/main/java/seedu/duke/utils/exceptions/MissingFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.utils.exceptions;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"//@@author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":" * Custom exception to indicate that a required file is missing.","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":" * This exception should be thrown when an operation expects a certain file to be present,","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":" * but the file cannot be found or is missing.","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":" *","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"public class MissingFileException extends Exception{","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"SebasFok":12}},{"path":"src/main/java/seedu/duke/utils/exceptions/MissingModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.utils.exceptions;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":" * Custom exception to indicate that a required module is missing.","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":" * This exception should be thrown when an operation expects a certain module to be present,","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":" * but the module cannot be found or is missing.","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":" *","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":" * @author SebasFok","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"public class MissingModuleException extends Exception{","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"    public MissingModuleException(String message) {","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"        super(message);","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"SebasFok":7,"ryanlohyr":1,"janelleenqi":6}},{"path":"src/main/java/seedu/duke/utils/exceptions/TimetableUnavailableException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.utils.exceptions;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"//@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":" * This exception is thrown to indicate that the timetable view is unavailable.","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"public class TimetableUnavailableException extends Exception {","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"    public TimetableUnavailableException(String message) {","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"        super(message);","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"janelleenqi":12}},{"path":"src/main/java/seedu/duke/utils/exceptions/UnknownCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.utils.exceptions;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"rohitcube"},"content":"public class UnknownCommandException extends Exception{","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"rohitcube"},"content":"    public UnknownCommandException(String command) {","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"rohitcube"},"content":"        super(\"Unknown command: \" + command);","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"rohitcube"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"ryanlohyr":1,"rohitcube":6}},{"path":"src/main/java/seedu/duke/views/CommandLineView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.views;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.CommandManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.exceptions.InvalidPrereqException;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.Prerequisite.getModulePrereqBasedOnCourse;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.utils.errors.HttpError.displaySocketError;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"/**","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":" * The CommandLineView class provides methods to display messages and user prompts in the command line interface.","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":" * It also includes a method to show prerequisites for a given module based on the course and major.","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":" */","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"public class CommandLineView {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"    public static void displayReady(){","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"Now you\u0027re all set to use NUSDegs to kick start your degree planning!\");","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"        displayHelp();","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"    public static void displayHelp(){","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"Type \u0027help\u0027 to see the available commands\");","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"    public static void displayGetMajor(String name){","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"Welcome \" + name + \"! What major are you? (Only two available: CEG or CS)\");","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"    public static void displayGetYear(){","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"What Year and Semester are you? Ex: Y1/S2 for year 1 semester 2\");","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"    public static void displayCommands(CommandManager commandManager) {","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"        Ui.displayMessage(\"Here are all the commands currently available in NUSDegs!\");","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"        Ui.displayMessage(\"- Words in UPPER_CASE are the parameters to be supplied by the user.\");","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"        Ui.displayMessage(\"- Parameters in [] are optional.\");","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"        System.out.println();","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"        for (String command : commandManager.printListOfCommands()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"            Ui.displayMessage(command);","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"        System.out.println();","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"        String userGuideURL \u003d \"https://ay2324s1-cs2113-t17-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"        Ui.displayMessage(\"For more information, please read our User Guide at this link:\");","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"        Ui.displayMessage(userGuideURL);","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"     * Displays the prerequisites for a given module based on the course and major.","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"     * @param module The module for which prerequisites need to be displayed.","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"     * @param major The major or course associated with the module.","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"    public static void showPrereq(String module,String major){","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"        try{","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"SebasFok"},"content":"            System.out.println(\"This module\u0027s prerequisites are \"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"                    + getModulePrereqBasedOnCourse(module.toUpperCase(),major));","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"        }catch (InvalidPrereqException e){","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"        }catch (IOException e){","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"            displaySocketError();","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"    public static void displaySuccessfulAddMessage() {","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"        Ui.displayMessage(\"Module Successfully Added\");","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"    public static void displaySuccessfulDeleteMessage() {","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"        Ui.displayMessage(\"Module Successfully Deleted\");","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"SebasFok"},"content":"    public static void displaySuccessfulShiftMessage() {","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"        Ui.displayMessage(\"Module Successfully Shifted\");","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"SebasFok"},"content":"    public static void displaySuccessfulClearMessage() {","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"        Ui.displayMessage(\"Schedule successfully cleared\");","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"SebasFok"},"content":"    public static void displayUnsuccessfulClearMessage() {","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"        Ui.displayMessage(\"Clear schedule operation cancelled\");","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"    public static void displaySuccessfulCompleteMessage() {","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"        Ui.displayMessage(\"Module Successfully Completed\");","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"    public static void displayUnsuccessfulCompleteMessage() {","lastModifiedDate":"2023-11-07"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"        Ui.displayMessage(\"Module cannot be completed as its prereqs have not been completed.\");","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"SebasFok":21,"ryanlohyr":68,"janelleenqi":8}},{"path":"src/main/java/seedu/duke/views/MajorRequirementsView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.views;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"//@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":" * The MajorRequirementsView class provides methods to print the required modules for specific majors.","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"public class MajorRequirementsView {","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"     * Prints the required modules for a specified major.","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"     * This method takes a major as input and prints the required modules for that major.","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"     * @param major The major for which to print the required modules.","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"    public static void printRequiredModules(String major) {","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"        switch (major) {","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"        case \"CEG\":","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"            printRequiredModulesCEG();","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"        case \"CS\":","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"            printRequiredModulesCS();","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"        default:","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"            // should not be reached, prints nothing","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"            displayMessage(\"\");","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"     * Prints the required modules for the Computer Engineering (CEG) major.","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    public static void printRequiredModulesCEG() { //60 char","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"        displayMessage(","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"            \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"            \"║   Modular Requirements for CEG                    Units  ║\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"            \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"            \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"            \"│   Common Curriculum Requirements                  60     │\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"            \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"            \"    GES1000 (Singapore Studies)                     4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"            \"    GEC1000 (Cultures and Connections)              4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"            \"    GEN2000 (Communities and Engagement)            4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"            \"    ES2631 Critique \u0026 Communication of Thinking\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"            \"    \u0026 Design (Critique \u0026 Expression)                4\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"            \"    CS1010 Programming Methodology (Digital \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"            \"    Literacy)                                       4\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"            \"    GEA1000 Quantitative Reasoning with Data (Data \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"            \"    Literacy)                                       4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"            \"    DTK1234 Design Thinking (Design Thinking)       4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"            \"    EG1311 Design and Make (Maker Space)            4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"            \"    IE2141 Systems Thinking and Dynamics (Systems \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"            \"    Thinking)                                       4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"            \"    EE2211 Introduction to Machine Learning \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"            \"    (Artificial Intelligence)                       4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"            \"    CDE2501 Liveable Cities (Sustainable Futures)   4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"            \"    CDE2000 (Creating Narratives)                   4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"            \"    PF1101 Fundamentals of Project Management \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"            \"    (Project Management)                            4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"            \"    CG4002 Computer Engineering Capstone Project 1 \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"            \"    (Integrated Project)                            8\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"            \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"            \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"            \"│   Programme Requirements                          60     │\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"            \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"            \" ~~ Engineering Core                                20  ~~\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"            \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"            \"    MA1511 Engineering Calculus                     2\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"            \"    MA1512 Differential Equations for Engineering   2\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"            \"    MA1508E Linear Algebra for Engineering          4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"            \"    EG2401A Engineering Professionalism             2\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"            \"    CP3880 Advanced Technology Attachment Programme 12\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"            \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"            \" ~~ CEG Major                                       40  ~~\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"            \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"            \"    CG1111A Engineering Principles and Practice I   4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"            \"    CG2111A Engineering Principles and Practice II  4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"            \"    CS1231 Discrete Structures                      4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"            \"    CG2023 Signals \u0026 Systems                        4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"            \"    CG2027 Transistor-level Digital Circuit         2\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"            \"    CG2028 Computer Organization                    2\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"            \"    CG2271 Real-time Operating System               4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"            \"    CS2040C Data Structures and Algorithms          4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"            \"    CS2113 Software Engineering \u0026 Object-Oriented \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"            \"    Programming                                     4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"            \"    EE2026 Digital Design                           4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"            \"    EE4204 Computer Networks                        4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"            \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"            \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"            \"│   Unrestricted Electives                          40     │\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"            \"+----------------------------------------------------------+\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"     * Prints the required modules for the Computer Science (CS) major.","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"    public static void printRequiredModulesCS() {","lastModifiedDate":"2023-11-07"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"        displayMessage(","lastModifiedDate":"2023-11-07"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"            \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"            \"║   Modular Requirements for CS                     Units  ║\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"            \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"            \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"            \"│   Common Curriculum Requirements                  40     │\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"            \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"            \" ~~ University Requirements: 6 University Pillars   24  ~~\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"            \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"            \"    CS1101S Programming Methodology (Digital \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"            \"    Literacy)                                       4\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"            \"    ES2660 Communicating in the Information Age \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"            \"    (Critique and Expression)                       4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"            \"    GEC1% (Cultures and Connections)                4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"            \"    GEA1000 / BT1101 / ST1131 / DSA1101 (Data \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"            \"    Literacy)                                       4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"            \"    GES1% (Singapore Studies)                       4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"            \"    GEN2% (Communities and Engagement)              4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"            \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"            \" ~~ Computing Ethics                                4  ~~\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"            \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"            \"    IS1108 Digital Ethics and Data Privacy          4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"            \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"            \" ~~   Inter \u0026 Cross-Disciplinary Education          12 ~~\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"            \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":124,"author":{"gitId":"janelleenqi"},"content":"            \"    Interdisciplinary (ID) Courses (at least 2)\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"            \"    Cross-disciplinary (CD) Courses (no more than 1)\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":126,"author":{"gitId":"janelleenqi"},"content":"            \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"            \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":128,"author":{"gitId":"janelleenqi"},"content":"            \"│   Programme Requirements                          80     │\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":129,"author":{"gitId":"janelleenqi"},"content":"            \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":130,"author":{"gitId":"janelleenqi"},"content":"            \" ~~ Computer Science Foundation                     36  ~~\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":131,"author":{"gitId":"janelleenqi"},"content":"            \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":132,"author":{"gitId":"janelleenqi"},"content":"            \"    CS1231S Discrete Structures                     4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":133,"author":{"gitId":"janelleenqi"},"content":"            \"    CS2030S Programming Methodology II              4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":134,"author":{"gitId":"janelleenqi"},"content":"            \"    CS2040S Data Structures and Algorithms          4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":135,"author":{"gitId":"janelleenqi"},"content":"            \"    CS2100 Computer Organisation                    4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":136,"author":{"gitId":"janelleenqi"},"content":"            \"    CS2101 Effective Communication for Computing \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":137,"author":{"gitId":"janelleenqi"},"content":"            \"    Professionals                                   4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":138,"author":{"gitId":"janelleenqi"},"content":"            \"    CS2103T Software Engineering                    4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":139,"author":{"gitId":"janelleenqi"},"content":"            \"    CS2106 Introduction to Operating Systems        4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":140,"author":{"gitId":"janelleenqi"},"content":"            \"    CS2109S Introduction to AI and Machine Learning 4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":141,"author":{"gitId":"janelleenqi"},"content":"            \"    CS3230 Design and Analysis of Algorithms        4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":142,"author":{"gitId":"janelleenqi"},"content":"            \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":143,"author":{"gitId":"janelleenqi"},"content":"            \" ~~ Computer Science Breadth and Depth              32  ~~\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":144,"author":{"gitId":"janelleenqi"},"content":"            \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"            \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":146,"author":{"gitId":"janelleenqi"},"content":"            \" ~~ Mathematics and Sciences                        12  ~~\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"            \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":148,"author":{"gitId":"janelleenqi"},"content":"            \"    MA1521 Calculus for Computing                   4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"            \"    MA1522 Linear Algebra for Computing             4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":150,"author":{"gitId":"janelleenqi"},"content":"            \"    ST2334 Probability and Statistics               4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"            \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":152,"author":{"gitId":"janelleenqi"},"content":"            \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":153,"author":{"gitId":"janelleenqi"},"content":"            \"│   Unrestricted Electives                          40     │\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":154,"author":{"gitId":"janelleenqi"},"content":"            \"+----------------------------------------------------------+\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":155,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":156,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":157,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":158,"author":{"gitId":"janelleenqi"},"content":"     * Displays a message to the console.","lastModifiedDate":"2023-11-08"},{"lineNumber":159,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":160,"author":{"gitId":"janelleenqi"},"content":"     * This method prints the specified object to the console.","lastModifiedDate":"2023-11-08"},{"lineNumber":161,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":162,"author":{"gitId":"janelleenqi"},"content":"     * @param o The object to be displayed as a message.","lastModifiedDate":"2023-11-08"},{"lineNumber":163,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":164,"author":{"gitId":"janelleenqi"},"content":"    public static void displayMessage(Object o) {","lastModifiedDate":"2023-11-07"},{"lineNumber":165,"author":{"gitId":"janelleenqi"},"content":"        System.out.print(o);","lastModifiedDate":"2023-11-07"},{"lineNumber":166,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":167,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":168,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"janelleenqi":168}},{"path":"src/main/java/seedu/duke/views/ModuleInfoView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.views;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.json.simple.JSONArray;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Module;","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"public class ModuleInfoView {","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    public static void print(String output) {","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(output);","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"    public static void printLine() {","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"_________________________________________\");","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"    public static void printJsonArray(JSONArray modules) {","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"        for (Object module: modules) {","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"            JSONObject castedModule \u003d (JSONObject) module;","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"            print(\"Title: \" + (String)castedModule.get(\"title\"));","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"            print(\"Module Code: \" + (String)castedModule.get(\"moduleCode\"));","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"            printLine();","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"    public static void searchHeader() {","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"        printLine();","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"        print(\"These are the modules that contain your keyword in the title:\");","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"        print(\"\");","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"     * Print a list of modules in columns with a specified maximum height.","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"     * @param modules       An ArrayList of module names to be printed.","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"    public static void printModuleStringArray(ArrayList\u003cString\u003e modules){","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"        int maxColumnHeight \u003d 5;","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"        for (int i \u003d 0; i \u003c modules.size(); i +\u003d maxColumnHeight) {","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"            for (int j \u003d 0; j \u003c maxColumnHeight \u0026\u0026 i + j \u003c modules.size(); j++) {","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"                String module \u003d (i + j + 1) + \". \" + modules.get(i + j);","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"                System.out.printf(\"%-15s\", module);","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println();","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"     * Print a list of modules in columns with a specified maximum height.","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"     * @param modules       An ArrayList of module names to be printed.","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"    public static void printModuleArray(ArrayList\u003cModule\u003e modules){","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"        int maxColumnHeight \u003d 5;","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"        for (int i \u003d 0; i \u003c modules.size(); i +\u003d maxColumnHeight) {","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"            for (int j \u003d 0; j \u003c maxColumnHeight \u0026\u0026 i + j \u003c modules.size(); j++) {","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"                String module \u003d (i + j + 1) + \". \" + modules.get(i + j);","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"                System.out.printf(\"%-15s\", module);","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println();","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"ryanlohyr":67}},{"path":"src/main/java/seedu/duke/views/SemesterPlannerView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.views;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.Module;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.ModuleList;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Schedule;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":" * The SemesterPlannerView class provides methods to display and print the semester planner.","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"public class SemesterPlannerView {","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"    private static void print(String output) {","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"        System.out.print(output);","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"    private static void println() {","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"        System.out.println();","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"     * Displays the schedule based on the provided schedule object.","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"     * @param schedule The Schedule object containing the semester planner information.","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"    public  static void displaySchedule (Schedule schedule){","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"        int[] modulesPerSem \u003d schedule.getModulesPerSem();","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"        ModuleList modulesPlanned \u003d schedule.getModulesPlanned();","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"        int moduleCounter \u003d 0;","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"        int maxModulesPerColumn \u003d 5;","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"        for (int i \u003d 0; i \u003c modulesPerSem.length; i++) {","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"            print(\"Sem \" + (i + 1) + \":   \");","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"            for (int j \u003d 0; j \u003c modulesPerSem[i]; j++) {","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"                if(j !\u003d 0 \u0026\u0026 j % maxModulesPerColumn \u003d\u003d 0){","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println();","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"                    print(\"    \" + \" \"+ \"    \");","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"                Module currentModule \u003d modulesPlanned.getModuleByIndex(moduleCounter);","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"                String stringToPrint \u003d getCompletionStatusForPrinting(currentModule) + \" \" + currentModule + \"   \";","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"                System.out.printf(\"%-15s\", stringToPrint);","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"                moduleCounter++;","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"            println();","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"     * Prints the semester planner based on the provided modulesPerSem and modulesPlanned.","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"     * @param modulesPerSem The array representing the number of modules per semester.","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"     * @param modulesPlanned The ModuleList containing the planned modules.","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"    public static void printSemesterPlanner(int[] modulesPerSem, ModuleList modulesPlanned) {","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"        int moduleCounter \u003d 0;","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"        int maxModulesPerColumn \u003d 5;","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"        for (int i \u003d 0; i \u003c modulesPerSem.length; i++) {","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"            print(\"Sem \" + (i + 1) + \":   \");","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"            for (int j \u003d 0; j \u003c modulesPerSem[i]; j++) {","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"                if(j !\u003d 0 \u0026\u0026 j % maxModulesPerColumn \u003d\u003d 0){","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println();","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"                    print(\"    \" + \" \"+ \"    \");","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"                Module currentModule \u003d modulesPlanned.getModuleByIndex(moduleCounter);","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"                String stringToPrint \u003d getCompletionStatusForPrinting(currentModule) + \" \" + currentModule + \"   \";","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"                System.out.printf(\"%-15s\", stringToPrint);","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"                moduleCounter++;","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"            println();","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"    //@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves the completion status indicator for a module, \u0027O\u0027 for completed, \u0027X\u0027 for not completed.","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"     * @param module The Module object for which to determine the completion status.","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"     * @return The completion status indicator (\u0027O\u0027 or \u0027X\u0027).","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"    private static String getCompletionStatusForPrinting(Module module) {","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"        if (module.getCompletionStatus()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"            return \"O\";","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"        return \"X\";","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"ryanlohyr":29,"janelleenqi":55}},{"path":"src/main/java/seedu/duke/views/TimetableUserGuideView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.views;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.ModuleWeekly;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.TimetableUnavailableException;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"//@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":" * The TimetableUserGuideView class provides methods to display user guides for the timetable-related commands.","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"public class TimetableUserGuideView {","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"    private static final int justifyLength \u003d 12;","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"    private static void print(String output) {","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"        System.out.print(output + \" \");","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"    private static void println() {","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"        System.out.println();","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    public static void println(String output) {","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(output);","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"     * Prints spaces to justify the output to the given width.","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"     * @param number The width for justification.","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"    private static void printToJustify(int number) {","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"        print(String.format(\"%-\" + number + \"s\", \"\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"     * Prints a string with spaces to justify it to the given width.","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"     * @param string The string to be printed.","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"     * @param number The width for justification.","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"    private static void printToJustify(String string, int number) {","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"        print(String.format(\"%-\" + number + \"s\", string));","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"     * Prints the list of modules in the current semester.","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"     * @param currentSemModulesWeekly The list of modules in the current semester.","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"     * @throws TimetableUnavailableException If there are no modules in the current semester.","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"    public static void printCurrentSemModules(ArrayList\u003cModuleWeekly\u003e currentSemModulesWeekly)","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"            throws TimetableUnavailableException {","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"        println(\"List of modules in current semester: \");","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"        if (currentSemModulesWeekly.isEmpty()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"            throw new TimetableUnavailableException(\"There are no modules in your current semester. \" +","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"                    \"Please add in modules, or generate using the \u0027recommend\u0027 command.\");","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"        for (ModuleWeekly moduleWeekly : currentSemModulesWeekly) {","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"            println(moduleWeekly.getModuleCode());","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"        println();","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"    public static void addGuide() {","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"        println(\"Please add a module using this format: add [module code] [semester]\");","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"    private static String getTimetableShowGuide() {","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"        return \"View your timetable using this format: timetable show\";","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"    private static String getTimetableModifyGuide() {","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"        return \"Modify your lectures/tutorials/labs in timetable using this format: timetable modify\";","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"     * Generates a guide for adding or recommending modules.","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"     * @param specificContext The specific context for the guide.","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"     * @param semester The semester for which to add modules.","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"     * @return The guide for adding or recommending modules.","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"    public static String addOrRecommendGuide(String specificContext, int semester) {","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"        return (specificContext + \"\\n\" +","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"                \"Add modules using this format: add [module code] \" + semester + \"\\n\" +","lastModifiedDate":"2023-11-12"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"                \"Alternatively, get the recommended schedule for your major: recommend\");","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"     * Prints the guide for adding or recommending modules.","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"     * @param specificContext The specific context for the guide.","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"    public static void printAddRecommendGuide(String specificContext) {","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"        print(specificContext);","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"        println(\"Add modules to your current semester or get the recommended schedule for your major first.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"     * Prints the guide for modifying the timetable.","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"     * @param specificContext The specific context for the guide.","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"    public static void printTimetableModifyGuide(String specificContext) {","lastModifiedDate":"2023-11-08"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"        println(specificContext);","lastModifiedDate":"2023-11-12"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"        println(\"Enter Timetable Modify Mode to add lessons: timetable modify\");","lastModifiedDate":"2023-11-12"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"     * Prints a simple guide for modifying lessons in the timetable.","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"     * @param specificContext The specific context for the guide.","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"    public static void printTTModifySimpleLessonGuide(String specificContext) {","lastModifiedDate":"2023-11-12"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"        println(specificContext);","lastModifiedDate":"2023-11-08"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"        println(\"To add a lesson for a module, enter: [moduleCode] [lessonType] [startTime] [duration] [day]\\n\" +","lastModifiedDate":"2023-11-11"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"                \"To clear lessons for a module, enter: [moduleCode] clear\\n\" +","lastModifiedDate":"2023-11-11"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"                \"To exit Timetable Modify Mode, enter: EXIT\");","lastModifiedDate":"2023-11-10"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"     * Prints a detailed guide for modifying lessons in the timetable.","lastModifiedDate":"2023-11-13"},{"lineNumber":124,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"     * @param specificContext The specific context for the guide.","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"    public static void printTTModifyDetailedLessonGuide(String specificContext) {","lastModifiedDate":"2023-11-10"},{"lineNumber":128,"author":{"gitId":"janelleenqi"},"content":"        println(specificContext);","lastModifiedDate":"2023-11-10"},{"lineNumber":129,"author":{"gitId":"janelleenqi"},"content":"        println(\"To add a lesson to a module: [moduleCode] [lessonType] [startTime] [duration] [day]\");","lastModifiedDate":"2023-11-10"},{"lineNumber":130,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":131,"author":{"gitId":"janelleenqi"},"content":"        printToJustify(4);","lastModifiedDate":"2023-11-10"},{"lineNumber":132,"author":{"gitId":"janelleenqi"},"content":"        printToJustify(\"lessonType\", justifyLength);","lastModifiedDate":"2023-11-10"},{"lineNumber":133,"author":{"gitId":"janelleenqi"},"content":"        println(\"lecture, tutorial, lab\");","lastModifiedDate":"2023-11-10"},{"lineNumber":134,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":135,"author":{"gitId":"janelleenqi"},"content":"        printToJustify(4);","lastModifiedDate":"2023-11-10"},{"lineNumber":136,"author":{"gitId":"janelleenqi"},"content":"        printToJustify(\"startTime\", justifyLength);","lastModifiedDate":"2023-11-10"},{"lineNumber":137,"author":{"gitId":"janelleenqi"},"content":"        println(\"integer from 5 to 23 (representing 5am to 11pm)\");","lastModifiedDate":"2023-11-12"},{"lineNumber":138,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":139,"author":{"gitId":"janelleenqi"},"content":"        printToJustify(4);","lastModifiedDate":"2023-11-10"},{"lineNumber":140,"author":{"gitId":"janelleenqi"},"content":"        printToJustify(\"duration\", justifyLength);","lastModifiedDate":"2023-11-10"},{"lineNumber":141,"author":{"gitId":"janelleenqi"},"content":"        println(\"time in hours\");","lastModifiedDate":"2023-11-10"},{"lineNumber":142,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":143,"author":{"gitId":"janelleenqi"},"content":"        printToJustify(4);","lastModifiedDate":"2023-11-10"},{"lineNumber":144,"author":{"gitId":"janelleenqi"},"content":"        printToJustify(\"day\", justifyLength);","lastModifiedDate":"2023-11-10"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"        println(\"eg. monday, tuesday, wednesday\");","lastModifiedDate":"2023-11-10"},{"lineNumber":146,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"        println(\"To clear all lessons for a module: [moduleCode] clear\");","lastModifiedDate":"2023-11-10"},{"lineNumber":148,"author":{"gitId":"janelleenqi"},"content":"        println(\"To exit timetable modify: exit\");","lastModifiedDate":"2023-11-10"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":150,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"janelleenqi":151}},{"path":"src/main/java/seedu/duke/views/TimetableView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.views;","lastModifiedDate":"2023-11-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.Event;","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.ModuleWeekly;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import java.util.List;","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.views.TimetableUserGuideView.printTimetableModifyGuide;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.views.TimetableUserGuideView.printAddRecommendGuide;","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"//@@author janelleenqi","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"public class TimetableView {","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"    private static final int dayColumnWidth \u003d 10;","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"    private static final int eventColumnWidth \u003d 45;","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"    private static final String[] days \u003d {\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"};","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"     * Prints the given output without a new line.","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"     * @param output The string to be printed.","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"    private static void print(String output) {","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"        System.out.print(output);","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"     * Prints the given output with a new line.","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"     * @param output The string to be printed.","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"    private static void println(String output) {","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(output);","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"     * Prints a horizontal line as a separator in the console.","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"    private static void printlnHorizontalLine() {","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"        println(\"------------------------------------------------------------\");","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"     * Prints a vertical line as a separator in the console.","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"    private static void printVerticalLine() {","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"        System.out.print(\"| \");","lastModifiedDate":"2023-11-05"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"     * Prints a vertical line followed by a new line.","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"    private static void printlnVerticalLine() {","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(\"|\");","lastModifiedDate":"2023-11-05"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"     * Prints spaces to justify the output to the given width.","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"     * @param number The width for justification.","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"    private static void printToJustify(int number) {","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"        print(String.format(\"%-\" + number + \"s\", \"\"));","lastModifiedDate":"2023-11-05"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"     * Prints a string with spaces to justify it to the given width.","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"     * @param string The string to be printed.","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"     * @param number The width for justification.","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"    private static void printToJustify(String string, int number) {","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"        print(String.format(\"%-\" + number + \"s\", string));","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"     * Prints the timetable for the given list of ModuleWeekly objects.","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"     * @param currentSemesterModules List of ModuleWeekly objects.","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"    public static void printTimetable(ArrayList\u003cModuleWeekly\u003e currentSemesterModules) {","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"        if (currentSemesterModules \u003d\u003d null || currentSemesterModules.isEmpty()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"            printAddRecommendGuide(\"Timetable view is unavailable as you have no modules in your current \" +","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"                    \"semester.\\n\");","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"        // create a List (by days) of EventList (modules, event type, time)","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"        List\u003cArrayList\u003cEvent\u003e\u003e weeklyTimetableByDay \u003d createDailyEvents(currentSemesterModules);","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"        if (!eventsExist(weeklyTimetableByDay)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"            printTimetableModifyGuide(\"Timetable view is unavailable as modules in your current \" +","lastModifiedDate":"2023-11-10"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"                    \"semester have no lessons yet.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-11-08"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"        // sort EventList by time","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"        for (ArrayList\u003cEvent\u003e currentDayEvents : weeklyTimetableByDay) {","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"            sortByTime(currentDayEvents);","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"        // print timetable","lastModifiedDate":"2023-11-08"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"        printTimetableHeader();","lastModifiedDate":"2023-11-08"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"        for (int day \u003d 0; day \u003c days.length; day++) { //8-9am index 0, 7-8pm index 11","lastModifiedDate":"2023-11-08"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"            if (weeklyTimetableByDay.get(day).isEmpty()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"                continue;","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"            printlnHorizontalLine();","lastModifiedDate":"2023-11-08"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"            printCurrentDayEvents(weeklyTimetableByDay.get(day), day);","lastModifiedDate":"2023-11-08"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"        printlnHorizontalLine();","lastModifiedDate":"2023-11-08"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"     * Creates a list of daily events for the given list of ModuleWeekly objects.","lastModifiedDate":"2023-11-08"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"     * @param currentSemesterModules List of ModuleWeekly objects.","lastModifiedDate":"2023-11-08"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"     * @return A list of daily events.","lastModifiedDate":"2023-11-08"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"    private static List\u003cArrayList\u003cEvent\u003e\u003e createDailyEvents(ArrayList\u003cModuleWeekly\u003e currentSemesterModules) {","lastModifiedDate":"2023-11-12"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"        // List with 7 empty ArrayList","lastModifiedDate":"2023-11-08"},{"lineNumber":124,"author":{"gitId":"janelleenqi"},"content":"        List\u003cArrayList\u003cEvent\u003e\u003e weeklyTimetableByDay \u003d initialiseOneDList();","lastModifiedDate":"2023-11-09"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":126,"author":{"gitId":"janelleenqi"},"content":"        // Add events as string for all modules to weeklyTimetableByDay","lastModifiedDate":"2023-11-08"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"        for (ModuleWeekly module : currentSemesterModules) {","lastModifiedDate":"2023-11-08"},{"lineNumber":128,"author":{"gitId":"janelleenqi"},"content":"            for (Event event : module.getWeeklyTimetable()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":129,"author":{"gitId":"janelleenqi"},"content":"                addToWeeklyTimetableByDay(weeklyTimetableByDay, event);","lastModifiedDate":"2023-11-09"},{"lineNumber":130,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":131,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":132,"author":{"gitId":"janelleenqi"},"content":"        return weeklyTimetableByDay;","lastModifiedDate":"2023-11-08"},{"lineNumber":133,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":134,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":135,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"janelleenqi"},"content":"     * Sorts an ArrayList of events in ascending order.","lastModifiedDate":"2023-11-09"},{"lineNumber":137,"author":{"gitId":"janelleenqi"},"content":"     * This method uses the bubble sort algorithm to sort the events.","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"janelleenqi"},"content":"     * @param currentDayEvents An ArrayList of Event objects to be sorted.","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":141,"author":{"gitId":"janelleenqi"},"content":"    private static void sortByTime(ArrayList\u003cEvent\u003e currentDayEvents) {","lastModifiedDate":"2023-11-12"},{"lineNumber":142,"author":{"gitId":"janelleenqi"},"content":"        // bubble sort O(n^2)","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"janelleenqi"},"content":"        for (int index \u003d 0; index \u003c currentDayEvents.size(); index++) {","lastModifiedDate":"2023-11-09"},{"lineNumber":144,"author":{"gitId":"janelleenqi"},"content":"            int bubbleIndex \u003d index;","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"            while (bubbleIndex \u003e 0) {","lastModifiedDate":"2023-11-09"},{"lineNumber":146,"author":{"gitId":"janelleenqi"},"content":"                Event unsortedEvent \u003d currentDayEvents.get(bubbleIndex);","lastModifiedDate":"2023-11-09"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"                Event sortedEvent \u003d currentDayEvents.get(bubbleIndex - 1);","lastModifiedDate":"2023-11-09"},{"lineNumber":148,"author":{"gitId":"janelleenqi"},"content":"                if (unsortedEvent.isEarlierThan(sortedEvent)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"                    // swap","lastModifiedDate":"2023-11-09"},{"lineNumber":150,"author":{"gitId":"janelleenqi"},"content":"                    currentDayEvents.set(bubbleIndex, sortedEvent);","lastModifiedDate":"2023-11-09"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"                    currentDayEvents.set(bubbleIndex - 1, unsortedEvent);","lastModifiedDate":"2023-11-09"},{"lineNumber":152,"author":{"gitId":"janelleenqi"},"content":"                    bubbleIndex--;","lastModifiedDate":"2023-11-09"},{"lineNumber":153,"author":{"gitId":"janelleenqi"},"content":"                } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":154,"author":{"gitId":"janelleenqi"},"content":"                    break;","lastModifiedDate":"2023-11-09"},{"lineNumber":155,"author":{"gitId":"janelleenqi"},"content":"                }","lastModifiedDate":"2023-11-09"},{"lineNumber":156,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":157,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":159,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":160,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":161,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":162,"author":{"gitId":"janelleenqi"},"content":"     * Prints the timetable header.","lastModifiedDate":"2023-11-08"},{"lineNumber":163,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":164,"author":{"gitId":"janelleenqi"},"content":"    private static void printTimetableHeader() {","lastModifiedDate":"2023-11-12"},{"lineNumber":165,"author":{"gitId":"janelleenqi"},"content":"        printlnHorizontalLine();","lastModifiedDate":"2023-11-08"},{"lineNumber":166,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":167,"author":{"gitId":"janelleenqi"},"content":"        printVerticalLine();","lastModifiedDate":"2023-11-08"},{"lineNumber":168,"author":{"gitId":"janelleenqi"},"content":"        printToJustify(\"DAY\", dayColumnWidth);","lastModifiedDate":"2023-11-08"},{"lineNumber":169,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":170,"author":{"gitId":"janelleenqi"},"content":"        printVerticalLine();","lastModifiedDate":"2023-11-08"},{"lineNumber":171,"author":{"gitId":"janelleenqi"},"content":"        printToJustify(\"TIMETABLE\", eventColumnWidth);","lastModifiedDate":"2023-11-08"},{"lineNumber":172,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":173,"author":{"gitId":"janelleenqi"},"content":"        printlnVerticalLine();","lastModifiedDate":"2023-11-08"},{"lineNumber":174,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":175,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":176,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":177,"author":{"gitId":"janelleenqi"},"content":"     * Prints events for the current day.","lastModifiedDate":"2023-11-08"},{"lineNumber":178,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":179,"author":{"gitId":"janelleenqi"},"content":"     * @param currentDayEvents List of events for the current day.","lastModifiedDate":"2023-11-14"},{"lineNumber":180,"author":{"gitId":"janelleenqi"},"content":"     * @param day       The index of the day.","lastModifiedDate":"2023-11-08"},{"lineNumber":181,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":182,"author":{"gitId":"janelleenqi"},"content":"    private static void printCurrentDayEvents(ArrayList\u003cEvent\u003e currentDayEvents, int day) {","lastModifiedDate":"2023-11-14"},{"lineNumber":183,"author":{"gitId":"janelleenqi"},"content":"        // Need to print day for first line","lastModifiedDate":"2023-11-08"},{"lineNumber":184,"author":{"gitId":"janelleenqi"},"content":"        boolean isFirstLine \u003d true;","lastModifiedDate":"2023-11-08"},{"lineNumber":185,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":186,"author":{"gitId":"janelleenqi"},"content":"        while (!currentDayEvents.isEmpty()) {","lastModifiedDate":"2023-11-14"},{"lineNumber":187,"author":{"gitId":"janelleenqi"},"content":"            Event currentEvent \u003d currentDayEvents.get(0);","lastModifiedDate":"2023-11-14"},{"lineNumber":188,"author":{"gitId":"janelleenqi"},"content":"            printCurrentDayOneEvent(currentEvent, day, isFirstLine);","lastModifiedDate":"2023-11-08"},{"lineNumber":189,"author":{"gitId":"janelleenqi"},"content":"            currentDayEvents.remove(0);","lastModifiedDate":"2023-11-14"},{"lineNumber":190,"author":{"gitId":"janelleenqi"},"content":"            isFirstLine \u003d false;","lastModifiedDate":"2023-11-08"},{"lineNumber":191,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":192,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":193,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":194,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":195,"author":{"gitId":"janelleenqi"},"content":"     * Prints one line of events for the current day.","lastModifiedDate":"2023-11-08"},{"lineNumber":196,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":197,"author":{"gitId":"janelleenqi"},"content":"     * @param currentEvent The current event.","lastModifiedDate":"2023-11-09"},{"lineNumber":198,"author":{"gitId":"janelleenqi"},"content":"     * @param day          The index of the day.","lastModifiedDate":"2023-11-08"},{"lineNumber":199,"author":{"gitId":"janelleenqi"},"content":"     * @param isFirstLine  Whether it is the first line.","lastModifiedDate":"2023-11-08"},{"lineNumber":200,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":201,"author":{"gitId":"janelleenqi"},"content":"    private static void printCurrentDayOneEvent(Event currentEvent, int day, boolean isFirstLine) {","lastModifiedDate":"2023-11-12"},{"lineNumber":202,"author":{"gitId":"janelleenqi"},"content":"        String currentEventDetails \u003d currentEvent.toString();","lastModifiedDate":"2023-11-09"},{"lineNumber":203,"author":{"gitId":"janelleenqi"},"content":"        while (!currentEventDetails.isEmpty()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":204,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":205,"author":{"gitId":"janelleenqi"},"content":"            printVerticalLine();","lastModifiedDate":"2023-11-08"},{"lineNumber":206,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":207,"author":{"gitId":"janelleenqi"},"content":"            // print day","lastModifiedDate":"2023-11-08"},{"lineNumber":208,"author":{"gitId":"janelleenqi"},"content":"            if (isFirstLine) {","lastModifiedDate":"2023-11-08"},{"lineNumber":209,"author":{"gitId":"janelleenqi"},"content":"                print(days[day]);","lastModifiedDate":"2023-11-08"},{"lineNumber":210,"author":{"gitId":"janelleenqi"},"content":"                printToJustify(dayColumnWidth - days[day].length());","lastModifiedDate":"2023-11-08"},{"lineNumber":211,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":212,"author":{"gitId":"janelleenqi"},"content":"                isFirstLine \u003d false;","lastModifiedDate":"2023-11-08"},{"lineNumber":213,"author":{"gitId":"janelleenqi"},"content":"            } else {","lastModifiedDate":"2023-11-08"},{"lineNumber":214,"author":{"gitId":"janelleenqi"},"content":"                printToJustify(dayColumnWidth);","lastModifiedDate":"2023-11-08"},{"lineNumber":215,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":216,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":217,"author":{"gitId":"janelleenqi"},"content":"            printVerticalLine();","lastModifiedDate":"2023-11-08"},{"lineNumber":218,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":219,"author":{"gitId":"janelleenqi"},"content":"            // if currentEvent is too long","lastModifiedDate":"2023-11-08"},{"lineNumber":220,"author":{"gitId":"janelleenqi"},"content":"            if (currentEventDetails.length() \u003e eventColumnWidth) {","lastModifiedDate":"2023-11-09"},{"lineNumber":221,"author":{"gitId":"janelleenqi"},"content":"                String[] words \u003d currentEventDetails.split(\" \");","lastModifiedDate":"2023-11-09"},{"lineNumber":222,"author":{"gitId":"janelleenqi"},"content":"                int eventColumnWidthLeft \u003d eventColumnWidth;","lastModifiedDate":"2023-11-08"},{"lineNumber":223,"author":{"gitId":"janelleenqi"},"content":"                int currentWordIndex \u003d 0;","lastModifiedDate":"2023-11-08"},{"lineNumber":224,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":225,"author":{"gitId":"janelleenqi"},"content":"                while (eventColumnWidthLeft \u003e words[currentWordIndex].length()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":226,"author":{"gitId":"janelleenqi"},"content":"                    print(words[currentWordIndex] + \" \");","lastModifiedDate":"2023-11-08"},{"lineNumber":227,"author":{"gitId":"janelleenqi"},"content":"                    eventColumnWidthLeft -\u003d (words[currentWordIndex] + \" \").length();","lastModifiedDate":"2023-11-09"},{"lineNumber":228,"author":{"gitId":"janelleenqi"},"content":"                    currentWordIndex++;","lastModifiedDate":"2023-11-08"},{"lineNumber":229,"author":{"gitId":"janelleenqi"},"content":"                }","lastModifiedDate":"2023-11-08"},{"lineNumber":230,"author":{"gitId":"janelleenqi"},"content":"                printToJustify(eventColumnWidthLeft);","lastModifiedDate":"2023-11-08"},{"lineNumber":231,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":232,"author":{"gitId":"janelleenqi"},"content":"                String wordNotPrintedYet \u003d words[currentWordIndex];","lastModifiedDate":"2023-11-08"},{"lineNumber":233,"author":{"gitId":"janelleenqi"},"content":"                int indexNotPrintedYet \u003d currentEventDetails.indexOf(wordNotPrintedYet);","lastModifiedDate":"2023-11-09"},{"lineNumber":234,"author":{"gitId":"janelleenqi"},"content":"                currentEventDetails \u003d currentEventDetails.substring(indexNotPrintedYet);","lastModifiedDate":"2023-11-09"},{"lineNumber":235,"author":{"gitId":"janelleenqi"},"content":"                printlnVerticalLine();","lastModifiedDate":"2023-11-08"},{"lineNumber":236,"author":{"gitId":"janelleenqi"},"content":"                continue;","lastModifiedDate":"2023-11-08"},{"lineNumber":237,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":238,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":239,"author":{"gitId":"janelleenqi"},"content":"            // currentEvent can be printed","lastModifiedDate":"2023-11-08"},{"lineNumber":240,"author":{"gitId":"janelleenqi"},"content":"            print(currentEventDetails);","lastModifiedDate":"2023-11-09"},{"lineNumber":241,"author":{"gitId":"janelleenqi"},"content":"            printToJustify(eventColumnWidth - currentEventDetails.length());","lastModifiedDate":"2023-11-09"},{"lineNumber":242,"author":{"gitId":"janelleenqi"},"content":"            currentEventDetails \u003d \"\";","lastModifiedDate":"2023-11-09"},{"lineNumber":243,"author":{"gitId":"janelleenqi"},"content":"            printlnVerticalLine();","lastModifiedDate":"2023-11-08"},{"lineNumber":244,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":245,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":246,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":247,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":248,"author":{"gitId":"janelleenqi"},"content":"     * Fills and sets an object at a specific index in a list, creating intermediate objects if needed.","lastModifiedDate":"2023-11-08"},{"lineNumber":249,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":250,"author":{"gitId":"janelleenqi"},"content":"     * @param index  Index where the object should be placed.","lastModifiedDate":"2023-11-08"},{"lineNumber":251,"author":{"gitId":"janelleenqi"},"content":"     * @param object Object to be placed.","lastModifiedDate":"2023-11-08"},{"lineNumber":252,"author":{"gitId":"janelleenqi"},"content":"     * @param list   List where the object should be placed.","lastModifiedDate":"2023-11-08"},{"lineNumber":253,"author":{"gitId":"janelleenqi"},"content":"     * @param \u003cT\u003e    Type of the object.","lastModifiedDate":"2023-11-08"},{"lineNumber":254,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":255,"author":{"gitId":"janelleenqi"},"content":"    private static \u003cT\u003e void fillAndSet(int index, T object, List\u003cT\u003e list) {","lastModifiedDate":"2023-11-12"},{"lineNumber":256,"author":{"gitId":"janelleenqi"},"content":"        if (index \u003e (list.size() - 1)) {","lastModifiedDate":"2023-11-05"},{"lineNumber":257,"author":{"gitId":"janelleenqi"},"content":"            for (int i \u003d list.size(); i \u003c index; i++) {","lastModifiedDate":"2023-11-05"},{"lineNumber":258,"author":{"gitId":"janelleenqi"},"content":"                list.add(null);","lastModifiedDate":"2023-11-05"},{"lineNumber":259,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-05"},{"lineNumber":260,"author":{"gitId":"janelleenqi"},"content":"            list.add(object);","lastModifiedDate":"2023-11-05"},{"lineNumber":261,"author":{"gitId":"janelleenqi"},"content":"        } else {","lastModifiedDate":"2023-11-05"},{"lineNumber":262,"author":{"gitId":"janelleenqi"},"content":"            list.set(index, object);","lastModifiedDate":"2023-11-05"},{"lineNumber":263,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":264,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":265,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":266,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":267,"author":{"gitId":"janelleenqi"},"content":"     * Initializes a one-dimensional list for daily events.","lastModifiedDate":"2023-11-08"},{"lineNumber":268,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":269,"author":{"gitId":"janelleenqi"},"content":"     * @return A list of daily events.","lastModifiedDate":"2023-11-08"},{"lineNumber":270,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":271,"author":{"gitId":"janelleenqi"},"content":"    private static List\u003cArrayList\u003cEvent\u003e\u003e initialiseOneDList() {","lastModifiedDate":"2023-11-12"},{"lineNumber":272,"author":{"gitId":"janelleenqi"},"content":"        List\u003cArrayList\u003cEvent\u003e\u003e parentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-09"},{"lineNumber":273,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":274,"author":{"gitId":"janelleenqi"},"content":"        for (int j \u003d 0; j \u003c 7; j++) { //7 days","lastModifiedDate":"2023-11-08"},{"lineNumber":275,"author":{"gitId":"janelleenqi"},"content":"            ArrayList\u003cEvent\u003e childList \u003d new ArrayList\u003cEvent\u003e();","lastModifiedDate":"2023-11-09"},{"lineNumber":276,"author":{"gitId":"janelleenqi"},"content":"            fillAndSet(j, childList, parentList);","lastModifiedDate":"2023-11-08"},{"lineNumber":277,"author":{"gitId":"janelleenqi"},"content":"            parentList.add(childList);","lastModifiedDate":"2023-11-08"},{"lineNumber":278,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":279,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":280,"author":{"gitId":"janelleenqi"},"content":"        return parentList;","lastModifiedDate":"2023-11-08"},{"lineNumber":281,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":282,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":283,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":284,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":285,"author":{"gitId":"janelleenqi"},"content":"     * Adds an event to the daily schedule for a specific day, start time, and duration.","lastModifiedDate":"2023-11-08"},{"lineNumber":286,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":287,"author":{"gitId":"janelleenqi"},"content":"     * @param list  List of daily events.","lastModifiedDate":"2023-11-08"},{"lineNumber":288,"author":{"gitId":"janelleenqi"},"content":"     * @param event Event to be added.","lastModifiedDate":"2023-11-09"},{"lineNumber":289,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":290,"author":{"gitId":"janelleenqi"},"content":"    private static void addToWeeklyTimetableByDay(List\u003cArrayList\u003cEvent\u003e\u003e list, Event event) {","lastModifiedDate":"2023-11-12"},{"lineNumber":291,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cEvent\u003e childList \u003d list.get(event.getDayInt());","lastModifiedDate":"2023-11-09"},{"lineNumber":292,"author":{"gitId":"janelleenqi"},"content":"        childList.add(event);","lastModifiedDate":"2023-11-09"},{"lineNumber":293,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":294,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":295,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":296,"author":{"gitId":"janelleenqi"},"content":"     * Checks if there are any events in the weekly schedule for each day.","lastModifiedDate":"2023-11-08"},{"lineNumber":297,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":298,"author":{"gitId":"janelleenqi"},"content":"     * @param weeklyTimetableByDay List of daily events.","lastModifiedDate":"2023-11-08"},{"lineNumber":299,"author":{"gitId":"janelleenqi"},"content":"     * @return True if events exist for any day, false otherwise.","lastModifiedDate":"2023-11-08"},{"lineNumber":300,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":301,"author":{"gitId":"janelleenqi"},"content":"    private static boolean eventsExist(List\u003cArrayList\u003cEvent\u003e\u003e weeklyTimetableByDay) {","lastModifiedDate":"2023-11-12"},{"lineNumber":302,"author":{"gitId":"janelleenqi"},"content":"        for (ArrayList\u003cEvent\u003e currentDayEvents : weeklyTimetableByDay) {","lastModifiedDate":"2023-11-09"},{"lineNumber":303,"author":{"gitId":"janelleenqi"},"content":"            if (!currentDayEvents.isEmpty()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":304,"author":{"gitId":"janelleenqi"},"content":"                // true if at least 1 event exists in weeklyTimetable","lastModifiedDate":"2023-11-08"},{"lineNumber":305,"author":{"gitId":"janelleenqi"},"content":"                return true;","lastModifiedDate":"2023-11-08"},{"lineNumber":306,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":307,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":308,"author":{"gitId":"janelleenqi"},"content":"        return false;","lastModifiedDate":"2023-11-08"},{"lineNumber":309,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":310,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"janelleenqi":310}},{"path":"src/main/java/seedu/duke/views/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.views;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":" * Utility class for displaying messages and graphics to welcome and interact with CS and CEG students.","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":" * This class provides static methods for displaying welcome messages, logos, and handling user input.","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":" * It is designed for use in applications related to Computer Science (CS) and Computer Engineering (CEG).","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":" *","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"public class Ui {","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"    private static Thread loadingThread;","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"    private static final String DIVIDER \u003d \"___________________________________________________________\";","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"    private static final String DIVIDERWithoutPadding \u003d \"___________________________________________________________\";","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"    private final Scanner in;","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"    public Ui() {","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"     * Display a message to the command line view.","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"     * @param o The object to be displayed.","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"    public static void displayMessage(Object o) {","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(o);","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"     * Displays a welcome message to CS and CEG students.","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"     * This method prints a welcome message and a logo to the console, providing a friendly greeting","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"     * to Computer Science (CS) and Computer Engineering (CEG) students using the application.","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"    public static void displayWelcome(){","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"        String logo \u003d \"  _   _ _   _ ____  ____                 \\n\"","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"                + \" | \\\\ | | | | / ___||  _ \\\\  ___  __ _ ___ \\n\"","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"                + \" |  \\\\| | | | \\\\___ \\\\| | | |/ _ \\\\/ _` / __|\\n\"","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"                + \" | |\\\\  | |_| |___) | |_| |  __/ (_| \\\\__ \\\\\\n\"","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"                + \" |_| \\\\_|\\\\___/|____/|____/ \\\\___|\\\\__, |___/\\n\"","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"                + \"                               |___/     \";","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"Hey there CS and CEG Students! Welcome to \");","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"     * Displays a farewell message to the user.","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"     * This method prints a goodbye message to the console, indicating the end of the application or interaction.","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"     * It is typically used when the user exits or completes a session with the application.","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"    public static void displayGoodbye(){","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"Goodbye!\");","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"     * Prompts the user with a message and retrieves a command from the console.","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"     * This method displays a prompt message to the user, reads a command from the console,","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"     * and returns the entered command as a String.","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"     * @param toDisplay The message to display as a prompt before reading the user\u0027s input.","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"     * @return A String representing the command entered by the user.","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"    public String getUserCommand(String toDisplay) {","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"        out.println(DIVIDERWithoutPadding);","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"        out.print(toDisplay);","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"        return in.nextLine();","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"     * Prints one or more messages surrounded by a divider.","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"     * This method prints messages to the console, each on a new line, surrounded by a divider.","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"     * It is a utility method for displaying information or messages in a formatted way.","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"     * @param messages The messages to be printed. Each message is printed on a new line.","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"    public void printMessage(String... messages) {","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"        out.println();","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"        out.println(DIVIDER);","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"        for (String m : messages) {","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"            out.println(m);","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"        out.println(DIVIDER);","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"     * Prints an error message related to data storage issues.","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"     * This method prints an error message indicating that there is an issue with retrieving data.","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"     * It is typically used when no save file exists, or the existing save file is corrupted.","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"     * Users are instructed to continue using the application to create a new save file or overwrite","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"     * the corrupted file.","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"    public void printStorageError() {","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"        out.println();","lastModifiedDate":"2023-11-12"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"        out.println(DIVIDER);","lastModifiedDate":"2023-11-12"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"Unable to retrieve any data. Your save file may be corrupted.\\n\" +","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"ryanlohyr"},"content":"                \"Please continue using the application to create new save files or overwrite \" +","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"                \"the corrupted files!\");","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"ryanlohyr"},"content":"        out.println(\"Please check ./data again\");","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"        stopLoadingAnimation();","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":116,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":117,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":119,"author":{"gitId":"ryanlohyr"},"content":"     * Displays a loading animation in the console.","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"ryanlohyr"},"content":"     * This method creates a new thread that prints a loading animation sequence to the console.","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"ryanlohyr"},"content":"     * The animation consists of a series of characters that change to give the appearance of movement.","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"ryanlohyr"},"content":"     * The loading animation runs until the thread is interrupted.","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"ryanlohyr"},"content":"     * Note: This method assumes that the console supports carriage return (\"\\r\") for updating the loading animation.","lastModifiedDate":"2023-11-13"},{"lineNumber":124,"author":{"gitId":"ryanlohyr"},"content":"     * Example animationChars: {\"(.O_O.)\", \"(.o_o.)\", \"(.\u003c_\u003c.)\", \"(.^_^.)\"}","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"ryanlohyr"},"content":"    public static void showLoadingAnimation() {","lastModifiedDate":"2023-11-12"},{"lineNumber":129,"author":{"gitId":"ryanlohyr"},"content":"        String[] animationChars \u003d {\"(.O_O.)\",\"(.o_o.)\",\"(.\u003c_\u003c.)\",\"(.\u003e_\u003e.)\",\"(.\u003e_\u003c.)\",\"(.^_^.)\"};","lastModifiedDate":"2023-11-13"},{"lineNumber":130,"author":{"gitId":"ryanlohyr"},"content":"        loadingThread \u003d new Thread(() -\u003e {","lastModifiedDate":"2023-11-12"},{"lineNumber":131,"author":{"gitId":"ryanlohyr"},"content":"            int i \u003d 0;","lastModifiedDate":"2023-11-12"},{"lineNumber":132,"author":{"gitId":"ryanlohyr"},"content":"            while (!Thread.currentThread().isInterrupted()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":133,"author":{"gitId":"ryanlohyr"},"content":"                System.out.print(\"Loading \" + animationChars[i % 6] + \"\\r\");","lastModifiedDate":"2023-11-13"},{"lineNumber":134,"author":{"gitId":"ryanlohyr"},"content":"                i++;","lastModifiedDate":"2023-11-12"},{"lineNumber":135,"author":{"gitId":"ryanlohyr"},"content":"                try {","lastModifiedDate":"2023-11-12"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"                    Thread.sleep(600);","lastModifiedDate":"2023-11-12"},{"lineNumber":137,"author":{"gitId":"ryanlohyr"},"content":"                } catch (InterruptedException e) {","lastModifiedDate":"2023-11-12"},{"lineNumber":138,"author":{"gitId":"ryanlohyr"},"content":"                    Thread.currentThread().interrupt();","lastModifiedDate":"2023-11-12"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-11-12"},{"lineNumber":140,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":141,"author":{"gitId":"ryanlohyr"},"content":"            System.out.print(\"\\n\");","lastModifiedDate":"2023-11-12"},{"lineNumber":142,"author":{"gitId":"ryanlohyr"},"content":"        });","lastModifiedDate":"2023-11-12"},{"lineNumber":143,"author":{"gitId":"ryanlohyr"},"content":"        loadingThread.start();","lastModifiedDate":"2023-11-12"},{"lineNumber":144,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":145,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":146,"author":{"gitId":"ryanlohyr"},"content":"    //@@author ryanlohyr","lastModifiedDate":"2023-11-13"},{"lineNumber":147,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":148,"author":{"gitId":"ryanlohyr"},"content":"     * Stops the loading animation thread if it is currently running.","lastModifiedDate":"2023-11-13"},{"lineNumber":149,"author":{"gitId":"ryanlohyr"},"content":"     * This method checks if the loading animation thread is active and interrupts it if so.","lastModifiedDate":"2023-11-13"},{"lineNumber":150,"author":{"gitId":"ryanlohyr"},"content":"     * It is used to halt any ongoing loading animation gracefully.","lastModifiedDate":"2023-11-13"},{"lineNumber":151,"author":{"gitId":"ryanlohyr"},"content":"     * Note: This method assumes that the loadingThread variable is appropriately managed.","lastModifiedDate":"2023-11-13"},{"lineNumber":152,"author":{"gitId":"ryanlohyr"},"content":"     * If the loadingThread is null or not alive, no action is taken.","lastModifiedDate":"2023-11-13"},{"lineNumber":153,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":154,"author":{"gitId":"ryanlohyr"},"content":"    public static void stopLoadingAnimation() {","lastModifiedDate":"2023-11-12"},{"lineNumber":155,"author":{"gitId":"ryanlohyr"},"content":"        if (loadingThread !\u003d null \u0026\u0026 loadingThread.isAlive()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":156,"author":{"gitId":"ryanlohyr"},"content":"            loadingThread.interrupt();","lastModifiedDate":"2023-11-12"},{"lineNumber":157,"author":{"gitId":"ryanlohyr"},"content":"            try {","lastModifiedDate":"2023-11-13"},{"lineNumber":158,"author":{"gitId":"ryanlohyr"},"content":"                // Wait for the loading thread to finish","lastModifiedDate":"2023-11-13"},{"lineNumber":159,"author":{"gitId":"ryanlohyr"},"content":"                loadingThread.join();","lastModifiedDate":"2023-11-13"},{"lineNumber":160,"author":{"gitId":"ryanlohyr"},"content":"            } catch (InterruptedException e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":161,"author":{"gitId":"ryanlohyr"},"content":"                // Handle the interruption if needed","lastModifiedDate":"2023-11-13"},{"lineNumber":162,"author":{"gitId":"ryanlohyr"},"content":"                Thread.currentThread().interrupt();  // Restore interrupted status","lastModifiedDate":"2023-11-13"},{"lineNumber":163,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-13"},{"lineNumber":164,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":165,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":166,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"ryanlohyr":166}},{"path":"src/test/java/seedu/duke/ApiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rohitcube"},"content":"package seedu.duke;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.JSONArray;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.exceptions.InvalidModuleCodeException;","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.exceptions.InvalidModuleException;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.logic.Api;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"rohitcube"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"rohitcube"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.views.ModuleInfoView;","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"rohitcube"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"rohitcube"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"rohitcube"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"rohitcube"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"rohitcube"},"content":"public class ApiTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"    void testGetModuleInfo_shouldReturnTrueForCS2113() throws IOException {","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"rohitcube"},"content":"        String correctModuleInfo \u003d \"\\\"description\\\":\\\"This course introduces the necessary skills for systematic \" +","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"rohitcube"},"content":"                \"and rigorous development of software systems. It covers\";","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"rohitcube"},"content":"        String moduleCode \u003d \"CS2113\";","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"rohitcube"},"content":"        String moduleInfo \u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"rohitcube"},"content":"        moduleInfo \u003d Objects.requireNonNull(Api.getFullModuleInfo(moduleCode)).toJSONString();","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"rohitcube"},"content":"        assertNotNull(moduleInfo, \"Module info should not be null\");","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"rohitcube"},"content":"        assertTrue(moduleInfo.contains(correctModuleInfo), \"Module info should contain relevant info\");","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"rohitcube"},"content":"    public void getDescription_invalidEntry() {","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"rohitcube"},"content":"        assertThrows(InvalidModuleCodeException.class, () -\u003e Api.getDescription(\"invalid342432\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"rohitcube"},"content":"    public void getDescription_emptyEntry() {","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"rohitcube"},"content":"        assertThrows(InvalidModuleCodeException.class, () -\u003e Api.getDescription(\"  \"));","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"rohitcube"},"content":"    void testGetDescription_shouldReturnEquals() throws InvalidModuleException, InvalidModuleCodeException {","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"rohitcube"},"content":"        String correctDescription \u003d \"This course introduces the necessary skills for systematic and \" +","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"rohitcube"},"content":"                \"rigorous development of software systems. It covers requirements, design, implementation, \" +","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"rohitcube"},"content":"                \"quality assurance, and project management aspects of small-to-medium size multi-person software\" +","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"rohitcube"},"content":"                \" projects. The course uses the Object Oriented Programming paradigm. Students of this course will \" +","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"rohitcube"},"content":"                \"receive hands-on practice of tools commonly used in the industry, such as test automation tools,\" +","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"rohitcube"},"content":"                \" build automation tools, and code revisioning tools will be covered.\";","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"rohitcube"},"content":"        String moduleCode \u003d \"CS2113\";","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"rohitcube"},"content":"        String description \u003d Api.getDescription(moduleCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"rohitcube"},"content":"        assertEquals(correctDescription, description);","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"rohitcube"},"content":"    void testGetWorkload_shouldReturnCorrectValue() throws InvalidModuleCodeException {","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"rohitcube"},"content":"        // uses unchecked or unsafe operations, Note: Recompile with -Xlint:unchecked for details.","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"rohitcube"},"content":"        JSONArray workload \u003d Api.getWorkload(\"CS2113\");","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"rohitcube"},"content":"        JSONArray jsonArray \u003d new JSONArray();","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"rohitcube"},"content":"        jsonArray.add(2);","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"rohitcube"},"content":"        jsonArray.add(1);","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"rohitcube"},"content":"        jsonArray.add(0);","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"rohitcube"},"content":"        jsonArray.add(3);","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"rohitcube"},"content":"        jsonArray.add(4);","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"rohitcube"},"content":"        String jsonString1 \u003d jsonArray.toJSONString();","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"rohitcube"},"content":"        String jsonString2 \u003d workload.toJSONString();","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"rohitcube"},"content":"        assertEquals(jsonString2, jsonString1);","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"rohitcube"},"content":"    void testGetWorkload_invalidEntry() {","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"rohitcube"},"content":"        assertThrows(InvalidModuleCodeException.class, () -\u003e Api.getWorkload(\"invH3432\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"rohitcube"},"content":"    void testWrapTextEmptyInput() {","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"rohitcube"},"content":"        String text \u003d \" \";","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"rohitcube"},"content":"        System.out.println(Api.wrapText(text, 60));","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"rohitcube"},"content":"        assertTrue(Api.wrapText(text, 60).trim().isEmpty());","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"rohitcube"},"content":"    void testWrapTextNullInput() {","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"rohitcube"},"content":"        String text \u003d null;","lastModifiedDate":"2023-11-06"},{"lineNumber":85,"author":{"gitId":"rohitcube"},"content":"        System.out.println(Api.wrapText(text, 60));","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"rohitcube"},"content":"        assertTrue(Api.wrapText(text, 60).trim().isEmpty());","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"rohitcube"},"content":"    void testSearchCommand_invalidInput() {","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"rohitcube"},"content":"        assertTrue(Api.search(\"1231724738\", Api.listAllModules()).isEmpty());","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"rohitcube"},"content":"    void testListAllModules() {","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"rohitcube"},"content":"        Api.listAllModules();","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"rohitcube"},"content":"    /*","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"rohitcube"},"content":"    void testSearchModules_emptyInput_expectedEmptyJsonArray() {","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"rohitcube"},"content":"        JSONArray modulesToPrint;","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"rohitcube"},"content":"        modulesToPrint \u003d Api.search(\"     \", Api.listAllModules());","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"rohitcube"},"content":"        assertEquals(0, modulesToPrint.size(), \"The JSON array should be empty.\");","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"rohitcube"},"content":"    */","lastModifiedDate":"2023-11-08"},{"lineNumber":106,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"rohitcube"},"content":"    void testSearchModules_invalidInput_expectedEmptyJsonArray() {","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"rohitcube"},"content":"        JSONArray modulesToPrint;","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"rohitcube"},"content":"        modulesToPrint \u003d Api.search(\"bs#4%ggh\", Api.listAllModules());","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"rohitcube"},"content":"        assertEquals(0, modulesToPrint.size(), \"The JSON array should be empty.\");","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"rohitcube"},"content":"    void testSearchModules_validInput_expectedJsonArray() {","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"rohitcube"},"content":"        JSONArray modulesToPrint;","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"rohitcube"},"content":"        modulesToPrint \u003d Api.search(\"Trustworthy Machine Learning\", Api.listAllModules());","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"rohitcube"},"content":"        JSONArray expectedArray \u003d new JSONArray();","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"rohitcube"},"content":"        JSONObject expectedObject \u003d new JSONObject();","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"rohitcube"},"content":"        expectedObject.put(\"moduleCode\", \"CS5562\");","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"rohitcube"},"content":"        JSONArray semester1 \u003d new JSONArray();","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"rohitcube"},"content":"        semester1.add(1);","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"rohitcube"},"content":"        expectedObject.put(\"semesters\", semester1);","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"rohitcube"},"content":"        expectedObject.put(\"title\", \"Trustworthy Machine Learning\");","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"rohitcube"},"content":"        expectedArray.add(expectedObject);","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"rohitcube"},"content":"        String expectedOutput \u003d expectedArray.toJSONString();","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"rohitcube"},"content":"        String output \u003d modulesToPrint.toJSONString();","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"rohitcube"},"content":"        assertEquals(expectedOutput, output, \"The string should be equal\");","lastModifiedDate":"2023-10-30"},{"lineNumber":128,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"rohitcube"},"content":"    void testPrintJsonArray() {","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"rohitcube"},"content":"        JSONArray modulesToPrint \u003d Api.search(\"Machine Learning\", Api.listAllModules());","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"ryanlohyr"},"content":"        ModuleInfoView.printJsonArray(modulesToPrint);","lastModifiedDate":"2023-11-04"},{"lineNumber":134,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"rohitcube"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ryanlohyr":7,"rohitcube":131}},{"path":"src/test/java/seedu/duke/controllers/AddFeatureTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.UserCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"public class AddFeatureTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"    private Student student \u003d new Student();","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"    private UserCommand currentUserCommand \u003d new UserCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"        this.student \u003d new Student();","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"        student.setName(\"Sebastian\");","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"        student.setFirstMajor(\"CEG\");","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"SebasFok"},"content":"        student.setYear(\"Y2/S1\");","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"    @AfterEach","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"SebasFok"},"content":"    void testAddFeature_addValidModuleValidSemester_expectScheduleWithNewModule() {","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"        String userInput \u003d \"add CS1010 1\";","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"SebasFok"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"SebasFok"},"content":"        String expectedOutput \u003d \"Module Successfully Added\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"SebasFok"},"content":"                \"Sem 1:   X CS1010       \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"SebasFok"},"content":"                \"Sem 2:   \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"SebasFok"},"content":"                \"Sem 3:   \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"SebasFok"},"content":"                \"Sem 4:   \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"SebasFok"},"content":"                \"Sem 5:   \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"SebasFok"},"content":"                \"Sem 6:   \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"SebasFok"},"content":"                \"Sem 7:   \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"SebasFok"},"content":"                \"Sem 8:\";","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"SebasFok"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"SebasFok"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"SebasFok"},"content":"    void testAddFeature_addDuplicateModule_expectErrorMessage() {","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"SebasFok"},"content":"        String userInput \u003d \"add CS1010 1\";","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"SebasFok"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"SebasFok"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"SebasFok"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"SebasFok"},"content":"        //Add again","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"SebasFok"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"SebasFok"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"SebasFok"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"SebasFok"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"SebasFok"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"SebasFok"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"SebasFok"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"SebasFok"},"content":"        String expectedOutput \u003d \"Module Successfully Added\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"SebasFok"},"content":"                \"Sem 1:   X CS1010       \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"SebasFok"},"content":"                \"Sem 2:   \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"SebasFok"},"content":"                \"Sem 3:   \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"SebasFok"},"content":"                \"Sem 4:   \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"SebasFok"},"content":"                \"Sem 5:   \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"SebasFok"},"content":"                \"Sem 6:   \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"SebasFok"},"content":"                \"Sem 7:   \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"SebasFok"},"content":"                \"Sem 8:   \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"SebasFok"},"content":"                \"Module already exists in the schedule\";","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"SebasFok"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"SebasFok"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"SebasFok"},"content":"    void testAddFeature_addValidModuleInvalidSemester_expectErrorMessage() {","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"SebasFok"},"content":"        String userInput \u003d \"add CS1010 9\";","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"SebasFok"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"SebasFok"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"SebasFok"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"SebasFok"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"SebasFok"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"SebasFok"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"SebasFok"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"SebasFok"},"content":"        String expectedOutput \u003d \"Please select an integer from 1 to 8 for semester selection\";","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"SebasFok"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":121,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"SebasFok"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":125,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"SebasFok"},"content":"    void testAddFeature_addInvalidModuleValidSemester_expectErrorMessage() {","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"SebasFok"},"content":"        String userInput \u003d \"add CS101010 1\";","lastModifiedDate":"2023-11-09"},{"lineNumber":130,"author":{"gitId":"SebasFok"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":131,"author":{"gitId":"SebasFok"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":132,"author":{"gitId":"SebasFok"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":133,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":134,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"SebasFok"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"SebasFok"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":137,"author":{"gitId":"SebasFok"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":141,"author":{"gitId":"SebasFok"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-09"},{"lineNumber":142,"author":{"gitId":"SebasFok"},"content":"        String expectedOutput \u003d \"Invalid Module Name\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"SebasFok"},"content":"                \"Please select a valid module\";","lastModifiedDate":"2023-11-09"},{"lineNumber":144,"author":{"gitId":"SebasFok"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":146,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":147,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":148,"author":{"gitId":"SebasFok"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":149,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":150,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":151,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":152,"author":{"gitId":"SebasFok"},"content":"    void testAddFeature_noArguments_expectErrorMessage() {","lastModifiedDate":"2023-11-09"},{"lineNumber":153,"author":{"gitId":"SebasFok"},"content":"        String userInput \u003d \"add\";","lastModifiedDate":"2023-11-09"},{"lineNumber":154,"author":{"gitId":"SebasFok"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":155,"author":{"gitId":"SebasFok"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":156,"author":{"gitId":"SebasFok"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":157,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":159,"author":{"gitId":"SebasFok"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-09"},{"lineNumber":160,"author":{"gitId":"SebasFok"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":161,"author":{"gitId":"SebasFok"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":162,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":163,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":164,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":165,"author":{"gitId":"SebasFok"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-09"},{"lineNumber":166,"author":{"gitId":"SebasFok"},"content":"        String expectedOutput \u003d \"Please add a module using this format: add [module code] [semester]\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":167,"author":{"gitId":"SebasFok"},"content":"                \"Invalid argument for command add\";","lastModifiedDate":"2023-11-09"},{"lineNumber":168,"author":{"gitId":"SebasFok"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":169,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":170,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":171,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":172,"author":{"gitId":"SebasFok"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":173,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":174,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":175,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":176,"author":{"gitId":"SebasFok"},"content":"    void testAddFeature_unsatisfiedPrerequisites_expectErrorMessage() {","lastModifiedDate":"2023-11-09"},{"lineNumber":177,"author":{"gitId":"SebasFok"},"content":"        String userInput \u003d \"add CS2040C 1\";","lastModifiedDate":"2023-11-09"},{"lineNumber":178,"author":{"gitId":"SebasFok"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":179,"author":{"gitId":"SebasFok"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":180,"author":{"gitId":"SebasFok"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":181,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":182,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":183,"author":{"gitId":"SebasFok"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-09"},{"lineNumber":184,"author":{"gitId":"SebasFok"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":185,"author":{"gitId":"SebasFok"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":186,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":187,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":188,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":189,"author":{"gitId":"SebasFok"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-09"},{"lineNumber":190,"author":{"gitId":"SebasFok"},"content":"        String expectedOutput \u003d \"This module\u0027s prerequisites are [CS1010]\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":191,"author":{"gitId":"SebasFok"},"content":"                \"Unable to add module as prerequisites not satisfied for: CS2040C\";","lastModifiedDate":"2023-11-09"},{"lineNumber":192,"author":{"gitId":"SebasFok"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":193,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":194,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":195,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":196,"author":{"gitId":"SebasFok"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":197,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":198,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"SebasFok":198}},{"path":"src/test/java/seedu/duke/controllers/CompleteFeatureTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.UserCommand;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"public class CompleteFeatureTest {","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"    private Student student \u003d new Student();","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"    private UserCommand currentUserCommand \u003d new UserCommand();","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"    private String commandToTest \u003d \"recommend\";","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"    public void setUpStreams() throws IOException {","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"        this.student \u003d new Student();","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"        student.setName(\"Ryan Loh\");","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"        student.setFirstMajor(\"CEG\");","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"        student.setYear(\"Y3/S2\");","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e recommendedSchedule \u003d student.getSchedule().generateRecommendedSchedule(\"CEG\");","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"        student.getSchedule().addReccToSchedule(recommendedSchedule);","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"    @AfterEach","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"    //complete a module that is not there","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"    //complete a module that pre requisite is not satisfied","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"    //complete a module that pre requisite is satisfied","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"    //complete a module that pre req is not satisfied, complete the pre req, than complete the module","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"    void testCompleteFeature_completeModuleThatPrerequisiteIsSatisfied() {","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"        String userInput \u003d \"complete CS1010\";","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"Module Successfully Completed\";","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"    void testCompleteFeature_completeModuleThatPrerequisiteIsNotSatisfied() {","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"        String userInput \u003d \"complete CS2040C\";","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"Prerequisites not completed for CS2040C\\n\" +","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"                \"This module\u0027s prerequisites are [CS1010]\";","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"    void testCompleteFeature_completeModuleAndMakeSureIsSatisfied() {","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"        String userInput \u003d \"complete CS2040C\";","lastModifiedDate":"2023-11-10"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-10"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-10"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"        userInput \u003d \"complete CS1010\";","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-10"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"        userInput \u003d \"complete CS2040C\";","lastModifiedDate":"2023-11-10"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-10"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-10"},{"lineNumber":113,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-10"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-10"},{"lineNumber":115,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":116,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-10"},{"lineNumber":117,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"Prerequisites not completed for CS2040C\\n\" +","lastModifiedDate":"2023-11-10"},{"lineNumber":118,"author":{"gitId":"ryanlohyr"},"content":"                \"This module\u0027s prerequisites are [CS1010]\\n\" +","lastModifiedDate":"2023-11-10"},{"lineNumber":119,"author":{"gitId":"ryanlohyr"},"content":"                \"Module Successfully Completed\\n\" +","lastModifiedDate":"2023-11-10"},{"lineNumber":120,"author":{"gitId":"ryanlohyr"},"content":"                \"Module Successfully Completed\";","lastModifiedDate":"2023-11-10"},{"lineNumber":121,"author":{"gitId":"ryanlohyr"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-10"},{"lineNumber":122,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-10"},{"lineNumber":123,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-10"},{"lineNumber":124,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":125,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-10"},{"lineNumber":126,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":127,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":128,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":129,"author":{"gitId":"ryanlohyr"},"content":"    void testCompleteFeature_completeModuleThatPrerequisiteIsNotThere() {","lastModifiedDate":"2023-11-10"},{"lineNumber":130,"author":{"gitId":"ryanlohyr"},"content":"        String userInput \u003d \"complete IS1108\";","lastModifiedDate":"2023-11-10"},{"lineNumber":131,"author":{"gitId":"ryanlohyr"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-10"},{"lineNumber":132,"author":{"gitId":"ryanlohyr"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":133,"author":{"gitId":"ryanlohyr"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-10"},{"lineNumber":134,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":135,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-10"},{"lineNumber":137,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-10"},{"lineNumber":138,"author":{"gitId":"ryanlohyr"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-10"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-10"},{"lineNumber":140,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-10"},{"lineNumber":141,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":142,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-10"},{"lineNumber":143,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"IS1108 is not in Modules Planner. Please add the module to your schedule first!\";","lastModifiedDate":"2023-11-10"},{"lineNumber":144,"author":{"gitId":"ryanlohyr"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-10"},{"lineNumber":145,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-10"},{"lineNumber":146,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-10"},{"lineNumber":147,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":148,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-10"},{"lineNumber":149,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":150,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":151,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":152,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":153,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":154,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":155,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":156,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":157,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":158,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":159,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":160,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":161,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":162,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":163,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":164,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":165,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":166,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"ryanlohyr":166}},{"path":"src/test/java/seedu/duke/controllers/DeleteFeatureTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.Schedule;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.UserCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"public class DeleteFeatureTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"    private Student student \u003d new Student();","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"    private UserCommand currentUserCommand \u003d new UserCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"        this.student \u003d new Student();","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"SebasFok"},"content":"        student.setName(\"Sebastian\");","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"        student.setFirstMajor(\"CEG\");","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"SebasFok"},"content":"        student.setYear(\"Y2/S1\");","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule(\"CS1010 CS2040C\", new int[]{1, 1, 0, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"        student.setSchedule(schedule);","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"SebasFok"},"content":"    @AfterEach","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"SebasFok"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"SebasFok"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"    void testDeleteFeature_deleteValidModule_expectModuleDeleted() {","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"        String userInput \u003d \"delete CS2040C\";","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"SebasFok"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"SebasFok"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"SebasFok"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"SebasFok"},"content":"        String expectedOutput \u003d \"Module Successfully Deleted\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"SebasFok"},"content":"                \"Sem 1:   X CS1010       \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"SebasFok"},"content":"                \"Sem 2:   \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"SebasFok"},"content":"                \"Sem 3:   \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"SebasFok"},"content":"                \"Sem 4:   \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"SebasFok"},"content":"                \"Sem 5:   \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"SebasFok"},"content":"                \"Sem 6:   \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"SebasFok"},"content":"                \"Sem 7:   \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"SebasFok"},"content":"                \"Sem 8:\";","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"SebasFok"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"SebasFok"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"SebasFok"},"content":"    void testDeleteFeature_deleteModuleWhichIsPrerequisite_expectErrorMessage() {","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"SebasFok"},"content":"        String userInput \u003d \"delete CS1010\";","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"SebasFok"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"SebasFok"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"SebasFok"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"SebasFok"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"SebasFok"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"SebasFok"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"SebasFok"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"SebasFok"},"content":"        String expectedOutput \u003d \"Unable to delete module. This module is a mandatory prerequisite for CS2040C\";","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"SebasFok"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"SebasFok"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"SebasFok"},"content":"    void testDeleteFeature_deleteModuleNotInSchedule_expectErrorMessage() {","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"SebasFok"},"content":"        String userInput \u003d \"delete CS1231\";","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"SebasFok"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"SebasFok"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"SebasFok"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"SebasFok"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"SebasFok"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"SebasFok"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"SebasFok"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"SebasFok"},"content":"        String expectedOutput \u003d \"Module does not exist in schedule\";","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"SebasFok"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"SebasFok"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"SebasFok"},"content":"    void testDeleteFeature_deleteUnknownArgument_expectErrorMessage() {","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"SebasFok"},"content":"        String userInput \u003d \"delete faiwefioawlefiuawef\";","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"SebasFok"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"SebasFok"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":121,"author":{"gitId":"SebasFok"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"SebasFok"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-09"},{"lineNumber":125,"author":{"gitId":"SebasFok"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"SebasFok"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":130,"author":{"gitId":"SebasFok"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-09"},{"lineNumber":131,"author":{"gitId":"SebasFok"},"content":"        String expectedOutput \u003d \"Module does not exist in schedule\";","lastModifiedDate":"2023-11-09"},{"lineNumber":132,"author":{"gitId":"SebasFok"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":133,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":134,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"SebasFok"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":137,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"SebasFok"},"content":"    void testDeleteFeature_noArguments_expectErrorMessage() {","lastModifiedDate":"2023-11-09"},{"lineNumber":141,"author":{"gitId":"SebasFok"},"content":"        String userInput \u003d \"delete\";","lastModifiedDate":"2023-11-09"},{"lineNumber":142,"author":{"gitId":"SebasFok"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"SebasFok"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":144,"author":{"gitId":"SebasFok"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":146,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":147,"author":{"gitId":"SebasFok"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-09"},{"lineNumber":148,"author":{"gitId":"SebasFok"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":149,"author":{"gitId":"SebasFok"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":150,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":151,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":152,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":153,"author":{"gitId":"SebasFok"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-09"},{"lineNumber":154,"author":{"gitId":"SebasFok"},"content":"        String expectedOutput \u003d \"Please delete a module using this format: delete [module code]\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":155,"author":{"gitId":"SebasFok"},"content":"                \"Invalid argument for command delete\";","lastModifiedDate":"2023-11-09"},{"lineNumber":156,"author":{"gitId":"SebasFok"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":157,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"SebasFok"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":159,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":160,"author":{"gitId":"SebasFok"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":161,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":162,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"SebasFok":162}},{"path":"src/test/java/seedu/duke/controllers/InfoFeatureTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rohitcube"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"rohitcube"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"rohitcube"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"rohitcube"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"rohitcube"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"rohitcube"},"content":"import seedu.duke.models.schema.UserCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"rohitcube"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"rohitcube"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"rohitcube"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"rohitcube"},"content":"public class InfoFeatureTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"rohitcube"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"rohitcube"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"rohitcube"},"content":"    private Student student \u003d new Student();","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"rohitcube"},"content":"    private UserCommand currentUserCommand \u003d new UserCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"rohitcube"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"rohitcube"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"rohitcube"},"content":"        this.student \u003d new Student();","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"rohitcube"},"content":"        student.setName(\"Rohit\");","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"rohitcube"},"content":"        student.setFirstMajor(\"CEG\");","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"rohitcube"},"content":"        student.setYear(\"Y2/S1\");","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"rohitcube"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"rohitcube"},"content":"    @AfterEach","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"rohitcube"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"rohitcube"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"rohitcube"},"content":"    public void testInfoFeature_validInput_expectAssertEquals() {","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"rohitcube"},"content":"        String userInput \u003d \"info description CS2113\";","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"rohitcube"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"rohitcube"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"rohitcube"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"rohitcube"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"rohitcube"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"rohitcube"},"content":"        String expectedOutput \u003d \"This course introduces the necessary skills for systematic and \" +","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"rohitcube"},"content":"                \"rigorous development of software\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"rohitcube"},"content":"                \" systems. It covers requirements, design, implementation, \" +","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"rohitcube"},"content":"                \"quality assurance, and project management\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"rohitcube"},"content":"                \" aspects of small-to-medium size multi-person software projects. The course uses the Object\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"rohitcube"},"content":"                \" Oriented Programming paradigm. Students of this course will receive hands-on practice of tools\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"rohitcube"},"content":"                \" commonly used in the industry, such as test automation tools, build automation tools, and code\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"rohitcube"},"content":"                \" revisioning tools will be covered.\";","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"rohitcube"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"rohitcube"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"rohitcube"},"content":"    public void testInfoFeature_noModuleCode_expectErrorMessage() {","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"rohitcube"},"content":"        String userInput \u003d \"info description\";","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"rohitcube"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"rohitcube"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"rohitcube"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"rohitcube"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"rohitcube"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"rohitcube"},"content":"        String expectedOutput \u003d \"Invalid Module Code: Only alphabets and digits are allowed in module codes!\";","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"rohitcube"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"rohitcube"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"rohitcube"},"content":"    public void testInfoFeature_invalidModuleCode_expectErrorMessage() {","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"rohitcube"},"content":"        String userInput \u003d \"info description CS2111113\";","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"rohitcube"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"rohitcube"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"rohitcube"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"rohitcube"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"rohitcube"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"rohitcube"},"content":"        String expectedOutput \u003d \"Invalid Module Name\";","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"rohitcube"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"rohitcube"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"rohitcube"},"content":"    public void testInfoFeature_missingDescriptionCommand_expectErrorMessage() {","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"rohitcube"},"content":"        String userInput \u003d \"info\";","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"rohitcube"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"rohitcube"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"rohitcube"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"rohitcube"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"rohitcube"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"rohitcube"},"content":"        String expectedOutput \u003d \"Empty input detected. Please enter a valid input after the \" +","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"rohitcube"},"content":"                \"info command. (E.g description)\\n\" + \"Invalid argument for command info\";","lastModifiedDate":"2023-11-14"},{"lineNumber":110,"author":{"gitId":"rohitcube"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"rohitcube"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"rohitcube"},"content":"    public void testInfoFeature_invalidSubcommand_expectErrorMessage() {","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"rohitcube"},"content":"        String userInput \u003d \"info workload info\";","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"rohitcube"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"rohitcube"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":121,"author":{"gitId":"rohitcube"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"rohitcube"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"rohitcube"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":125,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"rohitcube"},"content":"        String expectedOutput \u003d \"Please enter a valid command after the info command. (E.g description)\\n\" +","lastModifiedDate":"2023-11-14"},{"lineNumber":128,"author":{"gitId":"rohitcube"},"content":"                \"Invalid argument for command info\";","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"rohitcube"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":130,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":131,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":132,"author":{"gitId":"rohitcube"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":133,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":134,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"rohitcube"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"rohitcube":135}},{"path":"src/test/java/seedu/duke/controllers/LeftFeatureTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.UserCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"public class LeftFeatureTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"    private Student student \u003d new Student();","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"    private UserCommand currentUserCommand \u003d new UserCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"        this.student \u003d new Student();","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"        student.setName(\"Janelle\");","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"        student.setFirstMajor(\"CEG\");","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"        student.setYear(\"Y2/S1\");","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"    @AfterEach","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"    void testLeftFeature_noModulesCompleted_expectMajorModuleCodes() {","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"        String userInput \u003d \"left\";","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"Required Modules Left: \\n\" +","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"                \"1. CG1111A     2. MA1511      3. MA1512      4. CS1010      5. GESS1000    \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"                \"6. GEC1000     7. GEN2000     8. ES2631      9. GEA1000     10. DTK1234    \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"                \"11. EG1311     12. IE2141     13. EE2211     14. EG2501     15. CDE2000    \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"                \"16. PF1101     17. CG4002     18. MA1508E    19. EG2401A    20. CP3880     \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"                \"21. CG2111A    22. CS1231     23. CG2023     24. CG2027     25. CG2028     \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"                \"26. CG2271     27. ST2334     28. CS2040C    29. CS2113     30. EE2026     \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"                \"31. EE4204\";","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"    void testLeftFeature_completedSomeNoPrereqModules_expectPrintLeft() {","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"        String[] completeUserInputs \u003d {\"add cs1010 1\", \"add dtk1234 2\", \"complete cs1010\", \"complete\"};","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"        int currentIndex \u003d 0;","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"        currentUserCommand \u003d new UserCommand(completeUserInputs[currentIndex]);","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"        while (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"            currentIndex ++;","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"            currentUserCommand \u003d new UserCommand(completeUserInputs[currentIndex]);","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"        String userInput \u003d \"left\";","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"        // To exclude printedOutput from add and complete features","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"        int indexLeftOutput \u003d printedOutput.indexOf(\"Modules Left: \");","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"        if (indexLeftOutput !\u003d -1) {","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"            // Extract the text starting from the found index","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"            printedOutput \u003d printedOutput.substring(indexLeftOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"        String expectedOutput \u003d \"Modules Left: \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"                \"1. CG1111A     2. MA1511      3. MA1512      4. GESS1000    5. GEC1000     \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"                \"6. GEN2000     7. ES2631      8. GEA1000     9. DTK1234     10. EG1311     \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"                \"11. IE2141     12. EE2211     13. EG2501     14. CDE2000    15. PF1101     \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"                \"16. CG4002     17. MA1508E    18. EG2401A    19. CP3880     20. CG2111A    \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"                \"21. CS1231     22. CG2023     23. CG2027     24. CG2028     25. CG2271     \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"                \"26. ST2334     27. CS2040C    28. CS2113     29. EE2026     30. EE4204\";","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"ryanlohyr":1,"janelleenqi":110}},{"path":"src/test/java/seedu/duke/controllers/ModuleMethodsControllerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.exceptions.FailPrereqException;","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Schedule;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"import java.util.List;","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.Ui.displayMessage;","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.controllers.ModuleMethodsController.completeModule;","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.controllers.ModuleMethodsController.showModulesLeft;","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.displaySuccessfulAddMessage;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.showPrereq;","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"class ModuleMethodsControllerTest {","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    private Student student \u003d new Student();","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"        this.student \u003d new Student();","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"        student.setName(\"Ryan Loh\");","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"        student.setFirstMajor(\"CEG\");","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"        student.setYear(\"Y3/S2\");","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"    @AfterEach","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"    void completeModule_prereqNotCompleted() {","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"SebasFok"},"content":"        ModuleMethodsController.executeAddModuleCommand(\"CS1010\",1,student);","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"SebasFok"},"content":"        ModuleMethodsController.executeAddModuleCommand(\"CS2040C\",2,student);","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"SebasFok"},"content":"        ModuleMethodsController.executeAddModuleCommand(\"CS2113T\",3,student);","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"        completeModule(student,\"CS2113T\");","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"Prerequisites not completed for CS2113T\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"                \"This module\u0027s prerequisites are [CS2040C]\";","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"        //We need this extra logic as addModule prints text as well","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"        int index \u003d printedOutput.indexOf(\"Prerequisites not completed for\");","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"        String targetOutputText \u003d \"\";","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"        if (index !\u003d -1) {","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"            // Extract the text starting from the found index","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"            targetOutputText \u003d printedOutput.substring(index);","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"        } else {","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"            targetOutputText \u003d \"invalid\";","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput,targetOutputText);","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"    void completeModule_prereqSatisfied() {","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"SebasFok"},"content":"        ModuleMethodsController.executeAddModuleCommand(\"CS1010\",1,student);","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"SebasFok"},"content":"        ModuleMethodsController.executeAddModuleCommand(\"CS2040C\",2,student);","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"SebasFok"},"content":"        ModuleMethodsController.executeAddModuleCommand(\"CS2113T\",3,student);","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"        completeModule(student,\"CS1010\");","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"Module Successfully Completed\";","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"        //We need this extra logic as addModule prints text as well","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"        int index \u003d printedOutput.indexOf(\"Module Successfully Completed\");","lastModifiedDate":"2023-11-08"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"        String printedText \u003d \"\";","lastModifiedDate":"2023-11-08"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"        if (index !\u003d -1) {","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"            // Extract the text starting from the found index","lastModifiedDate":"2023-11-08"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"            printedText \u003d printedOutput.substring(index);","lastModifiedDate":"2023-11-08"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"        } else {","lastModifiedDate":"2023-11-08"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"            printedText \u003d \"invalid\";","lastModifiedDate":"2023-11-08"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput,printedText);","lastModifiedDate":"2023-11-08"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":111,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":113,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"    void showModulesLeftTest_arrayListModules_expectModulesLeft() {","lastModifiedDate":"2023-11-08"},{"lineNumber":116,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"Required Modules Left: \\n\" +","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"                \"1. GEA1000     2. MA1521      3. IS1108      4. MA1522      5. CS1231S     \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"                \"6. ES2660      7. CS2101      8. CS1101S     9. GESS1000    10. GEN2000\";","lastModifiedDate":"2023-11-08"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"        showModulesLeft(new ArrayList\u003cString\u003e(List.of(\"GEA1000\", \"MA1521\", \"IS1108\", \"MA1522\", \"CS1231S\", \"ES2660\",","lastModifiedDate":"2023-11-08"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"                \"CS2101\", \"CS1101S\", \"GESS1000\", \"GEN2000\")));","lastModifiedDate":"2023-11-08"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":124,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":126,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":128,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":129,"author":{"gitId":"janelleenqi"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":130,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":131,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":132,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":133,"author":{"gitId":"janelleenqi"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":134,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":135,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":137,"author":{"gitId":"ryanlohyr"},"content":"    void testPrereq_addValidModuleToStudent() throws InvalidObjectException {","lastModifiedDate":"2023-11-08"},{"lineNumber":138,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"        String moduleCode \u003d \"EG1311\";","lastModifiedDate":"2023-11-08"},{"lineNumber":140,"author":{"gitId":"ryanlohyr"},"content":"        int targetSem \u003d 1;","lastModifiedDate":"2023-11-08"},{"lineNumber":141,"author":{"gitId":"ryanlohyr"},"content":"        boolean doesModuleExist \u003d false;","lastModifiedDate":"2023-11-08"},{"lineNumber":142,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-08"},{"lineNumber":143,"author":{"gitId":"SebasFok"},"content":"            student.addModuleToSchedule(moduleCode, targetSem);","lastModifiedDate":"2023-11-13"},{"lineNumber":144,"author":{"gitId":"ryanlohyr"},"content":"            displaySuccessfulAddMessage();","lastModifiedDate":"2023-11-08"},{"lineNumber":145,"author":{"gitId":"ryanlohyr"},"content":"            student.printSchedule();","lastModifiedDate":"2023-11-08"},{"lineNumber":146,"author":{"gitId":"ryanlohyr"},"content":"            Schedule currentSchedule \u003d student.getSchedule();","lastModifiedDate":"2023-11-08"},{"lineNumber":147,"author":{"gitId":"ryanlohyr"},"content":"            doesModuleExist \u003d currentSchedule.getModulesPlanned().existsByCode(moduleCode);","lastModifiedDate":"2023-11-08"},{"lineNumber":148,"author":{"gitId":"ryanlohyr"},"content":"        } catch (InvalidObjectException | IllegalArgumentException e) {","lastModifiedDate":"2023-11-08"},{"lineNumber":149,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(e.getMessage());","lastModifiedDate":"2023-11-08"},{"lineNumber":150,"author":{"gitId":"ryanlohyr"},"content":"        } catch (FailPrereqException f) {","lastModifiedDate":"2023-11-08"},{"lineNumber":151,"author":{"gitId":"ryanlohyr"},"content":"            showPrereq(moduleCode,student.getMajor());","lastModifiedDate":"2023-11-08"},{"lineNumber":152,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(f.getMessage());","lastModifiedDate":"2023-11-08"},{"lineNumber":153,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":154,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":155,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"Module Successfully Added\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":156,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 1:   X EG1311       \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":157,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 2:   \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":158,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 3:   \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":159,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 4:   \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":160,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 5:   \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":161,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 6:   \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":162,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 7:   \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":163,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 8:\";","lastModifiedDate":"2023-11-08"},{"lineNumber":164,"author":{"gitId":"ryanlohyr"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":165,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":166,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":167,"author":{"gitId":"ryanlohyr"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":168,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":169,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":170,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":171,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":172,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":173,"author":{"gitId":"ryanlohyr"},"content":"        assertTrue(doesModuleExist);","lastModifiedDate":"2023-11-08"},{"lineNumber":174,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":175,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":176,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":177,"author":{"gitId":"ryanlohyr"},"content":"    void testPrereq_addInValidModuleToStudent() throws InvalidObjectException {","lastModifiedDate":"2023-11-08"},{"lineNumber":178,"author":{"gitId":"ryanlohyr"},"content":"        String moduleCode \u003d \"eEG1311\";","lastModifiedDate":"2023-11-08"},{"lineNumber":179,"author":{"gitId":"ryanlohyr"},"content":"        int targetSem \u003d 1;","lastModifiedDate":"2023-11-08"},{"lineNumber":180,"author":{"gitId":"ryanlohyr"},"content":"        boolean doesModuleExist \u003d false;","lastModifiedDate":"2023-11-08"},{"lineNumber":181,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-08"},{"lineNumber":182,"author":{"gitId":"SebasFok"},"content":"            student.addModuleToSchedule(moduleCode, targetSem);","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"ryanlohyr"},"content":"            displaySuccessfulAddMessage();","lastModifiedDate":"2023-11-08"},{"lineNumber":184,"author":{"gitId":"ryanlohyr"},"content":"            student.printSchedule();","lastModifiedDate":"2023-11-08"},{"lineNumber":185,"author":{"gitId":"ryanlohyr"},"content":"            Schedule currentSchedule \u003d student.getSchedule();","lastModifiedDate":"2023-11-08"},{"lineNumber":186,"author":{"gitId":"ryanlohyr"},"content":"            doesModuleExist \u003d currentSchedule.getModulesPlanned().existsByCode(moduleCode);","lastModifiedDate":"2023-11-08"},{"lineNumber":187,"author":{"gitId":"ryanlohyr"},"content":"        } catch (InvalidObjectException | IllegalArgumentException e) {","lastModifiedDate":"2023-11-08"},{"lineNumber":188,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(e.getMessage());","lastModifiedDate":"2023-11-08"},{"lineNumber":189,"author":{"gitId":"ryanlohyr"},"content":"        } catch (FailPrereqException f) {","lastModifiedDate":"2023-11-08"},{"lineNumber":190,"author":{"gitId":"ryanlohyr"},"content":"            showPrereq(moduleCode,student.getMajor());","lastModifiedDate":"2023-11-08"},{"lineNumber":191,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(f.getMessage());","lastModifiedDate":"2023-11-08"},{"lineNumber":192,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":193,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":194,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"Invalid Module Name\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":195,"author":{"gitId":"ryanlohyr"},"content":"                \"Please select a valid module\";","lastModifiedDate":"2023-11-08"},{"lineNumber":196,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":197,"author":{"gitId":"ryanlohyr"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":198,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":199,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":200,"author":{"gitId":"ryanlohyr"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":201,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":202,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":203,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":204,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(printedOutput, expectedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":205,"author":{"gitId":"ryanlohyr"},"content":"        assertFalse(doesModuleExist);","lastModifiedDate":"2023-11-08"},{"lineNumber":206,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":207,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":208,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":209,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":210,"author":{"gitId":"ryanlohyr"},"content":"    void testPrereq_addInvalidModuleToStudent() throws InvalidObjectException {","lastModifiedDate":"2023-11-08"},{"lineNumber":211,"author":{"gitId":"ryanlohyr"},"content":"        String moduleCode \u003d \"CS2113\";","lastModifiedDate":"2023-11-08"},{"lineNumber":212,"author":{"gitId":"ryanlohyr"},"content":"        int targetSem \u003d 1;","lastModifiedDate":"2023-11-08"},{"lineNumber":213,"author":{"gitId":"ryanlohyr"},"content":"        boolean doesModuleExist \u003d false;","lastModifiedDate":"2023-11-08"},{"lineNumber":214,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-08"},{"lineNumber":215,"author":{"gitId":"SebasFok"},"content":"            student.addModuleToSchedule(moduleCode, targetSem);","lastModifiedDate":"2023-11-13"},{"lineNumber":216,"author":{"gitId":"ryanlohyr"},"content":"            displaySuccessfulAddMessage();","lastModifiedDate":"2023-11-08"},{"lineNumber":217,"author":{"gitId":"ryanlohyr"},"content":"            student.printSchedule();","lastModifiedDate":"2023-11-08"},{"lineNumber":218,"author":{"gitId":"ryanlohyr"},"content":"            Schedule currentSchedule \u003d student.getSchedule();","lastModifiedDate":"2023-11-08"},{"lineNumber":219,"author":{"gitId":"ryanlohyr"},"content":"            doesModuleExist \u003d currentSchedule.getModulesPlanned().existsByCode(moduleCode);","lastModifiedDate":"2023-11-08"},{"lineNumber":220,"author":{"gitId":"ryanlohyr"},"content":"        } catch (InvalidObjectException | IllegalArgumentException e) {","lastModifiedDate":"2023-11-08"},{"lineNumber":221,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(e.getMessage());","lastModifiedDate":"2023-11-08"},{"lineNumber":222,"author":{"gitId":"ryanlohyr"},"content":"        } catch (FailPrereqException f) {","lastModifiedDate":"2023-11-08"},{"lineNumber":223,"author":{"gitId":"ryanlohyr"},"content":"            showPrereq(moduleCode,student.getMajor());","lastModifiedDate":"2023-11-08"},{"lineNumber":224,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(f.getMessage());","lastModifiedDate":"2023-11-08"},{"lineNumber":225,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":226,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":227,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"This module\u0027s prerequisites are [CS2040C]\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":228,"author":{"gitId":"ryanlohyr"},"content":"                \"Unable to add module as prerequisites not satisfied for: CS2113\";","lastModifiedDate":"2023-11-08"},{"lineNumber":229,"author":{"gitId":"ryanlohyr"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":230,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":231,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":232,"author":{"gitId":"ryanlohyr"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":233,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":234,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":235,"author":{"gitId":"ryanlohyr"},"content":"        assertFalse(doesModuleExist);","lastModifiedDate":"2023-11-08"},{"lineNumber":236,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":237,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":238,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":239,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":240,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":241,"author":{"gitId":"janelleenqi"},"content":"    void addModuleTest() {","lastModifiedDate":"2023-11-08"},{"lineNumber":242,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":243,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":244,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":245,"author":{"gitId":"janelleenqi"},"content":"    void deleteModuleTest() {","lastModifiedDate":"2023-11-08"},{"lineNumber":246,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":247,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":248,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":249,"author":{"gitId":"janelleenqi"},"content":"    void getRequiredModulesForStudentTest() {","lastModifiedDate":"2023-11-08"},{"lineNumber":250,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":251,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"SebasFok":9,"ryanlohyr":206,"janelleenqi":36}},{"path":"src/test/java/seedu/duke/controllers/PaceFeatureTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.UserCommand;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"public class PaceFeatureTest {","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"    private Student student \u003d new Student();","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"    private UserCommand currentUserCommand \u003d new UserCommand();","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"        this.student \u003d new Student();","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"        student.setName(\"Ryan Loh\");","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"        student.setFirstMajor(\"CEG\");","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"        student.setYear(\"Y1/S2\");","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"    @AfterEach","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"    void computePaceInvalidArgument() {","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"        String userInput \u003d \"pace year2 sem1\";","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"Needs to be in format of Y2/S1\";","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput,printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"    void computePaceWithoutArgument() {","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"        String userInput \u003d \"pace\";","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"You have 160MCs for 6 semesters. Recommended Pace: 27MCs per sem until graduation\";","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput,printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"    void computePaceInvalidSemester() {","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"        String userInput \u003d \"pace y2/s10\";","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(\"Invalid Semester\", printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"    void computePaceInvalidYear() {","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"        String userInput \u003d \"pace y0/s1\";","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(\"Invalid Year\", printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"    void computePaceValidYear() {","lastModifiedDate":"2023-11-08"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"        String userInput \u003d \"pace y3/s2\";","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"        String line \u003d \"You have 160MCs for 2 semesters. Recommended Pace: 80MCs per sem until graduation\";","lastModifiedDate":"2023-11-08"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-08"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(printedOutput, line);","lastModifiedDate":"2023-11-08"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"ryanlohyr":109}},{"path":"src/test/java/seedu/duke/controllers/PrereqFeatureTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.UserCommand;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"public class PrereqFeatureTest {","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"    private Student student \u003d new Student();","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"    private UserCommand currentUserCommand \u003d new UserCommand();","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"    private String commandToTest \u003d \"prereq\";","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"        this.student \u003d new Student();","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"        student.setName(\"Ryan Loh\");","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"        student.setFirstMajor(\"CEG\");","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"        student.setYear(\"Y3/S2\");","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"    @AfterEach","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"    void determinePrereq_invalidModuleCode() {","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"        String argument \u003d \" cs134\";","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"        currentUserCommand \u003d new UserCommand(commandToTest + argument);","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"        String expectedResponse \u003d \"Invalid Module Name\";","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedResponse, printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"    void determinePrereq_emptyArgument() {","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"        currentUserCommand \u003d new UserCommand(commandToTest);","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"        String expectedResponse \u003d \"Invalid argument for command prereq\";","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedResponse, printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"    void determinePrereq_illegalModuleCode() {","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"        String argument \u003d \" \\\\cs134```\";","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"        currentUserCommand \u003d new UserCommand(commandToTest + argument);","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"        String expectedResponse \u003d \"Invalid Module Code: Only alphabets and digits are allowed in module codes!\";","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedResponse, printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"    void determinePrereq_validModuleCodeWithNoPreReq() {","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"        String argument \u003d \" GEN2061\";","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"        currentUserCommand \u003d new UserCommand(commandToTest + argument);","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"        String expectedResponse \u003d \"Module GEN2061 has no prerequisites.\";","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(printedOutput, expectedResponse);","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"    void determinePrereq_validModuleCodeWithPreReq() {","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"        String argument \u003d \" EE2211\";","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"        currentUserCommand \u003d new UserCommand(commandToTest + argument);","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"        String expectedResponse \u003d \"1. CS1010      2. MA1511      3. MA1508E\";","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(printedOutput, expectedResponse);","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"ryanlohyr":98}},{"path":"src/test/java/seedu/duke/controllers/RecommendedScheduleFeatureTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.UserCommand;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"public class RecommendedScheduleFeatureTest {","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"    private Student student \u003d new Student();","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"    private UserCommand currentUserCommand \u003d new UserCommand();","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"    private String commandToTest \u003d \"recommend\";","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"        this.student \u003d new Student();","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"        student.setName(\"Ryan Loh\");","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"        student.setFirstMajor(\"CEG\");","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"        student.setYear(\"Y3/S2\");","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"    @AfterEach","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"    void testRecommend_generateCEGRecommendedSchedule() throws IOException {","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e recommendedSchedule \u003d student.getSchedule().generateRecommendedSchedule(\"CEG\");","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(recommendedSchedule);","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"[GEA1000, MA1511, MA1512, DTK1234, GESS1000, CS1231, CS1010, GEN2000, EG2501,\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"                \" EG1311, GEC1000, PF1101, CDE2000, IE2141, CG1111A, EG2401A, ES2631, ST2334, MA1508E, CG2023,\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"                \" CG2111A, CS2040C, CG2027, EE2026, EE4204, EE2211, CG2271, CS2113, CG2028, CP3880, CG4002]\";","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"    void testRecommend_addCEGRecommendedScheduleToStudent() throws IOException {","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e recommendedSchedule \u003d student.getSchedule().generateRecommendedSchedule(\"CEG\");","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"        student.getSchedule().addReccToSchedule(recommendedSchedule);","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"        student.getSchedule().printMainModuleList();","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"Sem 1:   X GESS1000     X DTK1234      \" +","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"                \"X MA1512       X MA1511       X GEA1000      \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 2:   X EG1311       X EG2501       X GEN2000      X CS1010       X CS1231       \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 3:   X CG1111A      X IE2141       X CDE2000      X PF1101       X GEC1000      \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 4:   X CG2023       X MA1508E      X ST2334       X ES2631       X EG2401A      \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 5:   X EE4204       X EE2026       X CG2027       X CS2040C      X CG2111A      \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 6:   X CG2028       X CS2113       X CG2271       X EE2211       \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 7:   X CG4002       X CP3880       \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 8:\";","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"    void testRecommend_generateCSRecommendedSchedule() throws IOException {","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e recommendedSchedule \u003d student.getSchedule().generateRecommendedSchedule(\"CS\");","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(recommendedSchedule);","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"[GEA1000, MA1521, IS1108, MA1522, CS1231S, ES2660, CS2101, \" +","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"                \"CS1101S, GESS1000, GEN2000,\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"                \" GEC1000, ST2334, CS2030, CS2040S, CS2100, CS2103T, CS2109S, CS3230, CS2106, CP3880]\";","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"    void testRecommend_addCSRecommendedScheduleToStudent() throws IOException {","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e recommendedSchedule \u003d student.getSchedule().generateRecommendedSchedule(\"CS\");","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"        student.getSchedule().addReccToSchedule(recommendedSchedule);","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"        student.getSchedule().printMainModuleList();","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"Sem 1:   X CS1231S      X MA1522       X IS1108       X MA1521       \" +","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"                \"X GEA1000      \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 2:   X GEN2000      X GESS1000     X CS1101S      X CS2101       X ES2660       \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 3:   X CS2100       X CS2040S      X CS2030       X ST2334       X GEC1000      \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 4:   X CS2106       X CS3230       X CS2109S      X CS2103T      \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 5:   X CP3880       \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 6:   \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 7:   \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 8:\";","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":111,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":113,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":115,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"ryanlohyr":115}},{"path":"src/test/java/seedu/duke/controllers/RequiredFeatureTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.UserCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.InvalidTimetableUserCommandException;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"public class RequiredFeatureTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"    private Student student \u003d new Student();","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"    private UserCommand currentUserCommand \u003d new UserCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"        this.student \u003d new Student();","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"        student.setName(\"Janelle\");","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"        student.setYear(\"Y2/S1\");","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"    @AfterEach","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"    void testRequiredFeature_ceg_expectRequiredForCEG() throws InvalidTimetableUserCommandException {","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"        student.setFirstMajor(\"CEG\");","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"        String userInput \u003d \"required\";","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"        String expectedOutput \u003d \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"                \"║   Modular Requirements for CEG                    Units  ║\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"                \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"                \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"                \"│   Common Curriculum Requirements                  60     │\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"                \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"                \"    GES1000 (Singapore Studies)                     4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"                \"    GEC1000 (Cultures and Connections)              4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"                \"    GEN2000 (Communities and Engagement)            4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"                \"    ES2631 Critique \u0026 Communication of Thinking\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"                \"    \u0026 Design (Critique \u0026 Expression)                4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"                \"    CS1010 Programming Methodology (Digital \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"                \"    Literacy)                                       4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"                \"    GEA1000 Quantitative Reasoning with Data (Data \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"                \"    Literacy)                                       4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"                \"    DTK1234 Design Thinking (Design Thinking)       4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"                \"    EG1311 Design and Make (Maker Space)            4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"                \"    IE2141 Systems Thinking and Dynamics (Systems \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"                \"    Thinking)                                       4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"                \"    EE2211 Introduction to Machine Learning \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"                \"    (Artificial Intelligence)                       4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"                \"    CDE2501 Liveable Cities (Sustainable Futures)   4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"                \"    CDE2000 (Creating Narratives)                   4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"                \"    PF1101 Fundamentals of Project Management \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"                \"    (Project Management)                            4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"                \"    CG4002 Computer Engineering Capstone Project 1 \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"                \"    (Integrated Project)                            8\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"                \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"                \"│   Programme Requirements                          60     │\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"                \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"                \" ~~ Engineering Core                                20  ~~\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"                \"    MA1511 Engineering Calculus                     2\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"                \"    MA1512 Differential Equations for Engineering   2\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"                \"    MA1508E Linear Algebra for Engineering          4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"                \"    EG2401A Engineering Professionalism             2\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"                \"    CP3880 Advanced Technology Attachment Programme 12\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"                \" ~~ CEG Major                                       40  ~~\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"                \"    CG1111A Engineering Principles and Practice I   4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"                \"    CG2111A Engineering Principles and Practice II  4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"                \"    CS1231 Discrete Structures                      4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"                \"    CG2023 Signals \u0026 Systems                        4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"                \"    CG2027 Transistor-level Digital Circuit         2\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"                \"    CG2028 Computer Organization                    2\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"                \"    CG2271 Real-time Operating System               4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"                \"    CS2040C Data Structures and Algorithms          4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"                \"    CS2113 Software Engineering \u0026 Object-Oriented \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"                \"    Programming                                     4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"                \"    EE2026 Digital Design                           4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"                \"    EE4204 Computer Networks                        4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"                \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"                \"│   Unrestricted Electives                          40     │\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"                \"+----------------------------------------------------------+\";","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"    void testRequiredFeature_cs_expectRequiredForCS() {","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"        student.setFirstMajor(\"CS\");","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"        String userInput \u003d \"required\";","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"janelleenqi"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"janelleenqi"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"janelleenqi"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":130,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":131,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":132,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":133,"author":{"gitId":"janelleenqi"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-09"},{"lineNumber":134,"author":{"gitId":"janelleenqi"},"content":"        String expectedOutput \u003d \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"janelleenqi"},"content":"                \"║   Modular Requirements for CS                     Units  ║\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"janelleenqi"},"content":"                \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":137,"author":{"gitId":"janelleenqi"},"content":"                \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"janelleenqi"},"content":"                \"│   Common Curriculum Requirements                  40     │\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"janelleenqi"},"content":"                \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"janelleenqi"},"content":"                \" ~~ University Requirements: 6 University Pillars   24  ~~\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":141,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":142,"author":{"gitId":"janelleenqi"},"content":"                \"    CS1101S Programming Methodology (Digital \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"janelleenqi"},"content":"                \"    Literacy)                                       4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":144,"author":{"gitId":"janelleenqi"},"content":"                \"    ES2660 Communicating in the Information Age \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"                \"    (Critique and Expression)                       4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":146,"author":{"gitId":"janelleenqi"},"content":"                \"    GEC1% (Cultures and Connections)                4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"                \"    GEA1000 / BT1101 / ST1131 / DSA1101 (Data \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":148,"author":{"gitId":"janelleenqi"},"content":"                \"    Literacy)                                       4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"                \"    GES1% (Singapore Studies)                       4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":150,"author":{"gitId":"janelleenqi"},"content":"                \"    GEN2% (Communities and Engagement)              4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":152,"author":{"gitId":"janelleenqi"},"content":"                \" ~~ Computing Ethics                                4  ~~\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":153,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":154,"author":{"gitId":"janelleenqi"},"content":"                \"    IS1108 Digital Ethics and Data Privacy          4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":155,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":156,"author":{"gitId":"janelleenqi"},"content":"                \" ~~   Inter \u0026 Cross-Disciplinary Education          12 ~~\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":157,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"janelleenqi"},"content":"                \"    Interdisciplinary (ID) Courses (at least 2)\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":159,"author":{"gitId":"janelleenqi"},"content":"                \"    Cross-disciplinary (CD) Courses (no more than 1)\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":160,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":161,"author":{"gitId":"janelleenqi"},"content":"                \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":162,"author":{"gitId":"janelleenqi"},"content":"                \"│   Programme Requirements                          80     │\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":163,"author":{"gitId":"janelleenqi"},"content":"                \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":164,"author":{"gitId":"janelleenqi"},"content":"                \" ~~ Computer Science Foundation                     36  ~~\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":165,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":166,"author":{"gitId":"janelleenqi"},"content":"                \"    CS1231S Discrete Structures                     4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":167,"author":{"gitId":"janelleenqi"},"content":"                \"    CS2030S Programming Methodology II              4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":168,"author":{"gitId":"janelleenqi"},"content":"                \"    CS2040S Data Structures and Algorithms          4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":169,"author":{"gitId":"janelleenqi"},"content":"                \"    CS2100 Computer Organisation                    4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":170,"author":{"gitId":"janelleenqi"},"content":"                \"    CS2101 Effective Communication for Computing \\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":171,"author":{"gitId":"janelleenqi"},"content":"                \"    Professionals                                   4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":172,"author":{"gitId":"janelleenqi"},"content":"                \"    CS2103T Software Engineering                    4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":173,"author":{"gitId":"janelleenqi"},"content":"                \"    CS2106 Introduction to Operating Systems        4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":174,"author":{"gitId":"janelleenqi"},"content":"                \"    CS2109S Introduction to AI and Machine Learning 4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":175,"author":{"gitId":"janelleenqi"},"content":"                \"    CS3230 Design and Analysis of Algorithms        4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":176,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":177,"author":{"gitId":"janelleenqi"},"content":"                \" ~~ Computer Science Breadth and Depth              32  ~~\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":178,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":179,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":180,"author":{"gitId":"janelleenqi"},"content":"                \" ~~ Mathematics and Sciences                        12  ~~\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":181,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":182,"author":{"gitId":"janelleenqi"},"content":"                \"    MA1521 Calculus for Computing                   4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":183,"author":{"gitId":"janelleenqi"},"content":"                \"    MA1522 Linear Algebra for Computing             4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":184,"author":{"gitId":"janelleenqi"},"content":"                \"    ST2334 Probability and Statistics               4\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":185,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":186,"author":{"gitId":"janelleenqi"},"content":"                \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":187,"author":{"gitId":"janelleenqi"},"content":"                \"│   Unrestricted Electives                          40     │\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":188,"author":{"gitId":"janelleenqi"},"content":"                \"+----------------------------------------------------------+\";","lastModifiedDate":"2023-11-09"},{"lineNumber":189,"author":{"gitId":"janelleenqi"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":190,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":191,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":192,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":193,"author":{"gitId":"janelleenqi"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":194,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":195,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"janelleenqi":195}},{"path":"src/test/java/seedu/duke/controllers/ScheduleFeatureTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.UserCommand;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"public class ScheduleFeatureTest {","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"    private Student student \u003d new Student();","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"    private UserCommand currentUserCommand \u003d new UserCommand();","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"    private String commandToTest \u003d \"schedule\";","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"        this.student \u003d new Student();","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"        student.setName(\"Ryan Loh\");","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"        student.setFirstMajor(\"CEG\");","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"        student.setYear(\"Y3/S2\");","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"    @AfterEach","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"    void testViewScheduleInvalidInput() {","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"        String argument \u003d \" extra argument\";","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"        currentUserCommand \u003d new UserCommand(commandToTest + argument);","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"Invalid argument for command schedule\";","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"    void testViewScheduleValidInput() {","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"        currentUserCommand \u003d new UserCommand(commandToTest);","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"Sem 1:   \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 2:   \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 3:   \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 4:   \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 5:   \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 6:   \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 7:   \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 8:\";","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"    void testViewScheduleInValidCharacter() {","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"        String argument \u003d \" ```\";","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"        currentUserCommand \u003d new UserCommand(commandToTest + argument);","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"Invalid argument for command schedule\";","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"ryanlohyr":93}},{"path":"src/test/java/seedu/duke/controllers/SearchFeatureTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rohitcube"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"rohitcube"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"rohitcube"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"rohitcube"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"rohitcube"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"rohitcube"},"content":"import seedu.duke.models.schema.UserCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"rohitcube"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"rohitcube"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"rohitcube"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"rohitcube"},"content":"public class SearchFeatureTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"rohitcube"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"rohitcube"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"rohitcube"},"content":"    private Student student \u003d new Student();","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"rohitcube"},"content":"    private UserCommand currentUserCommand \u003d new UserCommand();","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"rohitcube"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"rohitcube"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"rohitcube"},"content":"        this.student \u003d new Student();","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"rohitcube"},"content":"        student.setName(\"Janelle\");","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"rohitcube"},"content":"        student.setFirstMajor(\"CEG\");","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"rohitcube"},"content":"        student.setYear(\"Y2/S1\");","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"rohitcube"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"rohitcube"},"content":"    @AfterEach","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"rohitcube"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"rohitcube"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"rohitcube"},"content":"    public void testSearchFeature_validKeyword_expectAssertEquals() {","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"rohitcube"},"content":"        String userInput \u003d \"search Darwin\";","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"rohitcube"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"rohitcube"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"rohitcube"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"rohitcube"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"rohitcube"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"rohitcube"},"content":"        String expectedOutput \u003d \"_________________________________________\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"rohitcube"},"content":"                \"These are the modules that contain your keyword in the title:\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"rohitcube"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"rohitcube"},"content":"                \"Title: Junior Seminar: The Darwinian Revolution\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"rohitcube"},"content":"                \"Module Code: UTC1102B\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"rohitcube"},"content":"                \"_________________________________________\";","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"rohitcube"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"rohitcube"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"rohitcube"},"content":"    public void testSearchFeature_invalidKeyword_expectErrorMessage() {","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"rohitcube"},"content":"        String userInput \u003d \"search hehehehe siuuuuuuuu\";","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"rohitcube"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"rohitcube"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"rohitcube"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"rohitcube"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"rohitcube"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"rohitcube"},"content":"        String expectedOutput \u003d \"Oops! Your search results came up empty. Please try \" +","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"rohitcube"},"content":"                \"searching with different keywords.\";","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"rohitcube"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"rohitcube"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"rohitcube"},"content":"    public void testSearchFeature_emptyKeyword_expectErrorMessage() {","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"rohitcube"},"content":"        String userInput \u003d \"search      \";","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"rohitcube"},"content":"        currentUserCommand \u003d new UserCommand(userInput);","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"rohitcube"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"rohitcube"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"rohitcube"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"rohitcube"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"rohitcube"},"content":"        String expectedOutput \u003d \"Empty input detected. Please enter a valid keyword after the search command.\";","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"rohitcube"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"rohitcube"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"rohitcube"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"rohitcube"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"rohitcube":99}},{"path":"src/test/java/seedu/duke/models/logic/DataRepositoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.storage.StorageManager;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"class DataRepositoryTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"    void validRequirementsReturned() {","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"        ArrayList\u003cString\u003e cegRequirementArray \u003d StorageManager.getRequirements(\"CEG\");","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"        int numberOfRequiredCegMods \u003d 31;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(numberOfRequiredCegMods,cegRequirementArray.size());","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"SebasFok":2,"ryanlohyr":16}},{"path":"src/test/java/seedu/duke/models/logic/ScheduleGeneratorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"class ScheduleGeneratorTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"    void validRecommendedSchedule() {","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"        //   ArrayList\u003cString\u003e cegRequirementArray \u003d generateRecommendedSchedule(\"CEG\");","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"        assert(true);","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"ryanlohyr":12}},{"path":"src/test/java/seedu/duke/models/schema/ModuleListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"class ModuleListTest {","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"    //success scenario 1: 1 input String, 1 ModuleList that contains input String --\u003e true","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"    void existsTest_moduleListContainsModule_expectTrue() throws InvalidObjectException {","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"        String inputString \u003d \"CS1231S\";","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"        ModuleList ml \u003d new ModuleList(\"CS1231S CS2030S CS2040S CS2100 CS2101 CS2106 CS2109S CS3230\");","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"        //test","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"        boolean result \u003d ml.existsByCode(inputString);","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"        assertTrue(result);","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"    //success scenario 2: 1 input String, 1 ModuleList that does not contain input String --\u003e false","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"    void existsTest_moduleListDoesNotContainModule_expectFalse() throws InvalidObjectException {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"        String inputString \u003d \"CS1231S\";","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"        ModuleList ml \u003d new ModuleList(\"CS2030S CS2040S CS2100 CS2101 CS2106 CS2109S CS3230\");","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"        //test","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"        boolean result \u003d ml.existsByCode(inputString);","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"        assertFalse(result);","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"    //failure scenario 1: input null string, 1 ModuleList --\u003e throw exception","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"    void existsTest_nullInput_expectException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"        ModuleList ml \u003d new ModuleList(\"CS2030S CS2040S CS2100 CS2101 CS2106 CS2109S CS3230\");","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"        //test","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"        assertThrows(InvalidObjectException.class, () -\u003e ml.existsByCode(null));","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"    //success scenario 3: input string, 1 empty ModuleList --\u003e false","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"    void existsTest_nullMainModuleList_expectException() throws InvalidObjectException {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"        String inputString \u003d \"CS1231S\";","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"        ModuleList ml \u003d new ModuleList();","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"        //test","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"        boolean result \u003d ml.existsByCode(inputString);","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"        assertFalse(result);","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"    void deleteModulebyCodeTest_moduleExists_expectDelete() {","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"        ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"        moduleList.addModule(new Module(\"CS1231\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"        moduleList.deleteModuleByCode(\"CS1231\");","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"        assertTrue(moduleList.getMainModuleList().isEmpty());","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"SebasFok":1,"janelleenqi":61}},{"path":"src/test/java/seedu/duke/models/schema/ModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"class ModuleTest {","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    void testModularCreditsGetsUpdated() {","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"        // Arrange","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"        Module module \u003d new Module(\"CS1010\");","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"        //Act","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"        int credits \u003d module.getModuleCredits();","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"        //Assert","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"        int expectedCredits \u003d 4;","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedCredits,credits);","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"    void testTwelveModularCreditsGetsUpdated() {","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"        // Arrange","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"        Module module \u003d new Module(\"CP3880\");","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"        //Act","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"        int credits \u003d module.getModuleCredits();","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"        //Assert","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"        int expectedCredits \u003d 12;","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedCredits,credits);","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"    void testTw0ModularCreditsGetsUpdated() {","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"        // Arrange","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"        Module module \u003d new Module(\"CFG1002\");","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"        //Act","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"        int credits \u003d module.getModuleCredits();","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"        //Assert","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"        int expectedCredits \u003d 2;","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedCredits,credits);","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"ryanlohyr":49}},{"path":"src/test/java/seedu/duke/models/schema/ScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.exceptions.FailPrereqException;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.utils.exceptions.MandatoryPrereqException;","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.utils.exceptions.MissingModuleException;","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"class ScheduleTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"    private Student student \u003d new Student();","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"        this.student \u003d new Student();","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"        student.setName(\"Ryan Loh\");","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"        student.setFirstMajor(\"CEG\");","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"        student.setYear(\"Y2/S1\");","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"    @AfterEach","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"    //success scenario: String containing valid module, int containing valid targetSem","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"    //module satisfies prereqs --\u003e module added","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"    void addModuleTest_correctInputsSatisfyPrereqs_expectModuleAdded() throws Exception {","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule();","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"        schedule.addModule(\"CS1010\", 1);","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"        ArrayList\u003cString\u003e testArray\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"SebasFok"},"content":"        testArray.add(\"CS1010\");","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"        assertEquals(testArray, schedule.getModulesPlanned().getModuleCodes());","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"SebasFok"},"content":"    //failure scenario 1: String containing valid module, int containing valid targetSem","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"SebasFok"},"content":"    //module does not satisfy prereqs --\u003e throw FailPrereqException","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"SebasFok"},"content":"    void addModuleTest_correctInputsDoesNotSatisfyPrereqs_expectException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule(\"CS1231S MA1511\", new int[]{2, 0, 0, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"SebasFok"},"content":"        assertThrows(FailPrereqException.class, () -\u003e schedule.addModule(\"CS2040C\", 1));","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"SebasFok"},"content":"    //failure scenario 2: String containing invalid module, int containing valid targetSem","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"SebasFok"},"content":"    //--\u003e throws IllegalArgumentException","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"SebasFok"},"content":"    void addModuleTest_invalidModule_expectException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule(\"CS1231S MA1511\", new int[]{2, 0, 0, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"SebasFok"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e schedule.addModule(\"wrong\", 1));","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"SebasFok"},"content":"    //failure scenario 3: String containing valid module, int containing invalid targetSem","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"SebasFok"},"content":"    //--\u003e throws IllegalArgumentException","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"SebasFok"},"content":"    void addModuleTest_invalidTargetSem_expectException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule(\"CS1231S MA1511\", new int[]{2, 0, 0, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"SebasFok"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e schedule.addModule(\"CS2040C\", 1000));","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"SebasFok"},"content":"    //success scenario: String containing valid module, module is in schedule","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"SebasFok"},"content":"    //module is not a prerequisite of modules ahead--\u003e module deleted","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"SebasFok"},"content":"    void deleteModuleTest_correctInputsNotPrereq_expectModuleDeleted() throws Exception {","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule();","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"SebasFok"},"content":"        schedule.addModule(\"CS1010\", 1);","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"SebasFok"},"content":"        schedule.addModule(\"CS2040C\", 2);","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"SebasFok"},"content":"        schedule.deleteModule(\"CS2040C\");","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"SebasFok"},"content":"        ArrayList\u003cString\u003e testArray\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"SebasFok"},"content":"        testArray.add(\"CS1010\");","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"SebasFok"},"content":"        assertEquals(testArray, schedule.getModulesPlanned().getModuleCodes());","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"SebasFok"},"content":"    //failure scenario 1: String containing invalid module","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"SebasFok"},"content":"    // --\u003e throw MissingModuleException","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"SebasFok"},"content":"    void deleteModuleTest_invalidModule_expectException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule(\"CS1231S MA1511\", new int[]{2, 0, 0, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"SebasFok"},"content":"        assertThrows(MissingModuleException.class, () -\u003e schedule.deleteModule(\"wrong\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":96,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"SebasFok"},"content":"    //failure scenario 2: String containing valid module, module not in schedule","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"SebasFok"},"content":"    //--\u003e throws MissingModuleException","lastModifiedDate":"2023-11-08"},{"lineNumber":101,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":102,"author":{"gitId":"SebasFok"},"content":"    void deleteModuleTest_missingModule_expectException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule(\"CS1231S MA1511\", new int[]{2, 0, 0, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-11-08"},{"lineNumber":104,"author":{"gitId":"SebasFok"},"content":"        assertThrows(MissingModuleException.class, () -\u003e schedule.deleteModule(\"CS2040C\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":105,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":106,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":107,"author":{"gitId":"SebasFok"},"content":"    //failure scenario 3: String containing valid module, module in schedule","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"SebasFok"},"content":"    //module is prerequisite of modules ahead--\u003e throws MandatoryPrereqException","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":110,"author":{"gitId":"SebasFok"},"content":"    void deleteModuleTest_mandatoryPrereq_expectException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":111,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule(\"CS1010 CS2040C\", new int[]{1, 1, 0, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-11-08"},{"lineNumber":112,"author":{"gitId":"SebasFok"},"content":"        assertThrows(MandatoryPrereqException.class, () -\u003e schedule.deleteModule(\"CS1010\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":113,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":114,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":115,"author":{"gitId":"SebasFok"},"content":"    //success scenario 1: String containing valid module, module is in schedule, int containing valid targetSem","lastModifiedDate":"2023-11-08"},{"lineNumber":116,"author":{"gitId":"SebasFok"},"content":"    //shifting earlier does not affect other modules--\u003e module shifted earlier","lastModifiedDate":"2023-11-08"},{"lineNumber":117,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":118,"author":{"gitId":"SebasFok"},"content":"    void shiftModuleTest_correctInputsShiftEarlier_expectModuleShifted() throws Exception {","lastModifiedDate":"2023-11-08"},{"lineNumber":119,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule();","lastModifiedDate":"2023-11-08"},{"lineNumber":120,"author":{"gitId":"SebasFok"},"content":"        schedule.addModule(\"CS1010\", 3);","lastModifiedDate":"2023-11-08"},{"lineNumber":121,"author":{"gitId":"SebasFok"},"content":"        schedule.addModule(\"MA1511\", 2);","lastModifiedDate":"2023-11-08"},{"lineNumber":122,"author":{"gitId":"SebasFok"},"content":"        schedule.shiftModule(\"CS1010\", 1);","lastModifiedDate":"2023-11-08"},{"lineNumber":123,"author":{"gitId":"SebasFok"},"content":"        ArrayList\u003cString\u003e testArray\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-08"},{"lineNumber":124,"author":{"gitId":"SebasFok"},"content":"        testArray.add(\"CS1010\");","lastModifiedDate":"2023-11-08"},{"lineNumber":125,"author":{"gitId":"SebasFok"},"content":"        testArray.add(\"MA1511\");","lastModifiedDate":"2023-11-08"},{"lineNumber":126,"author":{"gitId":"SebasFok"},"content":"        assertEquals(testArray, schedule.getModulesPlanned().getModuleCodes());","lastModifiedDate":"2023-11-08"},{"lineNumber":127,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":128,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":129,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":130,"author":{"gitId":"SebasFok"},"content":"    //success scenario 2: String containing valid module, module is in schedule, int containing valid targetSem","lastModifiedDate":"2023-11-08"},{"lineNumber":131,"author":{"gitId":"SebasFok"},"content":"    //shifting later does not affect other modules--\u003e module shifted later","lastModifiedDate":"2023-11-08"},{"lineNumber":132,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":133,"author":{"gitId":"SebasFok"},"content":"    void shiftModuleTest_correctInputsShiftLater_expectModuleShifted() throws Exception {","lastModifiedDate":"2023-11-08"},{"lineNumber":134,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule();","lastModifiedDate":"2023-11-08"},{"lineNumber":135,"author":{"gitId":"SebasFok"},"content":"        schedule.addModule(\"CS1010\", 1);","lastModifiedDate":"2023-11-08"},{"lineNumber":136,"author":{"gitId":"SebasFok"},"content":"        schedule.addModule(\"MA1511\", 2);","lastModifiedDate":"2023-11-08"},{"lineNumber":137,"author":{"gitId":"SebasFok"},"content":"        schedule.shiftModule(\"CS1010\", 3);","lastModifiedDate":"2023-11-08"},{"lineNumber":138,"author":{"gitId":"SebasFok"},"content":"        ArrayList\u003cString\u003e testArray\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-08"},{"lineNumber":139,"author":{"gitId":"SebasFok"},"content":"        testArray.add(\"MA1511\");","lastModifiedDate":"2023-11-08"},{"lineNumber":140,"author":{"gitId":"SebasFok"},"content":"        testArray.add(\"CS1010\");","lastModifiedDate":"2023-11-08"},{"lineNumber":141,"author":{"gitId":"SebasFok"},"content":"        assertEquals(testArray, schedule.getModulesPlanned().getModuleCodes());","lastModifiedDate":"2023-11-08"},{"lineNumber":142,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":143,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":144,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":145,"author":{"gitId":"SebasFok"},"content":"    //failure scenario 1: String containing valid module, module is in schedule, int containing valid targetSem","lastModifiedDate":"2023-11-08"},{"lineNumber":146,"author":{"gitId":"SebasFok"},"content":"    //shifting earlier affects other modules--\u003e throws FailPrereqException","lastModifiedDate":"2023-11-08"},{"lineNumber":147,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":148,"author":{"gitId":"SebasFok"},"content":"    void shiftModuleTest_shiftEarlierAffectsModules_expectException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":149,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule(\"CS1010 CS2040C\", new int[]{1, 1, 0, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-11-08"},{"lineNumber":150,"author":{"gitId":"SebasFok"},"content":"        assertThrows(FailPrereqException.class, () -\u003e schedule.shiftModule(\"CS2040C\", 1));","lastModifiedDate":"2023-11-08"},{"lineNumber":151,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":152,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":153,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":154,"author":{"gitId":"SebasFok"},"content":"    //failure scenario 2: String containing valid module, module is in schedule, int containing valid targetSem","lastModifiedDate":"2023-11-08"},{"lineNumber":155,"author":{"gitId":"SebasFok"},"content":"    //shifting later affects other modules--\u003e throws MandatoryPrereqException","lastModifiedDate":"2023-11-08"},{"lineNumber":156,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":157,"author":{"gitId":"SebasFok"},"content":"    void shiftModuleTest_shiftLaterAffectsModules_expectException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":158,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule(\"CS1010 CS2040C\", new int[]{1, 1, 0, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-11-08"},{"lineNumber":159,"author":{"gitId":"SebasFok"},"content":"        assertThrows(MandatoryPrereqException.class, () -\u003e schedule.shiftModule(\"CS1010\", 2));","lastModifiedDate":"2023-11-08"},{"lineNumber":160,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":161,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":162,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":163,"author":{"gitId":"SebasFok"},"content":"    //failure scenario 3: String containing valid module, int containing invalid targetSem","lastModifiedDate":"2023-11-08"},{"lineNumber":164,"author":{"gitId":"SebasFok"},"content":"    //--\u003e throws IllegalArgumentException","lastModifiedDate":"2023-11-08"},{"lineNumber":165,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":166,"author":{"gitId":"SebasFok"},"content":"    void shiftModuleTest_invalidTargetSem_expectException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":167,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule(\"CS1231S MA1511\", new int[]{2, 0, 0, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-11-08"},{"lineNumber":168,"author":{"gitId":"SebasFok"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e schedule.shiftModule(\"CS1231S\", 1000));","lastModifiedDate":"2023-11-08"},{"lineNumber":169,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":170,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":171,"author":{"gitId":"SebasFok"},"content":"    //failure scenario 4: String containing invalid module","lastModifiedDate":"2023-11-08"},{"lineNumber":172,"author":{"gitId":"SebasFok"},"content":"    // --\u003e throw MissingModuleException","lastModifiedDate":"2023-11-08"},{"lineNumber":173,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":174,"author":{"gitId":"SebasFok"},"content":"    void shiftModuleTest_invalidModule_expectException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":175,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule(\"CS1231S MA1511\", new int[]{2, 0, 0, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-11-08"},{"lineNumber":176,"author":{"gitId":"SebasFok"},"content":"        assertThrows(MissingModuleException.class, () -\u003e schedule.shiftModule(\"wrong\", 1));","lastModifiedDate":"2023-11-08"},{"lineNumber":177,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":178,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":179,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":180,"author":{"gitId":"SebasFok"},"content":"    //failure scenario 5: String containing valid module, module not in schedule","lastModifiedDate":"2023-11-08"},{"lineNumber":181,"author":{"gitId":"SebasFok"},"content":"    //--\u003e throws MissingModuleException","lastModifiedDate":"2023-11-08"},{"lineNumber":182,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":183,"author":{"gitId":"SebasFok"},"content":"    void shiftModuleTest_missingModule_expectException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":184,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule(\"CS1231S MA1511\", new int[]{2, 0, 0, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-11-08"},{"lineNumber":185,"author":{"gitId":"SebasFok"},"content":"        assertThrows(MissingModuleException.class, () -\u003e schedule.shiftModule(\"CS2040C\", 1));","lastModifiedDate":"2023-11-08"},{"lineNumber":186,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":187,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"SebasFok":161,"ryanlohyr":1,"janelleenqi":25}},{"path":"src/test/java/seedu/duke/models/schema/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.exceptions.FailPrereqException;","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.utils.exceptions.MandatoryPrereqException;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.exceptions.MissingModuleException;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"public class StudentTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"    void clearAllModulesFromScheduleTest_expectEmptySchedule() {","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"        Student student \u003d new Student();","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule(\"CS1231S MA1511\", new int[]{2, 0, 0, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"        student.setSchedule(schedule);","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"        student.clearAllModulesFromSchedule();","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"        assertTrue(student.getSchedule().getModulesPlanned().getMainModuleList().isEmpty());","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"    //success scenario: difference (not working)","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"    void getModuleCodesLeftTest_majorSet_expectArrayList() {","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"        Student student \u003d new Student();","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"        student.setMajor(\"CEG\");","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"        //actual: student.getModuleCodesLeft();","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"        //expected:","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cString\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cString\u003e majorModuleCodes \u003d student.getMajorModuleCodes();","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cString\u003e modulesInPlanner \u003d student.getModulesPlanned().getCompletedModuleCodes();","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"        for (String moduleCode : majorModuleCodes) {","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"            if (!modulesInPlanner.contains(moduleCode)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"                expected.add(moduleCode);","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"        assertEquals(expected, student.getModuleCodesLeft());","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"    void deleteModuleScheduleTest_moduleExists_expectDelete()","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"            throws IOException, MandatoryPrereqException, MissingModuleException, FailPrereqException {","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"        Student student \u003d new Student();","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"SebasFok"},"content":"        student.addModuleToSchedule(\"CS1010\", 1);","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"SebasFok"},"content":"        student.deleteModuleFromSchedule(\"CS1010\");","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"        assertTrue(student.getModulesPlanned().getMainModuleList().isEmpty());","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"    // getModuleCodesLeft_noMajorSet_expectException()","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"    // getDifferenceTest_twoModuleList_expectDifference()","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"    // success scenario 2: 1 empty ModuleList, 1 ModuleList --\u003e difference which is empty","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"    // getDifferenceTest_oneEmptyModuleListAnotherModuleList_expectEmptyDifference()","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"    // failure scenario 1: null ModuleList input --\u003e throw exception","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"    // getDifferenceTest_nullModuleListInput_expectException()","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"SebasFok":18,"ryanlohyr":4,"janelleenqi":41}},{"path":"src/test/java/seedu/duke/models/schema/TimetableUserCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.InvalidTimetableUserCommandException;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.utils.exceptions.TimetableUnavailableException;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.views.TimetableView;","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.views.TimetableUserGuideView.printTTModifySimpleLessonGuide;","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"class TimetableUserCommandTest {","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    private Student student \u003d new Student();","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"    private UserCommand currentUserCommand \u003d new UserCommand();","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"        this.student \u003d new Student();","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"        student.setName(\"Janelle\");","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"        student.setYear(\"Y2/S1\");","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"        student.setFirstMajor(\"CEG\");","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    @AfterEach","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"    void partialTestTimetableModify_perfectInputs_expectTimetable() throws InvalidTimetableUserCommandException,","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"            TimetableUnavailableException {","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"        String addUserInputs \u003d \"add cs1010 3\";","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"        currentUserCommand \u003d new UserCommand(addUserInputs);","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"        student.updateTimetable();","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"        TimetableUserCommand currentTimetableCommand \u003d new TimetableUserCommand(student,","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"                student.getTimetable().getCurrentSemesterModulesWeekly(), \"cs1010 lecture 9 2 Monday\");","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"        currentTimetableCommand.processTimetableCommand(student.getTimetable().getCurrentSemesterModulesWeekly());","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"        if (student.getTimetable().timetableViewIsAvailable()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"            TimetableView.printTimetable(student.getTimetable().getCurrentSemesterModulesWeekly());","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"        } else {","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"            printTTModifySimpleLessonGuide(\"Timetable view is unavailable as modules in your \" +","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"                    \"current semester have no lessons yet.\");","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"        String expectedOutput \u003d \"------------------------------------------------------------\\n\" +","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"                \"| DAY       | TIMETABLE                                    |\\n\" +","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"                \"------------------------------------------------------------\\n\" +","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"                \"| Monday    | CS1010 Lecture (9am-11am)                    |\\n\" +","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"                \"------------------------------------------------------------\";","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"    void partialTestTimetableModify_perfectInput_expectTimetableErrorMessage() throws TimetableUnavailableException {","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"        String addUserInputs \u003d \"add cs1010 3\";","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"        currentUserCommand \u003d new UserCommand(addUserInputs);","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"        student.updateTimetable();","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"        assertThrows(InvalidTimetableUserCommandException.class,","lastModifiedDate":"2023-11-10"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"                () -\u003e badInput(\"cs1010 lecture 9 2 Mon\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"    void partialTestTimetableModify_badLessonInput_expectTimetableErrorMessage() throws TimetableUnavailableException {","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-10"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"        String addUserInputs \u003d \"add cs1010 3\";","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"        currentUserCommand \u003d new UserCommand(addUserInputs);","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"        if (currentUserCommand.isValid() \u0026\u0026 !currentUserCommand.isBye()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"            currentUserCommand.processCommand(student);","lastModifiedDate":"2023-11-10"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"        student.updateTimetable();","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"        assertThrows(InvalidTimetableUserCommandException.class,","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"                () -\u003e badInput(\"cs1010 lect 9 2 Monday\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"    public void badInput(String timetableUserInput) throws InvalidTimetableUserCommandException {","lastModifiedDate":"2023-11-10"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"        TimetableUserCommand currentTimetableCommand \u003d new TimetableUserCommand(student,","lastModifiedDate":"2023-11-10"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"                student.getTimetable().getCurrentSemesterModulesWeekly(), timetableUserInput);","lastModifiedDate":"2023-11-10"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"        currentTimetableCommand.processTimetableCommand(student.getTimetable().getCurrentSemesterModulesWeekly());","lastModifiedDate":"2023-11-10"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"janelleenqi":120}},{"path":"src/test/java/seedu/duke/utils/UtilityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.utils;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.utils.Utility.isInternetReachable;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"class UtilityTest {","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"    void internetFeature_whenInternetPresent() {","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"        boolean isConnectedToInternet \u003d isInternetReachable();","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"        assertTrue(isConnectedToInternet);","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"ryanlohyr":15}},{"path":"src/test/java/seedu/duke/views/MajorRequirementsViewTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.views;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.views.MajorRequirementsView.printRequiredModulesCEG;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.views.MajorRequirementsView.printRequiredModules;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"class MajorRequirementsViewTest {","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"    @AfterEach","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"    void printRequiredModulesTest_majorCEG_expectRequiredCEGModulesShown() {","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"        printRequiredModules(\"CEG\");","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"        String printedOutput \u003d outputStream.toString();","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"                \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"                        \"║   Modular Requirements for CEG                    Units  ║\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"                        \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"                        \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"                        \"│   Common Curriculum Requirements                  60     │\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"                        \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"                        \"    GES1000 (Singapore Studies)                     4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"                        \"    GEC1000 (Cultures and Connections)              4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"                        \"    GEN2000 (Communities and Engagement)            4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"                        \"    ES2631 Critique \u0026 Communication of Thinking\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"                        \"    \u0026 Design (Critique \u0026 Expression)                4\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"                        \"    CS1010 Programming Methodology (Digital \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"                        \"    Literacy)                                       4\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"                        \"    GEA1000 Quantitative Reasoning with Data (Data \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"                        \"    Literacy)                                       4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"                        \"    DTK1234 Design Thinking (Design Thinking)       4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"                        \"    EG1311 Design and Make (Maker Space)            4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"                        \"    IE2141 Systems Thinking and Dynamics (Systems \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"                        \"    Thinking)                                       4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"                        \"    EE2211 Introduction to Machine Learning \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"                        \"    (Artificial Intelligence)                       4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"                        \"    CDE2501 Liveable Cities (Sustainable Futures)   4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"                        \"    CDE2000 (Creating Narratives)                   4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"                        \"    PF1101 Fundamentals of Project Management \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"                        \"    (Project Management)                            4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"                        \"    CG4002 Computer Engineering Capstone Project 1 \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"                        \"    (Integrated Project)                            8\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"                        \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"                        \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"                        \"│   Programme Requirements                          60     │\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"                        \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"                        \" ~~ Engineering Core                                20  ~~\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"                        \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"                        \"    MA1511 Engineering Calculus                     2\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"                        \"    MA1512 Differential Equations for Engineering   2\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"                        \"    MA1508E Linear Algebra for Engineering          4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"                        \"    EG2401A Engineering Professionalism             2\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"                        \"    CP3880 Advanced Technology Attachment Programme 12\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"                        \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"                        \" ~~ CEG Major                                       40  ~~\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"                        \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"                        \"    CG1111A Engineering Principles and Practice I   4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"                        \"    CG2111A Engineering Principles and Practice II  4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"                        \"    CS1231 Discrete Structures                      4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"                        \"    CG2023 Signals \u0026 Systems                        4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"                        \"    CG2027 Transistor-level Digital Circuit         2\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"                        \"    CG2028 Computer Organization                    2\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"                        \"    CG2271 Real-time Operating System               4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"                        \"    CS2040C Data Structures and Algorithms          4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"                        \"    CS2113 Software Engineering \u0026 Object-Oriented \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"                        \"    Programming                                     4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"                        \"    EE2026 Digital Design                           4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"                        \"    EE4204 Computer Networks                        4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"                        \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"                        \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"                        \"│   Unrestricted Electives                          40     │\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"                        \"+----------------------------------------------------------+\\n\";","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-07"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-07"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"        //assertTrue(false);","lastModifiedDate":"2023-11-07"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"    void printRequiredModulesTest_majorCS_expectRequiredCSModulesShown() {","lastModifiedDate":"2023-11-07"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"        printRequiredModules(\"CS\");","lastModifiedDate":"2023-11-07"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-07"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"        String printedOutput \u003d outputStream.toString();","lastModifiedDate":"2023-11-07"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-07"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-07"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"        String expectedOutput \u003d \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"                \"║   Modular Requirements for CS                     Units  ║\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"                \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":124,"author":{"gitId":"janelleenqi"},"content":"                \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"                \"│   Common Curriculum Requirements                  40     │\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":126,"author":{"gitId":"janelleenqi"},"content":"                \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"                \" ~~ University Requirements: 6 University Pillars   24  ~~\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":128,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":129,"author":{"gitId":"janelleenqi"},"content":"                \"    CS1101S Programming Methodology (Digital \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":130,"author":{"gitId":"janelleenqi"},"content":"                \"    Literacy)                                       4\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":131,"author":{"gitId":"janelleenqi"},"content":"                \"    ES2660 Communicating in the Information Age \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":132,"author":{"gitId":"janelleenqi"},"content":"                \"    (Critique and Expression)                       4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":133,"author":{"gitId":"janelleenqi"},"content":"                \"    GEC1% (Cultures and Connections)                4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":134,"author":{"gitId":"janelleenqi"},"content":"                \"    GEA1000 / BT1101 / ST1131 / DSA1101 (Data \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":135,"author":{"gitId":"janelleenqi"},"content":"                \"    Literacy)                                       4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":136,"author":{"gitId":"janelleenqi"},"content":"                \"    GES1% (Singapore Studies)                       4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":137,"author":{"gitId":"janelleenqi"},"content":"                \"    GEN2% (Communities and Engagement)              4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":138,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":139,"author":{"gitId":"janelleenqi"},"content":"                \" ~~ Computing Ethics                                4  ~~\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":140,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":141,"author":{"gitId":"janelleenqi"},"content":"                \"    IS1108 Digital Ethics and Data Privacy          4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":142,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":143,"author":{"gitId":"janelleenqi"},"content":"                \" ~~   Inter \u0026 Cross-Disciplinary Education          12 ~~\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":144,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"                \"    Interdisciplinary (ID) Courses (at least 2)\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":146,"author":{"gitId":"janelleenqi"},"content":"                \"    Cross-disciplinary (CD) Courses (no more than 1)\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":148,"author":{"gitId":"janelleenqi"},"content":"                \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"                \"│   Programme Requirements                          80     │\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":150,"author":{"gitId":"janelleenqi"},"content":"                \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"                \" ~~ Computer Science Foundation                     36  ~~\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":152,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":153,"author":{"gitId":"janelleenqi"},"content":"                \"    CS1231S Discrete Structures                     4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":154,"author":{"gitId":"janelleenqi"},"content":"                \"    CS2030S Programming Methodology II              4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":155,"author":{"gitId":"janelleenqi"},"content":"                \"    CS2040S Data Structures and Algorithms          4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":156,"author":{"gitId":"janelleenqi"},"content":"                \"    CS2100 Computer Organisation                    4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":157,"author":{"gitId":"janelleenqi"},"content":"                \"    CS2101 Effective Communication for Computing \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":158,"author":{"gitId":"janelleenqi"},"content":"                \"    Professionals                                   4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":159,"author":{"gitId":"janelleenqi"},"content":"                \"    CS2103T Software Engineering                    4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":160,"author":{"gitId":"janelleenqi"},"content":"                \"    CS2106 Introduction to Operating Systems        4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":161,"author":{"gitId":"janelleenqi"},"content":"                \"    CS2109S Introduction to AI and Machine Learning 4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":162,"author":{"gitId":"janelleenqi"},"content":"                \"    CS3230 Design and Analysis of Algorithms        4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":163,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":164,"author":{"gitId":"janelleenqi"},"content":"                \" ~~ Computer Science Breadth and Depth              32  ~~\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":165,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":166,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":167,"author":{"gitId":"janelleenqi"},"content":"                \" ~~ Mathematics and Sciences                        12  ~~\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":168,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":169,"author":{"gitId":"janelleenqi"},"content":"                \"    MA1521 Calculus for Computing                   4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":170,"author":{"gitId":"janelleenqi"},"content":"                \"    MA1522 Linear Algebra for Computing             4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":171,"author":{"gitId":"janelleenqi"},"content":"                \"    ST2334 Probability and Statistics               4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":172,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":173,"author":{"gitId":"janelleenqi"},"content":"                \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":174,"author":{"gitId":"janelleenqi"},"content":"                \"│   Unrestricted Electives                          40     │\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":175,"author":{"gitId":"janelleenqi"},"content":"                \"+----------------------------------------------------------+\\n\";","lastModifiedDate":"2023-11-08"},{"lineNumber":176,"author":{"gitId":"janelleenqi"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":177,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-07"},{"lineNumber":178,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":179,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":180,"author":{"gitId":"janelleenqi"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-07"},{"lineNumber":181,"author":{"gitId":"janelleenqi"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":182,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":183,"author":{"gitId":"janelleenqi"},"content":"        //assertTrue(false);","lastModifiedDate":"2023-11-07"},{"lineNumber":184,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":185,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":186,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":187,"author":{"gitId":"janelleenqi"},"content":"    void printRequiredModulesTest_notAMajor_expectNothingShown() {","lastModifiedDate":"2023-11-07"},{"lineNumber":188,"author":{"gitId":"janelleenqi"},"content":"        printRequiredModules(\"\");","lastModifiedDate":"2023-11-07"},{"lineNumber":189,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":190,"author":{"gitId":"janelleenqi"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-07"},{"lineNumber":191,"author":{"gitId":"janelleenqi"},"content":"        String printedOutput \u003d outputStream.toString();","lastModifiedDate":"2023-11-07"},{"lineNumber":192,"author":{"gitId":"janelleenqi"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-07"},{"lineNumber":193,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-07"},{"lineNumber":194,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":195,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":196,"author":{"gitId":"janelleenqi"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-11-08"},{"lineNumber":197,"author":{"gitId":"janelleenqi"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":198,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":199,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":200,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":201,"author":{"gitId":"janelleenqi"},"content":"    void printRequiredModulesCEGTest_expectRequiredCEGModulesShown() {","lastModifiedDate":"2023-11-07"},{"lineNumber":202,"author":{"gitId":"janelleenqi"},"content":"        printRequiredModulesCEG();","lastModifiedDate":"2023-11-07"},{"lineNumber":203,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":204,"author":{"gitId":"janelleenqi"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-07"},{"lineNumber":205,"author":{"gitId":"janelleenqi"},"content":"        String printedOutput \u003d outputStream.toString();","lastModifiedDate":"2023-11-07"},{"lineNumber":206,"author":{"gitId":"janelleenqi"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-07"},{"lineNumber":207,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-07"},{"lineNumber":208,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":209,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":210,"author":{"gitId":"janelleenqi"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":211,"author":{"gitId":"janelleenqi"},"content":"                \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":212,"author":{"gitId":"janelleenqi"},"content":"                        \"║   Modular Requirements for CEG                    Units  ║\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":213,"author":{"gitId":"janelleenqi"},"content":"                        \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":214,"author":{"gitId":"janelleenqi"},"content":"                        \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":215,"author":{"gitId":"janelleenqi"},"content":"                        \"│   Common Curriculum Requirements                  60     │\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":216,"author":{"gitId":"janelleenqi"},"content":"                        \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":217,"author":{"gitId":"janelleenqi"},"content":"                        \"    GES1000 (Singapore Studies)                     4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":218,"author":{"gitId":"janelleenqi"},"content":"                        \"    GEC1000 (Cultures and Connections)              4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":219,"author":{"gitId":"janelleenqi"},"content":"                        \"    GEN2000 (Communities and Engagement)            4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":220,"author":{"gitId":"janelleenqi"},"content":"                        \"    ES2631 Critique \u0026 Communication of Thinking\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":221,"author":{"gitId":"janelleenqi"},"content":"                        \"    \u0026 Design (Critique \u0026 Expression)                4\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":222,"author":{"gitId":"janelleenqi"},"content":"                        \"    CS1010 Programming Methodology (Digital \\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":223,"author":{"gitId":"janelleenqi"},"content":"                        \"    Literacy)                                       4\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":224,"author":{"gitId":"janelleenqi"},"content":"                        \"    GEA1000 Quantitative Reasoning with Data (Data \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":225,"author":{"gitId":"janelleenqi"},"content":"                        \"    Literacy)                                       4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":226,"author":{"gitId":"janelleenqi"},"content":"                        \"    DTK1234 Design Thinking (Design Thinking)       4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":227,"author":{"gitId":"janelleenqi"},"content":"                        \"    EG1311 Design and Make (Maker Space)            4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":228,"author":{"gitId":"janelleenqi"},"content":"                        \"    IE2141 Systems Thinking and Dynamics (Systems \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":229,"author":{"gitId":"janelleenqi"},"content":"                        \"    Thinking)                                       4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":230,"author":{"gitId":"janelleenqi"},"content":"                        \"    EE2211 Introduction to Machine Learning \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":231,"author":{"gitId":"janelleenqi"},"content":"                        \"    (Artificial Intelligence)                       4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":232,"author":{"gitId":"janelleenqi"},"content":"                        \"    CDE2501 Liveable Cities (Sustainable Futures)   4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":233,"author":{"gitId":"janelleenqi"},"content":"                        \"    CDE2000 (Creating Narratives)                   4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":234,"author":{"gitId":"janelleenqi"},"content":"                        \"    PF1101 Fundamentals of Project Management \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":235,"author":{"gitId":"janelleenqi"},"content":"                        \"    (Project Management)                            4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":236,"author":{"gitId":"janelleenqi"},"content":"                        \"    CG4002 Computer Engineering Capstone Project 1 \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":237,"author":{"gitId":"janelleenqi"},"content":"                        \"    (Integrated Project)                            8\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":238,"author":{"gitId":"janelleenqi"},"content":"                        \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":239,"author":{"gitId":"janelleenqi"},"content":"                        \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":240,"author":{"gitId":"janelleenqi"},"content":"                        \"│   Programme Requirements                          60     │\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":241,"author":{"gitId":"janelleenqi"},"content":"                        \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":242,"author":{"gitId":"janelleenqi"},"content":"                        \" ~~ Engineering Core                                20  ~~\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":243,"author":{"gitId":"janelleenqi"},"content":"                        \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":244,"author":{"gitId":"janelleenqi"},"content":"                        \"    MA1511 Engineering Calculus                     2\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":245,"author":{"gitId":"janelleenqi"},"content":"                        \"    MA1512 Differential Equations for Engineering   2\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":246,"author":{"gitId":"janelleenqi"},"content":"                        \"    MA1508E Linear Algebra for Engineering          4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":247,"author":{"gitId":"janelleenqi"},"content":"                        \"    EG2401A Engineering Professionalism             2\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":248,"author":{"gitId":"janelleenqi"},"content":"                        \"    CP3880 Advanced Technology Attachment Programme 12\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":249,"author":{"gitId":"janelleenqi"},"content":"                        \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":250,"author":{"gitId":"janelleenqi"},"content":"                        \" ~~ CEG Major                                       40  ~~\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":251,"author":{"gitId":"janelleenqi"},"content":"                        \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":252,"author":{"gitId":"janelleenqi"},"content":"                        \"    CG1111A Engineering Principles and Practice I   4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":253,"author":{"gitId":"janelleenqi"},"content":"                        \"    CG2111A Engineering Principles and Practice II  4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":254,"author":{"gitId":"janelleenqi"},"content":"                        \"    CS1231 Discrete Structures                      4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":255,"author":{"gitId":"janelleenqi"},"content":"                        \"    CG2023 Signals \u0026 Systems                        4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":256,"author":{"gitId":"janelleenqi"},"content":"                        \"    CG2027 Transistor-level Digital Circuit         2\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":257,"author":{"gitId":"janelleenqi"},"content":"                        \"    CG2028 Computer Organization                    2\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":258,"author":{"gitId":"janelleenqi"},"content":"                        \"    CG2271 Real-time Operating System               4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":259,"author":{"gitId":"janelleenqi"},"content":"                        \"    CS2040C Data Structures and Algorithms          4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":260,"author":{"gitId":"janelleenqi"},"content":"                        \"    CS2113 Software Engineering \u0026 Object-Oriented \\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":261,"author":{"gitId":"janelleenqi"},"content":"                        \"    Programming                                     4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":262,"author":{"gitId":"janelleenqi"},"content":"                        \"    EE2026 Digital Design                           4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":263,"author":{"gitId":"janelleenqi"},"content":"                        \"    EE4204 Computer Networks                        4\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":264,"author":{"gitId":"janelleenqi"},"content":"                        \"\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":265,"author":{"gitId":"janelleenqi"},"content":"                        \"+----------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":266,"author":{"gitId":"janelleenqi"},"content":"                        \"│   Unrestricted Electives                          40     │\\n\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":267,"author":{"gitId":"janelleenqi"},"content":"                        \"+----------------------------------------------------------+\\n\";","lastModifiedDate":"2023-11-08"},{"lineNumber":268,"author":{"gitId":"janelleenqi"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":269,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-07"},{"lineNumber":270,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-07"},{"lineNumber":271,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":272,"author":{"gitId":"janelleenqi"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-07"},{"lineNumber":273,"author":{"gitId":"janelleenqi"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":274,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":275,"author":{"gitId":"janelleenqi"},"content":"        //assertTrue(false);","lastModifiedDate":"2023-11-07"},{"lineNumber":276,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":277,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":278,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":279,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"janelleenqi":279}},{"path":"src/test/java/seedu/duke/views/TimetableViewTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.views;","lastModifiedDate":"2023-11-05"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.ModuleWeekly;","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-05"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"class TimetableViewTest {","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"    @AfterEach","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-05"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"    void printTimetableTest_cs1231Lessons_expectSortedTimetable() {","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cModuleWeekly\u003e currentSemesterModules \u003d new ArrayList\u003cModuleWeekly\u003e();","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"        ModuleWeekly firstTestModule \u003d new ModuleWeekly(\"CS1231\");","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"        firstTestModule.addLecture(\"Wednesday\", 12, 2);","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"        firstTestModule.addTutorial(\"Thursday\", 14, 2);","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"        ModuleWeekly secondTestModule \u003d new ModuleWeekly(\"ES2631\");","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"        secondTestModule.addLecture(\"sunday\", 11, 1);","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"        secondTestModule.addTutorial(\"friday\", 14, 2);","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"        ModuleWeekly thirdTestModule \u003d new ModuleWeekly(\"EE2026\");","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"        thirdTestModule.addLecture(\"thurSDay\", 11, 2);","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"        thirdTestModule.addTutorial(\"WEDNESday\", 17, 1);","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"        thirdTestModule.addLab(\"wednESDAY\", 9, 3);","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"        ModuleWeekly fourthTestModule \u003d new ModuleWeekly(\"CS2113\");","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"        fourthTestModule.addLecture(\"FRIDAY\", 16, 2);","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"        fourthTestModule.addTutorial(\"THURSDAY\", 17, 1);","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"        ModuleWeekly overlappingModule \u003d new ModuleWeekly(\"CFG1002\");","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"        overlappingModule.addTutorial(\"wednesday\", 12, 2);","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"        currentSemesterModules.add(firstTestModule);","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"        currentSemesterModules.add(secondTestModule);","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"        currentSemesterModules.add(thirdTestModule);","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"        currentSemesterModules.add(fourthTestModule);","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"        currentSemesterModules.add(overlappingModule);","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"        TimetableView.printTimetable(currentSemesterModules);","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"        String printedOutput \u003d outputStream.toString();","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"        String expectedOutput \u003d \"------------------------------------------------------------\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"                \"| DAY       | TIMETABLE                                    |\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"                \"------------------------------------------------------------\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"                \"| Wednesday | EE2026 Lab (9am-12pm)                        |\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"                \"|           | CFG1002 Tutorial (12pm-2pm)                  |\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"                \"|           | CS1231 Lecture (12pm-2pm)                    |\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"                \"|           | EE2026 Tutorial (5pm-6pm)                    |\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"                \"------------------------------------------------------------\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"                \"| Thursday  | EE2026 Lecture (11am-1pm)                    |\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"                \"|           | CS1231 Tutorial (2pm-4pm)                    |\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"                \"|           | CS2113 Tutorial (5pm-6pm)                    |\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"                \"------------------------------------------------------------\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"                \"| Friday    | ES2631 Tutorial (2pm-4pm)                    |\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"                \"|           | CS2113 Lecture (4pm-6pm)                     |\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"                \"------------------------------------------------------------\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"                \"| Sunday    | ES2631 Lecture (11am-12pm)                   |\\n\" +","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"                \"------------------------------------------------------------\\n\";","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"        //assertTrue(false);","lastModifiedDate":"2023-11-05"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"    /*","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"    void printTimetableTest_noModuleWeekly_expectNothing() {","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cModuleWeekly\u003e currentSemesterModules \u003d new ArrayList\u003cModuleWeekly\u003e();","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"        TimetableView.printTimetable(currentSemesterModules);","lastModifiedDate":"2023-11-08"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"        String printedOutput \u003d outputStream.toString();","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-08"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-08"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-08"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"        //assertTrue(false);","lastModifiedDate":"2023-11-08"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"    */","lastModifiedDate":"2023-11-10"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"janelleenqi":114}},{"path":"unused/CompletePreqs.java","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.ModuleList;","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"CerIsaiah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"CerIsaiah"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"CerIsaiah"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"CerIsaiah"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"CerIsaiah"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"CerIsaiah"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"CerIsaiah"},"content":" * CompletePreqs checks which mods are unlocked once you finish a specific module","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"CerIsaiah"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"CerIsaiah"},"content":"public class CompletePreqs {","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"CerIsaiah"},"content":"    //Full list of mods with modulesWithPreqs","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"CerIsaiah"},"content":"    private HashMap\u003cString, List\u003cString\u003e\u003e modulesWithPreqs;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"CerIsaiah"},"content":"    private ArrayList\u003cString\u003e addToModulesCompleted;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"CerIsaiah"},"content":"    // To track modules that are already unlocked","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"CerIsaiah"},"content":"    private Set\u003cString\u003e unlockedModulesSet;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    public CompletePreqs() {","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"        modulesWithPreqs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"        unlockedModulesSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"        addToModulesCompleted \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"CerIsaiah"},"content":"    public CompletePreqs(HashMap\u003cString, List\u003cString\u003e\u003e inputMods) {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"CerIsaiah"},"content":"        modulesWithPreqs \u003d new HashMap\u003c\u003e(inputMods);","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"CerIsaiah"},"content":"        unlockedModulesSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"CerIsaiah"},"content":"        addToModulesCompleted \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"CerIsaiah"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"CerIsaiah"},"content":"     * Create a list of completed mods, hardcoded from startup.","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"CerIsaiah"},"content":"     * @param list","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"CerIsaiah"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"CerIsaiah"},"content":"    public void initializeCompletedMods(ModuleList list) {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"        addToModulesCompleted.addAll(list.getModuleCodes());","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"CerIsaiah"},"content":"        for (String mod : addToModulesCompleted) {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"CerIsaiah"},"content":"            processModuleForUnlockingWithoutPrint(mod);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"CerIsaiah"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"CerIsaiah"},"content":"     * Prints what mods have been unlocked after input","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"CerIsaiah"},"content":"     * @param moduleCompleted","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"CerIsaiah"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"CerIsaiah"},"content":"    public void getUnlockedMods(String moduleCompleted) {","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"CerIsaiah"},"content":"        // Check prerequisites of the moduleCompleted","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"CerIsaiah"},"content":"        if (modulesWithPreqs.containsKey(moduleCompleted)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"CerIsaiah"},"content":"            List\u003cString\u003e unmetPrerequisites \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"CerIsaiah"},"content":"            for (String preq : modulesWithPreqs.get(moduleCompleted)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"CerIsaiah"},"content":"                if (!addToModulesCompleted.contains(preq)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"CerIsaiah"},"content":"                    unmetPrerequisites.add(preq);","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"CerIsaiah"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"CerIsaiah"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"CerIsaiah"},"content":"            //Stops if a completedMod shouldn\u0027t be able to be completed with proper preqs","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"CerIsaiah"},"content":"            if (!unmetPrerequisites.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"                System.out.println(moduleCompleted +","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"                        \" cannot be marked as completed because of uncompleted prerequisites: \"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"                        + unmetPrerequisites);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"CerIsaiah"},"content":"                return;","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"CerIsaiah"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"CerIsaiah"},"content":"        //If its not marked as completed, properly add it to the list","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"CerIsaiah"},"content":"        if (!addToModulesCompleted.contains(moduleCompleted)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"CerIsaiah"},"content":"            addToModulesCompleted.add(moduleCompleted);","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"CerIsaiah"},"content":"        System.out.println(\"Mod completed: \" + moduleCompleted);","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"CerIsaiah"},"content":"        printUnlockedMods(moduleCompleted);","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"CerIsaiah"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"CerIsaiah"},"content":"     * This is only used for the first initalization of the mods.","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"CerIsaiah"},"content":"     * @param moduleCompleted","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"CerIsaiah"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"    private void processModuleForUnlockingWithoutPrint(String moduleCompleted) {","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"CerIsaiah"},"content":"        ArrayList\u003cString\u003e newMods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"CerIsaiah"},"content":"        for (String key : modulesWithPreqs.keySet()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"CerIsaiah"},"content":"            //If new unlocked mod isn\u0027t marked as complete or unlocked already","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"CerIsaiah"},"content":"            if (!unlockedModulesSet.contains(key) \u0026\u0026 !addToModulesCompleted.contains(key)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"CerIsaiah"},"content":"                boolean allPrerequisitesMet \u003d true;","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"CerIsaiah"},"content":"                for (String preq : modulesWithPreqs.get(key)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"CerIsaiah"},"content":"                    if (!addToModulesCompleted.contains(preq)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"CerIsaiah"},"content":"                        //Make sure preq isn\u0027t already marked as done","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"CerIsaiah"},"content":"                        allPrerequisitesMet \u003d false;","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"CerIsaiah"},"content":"                        break;","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"CerIsaiah"},"content":"                    }","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"CerIsaiah"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"CerIsaiah"},"content":"                if (allPrerequisitesMet) {","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"CerIsaiah"},"content":"                    newMods.add(key);","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"CerIsaiah"},"content":"                    unlockedModulesSet.add(key);","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"CerIsaiah"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"CerIsaiah"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"CerIsaiah"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"CerIsaiah"},"content":"     * @param moduleCompleted","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"CerIsaiah"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"CerIsaiah"},"content":"    public void printUnlockedMods(String moduleCompleted) {","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"CerIsaiah"},"content":"        ArrayList\u003cString\u003e newlyUnlockedMods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"CerIsaiah"},"content":"        for (String key : modulesWithPreqs.keySet()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"CerIsaiah"},"content":"            //If new unlocked mod isn\u0027t marked as complete or unlocked already","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"CerIsaiah"},"content":"            if (!unlockedModulesSet.contains(key) \u0026\u0026 !addToModulesCompleted.contains(key)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"CerIsaiah"},"content":"                boolean allPrerequisitesMet \u003d true;","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"CerIsaiah"},"content":"                for (String preq : modulesWithPreqs.get(key)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"CerIsaiah"},"content":"                    if (!addToModulesCompleted.contains(preq)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"CerIsaiah"},"content":"                        //Make sure preq isn\u0027t already marked as done","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"CerIsaiah"},"content":"                        allPrerequisitesMet \u003d false;","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"CerIsaiah"},"content":"                        break;","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"CerIsaiah"},"content":"                    }","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"CerIsaiah"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"CerIsaiah"},"content":"                if (allPrerequisitesMet) {","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"CerIsaiah"},"content":"                    newlyUnlockedMods.add(key);","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"CerIsaiah"},"content":"                    unlockedModulesSet.add(key);","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"CerIsaiah"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"CerIsaiah"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"CerIsaiah"},"content":"        for (String mod : newlyUnlockedMods) {","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"CerIsaiah"},"content":"            System.out.println(mod + \" has been unlocked!\");","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"CerIsaiah"},"content":"    public void printModsCompleted(){","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"CerIsaiah"},"content":"        for (String mod: addToModulesCompleted){","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"CerIsaiah"},"content":"            System.out.println(mod + \"has been completed\");","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"    public boolean checkModInput(String[] words, ArrayList\u003cString\u003e majorModuleCodes){","lastModifiedDate":"2023-11-04"},{"lineNumber":146,"author":{"gitId":"ryanlohyr"},"content":"        if (words.length \u003d\u003d 1){","lastModifiedDate":"2023-11-03"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"            if (majorModuleCodes.contains(words[0].toUpperCase())){","lastModifiedDate":"2023-11-04"},{"lineNumber":148,"author":{"gitId":"CerIsaiah"},"content":"                return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"CerIsaiah"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"CerIsaiah"},"content":"            System.out.println(\"Please enter a available mod: \");","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(majorModuleCodes);","lastModifiedDate":"2023-11-04"},{"lineNumber":152,"author":{"gitId":"CerIsaiah"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"CerIsaiah"},"content":"        System.out.println(\"Please enter a available mod after the complete keyword\");","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(majorModuleCodes);","lastModifiedDate":"2023-11-04"},{"lineNumber":156,"author":{"gitId":"CerIsaiah"},"content":"        return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"CerIsaiah"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"SebasFok":2,"ryanlohyr":8,"janelleenqi":14,"CerIsaiah":136}},{"path":"unused/File.java","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"//        if (userInput.equals(\"Y\")) {","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"//            displayMessage(\"Do you want to keep your completion statuses?\");","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"//            displayMessage(\"Please input \u0027Y\u0027 or \u0027N\u0027\");","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"//            String userInputForCompletion \u003d in.nextLine();","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"//            while (!userInputForCompletion.equals(\"N\") \u0026\u0026 !userInputForCompletion.equals((\"Y\"))) {","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"//                displayMessage(\"Invalid input, please choose Y/N\");","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"//                userInputForCompletion \u003d in.nextLine();","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"//            }","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"//            displayMessage(\"Hold on, this may take a while......\");","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"//            Boolean keep;","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"//            if (userInputForCompletion.equals(\"Y\")) {","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"//                keep \u003d true;","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"//            } else {","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"//                keep \u003d false;","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"//            }","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"//            student.getSchedule().addRecommendedScheduleListToSchedule(scheduleToAdd, keep);","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"//            displayMessage(\"Here is your schedule planner!\");","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"//            student.getSchedule().printMainModuleList();","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"//            displayMessage(\"Happy degree planning!\");","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"//        } else {","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"//            displayHelp();","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"//        }","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"      /*String logo \u003d \"  _____       _                 __  __        _____      _              _       _      \\n\"","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"                + \" |  __ \\\\     | |               |  \\\\/  |      / ____|    | |            | |     | |     \\n\"","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"                + \" | |  | | ___| |__  _   _  __ _| \\\\  / |_   _| (___   ___| |__   ___  __| |_   _| | ___ \\n\"","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"                + \" | |  | |/ _ \\\\ \u0027_ \\\\| | | |/ _` | |\\\\/| | | | |\\\\___ \\\\ / __| \u0027_ \\\\ / _ \\\\/ _` | | | | |/ _ \\\\\\n\"","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"                + \" | |__| |  __/ |_) | |_| | (_| | |  | | |_| |____) | (__| | | |  __/ (_| | |_| | |  __/\\n\"","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"                + \" |_____/ \\\\___|_.__/ \\\\__,_|\\\\__, |_|  |_|\\\\__, |_____/ \\\\___|_| |_|\\\\___|\\\\__,_|\\\\__,_|_|\\\\___|\\n\"","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"                + \"                           __/ |        __/ |                                          \\n\"","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"            //    private void processCommand(String command, String[] arguments, String userInput) {","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"    //        switch (command) {","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"    //        case UserCommandWord.LEFT_COMMAND: {","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"    //            showModulesLeft(student.getModuleCodesLeft());","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"    //            break;","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"    //        }","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"    //        case UserCommandWord.PACE_COMMAND: {","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"    //            computePace(arguments, student.getCurrentModuleCredits(), student.getYear());","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"    //            break;","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"    //        }","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"    //        case UserCommandWord.PREREQUISITE_COMMAND: {","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"    //            String module \u003d arguments[0];","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"    //            determinePrereq(module.toUpperCase(), student.getMajor()); //to convert \"CEG\" to dynamic course","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"    //            break;","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"    //        }","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"    //        case UserCommandWord.RECOMMEND_COMMAND: {","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"    //            recommendScheduleToStudent(student);","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"    //            break;","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"    //        }","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"    //        case UserCommandWord.ADD_MODULE_COMMAND: {","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"    //            String module \u003d arguments[0].toUpperCase();","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"    //            int targetSem \u003d Integer.parseInt(arguments[1]);","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"    //","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"    //            addModule(module, targetSem, student);","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"    //            break;","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"    //        }","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"    //        case UserCommandWord.DELETE_MODULE_COMMAND: {","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"    //            String module \u003d arguments[0].toUpperCase();","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"    //","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"    //            deleteModule(module,student);","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"    //            break;","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"    //        }","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"    //        case UserCommandWord.SHIFT_MODULE_COMMAND: {","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"    //            String module \u003d arguments[0].toUpperCase();","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"    //            int targetSem \u003d Integer.parseInt(arguments[1]);","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"    //","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"    //            shiftModule(module, targetSem, student);","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"    //            break;","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"    //        }","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"    //        case UserCommandWord.VIEW_SCHEDULE_COMMAND: {","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"    ////            getStudentSchedule();","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"    //            student.printSchedule();","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"    //            break;","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"    //        }","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"    //        case UserCommandWord.COMPLETE_MODULE_COMMAND: {","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"    //            String module \u003d arguments[0].toUpperCase();","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"    //            //to add to user completed module","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"    //            completeModule(student, module);","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"    //","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"    //            break;","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"    //        }","lastModifiedDate":"2023-11-12"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"    //        case UserCommandWord.REQUIRED_MODULES_COMMAND: {","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"    //            getRequiredModulesForStudent(student.getMajor());","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"    //            break;","lastModifiedDate":"2023-11-12"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"    //        }","lastModifiedDate":"2023-11-12"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"    //        case UserCommandWord.INFO_COMMAND: {","lastModifiedDate":"2023-11-12"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"    //            Api.infoCommands(arguments[0], userInput);","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"    //            break;","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"    //        }","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"    //        case UserCommandWord.SEARCH_MODULE_COMMAND: {","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"    //            Api.searchCommand(userInput);","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"    //            break;","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"    //        }","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"    //        case UserCommandWord.HELP_COMMAND: {","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"    //            printListOfCommands(commandManager);","lastModifiedDate":"2023-11-12"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"    //            break;","lastModifiedDate":"2023-11-12"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"    //        }","lastModifiedDate":"2023-11-12"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"    //        case UserCommandWord.TIMETABLE_COMMAND: {","lastModifiedDate":"2023-11-12"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"    //            student.timetableShowOrModify(student, userInput);","lastModifiedDate":"2023-11-12"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"    //            break;","lastModifiedDate":"2023-11-12"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"    //        }","lastModifiedDate":"2023-11-12"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"    //        default: {","lastModifiedDate":"2023-11-12"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"    //            break;","lastModifiedDate":"2023-11-12"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"    //        }","lastModifiedDate":"2023-11-12"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"    //        }","lastModifiedDate":"2023-11-12"},{"lineNumber":111,"author":{"gitId":"ryanlohyr"},"content":"    //","lastModifiedDate":"2023-11-12"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"    //    }    + \"                          |___/        |___/                                           \";*/","lastModifiedDate":"2023-11-12"},{"lineNumber":113,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"//    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":115,"author":{"gitId":"ryanlohyr"},"content":"//     * Processes a course file, extracts relevant information, and returns a list of course codes.","lastModifiedDate":"2023-11-12"},{"lineNumber":116,"author":{"gitId":"ryanlohyr"},"content":"//     *","lastModifiedDate":"2023-11-12"},{"lineNumber":117,"author":{"gitId":"ryanlohyr"},"content":"//     * @param f The file to be processed.","lastModifiedDate":"2023-11-12"},{"lineNumber":118,"author":{"gitId":"ryanlohyr"},"content":"//     * @return An ArrayList of course codes extracted from the file.","lastModifiedDate":"2023-11-12"},{"lineNumber":119,"author":{"gitId":"ryanlohyr"},"content":"//     * @throws FileNotFoundException If the specified file is not found.","lastModifiedDate":"2023-11-12"},{"lineNumber":120,"author":{"gitId":"ryanlohyr"},"content":"//     */","lastModifiedDate":"2023-11-12"},{"lineNumber":121,"author":{"gitId":"ryanlohyr"},"content":"//    private static ArrayList\u003cString\u003e processCourseFile(File f) throws FileNotFoundException {","lastModifiedDate":"2023-11-12"},{"lineNumber":122,"author":{"gitId":"ryanlohyr"},"content":"//        ArrayList\u003cString\u003e currentArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-12"},{"lineNumber":123,"author":{"gitId":"ryanlohyr"},"content":"//        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-11-12"},{"lineNumber":124,"author":{"gitId":"ryanlohyr"},"content":"//        while (s.hasNext()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":125,"author":{"gitId":"ryanlohyr"},"content":"//            String currentLine \u003d s.nextLine();","lastModifiedDate":"2023-11-12"},{"lineNumber":126,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-12"},{"lineNumber":127,"author":{"gitId":"ryanlohyr"},"content":"//            String[] words \u003d currentLine.split(\" \");","lastModifiedDate":"2023-11-12"},{"lineNumber":128,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-12"},{"lineNumber":129,"author":{"gitId":"ryanlohyr"},"content":"//            if (!currentLine.isEmpty() \u0026\u0026 !currentLine.startsWith(\"*\")) { // not empty line, not title","lastModifiedDate":"2023-11-12"},{"lineNumber":130,"author":{"gitId":"ryanlohyr"},"content":"//                currentArray.add(words[0]);","lastModifiedDate":"2023-11-12"},{"lineNumber":131,"author":{"gitId":"ryanlohyr"},"content":"//            }","lastModifiedDate":"2023-11-12"},{"lineNumber":132,"author":{"gitId":"ryanlohyr"},"content":"//        }","lastModifiedDate":"2023-11-12"},{"lineNumber":133,"author":{"gitId":"ryanlohyr"},"content":"//        return currentArray;","lastModifiedDate":"2023-11-12"},{"lineNumber":134,"author":{"gitId":"ryanlohyr"},"content":"//    }","lastModifiedDate":"2023-11-12"},{"lineNumber":135,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-12"},{"lineNumber":137,"author":{"gitId":"ryanlohyr"},"content":"//    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":138,"author":{"gitId":"ryanlohyr"},"content":"//     * Add all mods that require prerequisites to a map storing the mod and a set of preqs","lastModifiedDate":"2023-11-12"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"//     *","lastModifiedDate":"2023-11-12"},{"lineNumber":140,"author":{"gitId":"ryanlohyr"},"content":"//     * @param list HashMap of ModsWithPreqs","lastModifiedDate":"2023-11-12"},{"lineNumber":141,"author":{"gitId":"ryanlohyr"},"content":"//     * @return HashMap of Mods with their corresponding preqs","lastModifiedDate":"2023-11-12"},{"lineNumber":142,"author":{"gitId":"ryanlohyr"},"content":"//     */","lastModifiedDate":"2023-11-12"},{"lineNumber":143,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-12"},{"lineNumber":144,"author":{"gitId":"ryanlohyr"},"content":"//    private HashMap\u003cString, List\u003cString\u003e\u003e addModsWithPreqs(HashMap\u003cString, List\u003cString\u003e\u003e list) {","lastModifiedDate":"2023-11-12"},{"lineNumber":145,"author":{"gitId":"ryanlohyr"},"content":"//        //Only two mods don\u0027t have preqs MA1511 and CS1231S.","lastModifiedDate":"2023-11-12"},{"lineNumber":146,"author":{"gitId":"ryanlohyr"},"content":"//        // In the future this will be dealt","lastModifiedDate":"2023-11-12"},{"lineNumber":147,"author":{"gitId":"ryanlohyr"},"content":"//        addValue(list, \"CS3230\", \"CS2030S\");","lastModifiedDate":"2023-11-12"},{"lineNumber":148,"author":{"gitId":"ryanlohyr"},"content":"//        addValue(list, \"CS3230\", \"CS1231S\");","lastModifiedDate":"2023-11-12"},{"lineNumber":149,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-12"},{"lineNumber":150,"author":{"gitId":"ryanlohyr"},"content":"//        addValue(list, \"CS2030S\", \"CS1231S\");","lastModifiedDate":"2023-11-12"},{"lineNumber":151,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-12"},{"lineNumber":152,"author":{"gitId":"ryanlohyr"},"content":"//        addValue(list, \"CS2040S\", \"CS1231S\");","lastModifiedDate":"2023-11-12"},{"lineNumber":153,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-12"},{"lineNumber":154,"author":{"gitId":"ryanlohyr"},"content":"//        addValue(list, \"CS2106\", \"CS1231S\");","lastModifiedDate":"2023-11-12"},{"lineNumber":155,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-12"},{"lineNumber":156,"author":{"gitId":"ryanlohyr"},"content":"//        addValue(list, \"CS2109S\", \"CS1231S\");","lastModifiedDate":"2023-11-12"},{"lineNumber":157,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-12"},{"lineNumber":158,"author":{"gitId":"ryanlohyr"},"content":"//        return list;","lastModifiedDate":"2023-11-12"},{"lineNumber":159,"author":{"gitId":"ryanlohyr"},"content":"//    }","lastModifiedDate":"2023-11-12"},{"lineNumber":160,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-12"},{"lineNumber":161,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-12"},{"lineNumber":162,"author":{"gitId":"ryanlohyr"},"content":"//    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":163,"author":{"gitId":"ryanlohyr"},"content":"//     * Adds a value to a HashMap with a list of values associated with a key.","lastModifiedDate":"2023-11-12"},{"lineNumber":164,"author":{"gitId":"ryanlohyr"},"content":"//     * If the key does not exist in the map, it creates a new key-value pair with an empty list.","lastModifiedDate":"2023-11-12"},{"lineNumber":165,"author":{"gitId":"ryanlohyr"},"content":"//     * The value is added to the list associated with the key.","lastModifiedDate":"2023-11-12"},{"lineNumber":166,"author":{"gitId":"ryanlohyr"},"content":"//     *","lastModifiedDate":"2023-11-12"},{"lineNumber":167,"author":{"gitId":"ryanlohyr"},"content":"//     * @param map   The HashMap in which the value will be added.","lastModifiedDate":"2023-11-12"},{"lineNumber":168,"author":{"gitId":"ryanlohyr"},"content":"//     * @param key   The key to which the value will be associated.","lastModifiedDate":"2023-11-12"},{"lineNumber":169,"author":{"gitId":"ryanlohyr"},"content":"//     * @param value The value to add to the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":170,"author":{"gitId":"ryanlohyr"},"content":"//     */","lastModifiedDate":"2023-11-12"},{"lineNumber":171,"author":{"gitId":"ryanlohyr"},"content":"//    public static void addValue(HashMap\u003cString, List\u003cString\u003e\u003e map, String key, String value) {","lastModifiedDate":"2023-11-12"},{"lineNumber":172,"author":{"gitId":"ryanlohyr"},"content":"//        // If the map does not contain the key, put an empty list for that key","lastModifiedDate":"2023-11-12"},{"lineNumber":173,"author":{"gitId":"ryanlohyr"},"content":"//        if (!map.containsKey(key)) {","lastModifiedDate":"2023-11-12"},{"lineNumber":174,"author":{"gitId":"ryanlohyr"},"content":"//            map.put(key, new ArrayList\u003c\u003e());","lastModifiedDate":"2023-11-12"},{"lineNumber":175,"author":{"gitId":"ryanlohyr"},"content":"//        }","lastModifiedDate":"2023-11-12"},{"lineNumber":176,"author":{"gitId":"ryanlohyr"},"content":"//        // Add the value to the list associated with the key","lastModifiedDate":"2023-11-12"},{"lineNumber":177,"author":{"gitId":"ryanlohyr"},"content":"//        map.get(key).add(value);","lastModifiedDate":"2023-11-12"},{"lineNumber":178,"author":{"gitId":"ryanlohyr"},"content":"//    }","lastModifiedDate":"2023-11-12"},{"lineNumber":179,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":180,"author":{"gitId":"ryanlohyr"},"content":"//        completedModules.deleteModulebyCode(module);","lastModifiedDate":"2023-11-13"},{"lineNumber":181,"author":{"gitId":"ryanlohyr"},"content":"//        int nextSemStartingIndex \u003d moduleCount;","lastModifiedDate":"2023-11-13"},{"lineNumber":182,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"ryanlohyr"},"content":"//        int lastModuleIndex \u003d modulesPlanned.getMainModuleList().size() - 1;","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"ryanlohyr"},"content":"//        List\u003cString\u003e completedModulesArray \u003d modulesPlanned.getModuleCodes().subList(0, nextSemStartingIndex);","lastModifiedDate":"2023-11-13"},{"lineNumber":185,"author":{"gitId":"ryanlohyr"},"content":"//        ModuleList completedModules \u003d new ModuleList(String.join(\" \", completedModulesArray));","lastModifiedDate":"2023-11-13"},{"lineNumber":186,"author":{"gitId":"ryanlohyr"},"content":"//        completedModules.deleteModulebyCode(module);","lastModifiedDate":"2023-11-13"},{"lineNumber":187,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-13"},{"lineNumber":188,"author":{"gitId":"ryanlohyr"},"content":"//        List\u003cString\u003e modulesAheadArray;","lastModifiedDate":"2023-11-13"},{"lineNumber":189,"author":{"gitId":"ryanlohyr"},"content":"//        try {","lastModifiedDate":"2023-11-13"},{"lineNumber":190,"author":{"gitId":"ryanlohyr"},"content":"//       modulesAheadArray \u003d modulesPlanned.getModuleCodes().subList(nextSemStartingIndex, lastModuleIndex + 1);","lastModifiedDate":"2023-11-13"},{"lineNumber":191,"author":{"gitId":"ryanlohyr"},"content":"//        } catch (IndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":192,"author":{"gitId":"ryanlohyr"},"content":"//            modulesAheadArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-13"},{"lineNumber":193,"author":{"gitId":"ryanlohyr"},"content":"//        }","lastModifiedDate":"2023-11-13"},{"lineNumber":194,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-13"},{"lineNumber":195,"author":{"gitId":"ryanlohyr"},"content":"//        try {","lastModifiedDate":"2023-11-13"},{"lineNumber":196,"author":{"gitId":"ryanlohyr"},"content":"//            for (String moduleAhead : modulesAheadArray){","lastModifiedDate":"2023-11-13"},{"lineNumber":197,"author":{"gitId":"ryanlohyr"},"content":"//                if (!satisfiesAllPrereq(moduleAhead, completedModules)) {","lastModifiedDate":"2023-11-13"},{"lineNumber":198,"author":{"gitId":"ryanlohyr"},"content":"//                   throw new FailPrereqException(\"Unable to delete module. This module is a prerequisite for \"","lastModifiedDate":"2023-11-13"},{"lineNumber":199,"author":{"gitId":"ryanlohyr"},"content":"//                            + moduleAhead);","lastModifiedDate":"2023-11-13"},{"lineNumber":200,"author":{"gitId":"ryanlohyr"},"content":"//                }","lastModifiedDate":"2023-11-13"},{"lineNumber":201,"author":{"gitId":"ryanlohyr"},"content":"//            }","lastModifiedDate":"2023-11-13"},{"lineNumber":202,"author":{"gitId":"ryanlohyr"},"content":"//        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":203,"author":{"gitId":"ryanlohyr"},"content":"//            // This catch should never occur as it should not be possible to add an invalid module","lastModifiedDate":"2023-11-13"},{"lineNumber":204,"author":{"gitId":"ryanlohyr"},"content":"//            assert false;","lastModifiedDate":"2023-11-13"},{"lineNumber":205,"author":{"gitId":"ryanlohyr"},"content":"//            throw new IllegalArgumentException(\"Invalid Module in Schedule\");","lastModifiedDate":"2023-11-13"},{"lineNumber":206,"author":{"gitId":"ryanlohyr"},"content":"//        }","lastModifiedDate":"2023-11-13"},{"lineNumber":207,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":208,"author":{"gitId":"ryanlohyr"},"content":"//        modulesPerSem[targetSem - 1] -\u003d 1;","lastModifiedDate":"2023-11-13"},{"lineNumber":209,"author":{"gitId":"ryanlohyr"},"content":"//","lastModifiedDate":"2023-11-13"},{"lineNumber":210,"author":{"gitId":"ryanlohyr"},"content":"    /*Sebestians version","lastModifiedDate":"2023-11-13"},{"lineNumber":211,"author":{"gitId":"ryanlohyr"},"content":"    private static boolean isInternetReachable() {","lastModifiedDate":"2023-11-13"},{"lineNumber":212,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-13"},{"lineNumber":213,"author":{"gitId":"ryanlohyr"},"content":"            // Try connecting to a well-known server (Google\u0027s DNS server)","lastModifiedDate":"2023-11-13"},{"lineNumber":214,"author":{"gitId":"ryanlohyr"},"content":"            InetAddress address \u003d InetAddress.getByName(\"8.8.8.8\");","lastModifiedDate":"2023-11-13"},{"lineNumber":215,"author":{"gitId":"ryanlohyr"},"content":"            return address.isReachable(3000); // 3 seconds timeout","lastModifiedDate":"2023-11-13"},{"lineNumber":216,"author":{"gitId":"ryanlohyr"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":217,"author":{"gitId":"ryanlohyr"},"content":"            return false; // Unable to connect","lastModifiedDate":"2023-11-13"},{"lineNumber":218,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":219,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":220,"author":{"gitId":"ryanlohyr"},"content":"    */","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"ryanlohyr":220}},{"path":"unused/WeeklyScheduleView.java","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.views;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.Event;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.ModuleWeekly;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import java.util.List;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"public class WeeklyScheduleView {","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"    private static final int columnWidth \u003d 11;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"    private static final String[] days \u003d {\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"};","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"    public static void print(String output) {","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"        System.out.print(output);","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"    public static void println(String output) {","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(output);","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    public static void printlnHorizontalLine() {","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"        println(\"------------------------------------------------------------\");","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"    public static void printVerticalLine() {","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"        System.out.print(\"| \");","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"    public static void printlnVerticalLine() {","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(\"|\");","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    public static void printToJustify(int number) {","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"        print(String.format(\"%-\" + number + \"s\", \"\"));","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"    public static void printToJustify(String string, int number) {","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"        print(String.format(\"%-\" + number + \"s\", string));","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"    //ideally a function that can be called in Student","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"    public static void printWeeklySchedule(ArrayList\u003cModuleWeekly\u003e currentSemesterModules) {","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"        // 8am to 8pm, Monday to Sunday","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"        // Convert current semester modules (ArrayList\u003cModule\u003e, ModuleList)","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"        // to weeklySchedule, \"2D array\" of ArrayList of Event (List\u003cList\u003cArrayList\u003cEvent\u003e\u003e\u003e, ArrayList\u003cString\u003e[][])","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"        List\u003cList\u003cArrayList\u003cString\u003e\u003e\u003e weeklyScheduleByTime \u003d initialiseTwoDList();","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"        for (ModuleWeekly module : currentSemesterModules) {","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"            for (Event event : module.getWeeklyTimetable()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"                int day \u003d event.getDay();","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"                int timePeriod \u003d event.getStartTime() - 8; //8am index 0","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"                int eventDurationLeft \u003d event.getDuration();","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"                while (eventDurationLeft \u003e 0) {","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"                    addToWeeklyScheduleByTime(timePeriod, day,","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"                            module.getModuleCode() + \" \" + event.getEventType(), weeklyScheduleByTime);","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"                    //check if java pass by reference","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"                    timePeriod +\u003d 1;","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"                    eventDurationLeft -\u003d 1;","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"                }","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"        printDayHeader();","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"        for (int timePeriod \u003d 0; timePeriod \u003c 12; timePeriod++) { //8-9am index 0, 7-8pm index 11","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"            printRow(weeklyScheduleByTime.get(timePeriod), timePeriod, timePeriod \u003d\u003d 11);","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"    public static void printDayHeader() {","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"        printlnHorizontalLine();","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"        printVerticalLine();","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"        printToJustify(columnWidth);//printblank","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"        for (int i \u003d 0; i \u003c 7; i++) { //7 days","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"            printVerticalLine();","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"            String currentDay \u003d days[i];","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"            print(currentDay);","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"            printToJustify(columnWidth - currentDay.length());","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"        printlnVerticalLine();","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"    public static void printRow(List\u003cArrayList\u003cString\u003e\u003e hourSchedule, int timePeriod, boolean lastLine) {","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"        //header \u0026 7 days","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"        //save a copy","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"        //List\u003cString\u003e[] weeklyTask \u003d new List\u003cString\u003e[8];","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"        List\u003cArrayList\u003cString\u003e\u003e weeklyTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"        String header \u003d getTime(timePeriod);","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"        fillAndSet(0, new ArrayList\u003cString\u003e(List.of(header)), weeklyTask);","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"        //weeklyTask.set(0, new ArrayList\u003cString\u003e(List.of(header))); //????","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"        for (int i \u003d 0; i \u003c 7; i++) { //7 days","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"            ArrayList\u003cString\u003e task \u003d new ArrayList\u003cString\u003e(hourSchedule.get(i));","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"            fillAndSet(i + 1, task, weeklyTask);","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"            //weeklyTask.set(i + 1, task);","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"        boolean tasksPrinted \u003d false;","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"        printlnHorizontalLine();","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"        boolean firstLine \u003d true;","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"        while (!tasksPrinted) { //line, tasks","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"            for (int i \u003d 0; i \u003c\u003d 7; i++) { //timePeriod + 7 days","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"                printVerticalLine();","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"                //for (int t \u003d 0; t \u003c weeklyTask[i].size(); t++) { //print limited char","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"                //weeklyTask[i] is an ArrayList\u003cString\u003e that contains tasks in that time period","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"janelleenqi"},"content":"                if (weeklyTask.get(i).isEmpty()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"                    printToJustify(columnWidth);","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"                } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"                    String currentTask \u003d weeklyTask.get(i).get(0); //get 1st task","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"                    if (currentTask.length() \u003c columnWidth) {","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"                        print(currentTask);","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"                        printToJustify(columnWidth - currentTask.length());","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"                        weeklyTask.get(i).remove(0);","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"                    } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"                        String[] words \u003d currentTask.split(\" \");","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"                        int columnWidthLeft \u003d columnWidth;","lastModifiedDate":"2023-11-09"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"                        int j \u003d 0;","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"                        while (words[j].length() \u003c columnWidthLeft) {","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"janelleenqi"},"content":"                            print(words[j]);","lastModifiedDate":"2023-11-09"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"                            //print(String.valueOf(words[j].length())); //troubleshooting","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"janelleenqi"},"content":"                            columnWidthLeft -\u003d words[j].length();","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"                            words[j] \u003d \"\";","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"janelleenqi"},"content":"                            j +\u003d 1;","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"janelleenqi"},"content":"                        }","lastModifiedDate":"2023-11-09"},{"lineNumber":130,"author":{"gitId":"janelleenqi"},"content":"                        //print(String.valueOf(columnWidthLeft)); //troubleshooting","lastModifiedDate":"2023-11-09"},{"lineNumber":131,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":132,"author":{"gitId":"janelleenqi"},"content":"                        printToJustify(columnWidthLeft);","lastModifiedDate":"2023-11-09"},{"lineNumber":133,"author":{"gitId":"janelleenqi"},"content":"                        //currentTask should be updated to start from index j","lastModifiedDate":"2023-11-09"},{"lineNumber":134,"author":{"gitId":"janelleenqi"},"content":"                        String startingWord \u003d words[j];","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"janelleenqi"},"content":"                        int startingIndex \u003d currentTask.indexOf(startingWord);","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"janelleenqi"},"content":"                        weeklyTask.get(i).set(0, currentTask.substring(startingIndex)); //update currentTask","lastModifiedDate":"2023-11-09"},{"lineNumber":137,"author":{"gitId":"janelleenqi"},"content":"                    }","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"janelleenqi"},"content":"                }","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"janelleenqi"},"content":"            printlnVerticalLine();","lastModifiedDate":"2023-11-09"},{"lineNumber":141,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":142,"author":{"gitId":"janelleenqi"},"content":"            boolean thisTaskPrinted \u003d true;","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"janelleenqi"},"content":"            for (int i \u003d 0; i \u003c\u003d 7; i++) { //timePeriod + 7 days","lastModifiedDate":"2023-11-09"},{"lineNumber":144,"author":{"gitId":"janelleenqi"},"content":"                if (!weeklyTask.get(i).isEmpty()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"                    thisTaskPrinted \u003d false; //not finished","lastModifiedDate":"2023-11-09"},{"lineNumber":146,"author":{"gitId":"janelleenqi"},"content":"                    break;","lastModifiedDate":"2023-11-09"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"                }","lastModifiedDate":"2023-11-09"},{"lineNumber":148,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"            tasksPrinted \u003d thisTaskPrinted;","lastModifiedDate":"2023-11-09"},{"lineNumber":150,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"        if (lastLine) {","lastModifiedDate":"2023-11-09"},{"lineNumber":152,"author":{"gitId":"janelleenqi"},"content":"            printlnHorizontalLine();","lastModifiedDate":"2023-11-09"},{"lineNumber":153,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":154,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":155,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":156,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":157,"author":{"gitId":"janelleenqi"},"content":"    public static String getTime(int timePeriod, int duration) {","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"janelleenqi"},"content":"        String startTime \u003d getTime(timePeriod);","lastModifiedDate":"2023-11-09"},{"lineNumber":159,"author":{"gitId":"janelleenqi"},"content":"        String endTime \u003d getTime(timePeriod + duration);","lastModifiedDate":"2023-11-09"},{"lineNumber":160,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":161,"author":{"gitId":"janelleenqi"},"content":"        // time is outside 8am-8pm","lastModifiedDate":"2023-11-09"},{"lineNumber":162,"author":{"gitId":"janelleenqi"},"content":"        if (startTime.isEmpty() || endTime.isEmpty()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":163,"author":{"gitId":"janelleenqi"},"content":"            return \"\";","lastModifiedDate":"2023-11-09"},{"lineNumber":164,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":165,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":166,"author":{"gitId":"janelleenqi"},"content":"        return \"(\" + startTime + \"-\" + endTime + \")\";","lastModifiedDate":"2023-11-09"},{"lineNumber":167,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":168,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":169,"author":{"gitId":"janelleenqi"},"content":"    public static String getTime(int timePeriod) {","lastModifiedDate":"2023-11-09"},{"lineNumber":170,"author":{"gitId":"janelleenqi"},"content":"        if (8 \u003c\u003d timePeriod \u0026\u0026 timePeriod \u003c\u003d 11) {","lastModifiedDate":"2023-11-09"},{"lineNumber":171,"author":{"gitId":"janelleenqi"},"content":"            return (timePeriod) + \"am\";","lastModifiedDate":"2023-11-09"},{"lineNumber":172,"author":{"gitId":"janelleenqi"},"content":"        } else if (timePeriod \u003d\u003d 12) {","lastModifiedDate":"2023-11-09"},{"lineNumber":173,"author":{"gitId":"janelleenqi"},"content":"            return (timePeriod) + \"pm\";","lastModifiedDate":"2023-11-09"},{"lineNumber":174,"author":{"gitId":"janelleenqi"},"content":"        } else if (13 \u003c\u003d timePeriod \u0026\u0026 timePeriod \u003c\u003d 19) {","lastModifiedDate":"2023-11-09"},{"lineNumber":175,"author":{"gitId":"janelleenqi"},"content":"            return (timePeriod - 12) + \"pm\";","lastModifiedDate":"2023-11-09"},{"lineNumber":176,"author":{"gitId":"janelleenqi"},"content":"        } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":177,"author":{"gitId":"janelleenqi"},"content":"            // time is outside 8am-8pm","lastModifiedDate":"2023-11-09"},{"lineNumber":178,"author":{"gitId":"janelleenqi"},"content":"            return \"\";","lastModifiedDate":"2023-11-09"},{"lineNumber":179,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":180,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":181,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":182,"author":{"gitId":"janelleenqi"},"content":"    public static \u003cT\u003e void fillAndSet(int index, T object, List\u003cT\u003e list) {","lastModifiedDate":"2023-11-09"},{"lineNumber":183,"author":{"gitId":"janelleenqi"},"content":"        if (index \u003e (list.size() - 1)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":184,"author":{"gitId":"janelleenqi"},"content":"            for (int i \u003d list.size(); i \u003c index; i++) {","lastModifiedDate":"2023-11-09"},{"lineNumber":185,"author":{"gitId":"janelleenqi"},"content":"                list.add(null);","lastModifiedDate":"2023-11-09"},{"lineNumber":186,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":187,"author":{"gitId":"janelleenqi"},"content":"            list.add(object);","lastModifiedDate":"2023-11-09"},{"lineNumber":188,"author":{"gitId":"janelleenqi"},"content":"        } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":189,"author":{"gitId":"janelleenqi"},"content":"            list.set(index, object);","lastModifiedDate":"2023-11-09"},{"lineNumber":190,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":191,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":192,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":193,"author":{"gitId":"janelleenqi"},"content":"    public static List\u003cList\u003cArrayList\u003cString\u003e\u003e\u003e initialiseTwoDList() {","lastModifiedDate":"2023-11-09"},{"lineNumber":194,"author":{"gitId":"janelleenqi"},"content":"        List\u003cList\u003cArrayList\u003cString\u003e\u003e\u003e grandparentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-09"},{"lineNumber":195,"author":{"gitId":"janelleenqi"},"content":"        for (int i \u003d 0; i \u003c 12; i++) { //12 time periods","lastModifiedDate":"2023-11-09"},{"lineNumber":196,"author":{"gitId":"janelleenqi"},"content":"            List\u003cArrayList\u003cString\u003e\u003e parentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-09"},{"lineNumber":197,"author":{"gitId":"janelleenqi"},"content":"            for (int j \u003d 0; j \u003c 7; j++) { //7 days","lastModifiedDate":"2023-11-09"},{"lineNumber":198,"author":{"gitId":"janelleenqi"},"content":"                ArrayList\u003cString\u003e childList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-11-09"},{"lineNumber":199,"author":{"gitId":"janelleenqi"},"content":"                fillAndSet(j, childList, parentList);","lastModifiedDate":"2023-11-09"},{"lineNumber":200,"author":{"gitId":"janelleenqi"},"content":"                parentList.add(childList);","lastModifiedDate":"2023-11-09"},{"lineNumber":201,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":202,"author":{"gitId":"janelleenqi"},"content":"            fillAndSet(i, parentList, grandparentList);","lastModifiedDate":"2023-11-09"},{"lineNumber":203,"author":{"gitId":"janelleenqi"},"content":"            grandparentList.add(parentList);","lastModifiedDate":"2023-11-09"},{"lineNumber":204,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":205,"author":{"gitId":"janelleenqi"},"content":"        return grandparentList;","lastModifiedDate":"2023-11-09"},{"lineNumber":206,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":207,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":208,"author":{"gitId":"janelleenqi"},"content":"    public static void addToWeeklyScheduleByTime(int indexParent, int indexChild, String eventName,","lastModifiedDate":"2023-11-09"},{"lineNumber":209,"author":{"gitId":"janelleenqi"},"content":"                                                 List\u003cList\u003cArrayList\u003cString\u003e\u003e\u003e listOfList) {","lastModifiedDate":"2023-11-09"},{"lineNumber":210,"author":{"gitId":"janelleenqi"},"content":"        //\"2D\" array","lastModifiedDate":"2023-11-09"},{"lineNumber":211,"author":{"gitId":"janelleenqi"},"content":"        List\u003cArrayList\u003cString\u003e\u003e parentList \u003d listOfList.get(indexParent);","lastModifiedDate":"2023-11-09"},{"lineNumber":212,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cString\u003e childList \u003d parentList.get(indexChild);","lastModifiedDate":"2023-11-09"},{"lineNumber":213,"author":{"gitId":"janelleenqi"},"content":"        childList.add(eventName);","lastModifiedDate":"2023-11-09"},{"lineNumber":214,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":215,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":216,"author":{"gitId":"ryanlohyr"},"content":"    private static void makeFileReadOnly(String filePath) {","lastModifiedDate":"2023-11-10"},{"lineNumber":217,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":218,"author":{"gitId":"ryanlohyr"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-11-10"},{"lineNumber":219,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":220,"author":{"gitId":"ryanlohyr"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":221,"author":{"gitId":"ryanlohyr"},"content":"                // Set the file read-only","lastModifiedDate":"2023-11-10"},{"lineNumber":222,"author":{"gitId":"ryanlohyr"},"content":"                boolean success \u003d file.setReadOnly();","lastModifiedDate":"2023-11-10"},{"lineNumber":223,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":224,"author":{"gitId":"ryanlohyr"},"content":"                if (success) {","lastModifiedDate":"2023-11-10"},{"lineNumber":225,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(\"File is now read-only.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":226,"author":{"gitId":"ryanlohyr"},"content":"                } else {","lastModifiedDate":"2023-11-10"},{"lineNumber":227,"author":{"gitId":"ryanlohyr"},"content":"                    System.out.println(\"Unable to set the file as read-only.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":228,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-11-10"},{"lineNumber":229,"author":{"gitId":"ryanlohyr"},"content":"            } else {","lastModifiedDate":"2023-11-10"},{"lineNumber":230,"author":{"gitId":"ryanlohyr"},"content":"                System.out.println(\"File does not exist.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":231,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":232,"author":{"gitId":"ryanlohyr"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":233,"author":{"gitId":"ryanlohyr"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-11-10"},{"lineNumber":234,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":235,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":236,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":237,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":238,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-09"},{"lineNumber":239,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":240,"author":{"gitId":"janelleenqi"},"content":"/*","lastModifiedDate":"2023-11-13"},{"lineNumber":241,"author":{"gitId":"janelleenqi"},"content":"public ArrayList\u003cString\u003e getByHour() {","lastModifiedDate":"2023-11-13"},{"lineNumber":242,"author":{"gitId":"janelleenqi"},"content":"    ArrayList\u003cString\u003e eventByHour \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-13"},{"lineNumber":243,"author":{"gitId":"janelleenqi"},"content":"    int eventDurationLeft \u003d getDuration();","lastModifiedDate":"2023-11-13"},{"lineNumber":244,"author":{"gitId":"janelleenqi"},"content":"    while (eventDurationLeft \u003e 0) {","lastModifiedDate":"2023-11-13"},{"lineNumber":245,"author":{"gitId":"janelleenqi"},"content":"        String eventTimeData \u003d getStartTime() + \" \" + (getStartTime() + 1);","lastModifiedDate":"2023-11-13"},{"lineNumber":246,"author":{"gitId":"janelleenqi"},"content":"        eventByHour.add(eventTimeData);","lastModifiedDate":"2023-11-13"},{"lineNumber":247,"author":{"gitId":"janelleenqi"},"content":"        eventDurationLeft -\u003d 1;","lastModifiedDate":"2023-11-13"},{"lineNumber":248,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":249,"author":{"gitId":"janelleenqi"},"content":"    return eventByHour;","lastModifiedDate":"2023-11-13"},{"lineNumber":250,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":251,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":252,"author":{"gitId":"janelleenqi"},"content":"@Override","lastModifiedDate":"2023-11-13"},{"lineNumber":253,"author":{"gitId":"janelleenqi"},"content":"public ArrayList\u003cString\u003e getByHour () {","lastModifiedDate":"2023-11-13"},{"lineNumber":254,"author":{"gitId":"janelleenqi"},"content":"    ArrayList\u003cString\u003e tutorialByHour \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-13"},{"lineNumber":255,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":256,"author":{"gitId":"janelleenqi"},"content":"    int eventDurationLeft \u003d getDuration();","lastModifiedDate":"2023-11-13"},{"lineNumber":257,"author":{"gitId":"janelleenqi"},"content":"    while (eventDurationLeft \u003e 0) {","lastModifiedDate":"2023-11-13"},{"lineNumber":258,"author":{"gitId":"janelleenqi"},"content":"        String tutorialTimeData \u003d \"T \" + getStartTime() + \" \" + (getStartTime() + 1);","lastModifiedDate":"2023-11-13"},{"lineNumber":259,"author":{"gitId":"janelleenqi"},"content":"        tutorialByHour.add(tutorialTimeData);","lastModifiedDate":"2023-11-13"},{"lineNumber":260,"author":{"gitId":"janelleenqi"},"content":"        eventDurationLeft -\u003d 1;","lastModifiedDate":"2023-11-13"},{"lineNumber":261,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":262,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":263,"author":{"gitId":"janelleenqi"},"content":"    return tutorialByHour;","lastModifiedDate":"2023-11-13"},{"lineNumber":264,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":265,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":266,"author":{"gitId":"janelleenqi"},"content":"@Override","lastModifiedDate":"2023-11-13"},{"lineNumber":267,"author":{"gitId":"janelleenqi"},"content":"public ArrayList\u003cString\u003e getByHour () {","lastModifiedDate":"2023-11-13"},{"lineNumber":268,"author":{"gitId":"janelleenqi"},"content":"    ArrayList\u003cString\u003e tutorialByHour \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-13"},{"lineNumber":269,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":270,"author":{"gitId":"janelleenqi"},"content":"    int eventDurationLeft \u003d getDuration();","lastModifiedDate":"2023-11-13"},{"lineNumber":271,"author":{"gitId":"janelleenqi"},"content":"    while (eventDurationLeft \u003e 0) {","lastModifiedDate":"2023-11-13"},{"lineNumber":272,"author":{"gitId":"janelleenqi"},"content":"        String tutorialTimeData \u003d \"T \" + getStartTime() + \" \" + (getStartTime() + 1);","lastModifiedDate":"2023-11-13"},{"lineNumber":273,"author":{"gitId":"janelleenqi"},"content":"        tutorialByHour.add(tutorialTimeData);","lastModifiedDate":"2023-11-13"},{"lineNumber":274,"author":{"gitId":"janelleenqi"},"content":"        eventDurationLeft -\u003d 1;","lastModifiedDate":"2023-11-13"},{"lineNumber":275,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":276,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":277,"author":{"gitId":"janelleenqi"},"content":"    return tutorialByHour;","lastModifiedDate":"2023-11-13"},{"lineNumber":278,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":279,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":280,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":281,"author":{"gitId":"janelleenqi"},"content":"@Override","lastModifiedDate":"2023-11-13"},{"lineNumber":282,"author":{"gitId":"janelleenqi"},"content":"public ArrayList\u003cString\u003e getByHour () {","lastModifiedDate":"2023-11-13"},{"lineNumber":283,"author":{"gitId":"janelleenqi"},"content":"    ArrayList\u003cString\u003e tutorialByHour \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-13"},{"lineNumber":284,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":285,"author":{"gitId":"janelleenqi"},"content":"    int eventDurationLeft \u003d getDuration();","lastModifiedDate":"2023-11-13"},{"lineNumber":286,"author":{"gitId":"janelleenqi"},"content":"    while (eventDurationLeft \u003e 0) {","lastModifiedDate":"2023-11-13"},{"lineNumber":287,"author":{"gitId":"janelleenqi"},"content":"        String tutorialTimeData \u003d \"T \" + getStartTime() + \" \" + (getStartTime() + 1);","lastModifiedDate":"2023-11-13"},{"lineNumber":288,"author":{"gitId":"janelleenqi"},"content":"        tutorialByHour.add(tutorialTimeData);","lastModifiedDate":"2023-11-13"},{"lineNumber":289,"author":{"gitId":"janelleenqi"},"content":"        eventDurationLeft -\u003d 1;","lastModifiedDate":"2023-11-13"},{"lineNumber":290,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":291,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":292,"author":{"gitId":"janelleenqi"},"content":"    return tutorialByHour;","lastModifiedDate":"2023-11-13"},{"lineNumber":293,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":294,"author":{"gitId":"janelleenqi"},"content":"*/","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"ryanlohyr":23,"janelleenqi":271}}]
