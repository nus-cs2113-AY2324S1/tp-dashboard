[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below: i love 2113 ","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"SebasFok":1,"-":63}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"rohitcube"},"content":"    implementation \u0027com.googlecode.json-simple:json-simple:1.1.1\u0027","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName.set(\"duke\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"janelleenqi":1,"rohitcube":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"| Display                        |          Name           |              Github Profile               |                     Portfolio                     |","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"|--------------------------------|:-----------------------:|:-----------------------------------------:|:-------------------------------------------------:|","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"| ![](photos/sebas_pic.png)      | Sebastian Fok Shin Hung |  [Github](https://github.com/SebasFok/)   |         [Portfolio](team/sebastianfok.md)         |","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"| ![](photos/j.png)              |    Liow Enqi Janelle    | [Github](https://github.com/janelleenqi/) |       [Portfolio](team/liowenqijanelle.md)        |","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"| ![](photos/rohit_pic.png)      |         Rohit R         |  [Github](https://github.com/rohitcube)   |           [Portfolio](team/johndoe.md)            |","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"| ![](photos/ryanPic.JPG)        |        Ryan Loh         |  [Github](https://github.com/ryanlohyr)   | [Portfolio](https://ryanlohyr.github.io/ryanloh/) |","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"| ![](photos/isaiah_profile.png) |      Isaiah Cerven      |  [Github](https://github.com/CerIsaiah/)  |            [Portfolio](team/isaiah.md)            |","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"SebasFok":7,"-":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"## Design \u0026 implementation, Architecture","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"![img.png](diagrams/architectureDiagram.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"The Architecture Diagram given above explains the high-level design of the application.","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"The main logic of the application is handled by these four components","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"- **Controller**: ","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"  - Handles Commands coming from the User ","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"  - Combines data from the **Model** and UI Components from **View**","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"  - Never handles data logic","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"- **View**:","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"  - Responsible for printing onto the Command Line Application","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"- **Model**: ","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"  - Response for retrieving data from the **Data Repository** ","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"  - Performs REST API calls to the NUSMODS API","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"- **Data Repository**: ","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"  - Reads data from, and writes data to file","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"### How the architecture components interact with each other","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"![img.png](diagrams/addModule.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"The Sequence Diagram above shows how the components interact with each other when the user inserts a module ","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"into his schedule","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"## Features: ","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"- Pace","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"- Left","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"- Major","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"- Required","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"- Info (description, workload, command)","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"- Search ","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"- Add","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"- Delete","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"- Recommend","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"# Implementation","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"## Pacing and MC Calculation","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"The \"Pacing and MC Calculation\" mechanism is implemented to help users track their academic progress and remaining Modular Credits (MCs) required for graduation. This feature is facilitated by the PacingManager, which stores user data and provides functions for calculating the recommended pacing and remaining MCs. The following operations are available:","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"- PacingManager#calculateRemainingMCs() — Calculates the remaining MCs required for graduation.","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"- PacingManager#calculateRecommendedPace() — Recommends the pacing for upcoming semesters.","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"These operations are exposed in the Pacing interface as Pacing#calculateRemainingMCs() and Pacing#calculateRecommendedPace() respectively.","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"### Usage Examples","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"Here are a few examples of how the \"Pacing and MC Calculation\" feature behaves:","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"#### Example 1: Calculate Remaining MCs","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"Command: `pace Y2/S1` (assuming that the user has completed 60 MCs from Y1S1 to Y2S1)","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"Response:","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"`You currently have 100 MCs left until graduation.`","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"#### Example 2: Calculate Remaining MCs (No Semester Specified)","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"Command: `pace`","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"Response:","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"`You currently have 100 MCs left until graduation.`","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"## Recommend Schedule Based on Course","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"Based on the course, we will provide an recommended schedules that is sorted based on prerequisites. This feature is facilitated by the scheudle manager which stores information about the schedule and performs actions like add and remove from schedule.","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"- PacingManager#recommend() — recommends a scheudle that is sorted based on pre requisites. ","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"- PacingManager#addRecommendedScheduleToSchedule() — adds the recommended schedue to the user\u0027s timetable.","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"These operations are exposed in the Scheulde interface as Schedule#addRecommendedScheduleListToSchedule() and ScheduleGenerator#generateRecommendedSchedule() respectively.","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"### Usage Examples","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"Here are a few examples of how the \"Recommend schedule\" feature behaves:","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"#### Step 1: Recommend schedule for computer engineering(CEG)","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"Command: `recommend ceg` ","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"Response:","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"`[GEA1000, MA1511, MA1512, DTK1234, GESS1000, CS1010, GEN2000, EG2501, EG1311, GEC1000, PF1101, CDE2000, IE2141, CG1111A, EG2401A, ES2631, ST2334, MA1508E, CS1231, CG2023, CG2111A, CS2040C, CG2027, EE2026, EE4204, EE2211, CG2271, CS2113, CG2028, CP3880, CG4002]","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"Do you want to add this to your draft schedule?, please input \u0027Y\u0027 or \u0027N\u0027","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"`","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"#### Step 2 (Only to be done after step 1): ","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"Command: `Y`","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"Response:","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"`","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"Sem 1: GESS1000 DTK1234 MA1512 MA1511 GEA1000 ","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"Sem 2: GEC1000 EG1311 EG2501 GEN2000 CS1010 ","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"Sem 3: EG2401A CG1111A IE2141 CDE2000 PF1101 ","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"Sem 4: CG2023 CS1231 MA1508E ST2334 ES2631 ","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"Sem 5: EE4204 EE2026 CG2027 CS2040C CG2111A ","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"Sem 6: CG2028 CS2113 CG2271 EE2211 ","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"Sem 7: CG4002 CP3880 ","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"Sem 8: `","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"## List Modules Left Feature","lastModifiedDate":"2023-11-03"},{"lineNumber":112,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"janelleenqi"},"content":"The following sequence diagram shows how the Left Command function works.","lastModifiedDate":"2023-11-03"},{"lineNumber":114,"author":{"gitId":"janelleenqi"},"content":"![img.png](diagrams/left_seq_diag.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"The left mechanism is implemented to help users keep tracks of modules left for their major. It is facilitated by `modulesLeft`, `modulesMajor` and `modulesTaken`. Additionally, it implements the following operations:","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"- `student#getModulesMajor()` and `student#getModulesTaken()` – Returns moduleList modulesMajor and modulesTaken respectively.","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"- `modulesMajor#showModulesDiff(modulesTaken)` – Display modules left.","lastModifiedDate":"2023-11-03"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"- `modulesTaken#getMainModuleList()` - Returns ArrayList\u003cModule\u003e of modulesTaken which is the ArrayList of modules taken.","lastModifiedDate":"2023-11-03"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"- `new ModuleList()` - Instantiate modulesLeft.","lastModifiedDate":"2023-11-03"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"This operation is exposed in the `ModulePlannerController` interface as `ModulePlannerController#listModulesLeft()`.","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"### Usage Examples","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"Here are a few examples of how the List Modules Left Feature behaves:","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"janelleenqi"},"content":"#### Example 1: ","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"janelleenqi"},"content":"`modulesMajor#getMainModuleList()` gives modules `CS1231S CS2030S CS2040S CS2100 CS2101 CS2106 CS2109S CS3230`.","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"janelleenqi"},"content":"`modulesTaken#getMainModuleList()` gives modules `CS1231S MA1511`","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"janelleenqi"},"content":"Command: `left`","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"janelleenqi"},"content":"Response:","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"janelleenqi"},"content":"`CS2030S CS2040S CS2100 CS2101 CS2106 CS2109S CS3230`","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"janelleenqi"},"content":"## Input Major Feature","lastModifiedDate":"2023-11-03"},{"lineNumber":139,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"janelleenqi"},"content":"The input major feature is facilitated by `Student`. It tries to store the major specified in userInput txt ","lastModifiedDate":"2023-11-03"},{"lineNumber":141,"author":{"gitId":"SebasFok"},"content":"file such that it can be used across sessions. It will print different responses based on whether the storing of the ","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"SebasFok"},"content":"Major was successful. Additionally, it implements the following operation:","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"SebasFok"},"content":"- `Student#setMajor(Major major)` – Saves the selected major in its memory.","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"SebasFok"},"content":"This operation is exposed in the `Student` interface as `Student#updateMajor(String userInput)`.","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"SebasFok"},"content":"### Usage Examples","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"SebasFok"},"content":"Here are a few examples of how the Input Major Feature behaves:","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"SebasFok"},"content":"#### Example 1:","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"SebasFok"},"content":"If \"CS\" is a valid major: `Student#updateMajor(\"major CS\")` calls `Student#setMajor(\"CS\")`, which sets the Major in the ","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"SebasFok"},"content":"student object as `CS` and returns a string `newMajor`","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"SebasFok"},"content":"Command: `major CS`","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"SebasFok"},"content":"Response: `Major CS selected!`","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"SebasFok"},"content":"#### Example 2:","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"SebasFok"},"content":"If \"abc\" is an invalid major: `Student#updateMajor(\"major abc\")` calls `Student#setMajor(\"abc\")`, which generates an","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"SebasFok"},"content":"IllegalArgumentException, which is caught and returns a string `invalidMajor`","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"SebasFok"},"content":"Command: `major abc`","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"SebasFok"},"content":"Response: `Please select a major from this list: [list of currently available Majors]`","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"SebasFok"},"content":"#### Example 3:","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"SebasFok"},"content":"If no major was specified: `Student#updateMajor(\"major\")` returns a string `currentMajor`","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"SebasFok"},"content":"Command: `major`","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"SebasFok"},"content":"Response: `Current major is [current major in student object].`","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"janelleenqi"},"content":"## Required Command","lastModifiedDate":"2023-11-03"},{"lineNumber":176,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":177,"author":{"gitId":"janelleenqi"},"content":"The following sequence diagram shows how the Required Command function works.","lastModifiedDate":"2023-11-03"},{"lineNumber":178,"author":{"gitId":"janelleenqi"},"content":"![img.png](diagrams/required_seq_diag.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":179,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"janelleenqi"},"content":"The required command is implemented to give users an overview of the modules they need to complete for ","lastModifiedDate":"2023-11-03"},{"lineNumber":181,"author":{"gitId":"janelleenqi"},"content":"their major. It is facilitated by major. Additionally, it implements the following operations:","lastModifiedDate":"2023-11-03"},{"lineNumber":182,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"janelleenqi"},"content":"- `Student#getMajor()` – Returns the `major` of the student.","lastModifiedDate":"2023-11-03"},{"lineNumber":184,"author":{"gitId":"janelleenqi"},"content":"- `ModuleServiceController#getRequiredModules(major)` and `ModuleServiceController#printRequiredModules(major)` – ","lastModifiedDate":"2023-11-03"},{"lineNumber":185,"author":{"gitId":"janelleenqi"},"content":"Displays the modules required.","lastModifiedDate":"2023-11-03"},{"lineNumber":186,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":187,"author":{"gitId":"rohitcube"},"content":"### Usage Examples","lastModifiedDate":"2023-11-01"},{"lineNumber":188,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":189,"author":{"gitId":"rohitcube"},"content":"Here are a few examples of how the Show Required Modules Feature behaves:","lastModifiedDate":"2023-11-01"},{"lineNumber":190,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":191,"author":{"gitId":"rohitcube"},"content":"#### Example 1:","lastModifiedDate":"2023-11-01"},{"lineNumber":192,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":193,"author":{"gitId":"rohitcube"},"content":"Command: `required`","lastModifiedDate":"2023-11-01"},{"lineNumber":194,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":195,"author":{"gitId":"rohitcube"},"content":"Response:","lastModifiedDate":"2023-11-01"},{"lineNumber":196,"author":{"gitId":"rohitcube"},"content":"Module requirements for major selected by user","lastModifiedDate":"2023-11-01"},{"lineNumber":197,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":198,"author":{"gitId":"janelleenqi"},"content":"## Get information about modules (from the NUSMods API)","lastModifiedDate":"2023-11-03"},{"lineNumber":199,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":200,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":201,"author":{"gitId":"janelleenqi"},"content":"The information feature returns information about the module at the user\u0027s request. It accepts 3 commands, ","lastModifiedDate":"2023-11-03"},{"lineNumber":202,"author":{"gitId":"rohitcube"},"content":"\u0027description\u0027, \u0027workload\u0027 and \u0027all\u0027. The \u0027description\u0027 command returns a string description of the module, the workload","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"rohitcube"},"content":"command returns an array, and all displays the module title and module code for all modules present in the NUSMods ","lastModifiedDate":"2023-11-01"},{"lineNumber":204,"author":{"gitId":"rohitcube"},"content":"directory.","lastModifiedDate":"2023-11-01"},{"lineNumber":205,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":206,"author":{"gitId":"rohitcube"},"content":"- `getFullModuleInfo(major)` – Returns the `filePath` for the requirements of a specified major.","lastModifiedDate":"2023-11-01"},{"lineNumber":207,"author":{"gitId":"rohitcube"},"content":"- `sendHttpRequestAndGetResponseBody(String url)` – Displays the overview of modules required.","lastModifiedDate":"2023-11-01"},{"lineNumber":208,"author":{"gitId":"rohitcube"},"content":"- `getDescription(String moduleCode)` – Returns the `longestLineLength` of the file f.","lastModifiedDate":"2023-11-01"},{"lineNumber":209,"author":{"gitId":"rohitcube"},"content":"- `getWorkload(String moduleCode)` – Returns a string with a justified name according to length, appended with its description.","lastModifiedDate":"2023-11-01"},{"lineNumber":210,"author":{"gitId":"rohitcube"},"content":"- `listAllModules(), `printDoubleTopLine()`, `printBottomLine()`, `printDoubleBottomLine()` – Displays lines for formatting","lastModifiedDate":"2023-11-01"},{"lineNumber":211,"author":{"gitId":"rohitcube"},"content":"- `infoCommands(String command, String userInput), `printDoubleTopLine()`, `printBottomLine()`, `printDoubleBottomLine()` – Displays lines for formatting","lastModifiedDate":"2023-11-01"},{"lineNumber":212,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"janelleenqi"},"content":"### Usage Examples","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"janelleenqi"},"content":"Here are a few examples of how the Show Required Modules Feature behaves:","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"janelleenqi"},"content":"#### Example 1:","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"janelleenqi"},"content":"Command: `required`","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"janelleenqi"},"content":"Response:","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"janelleenqi"},"content":"Module requirements for major selected by user","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":249,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":251,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"SebasFok":40,"ryanlohyr":81,"janelleenqi":69,"rohitcube":24,"-":37}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"# NUSDegs User Guide","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"NUSDegs streamlines computing degree planning by offering personalized module schedules, tracking progress, ","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"and ensuring on-time graduation. It eliminates guesswork, reduces stress, and saves time for students. ","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"It\u0027s a comprehensive tool for efficient and successful degree completion.","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Down the latest version of `Duke` from [here](http://link.to/duke).","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"- Left","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"- Required","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"- Complete","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"- Info","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"- Search","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"- Major","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"- Add","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"- Delete","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"- recommend","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"- prereq","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"### Checking modules left: `left`","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"Displays the modules left, which are the modules required for the user\u0027s major that have not been completed.","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"Format: `left`","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"Example of usage 1: (scenario where user\u0027s selected major is CEG)","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"User input: ","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"`left`","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"![ss_left_ceg.png](screenshots%2Fss_left_ceg.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"### Getting a list of required modules: `required`","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"Get an overview of required modules for the user\u0027s major","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"Format: `required`","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"Example of usage 1: (scenario where user\u0027s selected major is CEG)","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"User input:","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"`required`","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"SebasFok"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"![ss_required_ceg.png](screenshots%2Fss_required_ceg.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"![ss_required_ceg2.png](screenshots%2Fss_required_ceg2.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"### Complete a module: `complete`","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"Completes a module (not displayed when the feature `left` is used).","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"Format: `complete`","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"Example of usage 1: (scenario where user\u0027s selected major is CEG)","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"User input:","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"`complete ma1511`","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"Expected outcome:","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"`Mod completed: MA1511`","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"Changes to modules left are shown when","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"User input:","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"`left`","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"Expected outcome:","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"![ss_complete_ceg.png](screenshots%2Fss_complete_ceg.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"rohitcube"},"content":"### Get information about a module: `info`","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"rohitcube"},"content":"Get information about a module using the info command, followed by one of the commands \u0027description\u0027, \u0027workload\u0027 ","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"rohitcube"},"content":"and \u0027all\u0027.","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"rohitcube"},"content":"Format: `info n/command n/moduleCode`","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":84,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"rohitcube"},"content":"* The `command` cannot be empty.","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"rohitcube"},"content":"* The `moduleCode` cannot be empty.","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"rohitcube"},"content":"`info description CS2113`","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"SebasFok"},"content":"- Expected outcome: This course introduces the necessary skills for systematic and rigorous development of software systems. It covers requirements, design, implementation, quality assurance, and project management aspects of small-to-medium size multi-person software projects. The course uses the Object Oriented Programming paradigm. Students of this course will receive hands-on practice of tools commonly used in the industry, such as test automation tools, build automation tools, and code revisioning tools will be covered.","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"rohitcube"},"content":"`info workload CS2113`","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"SebasFok"},"content":"- Expected outcome: \"[2,1,0,3,4]\"","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"SebasFok"},"content":"`info all`","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"- Expected outcome: Displays module title and module code of all available modules","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"rohitcube"},"content":"### Searching for a module by title: `search`","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"rohitcube"},"content":"Search for module title using a keyword.","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"rohitcube"},"content":"Format: `search n/KEYWORD`","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"rohitcube"},"content":"* The `KEYWORD` cannot be empty.","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2020-05-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":112,"author":{"gitId":"rohitcube"},"content":"`search n/Darwinian`","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":114,"author":{"gitId":"SebasFok"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"rohitcube"},"content":"These are the modules that contain your keyword in the title:","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":117,"author":{"gitId":"SebasFok"},"content":"### Selecting your current major: `major`","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"SebasFok"},"content":"Saves the selected major into the programme if a major is specified.","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"SebasFok"},"content":"Returns the current saved major if no major is specified.","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"SebasFok"},"content":"Format: `major n/MAJOR`","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"* The `MAJOR` is an optional argument to update current major and can be CEG (upcoming feature includes CS).","lastModifiedDate":"2023-11-03"},{"lineNumber":124,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"SebasFok"},"content":"Examples of usage:","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"SebasFok"},"content":"`major CEG`","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"SebasFok"},"content":"- Expected outcome: \"Major CEG selected!\"","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"SebasFok"},"content":"`major` (Assume CEG has been selected by the previous command)","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"SebasFok"},"content":"- Expected outcome: \"Current major is CEG.\"","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"ryanlohyr"},"content":"### View recommended schedule based on course: recommend","lastModifiedDate":"2023-11-03"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"Based on the course, we will provide an recommended schedules that is sorted based on prerequisites.","lastModifiedDate":"2023-11-03"},{"lineNumber":137,"author":{"gitId":"ryanlohyr"},"content":"Format: `recommend MAJOR_CODE`","lastModifiedDate":"2023-11-03"},{"lineNumber":138,"author":{"gitId":"ryanlohyr"},"content":"The input is not case sensitive. E.g CEG or ceg is shown (Currently only works for CEG)","lastModifiedDate":"2023-11-03"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":140,"author":{"gitId":"ryanlohyr"},"content":"Examples:","lastModifiedDate":"2023-11-03"},{"lineNumber":141,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":142,"author":{"gitId":"ryanlohyr"},"content":"Recommend ceg","lastModifiedDate":"2023-11-03"},{"lineNumber":143,"author":{"gitId":"ryanlohyr"},"content":"[CS1010, MA1511, MA1508E, … ,.... ,.... ,... EE4027] (modules required for the degree will be shown)","lastModifiedDate":"2023-11-03"},{"lineNumber":144,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":145,"author":{"gitId":"ryanlohyr"},"content":"### View module prerequisites: prereq ","lastModifiedDate":"2023-11-03"},{"lineNumber":146,"author":{"gitId":"ryanlohyr"},"content":"Based on the module selected, we will show what prerequisites the course has in a form of an array. Since NUS has the concept of preclusions, when prerequisites are shown, it is shown based on the degree of the current user, which is currently only computer science and computer engineering students.","lastModifiedDate":"2023-11-03"},{"lineNumber":147,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":148,"author":{"gitId":"ryanlohyr"},"content":"Format: `prepreq MODULE_CODE`","lastModifiedDate":"2023-11-03"},{"lineNumber":149,"author":{"gitId":"ryanlohyr"},"content":"The input is not case sensitive. E.g eg1311 or EG1311 is shown","lastModifiedDate":"2023-11-03"},{"lineNumber":150,"author":{"gitId":"ryanlohyr"},"content":"out","lastModifiedDate":"2023-11-03"},{"lineNumber":151,"author":{"gitId":"ryanlohyr"},"content":"Examples:","lastModifiedDate":"2023-11-03"},{"lineNumber":152,"author":{"gitId":"ryanlohyr"},"content":"`Command: prepreq eg1311` (assuming the user is from computer engineering)","lastModifiedDate":"2023-11-03"},{"lineNumber":153,"author":{"gitId":"ryanlohyr"},"content":"[CS1010, MA1511, MA1508E]","lastModifiedDate":"2023-11-03"},{"lineNumber":154,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":155,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":156,"author":{"gitId":"ryanlohyr"},"content":"Command: pace","lastModifiedDate":"2023-11-03"},{"lineNumber":157,"author":{"gitId":"ryanlohyr"},"content":"You currently have 100MCs left until graduation","lastModifiedDate":"2023-11-03"},{"lineNumber":158,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":159,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"SebasFok"},"content":"### Add module to schedule: `add`","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"SebasFok"},"content":"Opens the user\u0027s personalized module schedule and adds the chosen module to the semester specified by the user.","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"SebasFok"},"content":"Format: `add n/MODULE n/SEMESTER`","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"SebasFok"},"content":"* The `MODULE` cannot be empty and must be valid.","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"SebasFok"},"content":"* The `SEMESTER` cannot be empty and must be an integer between 1-8 inclusive.","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"SebasFok"},"content":"Examples of usage:","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"SebasFok"},"content":"`add CS1010 1`","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"SebasFok"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"SebasFok"},"content":"![](photos/add_outcome.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"SebasFok"},"content":"### Delete module from schedule: `delete`","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"SebasFok"},"content":"Opens the user\u0027s personalized module schedule and deletes the chosen module.","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"SebasFok"},"content":"Format: `delete n/MODULE`","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"SebasFok"},"content":"* The `MODULE` cannot be empty and must be valid.","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"SebasFok"},"content":"Examples of usage:","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"SebasFok"},"content":"`delete CS1010` (Assume schedule is currently in the state from the example in `add`)","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"SebasFok"},"content":"- Expected outcome:","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"SebasFok"},"content":"![](photos/delete_outcome.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":195,"author":{"gitId":"janelleenqi"},"content":"**A**: Currently, this feature is not included in NUSDegs.","lastModifiedDate":"2023-11-03"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"* Add todo `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"},{"lineNumber":202,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"SebasFok":63,"ryanlohyr":26,"janelleenqi":51,"rohitcube":24,"-":38}},{"path":"docs/diagrams/Left.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"@startuml","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"autonumber","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"actor Student","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"participant \"controller:ModulePlannerController\" as A #white","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"participant \"student:Student\" as S #white","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"participant \"modulesMajor:ModuleList\" as M #white","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"participant \"modulesTaken:ModuleList\" as T #white","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"participant \"modulesLeft:ModuleList\" as L #white","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"Student -\u003e A: Execute \u0027Left\u0027 Command","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"A -\u003e S: getModulesMajor()","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"activate S","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"S --\u003e A: Return modulesMajor:ModuleList","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"deactivate S","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"A -\u003e S: getModulesTaken()","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"activate S","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"S --\u003e A: Return modulesTaken:ModuleList","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"deactivate S","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"A -\u003e M: modulesMajor.showModulesDiff(modulesTaken)","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"activate M","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"M -\u003e T: getMainModuleList()","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"activate T","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"T --\u003e M: Return Modules Taken","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"deactivate T","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"create L","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"M -\u003e L: ModuleList()","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"activate L","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"L --\u003e M: Return Modules Left","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"destroy L","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"A \u003c-- M: Display Modules Left","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"deactivate M","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"Student \u003c-- A: Display Modules Left","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"@enduml","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"janelleenqi":45}},{"path":"docs/diagrams/Required.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"@startuml","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"\u0027legend top left","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"\u0027  \u003ccolor blue\u003e Blue activation \u003c/color\u003e denote public method calls","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"\u0027  \u003ccolor red\u003e Red activation\u003c/color\u003e denote private method calls","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"\u0027endlegend","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"autonumber","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"autoactivate on","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"actor Student","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"participant \"controller:ModulePlannerController\" as A #white","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"participant \"student:Student\" as S #white","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"participant \"ModuleServiceController\" as MSC #white","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"Student -\u003e A: Execute \u0027Required\u0027 Command","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"A -\u003e S: getMajor()","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"\u0027activate S","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"S --\u003e A: Return major","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"\u0027deactivate S","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"A -\u003e MSC: getRequiredModules(major)","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"\u0027activate MSC","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"MSC -\u003e MSC: printRequiredModules(major)","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"MSC --\u003e MSC: Display Required Modules","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"MSC --\u003e A: Display Required Modules","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"\u0027deactivate MSC","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"Student \u003c-- A: Display Modules Left","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"@enduml","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"janelleenqi":35}},{"path":"docs/team/isaiah.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CerIsaiah"},"content":"# Isaiah - Project Portfolio Page","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"CerIsaiah"},"content":"## Overview","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"CerIsaiah"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"CerIsaiah":6}},{"path":"docs/team/liowenqijanelle.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"# Liow Enqi Janelle - Project Portfolio Page","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"## Overview","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"janelleenqi":6}},{"path":"docs/team/sebastianfok.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"# Sebastian Fok - Project Portfolio Page","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"## Overview","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"SebasFok":6}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"rohitcube"},"content":"import seedu.duke.controllers.ModulePlannerController;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"        ModulePlannerController controller \u003d new ModulePlannerController();","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"        controller.start();","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ryanlohyr":2,"rohitcube":1,"-":10}},{"path":"src/main/java/seedu/duke/controllers/ModuleMethodsController.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.exceptions.FailPrereqException;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.exceptions.MissingModuleException;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.logic.CompletePreqs;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.Parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.views.CommandLineView;","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.controllers.ModuleServiceController.chooseToAddToSchedule;","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.Api.doesModuleExist;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.Api.getModulePrereqBasedOnCourse;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.MajorRequirements.printRequiredModules;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.ScheduleGenerator.generateRecommendedSchedule;","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.displayMessage;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.displaySuccessfulAddMessage;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.showPrereqCEG;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.displaySuccessfulDeleteMessage;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.ModuleInfoView.printModuleStringArray;","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":" * This class houses all the methods for the Module Planner controller.","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":" * It provides functionality for computing the recommended pace, showing modules left,","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":" * adding, deleting, completing modules,","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":" * It provides functionality for computing the recommended pace,","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":" * showing modules left, adding, deleting, completing modules,","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":" * and getting required modules for a student.","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":" *","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":" * @author ryanlohyr","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"public class ModuleMethodsController {","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"     * Computes and displays the recommended pace for completing remaining module credits until graduation.","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"     * @author ryanlohyr","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"     * @param arguments              An array of strings containing academic year and semester information.","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"     * @param completedModuleCredits The number of module credits already completed by the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"    static void computePace(String[] arguments, int completedModuleCredits) {","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"        int totalCreditsToGraduate \u003d 160;","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"        int creditsLeft \u003d totalCreditsToGraduate - completedModuleCredits;","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"        boolean argumentProvided \u003d arguments.length !\u003d 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"        if (!argumentProvided) {","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(\"You currently have \" + creditsLeft + \" MCs till graduation\");","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"            return;","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"        if (!Parser.isValidAcademicYear(arguments[0])) {","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"            return;","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"        String[] parts \u003d arguments[0].split(\"/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"        String year \u003d parts[0].toUpperCase();","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"        String semester \u003d parts[1].toUpperCase();","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"        int lastSemesterOfYear \u003d 2;","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"        int lastYearOfDegree \u003d 4;","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"        int yearIntValue \u003d Character.getNumericValue(year.charAt(1));","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"        int semesterIntValue \u003d Character.getNumericValue(semester.charAt(1));","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"        //if we are at y2s1, we have 5 semesters left","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"        int semestersLeft \u003d (lastYearOfDegree - yearIntValue) * 2 + (lastSemesterOfYear - semesterIntValue);","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"        int creditsPerSem \u003d Math.round((float) creditsLeft / semestersLeft);","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"        displayMessage(\"You have \" + creditsLeft + \"MCs for \" + semestersLeft + \" semesters. \"","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"                + \"Recommended Pace: \" + creditsPerSem + \"MCs per sem until graduation\");","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"    public static void showModulesLeft(ArrayList\u003cString\u003e moduleCodes) {","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"        printModuleStringArray(moduleCodes);","lastModifiedDate":"2023-11-04"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"    public static void addModule(String module, int targetSem, Student student) {","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"            student.addModuleSchedule(module, targetSem);","lastModifiedDate":"2023-11-04"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"            displaySuccessfulAddMessage();","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"            student.printSchedule();","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"        } catch (InvalidObjectException | IllegalArgumentException e) {","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(e.getMessage());","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"        } catch (FailPrereqException f) {","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"            showPrereqCEG(module);","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(f.getMessage());","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"    public static void recommendScheduleToStudent(Student student){","lastModifiedDate":"2023-11-04"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"        CommandLineView.displayMessage(\"Hold on a sec! Generating your recommended schedule \u003c3....\");","lastModifiedDate":"2023-11-04"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e recommendedSchedule \u003d generateRecommendedSchedule(student.getMajor());","lastModifiedDate":"2023-11-04"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"        chooseToAddToSchedule(student, recommendedSchedule);","lastModifiedDate":"2023-11-04"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"    public static void deleteModule(String module, Student student) {","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"            student.deleteModuleSchedule(module);","lastModifiedDate":"2023-11-04"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"            displaySuccessfulDeleteMessage();","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"            student.printSchedule();","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"        } catch (MissingModuleException | FailPrereqException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(e.getMessage());","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"    public static boolean canCompleteModule(","lastModifiedDate":"2023-11-04"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"            String[] arguments,","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"janelleenqi"},"content":"            ArrayList\u003cString\u003e majorModuleCodes,","lastModifiedDate":"2023-11-04"},{"lineNumber":109,"author":{"gitId":"janelleenqi"},"content":"            //ModuleList modulesTaken,","lastModifiedDate":"2023-11-04"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"            CompletePreqs addModulePreqs) {","lastModifiedDate":"2023-11-03"},{"lineNumber":111,"author":{"gitId":"janelleenqi"},"content":"        if (addModulePreqs.checkModInput(arguments, majorModuleCodes)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"            String moduleCompleted \u003d arguments[0].toUpperCase();","lastModifiedDate":"2023-11-03"},{"lineNumber":113,"author":{"gitId":"ryanlohyr"},"content":"            addModulePreqs.getUnlockedMods(moduleCompleted);","lastModifiedDate":"2023-11-03"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"            addModulePreqs.printUnlockedMods(moduleCompleted);","lastModifiedDate":"2023-11-03"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"            //modulesTaken.addModule(moduleCompleted);","lastModifiedDate":"2023-11-04"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"            return true;","lastModifiedDate":"2023-11-04"},{"lineNumber":117,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"        return false;","lastModifiedDate":"2023-11-04"},{"lineNumber":120,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":121,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":124,"author":{"gitId":"ryanlohyr"},"content":"    public static void getRequiredModulesForStudent(String major) {","lastModifiedDate":"2023-11-03"},{"lineNumber":125,"author":{"gitId":"ryanlohyr"},"content":"        printRequiredModules(major);","lastModifiedDate":"2023-11-03"},{"lineNumber":126,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":127,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":128,"author":{"gitId":"ryanlohyr"},"content":"    public static void determinePrereq(String moduleCode, String major) {","lastModifiedDate":"2023-11-03"},{"lineNumber":129,"author":{"gitId":"ryanlohyr"},"content":"        boolean exist \u003d doesModuleExist(moduleCode);","lastModifiedDate":"2023-11-03"},{"lineNumber":130,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":131,"author":{"gitId":"ryanlohyr"},"content":"        if (!exist) {","lastModifiedDate":"2023-11-03"},{"lineNumber":132,"author":{"gitId":"ryanlohyr"},"content":"            return;","lastModifiedDate":"2023-11-03"},{"lineNumber":133,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":134,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":135,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e prereq \u003d getModulePrereqBasedOnCourse(moduleCode, major);","lastModifiedDate":"2023-11-03"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"        if(prereq \u003d\u003d null || prereq.isEmpty()){","lastModifiedDate":"2023-11-04"},{"lineNumber":137,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(\"Module \" + moduleCode + \" has no prerequisites.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":138,"author":{"gitId":"ryanlohyr"},"content":"        }else{","lastModifiedDate":"2023-11-04"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(prereq);","lastModifiedDate":"2023-11-04"},{"lineNumber":140,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":141,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":142,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":143,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":144,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":145,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"ryanlohyr":129,"janelleenqi":16}},{"path":"src/main/java/seedu/duke/controllers/ModulePlannerController.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.logic.CompletePreqs;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.ModuleList;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.Schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.CommandManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.UserCommands;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.logic.Api;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.views.CommandLineView;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.Parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.errors.UserError;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"CerIsaiah"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"CerIsaiah"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.controllers.ModuleMethodsController.determinePrereq;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.controllers.ModuleMethodsController.showModulesLeft;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.controllers.ModuleMethodsController.computePace;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.controllers.ModuleMethodsController.getRequiredModulesForStudent;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.controllers.ModuleMethodsController.canCompleteModule;","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.controllers.ModuleMethodsController.deleteModule;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.controllers.ModuleMethodsController.addModule;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.controllers.ModuleMethodsController.recommendScheduleToStudent;","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.utils.Parser.parseArguments;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.utils.Parser.parseCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.controllers.ModuleServiceController.validateMajorInput;","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.displayWelcome;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.displayReady;","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.displayGoodbye;","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.displayGetMajor;","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.displayGetYear;","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.printListOfCommands;","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"public class ModulePlannerController {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"    private CommandLineView view;","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"    private Parser parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"    private Student student;","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"    private ModuleList modulesMajor;","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"    private ModuleList modulesTaken;","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"    private ModuleList modulesLeft;","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"CerIsaiah"},"content":"    private HashMap\u003cString, List\u003cString\u003e\u003e modsWithPreqs;","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"CerIsaiah"},"content":"    private CompletePreqs addModulePreqs;","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"    private CommandManager commandManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"    public ModulePlannerController() {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"        this.commandManager \u003d new CommandManager();","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"SebasFok"},"content":"        this.student \u003d new Student();","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"CerIsaiah"},"content":"        //This modules list of taken and classes left can be in a storage class later on.","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"        this.modulesMajor \u003d null;","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"        this.modulesTaken \u003d new ModuleList();","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"        this.modulesLeft \u003d new ModuleList();","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"        Schedule schedule \u003d new Schedule();","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"SebasFok"},"content":"        student.setSchedule(schedule);","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"CerIsaiah"},"content":"        modsWithPreqs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"CerIsaiah"},"content":"        //Pass in Hashmap of mods with Preqs","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"CerIsaiah"},"content":"        this.addModulePreqs \u003d new CompletePreqs(addModsWithPreqs(modsWithPreqs));","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"CerIsaiah"},"content":"        //Pass in the list of mods completed.","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"CerIsaiah"},"content":"        addModulePreqs.initializeCompletedMods(modulesTaken);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"     * Starts the application, guiding the user through its execution.","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"     * This method performs the following steps:","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"     * 1. Display a welcome message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"     * 2. Initialize user-related data or settings.","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"     * 3. Display a message indicating that the application is ready for input.","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"     * 4. Handle user input until an exit command is given.","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"     * 5. Display a goodbye message when the application is finished.\\","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"     * @author ryanlohyr","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"rohitcube"},"content":"    public void start() {","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"        displayWelcome();","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"        initialiseUser();","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"        displayReady();","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"        handleUserInputTillExitCommand();","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"        displayGoodbye();","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"    public void initialiseUser() {","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"        String userInput;","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"        do {","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Please enter your name: \");","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"            userInput \u003d in.nextLine().trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"        } while (!parser.checkNameInput(userInput, commandManager.getListOfCommands()));","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"        student.setName(userInput);","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"        // Get and set student\u0027s major","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"        displayGetMajor(student.getName());","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"        do {","lastModifiedDate":"2023-11-03"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"            userInput \u003d in.nextLine().trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"        } while (!validateMajorInput(userInput));","lastModifiedDate":"2023-11-04"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"        student.setFirstMajor(userInput);","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"        // Get and set student\u0027s year","lastModifiedDate":"2023-11-03"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"        displayGetYear();","lastModifiedDate":"2023-11-03"},{"lineNumber":111,"author":{"gitId":"ryanlohyr"},"content":"        do {","lastModifiedDate":"2023-11-03"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"            userInput \u003d in.nextLine().trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":113,"author":{"gitId":"ryanlohyr"},"content":"        } while (!Parser.isValidAcademicYear(userInput.toUpperCase()));","lastModifiedDate":"2023-11-03"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"        student.setYear(userInput.toUpperCase());","lastModifiedDate":"2023-11-03"},{"lineNumber":115,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":116,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"ryanlohyr"},"content":"    public void handleUserInputTillExitCommand() {","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"ryanlohyr"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"ryanlohyr"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"ryanlohyr"},"content":"        String command \u003d parseCommand(userInput);","lastModifiedDate":"2023-11-03"},{"lineNumber":123,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"ryanlohyr"},"content":"        while (!command.equals(UserCommands.EXIT_COMMAND)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":125,"author":{"gitId":"ryanlohyr"},"content":"            command \u003d parseCommand(userInput);","lastModifiedDate":"2023-11-03"},{"lineNumber":126,"author":{"gitId":"ryanlohyr"},"content":"            String[] arguments \u003d parseArguments(userInput);","lastModifiedDate":"2023-11-03"},{"lineNumber":127,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"ryanlohyr"},"content":"            if(!commandManager.getListOfCommands().contains(command)){","lastModifiedDate":"2023-11-03"},{"lineNumber":129,"author":{"gitId":"ryanlohyr"},"content":"                UserError.displayInvalidInputCommand(command);","lastModifiedDate":"2023-11-03"},{"lineNumber":130,"author":{"gitId":"ryanlohyr"},"content":"                userInput \u003d in.nextLine();","lastModifiedDate":"2023-11-03"},{"lineNumber":131,"author":{"gitId":"ryanlohyr"},"content":"                continue;","lastModifiedDate":"2023-11-03"},{"lineNumber":132,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":133,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"ryanlohyr"},"content":"            boolean validInput \u003d Parser.isValidInputForCommand(command, arguments);","lastModifiedDate":"2023-11-03"},{"lineNumber":135,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"            if (!validInput) {","lastModifiedDate":"2023-11-03"},{"lineNumber":137,"author":{"gitId":"ryanlohyr"},"content":"                UserError.displayInvalidMethodCommand(command);","lastModifiedDate":"2023-11-03"},{"lineNumber":138,"author":{"gitId":"ryanlohyr"},"content":"                userInput \u003d in.nextLine();","lastModifiedDate":"2023-11-03"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"                continue;","lastModifiedDate":"2023-11-03"},{"lineNumber":140,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":142,"author":{"gitId":"ryanlohyr"},"content":"            processCommand(command, arguments, userInput);","lastModifiedDate":"2023-11-03"},{"lineNumber":143,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":144,"author":{"gitId":"ryanlohyr"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2023-11-03"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"ryanlohyr"},"content":"        in.close();","lastModifiedDate":"2023-11-03"},{"lineNumber":147,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":148,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":149,"author":{"gitId":"ryanlohyr"},"content":"    private void processCommand(String command, String[] arguments, String userInput) {","lastModifiedDate":"2023-11-03"},{"lineNumber":150,"author":{"gitId":"ryanlohyr"},"content":"        switch (command) {","lastModifiedDate":"2023-11-03"},{"lineNumber":151,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommands.LEFT_COMMAND: {","lastModifiedDate":"2023-11-03"},{"lineNumber":152,"author":{"gitId":"janelleenqi"},"content":"            showModulesLeft(student.getModuleCodesLeft());","lastModifiedDate":"2023-11-04"},{"lineNumber":153,"author":{"gitId":"janelleenqi"},"content":"            break;","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommands.PACE_COMMAND: {","lastModifiedDate":"2023-11-03"},{"lineNumber":156,"author":{"gitId":"ryanlohyr"},"content":"            computePace(arguments, student.getCurrentModuleCredits());","lastModifiedDate":"2023-11-03"},{"lineNumber":157,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommands.PREREQUISITE_COMMAND: {","lastModifiedDate":"2023-11-03"},{"lineNumber":160,"author":{"gitId":"ryanlohyr"},"content":"            String module \u003d arguments[0];","lastModifiedDate":"2023-11-03"},{"lineNumber":161,"author":{"gitId":"ryanlohyr"},"content":"            determinePrereq(module.toUpperCase(), student.getMajor()); //to convert \"CEG\" to dynamic course","lastModifiedDate":"2023-11-03"},{"lineNumber":162,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-28"},{"lineNumber":163,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":164,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommands.RECOMMEND_COMMAND: {","lastModifiedDate":"2023-11-03"},{"lineNumber":165,"author":{"gitId":"ryanlohyr"},"content":"            recommendScheduleToStudent(student);","lastModifiedDate":"2023-11-04"},{"lineNumber":166,"author":{"gitId":"SebasFok"},"content":"            break;","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommands.ADD_MODULE_COMMAND: {","lastModifiedDate":"2023-11-03"},{"lineNumber":169,"author":{"gitId":"ryanlohyr"},"content":"            String module \u003d arguments[0].toUpperCase();","lastModifiedDate":"2023-11-03"},{"lineNumber":170,"author":{"gitId":"ryanlohyr"},"content":"            int targetSem \u003d Integer.parseInt(arguments[1]);","lastModifiedDate":"2023-11-03"},{"lineNumber":171,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":172,"author":{"gitId":"janelleenqi"},"content":"            addModule(module, targetSem, student);","lastModifiedDate":"2023-11-04"},{"lineNumber":173,"author":{"gitId":"SebasFok"},"content":"            break;","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":175,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommands.DELETE_MODULE_COMMAND: {","lastModifiedDate":"2023-11-03"},{"lineNumber":176,"author":{"gitId":"ryanlohyr"},"content":"            String module \u003d arguments[0].toUpperCase();","lastModifiedDate":"2023-11-03"},{"lineNumber":177,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":178,"author":{"gitId":"janelleenqi"},"content":"            deleteModule(module,student);","lastModifiedDate":"2023-11-04"},{"lineNumber":179,"author":{"gitId":"SebasFok"},"content":"            break;","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommands.VIEW_SCHEDULE_COMMAND: {","lastModifiedDate":"2023-11-03"},{"lineNumber":182,"author":{"gitId":"ryanlohyr"},"content":"            student.printSchedule();","lastModifiedDate":"2023-11-03"},{"lineNumber":183,"author":{"gitId":"SebasFok"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommands.COMPLETE_MODULE_COMMAND: {","lastModifiedDate":"2023-11-03"},{"lineNumber":186,"author":{"gitId":"janelleenqi"},"content":"            String module \u003d arguments[0].toUpperCase();","lastModifiedDate":"2023-11-03"},{"lineNumber":187,"author":{"gitId":"ryanlohyr"},"content":"            //to add to user completed module","lastModifiedDate":"2023-11-03"},{"lineNumber":188,"author":{"gitId":"janelleenqi"},"content":"            if (canCompleteModule(arguments, student.getMajorModuleCodes(), addModulePreqs)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":189,"author":{"gitId":"janelleenqi"},"content":"                student.completeModuleSchedule(module);","lastModifiedDate":"2023-11-04"},{"lineNumber":190,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":191,"author":{"gitId":"CerIsaiah"},"content":"            break;","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommands.REQUIRED_MODULES_COMMAND: {","lastModifiedDate":"2023-11-03"},{"lineNumber":194,"author":{"gitId":"ryanlohyr"},"content":"            getRequiredModulesForStudent(student.getMajor());","lastModifiedDate":"2023-11-03"},{"lineNumber":195,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-30"},{"lineNumber":196,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":197,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommands.INFO_COMMAND: {","lastModifiedDate":"2023-11-03"},{"lineNumber":198,"author":{"gitId":"ryanlohyr"},"content":"            Api.infoCommands(arguments[0], userInput);","lastModifiedDate":"2023-11-03"},{"lineNumber":199,"author":{"gitId":"rohitcube"},"content":"            break;","lastModifiedDate":"2023-10-30"},{"lineNumber":200,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":201,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommands.SEARCH_MODULE_COMMAND: {","lastModifiedDate":"2023-11-03"},{"lineNumber":202,"author":{"gitId":"rohitcube"},"content":"            Api.searchCommand(userInput);","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-30"},{"lineNumber":204,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":205,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommands.HELP_COMMAND: {","lastModifiedDate":"2023-11-03"},{"lineNumber":206,"author":{"gitId":"ryanlohyr"},"content":"            printListOfCommands(commandManager);","lastModifiedDate":"2023-11-03"},{"lineNumber":207,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-11-03"},{"lineNumber":208,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":209,"author":{"gitId":"ryanlohyr"},"content":"        default: {","lastModifiedDate":"2023-10-12"},{"lineNumber":210,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-12"},{"lineNumber":211,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":212,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":213,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":214,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":215,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":216,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":217,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":218,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"CerIsaiah"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"CerIsaiah"},"content":"     * Add all mods that require prerequisites to a map storing the mod and a set of preqs","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":222,"author":{"gitId":"CerIsaiah"},"content":"     * @param list","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"CerIsaiah"},"content":"     * @return HashMap of Mods with their corresponding preqs","lastModifiedDate":"2023-10-18"},{"lineNumber":224,"author":{"gitId":"CerIsaiah"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"CerIsaiah"},"content":"    private HashMap\u003cString, List\u003cString\u003e\u003e addModsWithPreqs(HashMap\u003cString, List\u003cString\u003e\u003e list) {","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"CerIsaiah"},"content":"        //Only two mods don\u0027t have preqs MA1511 and CS1231S.","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"CerIsaiah"},"content":"        // In the future this will be dealt","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"CerIsaiah"},"content":"        addValue(list, \"CS3230\", \"CS2030S\");","lastModifiedDate":"2023-10-18"},{"lineNumber":230,"author":{"gitId":"CerIsaiah"},"content":"        addValue(list, \"CS3230\", \"CS1231S\");","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":232,"author":{"gitId":"CerIsaiah"},"content":"        addValue(list, \"CS2030S\", \"CS1231S\");","lastModifiedDate":"2023-10-18"},{"lineNumber":233,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"CerIsaiah"},"content":"        addValue(list, \"CS2040S\", \"CS1231S\");","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":236,"author":{"gitId":"CerIsaiah"},"content":"        addValue(list, \"CS2106\", \"CS1231S\");","lastModifiedDate":"2023-10-18"},{"lineNumber":237,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"CerIsaiah"},"content":"        addValue(list, \"CS2109S\", \"CS1231S\");","lastModifiedDate":"2023-10-18"},{"lineNumber":239,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":240,"author":{"gitId":"CerIsaiah"},"content":"        return list;","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"CerIsaiah"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":245,"author":{"gitId":"CerIsaiah"},"content":"     * Helper function to addModsWithPreqs to add Strings and sets together","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":247,"author":{"gitId":"CerIsaiah"},"content":"     * @param map","lastModifiedDate":"2023-10-18"},{"lineNumber":248,"author":{"gitId":"CerIsaiah"},"content":"     * @param key","lastModifiedDate":"2023-10-18"},{"lineNumber":249,"author":{"gitId":"CerIsaiah"},"content":"     * @param value","lastModifiedDate":"2023-10-18"},{"lineNumber":250,"author":{"gitId":"CerIsaiah"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":251,"author":{"gitId":"CerIsaiah"},"content":"    public static void addValue(HashMap\u003cString, List\u003cString\u003e\u003e map, String key, String value) {","lastModifiedDate":"2023-10-18"},{"lineNumber":252,"author":{"gitId":"CerIsaiah"},"content":"        // If the map does not contain the key, put an empty list for that key","lastModifiedDate":"2023-10-18"},{"lineNumber":253,"author":{"gitId":"CerIsaiah"},"content":"        if (!map.containsKey(key)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":254,"author":{"gitId":"CerIsaiah"},"content":"            map.put(key, new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-18"},{"lineNumber":255,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":256,"author":{"gitId":"CerIsaiah"},"content":"        // Add the value to the list associated with the key","lastModifiedDate":"2023-10-18"},{"lineNumber":257,"author":{"gitId":"CerIsaiah"},"content":"        map.get(key).add(value);","lastModifiedDate":"2023-10-18"},{"lineNumber":258,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":259,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":260,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":261,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":262,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"SebasFok":14,"ryanlohyr":164,"janelleenqi":23,"rohitcube":8,"CerIsaiah":53}},{"path":"src/main/java/seedu/duke/controllers/ModuleServiceController.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.logic.MajorRequirements;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Major;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.displayHelp;","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.displayMessage;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.ModuleInfoView.printModuleStringArray;","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"public class ModuleServiceController {","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"     * Checks if the user\u0027s major input is valid. A major input is valid if it exists in the enumeration","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"     * of valid majors.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"     * @param userInput The user\u0027s major input.","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"     * @return True if the input is a valid major, false otherwise.","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"    public static boolean validateMajorInput(String userInput) {","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"            Major.valueOf(userInput.toUpperCase());","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"            return true;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Please choose from the list: CS, or CEG\");","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"     * Prompts the user to choose whether to add a list of modules to their draft schedule.","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"     * Displays the list of modules and asks for user input. Handles user input validation.","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"     * @param scheduleToAdd A list of modules to be added to the schedule.","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"    public static void chooseToAddToSchedule(Student student, ArrayList\u003cString\u003e scheduleToAdd) {","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"        printModuleStringArray(scheduleToAdd);","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"        displayMessage(\"Here you go!\");","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"        displayMessage(\"Taking the modules in this order will ensure a prerequisite worry free uni life!\");","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"        displayMessage(\"Do you want to add this to your draft schedule? \" +","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"                \"(This will overwrite your current schedule!)\");","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"        displayMessage(\"Please input \u0027Y\u0027 or \u0027N\u0027\");","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"        while (!userInput.equals(\"N\") \u0026\u0026 !userInput.equals((\"Y\"))) {","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(\"Invalid input, please choose Y/N\");","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"        if (userInput.equals(\"Y\")) {","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(\"Hold on, this may take a while......\");","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"            student.getSchedule().addRecommendedScheduleListToSchedule(scheduleToAdd);","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"            student.getSchedule().printMainModuleList();","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"        } else {","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"            displayHelp();","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"     * Retrieves and prints the required modules for a specified major.","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"     * This method initializes a `MajorRequirements` object based on the provided `major`.","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"     * It then attempts to print the required modules from a corresponding TXT file.","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"     * If the TXT file is not found, an error message is displayed.","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"     * @param major The major for which to retrieve required modules.","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"     * @throws NullPointerException If `major` is null.","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"    public static void getRequiredModules(String major) throws NullPointerException {","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"        MajorRequirements.printRequiredModules(major);","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"ryanlohyr":80}},{"path":"src/main/java/seedu/duke/exceptions/FailPrereqException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"public class FailPrereqException extends Exception{","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"    public FailPrereqException(String message) {","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"        super(message);","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"SebasFok":7}},{"path":"src/main/java/seedu/duke/exceptions/InvalidModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":" * This class represents a custom exception that is thrown when an invalid module is encountered.","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":" * An invalid module that has illegal characters.","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":" * @author ryanlohyr","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"public class InvalidModuleException extends Exception{","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"    public InvalidModuleException() {","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"        super(\"Only alphabets and digits are allowed in module codes!\");","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"ryanlohyr":12}},{"path":"src/main/java/seedu/duke/exceptions/MissingModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"public class MissingModuleException extends Exception{","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"    public MissingModuleException(String message) {","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"        super(message);","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"janelleenqi":7}},{"path":"src/main/java/seedu/duke/models/logic/Api.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"rohitcube"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"rohitcube"},"content":"import java.net.URI;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"rohitcube"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"rohitcube"},"content":"import java.net.http.HttpClient;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"rohitcube"},"content":"import java.net.http.HttpRequest;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"rohitcube"},"content":"import java.net.http.HttpResponse;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.JSONArray;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.parser.JSONParser;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.parser.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.exceptions.InvalidModuleException;","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Major;","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.ModuleList;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.DataRepository.getRequirements;","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"rohitcube"},"content":"import seedu.duke.utils.Parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.errors.UserError;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.views.ModuleInfoView;","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.UnknownCommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"rohitcube"},"content":"public class Api {","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"     * Retrieves the prerequisite tree for a module specified by its code.","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"     * @author ryanlohyr","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"     * @param moduleCode The code of the module for which prerequisites are to be retrieved.","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"     * @return A JSON object representing the prerequisite tree for the module. The prerequisite tree can be in one of","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"    private static JSONObject getModulePrereqTree(String moduleCode) {","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"        JSONObject fullModuleInfo \u003d getFullModuleInfo(moduleCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"        if (fullModuleInfo \u003d\u003d null) {","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"            return null;","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"        //prereqTree can be returned as a string(single pre requisite), null(No pre requisites) or object","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"        Object prereqTree \u003d fullModuleInfo.get(\"prereqTree\");","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"        if (prereqTree \u003d\u003d null) {","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"            return null;","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"        } else if (prereqTree instanceof String) {","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"            JSONObject jsonObject \u003d new JSONObject();","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e requirementList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"            requirementList.add((String) prereqTree);","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"            jsonObject.put(\"or\", requirementList);","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"            return jsonObject;","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"        return (JSONObject) fullModuleInfo.get(\"prereqTree\");","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"rohitcube"},"content":"     * Checks if a given module code is exempted from certain requirements.","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode The module code to check.","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"rohitcube"},"content":"     * @return True if the module is exempted, false otherwise.","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"    private static boolean isModuleException(String moduleCode) {","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e exemptedModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"        exemptedModules.add(\"CS1231\");","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"        exemptedModules.add(\"CS1231S\");","lastModifiedDate":"2023-11-04"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"        exemptedModules.add(\"MA1508E\");","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"        exemptedModules.add(\"EE4204\");","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"SebasFok"},"content":"        exemptedModules.add(\"MA1511\");","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"SebasFok"},"content":"        exemptedModules.add(\"MA1512\");","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"        exemptedModules.add(\"MA1521\");","lastModifiedDate":"2023-11-04"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"        exemptedModules.add(\"MA1522\");","lastModifiedDate":"2023-11-04"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"        return exemptedModules.contains(moduleCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"rohitcube"},"content":"     * Retrieves a list of exempted prerequisites for a given module code.","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode The module code to retrieve exempted prerequisites for.","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"rohitcube"},"content":"     * @return An ArrayList of exempted prerequisite module codes.","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"    private static ArrayList\u003cString\u003e getExemptedPrerequisite(String moduleCode) {","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"        HashMap\u003cString, ArrayList\u003cString\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e list1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"        list1.add(\"MA1511\");","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"        list1.add(\"MA1512\");","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"CS1231\", list1);","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e list2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"        list2.add(\"MA1511\");","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"        list2.add(\"MA1512\");","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"MA1508E\", list2);","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e list3 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"        list3.add(\"ST2334\");","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"EE4204\", list3);","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e emptyList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-04"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"MA1511\", emptyList);","lastModifiedDate":"2023-11-04"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"CS1231S\",emptyList);","lastModifiedDate":"2023-11-04"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"MA1512\", emptyList);","lastModifiedDate":"2023-11-04"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"MA1521\", emptyList);","lastModifiedDate":"2023-11-04"},{"lineNumber":111,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"        map.put(\"MA1522\", emptyList);","lastModifiedDate":"2023-11-04"},{"lineNumber":113,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"        return map.get(moduleCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"rohitcube"},"content":"    private static String sendHttpRequestAndGetResponseBody(String url) throws ParseException,","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"rohitcube"},"content":"            IOException, InterruptedException, URISyntaxException {","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"rohitcube"},"content":"        HttpClient client \u003d HttpClient.newHttpClient();","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"rohitcube"},"content":"        HttpRequest request \u003d HttpRequest.newBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"rohitcube"},"content":"                .uri(new URI(url))","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"rohitcube"},"content":"                .GET()","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"rohitcube"},"content":"                .build();","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"rohitcube"},"content":"        HttpResponse\u003cString\u003e response \u003d client.send(request, HttpResponse.BodyHandlers.ofString());","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"rohitcube"},"content":"        return response.body();","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":129,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"rohitcube"},"content":"     * Retrieves detailed module information from an external API based on the module code.","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"ryanlohyr"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-04"},{"lineNumber":133,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode The module code to retrieve information for.","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"rohitcube"},"content":"     * @return A JSONObject containing module information.","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":136,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"janelleenqi"},"content":"    public static JSONObject getFullModuleInfo(String moduleCode) throws RuntimeException {","lastModifiedDate":"2023-11-04"},{"lineNumber":138,"author":{"gitId":"rohitcube"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"            // Regex pattern to match only letters and numbers","lastModifiedDate":"2023-11-04"},{"lineNumber":140,"author":{"gitId":"ryanlohyr"},"content":"            String regexPattern \u003d \"^[a-zA-Z0-9]+$\";","lastModifiedDate":"2023-11-04"},{"lineNumber":141,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":142,"author":{"gitId":"ryanlohyr"},"content":"            if(!moduleCode.matches(regexPattern)){","lastModifiedDate":"2023-11-04"},{"lineNumber":143,"author":{"gitId":"ryanlohyr"},"content":"                throw new InvalidModuleException();","lastModifiedDate":"2023-11-04"},{"lineNumber":144,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":145,"author":{"gitId":"rohitcube"},"content":"            String url \u003d \"https://api.nusmods.com/v2/2023-2024/modules/\" + moduleCode + \".json\";","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":147,"author":{"gitId":"rohitcube"},"content":"            String responseBody \u003d sendHttpRequestAndGetResponseBody(url);","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"rohitcube"},"content":"            if (responseBody.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"rohitcube"},"content":"                return new JSONObject();","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"rohitcube"},"content":"            JSONParser parser \u003d new JSONParser();","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"ryanlohyr"},"content":"            return (JSONObject) parser.parse(responseBody);","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"rohitcube"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"rohitcube"},"content":"            //to be replaced with more robust error class in the future","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Invalid Module Name\");","lastModifiedDate":"2023-10-28"},{"lineNumber":156,"author":{"gitId":"rohitcube"},"content":"        } catch (IOException | InterruptedException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Invalid Module Name\");","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"janelleenqi"},"content":"            throw new RuntimeException(\"java.net.ConnectException\", e);","lastModifiedDate":"2023-11-04"},{"lineNumber":159,"author":{"gitId":"rohitcube"},"content":"        } catch (URISyntaxException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"rohitcube"},"content":"            //to be replaced with more robust error class in the future","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"rohitcube"},"content":"            System.out.println(\"Sorry, there was an error with\" +","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"rohitcube"},"content":"                    \" the provided URL: \" + e.getMessage());","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"rohitcube"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"rohitcube"},"content":"            //System.out.println(\"Invalid Module Name\");","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"ryanlohyr"},"content":"        }catch (InvalidModuleException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":166,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Invalid Module Code :\" + e.getMessage());","lastModifiedDate":"2023-11-04"},{"lineNumber":167,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"rohitcube"},"content":"        return null;","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"rohitcube"},"content":"     * Retrieves the name of a module based on its module code.","lastModifiedDate":"2023-11-01"},{"lineNumber":173,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":174,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode The module code to retrieve the name for.","lastModifiedDate":"2023-11-01"},{"lineNumber":175,"author":{"gitId":"rohitcube"},"content":"     * @return The name of the module.","lastModifiedDate":"2023-11-01"},{"lineNumber":176,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":177,"author":{"gitId":"ryanlohyr"},"content":"    public static String getModuleName(String moduleCode) {","lastModifiedDate":"2023-10-28"},{"lineNumber":178,"author":{"gitId":"ryanlohyr"},"content":"        JSONObject fullModuleInfo \u003d getFullModuleInfo(moduleCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":179,"author":{"gitId":"ryanlohyr"},"content":"        assert fullModuleInfo !\u003d null;","lastModifiedDate":"2023-10-28"},{"lineNumber":180,"author":{"gitId":"ryanlohyr"},"content":"        return (String) fullModuleInfo.get(\"title\");","lastModifiedDate":"2023-10-28"},{"lineNumber":181,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":182,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"rohitcube"},"content":"     * Retrieves the description of a module based on its module code.","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":186,"author":{"gitId":"ryanlohyr"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-04"},{"lineNumber":187,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode The module code to retrieve the description for.","lastModifiedDate":"2023-11-01"},{"lineNumber":188,"author":{"gitId":"rohitcube"},"content":"     * @return The description of the module.","lastModifiedDate":"2023-11-01"},{"lineNumber":189,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":190,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":191,"author":{"gitId":"rohitcube"},"content":"    public static String getDescription(String moduleCode) {","lastModifiedDate":"2023-10-30"},{"lineNumber":192,"author":{"gitId":"rohitcube"},"content":"        JSONObject moduleInfo \u003d getFullModuleInfo(moduleCode);","lastModifiedDate":"2023-10-30"},{"lineNumber":193,"author":{"gitId":"rohitcube"},"content":"        String error \u003d \" \";","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"rohitcube"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"rohitcube"},"content":"            String descr \u003d (String) moduleInfo.get(\"description\");","lastModifiedDate":"2023-11-02"},{"lineNumber":196,"author":{"gitId":"rohitcube"},"content":"            return descr;","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"rohitcube"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"rohitcube"},"content":"            System.out.println(\" \");","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"rohitcube"},"content":"        return error;","lastModifiedDate":"2023-11-02"},{"lineNumber":201,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":202,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":204,"author":{"gitId":"rohitcube"},"content":"     * Retrieves the workload information for a module based on its module code.","lastModifiedDate":"2023-11-01"},{"lineNumber":205,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":206,"author":{"gitId":"ryanlohyr"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-04"},{"lineNumber":207,"author":{"gitId":"rohitcube"},"content":"     * @param moduleCode The module code to retrieve workload information for.","lastModifiedDate":"2023-11-01"},{"lineNumber":208,"author":{"gitId":"rohitcube"},"content":"     * @return A JSONArray containing workload details.","lastModifiedDate":"2023-11-01"},{"lineNumber":209,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":210,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":211,"author":{"gitId":"rohitcube"},"content":"    public static JSONArray getWorkload(String moduleCode) {","lastModifiedDate":"2023-10-30"},{"lineNumber":212,"author":{"gitId":"rohitcube"},"content":"        JSONObject moduleInfo \u003d getFullModuleInfo(moduleCode);","lastModifiedDate":"2023-10-30"},{"lineNumber":213,"author":{"gitId":"rohitcube"},"content":"        JSONArray emptyArray \u003d new JSONArray();","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"rohitcube"},"content":"        assert moduleInfo !\u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":215,"author":{"gitId":"rohitcube"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":216,"author":{"gitId":"rohitcube"},"content":"            return (JSONArray) moduleInfo.get(\"workload\");","lastModifiedDate":"2023-10-30"},{"lineNumber":217,"author":{"gitId":"rohitcube"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":218,"author":{"gitId":"rohitcube"},"content":"            System.out.println(\" \");","lastModifiedDate":"2023-11-02"},{"lineNumber":219,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":220,"author":{"gitId":"rohitcube"},"content":"        return emptyArray;","lastModifiedDate":"2023-11-02"},{"lineNumber":221,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":222,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":223,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":224,"author":{"gitId":"ryanlohyr"},"content":"     * Recursively flattens and processes a list of module prerequisites.","lastModifiedDate":"2023-10-28"},{"lineNumber":225,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":226,"author":{"gitId":"ryanlohyr"},"content":"     * @author ryanlohyr","lastModifiedDate":"2023-11-04"},{"lineNumber":227,"author":{"gitId":"ryanlohyr"},"content":"     * @param major              The major or program for which prerequisites are being flattened.","lastModifiedDate":"2023-10-28"},{"lineNumber":228,"author":{"gitId":"ryanlohyr"},"content":"     * @param prerequisites      An ArrayList to store the flattened prerequisites.","lastModifiedDate":"2023-10-28"},{"lineNumber":229,"author":{"gitId":"ryanlohyr"},"content":"     * @param modulePrereqArray  An ArrayList containing the module prerequisites to be processed.","lastModifiedDate":"2023-10-28"},{"lineNumber":230,"author":{"gitId":"ryanlohyr"},"content":"     * @param courseRequirements An ArrayList containing course requirements.","lastModifiedDate":"2023-10-28"},{"lineNumber":231,"author":{"gitId":"ryanlohyr"},"content":"     * @param currRequisite      The type of the current prerequisite (e.g., \"and\" or \"or\").","lastModifiedDate":"2023-10-28"},{"lineNumber":232,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":233,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":234,"author":{"gitId":"ryanlohyr"},"content":"    private static void flattenPrereq(","lastModifiedDate":"2023-10-28"},{"lineNumber":235,"author":{"gitId":"ryanlohyr"},"content":"            String major,","lastModifiedDate":"2023-10-28"},{"lineNumber":236,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e prerequisites,","lastModifiedDate":"2023-10-28"},{"lineNumber":237,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cObjects\u003e modulePrereqArray,","lastModifiedDate":"2023-10-28"},{"lineNumber":238,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e courseRequirements,","lastModifiedDate":"2023-10-28"},{"lineNumber":239,"author":{"gitId":"ryanlohyr"},"content":"            String currRequisite) {","lastModifiedDate":"2023-10-28"},{"lineNumber":240,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-04"},{"lineNumber":241,"author":{"gitId":"ryanlohyr"},"content":"            for (Object module : modulePrereqArray) {","lastModifiedDate":"2023-10-28"},{"lineNumber":242,"author":{"gitId":"ryanlohyr"},"content":"                if (module instanceof String) {","lastModifiedDate":"2023-10-28"},{"lineNumber":243,"author":{"gitId":"ryanlohyr"},"content":"                    String formattedModule \u003d ((String) module).replace(\":D\", \"\");","lastModifiedDate":"2023-10-28"},{"lineNumber":244,"author":{"gitId":"ryanlohyr"},"content":"                    formattedModule \u003d formattedModule.replace(\"%\", \"\");","lastModifiedDate":"2023-10-28"},{"lineNumber":245,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":246,"author":{"gitId":"ryanlohyr"},"content":"                    if (courseRequirements.contains(formattedModule)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":247,"author":{"gitId":"ryanlohyr"},"content":"                        prerequisites.add(formattedModule);","lastModifiedDate":"2023-10-28"},{"lineNumber":248,"author":{"gitId":"ryanlohyr"},"content":"                        if (currRequisite.equals(\"or\")) {","lastModifiedDate":"2023-10-28"},{"lineNumber":249,"author":{"gitId":"ryanlohyr"},"content":"                            return;","lastModifiedDate":"2023-10-28"},{"lineNumber":250,"author":{"gitId":"ryanlohyr"},"content":"                        }","lastModifiedDate":"2023-10-28"},{"lineNumber":251,"author":{"gitId":"ryanlohyr"},"content":"                    }","lastModifiedDate":"2023-10-28"},{"lineNumber":252,"author":{"gitId":"ryanlohyr"},"content":"                } else {","lastModifiedDate":"2023-10-28"},{"lineNumber":253,"author":{"gitId":"ryanlohyr"},"content":"                    //item is an object","lastModifiedDate":"2023-10-28"},{"lineNumber":254,"author":{"gitId":"ryanlohyr"},"content":"                    //here, we determine if its \u0027or\u0027 or \u0027and\u0027","lastModifiedDate":"2023-10-28"},{"lineNumber":255,"author":{"gitId":"ryanlohyr"},"content":"                    JSONObject moduleJSON \u003d (JSONObject) module;","lastModifiedDate":"2023-10-28"},{"lineNumber":256,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":257,"author":{"gitId":"ryanlohyr"},"content":"                    if (moduleJSON.containsKey(\"nOf\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":258,"author":{"gitId":"ryanlohyr"},"content":"                        String key \u003d \"and\";","lastModifiedDate":"2023-11-04"},{"lineNumber":259,"author":{"gitId":"ryanlohyr"},"content":"                        ArrayList\u003cArrayList\u003cObjects\u003e\u003e initial \u003d (ArrayList\u003cArrayList\u003cObjects\u003e\u003e) moduleJSON.get(\"nOf\");","lastModifiedDate":"2023-11-04"},{"lineNumber":260,"author":{"gitId":"ryanlohyr"},"content":"                        ArrayList\u003cObjects\u003e formattedInitial \u003d initial.get(1);","lastModifiedDate":"2023-11-04"},{"lineNumber":261,"author":{"gitId":"ryanlohyr"},"content":"                        flattenPrereq(major, prerequisites, formattedInitial, courseRequirements, key);","lastModifiedDate":"2023-11-04"},{"lineNumber":262,"author":{"gitId":"ryanlohyr"},"content":"                        return;","lastModifiedDate":"2023-11-04"},{"lineNumber":263,"author":{"gitId":"ryanlohyr"},"content":"                    }","lastModifiedDate":"2023-11-04"},{"lineNumber":264,"author":{"gitId":"ryanlohyr"},"content":"                    String key \u003d (String) moduleJSON.keySet().toArray()[0];","lastModifiedDate":"2023-10-28"},{"lineNumber":265,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":266,"author":{"gitId":"ryanlohyr"},"content":"                    ArrayList\u003cObjects\u003e initial \u003d (ArrayList\u003cObjects\u003e) moduleJSON.get(key);","lastModifiedDate":"2023-10-28"},{"lineNumber":267,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":268,"author":{"gitId":"ryanlohyr"},"content":"                    flattenPrereq(major, prerequisites, initial, courseRequirements, key);","lastModifiedDate":"2023-11-04"},{"lineNumber":269,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":270,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-10-28"},{"lineNumber":271,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":272,"author":{"gitId":"ryanlohyr"},"content":"        } catch (ClassCastException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":273,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Error getting pre requisite for module\");","lastModifiedDate":"2023-11-04"},{"lineNumber":274,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":275,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":276,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":277,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":278,"author":{"gitId":"ryanlohyr"},"content":"     * Retrieves the prerequisite array for a module specified by its code and also taking into account the degree","lastModifiedDate":"2023-10-28"},{"lineNumber":279,"author":{"gitId":"ryanlohyr"},"content":"     * requirements of the course.","lastModifiedDate":"2023-10-28"},{"lineNumber":280,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":281,"author":{"gitId":"ryanlohyr"},"content":"     * @author ryanlohyr","lastModifiedDate":"2023-11-04"},{"lineNumber":282,"author":{"gitId":"ryanlohyr"},"content":"     * @param moduleCode The code of the module for which prerequisites are to be retrieved.","lastModifiedDate":"2023-10-28"},{"lineNumber":283,"author":{"gitId":"rohitcube"},"content":"     * @return A JSONObject representing the prerequisite tree for the module or NULL if no prerequisites are specified.","lastModifiedDate":"2023-11-01"},{"lineNumber":284,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":285,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":286,"author":{"gitId":"ryanlohyr"},"content":"    public static ArrayList\u003cString\u003e getModulePrereqBasedOnCourse(String moduleCode, String major) {","lastModifiedDate":"2023-10-28"},{"lineNumber":287,"author":{"gitId":"ryanlohyr"},"content":"        // Only accepts CEG requirements now","lastModifiedDate":"2023-10-28"},{"lineNumber":288,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-04"},{"lineNumber":289,"author":{"gitId":"ryanlohyr"},"content":"            Major.valueOf(major.toUpperCase());","lastModifiedDate":"2023-11-04"},{"lineNumber":290,"author":{"gitId":"ryanlohyr"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":291,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Invalid Major Provided\");","lastModifiedDate":"2023-11-04"},{"lineNumber":292,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":293,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":294,"author":{"gitId":"ryanlohyr"},"content":"        //Modules that has prerequisites incorrectly identified by NUSMods","lastModifiedDate":"2023-10-28"},{"lineNumber":295,"author":{"gitId":"ryanlohyr"},"content":"        if (isModuleException(moduleCode)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":296,"author":{"gitId":"ryanlohyr"},"content":"            return getExemptedPrerequisite(moduleCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":297,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":298,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":299,"author":{"gitId":"ryanlohyr"},"content":"        JSONObject modulePrereqTree \u003d getModulePrereqTree(moduleCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":300,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":301,"author":{"gitId":"ryanlohyr"},"content":"        if (modulePrereqTree \u003d\u003d null) {","lastModifiedDate":"2023-10-28"},{"lineNumber":302,"author":{"gitId":"ryanlohyr"},"content":"            return null;","lastModifiedDate":"2023-10-28"},{"lineNumber":303,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":304,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":305,"author":{"gitId":"ryanlohyr"},"content":"        String key \u003d (String) modulePrereqTree.keySet().toArray()[0];","lastModifiedDate":"2023-10-28"},{"lineNumber":306,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":307,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e prerequisites \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-03"},{"lineNumber":308,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":309,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cObjects\u003e initial \u003d (ArrayList\u003cObjects\u003e) modulePrereqTree.get(key);","lastModifiedDate":"2023-10-28"},{"lineNumber":310,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":311,"author":{"gitId":"ryanlohyr"},"content":"        flattenPrereq(major, prerequisites, initial, getRequirements(major), key);","lastModifiedDate":"2023-10-28"},{"lineNumber":312,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":313,"author":{"gitId":"ryanlohyr"},"content":"        return prerequisites;","lastModifiedDate":"2023-10-28"},{"lineNumber":314,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":315,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":316,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":317,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":318,"author":{"gitId":"SebasFok"},"content":"     * Checks if a module with the given module code exists in the NUSMods database.","lastModifiedDate":"2023-10-31"},{"lineNumber":319,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":320,"author":{"gitId":"SebasFok"},"content":"     * @param moduleCode The module code to check for existence.","lastModifiedDate":"2023-10-31"},{"lineNumber":321,"author":{"gitId":"SebasFok"},"content":"     * @return `true` if the module exists, `false` if the module does not exist.","lastModifiedDate":"2023-10-31"},{"lineNumber":322,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":323,"author":{"gitId":"SebasFok"},"content":"    public static boolean doesModuleExist(String moduleCode) {","lastModifiedDate":"2023-10-31"},{"lineNumber":324,"author":{"gitId":"SebasFok"},"content":"        JSONObject moduleInfo \u003d getFullModuleInfo(moduleCode);","lastModifiedDate":"2023-10-31"},{"lineNumber":325,"author":{"gitId":"SebasFok"},"content":"        return (!(moduleInfo \u003d\u003d null));","lastModifiedDate":"2023-10-31"},{"lineNumber":326,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":327,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":328,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":329,"author":{"gitId":"SebasFok"},"content":"     * Checks if a student satisfies all prerequisites for a given module.","lastModifiedDate":"2023-10-30"},{"lineNumber":330,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":331,"author":{"gitId":"SebasFok"},"content":"     * @param moduleCode       The code of the module for which prerequisites need to be checked.","lastModifiedDate":"2023-10-30"},{"lineNumber":332,"author":{"gitId":"SebasFok"},"content":"     * @param completedModules The list of completed modules by the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":333,"author":{"gitId":"SebasFok"},"content":"     * @return `true` if the student satisfies all prerequisites for the module, `false` otherwise.","lastModifiedDate":"2023-10-30"},{"lineNumber":334,"author":{"gitId":"SebasFok"},"content":"     * @throws IllegalArgumentException If the module code is invalid.","lastModifiedDate":"2023-10-31"},{"lineNumber":335,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":336,"author":{"gitId":"SebasFok"},"content":"    public static boolean satisfiesAllPrereq(String moduleCode, ModuleList completedModules)","lastModifiedDate":"2023-10-30"},{"lineNumber":337,"author":{"gitId":"SebasFok"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2023-10-31"},{"lineNumber":338,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":339,"author":{"gitId":"SebasFok"},"content":"        if (!doesModuleExist(moduleCode)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":340,"author":{"gitId":"SebasFok"},"content":"            throw new IllegalArgumentException(\"Invalid module code\");","lastModifiedDate":"2023-10-31"},{"lineNumber":341,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":342,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":343,"author":{"gitId":"SebasFok"},"content":"        JSONObject modulePrereqTree \u003d getModulePrereqTree(moduleCode);","lastModifiedDate":"2023-10-30"},{"lineNumber":344,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":345,"author":{"gitId":"SebasFok"},"content":"        if (modulePrereqTree \u003d\u003d null) {","lastModifiedDate":"2023-10-30"},{"lineNumber":346,"author":{"gitId":"SebasFok"},"content":"            return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":347,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":348,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":349,"author":{"gitId":"SebasFok"},"content":"        String key \u003d (String) modulePrereqTree.keySet().toArray()[0];","lastModifiedDate":"2023-10-31"},{"lineNumber":350,"author":{"gitId":"SebasFok"},"content":"        ArrayList\u003cObjects\u003e initial \u003d (ArrayList\u003cObjects\u003e) modulePrereqTree.get(key);","lastModifiedDate":"2023-10-30"},{"lineNumber":351,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":352,"author":{"gitId":"SebasFok"},"content":"        //Modules that has prerequisites incorrectly identified by NUSMods","lastModifiedDate":"2023-10-30"},{"lineNumber":353,"author":{"gitId":"SebasFok"},"content":"        if (isModuleException(moduleCode)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":354,"author":{"gitId":"SebasFok"},"content":"            JSONObject exceptionPrereqTree \u003d new JSONObject();","lastModifiedDate":"2023-10-31"},{"lineNumber":355,"author":{"gitId":"SebasFok"},"content":"            ArrayList\u003cString\u003e requirementList \u003d getExemptedPrerequisite(moduleCode);","lastModifiedDate":"2023-10-31"},{"lineNumber":356,"author":{"gitId":"SebasFok"},"content":"            exceptionPrereqTree.put(\"and\", requirementList);","lastModifiedDate":"2023-10-31"},{"lineNumber":357,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":358,"author":{"gitId":"SebasFok"},"content":"            key \u003d (String) exceptionPrereqTree.keySet().toArray()[0];","lastModifiedDate":"2023-10-31"},{"lineNumber":359,"author":{"gitId":"SebasFok"},"content":"            initial \u003d (ArrayList\u003cObjects\u003e) exceptionPrereqTree.get(key);","lastModifiedDate":"2023-10-31"},{"lineNumber":360,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":361,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":362,"author":{"gitId":"SebasFok"},"content":"        return checkPrereq(initial, key, completedModules);","lastModifiedDate":"2023-10-30"},{"lineNumber":363,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":364,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":365,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":366,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":367,"author":{"gitId":"SebasFok"},"content":"     * Recursively checks if each branch of the prereq tree is satisfied by the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":368,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":369,"author":{"gitId":"SebasFok"},"content":"     * @param modulePrereqArray The array of prerequisite modules or conditions to be checked.","lastModifiedDate":"2023-10-30"},{"lineNumber":370,"author":{"gitId":"SebasFok"},"content":"     * @param currRequisite     The type of prerequisite condition (\"or\" or \"and\").","lastModifiedDate":"2023-10-30"},{"lineNumber":371,"author":{"gitId":"SebasFok"},"content":"     * @param completedModules  The list of completed modules by the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":372,"author":{"gitId":"SebasFok"},"content":"     * @return `true` if the student satisfies all prerequisites, `false` otherwise.","lastModifiedDate":"2023-10-30"},{"lineNumber":373,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":374,"author":{"gitId":"SebasFok"},"content":"    private static boolean checkPrereq(","lastModifiedDate":"2023-10-30"},{"lineNumber":375,"author":{"gitId":"SebasFok"},"content":"            ArrayList\u003cObjects\u003e modulePrereqArray,","lastModifiedDate":"2023-10-30"},{"lineNumber":376,"author":{"gitId":"SebasFok"},"content":"            String currRequisite,","lastModifiedDate":"2023-10-30"},{"lineNumber":377,"author":{"gitId":"SebasFok"},"content":"            ModuleList completedModules) {","lastModifiedDate":"2023-10-31"},{"lineNumber":378,"author":{"gitId":"ryanlohyr"},"content":"        try{","lastModifiedDate":"2023-11-04"},{"lineNumber":379,"author":{"gitId":"SebasFok"},"content":"            if (currRequisite.equals(\"or\")) {","lastModifiedDate":"2023-10-30"},{"lineNumber":380,"author":{"gitId":"SebasFok"},"content":"                for (Object module : modulePrereqArray) {","lastModifiedDate":"2023-10-30"},{"lineNumber":381,"author":{"gitId":"SebasFok"},"content":"                    if (module instanceof String) {","lastModifiedDate":"2023-10-30"},{"lineNumber":382,"author":{"gitId":"SebasFok"},"content":"                        String formattedModule \u003d ((String) module).replace(\":D\", \"\");","lastModifiedDate":"2023-10-30"},{"lineNumber":383,"author":{"gitId":"SebasFok"},"content":"                        formattedModule \u003d formattedModule.replace(\"%\", \"\");","lastModifiedDate":"2023-10-30"},{"lineNumber":384,"author":{"gitId":"SebasFok"},"content":"                        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":385,"author":{"gitId":"SebasFok"},"content":"                            if (completedModules.exists(formattedModule)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":386,"author":{"gitId":"SebasFok"},"content":"                                return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":387,"author":{"gitId":"SebasFok"},"content":"                            }","lastModifiedDate":"2023-10-30"},{"lineNumber":388,"author":{"gitId":"SebasFok"},"content":"                        } catch (InvalidObjectException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":389,"author":{"gitId":"SebasFok"},"content":"                            throw new RuntimeException(e);","lastModifiedDate":"2023-10-31"},{"lineNumber":390,"author":{"gitId":"SebasFok"},"content":"                        }","lastModifiedDate":"2023-10-31"},{"lineNumber":391,"author":{"gitId":"SebasFok"},"content":"                    } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":392,"author":{"gitId":"SebasFok"},"content":"                        JSONObject prereqBranch \u003d (JSONObject) module;","lastModifiedDate":"2023-10-30"},{"lineNumber":393,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":394,"author":{"gitId":"ryanlohyr"},"content":"                        //for cs, some modules return pre req in this form {\"nOf\":[2,[\"MA1511:D\",\"MA1512:D\"]]}","lastModifiedDate":"2023-11-04"},{"lineNumber":395,"author":{"gitId":"ryanlohyr"},"content":"                        //have to convert first","lastModifiedDate":"2023-11-04"},{"lineNumber":396,"author":{"gitId":"ryanlohyr"},"content":"                        if (prereqBranch.containsKey(\"nOf\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":397,"author":{"gitId":"ryanlohyr"},"content":"                            String key \u003d \"and\";","lastModifiedDate":"2023-11-04"},{"lineNumber":398,"author":{"gitId":"ryanlohyr"},"content":"                            ArrayList\u003cArrayList\u003cObjects\u003e\u003e initial \u003d","lastModifiedDate":"2023-11-04"},{"lineNumber":399,"author":{"gitId":"ryanlohyr"},"content":"                                    (ArrayList\u003cArrayList\u003cObjects\u003e\u003e) prereqBranch.get(\"nOf\");","lastModifiedDate":"2023-11-04"},{"lineNumber":400,"author":{"gitId":"ryanlohyr"},"content":"                            ArrayList\u003cObjects\u003e formattedInitial \u003d initial.get(1);","lastModifiedDate":"2023-11-04"},{"lineNumber":401,"author":{"gitId":"ryanlohyr"},"content":"                            JSONArray prereqBranchArray \u003d (JSONArray) formattedInitial;","lastModifiedDate":"2023-11-04"},{"lineNumber":402,"author":{"gitId":"ryanlohyr"},"content":"                            return checkPrereq(prereqBranchArray, key, completedModules);","lastModifiedDate":"2023-11-04"},{"lineNumber":403,"author":{"gitId":"ryanlohyr"},"content":"                        } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":404,"author":{"gitId":"ryanlohyr"},"content":"                            String key \u003d (String) prereqBranch.keySet().toArray()[0];","lastModifiedDate":"2023-11-04"},{"lineNumber":405,"author":{"gitId":"SebasFok"},"content":"                            JSONArray prereqBranchArray \u003d (JSONArray) prereqBranch.get(key);","lastModifiedDate":"2023-10-30"},{"lineNumber":406,"author":{"gitId":"SebasFok"},"content":"                            return checkPrereq(prereqBranchArray, key, completedModules);","lastModifiedDate":"2023-11-01"},{"lineNumber":407,"author":{"gitId":"SebasFok"},"content":"                        }","lastModifiedDate":"2023-10-30"},{"lineNumber":408,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":409,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":410,"author":{"gitId":"ryanlohyr"},"content":"                    }","lastModifiedDate":"2023-11-04"},{"lineNumber":411,"author":{"gitId":"SebasFok"},"content":"                }","lastModifiedDate":"2023-10-30"},{"lineNumber":412,"author":{"gitId":"SebasFok"},"content":"                return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":413,"author":{"gitId":"SebasFok"},"content":"            } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":414,"author":{"gitId":"SebasFok"},"content":"                for (Object module : modulePrereqArray) {","lastModifiedDate":"2023-10-30"},{"lineNumber":415,"author":{"gitId":"SebasFok"},"content":"                    if (module instanceof String) {","lastModifiedDate":"2023-10-30"},{"lineNumber":416,"author":{"gitId":"SebasFok"},"content":"                        String formattedModule \u003d ((String) module).replace(\":D\", \"\");","lastModifiedDate":"2023-10-30"},{"lineNumber":417,"author":{"gitId":"SebasFok"},"content":"                        formattedModule \u003d formattedModule.replace(\"%\", \"\");","lastModifiedDate":"2023-10-30"},{"lineNumber":418,"author":{"gitId":"SebasFok"},"content":"                        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":419,"author":{"gitId":"SebasFok"},"content":"                            if (!completedModules.exists(formattedModule)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":420,"author":{"gitId":"SebasFok"},"content":"                                return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":421,"author":{"gitId":"SebasFok"},"content":"                            }","lastModifiedDate":"2023-10-30"},{"lineNumber":422,"author":{"gitId":"SebasFok"},"content":"                        } catch (InvalidObjectException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":423,"author":{"gitId":"SebasFok"},"content":"                            throw new RuntimeException(e);","lastModifiedDate":"2023-10-31"},{"lineNumber":424,"author":{"gitId":"SebasFok"},"content":"                        }","lastModifiedDate":"2023-10-31"},{"lineNumber":425,"author":{"gitId":"SebasFok"},"content":"                    } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":426,"author":{"gitId":"SebasFok"},"content":"                        JSONObject prereqBranch \u003d (JSONObject) module;","lastModifiedDate":"2023-10-30"},{"lineNumber":427,"author":{"gitId":"SebasFok"},"content":"                        String key \u003d (String) prereqBranch.keySet().toArray()[0];","lastModifiedDate":"2023-10-30"},{"lineNumber":428,"author":{"gitId":"SebasFok"},"content":"                        JSONArray prereqBranchArray \u003d (JSONArray) prereqBranch.get(key);","lastModifiedDate":"2023-10-30"},{"lineNumber":429,"author":{"gitId":"SebasFok"},"content":"                        if (!checkPrereq(prereqBranchArray, key, completedModules)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":430,"author":{"gitId":"SebasFok"},"content":"                            return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":431,"author":{"gitId":"SebasFok"},"content":"                        }","lastModifiedDate":"2023-10-30"},{"lineNumber":432,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":433,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":434,"author":{"gitId":"SebasFok"},"content":"                    }","lastModifiedDate":"2023-10-30"},{"lineNumber":435,"author":{"gitId":"SebasFok"},"content":"                }","lastModifiedDate":"2023-10-30"},{"lineNumber":436,"author":{"gitId":"SebasFok"},"content":"                return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":437,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":438,"author":{"gitId":"ryanlohyr"},"content":"        }catch(ClassCastException e){","lastModifiedDate":"2023-11-04"},{"lineNumber":439,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Error checking prereq for this module\");","lastModifiedDate":"2023-11-04"},{"lineNumber":440,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-11-04"},{"lineNumber":441,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":442,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":443,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":444,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":445,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":446,"author":{"gitId":"rohitcube"},"content":"     * Retrieves a list of modules from an external API and returns it as a JSONArray.","lastModifiedDate":"2023-11-01"},{"lineNumber":447,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":448,"author":{"gitId":"ryanlohyr"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-04"},{"lineNumber":449,"author":{"gitId":"rohitcube"},"content":"     * @return A JSONArray containing module information.","lastModifiedDate":"2023-11-01"},{"lineNumber":450,"author":{"gitId":"rohitcube"},"content":"     * @throws RuntimeException If there is an issue with the HTTP request or JSON parsing.","lastModifiedDate":"2023-11-01"},{"lineNumber":451,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":452,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":453,"author":{"gitId":"rohitcube"},"content":"    public static JSONArray listAllModules() {","lastModifiedDate":"2023-10-28"},{"lineNumber":454,"author":{"gitId":"rohitcube"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":455,"author":{"gitId":"rohitcube"},"content":"            String url \u003d \"https://api.nusmods.com/v2/2023-2024/moduleList.json\";","lastModifiedDate":"2023-10-28"},{"lineNumber":456,"author":{"gitId":"rohitcube"},"content":"            String responseBody \u003d sendHttpRequestAndGetResponseBody(url);","lastModifiedDate":"2023-11-01"},{"lineNumber":457,"author":{"gitId":"rohitcube"},"content":"            JSONParser parser \u003d new JSONParser();","lastModifiedDate":"2023-10-28"},{"lineNumber":458,"author":{"gitId":"rohitcube"},"content":"            return (JSONArray) parser.parse(responseBody);","lastModifiedDate":"2023-11-01"},{"lineNumber":459,"author":{"gitId":"rohitcube"},"content":"        } catch (URISyntaxException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":460,"author":{"gitId":"rohitcube"},"content":"            System.out.println(\"Sorry, there was an error with\" +","lastModifiedDate":"2023-10-28"},{"lineNumber":461,"author":{"gitId":"rohitcube"},"content":"                    \" the provided URL: \" + e.getMessage());","lastModifiedDate":"2023-10-28"},{"lineNumber":462,"author":{"gitId":"rohitcube"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-28"},{"lineNumber":463,"author":{"gitId":"rohitcube"},"content":"        } catch (IOException | InterruptedException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":464,"author":{"gitId":"rohitcube"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-28"},{"lineNumber":465,"author":{"gitId":"rohitcube"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":466,"author":{"gitId":"rohitcube"},"content":"            //to be replaced with more robust error class in the future","lastModifiedDate":"2023-10-28"},{"lineNumber":467,"author":{"gitId":"rohitcube"},"content":"            System.out.println(\"Sorry, the JSON object could not be parsed\");","lastModifiedDate":"2023-10-28"},{"lineNumber":468,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":469,"author":{"gitId":"rohitcube"},"content":"        return null;","lastModifiedDate":"2023-10-28"},{"lineNumber":470,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":471,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":472,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":473,"author":{"gitId":"rohitcube"},"content":"     * Searches for modules containing a specified keyword in their title within a given module list.","lastModifiedDate":"2023-11-01"},{"lineNumber":474,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":475,"author":{"gitId":"ryanlohyr"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-04"},{"lineNumber":476,"author":{"gitId":"rohitcube"},"content":"     * @param keyword    The keyword to search for.","lastModifiedDate":"2023-11-01"},{"lineNumber":477,"author":{"gitId":"rohitcube"},"content":"     * @param moduleList The list of modules to search within.","lastModifiedDate":"2023-11-01"},{"lineNumber":478,"author":{"gitId":"rohitcube"},"content":"     * @return A JSONArray containing modules matching the keyword.","lastModifiedDate":"2023-11-01"},{"lineNumber":479,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":480,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":481,"author":{"gitId":"rohitcube"},"content":"    public static JSONArray search(String keyword, JSONArray moduleList) {","lastModifiedDate":"2023-10-28"},{"lineNumber":482,"author":{"gitId":"rohitcube"},"content":"        JSONArray modulesContainingKeyword \u003d new JSONArray();","lastModifiedDate":"2023-10-28"},{"lineNumber":483,"author":{"gitId":"rohitcube"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":484,"author":{"gitId":"rohitcube"},"content":"            return new JSONArray();","lastModifiedDate":"2023-10-30"},{"lineNumber":485,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":486,"author":{"gitId":"rohitcube"},"content":"        for (Object moduleObject : moduleList) {","lastModifiedDate":"2023-10-28"},{"lineNumber":487,"author":{"gitId":"rohitcube"},"content":"            JSONObject module \u003d (JSONObject) moduleObject; // Cast to JSONObject","lastModifiedDate":"2023-10-28"},{"lineNumber":488,"author":{"gitId":"rohitcube"},"content":"            String title \u003d (String) module.get(\"title\");","lastModifiedDate":"2023-10-28"},{"lineNumber":489,"author":{"gitId":"rohitcube"},"content":"            if (title.contains(keyword)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":490,"author":{"gitId":"rohitcube"},"content":"                modulesContainingKeyword.add(module);","lastModifiedDate":"2023-10-30"},{"lineNumber":491,"author":{"gitId":"rohitcube"},"content":"                //not sure how to resolve this yellow line","lastModifiedDate":"2023-10-28"},{"lineNumber":492,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":493,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":494,"author":{"gitId":"rohitcube"},"content":"        return modulesContainingKeyword;","lastModifiedDate":"2023-10-28"},{"lineNumber":495,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":496,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":497,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":498,"author":{"gitId":"rohitcube"},"content":"     * Executes commands based on user input for module information retrieval.","lastModifiedDate":"2023-11-01"},{"lineNumber":499,"author":{"gitId":"rohitcube"},"content":"     * Supports commands: \"description\", \"workload\", \"all\".","lastModifiedDate":"2023-11-01"},{"lineNumber":500,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":501,"author":{"gitId":"ryanlohyr"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-04"},{"lineNumber":502,"author":{"gitId":"rohitcube"},"content":"     * @param command   The command provided by the user.","lastModifiedDate":"2023-11-01"},{"lineNumber":503,"author":{"gitId":"rohitcube"},"content":"     * @param userInput The user input string containing the command and module code (if applicable).","lastModifiedDate":"2023-11-01"},{"lineNumber":504,"author":{"gitId":"rohitcube"},"content":"     * @throws UnknownCommandException If an unknown command is provided.","lastModifiedDate":"2023-11-01"},{"lineNumber":505,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":506,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":507,"author":{"gitId":"rohitcube"},"content":"    public static void infoCommands(String command, String userInput) {","lastModifiedDate":"2023-11-01"},{"lineNumber":508,"author":{"gitId":"rohitcube"},"content":"        if (command.equals(\"description\")) {","lastModifiedDate":"2023-10-28"},{"lineNumber":509,"author":{"gitId":"rohitcube"},"content":"            String moduleCode \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":510,"author":{"gitId":"rohitcube"},"content":"                    userInput.substring(userInput.indexOf(\"description\") + 11).trim().toUpperCase();","lastModifiedDate":"2023-11-01"},{"lineNumber":511,"author":{"gitId":"rohitcube"},"content":"            if (!Api.getDescription(moduleCode).isEmpty()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":512,"author":{"gitId":"rohitcube"},"content":"                String description \u003d Api.getDescription(moduleCode);","lastModifiedDate":"2023-10-30"},{"lineNumber":513,"author":{"gitId":"rohitcube"},"content":"                System.out.println(description);","lastModifiedDate":"2023-10-30"},{"lineNumber":514,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":515,"author":{"gitId":"rohitcube"},"content":"        } else if (command.equals(\"workload\")) {","lastModifiedDate":"2023-10-28"},{"lineNumber":516,"author":{"gitId":"rohitcube"},"content":"            String moduleCode \u003d userInput.substring(userInput.indexOf(\"workload\") + 8).trim().toUpperCase();","lastModifiedDate":"2023-11-01"},{"lineNumber":517,"author":{"gitId":"rohitcube"},"content":"            if (!Api.getWorkload(moduleCode).isEmpty()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":518,"author":{"gitId":"rohitcube"},"content":"                JSONArray workload \u003d Api.getWorkload(moduleCode);","lastModifiedDate":"2023-10-30"},{"lineNumber":519,"author":{"gitId":"rohitcube"},"content":"                System.out.println(workload);","lastModifiedDate":"2023-10-30"},{"lineNumber":520,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":521,"author":{"gitId":"rohitcube"},"content":"        } else if (command.equals(\"all\")) {","lastModifiedDate":"2023-10-30"},{"lineNumber":522,"author":{"gitId":"rohitcube"},"content":"            JSONArray allModules \u003d listAllModules();","lastModifiedDate":"2023-10-30"},{"lineNumber":523,"author":{"gitId":"rohitcube"},"content":"            assert allModules !\u003d null;","lastModifiedDate":"2023-11-01"},{"lineNumber":524,"author":{"gitId":"ryanlohyr"},"content":"            ModuleInfoView.printJsonArray(allModules);","lastModifiedDate":"2023-11-04"},{"lineNumber":525,"author":{"gitId":"rohitcube"},"content":"        } else {","lastModifiedDate":"2023-10-28"},{"lineNumber":526,"author":{"gitId":"rohitcube"},"content":"            System.out.println(\"man\");","lastModifiedDate":"2023-11-02"},{"lineNumber":527,"author":{"gitId":"ryanlohyr"},"content":"            UserError.invalidCommandforInfoCommand();","lastModifiedDate":"2023-11-03"},{"lineNumber":528,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":529,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":530,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":531,"author":{"gitId":"rohitcube"},"content":"    public static void searchCommand(String userInput) {","lastModifiedDate":"2023-11-01"},{"lineNumber":532,"author":{"gitId":"rohitcube"},"content":"        if (!Parser.isValidKeywordInput(userInput)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":533,"author":{"gitId":"ryanlohyr"},"content":"            UserError.emptyKeywordforSearchCommand();","lastModifiedDate":"2023-11-03"},{"lineNumber":534,"author":{"gitId":"rohitcube"},"content":"            return;","lastModifiedDate":"2023-11-01"},{"lineNumber":535,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":536,"author":{"gitId":"rohitcube"},"content":"        String keywords \u003d userInput.substring(userInput.indexOf(\"search\") + 6);","lastModifiedDate":"2023-11-01"},{"lineNumber":537,"author":{"gitId":"rohitcube"},"content":"        JSONArray modulesToPrint \u003d Api.search(keywords, Api.listAllModules());","lastModifiedDate":"2023-11-01"},{"lineNumber":538,"author":{"gitId":"rohitcube"},"content":"        if (modulesToPrint.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":539,"author":{"gitId":"ryanlohyr"},"content":"            UserError.emptyArrayforSearchCommand();","lastModifiedDate":"2023-11-03"},{"lineNumber":540,"author":{"gitId":"rohitcube"},"content":"            return;","lastModifiedDate":"2023-11-01"},{"lineNumber":541,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":542,"author":{"gitId":"ryanlohyr"},"content":"        ModuleInfoView.searchHeader();","lastModifiedDate":"2023-11-04"},{"lineNumber":543,"author":{"gitId":"ryanlohyr"},"content":"        ModuleInfoView.printJsonArray(modulesToPrint);","lastModifiedDate":"2023-11-04"},{"lineNumber":544,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":545,"author":{"gitId":"rohitcube"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"SebasFok":110,"ryanlohyr":219,"janelleenqi":2,"rohitcube":214}},{"path":"src/main/java/seedu/duke/models/logic/CompletePreqs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.ModuleList;","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"CerIsaiah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"CerIsaiah"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"CerIsaiah"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"CerIsaiah"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"CerIsaiah"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"CerIsaiah"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"CerIsaiah"},"content":" * CompletePreqs checks which mods are unlocked once you finish a specific module","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"CerIsaiah"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"CerIsaiah"},"content":"public class CompletePreqs {","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"CerIsaiah"},"content":"    //Full list of mods with modulesWithPreqs","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"CerIsaiah"},"content":"    private HashMap\u003cString, List\u003cString\u003e\u003e modulesWithPreqs;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"CerIsaiah"},"content":"    private ArrayList\u003cString\u003e addToModulesCompleted;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"CerIsaiah"},"content":"    // To track modules that are already unlocked","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"CerIsaiah"},"content":"    private Set\u003cString\u003e unlockedModulesSet;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"CerIsaiah"},"content":"    public CompletePreqs(HashMap\u003cString, List\u003cString\u003e\u003e inputMods) {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"CerIsaiah"},"content":"        modulesWithPreqs \u003d new HashMap\u003c\u003e(inputMods);","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"CerIsaiah"},"content":"        unlockedModulesSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"CerIsaiah"},"content":"        addToModulesCompleted \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"CerIsaiah"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"CerIsaiah"},"content":"     * Create a list of completed mods, hardcoded from startup.","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"CerIsaiah"},"content":"     * @param list","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"CerIsaiah"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"CerIsaiah"},"content":"    public void initializeCompletedMods(ModuleList list) {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"        addToModulesCompleted.addAll(list.getModuleCodes());","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"CerIsaiah"},"content":"        for (String mod : addToModulesCompleted) {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"CerIsaiah"},"content":"            processModuleForUnlockingWithoutPrint(mod);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"CerIsaiah"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"CerIsaiah"},"content":"     * Prints what mods have been unlocked after input","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"CerIsaiah"},"content":"     * @param moduleCompleted","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"CerIsaiah"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"CerIsaiah"},"content":"    public void getUnlockedMods(String moduleCompleted) {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"CerIsaiah"},"content":"        // Check prerequisites of the moduleCompleted","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"CerIsaiah"},"content":"        if (modulesWithPreqs.containsKey(moduleCompleted)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"CerIsaiah"},"content":"            List\u003cString\u003e unmetPrerequisites \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"CerIsaiah"},"content":"            for (String preq : modulesWithPreqs.get(moduleCompleted)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"CerIsaiah"},"content":"                if (!addToModulesCompleted.contains(preq)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"CerIsaiah"},"content":"                    unmetPrerequisites.add(preq);","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"CerIsaiah"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"CerIsaiah"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"CerIsaiah"},"content":"            //Stops if a completedMod shouldn\u0027t be able to be completed with proper preqs","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"CerIsaiah"},"content":"            if (!unmetPrerequisites.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"                System.out.println(moduleCompleted +","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"                        \" cannot be marked as completed because of uncompleted prerequisites: \"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"                        + unmetPrerequisites);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"CerIsaiah"},"content":"                return;","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"CerIsaiah"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"CerIsaiah"},"content":"        //If its not marked as completed, properly add it to the list","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"CerIsaiah"},"content":"        if (!addToModulesCompleted.contains(moduleCompleted)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"CerIsaiah"},"content":"            addToModulesCompleted.add(moduleCompleted);","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"CerIsaiah"},"content":"        System.out.println(\"Mod completed: \" + moduleCompleted);","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"CerIsaiah"},"content":"        printUnlockedMods(moduleCompleted);","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"CerIsaiah"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"CerIsaiah"},"content":"     * This is only used for the first initalization of the mods.","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"CerIsaiah"},"content":"     * @param moduleCompleted","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"CerIsaiah"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"    private void processModuleForUnlockingWithoutPrint(String moduleCompleted) {","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"CerIsaiah"},"content":"        ArrayList\u003cString\u003e newMods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"CerIsaiah"},"content":"        for (String key : modulesWithPreqs.keySet()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"CerIsaiah"},"content":"            //If new unlocked mod isn\u0027t marked as complete or unlocked already","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"CerIsaiah"},"content":"            if (!unlockedModulesSet.contains(key) \u0026\u0026 !addToModulesCompleted.contains(key)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"CerIsaiah"},"content":"                boolean allPrerequisitesMet \u003d true;","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"CerIsaiah"},"content":"                for (String preq : modulesWithPreqs.get(key)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"CerIsaiah"},"content":"                    if (!addToModulesCompleted.contains(preq)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"CerIsaiah"},"content":"                        //Make sure preq isn\u0027t already marked as done","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"CerIsaiah"},"content":"                        allPrerequisitesMet \u003d false;","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"CerIsaiah"},"content":"                        break;","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"CerIsaiah"},"content":"                    }","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"CerIsaiah"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"CerIsaiah"},"content":"                if (allPrerequisitesMet) {","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"CerIsaiah"},"content":"                    newMods.add(key);","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"CerIsaiah"},"content":"                    unlockedModulesSet.add(key);","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"CerIsaiah"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"CerIsaiah"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"CerIsaiah"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"CerIsaiah"},"content":"     * @param moduleCompleted","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"CerIsaiah"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"CerIsaiah"},"content":"    public void printUnlockedMods(String moduleCompleted) {","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"CerIsaiah"},"content":"        ArrayList\u003cString\u003e newlyUnlockedMods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"CerIsaiah"},"content":"        for (String key : modulesWithPreqs.keySet()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"CerIsaiah"},"content":"            //If new unlocked mod isn\u0027t marked as complete or unlocked already","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"CerIsaiah"},"content":"            if (!unlockedModulesSet.contains(key) \u0026\u0026 !addToModulesCompleted.contains(key)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"CerIsaiah"},"content":"                boolean allPrerequisitesMet \u003d true;","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"CerIsaiah"},"content":"                for (String preq : modulesWithPreqs.get(key)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"CerIsaiah"},"content":"                    if (!addToModulesCompleted.contains(preq)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"CerIsaiah"},"content":"                        //Make sure preq isn\u0027t already marked as done","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"CerIsaiah"},"content":"                        allPrerequisitesMet \u003d false;","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"CerIsaiah"},"content":"                        break;","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"CerIsaiah"},"content":"                    }","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"CerIsaiah"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"CerIsaiah"},"content":"                if (allPrerequisitesMet) {","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"CerIsaiah"},"content":"                    newlyUnlockedMods.add(key);","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"CerIsaiah"},"content":"                    unlockedModulesSet.add(key);","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"CerIsaiah"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"CerIsaiah"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"CerIsaiah"},"content":"        for (String mod : newlyUnlockedMods) {","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"CerIsaiah"},"content":"            System.out.println(mod + \" has been unlocked!\");","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"CerIsaiah"},"content":"    public void printModsCompleted(){","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"CerIsaiah"},"content":"        for (String mod: addToModulesCompleted){","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"CerIsaiah"},"content":"            System.out.println(mod + \"has been completed\");","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"janelleenqi"},"content":"    public boolean checkModInput(String[] words, ArrayList\u003cString\u003e majorModuleCodes){","lastModifiedDate":"2023-11-04"},{"lineNumber":140,"author":{"gitId":"ryanlohyr"},"content":"        if (words.length \u003d\u003d 1){","lastModifiedDate":"2023-11-03"},{"lineNumber":141,"author":{"gitId":"janelleenqi"},"content":"            if (majorModuleCodes.contains(words[0].toUpperCase())){","lastModifiedDate":"2023-11-04"},{"lineNumber":142,"author":{"gitId":"CerIsaiah"},"content":"                return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"CerIsaiah"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"CerIsaiah"},"content":"            System.out.println(\"Please enter a available mod: \");","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"            System.out.println(majorModuleCodes);","lastModifiedDate":"2023-11-04"},{"lineNumber":146,"author":{"gitId":"CerIsaiah"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"CerIsaiah"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"CerIsaiah"},"content":"        System.out.println(\"Please enter a available mod after the complete keyword\");","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(majorModuleCodes);","lastModifiedDate":"2023-11-04"},{"lineNumber":150,"author":{"gitId":"CerIsaiah"},"content":"        return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"CerIsaiah"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"SebasFok":2,"ryanlohyr":8,"janelleenqi":8,"CerIsaiah":136}},{"path":"src/main/java/seedu/duke/models/logic/DataRepository.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.models.schema.Major;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import java.io.File;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"public class DataRepository {","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves a list of modules requirements for a specified major.","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"     * @author ryanlohyr","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"     * @param major The major for which to retrieve requirements.","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"     * @return An ArrayList of module codes.","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"     * @throws RuntimeException If the specified major requirements file is not found.","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"    public static ArrayList\u003cString\u003e getRequirements(String major) {","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"            String fileName \u003d String.format(\"src/main/java/seedu/duke/models/data/%sRequirementsModuleCodes\", major);","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"            File f \u003d new File(fileName);","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"                String[] courseArray \u003d determineRequirements(major);","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"                return new ArrayList\u003c\u003e(Arrays.asList(courseArray));","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"            return processCourseFile(f);","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"     * Processes a course file, extracts relevant information, and returns a list of course codes.","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"     * @param f The file to be processed.","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"     * @return An ArrayList of course codes extracted from the file.","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"     * @throws FileNotFoundException If the specified file is not found.","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"    private static ArrayList\u003cString\u003e processCourseFile(File f) throws FileNotFoundException {","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e currentArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"            String currentLine \u003d s.nextLine();","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"            String[] words \u003d currentLine.split(\" \");","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"            if (!currentLine.isEmpty() \u0026\u0026 !currentLine.startsWith(\"*\")) { // not empty line, not title","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"                currentArray.add(words[0]);","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"        return currentArray;","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"     * Determines the course requirements based on the specified major. Function is used if file is not found","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"     * @param major A string representing the major (e.g., \"CEG\" for Computer Engineering, \"CS\" for Computer Science).","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"     * @return An array of strings containing the course requirements for the specified major.","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"    private static String[] determineRequirements(String major) {","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"        String[] courseArray;","lastModifiedDate":"2023-11-04"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"        String[] csCourseArray \u003d {","lastModifiedDate":"2023-11-04"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"            \"CS1101S\", \"ES2660\", \"GEC1000\", \"GEA1000\", \"GESS1000\",","lastModifiedDate":"2023-11-04"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"            \"GEN2000\", \"IS1108\", \"CS1231S\", \"CS2030S\", \"CS2040S\",","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"            \"CS2100\", \"CS2101\", \"CS2103T\", \"CS2106\", \"CS2109S\",","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"            \"CS3230\", \"MA1521\", \"MA1522\", \"ST2334\", \"CP3880\"","lastModifiedDate":"2023-11-04"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"        };","lastModifiedDate":"2023-11-04"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"        String[] cegCourseArray \u003d {","lastModifiedDate":"2023-11-04"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"            \"CG1111A\", \"MA1511\", \"MA1512\", \"CS1010\", \"GESS1000\",","lastModifiedDate":"2023-11-04"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"            \"GEC1000\", \"GEN2000\", \"ES2631\", \"GEA1000\", \"DTK1234\",","lastModifiedDate":"2023-11-04"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"            \"EG1311\", \"IE2141\", \"EE2211\", \"EG2501\", \"CDE2000\",","lastModifiedDate":"2023-11-04"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"            \"PF1101\", \"CG4002\", \"MA1508E\", \"EG2401A\", \"CP3880\",","lastModifiedDate":"2023-11-04"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"            \"CG2111A\", \"CS1231\", \"CG2023\", \"CG2027\", \"CG2028\",","lastModifiedDate":"2023-11-04"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"            \"CG2271\", \"ST2334\", \"CS2040C\", \"CS2113\", \"EE2026\", \"EE4204\"","lastModifiedDate":"2023-11-04"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"        };","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"        if(major.equals(\"CEG\")){","lastModifiedDate":"2023-11-04"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"            courseArray \u003d cegCourseArray;","lastModifiedDate":"2023-11-04"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"        }else{","lastModifiedDate":"2023-11-04"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"            courseArray \u003d csCourseArray;","lastModifiedDate":"2023-11-04"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"        return courseArray;","lastModifiedDate":"2023-11-04"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"     * Returns the file path for the requirements of a specified major.","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"     * @param major The major for which to retrieve the requirements file path.","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"     * @return The file path to the major\u0027s requirements file.","lastModifiedDate":"2023-10-29"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"    public static String getFullRequirements(Major major) {","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"        return String.format(\"src/main/java/seedu/duke/models/data/%sRequirements\", major.toString());","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"ryanlohyr":75,"janelleenqi":26}},{"path":"src/main/java/seedu/duke/models/logic/MajorRequirements.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.views.CommandLineView;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"public class MajorRequirements {","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"    public static void printRequiredModules(String major) {","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"        if (!major.equals(\"CEG\")) {","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"            CommandLineView.displayMessage(\"Sorry this major has not be included in our app yet.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"        CommandLineView.displayMessage(","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"                \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"                \"║\\tModular Requirements for CEG                                                \\tUnits\\t║\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"                \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"                \"+-------------------------------------------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"                \"│\\tCommon Curriculum Requirements                                              \\t60\\t\\t│\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"                \"+-------------------------------------------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"                \"\\tGES1000 (Singapore Studies)                                                 \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"                \"\\tGEC1000 (Cultures and Connections)                                          \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"                \"\\tGEN2000 (Communities and Engagement)                                        \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"                \"\\tES2631 Critique \u0026 Communication of Thinking \u0026 Design (Critique \u0026 Expression)\\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCS1010 Programming Methodology (Digital Literacy)                           \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"                \"\\tGEA1000 Quantitative Reasoning with Data (Data Literacy)                    \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"                \"\\tDTK1234 Design Thinking (Design Thinking)                                   \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"                \"\\tEG1311 Design and Make (Maker Space)                                        \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"                \"\\tIE2141 Systems Thinking and Dynamics (Systems Thinking)                     \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"                \"\\tEE2211 Introduction to Machine Learning (Artificial Intelligence)           \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCDE2501 Liveable Cities (Sustainable Futures)                               \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCDE2000 (Creating Narratives)                                               \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"                \"\\tPF1101 Fundamentals of Project Management (Project Management)              \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCG4002 Computer Engineering Capstone Project 1 (Integrated Project)         \\t8\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"                \"+-------------------------------------------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"                \"│\\tProgramme Requirements                                                      \\t60\\t\\t│\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"                \"+-------------------------------------------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"                \" ~~\\tEngineering Core                                                            \\t20\\t ~~\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"                \"\\tMA1511 Engineering Calculus                                                 \\t2\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"                \"\\tMA1512 Differential Equations for Engineering                               \\t2\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"                \"\\tMA1508E Linear Algebra for Engineering                                      \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"                \"\\tEG2401A Engineering Professionalism                                         \\t2\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCP3880 Advanced Technology Attachment Programme                             \\t12\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"                \" ~~\\tCEG Major                                                                   \\t40\\t ~~\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCG1111A Engineering Principles and Practice I                               \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCG2111A Engineering Principles and Practice II                              \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCS1231 Discrete Structures                                                  \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCG2023 Signals \u0026 Systems                                                    \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCG2027 Transistor-level Digital Circuit                                     \\t2\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCG2028 Computer Organization                                                \\t2\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCG2271 Real-time Operating System                                           \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCS2040C Data Structures and Algorithms                                      \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"                \"\\tCS2113 Software Engineering \u0026 Object-Oriented Programming                   \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"                \"\\tEE2026 Digital Design                                                       \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"                \"\\tEE4204 Computer Networks                                                    \\t4\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"                \"+-------------------------------------------------------------------------------------------+\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"                \"│\\tUnrestricted Electives                                                      \\t40\\t\\t│\\n\" +","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"                \"+-------------------------------------------------------------------------------------------+\");","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"ryanlohyr":4,"janelleenqi":61}},{"path":"src/main/java/seedu/duke/models/logic/ScheduleGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import java.util.Queue;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.Api.getModulePrereqBasedOnCourse;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.DataRepository.getRequirements;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"public class ScheduleGenerator {","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"     * Generates a recommended schedule for a given course based on its requirements and prerequisites.","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"     * @author ryanlohyr","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"     * @param course The course for which to generate a recommended schedule.","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"     * @return An ArrayList of strings representing the recommended schedule in order of completion.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"    public static ArrayList\u003cString\u003e generateRecommendedSchedule(String course){","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e requirements \u003d getRequirements(course);","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"        HashMap\u003cString, Integer\u003e degreeMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"        Queue\u003cString\u003e q \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e schedule \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"        HashMap\u003cString, ArrayList\u003cString\u003e\u003e adjacencyList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"        //initialisation","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"        for(String requirement: requirements) {","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"            adjacencyList.put(requirement, new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"            degreeMap.put(requirement, 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"        for (String requirement : requirements) {","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e prereqArray \u003d getModulePrereqBasedOnCourse(requirement, course);","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"            if (prereqArray \u003d\u003d null) {","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"                prereqArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"            //we need to create an adjacency list to add all the connections","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"            // from pre req -\u003e item","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"            for (String s : prereqArray) {","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"                adjacencyList.get(s).add(requirement);","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"                Integer value \u003d degreeMap.get(requirement) + 1;","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"                degreeMap.put(requirement, value);","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"        for (String key : degreeMap.keySet()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"            Integer value \u003d degreeMap.get(key);","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"            if(value \u003d\u003d 0){","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"                q.offer(key);","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"        while(!q.isEmpty()){","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"            String curr \u003d q.poll();","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"            schedule.add(curr);","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"            ArrayList\u003cString\u003e currReq \u003d adjacencyList.get(curr);","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"            for (String s : currReq) {","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"                int num \u003d degreeMap.get(s) - 1;","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"                degreeMap.put(s, num);","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"                if (num \u003d\u003d 0) {","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"                    q.offer(s);","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"                }","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"        return schedule;","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"ryanlohyr":74}},{"path":"src/main/java/seedu/duke/models/schema/CommandManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":" * This class represents the command system for the application.","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":" * It stores and provides descriptions for each available command.","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"public class CommandManager {","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    private HashMap\u003cString, String\u003e commandsAndDescription;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"    public CommandManager() {","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"        commandsAndDescription \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"        addCurrentCommands();","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"     * Populates the commandsAndDescription HashMap with the current commands and their descriptions.","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"    private void addCurrentCommands() {","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"        commandsAndDescription.put(\"info\", \"Displays information about a specific module.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"        commandsAndDescription.put(\"left\", \"Displays a list of remaining modules.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"        commandsAndDescription.put(\"pace\", \"Computes and displays your graduation pace.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"        commandsAndDescription.put(\"prereq\", \"Displays the prerequisites for a specific module.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"        commandsAndDescription.put(\"recommend\", \"Displays a recommended schedule based on a keyword.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"        commandsAndDescription.put(\"required\", \"Displays the full requirements for your major.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"        commandsAndDescription.put(\"complete\", \"Marks a module as complete on schedule planner.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"        commandsAndDescription.put(\"Bye\", \"Exits the program.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"        commandsAndDescription.put(\"help\", \"Shows the list of commands.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"        commandsAndDescription.put(\"add\", \"Adds module to the recommended schedule planner.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"        commandsAndDescription.put(\"delete\", \"Deletes module from the schedule planner.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"        commandsAndDescription.put(\"schedule\", \"Shows schedule planner\");","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"        commandsAndDescription.put(\"search\", \"search for modules to take based on keyword\");","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"     * Retrieves the description for a specific command.","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"     * @param command The command to retrieve the description for.","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"     * @return The description of the command, or \"Command not recognized\" if the command is not in the HashMap.","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"    public String getDescription(String command) {","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"        return commandsAndDescription.getOrDefault(command, \"Command not recognized\");","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"     * Retrieves a list of all available commands.","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"     * @return An ArrayList containing all available commands.","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"    public ArrayList\u003cString\u003e getListOfCommands() {","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"        return new ArrayList\u003c\u003e(commandsAndDescription.keySet());","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"     * Returns a formatted list of all commands and their descriptions.","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"     * @return An ArrayList of strings, where each string represents a command and its description.","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"    public ArrayList\u003cString\u003e printListOfCommands() {","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e commandList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"        for (HashMap.Entry\u003cString, String\u003e entry : commandsAndDescription.entrySet()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"            String command \u003d entry.getKey();","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"            String description \u003d entry.getValue();","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"            commandList.add(command + \": \" + description);","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"        return commandList;","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"ryanlohyr":71}},{"path":"src/main/java/seedu/duke/models/schema/Major.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":" * The `Major` enum represents different majors that can be selected by our application.","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"public enum Major {","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"    CEG, CS","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"SebasFok":6,"ryanlohyr":2}},{"path":"src/main/java/seedu/duke/models/schema/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.Api.getFullModuleInfo;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"public class Module {","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"    //module class requires Name","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"    private String moduleName;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"    private String moduleDescription;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    private String moduleCode;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"    private int moduleCredits;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"     * Represents a module with the specified module code. This class fetches module information","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"     * using the NUSMods API and stores details such as the module description, name, credits, and completion status.","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"     * @param moduleCode The code of the module.","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    public Module(String moduleCode) throws NullPointerException, RuntimeException{","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"        //add wtv info u want...","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"        if (moduleCode.isEmpty()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"            throw new NullPointerException();","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"        try {","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"            JSONObject response \u003d getFullModuleInfo(moduleCode);","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"            assert response !\u003d null: \"Response from NUSMods API is null\";","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"            assert !response.isEmpty(): \"Response Object is empty\";","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"            this.moduleCode \u003d moduleCode;","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"            this.isCompleted \u003d false;","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"            this.moduleDescription \u003d (String) response.get(\"description\");","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"            this.moduleName \u003d (String) response.get(\"title\");","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"            try{","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"                this.moduleCredits \u003d (Integer) response.get(\"moduleCredit\");","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"            }catch (ClassCastException e){","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"                this.moduleCredits \u003d 4;","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"            throw e;","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"     * Marks this module as completed.","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"    public void markModuleAsCompleted() {","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"    public boolean getCompletionStatus() {","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"        return isCompleted;","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"     * Gets the credits of this module.","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"     * @return The number of credits for this module.","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"    public int getModuleCredits() {","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"        return this.moduleCredits;","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"     * Gets the module code.","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"     * @return The code of this module.","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"    public String getModuleCode() {","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"        return this.moduleCode;","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"ryanlohyr":66,"janelleenqi":13}},{"path":"src/main/java/seedu/duke/models/schema/ModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.ModuleInfoView.printModuleArray;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":" * A class representing a list of modules and providing operations to manage them.","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"public class ModuleList {","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"    private ArrayList\u003cModule\u003e mainModuleList;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"    private int numberOfModules;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"     * Constructs a ModuleList from a space-separated string of modules.","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"     * @param modules A space-separated string of module codes.","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"    public ModuleList(String modules) {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"        mainModuleList \u003d new ArrayList\u003cModule\u003e();","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"        if (modules \u003d\u003d null || modules.isEmpty()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"            return;","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"            String[] moduleArray \u003d modules.split(\" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"            //ArrayList\u003cString\u003e moduleCodes \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"            //numberOfModules \u003d 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"            for (String module : moduleArray) {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"                try {","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"                    mainModuleList.add(new Module(module));","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"                    numberOfModules +\u003d 1;","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"                } catch (NullPointerException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"                    System.out.println(\"null pointer\");","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"                    //fail","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"                }","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"            new ModuleList();","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"     * Constructs an empty ModuleList.","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"    public ModuleList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"        mainModuleList \u003d new ArrayList\u003cModule\u003e();","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"janelleenqi"},"content":"        numberOfModules \u003d 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"    public void addModule (Module module) {","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"        mainModuleList.add(module);","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"    public void deleteModule (Module module) {","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"        mainModuleList.remove(module);","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"janelleenqi"},"content":"    public boolean exists(String moduleCodeA) throws InvalidObjectException {","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"janelleenqi"},"content":"        if (mainModuleList \u003d\u003d null) {","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"janelleenqi"},"content":"            throw new InvalidObjectException(\"Null Module List\");","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"janelleenqi"},"content":"        if (moduleCodeA \u003d\u003d null) {","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"janelleenqi"},"content":"            throw new InvalidObjectException(\"Null Module Code\");","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"janelleenqi"},"content":"        for (Module moduleB : mainModuleList) {","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"janelleenqi"},"content":"            if (moduleCodeA.equals(moduleB.getModuleCode())) {","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"janelleenqi"},"content":"                return true;","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"janelleenqi"},"content":"        return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves the list of modules.","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"janelleenqi"},"content":"     * @author janelleenqi","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"janelleenqi"},"content":"     * @return The ArrayList containing the modules.","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"janelleenqi"},"content":"    public ArrayList\u003cModule\u003e getMainModuleList() {","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"janelleenqi"},"content":"        assert mainModuleList !\u003d null: \"null mainModuleList\";","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"janelleenqi"},"content":"        return mainModuleList;","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"janelleenqi"},"content":"    public Module getModule(String moduleCode) throws InvalidObjectException {","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"janelleenqi"},"content":"        for (Module module: mainModuleList) {","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"janelleenqi"},"content":"            if (moduleCode.equals(module.getModuleCode())) {","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"janelleenqi"},"content":"                return module;","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"janelleenqi"},"content":"        throw new InvalidObjectException(\"Module does not exist.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":106,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"    public ArrayList\u003cString\u003e getModulesPlanned(){","lastModifiedDate":"2023-11-04"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e completedModuleCodes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-04"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"        for (Module module: mainModuleList){","lastModifiedDate":"2023-11-04"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"            completedModuleCodes.add(module.getModuleCode());","lastModifiedDate":"2023-11-04"},{"lineNumber":111,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"        return completedModuleCodes;","lastModifiedDate":"2023-11-04"},{"lineNumber":113,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":115,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"    public ArrayList\u003cString\u003e getModulesCompleted(){","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cString\u003e completedModuleCodes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"        for (Module module: mainModuleList){","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"            if (module.getCompletionStatus()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"                completedModuleCodes.add(module.getModuleCode());","lastModifiedDate":"2023-11-03"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":122,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":123,"author":{"gitId":"janelleenqi"},"content":"        return completedModuleCodes;","lastModifiedDate":"2023-11-03"},{"lineNumber":124,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":125,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":126,"author":{"gitId":"CerIsaiah"},"content":"    public void printMainModuleList(){","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"ryanlohyr"},"content":"        printModuleArray(mainModuleList);","lastModifiedDate":"2023-11-04"},{"lineNumber":128,"author":{"gitId":"CerIsaiah"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"CerIsaiah"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"janelleenqi"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"janelleenqi"},"content":"     * Retrieves the number of modules.","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"janelleenqi"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"janelleenqi"},"content":"     * @return The number of modules.","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"janelleenqi"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"janelleenqi"},"content":"    public int getNumberOfModules() {","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"janelleenqi"},"content":"        assert numberOfModules \u003e\u003d 0: \"negative numberOfModules\";","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"janelleenqi"},"content":"        return numberOfModules;","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"SebasFok"},"content":"     * Changes the number of modules by the specified difference.","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"SebasFok"},"content":"     * @param difference The difference by which to change the number of modules.","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"SebasFok"},"content":"     *                   A positive value increases the number, while a negative value decreases it.","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"SebasFok"},"content":"    public void changeNumberOfModules(int difference) {","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"SebasFok"},"content":"        numberOfModules +\u003d difference;","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"janelleenqi"},"content":"    public ArrayList\u003cString\u003e getModuleCodes() {","lastModifiedDate":"2023-11-04"},{"lineNumber":152,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cString\u003e moduleCodes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-04"},{"lineNumber":153,"author":{"gitId":"janelleenqi"},"content":"        for (Module module: mainModuleList){","lastModifiedDate":"2023-11-04"},{"lineNumber":154,"author":{"gitId":"janelleenqi"},"content":"            moduleCodes.add(module.getModuleCode());","lastModifiedDate":"2023-11-04"},{"lineNumber":155,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":156,"author":{"gitId":"janelleenqi"},"content":"        return moduleCodes;","lastModifiedDate":"2023-11-04"},{"lineNumber":157,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":158,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":159,"author":{"gitId":"janelleenqi"},"content":"    public int getIndex(String moduleCode) {","lastModifiedDate":"2023-11-04"},{"lineNumber":160,"author":{"gitId":"janelleenqi"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-11-04"},{"lineNumber":161,"author":{"gitId":"janelleenqi"},"content":"        for (Module module: mainModuleList){","lastModifiedDate":"2023-11-04"},{"lineNumber":162,"author":{"gitId":"janelleenqi"},"content":"            if (moduleCode.equals(module.getModuleCode())) {","lastModifiedDate":"2023-11-04"},{"lineNumber":163,"author":{"gitId":"janelleenqi"},"content":"                return i;","lastModifiedDate":"2023-11-04"},{"lineNumber":164,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":165,"author":{"gitId":"janelleenqi"},"content":"            i++;","lastModifiedDate":"2023-11-04"},{"lineNumber":166,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":167,"author":{"gitId":"janelleenqi"},"content":"        return -1;","lastModifiedDate":"2023-11-04"},{"lineNumber":168,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":169,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"SebasFok":11,"ryanlohyr":14,"janelleenqi":141,"CerIsaiah":3}},{"path":"src/main/java/seedu/duke/models/schema/ModuleWeekly.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rohitcube"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-11-05"},{"lineNumber":2,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"rohitcube"},"content":"public class ModuleWeekly extends Module {","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"rohitcube"},"content":"    private int lectureTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"rohitcube"},"content":"    private int tutorialTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"rohitcube"},"content":"    private int labTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"rohitcube"},"content":"    private int lectureDuration;","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"rohitcube"},"content":"    private int labDuration;","lastModifiedDate":"2023-11-05"},{"lineNumber":10,"author":{"gitId":"rohitcube"},"content":"    private int tutorialDuration;","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":12,"author":{"gitId":"rohitcube"},"content":"    public ModuleWeekly(String moduleCode) throws NullPointerException, RuntimeException {","lastModifiedDate":"2023-11-05"},{"lineNumber":13,"author":{"gitId":"rohitcube"},"content":"        super(moduleCode); // Call the constructor of the superclass (Module)","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"rohitcube"},"content":"    public ModuleWeekly(String moduleCode, int lectureTime, int tutorialTime,","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"rohitcube"},"content":"                        int labTime, int lectureDuration, int labDuration, int tutorialDuration)","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"rohitcube"},"content":"            throws NullPointerException, RuntimeException {","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"rohitcube"},"content":"        super(moduleCode);","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"rohitcube"},"content":"        this.lectureTime \u003d lectureTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"rohitcube"},"content":"        this.tutorialTime \u003d tutorialTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"rohitcube"},"content":"        this.labTime \u003d labTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"rohitcube"},"content":"        this.lectureDuration \u003d lectureDuration;","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"rohitcube"},"content":"        this.labDuration \u003d labDuration;","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"rohitcube"},"content":"        this.tutorialDuration \u003d tutorialDuration;","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":27,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":28,"author":{"gitId":"rohitcube"},"content":"    public int getLectureTime() {","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"rohitcube"},"content":"        return lectureTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"rohitcube"},"content":"    public int getTutorialTime() {","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"rohitcube"},"content":"        return tutorialTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"rohitcube"},"content":"    public int getLabTime() {","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"rohitcube"},"content":"        return labTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":39,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":40,"author":{"gitId":"rohitcube"},"content":"    public int getLectureDuration() {","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"rohitcube"},"content":"        return lectureDuration;","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":43,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":44,"author":{"gitId":"rohitcube"},"content":"    public int getLabDuration() {","lastModifiedDate":"2023-11-05"},{"lineNumber":45,"author":{"gitId":"rohitcube"},"content":"        return labDuration;","lastModifiedDate":"2023-11-05"},{"lineNumber":46,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":47,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":48,"author":{"gitId":"rohitcube"},"content":"    public int getTutorialDuration() {","lastModifiedDate":"2023-11-05"},{"lineNumber":49,"author":{"gitId":"rohitcube"},"content":"        return tutorialDuration;","lastModifiedDate":"2023-11-05"},{"lineNumber":50,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":51,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":52,"author":{"gitId":"rohitcube"},"content":"    // Setter methods for ModuleWeekly specific fields","lastModifiedDate":"2023-11-05"},{"lineNumber":53,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":54,"author":{"gitId":"rohitcube"},"content":"    public void setLectureTime(int lectureTime) {","lastModifiedDate":"2023-11-05"},{"lineNumber":55,"author":{"gitId":"rohitcube"},"content":"        this.lectureTime \u003d lectureTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":56,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"rohitcube"},"content":"    public void setTutorialTime(int tutorialTime) {","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"rohitcube"},"content":"        this.tutorialTime \u003d tutorialTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":60,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"rohitcube"},"content":"    public void setLabTime(int labTime) {","lastModifiedDate":"2023-11-05"},{"lineNumber":63,"author":{"gitId":"rohitcube"},"content":"        this.labTime \u003d labTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":64,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":66,"author":{"gitId":"rohitcube"},"content":"    public void setLectureDuration(int lectureDuration) {","lastModifiedDate":"2023-11-05"},{"lineNumber":67,"author":{"gitId":"rohitcube"},"content":"        this.lectureDuration \u003d lectureDuration;","lastModifiedDate":"2023-11-05"},{"lineNumber":68,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":69,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":70,"author":{"gitId":"rohitcube"},"content":"    public void setLabDuration(int labDuration) {","lastModifiedDate":"2023-11-05"},{"lineNumber":71,"author":{"gitId":"rohitcube"},"content":"        this.labDuration \u003d labDuration;","lastModifiedDate":"2023-11-05"},{"lineNumber":72,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":73,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":74,"author":{"gitId":"rohitcube"},"content":"    public void setTutorialDuration(int tutorialDuration) {","lastModifiedDate":"2023-11-05"},{"lineNumber":75,"author":{"gitId":"rohitcube"},"content":"        this.tutorialDuration \u003d tutorialDuration;","lastModifiedDate":"2023-11-05"},{"lineNumber":76,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":77,"author":{"gitId":"rohitcube"},"content":"}","lastModifiedDate":"2023-11-05"},{"lineNumber":78,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"rohitcube":78}},{"path":"src/main/java/seedu/duke/models/schema/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.exceptions.FailPrereqException;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.models.logic.Api.doesModuleExist;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.models.logic.Api.satisfiesAllPrereq;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":" * The `Schedule` class represents a student\u0027s course schedule and extends the `ModuleList` class.","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":" * It allows a student to manage and manipulate their enrolled modules across multiple semesters.","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"public class Schedule extends ModuleList {","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"    private static final int MAXIMUM_SEMESTERS \u003d 8;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"    protected int[] modulesPerSem;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"SebasFok"},"content":"     * Constructs a new `Schedule` with the provided modules and distribution across semesters.","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"     * @param modules      A string containing module codes representing the student\u0027s schedule.","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"SebasFok"},"content":"     * @param modulesPerSem An array indicating the distribution of modules across semesters.","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"SebasFok"},"content":"    public Schedule(String modules, int[] modulesPerSem) {","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"        super(modules);","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"        this.modulesPerSem \u003d modulesPerSem;","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"     * Constructs a new, empty `Schedule` with no modules and a default semester distribution.","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"SebasFok"},"content":"    public Schedule() {","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"SebasFok"},"content":"        super();","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"        this.modulesPerSem \u003d new int[]{0, 0, 0, 0, 0, 0, 0, 0};","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"     * Retrieves the maximum number of semesters allowed in a student\u0027s course schedule.","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"     * @return The maximum number of semesters allowed.","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"    public static int getMaximumSemesters() {","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"SebasFok"},"content":"        return MAXIMUM_SEMESTERS;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"    public void addRecommendedScheduleListToSchedule(ArrayList\u003cString\u003e scheduleToAdd) {","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"        final int modsToAddPerSem \u003d 5;","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"        int currentIndexOfMod \u003d 0;","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"        int currentSem \u003d 1;","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"        for (String module : scheduleToAdd) {","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"janelleenqi"},"content":"            // Check if the module fulfill pre req, else we move it to next sem","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"            // ModuleList completedModules \u003d new ModuleList(String.join(\" \", getMainModuleList()));","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"            int indexToAdd \u003d 0;","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"            for (int i \u003d 1; i \u003c currentSem; i++) {","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"                indexToAdd +\u003d this.modulesPerSem[i - 1];","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"            //Sub list as we only want modules before the current target semester","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"            List\u003cString\u003e completedModulesArray \u003d getModuleCodes().subList(0, (indexToAdd));","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"            ModuleList completedModules \u003d new ModuleList(String.join(\" \", completedModulesArray));","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"            if(!satisfiesAllPrereq(module,completedModules)){","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"                currentSem +\u003d 1;","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"                currentIndexOfMod \u003d 0;","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"SebasFok"},"content":"            try {","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"                addModuleWithoutCheckingPrereq(module, currentSem);","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"            } catch (InvalidObjectException | IllegalArgumentException e){","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"SebasFok"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"            currentIndexOfMod +\u003d 1;","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"            if(currentIndexOfMod \u003e\u003d modsToAddPerSem){","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"                currentIndexOfMod \u003d 0;","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"                currentSem +\u003d 1;","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"SebasFok"},"content":"     * Adds a module to the schedule for a specified semester.","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"SebasFok"},"content":"     * @param module The module code to be added.","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"SebasFok"},"content":"     * @param targetSem The target semester (an integer from 1 to 8) in which to add the module.","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"SebasFok"},"content":"     * @throws IllegalArgumentException If the provided semester is out of the valid range (1 to 8),","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"SebasFok"},"content":"     *     or if the module already exists in the schedule, or if the module is not valid.","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"SebasFok"},"content":"     * @throws InvalidObjectException If the module is null.","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"SebasFok"},"content":"     * @throws FailPrereqException If the prerequisites for the module are not satisfied","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"SebasFok"},"content":"    public void addModule(String module, int targetSem) throws IllegalArgumentException, InvalidObjectException,","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"SebasFok"},"content":"            FailPrereqException {","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"SebasFok"},"content":"        if (targetSem \u003c 1 || targetSem \u003e MAXIMUM_SEMESTERS) {","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"SebasFok"},"content":"            throw new IllegalArgumentException(\"Please select an integer from 1 to 8 for semester selection\");","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"SebasFok"},"content":"            if (exists(module)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"SebasFok"},"content":"                throw new IllegalArgumentException(\"Module already exists in the schedule\");","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"SebasFok"},"content":"        } catch (InvalidObjectException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"SebasFok"},"content":"            throw new InvalidObjectException(\"Module cannot be null\");","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"SebasFok"},"content":"        int indexToAdd \u003d 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"SebasFok"},"content":"        for (int i \u003d 1; i \u003c targetSem; i++) {","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"SebasFok"},"content":"            indexToAdd +\u003d this.modulesPerSem[i - 1];","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"        //Sub list as we only want modules before the current target semester","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"ryanlohyr"},"content":"        List\u003cString\u003e completedModulesArray \u003d getModulesPlanned().subList(0, (indexToAdd));","lastModifiedDate":"2023-11-04"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"        ModuleList completedModules;","lastModifiedDate":"2023-11-04"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"        if (!completedModulesArray.isEmpty()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":118,"author":{"gitId":"janelleenqi"},"content":"            completedModules \u003d new ModuleList(String.join(\" \", completedModulesArray));","lastModifiedDate":"2023-11-04"},{"lineNumber":119,"author":{"gitId":"janelleenqi"},"content":"        } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":120,"author":{"gitId":"janelleenqi"},"content":"            completedModules \u003d new ModuleList();","lastModifiedDate":"2023-11-04"},{"lineNumber":121,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":122,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"SebasFok"},"content":"            if (satisfiesAllPrereq(module, completedModules)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"ryanlohyr"},"content":"                //module initialization will be here","lastModifiedDate":"2023-11-04"},{"lineNumber":126,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":127,"author":{"gitId":"janelleenqi"},"content":"                this.getMainModuleList().add(indexToAdd, new Module(module));","lastModifiedDate":"2023-11-04"},{"lineNumber":128,"author":{"gitId":"SebasFok"},"content":"                modulesPerSem[targetSem - 1] +\u003d 1;","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"SebasFok"},"content":"                changeNumberOfModules(1);","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"SebasFok"},"content":"                return;","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":132,"author":{"gitId":"SebasFok"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"SebasFok"},"content":"            throw new IllegalArgumentException(\"Please select a valid module\");","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":135,"author":{"gitId":"SebasFok"},"content":"        throw new FailPrereqException(\"Unable to add module as prerequisites not satisfied for: \" + module);","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":138,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"SebasFok"},"content":"     * Deletes a module from the schedule by its module code.","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"SebasFok"},"content":"     * @param module The module code to be deleted from the schedule.","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"SebasFok"},"content":"     * @throws FailPrereqException If the module to be deleted is a prerequisite for other modules in the schedule.","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"SebasFok"},"content":"     * @throws IllegalArgumentException If the provided module code is not valid, the module is not in the schedule","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"SebasFok"},"content":"    public void deleteModule(String module) throws FailPrereqException, IllegalArgumentException {","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"janelleenqi"},"content":"        //int targetIndex \u003d getMainModuleList().indexOf(module);","lastModifiedDate":"2023-11-04"},{"lineNumber":148,"author":{"gitId":"janelleenqi"},"content":"        int targetIndex \u003d getIndex(module);","lastModifiedDate":"2023-11-04"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":150,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":151,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"SebasFok"},"content":"        if (!doesModuleExist(module)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"SebasFok"},"content":"            throw new IllegalArgumentException(\"Please select a valid module\");","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"SebasFok"},"content":"        if (targetIndex \u003d\u003d -1) {","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"SebasFok"},"content":"            throw new IllegalArgumentException(\"Module is not in schedule\");","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"SebasFok"},"content":"        int targetSem \u003d 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"SebasFok"},"content":"        int moduleCount \u003d modulesPerSem[0];","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"SebasFok"},"content":"        while ((moduleCount - 1) \u003c targetIndex) {","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"SebasFok"},"content":"            moduleCount +\u003d modulesPerSem[targetSem];","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"SebasFok"},"content":"            targetSem +\u003d 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"SebasFok"},"content":"        int nextSemStartingIndex \u003d moduleCount;","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"SebasFok"},"content":"        int lastModuleIndex \u003d getNumberOfModules() - 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"janelleenqi"},"content":"        List\u003cString\u003e completedModulesArray \u003d getModuleCodes().subList(0, nextSemStartingIndex);","lastModifiedDate":"2023-11-04"},{"lineNumber":173,"author":{"gitId":"SebasFok"},"content":"        ModuleList completedModules \u003d new ModuleList(String.join(\" \", completedModulesArray));","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"SebasFok"},"content":"        completedModules.getMainModuleList().remove(module);","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"SebasFok"},"content":"        List\u003cString\u003e modulesAheadArray;","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"janelleenqi"},"content":"            modulesAheadArray \u003d getModuleCodes().subList(nextSemStartingIndex, lastModuleIndex + 1);","lastModifiedDate":"2023-11-04"},{"lineNumber":179,"author":{"gitId":"SebasFok"},"content":"        } catch (IndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"SebasFok"},"content":"            modulesAheadArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"SebasFok"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"SebasFok"},"content":"            for (String moduleAhead : modulesAheadArray){","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"SebasFok"},"content":"                if (!satisfiesAllPrereq(moduleAhead, completedModules)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"SebasFok"},"content":"                    throw new FailPrereqException(\"Unable to delete module. This module is a prerequisite for \"","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"SebasFok"},"content":"                            + moduleAhead);","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"SebasFok"},"content":"                }","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"SebasFok"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"SebasFok"},"content":"            // This catch should never occur as it should not be possible to add an invalid module","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"SebasFok"},"content":"            assert false;","lastModifiedDate":"2023-11-02"},{"lineNumber":193,"author":{"gitId":"SebasFok"},"content":"            throw new IllegalArgumentException(\"Invalid Module in Schedule\");","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"SebasFok"},"content":"        getMainModuleList().remove(module);","lastModifiedDate":"2023-10-31"},{"lineNumber":197,"author":{"gitId":"SebasFok"},"content":"        modulesPerSem[targetSem - 1] -\u003d 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":198,"author":{"gitId":"SebasFok"},"content":"        changeNumberOfModules(-1);","lastModifiedDate":"2023-10-31"},{"lineNumber":199,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":200,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":202,"author":{"gitId":"ryanlohyr"},"content":"     * Adds a module to the schedule for a specified semester.","lastModifiedDate":"2023-11-04"},{"lineNumber":203,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":204,"author":{"gitId":"ryanlohyr"},"content":"     * @param module The module code to be added.","lastModifiedDate":"2023-11-04"},{"lineNumber":205,"author":{"gitId":"ryanlohyr"},"content":"     * @param targetSem The target semester (an integer from 1 to 8) in which to add the module.","lastModifiedDate":"2023-11-04"},{"lineNumber":206,"author":{"gitId":"ryanlohyr"},"content":"     * @throws IllegalArgumentException If the provided semester is out of the valid range (1 to 8),","lastModifiedDate":"2023-11-04"},{"lineNumber":207,"author":{"gitId":"ryanlohyr"},"content":"     *     or if the module already exists in the schedule, or if the module is not valid.","lastModifiedDate":"2023-11-04"},{"lineNumber":208,"author":{"gitId":"ryanlohyr"},"content":"     * @throws InvalidObjectException If the module is null.","lastModifiedDate":"2023-11-04"},{"lineNumber":209,"author":{"gitId":"ryanlohyr"},"content":"     * @throws FailPrereqException If the prerequisites for the module are not satisfied","lastModifiedDate":"2023-11-04"},{"lineNumber":210,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":211,"author":{"gitId":"ryanlohyr"},"content":"    public void addModuleWithoutCheckingPrereq(String module, int targetSem)","lastModifiedDate":"2023-11-04"},{"lineNumber":212,"author":{"gitId":"ryanlohyr"},"content":"            throws","lastModifiedDate":"2023-11-04"},{"lineNumber":213,"author":{"gitId":"ryanlohyr"},"content":"            InvalidObjectException,","lastModifiedDate":"2023-11-04"},{"lineNumber":214,"author":{"gitId":"ryanlohyr"},"content":"            IllegalArgumentException {","lastModifiedDate":"2023-11-04"},{"lineNumber":215,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":216,"author":{"gitId":"ryanlohyr"},"content":"        if (targetSem \u003c 1 || targetSem \u003e MAXIMUM_SEMESTERS) {","lastModifiedDate":"2023-11-04"},{"lineNumber":217,"author":{"gitId":"ryanlohyr"},"content":"            throw new IllegalArgumentException(\"Please select an integer from 1 to 8 for semester selection\");","lastModifiedDate":"2023-11-04"},{"lineNumber":218,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":219,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":220,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-04"},{"lineNumber":221,"author":{"gitId":"ryanlohyr"},"content":"            if (exists(module)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":222,"author":{"gitId":"ryanlohyr"},"content":"                throw new IllegalArgumentException(\"Module already exists in the schedule\");","lastModifiedDate":"2023-11-04"},{"lineNumber":223,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":224,"author":{"gitId":"ryanlohyr"},"content":"        } catch (InvalidObjectException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":225,"author":{"gitId":"ryanlohyr"},"content":"            throw new InvalidObjectException(\"Module cannot be null\");","lastModifiedDate":"2023-11-04"},{"lineNumber":226,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":227,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":228,"author":{"gitId":"ryanlohyr"},"content":"        int indexToAdd \u003d 0;","lastModifiedDate":"2023-11-04"},{"lineNumber":229,"author":{"gitId":"ryanlohyr"},"content":"        for (int i \u003d 1; i \u003c targetSem; i++) {","lastModifiedDate":"2023-11-04"},{"lineNumber":230,"author":{"gitId":"ryanlohyr"},"content":"            indexToAdd +\u003d this.modulesPerSem[i - 1];","lastModifiedDate":"2023-11-04"},{"lineNumber":231,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":232,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":233,"author":{"gitId":"ryanlohyr"},"content":"        this.getMainModuleList().add(indexToAdd, new Module(module));","lastModifiedDate":"2023-11-04"},{"lineNumber":234,"author":{"gitId":"ryanlohyr"},"content":"        modulesPerSem[targetSem - 1] +\u003d 1;","lastModifiedDate":"2023-11-04"},{"lineNumber":235,"author":{"gitId":"ryanlohyr"},"content":"        changeNumberOfModules(1);","lastModifiedDate":"2023-11-04"},{"lineNumber":236,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":237,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":238,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":239,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":240,"author":{"gitId":"SebasFok"},"content":"     * Prints the student\u0027s course schedule, displaying modules organized by semesters.","lastModifiedDate":"2023-10-31"},{"lineNumber":241,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":242,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":243,"author":{"gitId":"SebasFok"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":244,"author":{"gitId":"SebasFok"},"content":"    public void printMainModuleList() {","lastModifiedDate":"2023-10-30"},{"lineNumber":245,"author":{"gitId":"SebasFok"},"content":"        int moduleCounter \u003d 0;","lastModifiedDate":"2023-10-30"},{"lineNumber":246,"author":{"gitId":"SebasFok"},"content":"        for (int i \u003d 0; i \u003c modulesPerSem.length; i++) {","lastModifiedDate":"2023-10-30"},{"lineNumber":247,"author":{"gitId":"SebasFok"},"content":"            System.out.print(\"Sem \" + (i + 1) + \": \");","lastModifiedDate":"2023-10-30"},{"lineNumber":248,"author":{"gitId":"SebasFok"},"content":"            for (int j \u003d 0; j \u003c modulesPerSem[i]; j++) {","lastModifiedDate":"2023-10-30"},{"lineNumber":249,"author":{"gitId":"janelleenqi"},"content":"                System.out.print(getMainModuleList().get(moduleCounter).getModuleCode() + \" \");","lastModifiedDate":"2023-11-04"},{"lineNumber":250,"author":{"gitId":"SebasFok"},"content":"                moduleCounter++;","lastModifiedDate":"2023-10-30"},{"lineNumber":251,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":252,"author":{"gitId":"SebasFok"},"content":"            System.out.println();","lastModifiedDate":"2023-10-30"},{"lineNumber":253,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":254,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":255,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"SebasFok":166,"ryanlohyr":73,"janelleenqi":16}},{"path":"src/main/java/seedu/duke/models/schema/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.exceptions.FailPrereqException;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import seedu.duke.exceptions.MissingModuleException;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"import static seedu.duke.models.logic.DataRepository.getRequirements;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":" * The Student class represents a student with a name, major, and module schedule.","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"public class Student {","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"    private String name;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"    private String major;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"    private Schedule schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"    private String year;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"    private int completedModuleCredits;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    private ModuleList modulesPlanned;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"    private ArrayList\u003cString\u003e majorModuleCodes;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"SebasFok"},"content":"     * Constructs a student with a name, major, and module schedule.","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"SebasFok"},"content":"     * @param name     The name of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"SebasFok"},"content":"     * @param major    The major of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"     * @param schedule The module schedule of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"    public Student(String name, String major, Schedule schedule) {","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"        this.major \u003d major;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"SebasFok"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"        this.year \u003d null;","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"        this.modulesPlanned \u003d new ModuleList();","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"     * Constructs a student with a null name, null major, and an empty module schedule.","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"    public Student() {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"        this.name \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"        this.major \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"        this.schedule \u003d new Schedule();","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"        this.year \u003d null;","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"        this.modulesPlanned \u003d new ModuleList();","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"SebasFok"},"content":"     * Sets the class schedule of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"SebasFok"},"content":"     * @param schedule The new module schedule.","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"SebasFok"},"content":"    public void setSchedule(Schedule schedule) {","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"SebasFok"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"SebasFok"},"content":"     * Retrieves the module schedule of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"SebasFok"},"content":"     * @return The module schedule of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"SebasFok"},"content":"    public Schedule getSchedule() {","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"SebasFok"},"content":"        return schedule;","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"    public int getCurrentModuleCredits(){","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"        return completedModuleCredits;","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"SebasFok"},"content":"     * Retrieves the name of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"SebasFok"},"content":"     * @return The name of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"SebasFok"},"content":"    public String getName() {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"SebasFok"},"content":"        return name;","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"SebasFok"},"content":"     * Retrieves the major of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"SebasFok"},"content":"     * @return The major of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"SebasFok"},"content":"     * @throws NullPointerException If the major has not been set (i.e., it is `null`).","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"    public String getMajor(){","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"SebasFok"},"content":"        return major;","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"     * Sets the first major without the major command","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"     * @author Isaiah Cerven","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"     * @param userInput must be validated in parser as CS or CEG","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"    public void setFirstMajor(String userInput){","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"            setMajor(userInput.toUpperCase());","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(e);","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":105,"author":{"gitId":"janelleenqi"},"content":"    public void addModuleSchedule(String moduleCode, int targetSem) throws InvalidObjectException, FailPrereqException {","lastModifiedDate":"2023-11-03"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"        this.schedule.addModule(moduleCode,targetSem);","lastModifiedDate":"2023-11-03"},{"lineNumber":107,"author":{"gitId":"janelleenqi"},"content":"        this.modulesPlanned.addModule(new Module(moduleCode));","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":111,"author":{"gitId":"ryanlohyr"},"content":"     * Completes a module with the specified module code.","lastModifiedDate":"2023-11-03"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":113,"author":{"gitId":"ryanlohyr"},"content":"     * @author ryanlohyr","lastModifiedDate":"2023-11-03"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"     * @param moduleCode The code of the module to be completed.","lastModifiedDate":"2023-11-03"},{"lineNumber":115,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":116,"author":{"gitId":"janelleenqi"},"content":"    public void completeModuleSchedule(String moduleCode) {","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cModule\u003e modulesPlanned \u003d this.modulesPlanned.getMainModuleList();","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"ryanlohyr"},"content":"        for (Module module : modulesPlanned) {","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"ryanlohyr"},"content":"            if (module.getModuleCode().equals(moduleCode)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":120,"author":{"gitId":"ryanlohyr"},"content":"                this.completedModuleCredits +\u003d module.getModuleCredits();","lastModifiedDate":"2023-11-03"},{"lineNumber":121,"author":{"gitId":"ryanlohyr"},"content":"                module.markModuleAsCompleted();","lastModifiedDate":"2023-11-03"},{"lineNumber":122,"author":{"gitId":"ryanlohyr"},"content":"                return;","lastModifiedDate":"2023-11-03"},{"lineNumber":123,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":124,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":125,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":126,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":127,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":128,"author":{"gitId":"ryanlohyr"},"content":"    public void printSchedule(){","lastModifiedDate":"2023-11-03"},{"lineNumber":129,"author":{"gitId":"ryanlohyr"},"content":"        this.schedule.printMainModuleList();","lastModifiedDate":"2023-11-03"},{"lineNumber":130,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":131,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":132,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":133,"author":{"gitId":"ryanlohyr"},"content":"     * Deletes a module with the specified module code. This method also updates the completed","lastModifiedDate":"2023-11-03"},{"lineNumber":134,"author":{"gitId":"ryanlohyr"},"content":"     * module credits and removes the module from the planned modules list.","lastModifiedDate":"2023-11-03"},{"lineNumber":135,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"     * @author ryanlohyr","lastModifiedDate":"2023-11-03"},{"lineNumber":137,"author":{"gitId":"ryanlohyr"},"content":"     * @param moduleCode The code of the module to be deleted.","lastModifiedDate":"2023-11-03"},{"lineNumber":138,"author":{"gitId":"ryanlohyr"},"content":"     * @throws FailPrereqException If deleting the module fails due to prerequisite dependencies.","lastModifiedDate":"2023-11-03"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":140,"author":{"gitId":"janelleenqi"},"content":"    public void deleteModuleSchedule(String moduleCode) throws FailPrereqException, MissingModuleException {","lastModifiedDate":"2023-11-04"},{"lineNumber":141,"author":{"gitId":"ryanlohyr"},"content":"        this.schedule.deleteModule(moduleCode);","lastModifiedDate":"2023-11-03"},{"lineNumber":142,"author":{"gitId":"janelleenqi"},"content":"        Module module;","lastModifiedDate":"2023-11-03"},{"lineNumber":143,"author":{"gitId":"janelleenqi"},"content":"        try {","lastModifiedDate":"2023-11-03"},{"lineNumber":144,"author":{"gitId":"janelleenqi"},"content":"            module \u003d modulesPlanned.getModule(moduleCode);","lastModifiedDate":"2023-11-03"},{"lineNumber":145,"author":{"gitId":"janelleenqi"},"content":"        } catch (InvalidObjectException e) {","lastModifiedDate":"2023-11-03"},{"lineNumber":146,"author":{"gitId":"janelleenqi"},"content":"            throw new MissingModuleException(moduleCode + \" is not in Modules Planner.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":147,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":148,"author":{"gitId":"janelleenqi"},"content":"        this.completedModuleCredits -\u003d module.getModuleCredits();","lastModifiedDate":"2023-11-03"},{"lineNumber":149,"author":{"gitId":"janelleenqi"},"content":"        modulesPlanned.deleteModule(module);","lastModifiedDate":"2023-11-03"},{"lineNumber":150,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":151,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":152,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":153,"author":{"gitId":"ryanlohyr"},"content":"    public String getYear() {","lastModifiedDate":"2023-11-03"},{"lineNumber":154,"author":{"gitId":"ryanlohyr"},"content":"        return year;","lastModifiedDate":"2023-11-03"},{"lineNumber":155,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":156,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":157,"author":{"gitId":"ryanlohyr"},"content":"    public void setYear(String year) {","lastModifiedDate":"2023-11-03"},{"lineNumber":158,"author":{"gitId":"ryanlohyr"},"content":"        this.year \u003d year;","lastModifiedDate":"2023-11-03"},{"lineNumber":159,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":160,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":161,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":162,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"SebasFok"},"content":"     * Sets the name of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":164,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":165,"author":{"gitId":"SebasFok"},"content":"     * @param name The new name of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":167,"author":{"gitId":"SebasFok"},"content":"    public void setName(String name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"SebasFok"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":172,"author":{"gitId":"SebasFok"},"content":"     * Sets the major of the student.","lastModifiedDate":"2023-10-30"},{"lineNumber":173,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":174,"author":{"gitId":"SebasFok"},"content":"     * @param major The new major to set.","lastModifiedDate":"2023-10-30"},{"lineNumber":175,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":176,"author":{"gitId":"ryanlohyr"},"content":"    public void setMajor(String major) {","lastModifiedDate":"2023-11-03"},{"lineNumber":177,"author":{"gitId":"SebasFok"},"content":"        this.major \u003d major;","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"janelleenqi"},"content":"        majorModuleCodes \u003d getRequirements(major.toString());","lastModifiedDate":"2023-11-03"},{"lineNumber":179,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":180,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":181,"author":{"gitId":"janelleenqi"},"content":"    public ArrayList\u003cString\u003e getModuleCodesLeft () {","lastModifiedDate":"2023-11-03"},{"lineNumber":182,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cString\u003e moduleCodesLeft \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-11-03"},{"lineNumber":183,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cString\u003e completedModuleCodes \u003d modulesPlanned.getModulesCompleted();","lastModifiedDate":"2023-11-03"},{"lineNumber":184,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":185,"author":{"gitId":"janelleenqi"},"content":"        for (String moduleCode: majorModuleCodes) {","lastModifiedDate":"2023-11-03"},{"lineNumber":186,"author":{"gitId":"janelleenqi"},"content":"            if (!completedModuleCodes.contains(moduleCode)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":187,"author":{"gitId":"janelleenqi"},"content":"                moduleCodesLeft.add(moduleCode);","lastModifiedDate":"2023-11-03"},{"lineNumber":188,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":189,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":190,"author":{"gitId":"janelleenqi"},"content":"        return moduleCodesLeft;","lastModifiedDate":"2023-11-03"},{"lineNumber":191,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":193,"author":{"gitId":"janelleenqi"},"content":"    public ArrayList\u003cString\u003e getMajorModuleCodes() {","lastModifiedDate":"2023-11-04"},{"lineNumber":194,"author":{"gitId":"janelleenqi"},"content":"        return majorModuleCodes;","lastModifiedDate":"2023-11-04"},{"lineNumber":195,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":196,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":197,"author":{"gitId":"janelleenqi"},"content":"    public ModuleList getModulesPlanned() {","lastModifiedDate":"2023-11-04"},{"lineNumber":198,"author":{"gitId":"janelleenqi"},"content":"        return modulesPlanned;","lastModifiedDate":"2023-11-04"},{"lineNumber":199,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":200,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"SebasFok":84,"ryanlohyr":76,"janelleenqi":40}},{"path":"src/main/java/seedu/duke/models/schema/UserCommands.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"public interface UserCommands {","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"    String EXIT_COMMAND \u003d \"Bye\";","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"    String LEFT_COMMAND \u003d \"left\";","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"    String PACE_COMMAND \u003d \"pace\";","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"    String PREREQUISITE_COMMAND \u003d \"prereq\";","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"    String RECOMMEND_COMMAND \u003d \"recommend\";","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"    String SET_MAJOR_COMMAND \u003d \"major\";","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"    String ADD_MODULE_COMMAND \u003d \"add\";","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    String DELETE_MODULE_COMMAND \u003d \"delete\";","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"    String VIEW_SCHEDULE_COMMAND \u003d \"schedule\";","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"    String COMPLETE_MODULE_COMMAND \u003d \"complete\";","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"    String REQUIRED_MODULES_COMMAND \u003d \"required\";","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"    String INFO_COMMAND \u003d \"info\";","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"    String SEARCH_MODULE_COMMAND \u003d \"search\";","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"    String HELP_COMMAND \u003d \"help\";","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"ryanlohyr":19}},{"path":"src/main/java/seedu/duke/utils/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.utils;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.models.schema.Major;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.UserCommands;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.utils.errors.UserError;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"public class Parser {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"     * Parses a user input string to extract and return the main command.","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"     * @author ryanlohyr","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"     * @return The main command from the input string.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"    public static String parseCommand(String userInput){","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"        String[] keywords \u003d userInput.split(\" \");","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"        return keywords[0];","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"     * Excludes the command and extracts and returns an array of arguments from a user input string.","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"     * @author ryanlohyr","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"     * @return An array of arguments from the input string.","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"    public static String[] parseArguments(String userInput){","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"        String[] keywords \u003d userInput.split(\" \");","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"        return Arrays.copyOfRange(keywords, 1, keywords.length);","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"     * Checks if the given academic year input is valid.","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"     * The academic year should be in the format \"Yn/Sx\", where \u0027n\u0027 represents the year","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"     * and \u0027x\u0027 represents the semester (e.g., Y1/S1, Y2/S2).","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"     * @author @ryanlohyr","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"     * @param userInput The academic year input to be validated.","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"     * @return true if the input is a valid academic year, false otherwise.","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"     * @throws IllegalArgumentException if the input format is incorrect or if the year or semester is invalid.","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"    public static boolean isValidAcademicYear( String userInput ) {","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"            String[] parts \u003d userInput.split(\"/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"            if(parts.length !\u003d 2){","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"                throw new IllegalArgumentException(\"Needs to be in format of Y2/S1\");","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"            String year \u003d parts[0].toUpperCase();","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"            String semester \u003d parts[1].toUpperCase();","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"            //last year","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"            if(year.equals(\"Y4\") \u0026\u0026 semester.equals(\"S2\")){","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"                throw new IllegalArgumentException(\"Its your last sem!! A bit too late ya....\");","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"            //validate semester","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"            if(!semester.equals(\"S1\") \u0026\u0026 !semester.equals(\"S2\")){","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"                throw new IllegalArgumentException(\"Invalid Semester\");","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"            //validate year","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"            if (!(year.equals(\"Y1\") || year.equals(\"Y2\") || year.equals(\"Y3\") || year.equals(\"Y4\"))) {","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"                // The input is not \"Y1,\" \"Y2,\" \"Y3,\" or \"Y4\"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"                throw new IllegalArgumentException(\"Invalid Year\");","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"    public boolean checkNameInput(String userInput, ArrayList\u003cString\u003e forbiddenCommands) {","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"        // Check for non-empty string","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"        if (userInput.trim().isEmpty()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Name cannot be empty. Please enter a valid name.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"        // Check for length constraints","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"        int minLength \u003d 2;  // Minimum length for a valid name","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"        int maxLength \u003d 50; // Maximum length for a valid name","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"        if (userInput.length() \u003c minLength || userInput.length() \u003e maxLength) {","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Name must be between \" + minLength + \" and \" + maxLength + \" characters.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"        // Check for valid characters","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"        if (!userInput.matches(\"[a-zA-Z- \u0027]+\")) {","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Name can only contain letters, spaces, hyphens, and apostrophes.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"        // Check for no leading or trailing spaces","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"        if (!userInput.equals(userInput.trim())) {","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Name cannot start or end with a space.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"        if (forbiddenCommands.contains(userInput.trim().toLowerCase())) {","lastModifiedDate":"2023-11-03"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println(\"Invalid name. This name is reserved for commands. Please enter a different name.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"            return false;","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"        return true;","lastModifiedDate":"2023-11-03"},{"lineNumber":111,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":113,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"rohitcube"},"content":"     * Checks the validity of user input based on the provided command and words array.","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"rohitcube"},"content":"     * @param command The command provided by the user.","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"ryanlohyr"},"content":"     * @param arguments   An array of words parsed from the user input.","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"rohitcube"},"content":"     * @return        True if the input is valid, false otherwise.","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"ryanlohyr"},"content":"    public static boolean isValidInputForCommand(String command, String[] arguments) {","lastModifiedDate":"2023-11-03"},{"lineNumber":121,"author":{"gitId":"ryanlohyr"},"content":"        switch (command) {","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommands.PREREQUISITE_COMMAND: {","lastModifiedDate":"2023-11-04"},{"lineNumber":123,"author":{"gitId":"ryanlohyr"},"content":"            if (arguments.length \u003c 1) {","lastModifiedDate":"2023-11-03"},{"lineNumber":124,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommands.RECOMMEND_COMMAND: {","lastModifiedDate":"2023-11-04"},{"lineNumber":129,"author":{"gitId":"ryanlohyr"},"content":"            //arguments need to be empty","lastModifiedDate":"2023-11-04"},{"lineNumber":130,"author":{"gitId":"ryanlohyr"},"content":"            if (arguments.length \u003e 0) {","lastModifiedDate":"2023-11-04"},{"lineNumber":131,"author":{"gitId":"ryanlohyr"},"content":"                return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"ryanlohyr"},"content":"            break;","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommands.SET_MAJOR_COMMAND: {","lastModifiedDate":"2023-11-04"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"            if (arguments.length \u003d\u003d 0) {","lastModifiedDate":"2023-11-03"},{"lineNumber":137,"author":{"gitId":"SebasFok"},"content":"                return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"            if (arguments.length \u003e 1) {","lastModifiedDate":"2023-11-03"},{"lineNumber":140,"author":{"gitId":"ryanlohyr"},"content":"                UserError.invalidMajorFormat();","lastModifiedDate":"2023-11-03"},{"lineNumber":141,"author":{"gitId":"SebasFok"},"content":"                return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"SebasFok"},"content":"            try {","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"ryanlohyr"},"content":"                Major.valueOf(arguments[0].toUpperCase());","lastModifiedDate":"2023-11-03"},{"lineNumber":145,"author":{"gitId":"SebasFok"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"SebasFok"},"content":"                String availableMajors \u003d Arrays.toString(Major.values());","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"ryanlohyr"},"content":"                UserError.invalidMajor(availableMajors);","lastModifiedDate":"2023-11-03"},{"lineNumber":148,"author":{"gitId":"SebasFok"},"content":"                return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"SebasFok"},"content":"            break;","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommands.ADD_MODULE_COMMAND: {","lastModifiedDate":"2023-11-04"},{"lineNumber":153,"author":{"gitId":"ryanlohyr"},"content":"            if (arguments.length !\u003d 2) {","lastModifiedDate":"2023-11-03"},{"lineNumber":154,"author":{"gitId":"ryanlohyr"},"content":"                UserError.invalidAddFormat();","lastModifiedDate":"2023-11-03"},{"lineNumber":155,"author":{"gitId":"SebasFok"},"content":"                return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"SebasFok"},"content":"            try {","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"ryanlohyr"},"content":"                Integer.parseInt(arguments[1]);","lastModifiedDate":"2023-11-03"},{"lineNumber":159,"author":{"gitId":"SebasFok"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"ryanlohyr"},"content":"                UserError.invalidSemester();","lastModifiedDate":"2023-11-03"},{"lineNumber":161,"author":{"gitId":"SebasFok"},"content":"                return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"SebasFok"},"content":"            break;","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommands.DELETE_MODULE_COMMAND: {","lastModifiedDate":"2023-11-04"},{"lineNumber":166,"author":{"gitId":"ryanlohyr"},"content":"            if (arguments.length !\u003d 1) {","lastModifiedDate":"2023-11-03"},{"lineNumber":167,"author":{"gitId":"ryanlohyr"},"content":"                UserError.invalidDeleteFormat();","lastModifiedDate":"2023-11-03"},{"lineNumber":168,"author":{"gitId":"SebasFok"},"content":"                return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"SebasFok"},"content":"            break;","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"ryanlohyr"},"content":"        case UserCommands.INFO_COMMAND: {","lastModifiedDate":"2023-11-04"},{"lineNumber":173,"author":{"gitId":"ryanlohyr"},"content":"            if (arguments.length \u003c 1) {","lastModifiedDate":"2023-11-03"},{"lineNumber":174,"author":{"gitId":"ryanlohyr"},"content":"                UserError.emptyInputforInfoCommand();","lastModifiedDate":"2023-11-03"},{"lineNumber":175,"author":{"gitId":"rohitcube"},"content":"                return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":176,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":177,"author":{"gitId":"ryanlohyr"},"content":"            if (!arguments[0].equals(\"description\") \u0026\u0026 !arguments[0].equals(\"workload\")","lastModifiedDate":"2023-11-03"},{"lineNumber":178,"author":{"gitId":"ryanlohyr"},"content":"                    \u0026\u0026 !arguments[0].equals(\"all\") \u0026\u0026 !arguments[0].equals(\"requirements\")) {","lastModifiedDate":"2023-11-03"},{"lineNumber":179,"author":{"gitId":"ryanlohyr"},"content":"                UserError.invalidCommandforInfoCommand();","lastModifiedDate":"2023-11-03"},{"lineNumber":180,"author":{"gitId":"rohitcube"},"content":"                return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"rohitcube"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"rohitcube"},"content":"            break;","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"rohitcube"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"ryanlohyr"},"content":"        default: {","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"ryanlohyr"},"content":"            return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":187,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":188,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":189,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":190,"author":{"gitId":"ryanlohyr"},"content":"        return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":191,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":192,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":193,"author":{"gitId":"rohitcube"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":194,"author":{"gitId":"rohitcube"},"content":"     * Checks the validity of keyword input for a search command.","lastModifiedDate":"2023-11-01"},{"lineNumber":195,"author":{"gitId":"rohitcube"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":196,"author":{"gitId":"rohitcube"},"content":"     * @author rohitcube","lastModifiedDate":"2023-11-01"},{"lineNumber":197,"author":{"gitId":"rohitcube"},"content":"     * @param userInput The user input string containing the search command and keywords.","lastModifiedDate":"2023-11-01"},{"lineNumber":198,"author":{"gitId":"rohitcube"},"content":"     * @return          True if the keyword input is valid, false otherwise.","lastModifiedDate":"2023-11-01"},{"lineNumber":199,"author":{"gitId":"rohitcube"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":200,"author":{"gitId":"rohitcube"},"content":"    public static boolean isValidKeywordInput(String userInput) {","lastModifiedDate":"2023-11-01"},{"lineNumber":201,"author":{"gitId":"rohitcube"},"content":"        String keywords \u003d userInput.substring(userInput.indexOf(\"search\") + 6);","lastModifiedDate":"2023-11-01"},{"lineNumber":202,"author":{"gitId":"rohitcube"},"content":"        // need to add a function to make search case-insensitive","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"rohitcube"},"content":"        return !keywords.trim().isEmpty();","lastModifiedDate":"2023-11-01"},{"lineNumber":204,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":205,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":206,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":207,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"SebasFok":26,"ryanlohyr":155,"rohitcube":26}},{"path":"src/main/java/seedu/duke/utils/UnknownCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.utils;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"rohitcube"},"content":"public class UnknownCommandException extends Exception{","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"rohitcube"},"content":"    public UnknownCommandException(String command) {","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"rohitcube"},"content":"        super(\"Unknown command: \" + command);","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"rohitcube"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"ryanlohyr":1,"rohitcube":6}},{"path":"src/main/java/seedu/duke/utils/errors/ClassError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.utils.errors;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"public class ClassError {","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"    public static void defaultClassError(Object message){","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(message);","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"ryanlohyr":7}},{"path":"src/main/java/seedu/duke/utils/errors/HttpError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.utils.errors;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"public class HttpError {","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"ryanlohyr":5}},{"path":"src/main/java/seedu/duke/utils/errors/UserError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.utils.errors;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"public class UserError {","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"    public static void invalidInput(){","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"Invalid Input provided\");","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"    public static void invalidMajorFormat() {","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"Please select a major using this format: major [major]\");","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"To check your current major, type: major\");","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"    public static void invalidMajor(String availableMajors) {","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"Please select a major from this list: \" + availableMajors);","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"    public static void invalidModule(String moduleCode){","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"        String response \u003d String.format(\"Sorry, Module %s does not exist\",moduleCode);","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(response);","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"    public static void displayInvalidInputCommand(String command){","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"        String response \u003d String.format(\"Invalid command %s. Type help to see the available commands\",command);","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(response);","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"    public static void displayInvalidMethodCommand(String command){","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"        String response \u003d String.format(\"Invalid argument for command %s\", command);","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(response);","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"    public static void invalidAddFormat() {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"Please add a module using this format: add [module code] [semester]\");","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"SebasFok"},"content":"    public static void invalidSemester() {","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"Please select an integer from 1 to 8 for semester selection\");","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"    public static void invalidDeleteFormat() {","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"Please delete a module using this format: delete [module code]\");","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"rohitcube"},"content":"    public static void emptyInputforInfoCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"rohitcube"},"content":"        System.out.println(\"Empty input detected. Please enter a valid input after the info command.\" +","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"rohitcube"},"content":"                \" (E.g description, workload, all)\");","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"rohitcube"},"content":"    public static void invalidCommandforInfoCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"rohitcube"},"content":"        System.out.println(\"Please enter a valid command after the info command. (E.g description, workload, all)\");","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"rohitcube"},"content":"    public static void emptyKeywordforSearchCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"rohitcube"},"content":"        System.out.println(\"Empty input detected. Please enter a valid keyword after the search command.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"rohitcube"},"content":"    public static void emptyArrayforSearchCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"rohitcube"},"content":"        System.out.println(\"Oops! Your search results came up empty. Please try searching with different keywords.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"janelleenqi"},"content":"    public static void emptyMajor() {","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(\"Major has not been provided yet.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"janelleenqi"},"content":"    public static void moduleDoesNotExist(String moduleCode) {","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"janelleenqi"},"content":"        System.out.println(moduleCode + \"does not exist in your schedule.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"SebasFok":18,"ryanlohyr":23,"janelleenqi":8,"rohitcube":18}},{"path":"src/main/java/seedu/duke/views/CommandLineView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.views;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.CommandManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"import static seedu.duke.models.logic.Api.getModulePrereqBasedOnCourse;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"public class CommandLineView {","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"    public static void displayWelcome(){","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"    public static void displayGoodbye(){","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"Goodbye.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"    public static void displayReady(){","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"Now you\u0027re all set to use NUSDegs to kick start your degree planning!\");","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"        displayHelp();","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"    public static void displayHelp(){","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"Type \u0027help\u0027 to see the available commands\");","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"    public static void displayGetMajor(String name){","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"Welcome \" + name + \"! What major are you? (Only two available: CEG or CS)\");","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"    public static void displayGetYear(){","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"What Year and Semester are you? Ex: Y1/S2 for year 1 semester 2\");","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"    public static void handleMajorMessage(int userInputLength, String major) {","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"        assert (userInputLength \u003d\u003d 0 || userInputLength \u003d\u003d 1);","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"        if (userInputLength \u003d\u003d 0) {","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"            if (major \u003d\u003d null) {","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"                displayMessage(\"No major selected!\");","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"SebasFok"},"content":"                return;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"SebasFok"},"content":"            displayMessage(\"Current major is \" + major + \".\");","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"SebasFok"},"content":"            return;","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"SebasFok"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"SebasFok"},"content":"        displayMessage(\"Major \" + major + \" selected!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"    public static void printListOfCommands(CommandManager commandManager) {","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"        for (String command : commandManager.printListOfCommands()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(command);","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"    public static void showPrereqCEG(String module) {","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"SebasFok"},"content":"        System.out.println(\"This module\u0027s prerequisites are \"","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"SebasFok"},"content":"                + getModulePrereqBasedOnCourse(module.toUpperCase(),\"CEG\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"    public static void displaySuccessfulAddMessage() {","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"SebasFok"},"content":"        displayMessage(\"Module Successfully Added\");","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"    public static void displaySuccessfulDeleteMessage() {","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"SebasFok"},"content":"        displayMessage(\"Module Successfully Deleted\");","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"SebasFok"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"SebasFok"},"content":"     * Display a message to the command line view.","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"SebasFok"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"SebasFok"},"content":"     * @param o The object to be displayed.","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"SebasFok"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"    public static void displayMessage(Object o) {","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"SebasFok"},"content":"        System.out.println(o);","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"    public static void printNewline(){","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println();","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"SebasFok":32,"ryanlohyr":53,"janelleenqi":1}},{"path":"src/main/java/seedu/duke/views/ModuleInfoView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.views;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.json.simple.JSONArray;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Module;","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"public class ModuleInfoView {","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    public static void print(String output) {","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(output);","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"    public static void printLine() {","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(\"_________________________________________\");","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"    public static void printJsonArray(JSONArray modules) {","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"        for (Object module: modules) {","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"            JSONObject castedModule \u003d (JSONObject) module;","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"            print(\"Title: \" + (String)castedModule.get(\"title\"));","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"            print(\"Module Code: \" + (String)castedModule.get(\"moduleCode\"));","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"            printLine();","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"    public static void searchHeader() {","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"        printLine();","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"        print(\"These are the modules that contain your keyword in the title:\");","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"        print(\"\");","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"     * Print a list of modules in columns with a specified maximum height.","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"     * @author ryanlohyr","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"     * @param modules       An ArrayList of module names to be printed.","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"    public static void printModuleStringArray(ArrayList\u003cString\u003e modules){","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"        int maxColumnHeight \u003d 5;","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"        for (int i \u003d 0; i \u003c modules.size(); i +\u003d maxColumnHeight) {","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"            for (int j \u003d 0; j \u003c maxColumnHeight \u0026\u0026 i + j \u003c modules.size(); j++) {","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"                String module \u003d (i + j + 1) + \". \" + modules.get(i + j);","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"                System.out.printf(\"%-15s\", module);","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println();","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"     * Print a list of modules in columns with a specified maximum height.","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"     * @author ryanlohyr","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"     * @param modules       An ArrayList of module names to be printed.","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"    public static void printModuleArray(ArrayList\u003cModule\u003e modules){","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"        int maxColumnHeight \u003d 5;","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"        for (int i \u003d 0; i \u003c modules.size(); i +\u003d maxColumnHeight) {","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"            for (int j \u003d 0; j \u003c maxColumnHeight \u0026\u0026 i + j \u003c modules.size(); j++) {","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"                String module \u003d (i + j + 1) + \". \" + modules.get(i + j);","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"                System.out.printf(\"%-15s\", module);","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"            System.out.println();","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"ryanlohyr":67}},{"path":"src/test/java/seedu/duke/ApiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rohitcube"},"content":"package seedu.duke;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.JSONArray;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"rohitcube"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.logic.Api;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"rohitcube"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"rohitcube"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.views.ModuleInfoView;","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"rohitcube"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"rohitcube"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"rohitcube"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"rohitcube"},"content":"public class ApiTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"rohitcube"},"content":"    void testGetModuleInfo_shouldReturnTrueForCS2113() {","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"rohitcube"},"content":"        String correctModuleInfo \u003d \"\\\"description\\\":\\\"This course introduces the necessary skills for systematic \" +","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"rohitcube"},"content":"                \"and rigorous development of software systems. It covers\";","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"rohitcube"},"content":"        String moduleCode \u003d \"CS2113\";","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"rohitcube"},"content":"        String moduleInfo \u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"rohitcube"},"content":"        moduleInfo \u003d Objects.requireNonNull(Api.getFullModuleInfo(moduleCode)).toJSONString();","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"rohitcube"},"content":"        assertNotNull(moduleInfo, \"Module info should not be null\");","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"rohitcube"},"content":"        assertTrue(moduleInfo.contains(correctModuleInfo), \"Module info should contain relevant info\");","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"rohitcube"},"content":"    void testGetDescription_shouldReturnEquals() {","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"rohitcube"},"content":"        String correctDescription \u003d \"This course introduces the necessary skills for systematic and \" +","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"rohitcube"},"content":"                \"rigorous development of software systems. It covers requirements, design, implementation, \" +","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"rohitcube"},"content":"                \"quality assurance, and project management aspects of small-to-medium size multi-person software\" +","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"rohitcube"},"content":"                \" projects. The course uses the Object Oriented Programming paradigm. Students of this course will \" +","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"rohitcube"},"content":"                \"receive hands-on practice of tools commonly used in the industry, such as test automation tools,\" +","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"rohitcube"},"content":"                \" build automation tools, and code revisioning tools will be covered.\";","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"rohitcube"},"content":"        String moduleCode \u003d \"CS2113\";","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"rohitcube"},"content":"        String description \u003d Api.getDescription(moduleCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"rohitcube"},"content":"        assertEquals(correctDescription, description);","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"rohitcube"},"content":"    void testGetWorkload_shouldReturnCorrectValue() {","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"rohitcube"},"content":"        // uses unchecked or unsafe operations, Note: Recompile with -Xlint:unchecked for details.","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"rohitcube"},"content":"        JSONArray workload \u003d Api.getWorkload(\"CS2113\");","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"rohitcube"},"content":"        JSONArray jsonArray \u003d new JSONArray();","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"rohitcube"},"content":"        jsonArray.add(2);","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"rohitcube"},"content":"        jsonArray.add(1);","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"rohitcube"},"content":"        jsonArray.add(0);","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"rohitcube"},"content":"        jsonArray.add(3);","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"rohitcube"},"content":"        jsonArray.add(4);","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"rohitcube"},"content":"        String jsonString1 \u003d jsonArray.toJSONString();","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"rohitcube"},"content":"        String jsonString2 \u003d workload.toJSONString();","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"rohitcube"},"content":"        assertEquals(jsonString2, jsonString1);","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"rohitcube"},"content":"    void testListAllModules() {","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"rohitcube"},"content":"        Api.listAllModules();","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"rohitcube"},"content":"    void testSearchModules_emptyInput_expectedEmptyJsonArray() {","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"rohitcube"},"content":"        JSONArray modulesToPrint;","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"rohitcube"},"content":"        modulesToPrint \u003d Api.search(\"     \", Api.listAllModules());","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"rohitcube"},"content":"        assertEquals(0, modulesToPrint.size(), \"The JSON array should be empty.\");","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"rohitcube"},"content":"    void testSearchModules_invalidInput_expectedEmptyJsonArray() {","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"rohitcube"},"content":"        JSONArray modulesToPrint;","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"rohitcube"},"content":"        modulesToPrint \u003d Api.search(\"bs#4%ggh\", Api.listAllModules());","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"rohitcube"},"content":"        assertEquals(0, modulesToPrint.size(), \"The JSON array should be empty.\");","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"rohitcube"},"content":"    void testSearchModules_validInput_expectedJsonArray() {","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"rohitcube"},"content":"        JSONArray modulesToPrint;","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"rohitcube"},"content":"        modulesToPrint \u003d Api.search(\"Trustworthy Machine Learning\", Api.listAllModules());","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"rohitcube"},"content":"        JSONArray expectedArray \u003d new JSONArray();","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"rohitcube"},"content":"        JSONObject expectedObject \u003d new JSONObject();","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"rohitcube"},"content":"        expectedObject.put(\"moduleCode\", \"CS5562\");","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"rohitcube"},"content":"        JSONArray semester1 \u003d new JSONArray();","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"rohitcube"},"content":"        semester1.add(1);","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"rohitcube"},"content":"        expectedObject.put(\"semesters\", semester1);","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"rohitcube"},"content":"        expectedObject.put(\"title\", \"Trustworthy Machine Learning\");","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"rohitcube"},"content":"        expectedArray.add(expectedObject);","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"rohitcube"},"content":"        String expectedOutput \u003d expectedArray.toJSONString();","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"rohitcube"},"content":"        String output \u003d modulesToPrint.toJSONString();","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"rohitcube"},"content":"        assertEquals(expectedOutput, output, \"The string should be equal\");","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"rohitcube"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"rohitcube"},"content":"    void testPrintJsonArray() {","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"rohitcube"},"content":"        JSONArray modulesToPrint \u003d Api.search(\"Machine Learning\", Api.listAllModules());","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"        ModuleInfoView.printJsonArray(modulesToPrint);","lastModifiedDate":"2023-11-04"},{"lineNumber":98,"author":{"gitId":"rohitcube"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"rohitcube"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"rohitcube"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ryanlohyr":3,"rohitcube":99}},{"path":"src/test/java/seedu/duke/controllers/ModuleMethodsControllerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.controllers;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.exceptions.FailPrereqException;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Schedule;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"import seedu.duke.models.schema.Student;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"ryanlohyr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ryanlohyr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.controllers.ModuleMethodsController.computePace;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.controllers.ModuleMethodsController.determinePrereq;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.ScheduleGenerator.generateRecommendedSchedule;","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.displayMessage;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.displaySuccessfulAddMessage;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.views.CommandLineView.showPrereqCEG;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"ryanlohyr"},"content":"class ModuleMethodsControllerTest {","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"ryanlohyr"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"ryanlohyr"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"ryanlohyr"},"content":"    private Student student;","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"ryanlohyr"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"ryanlohyr"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"ryanlohyr"},"content":"        this.student \u003d new Student();","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"ryanlohyr"},"content":"        student.setName(\"Ryan Loh\");","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"ryanlohyr"},"content":"        student.setFirstMajor(\"CEG\");","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"ryanlohyr"},"content":"        student.setYear(\"Y2/S1\");","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"ryanlohyr"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"ryanlohyr"},"content":"    @AfterEach","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"ryanlohyr"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"ryanlohyr"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"ryanlohyr"},"content":"    void computePaceWithoutArgument() {","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"ryanlohyr"},"content":"        ModulePlannerController controller \u003d new ModulePlannerController();","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"ryanlohyr"},"content":"        String[] userInput \u003d {};","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"ryanlohyr"},"content":"        int creditsCompleted \u003d 60;","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"ryanlohyr"},"content":"        computePace(userInput, creditsCompleted);","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"ryanlohyr"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(String.format(\"You currently have %s MCs till graduation\", 160 - 60), printedOutput);","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"ryanlohyr"},"content":"    void computePaceInvalidArgument() {","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"ryanlohyr"},"content":"        ModulePlannerController controller \u003d new ModulePlannerController();","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"ryanlohyr"},"content":"        String[] userInput \u003d {\"y2s1\"};","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"ryanlohyr"},"content":"        int creditsLeft \u003d 60;","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"ryanlohyr"},"content":"        computePace(userInput, creditsLeft);","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"ryanlohyr"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(\"Needs to be in format of Y2/S1\", printedOutput);","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"ryanlohyr"},"content":"    void computePaceInvalidSemester() {","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"ryanlohyr"},"content":"        ModulePlannerController controller \u003d new ModulePlannerController();","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"ryanlohyr"},"content":"        String[] userInput \u003d {\"y2/s10\"};","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"ryanlohyr"},"content":"        int creditsLeft \u003d 60;","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"ryanlohyr"},"content":"        computePace(userInput, creditsLeft);","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"ryanlohyr"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(\"Invalid Semester\", printedOutput);","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"ryanlohyr"},"content":"    void computePaceInvalidYear() {","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"ryanlohyr"},"content":"        String[] userInput \u003d {\"y20/s1\"};","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"ryanlohyr"},"content":"        int creditsLeft \u003d 60;","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"ryanlohyr"},"content":"        computePace(userInput, creditsLeft);","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"ryanlohyr"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(\"Invalid Year\", printedOutput);","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"ryanlohyr"},"content":"    void computePaceValidYear() {","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"ryanlohyr"},"content":"        String[] userInput \u003d {\"y2/s1\"};","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"ryanlohyr"},"content":"        int creditsLeft \u003d 60;","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"ryanlohyr"},"content":"        computePace(userInput, creditsLeft);","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"ryanlohyr"},"content":"        // Capture the printed output","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"ryanlohyr"},"content":"        String line \u003d \"You have 100MCs for 5 semesters. Recommended Pace: 20MCs per sem until graduation\";","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"ryanlohyr"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(printedOutput, line);","lastModifiedDate":"2023-11-03"},{"lineNumber":105,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":106,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":107,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"ryanlohyr"},"content":"    void determinePrereq_invalidModuleCode() {","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"ryanlohyr"},"content":"        String invalidModuleCode \u003d \"cs134.\";","lastModifiedDate":"2023-11-03"},{"lineNumber":110,"author":{"gitId":"ryanlohyr"},"content":"        String major \u003d \"CEG\";","lastModifiedDate":"2023-11-03"},{"lineNumber":111,"author":{"gitId":"ryanlohyr"},"content":"        determinePrereq(invalidModuleCode, major);","lastModifiedDate":"2023-11-03"},{"lineNumber":112,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":113,"author":{"gitId":"ryanlohyr"},"content":"        String expectedResponse \u003d \"Invalid Module Code :Only alphabets and digits are allowed in module codes!\";","lastModifiedDate":"2023-11-04"},{"lineNumber":114,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(printedOutput, expectedResponse);","lastModifiedDate":"2023-11-03"},{"lineNumber":115,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":116,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"ryanlohyr"},"content":"    void determinePrereq_validModuleCodeWithNoPreReq() {","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"ryanlohyr"},"content":"        String invalidModuleCode \u003d \"GEN2061\";","lastModifiedDate":"2023-11-03"},{"lineNumber":120,"author":{"gitId":"ryanlohyr"},"content":"        String major \u003d \"CEG\";","lastModifiedDate":"2023-11-03"},{"lineNumber":121,"author":{"gitId":"ryanlohyr"},"content":"        determinePrereq(invalidModuleCode, major);","lastModifiedDate":"2023-11-03"},{"lineNumber":122,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":123,"author":{"gitId":"ryanlohyr"},"content":"        String expectedResponse \u003d \"Module GEN2061 has no prerequisites.\";","lastModifiedDate":"2023-11-03"},{"lineNumber":124,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(printedOutput, expectedResponse);","lastModifiedDate":"2023-11-03"},{"lineNumber":125,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":126,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":127,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":128,"author":{"gitId":"ryanlohyr"},"content":"    void determinePrereq_validModuleCodeWithPreReq() {","lastModifiedDate":"2023-11-03"},{"lineNumber":129,"author":{"gitId":"ryanlohyr"},"content":"        String invalidModuleCode \u003d \"EE2211\";","lastModifiedDate":"2023-11-03"},{"lineNumber":130,"author":{"gitId":"ryanlohyr"},"content":"        String major \u003d \"CEG\";","lastModifiedDate":"2023-11-03"},{"lineNumber":131,"author":{"gitId":"ryanlohyr"},"content":"        determinePrereq(invalidModuleCode, major);","lastModifiedDate":"2023-11-03"},{"lineNumber":132,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":133,"author":{"gitId":"ryanlohyr"},"content":"        String expectedResponse \u003d \"[CS1010, MA1511, MA1508E]\";","lastModifiedDate":"2023-11-03"},{"lineNumber":134,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(printedOutput, expectedResponse);","lastModifiedDate":"2023-11-03"},{"lineNumber":135,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":136,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":137,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":138,"author":{"gitId":"ryanlohyr"},"content":"    void testPrereq_addValidModuleToStudent() throws InvalidObjectException {","lastModifiedDate":"2023-11-03"},{"lineNumber":139,"author":{"gitId":"ryanlohyr"},"content":"        String moduleCode \u003d \"EG1311\";","lastModifiedDate":"2023-11-03"},{"lineNumber":140,"author":{"gitId":"ryanlohyr"},"content":"        int targetSem \u003d 1;","lastModifiedDate":"2023-11-03"},{"lineNumber":141,"author":{"gitId":"ryanlohyr"},"content":"        boolean doesModuleExist \u003d false;","lastModifiedDate":"2023-11-03"},{"lineNumber":142,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-03"},{"lineNumber":143,"author":{"gitId":"janelleenqi"},"content":"            student.addModuleSchedule(moduleCode, targetSem);","lastModifiedDate":"2023-11-04"},{"lineNumber":144,"author":{"gitId":"ryanlohyr"},"content":"            displaySuccessfulAddMessage();","lastModifiedDate":"2023-11-03"},{"lineNumber":145,"author":{"gitId":"ryanlohyr"},"content":"            student.printSchedule();","lastModifiedDate":"2023-11-03"},{"lineNumber":146,"author":{"gitId":"ryanlohyr"},"content":"            Schedule currentSchedule \u003d student.getSchedule();","lastModifiedDate":"2023-11-03"},{"lineNumber":147,"author":{"gitId":"ryanlohyr"},"content":"            doesModuleExist \u003d currentSchedule.exists(moduleCode);","lastModifiedDate":"2023-11-03"},{"lineNumber":148,"author":{"gitId":"ryanlohyr"},"content":"        } catch (InvalidObjectException | IllegalArgumentException e) {","lastModifiedDate":"2023-11-03"},{"lineNumber":149,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(e.getMessage());","lastModifiedDate":"2023-11-03"},{"lineNumber":150,"author":{"gitId":"ryanlohyr"},"content":"        } catch (FailPrereqException f) {","lastModifiedDate":"2023-11-03"},{"lineNumber":151,"author":{"gitId":"ryanlohyr"},"content":"            showPrereqCEG(moduleCode);","lastModifiedDate":"2023-11-03"},{"lineNumber":152,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(f.getMessage());","lastModifiedDate":"2023-11-03"},{"lineNumber":153,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":154,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":155,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"Module Successfully Added\\n\" +","lastModifiedDate":"2023-11-03"},{"lineNumber":156,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 1: EG1311 \\n\" +","lastModifiedDate":"2023-11-03"},{"lineNumber":157,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 2: \\n\" +","lastModifiedDate":"2023-11-03"},{"lineNumber":158,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 3: \\n\" +","lastModifiedDate":"2023-11-03"},{"lineNumber":159,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 4: \\n\" +","lastModifiedDate":"2023-11-03"},{"lineNumber":160,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 5: \\n\" +","lastModifiedDate":"2023-11-03"},{"lineNumber":161,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 6: \\n\" +","lastModifiedDate":"2023-11-03"},{"lineNumber":162,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 7: \\n\" +","lastModifiedDate":"2023-11-03"},{"lineNumber":163,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 8:\";","lastModifiedDate":"2023-11-03"},{"lineNumber":164,"author":{"gitId":"ryanlohyr"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-03"},{"lineNumber":165,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-03"},{"lineNumber":166,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-03"},{"lineNumber":167,"author":{"gitId":"ryanlohyr"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-03"},{"lineNumber":168,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-03"},{"lineNumber":169,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-03"},{"lineNumber":170,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":171,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(printedOutput, expectedOutput);","lastModifiedDate":"2023-11-03"},{"lineNumber":172,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":173,"author":{"gitId":"ryanlohyr"},"content":"        assertTrue(doesModuleExist);","lastModifiedDate":"2023-11-03"},{"lineNumber":174,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":175,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":176,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":177,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":178,"author":{"gitId":"ryanlohyr"},"content":"    void testPrereq_addInValidModuleToStudent() throws InvalidObjectException {","lastModifiedDate":"2023-11-03"},{"lineNumber":179,"author":{"gitId":"ryanlohyr"},"content":"        String moduleCode \u003d \"eEG1311\";","lastModifiedDate":"2023-11-03"},{"lineNumber":180,"author":{"gitId":"ryanlohyr"},"content":"        int targetSem \u003d 1;","lastModifiedDate":"2023-11-03"},{"lineNumber":181,"author":{"gitId":"ryanlohyr"},"content":"        boolean doesModuleExist \u003d false;","lastModifiedDate":"2023-11-03"},{"lineNumber":182,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-03"},{"lineNumber":183,"author":{"gitId":"janelleenqi"},"content":"            student.addModuleSchedule(moduleCode, targetSem);","lastModifiedDate":"2023-11-04"},{"lineNumber":184,"author":{"gitId":"ryanlohyr"},"content":"            displaySuccessfulAddMessage();","lastModifiedDate":"2023-11-03"},{"lineNumber":185,"author":{"gitId":"ryanlohyr"},"content":"            student.printSchedule();","lastModifiedDate":"2023-11-03"},{"lineNumber":186,"author":{"gitId":"ryanlohyr"},"content":"            Schedule currentSchedule \u003d student.getSchedule();","lastModifiedDate":"2023-11-03"},{"lineNumber":187,"author":{"gitId":"ryanlohyr"},"content":"            doesModuleExist \u003d currentSchedule.exists(moduleCode);","lastModifiedDate":"2023-11-03"},{"lineNumber":188,"author":{"gitId":"ryanlohyr"},"content":"        } catch (InvalidObjectException | IllegalArgumentException e) {","lastModifiedDate":"2023-11-03"},{"lineNumber":189,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(e.getMessage());","lastModifiedDate":"2023-11-03"},{"lineNumber":190,"author":{"gitId":"ryanlohyr"},"content":"        } catch (FailPrereqException f) {","lastModifiedDate":"2023-11-03"},{"lineNumber":191,"author":{"gitId":"ryanlohyr"},"content":"            showPrereqCEG(moduleCode);","lastModifiedDate":"2023-11-03"},{"lineNumber":192,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(f.getMessage());","lastModifiedDate":"2023-11-03"},{"lineNumber":193,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":194,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":195,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"Invalid Module Name\\n\" +","lastModifiedDate":"2023-11-03"},{"lineNumber":196,"author":{"gitId":"ryanlohyr"},"content":"                \"Please select a valid module\";","lastModifiedDate":"2023-11-03"},{"lineNumber":197,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":198,"author":{"gitId":"ryanlohyr"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-03"},{"lineNumber":199,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-03"},{"lineNumber":200,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-03"},{"lineNumber":201,"author":{"gitId":"ryanlohyr"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-03"},{"lineNumber":202,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-03"},{"lineNumber":203,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-03"},{"lineNumber":204,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":205,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(printedOutput, expectedOutput);","lastModifiedDate":"2023-11-03"},{"lineNumber":206,"author":{"gitId":"ryanlohyr"},"content":"        assertFalse(doesModuleExist);","lastModifiedDate":"2023-11-03"},{"lineNumber":207,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":208,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":209,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":210,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":211,"author":{"gitId":"ryanlohyr"},"content":"    void testPrereq_addInvalidModuleToStudent() throws InvalidObjectException {","lastModifiedDate":"2023-11-03"},{"lineNumber":212,"author":{"gitId":"ryanlohyr"},"content":"        String moduleCode \u003d \"CS2113\";","lastModifiedDate":"2023-11-03"},{"lineNumber":213,"author":{"gitId":"ryanlohyr"},"content":"        int targetSem \u003d 1;","lastModifiedDate":"2023-11-03"},{"lineNumber":214,"author":{"gitId":"ryanlohyr"},"content":"        boolean doesModuleExist \u003d false;","lastModifiedDate":"2023-11-03"},{"lineNumber":215,"author":{"gitId":"ryanlohyr"},"content":"        try {","lastModifiedDate":"2023-11-03"},{"lineNumber":216,"author":{"gitId":"janelleenqi"},"content":"            student.addModuleSchedule(moduleCode, targetSem);","lastModifiedDate":"2023-11-04"},{"lineNumber":217,"author":{"gitId":"ryanlohyr"},"content":"            displaySuccessfulAddMessage();","lastModifiedDate":"2023-11-03"},{"lineNumber":218,"author":{"gitId":"ryanlohyr"},"content":"            student.printSchedule();","lastModifiedDate":"2023-11-03"},{"lineNumber":219,"author":{"gitId":"ryanlohyr"},"content":"            Schedule currentSchedule \u003d student.getSchedule();","lastModifiedDate":"2023-11-03"},{"lineNumber":220,"author":{"gitId":"ryanlohyr"},"content":"            doesModuleExist \u003d currentSchedule.exists(moduleCode);","lastModifiedDate":"2023-11-03"},{"lineNumber":221,"author":{"gitId":"ryanlohyr"},"content":"        } catch (InvalidObjectException | IllegalArgumentException e) {","lastModifiedDate":"2023-11-03"},{"lineNumber":222,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(e.getMessage());","lastModifiedDate":"2023-11-03"},{"lineNumber":223,"author":{"gitId":"ryanlohyr"},"content":"        } catch (FailPrereqException f) {","lastModifiedDate":"2023-11-03"},{"lineNumber":224,"author":{"gitId":"ryanlohyr"},"content":"            showPrereqCEG(moduleCode);","lastModifiedDate":"2023-11-03"},{"lineNumber":225,"author":{"gitId":"ryanlohyr"},"content":"            displayMessage(f.getMessage());","lastModifiedDate":"2023-11-03"},{"lineNumber":226,"author":{"gitId":"ryanlohyr"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":227,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":228,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"This module\u0027s prerequisites are [CS2040C]\\n\" +","lastModifiedDate":"2023-11-03"},{"lineNumber":229,"author":{"gitId":"ryanlohyr"},"content":"                \"Unable to add module as prerequisites not satisfied for: CS2113\";","lastModifiedDate":"2023-11-03"},{"lineNumber":230,"author":{"gitId":"ryanlohyr"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-03"},{"lineNumber":231,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-03"},{"lineNumber":232,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-03"},{"lineNumber":233,"author":{"gitId":"ryanlohyr"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-03"},{"lineNumber":234,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-03"},{"lineNumber":235,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-03"},{"lineNumber":236,"author":{"gitId":"ryanlohyr"},"content":"        assertFalse(doesModuleExist);","lastModifiedDate":"2023-11-03"},{"lineNumber":237,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(printedOutput, expectedOutput);","lastModifiedDate":"2023-11-03"},{"lineNumber":238,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":239,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":240,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":241,"author":{"gitId":"ryanlohyr"},"content":"    void testRecommend_generateCEGRecommendedSchedule() {","lastModifiedDate":"2023-11-04"},{"lineNumber":242,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e recommendedSchedule \u003d generateRecommendedSchedule(student.getMajor());","lastModifiedDate":"2023-11-04"},{"lineNumber":243,"author":{"gitId":"ryanlohyr"},"content":"        System.out.println(recommendedSchedule);","lastModifiedDate":"2023-11-04"},{"lineNumber":244,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-04"},{"lineNumber":245,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"[GEA1000, MA1511, MA1512, DTK1234, GESS1000, CS1010, GEN2000, EG2501, EG1311\"","lastModifiedDate":"2023-11-04"},{"lineNumber":246,"author":{"gitId":"ryanlohyr"},"content":"                + \", GEC1000, PF1101, CDE2000, IE2141, CG1111A, EG2401A, ES2631, ST2334, MA1508E, CS1231, CG2023, \"","lastModifiedDate":"2023-11-04"},{"lineNumber":247,"author":{"gitId":"ryanlohyr"},"content":"                + \"CG2111A, CS2040C, CG2027, EE2026, EE4204, EE2211, CG2271, CS2113, CG2028, CP3880, CG4002]\";","lastModifiedDate":"2023-11-04"},{"lineNumber":248,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-04"},{"lineNumber":249,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":250,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":251,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":252,"author":{"gitId":"ryanlohyr"},"content":"    void testRecommend_addCEGRecommendedScheduleToStudent() {","lastModifiedDate":"2023-11-04"},{"lineNumber":253,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e recommendedSchedule \u003d generateRecommendedSchedule(\"CEG\");","lastModifiedDate":"2023-11-04"},{"lineNumber":254,"author":{"gitId":"ryanlohyr"},"content":"        student.getSchedule().addRecommendedScheduleListToSchedule(recommendedSchedule);","lastModifiedDate":"2023-11-04"},{"lineNumber":255,"author":{"gitId":"ryanlohyr"},"content":"        student.getSchedule().printMainModuleList();","lastModifiedDate":"2023-11-04"},{"lineNumber":256,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-04"},{"lineNumber":257,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"Sem 1: GESS1000 DTK1234 MA1512 MA1511 GEA1000 \\n\" +","lastModifiedDate":"2023-11-04"},{"lineNumber":258,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 2: GEC1000 EG1311 EG2501 GEN2000 CS1010 \\n\" +","lastModifiedDate":"2023-11-04"},{"lineNumber":259,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 3: EG2401A CG1111A IE2141 CDE2000 PF1101 \\n\" +","lastModifiedDate":"2023-11-04"},{"lineNumber":260,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 4: CG2023 CS1231 MA1508E ST2334 ES2631 \\n\" +","lastModifiedDate":"2023-11-04"},{"lineNumber":261,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 5: EE4204 EE2026 CG2027 CS2040C CG2111A \\n\" +","lastModifiedDate":"2023-11-04"},{"lineNumber":262,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 6: CG2028 CS2113 CG2271 EE2211 \\n\" +","lastModifiedDate":"2023-11-04"},{"lineNumber":263,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 7: CG4002 CP3880 \\n\" +","lastModifiedDate":"2023-11-04"},{"lineNumber":264,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 8:\";","lastModifiedDate":"2023-11-04"},{"lineNumber":265,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":266,"author":{"gitId":"ryanlohyr"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-04"},{"lineNumber":267,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-04"},{"lineNumber":268,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-04"},{"lineNumber":269,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":270,"author":{"gitId":"ryanlohyr"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-04"},{"lineNumber":271,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-04"},{"lineNumber":272,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-04"},{"lineNumber":273,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":274,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-04"},{"lineNumber":275,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":276,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":277,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":278,"author":{"gitId":"ryanlohyr"},"content":"    void testRecommend_addCSRecommendedScheduleToStudent() {","lastModifiedDate":"2023-11-04"},{"lineNumber":279,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e recommendedSchedule \u003d generateRecommendedSchedule(\"CS\");","lastModifiedDate":"2023-11-04"},{"lineNumber":280,"author":{"gitId":"ryanlohyr"},"content":"        student.getSchedule().addRecommendedScheduleListToSchedule(recommendedSchedule);","lastModifiedDate":"2023-11-04"},{"lineNumber":281,"author":{"gitId":"ryanlohyr"},"content":"        student.getSchedule().printMainModuleList();","lastModifiedDate":"2023-11-04"},{"lineNumber":282,"author":{"gitId":"ryanlohyr"},"content":"        String printedOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2023-11-04"},{"lineNumber":283,"author":{"gitId":"ryanlohyr"},"content":"        String expectedOutput \u003d \"Sem 1: CS1231S MA1522 IS1108 MA1521 GEA1000 \\n\" +","lastModifiedDate":"2023-11-04"},{"lineNumber":284,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 2: GEN2000 GESS1000 CS1101S CS2101 ES2660 \\n\" +","lastModifiedDate":"2023-11-04"},{"lineNumber":285,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 3: CS2100 CS2040S CS2030S ST2334 GEC1000 \\n\" +","lastModifiedDate":"2023-11-04"},{"lineNumber":286,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 4: CS2103T \\n\" +","lastModifiedDate":"2023-11-04"},{"lineNumber":287,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 5: CP3880 CS2106 CS3230 CS2109S \\n\" +","lastModifiedDate":"2023-11-04"},{"lineNumber":288,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 6: \\n\" +","lastModifiedDate":"2023-11-04"},{"lineNumber":289,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 7: \\n\" +","lastModifiedDate":"2023-11-04"},{"lineNumber":290,"author":{"gitId":"ryanlohyr"},"content":"                \"Sem 8:\";","lastModifiedDate":"2023-11-04"},{"lineNumber":291,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":292,"author":{"gitId":"ryanlohyr"},"content":"        printedOutput \u003d printedOutput","lastModifiedDate":"2023-11-04"},{"lineNumber":293,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-04"},{"lineNumber":294,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-04"},{"lineNumber":295,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":296,"author":{"gitId":"ryanlohyr"},"content":"        expectedOutput \u003d expectedOutput","lastModifiedDate":"2023-11-04"},{"lineNumber":297,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\\n\", \"\\n\")","lastModifiedDate":"2023-11-04"},{"lineNumber":298,"author":{"gitId":"ryanlohyr"},"content":"                .replaceAll(\"\\r\", \"\\n\");","lastModifiedDate":"2023-11-04"},{"lineNumber":299,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":300,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-11-04"},{"lineNumber":301,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":302,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":303,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":304,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"ryanlohyr":301,"janelleenqi":3}},{"path":"src/test/java/seedu/duke/models/logic/DataRepositoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"class DataRepositoryTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"    void validRequirementsReturned() {","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e cegRequirementArray \u003d DataRepository.getRequirements(\"CEG\");","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"        int numberOfRequiredCegMods \u003d 31;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"        assertEquals(numberOfRequiredCegMods,cegRequirementArray.size());","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"ryanlohyr":17}},{"path":"src/test/java/seedu/duke/models/logic/MajorRequirementsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janelleenqi"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.controllers.ModuleServiceController.getRequiredModules;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"class MajorRequirementsTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"    @AfterEach","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"    void printRequiredModules_validMajor_expectRequiredModulesShown() {","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"ryanlohyr"},"content":"        getRequiredModules(\"CEG\");","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"        // Capture the printed output","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"        String printedOutput \u003d outputStream.toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"        // Assert the printed output matches the expected value","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"        assertTrue(printedOutput.startsWith(","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"                \"#\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d#\")","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"        );","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"ryanlohyr":2,"janelleenqi":38}},{"path":"src/test/java/seedu/duke/models/logic/ScheduleGeneratorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlohyr"},"content":"package seedu.duke.models.logic;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"ryanlohyr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"ryanlohyr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"ryanlohyr"},"content":"import static seedu.duke.models.logic.ScheduleGenerator.generateRecommendedSchedule;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"ryanlohyr"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"ryanlohyr"},"content":"class ScheduleGeneratorTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"ryanlohyr"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"ryanlohyr"},"content":"    void validRecommendedSchedule() {","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"ryanlohyr"},"content":"        ArrayList\u003cString\u003e cegRequirementArray \u003d generateRecommendedSchedule(\"CEG\");","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"ryanlohyr"},"content":"        assert(!cegRequirementArray.isEmpty());","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"ryanlohyr"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"ryanlohyr"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"ryanlohyr":15}},{"path":"src/test/java/seedu/duke/models/schema/ModuleListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import java.io.InvalidObjectException;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"class ModuleListTest {","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"    //success scenario 1: 1 input String, 1 ModuleList that contains input String --\u003e true","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"    void existsTest_moduleListContainsModule_expectTrue() throws InvalidObjectException {","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"        String inputString \u003d \"CS1231S\";","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"        ModuleList ml \u003d new ModuleList(\"CS1231S CS2030S CS2040S CS2100 CS2101 CS2106 CS2109S CS3230\");","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"        //test","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"        boolean result \u003d ml.exists(inputString);","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"        assertTrue(result);","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"    //success scenario 2: 1 input String, 1 ModuleList that does not contain input String --\u003e false","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"    void existsTest_moduleListDoesNotContainModule_expectFalse() throws InvalidObjectException {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"        String inputString \u003d \"CS1231S\";","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"        ModuleList ml \u003d new ModuleList(\"CS2030S CS2040S CS2100 CS2101 CS2106 CS2109S CS3230\");","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"        //test","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"        boolean result \u003d ml.exists(inputString);","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"        assertFalse(result);","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"    //failure scenario 1: input null string, 1 ModuleList --\u003e throw exception","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"    void existsTest_nullInput_expectException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"janelleenqi"},"content":"        ModuleList ml \u003d new ModuleList(\"CS2030S CS2040S CS2100 CS2101 CS2106 CS2109S CS3230\");","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"janelleenqi"},"content":"        //test","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"janelleenqi"},"content":"        assertThrows(InvalidObjectException.class, () -\u003e ml.exists(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"janelleenqi"},"content":"    //success scenario 3: input string, 1 empty ModuleList --\u003e false","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"janelleenqi"},"content":"    void existsTest_nullMainModuleList_expectException() throws InvalidObjectException {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"janelleenqi"},"content":"        String inputString \u003d \"CS1231S\";","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"janelleenqi"},"content":"        ModuleList ml \u003d new ModuleList();","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"janelleenqi"},"content":"        //test","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"janelleenqi"},"content":"        boolean result \u003d ml.exists(inputString);","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"janelleenqi"},"content":"        assertFalse(result);","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"janelleenqi"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"SebasFok":1,"janelleenqi":53}},{"path":"src/test/java/seedu/duke/models/schema/ScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"SebasFok"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"SebasFok"},"content":"import seedu.duke.exceptions.FailPrereqException;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"SebasFok"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"SebasFok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"SebasFok"},"content":"class ScheduleTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"SebasFok"},"content":"    //success scenario: String containing valid module, int containing valid targetSem","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"SebasFok"},"content":"    //module satisfies prereqs --\u003e module added","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"SebasFok"},"content":"    void addModuleTest_correctInputsSatisfyPrereqs_expectModuleAdded() throws Exception {","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule();","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"SebasFok"},"content":"        schedule.addModule(\"CS1010\", 1);","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"SebasFok"},"content":"        ArrayList\u003cString\u003e testArray\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"SebasFok"},"content":"        testArray.add(\"CS1010\");","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"        assertEquals(testArray, schedule.getModuleCodes());","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"SebasFok"},"content":"    //failure scenario 1: String containing valid module, int containing valid targetSem","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"SebasFok"},"content":"    //module does not satisfy prereqs --\u003e throw FailPrereqException","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"SebasFok"},"content":"    void addModuleTest_correctInputsDoesNotSatisfyPrereqs_expectException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule(\"CS1231S MA1511\", new int[]{2, 0, 0, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"SebasFok"},"content":"        assertThrows(FailPrereqException.class, () -\u003e schedule.addModule(\"CS2040C\", 1));","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"SebasFok"},"content":"    //failure scenario 2: String containing invalid module, int containing valid targetSem","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"SebasFok"},"content":"    //--\u003e throws IllegalArgumentException","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"    void addModuleTest_invalidModule_expectException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule(\"CS1231S MA1511\", new int[]{2, 0, 0, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"SebasFok"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e schedule.addModule(\"wrong\", 1));","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"SebasFok"},"content":"    //failure scenario 3: String containing valid module, int containing invalid targetSem","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"SebasFok"},"content":"    //--\u003e throws IllegalArgumentException","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"SebasFok"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"SebasFok"},"content":"    void addModuleTest_invalidTargetSem_expectException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"SebasFok"},"content":"        Schedule schedule \u003d new Schedule(\"CS1231S MA1511\", new int[]{2, 0, 0, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"SebasFok"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e schedule.addModule(\"CS2040C\", 1000));","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"SebasFok"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"SebasFok":50,"janelleenqi":1}},{"path":"src/test/java/seedu/duke/models/schema/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SebasFok"},"content":"package seedu.duke.models.schema;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"janelleenqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"janelleenqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"janelleenqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"SebasFok"},"content":"public class StudentTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"SebasFok"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"janelleenqi"},"content":"    //success scenario: difference (not working)","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"janelleenqi"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"janelleenqi"},"content":"    void getModuleCodesLeft_majorSet_expectArrayList() {","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"janelleenqi"},"content":"        Student student \u003d new Student();","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"janelleenqi"},"content":"        student.setMajor(\"CEG\");","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"janelleenqi"},"content":"        //actual: student.getModuleCodesLeft();","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"janelleenqi"},"content":"        //expected:","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cString\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cString\u003e majorModuleCodes \u003d student.getMajorModuleCodes();","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"janelleenqi"},"content":"        ArrayList\u003cString\u003e modulesInPlanner \u003d student.getModulesPlanned().getModulesCompleted();","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"janelleenqi"},"content":"        for (String moduleCode : majorModuleCodes) {","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"janelleenqi"},"content":"            if (!modulesInPlanner.contains(moduleCode)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"janelleenqi"},"content":"                expected.add(moduleCode);","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"janelleenqi"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"janelleenqi"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"janelleenqi"},"content":"        assertEquals(expected, student.getModuleCodesLeft());","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"janelleenqi"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"janelleenqi"},"content":"    // getModuleCodesLeft_noMajorSet_expectException()","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"janelleenqi"},"content":"    // getDifferenceTest_twoModuleList_expectDifference()","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"janelleenqi"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"janelleenqi"},"content":"    // success scenario 2: 1 empty ModuleList, 1 ModuleList --\u003e difference which is empty","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"janelleenqi"},"content":"    // getDifferenceTest_oneEmptyModuleListAnotherModuleList_expectEmptyDifference()","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"janelleenqi"},"content":"    // failure scenario 1: null ModuleList input --\u003e throw exception","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"janelleenqi"},"content":"    // getDifferenceTest_nullModuleListInput_expectException()","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"SebasFok"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"SebasFok":5,"janelleenqi":33}}]
