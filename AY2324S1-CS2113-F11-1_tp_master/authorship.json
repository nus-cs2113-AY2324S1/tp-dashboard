[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName.set(\"duke\")","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Remy9926"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Remy9926":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"Display |    Name     |             Github Profile             | Portfolio | PPP ","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"--------|:-----------:|:--------------------------------------:|:---------:|:----:|","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Kevin Zhang | [Github](https://github.com/kevinz420) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"![](https://picsum.photos/100) |   Ethan Huang   |     [Github](https://github.com/remy9926)      | [Portfolio](docs/team/johndoe.md) | [PPP](./team/remy9926.md)","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Ron John   |     [Github](https://github.com/)      | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  John Roe   |     [Github](https://github.com/)      | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Don Roe   |     [Github](https://github.com/)      | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"kevinz420":1,"Remy9926":3,"-":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"## **Content**","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"- [Handing User Inputs \u0026 Displaying Output](#item-one)","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"- [Updates Exercise from Log feature](#item-two)","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"- [Adding a New Exercise Goal](#item-three)","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"[Remy9926 iP for File I/O](https://github.com/Remy9926/ip)","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"\u003ca id\u003d\"item-one\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"### Handling User Inputs \u0026 Displaying Output","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"A lot of the initial project setup that deals with things like parsing, displaying outputs back to the user, exceptions, etc. are strongly inspired by the address book example project demoed in class. Specifically, we have classes that are responsible for various aspects of our project in order to follow the single-responsibility principle and limit the amount of coupling. ","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"One specific design implementation we chose was having a Command superclass that all commands in our application will inherit from. This allows every command we write in the future to be guaranteed to possess all methods specified in the superclass. Therefore, we can call these methods in our main function without needing to worry about the differences between various commands because they all inherit from the same parent. Another alternative we considered was simply making each separate command its own function and calling them from our parser class. However, we want to keep the commands as high level as possible and avoid calling more lower-level functions if possible, so we can provide more encapsulation to each command. Therefore, we decided to go with this class-based command hierarchy that was also found in the example address book repo.","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"Below is a class diagram that describes how our various components interact with one another:","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"![image](https://github.com/AY2324S1-CS2113-F11-1/tp/assets/54857388/21bd2aa9-8e50-49d2-b888-50446115f922)","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"The parser class is responsible for reading the user input and creating specific command objects. All of these subcommands inherit from a general Command parent class which has an `execute` method that can be called regardless of child class and will return a CommandResult object. The CommandResult object dictates what info (string or list of items) needs to be returned to the user for viewing. Both CommandResult and TextUi (responsible for actually displaying data from CommandResult to user) will only print objects from classes that inherit from the Printable interface. This ensures that objects in the `relevantItems` list are all serializable as a human-readable string to be displayed to the end user.","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"\u003ca id\u003d\"item-two\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"### Update Exercises from Log feature","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"The proposed feature is to allow users to update exercises from the ExerciseLog class to allow for full CRUD functionality of the class. Currently, users are able to create exercises and log them as well as view all the exercises that they have created, but in the case of a typo, they are unable to update the log to accommodate for the user error. To improve the user experience, this update feature has been proposed to allow users to have a better experience using the app.","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"The update feature will be implemented by allowing users to select the task that they want to edit by specifying the month and day that they logged this exercise at, as well as the corresponding exercise name and the number of calories that the exercise has burned. This is because each exercise is stored within Day objects, and in order to check if two exercises are equivalent, we check both the exerciseName and caloriesBurned fields. Thus, these parameters will need to be specified by the user in order to update the exercise log.","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"Below is an example of how this feature will work:","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"Step 1: Upon starting the app, the ExerciseLog class is initialized and a log is created for the user to log their exercises.","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"\u003cimg width\u003d\"661\" alt\u003d\"Screenshot 2023-10-22 at 22 21 04\" src\u003d\"https://github.com/Remy9926/tp/assets/95456114/933b3636-eba7-442b-bcf2-aec22ef49dba\"\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"Remy9926"},"content":"Step 2: The user calls the log command with the specified parameters to add a new exercise to the list. However, the user notices that they made a typo and want to change the details of the exercise that they just logged.","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"Remy9926"},"content":"\u003cimg width\u003d\"682\" alt\u003d\"Screenshot 2023-10-22 at 22 23 59\" src\u003d\"https://github.com/Remy9926/tp/assets/95456114/318cd321-6516-4163-a4ce-4a9e5d5edf7b\"\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"Remy9926"},"content":"Step 3: The user calls the update command with the information of the old exercise as well as the new information that the user wants to update with. With this, the update is done.","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"Remy9926"},"content":"\u003cimg width\u003d\"652\" alt\u003d\"Screenshot 2023-10-22 at 22 25 09\" src\u003d\"https://github.com/Remy9926/tp/assets/95456114/d07d5570-11fc-426c-877d-feb31a338f0a\"\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"J-Y-Yan"},"content":"\u003ca id\u003d\"item-three\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"J-Y-Yan"},"content":"### Adding a New Exercise Goal","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"J-Y-Yan"},"content":"Setting up exercise goals is one of the major components in our FitNus app. It could guide users to do exercise in a more systematic way, while ensuring the possibility of keeping track of the record.","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"J-Y-Yan"},"content":"Inheritance Level:","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"J-Y-Yan"},"content":"As one of the commands input by user, the goal class should be inherited from the command class, with the general abstract method such as constructor, execution of command, etc.","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"J-Y-Yan"},"content":"Implementation:","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"J-Y-Yan"},"content":"The goalist class has some helper functions, including checkGoalInput to ensure the validity of user input, addGoal to add a new goal record into the goal list. The execution of goal command simply create a new goal record by first validating the user input, and create a goal record and finally return the result of creating the goal.","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"J-Y-Yan"},"content":"Future Enhancement:","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"J-Y-Yan"},"content":"1. List function and delete function","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"J-Y-Yan"},"content":"The list function is vital in visualization of the goal list while delete function helps to remove some redundant, incorrect, or achieved goals. Note that since other command classes may also need a list function or delete function, these two functions can be created for a general use and applicable for all commands. Alternative method is to create an interface class including both methods. Those commands which inherited the interface class should override all methods.","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"J-Y-Yan"},"content":"2. Achievement List function","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"J-Y-Yan"},"content":"This aims to keep the record of achieved goals. Once the user marks a goal as finished, the record will be automatically backed ","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"J-Y-Yan"},"content":"up into the history list. All records in the history list should be sorted according to their finish time and in alphabetical order. A simple copy function with proper file input output maintenance should be good enough to achieve this function.","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"J-Y-Yan"},"content":"3. Achieve goal function: allow users to mark a goal as achieved and saved the record into backup history.","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"J-Y-Yan":31,"kevinz420":10,"Remy9926":20,"-":38}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"FITNUS helps NUS students set and maintain fitness goals for themselves. Students can log their meals that they\u0027ve eaten as well as any exercise they have done and manage it all in our intuitive CLI application!","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"Here are some useful links:","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"Remy9926":2,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"Welcome to the FITNUS UserGuide! We\u0027re glad you\u0027re here and if you have any questions about how to operate the application, all the information will be here for you.","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"In the terminal, make sure you are in the same directory (location) as the jar file is, and run `java -jar JAR_FILE_NAME` where `JAR_FILE_NAME` is the name of the jar file as stored on your local computer.","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"2. Down the latest version of `Duke` from [here](https://github.com/AY2324S1-CS2113-F11-1/tp/releases).","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"### Viewing help: `help`","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"Format: `help`","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"### Adding a meal: `meal_add`","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Adds a new item to the list of todo items.","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"Format: `meal_add MEAL_NAME CALORIES`","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"* The `CALORIES` should be a standard number.","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"* The `MEAL_NAME` cannot contain space, use \"_\" as replacement.","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"`meal_add potatoes 100`","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"`meal_add baked_bread 66`","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"### Adding an exercise: `log`","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"Adds a new exercise to the Exercise Log.","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"Remy9926"},"content":"Format: `log MONTH DAY EXERCISE_NAME CALORIES_BURNED`","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"Remy9926"},"content":"* The `MONTH` is an integer specifying the month in which the exercise was performed (1-12 inclusive)","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"Remy9926"},"content":"* The `DAY` is an integer specifying the day of the month in which the exercise was performed","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"Remy9926"},"content":"* The `EXERCISE_NAME` is a string specifying the type of exercise performed","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"Remy9926"},"content":"* The `CALORIES_BURNED` is an integer specifying the number of calories burned by the exercise","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"Remy9926"},"content":"Example of usage:","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"Remy9926"},"content":"`log 1 26 Basketball 179`","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"Remy9926"},"content":"`log 12 24 Volleyball 5`","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"Remy9926"},"content":"### Updating an exercise: `update`","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"Remy9926"},"content":"Updates the specified exercise within the Exercise Log if the old exercise can be found. If the old exercise is not","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"Remy9926"},"content":"found, then the user will not be prompted to provide new details.","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"Remy9926"},"content":"Format: `update MONTH DAY OLD_EXERCISE_NAME OLD_CALORIES_BURNED` `NEW_EXERCISE_NAME NEW_CALORIES_BURNED`","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"Remy9926"},"content":"* The `MONTH` is an integer specifying the month in which the exercise was performed (1-12 inclusive)","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"Remy9926"},"content":"* The `DAY` is an integer specifying the day of the month in which the exercise was performed","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"Remy9926"},"content":"* The `OLD_EXERCISE_NAME` is a string specifying the name of the exercise to be updated","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"Remy9926"},"content":"* The `OLD_CALORIES_BURNED` is an integer specifying the number of calories burned by the exercise to be updated","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"Remy9926"},"content":"* The `NEW_EXERCISE_NAME` is a string specifying the new exercise name","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"Remy9926"},"content":"* The `NEW_CALORIES_BURNED` is an integer specifying the new number of calories burned","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"Remy9926"},"content":"Example of usage:","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"Remy9926"},"content":"`update 1 26 Basketball 179`","lastModifiedDate":"2023-11-04"},{"lineNumber":69,"author":{"gitId":"Remy9926"},"content":"`Rugby 55`","lastModifiedDate":"2023-11-04"},{"lineNumber":70,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"Remy9926"},"content":"`update 12 24 Volleyball 5`","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"Remy9926"},"content":"`Hockey 98`","lastModifiedDate":"2023-11-04"},{"lineNumber":73,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":74,"author":{"gitId":"Remy9926"},"content":"### Viewing Exercises: `view`","lastModifiedDate":"2023-11-04"},{"lineNumber":75,"author":{"gitId":"Remy9926"},"content":"View the number of, or each exercise in a day, month, or the entire log.","lastModifiedDate":"2023-11-04"},{"lineNumber":76,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":77,"author":{"gitId":"Remy9926"},"content":"Format `view VIEW_TYPE VIEW_SCOPE`","lastModifiedDate":"2023-11-04"},{"lineNumber":78,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":79,"author":{"gitId":"Remy9926"},"content":"* The `VIEW_TYPE` is either `total` or `exercises` depending on whether you want to view the total number of exercises","lastModifiedDate":"2023-11-04"},{"lineNumber":80,"author":{"gitId":"Remy9926"},"content":"or each exercise and its details","lastModifiedDate":"2023-11-04"},{"lineNumber":81,"author":{"gitId":"Remy9926"},"content":"* The `VIEW_SCOPE` can take on either `all` to see all exercises in the log, `month MONTH` where `MONTH` is the month","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"Remy9926"},"content":"whose exercises you want to view, or `month MONTH day DAY` where MONTH is the same as above, but `DAY` is the specific","lastModifiedDate":"2023-11-04"},{"lineNumber":83,"author":{"gitId":"Remy9926"},"content":"day of the month whose exercises you want to view.","lastModifiedDate":"2023-11-04"},{"lineNumber":84,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"Remy9926"},"content":"### Setting up a calorie goal: `set on`","lastModifiedDate":"2023-11-04"},{"lineNumber":86,"author":{"gitId":"J-Y-Yan"},"content":"Set up a calories goal to achieve.","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"J-Y-Yan"},"content":"Format: `set AMOUNT on Date`","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"J-Y-Yan"},"content":"The AMOUNT is in terms of kcal. Please use DD/MM/YYYY format for the date.","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"J-Y-Yan"},"content":"Note that this function is still under development. The future features includes: delete a goal, view your goal, save your achievement, etc.","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"kevinz420"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"kevinz420"},"content":"Exits the program.","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"kevinz420"},"content":"Format: `exit`","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":103,"author":{"gitId":"Remy9926"},"content":"**A**: It is not suggested to transfer data between machines. The purpose of the app is developed solely for personal use. Nonetheless, you can copy the folder named `data` that is created in the same directory (location) as where you are running the application into your new computer to restore your data.","lastModifiedDate":"2023-11-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":107,"author":{"gitId":"Remy9926"},"content":"* Log an exercise `log MONTH DAY EXERCISE_NAME CALORIES_BURNED`","lastModifiedDate":"2023-11-04"},{"lineNumber":108,"author":{"gitId":"Remy9926"},"content":"* Update an existing exercise `update MONTH DAY OLD_EXERCISE_NAME OLD_CALORIES_BURNED`","lastModifiedDate":"2023-11-04"},{"lineNumber":109,"author":{"gitId":"Remy9926"},"content":"`NEW_EXERCISE_NAME NEW_CALORIES_BURNED`","lastModifiedDate":"2023-11-04"},{"lineNumber":110,"author":{"gitId":"Remy9926"},"content":"* View existing exercises `view VIEW_TYPE VIEW_SCOPE`","lastModifiedDate":"2023-11-04"},{"lineNumber":111,"author":{"gitId":"Remy9926"},"content":"* Exit program `exit`","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"J-Y-Yan":8,"kevinz420":8,"MrOPPA1":8,"Remy9926":58,"-":29}},{"path":"docs/team/remy9926.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"# Remy9926 PPP","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"FITNUS is a fitness tracking app that allows NUS students to set and maintain fitness goals for themselves.","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"[My tP Code Dashboard](https://nus-cs2113-ay2324s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dRemy9926\u0026tabRepo\u003dAY2324S1-CS2113-F11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"## Contributions","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"### The ExerciseLog Class","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"The way that I contributed to the project is by creating and implementing the ExerciseLog class and its associated classes. For example,","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"there are specific commands that users who want to interact with the exercise log can use, which are the log, delete, update, and view commands.","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"This gives the user full CRUD functionality of the exercise log.","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"### Documentation","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"I contributed to the UG in the parts that are related to the ExerciseLog class and the introduction. In the DG, I contributed to the `Update Exercises from Log feature` section and all the diagrams in that section.","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"### Team-Based Tasks","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"* Set up milestone v1.0","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"* Upload v1.0 and v2.0 jar files to Github","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"* Enable assertions in gradle","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"* Update UG for ExerciseLog-related functionality","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"* Fix errors whenever CI/CD checks were not passed","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"* Correct grammar errors in documentation","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Remy9926":23}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"import seedu.duke.commands.meal.MealCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.data.GoalList;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"import seedu.duke.data.meal.Meal;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.exerciselog.Log;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.ui.TextUi;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.storagefile.StorageFile;","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":" * Entry point of the Address Book application.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"     * Version info of the program.","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"    public static final String VERSION \u003d \"AddressBook Level 2 - Version 1.0\";","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"    public static GoalList goals \u003d new GoalList();","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"    public static Log exerciseLog \u003d new Log();","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"    public static StorageFile storage;","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"    static ArrayList\u003cMeal\u003e meals \u003d new ArrayList\u003cMeal\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"    private TextUi ui;","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"    private String dirPath \u003d \"data\";","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"    private String textFilePath \u003d \"./data/ExerciseLog.txt\";","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"    public static void main(String... launchArgs) {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"        new Duke().run(launchArgs);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"     * @param launchArgs","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"     *                   Runs the program until termination.","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"    public void run(String[] launchArgs) {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"kevinz420"},"content":"        start(launchArgs);","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"kevinz420"},"content":"        runCommandLoopUntilExitCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"kevinz420"},"content":"        exit();","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"     * Sets up the required objects, loads up the data from the storage file, and","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"     * prints the welcome message.","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"kevinz420"},"content":"     * @param launchArgs arguments supplied by the user at program launch","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"kevinz420"},"content":"    private void start(String[] launchArgs) {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"kevinz420"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"kevinz420"},"content":"            this.ui \u003d new TextUi();","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Remy9926"},"content":"            this.storage \u003d StorageFile.initializeStorage(dirPath, textFilePath);","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"Remy9926"},"content":"            storage.checkForTextFile(exerciseLog);","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"kevinz420"},"content":"            ui.showWelcomeMessage(VERSION, \"storage.getPath()\");","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"MrOPPA1"},"content":"            MealCommand.setMeals(meals);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"kevinz420"},"content":"        } catch (Exception e) { // TODO: change to specific storage exceptions later","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"kevinz420"},"content":"            ui.showInitFailedMessage();","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"kevinz420"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"kevinz420"},"content":"     * Prints the Goodbye message and exits.","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"kevinz420"},"content":"    private void exit() {","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"kevinz420"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"kevinz420"},"content":"        System.exit(0);","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"MrOPPA1"},"content":"     * Reads the user command and executes it, until the user issues the exit","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"MrOPPA1"},"content":"     * command.","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"kevinz420"},"content":"    private void runCommandLoopUntilExitCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"kevinz420"},"content":"        Command command;","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"kevinz420"},"content":"        do {","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"MrOPPA1"},"content":"            try {","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"kevinz420"},"content":"                String userCommandText \u003d ui.getUserCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"kevinz420"},"content":"                command \u003d new Parser().parseCommand(userCommandText);","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"kevinz420"},"content":"                CommandResult result \u003d executeCommand(command);","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"kevinz420"},"content":"                ui.showResultToUser(result);","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"MrOPPA1"},"content":"                if (ExitCommand.isExit(command)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"MrOPPA1"},"content":"                    break;","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"MrOPPA1"},"content":"                }","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"MrOPPA1"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"MrOPPA1"},"content":"                ui.showToUser(e.getMessage());","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"MrOPPA1"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"MrOPPA1"},"content":"        } while (true);","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"kevinz420"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"kevinz420"},"content":"     * @param command user command","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"kevinz420"},"content":"     * @return result of the command","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"kevinz420"},"content":"    private CommandResult executeCommand(Command command) {","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"kevinz420"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"kevinz420"},"content":"            CommandResult result \u003d command.execute();","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"kevinz420"},"content":"            // storage.save(addressBook);","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"kevinz420"},"content":"            return result;","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"kevinz420"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"kevinz420"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"kevinz420"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"kevinz420"},"content":"    // /**","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"MrOPPA1"},"content":"    // * Creates the StorageFile object based on the user specified path (if any) or","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"MrOPPA1"},"content":"    // the default storage path.","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"kevinz420"},"content":"    // * @param launchArgs arguments supplied by the user at program launch","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"MrOPPA1"},"content":"    // * @throws InvalidStorageFilePathException if the target file path is","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"MrOPPA1"},"content":"    // incorrect.","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"kevinz420"},"content":"    // */","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"MrOPPA1"},"content":"    // private StorageFile initializeStorage(String[] launchArgs) throws","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"MrOPPA1"},"content":"    // InvalidStorageFilePathException {","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"kevinz420"},"content":"    // boolean isStorageFileSpecifiedByUser \u003d launchArgs.length \u003e 0;","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"MrOPPA1"},"content":"    // return isStorageFileSpecifiedByUser ? new StorageFile(launchArgs[0]) : new","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"MrOPPA1"},"content":"    // StorageFile();","lastModifiedDate":"2023-10-20"},{"lineNumber":124,"author":{"gitId":"kevinz420"},"content":"    // }","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"J-Y-Yan":3,"kevinz420":72,"MrOPPA1":24,"Remy9926":14,"-":12}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":" * Represents an executable command.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"public class Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"    String userCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"    public Command() {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"    public Command(String cmd){","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"        this.userCommand \u003d cmd;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"    public CommandResult execute() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"        throw new UnsupportedOperationException(\"This method is to be implemented by child classes\");","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"J-Y-Yan":8,"kevinz420":12,"MrOPPA1":1}},{"path":"src/main/java/seedu/duke/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.data.Printable;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"public class CommandResult {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"     * The feedback message to be shown to the user. Contains a description of the execution result","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"     * The list of objects that was produced by the command","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"    private final List\u003c? extends Printable\u003e relevantItems;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"        relevantItems \u003d null;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"    public CommandResult(String feedbackToUser, List\u003c? extends Printable\u003e relevantItems) {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"        this.relevantItems \u003d relevantItems;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"     * Returns a list of objects relevant to the command result, if any.","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"     * @return relevant items","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"    public Optional\u003cList\u003c? extends Printable\u003e\u003e getRelevantItems() {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"kevinz420"},"content":"        return Optional.ofNullable(relevantItems);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"J-Y-Yan":1,"kevinz420":40}},{"path":"src/main/java/seedu/duke/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":" * Terminates the program.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the program.\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_EXIT_ACKNOWEDGEMENT \u003d \"Exiting FITNUS as requested ...\";","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWEDGEMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"        return command instanceof ExitCommand; // instanceof returns false if it is null","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":22}},{"path":"src/main/java/seedu/duke/commands/GoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.ui.TextUi;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.data.exception.IncorrectFormatException;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"public class GoalCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"    public static final String COMMAND_WORD \u003d \"set\";","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"    public GoalCommand(String cmd){","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"        super(cmd);","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"     * The execution of goalCommand new a goal record into the goal list.","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"     * If error occurs in creating goal record, possibly includes","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"     * incorrect format of command or invalid number is input.","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"     * @return result of adding goal successfully message","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"        try{","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"            Duke.goals.addGoal(this.userCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"            String addGoalResultMsg \u003d TextUi.addGoalSuccessMessage(Duke.goals);","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"            return new CommandResult(addGoalResultMsg);","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"        }catch(IncorrectFormatException ife){","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"            ife.handleException();","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"        }catch(NumberFormatException nfe){","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Please input a valid number for calories.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"        return null;","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"J-Y-Yan":37}},{"path":"src/main/java/seedu/duke/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.logcommands.LogCommand;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.logcommands.ViewLogCommand;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.logcommands.UpdateLogCommand;","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.logcommands.DeleteLogCommand;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":" * Shows help instructions.","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"            + \"\\tExample: \" + COMMAND_WORD;","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"                HelpCommand.MESSAGE_USAGE + \"\\n\" + LogCommand.MESSAGE_USAGE + \"\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"                        DeleteLogCommand.MESSAGE_USAGE + \"\\n\" + UpdateLogCommand.MESSAGE_USAGE + \"\\n\" +","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"                ViewLogCommand.MESSAGE_USAGE","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"        //                        + \"\\n\" + DeleteCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"        //                        + \"\\n\" + ClearCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"        //                        + \"\\n\" + FindCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"        //                        + \"\\n\" + ListCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"        //                        + \"\\n\" + ViewCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"        //                        + \"\\n\" + ViewAllCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":24,"Remy9926":8}},{"path":"src/main/java/seedu/duke/commands/IncorrectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" * Represents an incorrect command. Upon execution, produces some feedback to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"    public IncorrectCommand(String feedbackToUser) {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"        return new CommandResult(feedbackToUser);","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":20}},{"path":"src/main/java/seedu/duke/commands/logcommands/DeleteLogCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.commands.logcommands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.data.exception.IncorrectFormatException;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"public class DeleteLogCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Delete an exercise from the exercise log.\\n\"","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"            + \"\\tExample: \" + COMMAND_WORD + \" 1 2 Running 68\";","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"    public String feedbackToUser;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"    private List\u003cString\u003e exerciseDetails;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"    public DeleteLogCommand() {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"        super();","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"    public DeleteLogCommand(List\u003cString\u003e exerciseDetails) {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"        super();","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"        this.exerciseDetails \u003d exerciseDetails;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"     * Extracts the details of the delete command and deletes the specified exercise.","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"     * @return CommandResult that tells the user whether an exercise was successfully removed.","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"     * @throws IncorrectFormatException when the command is not entered with the right type of parameters.","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"    public CommandResult execute() throws IncorrectFormatException, IOException {","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"        if (exerciseDetails.size() \u003c 4) {","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"            throw new IncorrectFormatException(\"The delete log command needs to take at least 4 parameters!\");","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"        try {","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"Remy9926"},"content":"            int month \u003d Integer.parseInt(exerciseDetails.get(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"Remy9926"},"content":"            if (month \u003c\u003d 0 || month \u003e 12) {","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"Remy9926"},"content":"                throw new IncorrectFormatException(\"The month you specified does not exist.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"Remy9926"},"content":"            int day \u003d Integer.parseInt(exerciseDetails.get(1));","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"Remy9926"},"content":"            if (day \u003c\u003d 0 || day \u003e Duke.exerciseLog.getNumberOfDays(month)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"Remy9926"},"content":"                throw new IncorrectFormatException(\"The day you specified does not exist for the month.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"Remy9926"},"content":"            String exerciseName \u003d \"\";","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"Remy9926"},"content":"            for (int i \u003d 2; i \u003c exerciseDetails.size() - 1; i++) {","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"Remy9926"},"content":"                exerciseName +\u003d exerciseDetails.get(i) + \" \";","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"Remy9926"},"content":"            int caloriesBurned \u003d Integer.parseInt(exerciseDetails.get(exerciseDetails.size() - 1));","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"Remy9926"},"content":"            if (caloriesBurned \u003c 0) {","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Remy9926"},"content":"                throw new IncorrectFormatException(\"You cannot burn a negative number of calories.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"Remy9926"},"content":"            feedbackToUser \u003d Duke.exerciseLog.removeExercise(month, day, exerciseName.trim(), caloriesBurned) ?","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"Remy9926"},"content":"                    \"Successfully removed exercise!\" :","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"Remy9926"},"content":"                    \"Could not find the specified exercise!\";","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"Remy9926"},"content":"            Duke.storage.removeExerciseFromFile(month, day, exerciseName.trim().split(\" \"), caloriesBurned);","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"Remy9926"},"content":"            return new CommandResult(feedbackToUser);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"Remy9926"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"Remy9926"},"content":"            throw new IncorrectFormatException(\"Please specify reasonable positive numbers in the month, day, and \" +","lastModifiedDate":"2023-11-04"},{"lineNumber":67,"author":{"gitId":"Remy9926"},"content":"                    \"calories burned fields\");","lastModifiedDate":"2023-11-04"},{"lineNumber":68,"author":{"gitId":"Remy9926"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":69,"author":{"gitId":"Remy9926"},"content":"            throw new IOException(\"The ExerciseLog.txt file could not be found.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":70,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"Remy9926":72}},{"path":"src/main/java/seedu/duke/commands/logcommands/LogCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.commands.logcommands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.data.exception.IncorrectFormatException;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"public class LogCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"    public static final String COMMAND_WORD \u003d \"log\";","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Logs an exercise into the exercise log.\\n\"","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"            + \"\\tExample: \" + COMMAND_WORD + \" 1 2 Football 89\";","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"    public String feedbackToUser;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"    private List\u003cString\u003e exerciseDetails;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"    public LogCommand() {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"        super();","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"        feedbackToUser \u003d \"Successfully added exercise to log:\\n\\t\";","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"    public LogCommand(List\u003cString\u003e exerciseDetails) {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"        super();","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"        feedbackToUser \u003d \"Successfully added exercise to log:\\n\\t\";","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"        this.exerciseDetails \u003d exerciseDetails;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"     * Extracts the details of the log command and logs the exercise with its specific details.","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"     * @return CommandResult telling the user that the exercise was successfully added along with the exercise details.","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"     * @throws IncorrectFormatException when the command is not entered with the right type of parameters.","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"    public CommandResult execute() throws IncorrectFormatException, IOException {","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"        if (exerciseDetails.size() \u003c 4) {","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"            throw new IncorrectFormatException(\"The log command needs to take at least 4 parameters!\");","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"Remy9926"},"content":"        try {","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"Remy9926"},"content":"            int month \u003d Integer.parseInt(exerciseDetails.get(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"Remy9926"},"content":"            if (month \u003c\u003d 0 || month \u003e 12) {","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"Remy9926"},"content":"                throw new IncorrectFormatException(\"The month you specified does not exist.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"Remy9926"},"content":"            int day \u003d Integer.parseInt(exerciseDetails.get(1));","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"Remy9926"},"content":"            if (day \u003c\u003d 0 || day \u003e Duke.exerciseLog.getNumberOfDays(month)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"Remy9926"},"content":"                throw new IncorrectFormatException(\"The day you specified does not exist for the month.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"Remy9926"},"content":"            String exerciseName \u003d \"\";","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"Remy9926"},"content":"            for (int i \u003d 2; i \u003c exerciseDetails.size() - 1; i++) {","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"Remy9926"},"content":"                exerciseName +\u003d exerciseDetails.get(i) + \" \";","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Remy9926"},"content":"            int caloriesBurned \u003d Integer.parseInt(exerciseDetails.get(exerciseDetails.size() - 1));","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"Remy9926"},"content":"            if (caloriesBurned \u003c 0) {","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"Remy9926"},"content":"                throw new IncorrectFormatException(\"You cannot burn a negative number of calories.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"Remy9926"},"content":"            String exerciseDescription \u003d Duke.exerciseLog.addExercise(month, day, exerciseName.trim(), caloriesBurned);","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"Remy9926"},"content":"            Duke.storage.writeExerciseToFile(month, day, exerciseName.trim().split(\" \"), caloriesBurned);","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"Remy9926"},"content":"            return new CommandResult((feedbackToUser + exerciseDescription).trim());","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"Remy9926"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"Remy9926"},"content":"            throw new IncorrectFormatException(\"Please specify reasonable positive numbers in the month, day, and \" +","lastModifiedDate":"2023-11-04"},{"lineNumber":67,"author":{"gitId":"Remy9926"},"content":"                    \"calories burned fields\");","lastModifiedDate":"2023-11-04"},{"lineNumber":68,"author":{"gitId":"Remy9926"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":69,"author":{"gitId":"Remy9926"},"content":"            throw new IOException(\"The ExerciseLog.txt file could not be found.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":70,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"Remy9926":72}},{"path":"src/main/java/seedu/duke/commands/logcommands/UpdateLogCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.commands.logcommands;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"import java.util.List;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.data.exception.IncorrectFormatException;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"public class UpdateLogCommand extends Command {","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"    public static final String COMMAND_WORD \u003d \"update\";","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates an exercise from the exercise log.\\n\"","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"            + \"\\tExample: \" + COMMAND_WORD + \" 1 2 Football 89\" + \"\\n\" + \"\\tPlease specify the new exercise details:\\n\"","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"            + \"\\tSquash 44\";","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"    public String feedbackToUser;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"    private List\u003cString\u003e exerciseDetails;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"    public UpdateLogCommand() {","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"        super();","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"    public UpdateLogCommand(List\u003cString\u003e exerciseDetails) {","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"        super();","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"        this.exerciseDetails \u003d exerciseDetails;","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"     * Extracts the details of the update command and updates the specified exercise.","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"     * @return CommandResult that tells the user whether an exercise was successfully updated.","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"     * @throws IncorrectFormatException when the command is not entered with the right type of parameters.","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"    public CommandResult execute() throws IncorrectFormatException, IOException {","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"        if (exerciseDetails.size() \u003c 4) {","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"            throw new IncorrectFormatException(\"The update log command needs to take at least 4 parameters!\");","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"Remy9926"},"content":"        try {","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"Remy9926"},"content":"            int month \u003d Integer.parseInt(exerciseDetails.get(0));","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"Remy9926"},"content":"            if (month \u003c\u003d 0 || month \u003e 12) {","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"Remy9926"},"content":"                throw new IncorrectFormatException(\"The month you specified does not exist.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"Remy9926"},"content":"            int day \u003d Integer.parseInt(exerciseDetails.get(1));","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"Remy9926"},"content":"            if (day \u003c\u003d 0 || day \u003e Duke.exerciseLog.getNumberOfDays(month)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"Remy9926"},"content":"                throw new IncorrectFormatException(\"The day you specified does not exist for the month.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"Remy9926"},"content":"            String oldExerciseName \u003d \"\";","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"Remy9926"},"content":"            for (int i \u003d 2; i \u003c exerciseDetails.size() - 1; i++) {","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"Remy9926"},"content":"                oldExerciseName +\u003d exerciseDetails.get(i) + \" \";","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Remy9926"},"content":"            int oldCaloriesBurned \u003d Integer.parseInt(exerciseDetails.get(exerciseDetails.size() - 1));","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"Remy9926"},"content":"            if (oldCaloriesBurned \u003c 0) {","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"Remy9926"},"content":"                throw new IncorrectFormatException(\"You cannot burn a negative number of calories.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"Remy9926"},"content":"            if (!Duke.exerciseLog.hasExercise(month, day, oldExerciseName.trim(), oldCaloriesBurned)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"Remy9926"},"content":"                feedbackToUser \u003d \"Could not find exercise to update.\";","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"Remy9926"},"content":"                return new CommandResult(feedbackToUser);","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"Remy9926"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"Remy9926"},"content":"            System.out.println(\"Please specify the new exercise details:\");","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"Remy9926"},"content":"            String newExerciseString \u003d scanner.nextLine();","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"Remy9926"},"content":"            String[] newExerciseDetails \u003d newExerciseString.split(\" \");","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"Remy9926"},"content":"            if (newExerciseDetails.length \u003c 2) {","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"Remy9926"},"content":"                throw new IncorrectFormatException(\"The new exercise needs to have a name and calories burned!\");","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":75,"author":{"gitId":"Remy9926"},"content":"            String newExerciseName \u003d \"\";","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"Remy9926"},"content":"            for (int i \u003d 0; i \u003c newExerciseDetails.length - 1; i++) {","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"Remy9926"},"content":"                newExerciseName +\u003d newExerciseDetails[i] + \" \";","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":80,"author":{"gitId":"Remy9926"},"content":"            int newCaloriesBurned \u003d Integer.parseInt(newExerciseDetails[newExerciseDetails.length - 1]);","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"Remy9926"},"content":"            if (newCaloriesBurned \u003c 0) {","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"Remy9926"},"content":"                throw new IncorrectFormatException(\"You cannot burn a negative number of calories.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":83,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":84,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"Remy9926"},"content":"            feedbackToUser \u003d Duke.exerciseLog.updateExercise(month, day, oldExerciseName.trim(), oldCaloriesBurned,","lastModifiedDate":"2023-11-04"},{"lineNumber":86,"author":{"gitId":"Remy9926"},"content":"                    newExerciseName.trim(), newCaloriesBurned) ? \"Exercise successfully updated!\" :","lastModifiedDate":"2023-11-04"},{"lineNumber":87,"author":{"gitId":"Remy9926"},"content":"                    \"Could not find exercise to update.\";","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"Remy9926"},"content":"            Duke.storage.updateExerciseInFile(month, day, oldExerciseName.trim().split(\" \"), oldCaloriesBurned,","lastModifiedDate":"2023-11-04"},{"lineNumber":89,"author":{"gitId":"Remy9926"},"content":"                    newExerciseName.trim().split(\" \"), newCaloriesBurned);","lastModifiedDate":"2023-11-04"},{"lineNumber":90,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"Remy9926"},"content":"            return new CommandResult(feedbackToUser);","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"Remy9926"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":93,"author":{"gitId":"Remy9926"},"content":"            throw new IncorrectFormatException(\"Please specify reasonable positive numbers in the month, day, and \" +","lastModifiedDate":"2023-11-04"},{"lineNumber":94,"author":{"gitId":"Remy9926"},"content":"                    \"calories burned fields\");","lastModifiedDate":"2023-11-04"},{"lineNumber":95,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":96,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"Remy9926":97}},{"path":"src/main/java/seedu/duke/commands/logcommands/ViewLogCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.commands.logcommands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import java.util.List;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.data.exception.IncorrectFormatException;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"enum ViewType {","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"    TOTAL,","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"    EXERCISES;","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"enum ViewScope {","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"    ALL,","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"    MONTH,","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"    DAY;","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"public class ViewLogCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Displays exercises from the exercise log.\\n\"","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"            + \"\\tExample: \" + COMMAND_WORD + \" exercises all\" + \" | \" + COMMAND_WORD + \"total all\";","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"    private ViewType viewType;","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"    private ViewScope viewScope;","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"    private int month;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"    private int day;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"    public ViewLogCommand() {","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"        super();","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"     * Assigns the view attribute a specific enum based on the scope at which the user wants to view the exercise log.","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"     * @param viewArgs the details of the scope at which the user wants to view the exercise log.","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"Remy9926"},"content":"     * @throws IncorrectFormatException when the command is not entered with the right type of parameters.","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"Remy9926"},"content":"    public ViewLogCommand(List\u003cString\u003e viewArgs) throws IncorrectFormatException {","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"Remy9926"},"content":"        super();","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"Remy9926"},"content":"        if (viewArgs.size() \u003c 2) {","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"Remy9926"},"content":"            throw new IncorrectFormatException(\"Please specify both a ViewType and ViewScope\");","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"Remy9926"},"content":"        switch (viewArgs.get(0)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"Remy9926"},"content":"        case \"total\":","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"Remy9926"},"content":"            viewType \u003d ViewType.TOTAL;","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"Remy9926"},"content":"            break;","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"Remy9926"},"content":"        case \"exercises\":","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"Remy9926"},"content":"            viewType \u003d ViewType.EXERCISES;","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"Remy9926"},"content":"            break;","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"Remy9926"},"content":"        default:","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"Remy9926"},"content":"            throw new IncorrectFormatException(\"Incorrect or no ViewType specified.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"Remy9926"},"content":"        if (viewArgs.get(1).equals(\"all\") || viewArgs.get(1).equals(\"month\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"Remy9926"},"content":"            switch (viewArgs.size()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"Remy9926"},"content":"            case 2:","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"Remy9926"},"content":"                viewScope \u003d ViewScope.ALL;","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"Remy9926"},"content":"                break;","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"Remy9926"},"content":"            case 3:","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"Remy9926"},"content":"                try {","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"Remy9926"},"content":"                    viewScope \u003d ViewScope.MONTH;","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"Remy9926"},"content":"                    month \u003d Integer.parseInt(viewArgs.get(2));","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"Remy9926"},"content":"                    if (month \u003c\u003d 0 || month \u003e 12) {","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"Remy9926"},"content":"                        throw new IncorrectFormatException(\"The month you specified does not exist.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"Remy9926"},"content":"                    }","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"Remy9926"},"content":"                    break;","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"Remy9926"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"Remy9926"},"content":"                    throw new IncorrectFormatException(\"Please specify reasonable positive numbers in the \" +","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"Remy9926"},"content":"                            \"month, day, and calories burned fields\");","lastModifiedDate":"2023-11-04"},{"lineNumber":73,"author":{"gitId":"Remy9926"},"content":"                }","lastModifiedDate":"2023-11-04"},{"lineNumber":74,"author":{"gitId":"Remy9926"},"content":"            case 5:","lastModifiedDate":"2023-11-04"},{"lineNumber":75,"author":{"gitId":"Remy9926"},"content":"                try {","lastModifiedDate":"2023-11-04"},{"lineNumber":76,"author":{"gitId":"Remy9926"},"content":"                    viewScope \u003d ViewScope.DAY;","lastModifiedDate":"2023-11-04"},{"lineNumber":77,"author":{"gitId":"Remy9926"},"content":"                    month \u003d Integer.parseInt(viewArgs.get(2));","lastModifiedDate":"2023-11-04"},{"lineNumber":78,"author":{"gitId":"Remy9926"},"content":"                    if (month \u003c\u003d 0 || month \u003e 12) {","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"Remy9926"},"content":"                        throw new IncorrectFormatException(\"The month you specified does not exist.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"Remy9926"},"content":"                    }","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"Remy9926"},"content":"                    day \u003d Integer.parseInt(viewArgs.get(4));","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"Remy9926"},"content":"                    if (day \u003c\u003d 0 || day \u003e Duke.exerciseLog.getNumberOfDays(month)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"Remy9926"},"content":"                        throw new IncorrectFormatException(\"The day you specified does not exist for the month.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"Remy9926"},"content":"                    }","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"Remy9926"},"content":"                    break;","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"Remy9926"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":87,"author":{"gitId":"Remy9926"},"content":"                    throw new IncorrectFormatException(\"Please specify reasonable positive numbers in the \" +","lastModifiedDate":"2023-11-04"},{"lineNumber":88,"author":{"gitId":"Remy9926"},"content":"                            \"month, day, and calories burned fields\");","lastModifiedDate":"2023-11-04"},{"lineNumber":89,"author":{"gitId":"Remy9926"},"content":"                }","lastModifiedDate":"2023-11-04"},{"lineNumber":90,"author":{"gitId":"Remy9926"},"content":"            default:","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"Remy9926"},"content":"                throw new IncorrectFormatException(\"Incorrect view command format.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":92,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":93,"author":{"gitId":"Remy9926"},"content":"        } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":94,"author":{"gitId":"Remy9926"},"content":"            throw new IncorrectFormatException(\"Please specify a proper ViewScope.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":95,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"Remy9926"},"content":"     * A different message is returned depending on the scope at which a user wants to view their exercises.","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"Remy9926"},"content":"     * @return CommandResult telling the user their total number of exercises in total, for a month, or for a day.","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"Remy9926"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"Remy9926"},"content":"        String result;","lastModifiedDate":"2023-11-04"},{"lineNumber":105,"author":{"gitId":"Remy9926"},"content":"        if (viewType \u003d\u003d ViewType.TOTAL) {","lastModifiedDate":"2023-11-04"},{"lineNumber":106,"author":{"gitId":"Remy9926"},"content":"            switch (viewScope) {","lastModifiedDate":"2023-11-04"},{"lineNumber":107,"author":{"gitId":"Remy9926"},"content":"            case ALL:","lastModifiedDate":"2023-11-04"},{"lineNumber":108,"author":{"gitId":"Remy9926"},"content":"                result \u003d Integer.toString(Duke.exerciseLog.getNumberOfExercises());","lastModifiedDate":"2023-11-04"},{"lineNumber":109,"author":{"gitId":"Remy9926"},"content":"                return new CommandResult(\"Here are the total number of exercises you have logged: \" +","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"Remy9926"},"content":"                        result);","lastModifiedDate":"2023-11-04"},{"lineNumber":111,"author":{"gitId":"Remy9926"},"content":"            case MONTH:","lastModifiedDate":"2023-11-04"},{"lineNumber":112,"author":{"gitId":"Remy9926"},"content":"                result \u003d Integer.toString(Duke.exerciseLog.getNumberOfExercisesForMonth(month));","lastModifiedDate":"2023-11-04"},{"lineNumber":113,"author":{"gitId":"Remy9926"},"content":"                return new CommandResult(\"Here are the total number of exercises for that month: \" +","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"Remy9926"},"content":"                        result);","lastModifiedDate":"2023-11-04"},{"lineNumber":115,"author":{"gitId":"Remy9926"},"content":"            case DAY:","lastModifiedDate":"2023-11-04"},{"lineNumber":116,"author":{"gitId":"Remy9926"},"content":"                result \u003d Integer.toString(Duke.exerciseLog.getNumberOfExercisesForDay(month, day));","lastModifiedDate":"2023-11-04"},{"lineNumber":117,"author":{"gitId":"Remy9926"},"content":"                return new CommandResult(\"Here are the total number of exercises for that day: \" +","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"Remy9926"},"content":"                        result);","lastModifiedDate":"2023-11-04"},{"lineNumber":119,"author":{"gitId":"Remy9926"},"content":"            default:","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"Remy9926"},"content":"                return new CommandResult(\"Invalid search type\");","lastModifiedDate":"2023-11-04"},{"lineNumber":121,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":122,"author":{"gitId":"Remy9926"},"content":"        } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":123,"author":{"gitId":"Remy9926"},"content":"            switch (viewScope) {","lastModifiedDate":"2023-11-04"},{"lineNumber":124,"author":{"gitId":"Remy9926"},"content":"            case ALL:","lastModifiedDate":"2023-11-04"},{"lineNumber":125,"author":{"gitId":"Remy9926"},"content":"                result \u003d Duke.exerciseLog.toString().stripTrailing();","lastModifiedDate":"2023-11-04"},{"lineNumber":126,"author":{"gitId":"Remy9926"},"content":"                return new CommandResult(\"Here are all the exercises:\\n\" + result);","lastModifiedDate":"2023-11-04"},{"lineNumber":127,"author":{"gitId":"Remy9926"},"content":"            case MONTH:","lastModifiedDate":"2023-11-04"},{"lineNumber":128,"author":{"gitId":"Remy9926"},"content":"                result \u003d Duke.exerciseLog.getMonth(month).toString().stripTrailing();","lastModifiedDate":"2023-11-04"},{"lineNumber":129,"author":{"gitId":"Remy9926"},"content":"                return new CommandResult(\"Here are the exercises for the month:\\n\" + result);","lastModifiedDate":"2023-11-04"},{"lineNumber":130,"author":{"gitId":"Remy9926"},"content":"            case DAY:","lastModifiedDate":"2023-11-04"},{"lineNumber":131,"author":{"gitId":"Remy9926"},"content":"                result \u003d Duke.exerciseLog.getDay(month, day).toString().stripTrailing();","lastModifiedDate":"2023-11-04"},{"lineNumber":132,"author":{"gitId":"Remy9926"},"content":"                return new CommandResult(\"Here are the exercises for the day:\\n\" + result);","lastModifiedDate":"2023-11-04"},{"lineNumber":133,"author":{"gitId":"Remy9926"},"content":"            default:","lastModifiedDate":"2023-11-04"},{"lineNumber":134,"author":{"gitId":"Remy9926"},"content":"                return new CommandResult(\"Invalid search type\");","lastModifiedDate":"2023-11-04"},{"lineNumber":135,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":136,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"Remy9926":138}},{"path":"src/main/java/seedu/duke/commands/meal/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package seedu.duke.commands.meal;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import seedu.duke.data.meal.Meal;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"import java.util.List;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"public class AddCommand extends MealCommand {","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"    public static final String COMMAND_WORD \u003d \"meal_add\";","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add a meal and record the amount of calories.\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"            + \"Example: \" + COMMAND_WORD + \" potato 15\";","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"    private static final int validArgumentAmount \u003d 2;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"    private final String name;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"    private final int calories;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"    public AddCommand(List\u003cString\u003e arguments) throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"        if (arguments \u003d\u003d null || arguments.size() !\u003d validArgumentAmount) {","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"            throw new Exception(\"Incorrect amount of the arguments.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"        name \u003d arguments.get(0);","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"        calories \u003d Integer.parseInt(arguments.get(1));","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"    public CommandResult execute() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"        meals.add(new Meal(name, calories));","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"        return new CommandResult(\"Successfully add meal \u0027\" + name + \"\u0027(\" + calories + \"\u0027 calories)!\");","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"MrOPPA1":28,"Remy9926":1}},{"path":"src/main/java/seedu/duke/commands/meal/MealCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package seedu.duke.commands.meal;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"import seedu.duke.data.meal.Meal;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"public class MealCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"    public static final String COMMAND_WORD \u003d \"test\";","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"    protected static ArrayList\u003cMeal\u003e meals;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"    public MealCommand() {","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"        super();","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"    public MealCommand(List\u003cString\u003e meals) {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"    public static void setMeals(List\u003cMeal\u003e meals) {","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"        MealCommand.meals \u003d new ArrayList\u003c\u003e(meals);","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"    protected void checkArgument(String[] arguments, int validArgumentAmount) throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"        if (arguments \u003d\u003d null || arguments.length !\u003d 2) {","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"            throw new Exception(\"Incorrect amount of the arguments.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"    public CommandResult execute() throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"        throw new UnsupportedOperationException(\"meal command\");","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"MrOPPA1":23,"Remy9926":13}},{"path":"src/main/java/seedu/duke/common/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.common;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":" * Container for user visible messages.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"public class Messages {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Good bye!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_INIT_FAILED \u003d \"Failed to initialise address book application. Exiting...\";","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_PROGRAM_LAUNCH_ARGS_USAGE \u003d \"Launch command format: \"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"            + \"java seedu.duke.Duke [STORAGE_FILE_PATH]\";","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Welcome to your FITNUS journey!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_USING_STORAGE_FILE \u003d \"Using storage file : %1$s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":14}},{"path":"src/main/java/seedu/duke/data/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package seedu.duke.data;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"// import com.google.gson.annotations.SerializedName;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":" * Customized class for showing date and parsing supported string to date.","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"public class Date {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"    private static DateTimeFormatter[] formatters \u003d new DateTimeFormatter[] {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"M-d-yyyy\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"MMM d, yyyy\", Locale.ENGLISH), };","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"    private static DateTimeFormatter toStringFormatter \u003d formatters[formatters.length - 1];","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"    public String standardString;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"    transient LocalDate date;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"    // @SerializedName(\"rawData\")","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"     * Create a new date.","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"     * @param rawData A String that needs to comply with a supported format and","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"     *                indicates a correct date that will be recorded by this Date","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"     *                instance.","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"    public Date(String rawData) throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"        setRawData(rawData);","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"     * Modifying an existing date with a rawData String.","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"     * @param rawData A String that needs to comply with a supported format and","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"     *                indicates a correct date that will be recorded by this Date","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"     *                instance.","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"Remy9926"},"content":"    public void setRawData(String rawData) throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"Remy9926"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"Remy9926"},"content":"            try {","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"Remy9926"},"content":"                date \u003d LocalDate.parse(rawData, formatter);","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"Remy9926"},"content":"                standardString \u003d this.toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"Remy9926"},"content":"                return;","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"Remy9926"},"content":"            } catch (Exception exception) {","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"Remy9926"},"content":"                continue;","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"Remy9926"},"content":"        throw new Exception(\"Unable to parse date time!\");","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"MrOPPA1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"MrOPPA1"},"content":"        return date.format(toStringFormatter);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"MrOPPA1":45,"Remy9926":19}},{"path":"src/main/java/seedu/duke/data/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package seedu.duke.data;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"// import com.google.gson.annotations.SerializedName;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":" * Customized class for showing date time and parsing supported string to date","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":" * time.","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"public class DateTime {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"    private static DateTimeFormatter[] formatters \u003d new DateTimeFormatter[] {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d H:m\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"M-d-yyyy HHmm\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"M-d-yyyy H:m\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"MMM d, yyyy HH:mm\", Locale.ENGLISH), };","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"    private static DateTimeFormatter toStringFormatter \u003d formatters[formatters.length - 1];","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"    public String standardString;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"    transient LocalDateTime dateTime;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"    // @SerializedName(\"rawData\")","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"     * Create a new date time.","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"     * @param rawData A String that needs to comply with a supported format and","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"     *                indicates a correct time that will be recorded by this Date","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"     *                instance time.","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"     *                       solution.","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"    public DateTime(String rawData) throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"        setRawData(rawData);","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"     * Modifying an existing date time with a rawData String.","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"     * @param rawData A String that needs to comply with a supported format and","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"     *                indicates a correct time that will be recorded by this Date","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"     *                instance.","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"MrOPPA1"},"content":"    public void setRawData(String rawData) throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"MrOPPA1"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"MrOPPA1"},"content":"            try {","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"MrOPPA1"},"content":"                dateTime \u003d LocalDateTime.parse(rawData, formatter);","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"MrOPPA1"},"content":"                standardString \u003d this.toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"MrOPPA1"},"content":"                return;","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"MrOPPA1"},"content":"            } catch (Exception exception) {","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"Remy9926"},"content":"                continue;","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"MrOPPA1"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"MrOPPA1"},"content":"        throw new Exception(\"Unable to parse date time!\");","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"MrOPPA1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"MrOPPA1"},"content":"        return dateTime.format(toStringFormatter);","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"MrOPPA1"},"content":"     * Compare the dates of this DateTime and another DateTime.","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"MrOPPA1"},"content":"     * @param dateTime The other DateTime that is used to compare.","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"MrOPPA1"},"content":"     * @return If the date of current instance is earlier,it returns -1.","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"MrOPPA1"},"content":"     *         If the date of current instance is later,it returns 1.","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"MrOPPA1"},"content":"     *         Otherwise(when they\u0027re at exactly the same date) it returns 0.","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"MrOPPA1"},"content":"    public int compareDate(DateTime dateTime) {","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"Remy9926"},"content":"        LocalDate date1 \u003d this.dateTime.toLocalDate();","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"Remy9926"},"content":"        LocalDate date2 \u003d dateTime.dateTime.toLocalDate();","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"MrOPPA1"},"content":"        if (date1.isBefore(date2)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"MrOPPA1"},"content":"            return 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"MrOPPA1"},"content":"        if (date1.isAfter(date2)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"MrOPPA1"},"content":"            return -1;","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"MrOPPA1"},"content":"        return 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"MrOPPA1"},"content":"     * Compare the dates of this DateTime and another Date.","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"MrOPPA1"},"content":"     * @param date The other Date that is used to compare.","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"MrOPPA1"},"content":"     * @return If the date of current instance is earlier,it returns -1.","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"MrOPPA1"},"content":"     *         If the date of current instance is later,it returns 1.","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"MrOPPA1"},"content":"     *         Otherwise(when they\u0027re at exactly the same date) it returns 0.","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"MrOPPA1"},"content":"    public int compareDate(Date date) {","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"Remy9926"},"content":"        LocalDate date1 \u003d this.dateTime.toLocalDate();","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"Remy9926"},"content":"        LocalDate date2 \u003d date.date;","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"MrOPPA1"},"content":"        if (date1.isBefore(date2)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"MrOPPA1"},"content":"            return -1;","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"MrOPPA1"},"content":"        if (date1.isAfter(date2)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"MrOPPA1"},"content":"            return 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"MrOPPA1"},"content":"        return 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"MrOPPA1":85,"Remy9926":23}},{"path":"src/main/java/seedu/duke/data/Goal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package seedu.duke.data;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"public class Goal {","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"    private int calories;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"    private String date;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"    public Goal(int calories, String date){","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"        return \"Consume \" + this.calories + \" kcal on \" + this.date;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"J-Y-Yan":15}},{"path":"src/main/java/seedu/duke/data/GoalList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package seedu.duke.data;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.data.exception.IllegalValueException;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.data.exception.IncorrectFormatException;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.ui.TextUi;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"public class GoalList {","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"    private static final String GOALKEYWORD \u003d \"set\";","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"    private static final String DATEKEYWORD \u003d \"on\";","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"    private ArrayList\u003cGoal\u003e goals;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"    private int goalCount;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"    private TextUi ui;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"    public GoalList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"        goals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"        this.goalCount \u003d 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"    public GoalList(ArrayList\u003cGoal\u003e goals) {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"        this.goals \u003d goals;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"        this.goalCount \u003d goals.size();","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"    public Goal getGoal(int index) {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"        return goals.get(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"    public int getGoalCount() {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"        return goalCount;","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"     * @param index points to the target gaol at the goal list","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"    public void deleteGoal(int index) {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"J-Y-Yan"},"content":"        Goal targetGoal \u003d goals.remove(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"J-Y-Yan"},"content":"        goalCount--;","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"J-Y-Yan"},"content":"        ui.printDeleteGoal(targetGoal);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"J-Y-Yan"},"content":"        ui.printNumberofGoal(goalCount);","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"Remy9926"},"content":"     * checks if the user Input is valid by:","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"J-Y-Yan"},"content":"     * 1. check if the length of the command equals 4","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"J-Y-Yan"},"content":"     * 2. detect keywords \"set\", \"on\", etc.","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"J-Y-Yan"},"content":"     * 3. check if user inputs a calories number at valid range","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Remy9926"},"content":"     * The userCmd should be like: set 1234 on Date","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"Remy9926"},"content":"     * @param userCmd represents the raw userInput","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"Remy9926"},"content":"     * @throws IncorrectFormatException","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"J-Y-Yan"},"content":"    private void checkGoalInput(String userCmd) throws IncorrectFormatException, NumberFormatException {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"J-Y-Yan"},"content":"        String[] cmdSplit \u003d userCmd.split(\" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"J-Y-Yan"},"content":"        if (cmdSplit.length !\u003d 4) {","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"J-Y-Yan"},"content":"            throw new IncorrectFormatException(\"Goal message contain extra data. Please \"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"J-Y-Yan"},"content":"                    + \"provides with only relevant information.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"Remy9926"},"content":"        if (!cmdSplit[0].equals(GOALKEYWORD) ) {","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"Remy9926"},"content":"            throw new IncorrectFormatException(\"Sorry. I cannot detect the \u0027\" + GOALKEYWORD + \"\u0027 keyword.\" );","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"Remy9926"},"content":"        if (!cmdSplit[2].equals(DATEKEYWORD)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"Remy9926"},"content":"            throw new IncorrectFormatException(\"Sorry. I cannot detect the \u0027\" + DATEKEYWORD + \"\u0027 keyword.\" );","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"J-Y-Yan"},"content":"        int calories \u003d Integer.parseInt(cmdSplit[1]); //throws number exception if not a number string","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"J-Y-Yan"},"content":"        if (calories \u003c\u003d 0 ){","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"J-Y-Yan"},"content":"            throw new IllegalValueException(\"Please input a positive value.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"J-Y-Yan"},"content":"     * This method will first check if the raw user input is in the correct format.","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"J-Y-Yan"},"content":"     * If not, terminate the method and throws error message.","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"J-Y-Yan"},"content":"     * If yes, continue to add a new goal object into the goals list.","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"J-Y-Yan"},"content":"     * @param userCmd represents raw user input","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"J-Y-Yan"},"content":"     * @throws IncorrectFormatException if user input is in wrong format","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"J-Y-Yan"},"content":"     * @throws NumberFormatException if the user does not input a valid number","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"J-Y-Yan"},"content":"    public void addGoal(String userCmd) throws IncorrectFormatException, NumberFormatException{","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"J-Y-Yan"},"content":"        userCmd \u003d userCmd.toLowerCase().trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"J-Y-Yan"},"content":"        checkGoalInput(userCmd); //if invalid, exceptions is thrown","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"J-Y-Yan"},"content":"        String[] cmdSplit \u003d userCmd.split(\" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"J-Y-Yan"},"content":"        int calories \u003d Integer.parseInt(cmdSplit[1]);","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"J-Y-Yan"},"content":"        String date \u003d cmdSplit[3];","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"J-Y-Yan"},"content":"        goals.add(new Goal(calories, date));","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"J-Y-Yan"},"content":"        goalCount++;","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"J-Y-Yan":88,"Remy9926":10}},{"path":"src/main/java/seedu/duke/data/Printable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.data;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"public interface Printable {","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"    String getAsText();","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":5}},{"path":"src/main/java/seedu/duke/data/exception/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.data.exception;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"public class IllegalValueException extends IncorrectFormatException {","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"        super(message);","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"J-Y-Yan":1,"kevinz420":12}},{"path":"src/main/java/seedu/duke/data/exception/IncorrectFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package seedu.duke.data.exception;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"public class IncorrectFormatException extends Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"    public IncorrectFormatException(String message) {","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"        super(message);","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"    public void handleException(){","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"Please try again.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"J-Y-Yan":13}},{"path":"src/main/java/seedu/duke/data/meal/Meal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package seedu.duke.data.meal;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"public class Meal {","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"    public String name;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"    public int calories;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"    // public DateTime time;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"    public Meal(String name, int calories) throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"        // this.time \u003d new DateTime(LocalDateTime.now().toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"MrOPPA1":13}},{"path":"src/main/java/seedu/duke/exerciselog/Day.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.exerciselog;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"public class Day {","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"    private final ArrayList\u003cExercise\u003e exercises;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"    public Day() {","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"        exercises \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"     * Instantiates and adds a new Exercise Object into the Day.","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"     * @param exerciseName the name of the exercise to be added to the day","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"     * @param caloriesBurned the number of calories burned during the exercise","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"     * @return a string representing the new exercise","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"    public String addExercise(String exerciseName, int caloriesBurned) {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"        Exercise newExercise \u003d new Exercise(exerciseName, caloriesBurned);","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"        exercises.add(newExercise);","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"        return newExercise.toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"     * Attempts to remove an exercise with the specified details and returns whether or not removal was successful.","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"     * @param exerciseName the name of the exercise to be removed","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"     * @param caloriesBurned the number of calories burned during the exercise","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"     * @return true if an exercise was successfully removed, false otherwise","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"    public boolean removeExercise(String exerciseName, int caloriesBurned) {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"        return exercises.remove(new Exercise(exerciseName, caloriesBurned));","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"     * Returns the exercise object at the specified index for the Day.","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"Remy9926"},"content":"     * @param index the number of the exercise the user wants to check on","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"Remy9926"},"content":"     * @return the exercise object at the specified index","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"Remy9926"},"content":"    public Exercise getExercise(int index) {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Remy9926"},"content":"        return exercises.get(index - 1);","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"Remy9926"},"content":"     * Returns the total number of exercises logged for the day.","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"Remy9926"},"content":"     * @return the total number of exercises logged for the day.","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"Remy9926"},"content":"    public Integer getNumberOfExercises() {","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Remy9926"},"content":"        return exercises.size();","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"Remy9926"},"content":"     * Returns whether the Day has exercises or not","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"Remy9926"},"content":"     * @return true if there are exercises, false if not","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"Remy9926"},"content":"    public boolean containsExercises() {","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"Remy9926"},"content":"        return !exercises.isEmpty();","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"Remy9926"},"content":"     * Given the specific details of an Exercise, finds the exercise in the log and updates it to the new specified","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"Remy9926"},"content":"     * details.","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"Remy9926"},"content":"     * @param oldExerciseName original name of the exercise to be updated","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"Remy9926"},"content":"     * @param oldCaloriesBurned original number of calories burned by the exercise to be updated","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"Remy9926"},"content":"     * @param newExerciseName the new name to update the exercise to","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"Remy9926"},"content":"     * @param newCaloriesBurned the new number of calories burned to update the exercise to","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"Remy9926"},"content":"     * @return true when an exercise is found and updated, false otherwise","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"Remy9926"},"content":"    public boolean updateExercise(String oldExerciseName, int oldCaloriesBurned, String newExerciseName,","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"Remy9926"},"content":"                                  int newCaloriesBurned) {","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"Remy9926"},"content":"        int index \u003d exercises.indexOf(new Exercise(oldExerciseName, oldCaloriesBurned));","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"Remy9926"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"Remy9926"},"content":"            return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"Remy9926"},"content":"        Exercise targetExercise \u003d exercises.get(index);","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"Remy9926"},"content":"        targetExercise.setExerciseName(newExerciseName);","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"Remy9926"},"content":"        targetExercise.setCaloriesBurned(newCaloriesBurned);","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"Remy9926"},"content":"        return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"Remy9926"},"content":"    public boolean hasExercise(String exerciseName, int caloriesBurned) {","lastModifiedDate":"2023-11-04"},{"lineNumber":88,"author":{"gitId":"Remy9926"},"content":"        return exercises.contains(new Exercise(exerciseName, caloriesBurned));","lastModifiedDate":"2023-11-04"},{"lineNumber":89,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":90,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":91,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"Remy9926"},"content":"     * Returns a string representing all the exercises contained for the Day.","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"Remy9926"},"content":"     * @return a string representing all the exercises for the day","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"Remy9926"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"Remy9926"},"content":"        if (exercises.isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"Remy9926"},"content":"            return \"\\tNO EXCERCISES FOR THIS DAY!\\n\";","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"Remy9926"},"content":"        String newString \u003d \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"Remy9926"},"content":"        for (Exercise e: exercises) {","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"Remy9926"},"content":"            newString +\u003d \"\\t\" + e.toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"Remy9926"},"content":"        return newString;","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Remy9926":106}},{"path":"src/main/java/seedu/duke/exerciselog/Exercise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.exerciselog;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"public class Exercise {","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"    private String exerciseName;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"    private int caloriesBurned;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"    public Exercise(String exerciseName, int caloriesBurned) {","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"        this.exerciseName \u003d exerciseName;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"        this.caloriesBurned \u003d caloriesBurned;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"    public String getExerciseName() {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"        return exerciseName;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"    public int getCaloriesBurned() {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"        return caloriesBurned;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"    public void setExerciseName(String newName) {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"        this.exerciseName \u003d newName;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"    public void setCaloriesBurned(int newCalories) {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"        this.caloriesBurned \u003d newCalories;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"        return \"Exercise: \" + exerciseName + \", Calories Burned: \" + Integer.toString(caloriesBurned) + \" Calories\\n\";","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"        if (!(other instanceof Exercise)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"        Exercise otherExercise \u003d (Exercise) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"        return this.exerciseName.equals(otherExercise.getExerciseName()) \u0026\u0026","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"                this.caloriesBurned \u003d\u003d otherExercise.getCaloriesBurned();","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Remy9926":40}},{"path":"src/main/java/seedu/duke/exerciselog/Log.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.exerciselog;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"public class Log {","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"    public static ArrayList\u003cMonth\u003e exerciseLog;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"    public Log() {","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"        exerciseLog \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(31, \"jan\")); // Jan 31","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(29, \"feb\")); // Feb 29","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(31, \"mar\")); // Mar 31","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(30, \"apr\")); // Apr 30","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(31, \"may\")); // May 31","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(30, \"jun\")); // Jun 30","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(31, \"jul\")); // Jul 31","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(31, \"aug\")); // Aug 31","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(30, \"sep\")); // Sep 30","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(31, \"oct\")); // Oct 31","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(30, \"nov\")); // Nov 30","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(31, \"dec\")); // Dec 31","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"     * Adds an exercise to the specified month and day with the specified name and number of calories burned.","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"     * @param month the month of the exercise to be added to the log","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"     * @param day the day of the month of the exercise to be added to the log","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"     * @param exerciseName the name of the exercise to be added to the log","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"     * @param caloriesBurned the number of calories burned by the exercise","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"     * @return the string representation of the exercise that is added to the log","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"    public String addExercise(int month, int day, String exerciseName, int caloriesBurned) {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"        return exerciseLog.get(month - 1).addExercise(day - 1, exerciseName, caloriesBurned);","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"     * Attempts to remove the specified exercise from the log and returns true only if removal is successful.","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"Remy9926"},"content":"     * @param month the month of the exercise to be deleted from the log","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"Remy9926"},"content":"     * @param day the day of the month of the exercise to be deleted from the log","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"Remy9926"},"content":"     * @param exerciseName the name of the exercise to be deleted from the log","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"Remy9926"},"content":"     * @param caloriesBurned the number of calories burned by the exercise","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"Remy9926"},"content":"     * @return true if the exercise was removed, false otherwise","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"Remy9926"},"content":"    public boolean removeExercise(int month, int day, String exerciseName, int caloriesBurned) {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"Remy9926"},"content":"        return exerciseLog.get(month - 1).removeExercise(day - 1, exerciseName, caloriesBurned);","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"Remy9926"},"content":"     * Returns the total number of exercises logged","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"Remy9926"},"content":"     * @return the total number of exercises logged","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"Remy9926"},"content":"    public int getNumberOfExercises() {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"Remy9926"},"content":"        int totalNumber \u003d 0;","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Remy9926"},"content":"        for (Month m: exerciseLog) {","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Remy9926"},"content":"            totalNumber +\u003d m.getTotalNumberOfExercises();","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Remy9926"},"content":"        return totalNumber;","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"Remy9926"},"content":"     * Returns the total number of exercises logged for the specific month","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"Remy9926"},"content":"     * @param month the month to be checked","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"Remy9926"},"content":"     * @return the total number of exercises logged for the specific month","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"Remy9926"},"content":"    public int getNumberOfExercisesForMonth(int month) {","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"Remy9926"},"content":"        return exerciseLog.get(month - 1).getTotalNumberOfExercises();","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"Remy9926"},"content":"     * Returns the total number of exercises logged for the specific day of the specified month","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"Remy9926"},"content":"     * @param month the month to be checked","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"Remy9926"},"content":"     * @param day the day of the month to be checked","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"Remy9926"},"content":"     * @return the total number of exercises logged for a specific day of the month","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"Remy9926"},"content":"    public int getNumberOfExercisesForDay(int month, int day) {","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"Remy9926"},"content":"        return exerciseLog.get(month - 1).getNumberOfExercisesForDay(day - 1);","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"Remy9926"},"content":"     * Given the specific details of an Exercise, finds the exercise in the log on the given month and day, and updates","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"Remy9926"},"content":"     * it to the new specified details.","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"Remy9926"},"content":"     * @param month the month of the exercise to be updated","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"Remy9926"},"content":"     * @param day the day of the month of the exercise to be updated","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"Remy9926"},"content":"     * @param oldExerciseName original name of the exercise to be updated","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"Remy9926"},"content":"     * @param oldCaloriesBurned original number of calories burned by the exercise to be updated","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"Remy9926"},"content":"     * @param newExerciseName the new name to update the exercise to","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"Remy9926"},"content":"     * @param newCaloriesBurned the new number of calories burned to update the exercise to","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"Remy9926"},"content":"     * @return true if an exercise is successfully updated, false otherwise","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"Remy9926"},"content":"    public boolean updateExercise(int month, int day, String oldExerciseName, int oldCaloriesBurned,","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"Remy9926"},"content":"                                  String newExerciseName, int newCaloriesBurned) {","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"Remy9926"},"content":"        return exerciseLog.get(month - 1).updateExercise(day - 1, oldExerciseName, oldCaloriesBurned, newExerciseName,","lastModifiedDate":"2023-11-04"},{"lineNumber":99,"author":{"gitId":"Remy9926"},"content":"                newCaloriesBurned);","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"Remy9926"},"content":"    public boolean hasExercise(int month, int day, String exerciseName, int caloriesBurned) {","lastModifiedDate":"2023-11-04"},{"lineNumber":103,"author":{"gitId":"Remy9926"},"content":"        return exerciseLog.get(month - 1).hasExercise(day - 1, exerciseName, caloriesBurned);","lastModifiedDate":"2023-11-04"},{"lineNumber":104,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":105,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":106,"author":{"gitId":"Remy9926"},"content":"    public int getNumberOfDays(int month) {","lastModifiedDate":"2023-11-03"},{"lineNumber":107,"author":{"gitId":"Remy9926"},"content":"        return exerciseLog.get(month - 1).getNumberOfDays();","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":110,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"Remy9926"},"content":"     * Returns the Month object of the specified month.","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"Remy9926"},"content":"     * @param month the month to be checked","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"Remy9926"},"content":"     * @return the Month object of the specified month","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"Remy9926"},"content":"    public Month getMonth(int month) {","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"Remy9926"},"content":"        return exerciseLog.get(month - 1);","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"Remy9926"},"content":"     * Returns the Day object of the specified day.","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"Remy9926"},"content":"     * @param month the month to be checked","lastModifiedDate":"2023-10-20"},{"lineNumber":124,"author":{"gitId":"Remy9926"},"content":"     * @param day the day of the month to be checked","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"Remy9926"},"content":"     * @return the Day object of the specified month and day","lastModifiedDate":"2023-10-20"},{"lineNumber":126,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":127,"author":{"gitId":"Remy9926"},"content":"    public Day getDay(int month, int day) {","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"Remy9926"},"content":"        return exerciseLog.get(month - 1).getDay(day - 1);","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"Remy9926"},"content":"     * The string representation of the exercise log, showing each month with their days and exercises","lastModifiedDate":"2023-10-20"},{"lineNumber":133,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"Remy9926"},"content":"     * @return the string representation of the exercise log","lastModifiedDate":"2023-10-20"},{"lineNumber":135,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":136,"author":{"gitId":"Remy9926"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"Remy9926"},"content":"        String newString \u003d \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"Remy9926"},"content":"        for (Month m: exerciseLog) {","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"Remy9926"},"content":"            newString +\u003d m.toString() + \"\\n\";","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"Remy9926"},"content":"        return newString;","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Remy9926":143}},{"path":"src/main/java/seedu/duke/exerciselog/Month.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.exerciselog;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"public class Month {","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"    private final ArrayList\u003cDay\u003e dates;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"    private String name;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"    public Month(int days, String name) {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"        dates \u003d new ArrayList\u003cDay\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"        for (int i \u003d 0; i \u003c days; i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"            dates.add(new Day());","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"     * Adds an exercise with the specified name and calories burned to the specified day.","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"     * @param day the day to add the exercise to","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"     * @param exerciseName the name of the exercise","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"     * @param caloriesBurned the number of calories burned by the exercise","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"     * @return the string representation of the new exercise created","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"    public String addExercise(int day, String exerciseName, int caloriesBurned) {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"        return dates.get(day).addExercise(exerciseName, caloriesBurned);","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"     * Attempts to remove the specified exercise at the specified day of the month","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"     * @param day the day to remove the exercise from","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"     * @param exerciseName the name of the exercise to be removed","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"     * @param caloriesBurned the number of calories burned by the exercise","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"     * @return true if the exercise was removed, false otherwise","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"    public boolean removeExercise(int day, String exerciseName, int caloriesBurned) {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"        return dates.get(day).removeExercise(exerciseName, caloriesBurned);","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"Remy9926"},"content":"     * Returns the total number of exercises for the month","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"Remy9926"},"content":"     * @return the total number of exercises for the month","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"Remy9926"},"content":"    public int getTotalNumberOfExercises() {","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Remy9926"},"content":"        int totalExercises \u003d 0;","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Remy9926"},"content":"        for (Day d: dates) {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Remy9926"},"content":"            totalExercises +\u003d d.getNumberOfExercises();","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Remy9926"},"content":"        return totalExercises;","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"Remy9926"},"content":"     * Returns a Day object of the day specified","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"Remy9926"},"content":"     * @param day the number of the day to be returned","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"Remy9926"},"content":"     * @return a Day object of the specified day","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"Remy9926"},"content":"    public Day getDay(int day) {","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Remy9926"},"content":"        return dates.get(day);","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"Remy9926"},"content":"     * Returns the total number of exercises for the specified day","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"Remy9926"},"content":"     * @param day the day to be checked","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"Remy9926"},"content":"     * @return the total number of exercises for the specified day","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"Remy9926"},"content":"    public int getNumberOfExercisesForDay(int day) {","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"Remy9926"},"content":"        return dates.get(day).getNumberOfExercises();","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"Remy9926"},"content":"     * Given the specific details of an Exercise, finds the exercise in the log on the given day, and updates it to the","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"Remy9926"},"content":"     * new specified details.","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"Remy9926"},"content":"     * @param day the day of the month of the exercise to be updated","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"Remy9926"},"content":"     * @param oldExerciseName original name of the exercise to be updated","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"Remy9926"},"content":"     * @param oldCaloriesBurned original number of calories burned by the exercise to be updated","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"Remy9926"},"content":"     * @param newExerciseName the new name to update the exercise to","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"Remy9926"},"content":"     * @param newCaloriesBurned the new number of calories burned to update the exercise to","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"Remy9926"},"content":"     * @return true if an exercise is successfully updated, false otherwise","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"Remy9926"},"content":"    public boolean updateExercise(int day, String oldExerciseName, int oldCaloriesBurned, String newExerciseName,","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"Remy9926"},"content":"                                  int newCaloriesBurned) {","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"Remy9926"},"content":"        return dates.get(day).updateExercise(oldExerciseName, oldCaloriesBurned, newExerciseName,","lastModifiedDate":"2023-11-04"},{"lineNumber":88,"author":{"gitId":"Remy9926"},"content":"                newCaloriesBurned);","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"Remy9926"},"content":"    public boolean hasExercise(int day, String exerciseName, int caloriesBurned) {","lastModifiedDate":"2023-11-04"},{"lineNumber":92,"author":{"gitId":"Remy9926"},"content":"        return dates.get(day).hasExercise(exerciseName, caloriesBurned);","lastModifiedDate":"2023-11-04"},{"lineNumber":93,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":94,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":95,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"Remy9926"},"content":"     * Returns the name of the month","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"Remy9926"},"content":"     * @return the name of the month","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"Remy9926"},"content":"    public String getName() {","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"Remy9926"},"content":"        return name;","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"Remy9926"},"content":"     * Returns the number of days in the month","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"Remy9926"},"content":"     * @return the number of days in the month","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"Remy9926"},"content":"    public int getNumberOfDays() {","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"Remy9926"},"content":"        return dates.size();","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"Remy9926"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"Remy9926"},"content":"     * Returns the string representation of the month by showing the name of the month and each of its days and","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"Remy9926"},"content":"     * exercises","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"Remy9926"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"Remy9926"},"content":"     * @return the string representation of the month","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"Remy9926"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"Remy9926"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"Remy9926"},"content":"        String newString \u003d \"Month: \" + name.toUpperCase() + \"\\n\";","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"Remy9926"},"content":"        for (int i \u003d 0; i \u003c dates.size(); i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"Remy9926"},"content":"            String day \u003d Integer.toString(i + 1);","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"Remy9926"},"content":"            newString +\u003d \"Day \" + day + \":\\n\";","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"Remy9926"},"content":"            newString +\u003d dates.get(i).toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"Remy9926"},"content":"        return newString;","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Remy9926":128}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.GoalCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.IncorrectCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.logcommands.LogCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.logcommands.DeleteLogCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.logcommands.ViewLogCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.logcommands.UpdateLogCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.data.exception.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.meal.AddCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"public class Parser {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"    public static final Pattern PERSON_INDEX_ARGS_FORMAT \u003d Pattern.compile(\"(?\u003ctargetIndex\u003e.+)\");","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"    public static final Pattern KEYWORDS_ARGS_FORMAT \u003d Pattern.compile(\"(?\u003ckeywords\u003e\\\\S+(?:\\\\s+\\\\S+)*)\");","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"    // one or more keywords separated by whitespace","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"kevinz420"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"     * @throws Exception","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"    public Command parseCommand(String userInput) throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"kevinz420"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"kevinz420"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"kevinz420"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"kevinz420"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"kevinz420"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"kevinz420"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"kevinz420"},"content":"        // case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"kevinz420"},"content":"        // return prepareAdd(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"kevinz420"},"content":"        // case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"kevinz420"},"content":"        // return prepareDelete(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"kevinz420"},"content":"        // case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"kevinz420"},"content":"        // return new ClearCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"kevinz420"},"content":"        // case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"kevinz420"},"content":"        // return prepareFind(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"kevinz420"},"content":"        // case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"kevinz420"},"content":"        // return new ListCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"kevinz420"},"content":"        // case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"kevinz420"},"content":"        // return prepareView(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"kevinz420"},"content":"        // case ViewAllCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"kevinz420"},"content":"        // return prepareViewAll(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"Remy9926"},"content":"        case LogCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"Remy9926"},"content":"            return new LogCommand(Arrays.asList(arguments.trim().split(\" \")));","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"Remy9926"},"content":"        case DeleteLogCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Remy9926"},"content":"            return new DeleteLogCommand(Arrays.asList(arguments.trim().split(\" \")));","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"Remy9926"},"content":"        case ViewLogCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"Remy9926"},"content":"            return new ViewLogCommand(Arrays.asList(arguments.trim().split(\" \")));","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"Remy9926"},"content":"        case UpdateLogCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"Remy9926"},"content":"            return new UpdateLogCommand(Arrays.asList(arguments.trim().split(\" \")));","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"Remy9926"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"MrOPPA1"},"content":"            return new AddCommand(Arrays.asList(arguments.trim().split(\" \")));","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"J-Y-Yan"},"content":"        case GoalCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"J-Y-Yan"},"content":"            return new GoalCommand(userInput);","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"kevinz420"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"kevinz420"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"kevinz420"},"content":"        case HelpCommand.COMMAND_WORD: // Fallthrough","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"kevinz420"},"content":"        default:","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"kevinz420"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"kevinz420"},"content":"    // /**","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"kevinz420"},"content":"    // * Parses arguments in the context of the add person command.","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"kevinz420"},"content":"    // *","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"kevinz420"},"content":"    // * @param args full command args string","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"kevinz420"},"content":"    // * @return the prepared command","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"kevinz420"},"content":"    // */","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"kevinz420"},"content":"    // private Command prepareAdd(String args) {","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"kevinz420"},"content":"    // final Matcher matcher \u003d PERSON_DATA_ARGS_FORMAT.matcher(args.trim());","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"kevinz420"},"content":"    // // Validate arg string format","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"kevinz420"},"content":"    // if (!matcher.matches()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"MrOPPA1"},"content":"    // return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"MrOPPA1"},"content":"    // AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"kevinz420"},"content":"    // }","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"kevinz420"},"content":"    // try {","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"kevinz420"},"content":"    // return new AddCommand(","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"kevinz420"},"content":"    // matcher.group(\"name\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"kevinz420"},"content":"    //","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"kevinz420"},"content":"    // matcher.group(\"phone\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"kevinz420"},"content":"    // isPrivatePrefixPresent(matcher.group(\"isPhonePrivate\")),","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"kevinz420"},"content":"    //","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"kevinz420"},"content":"    // matcher.group(\"email\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"kevinz420"},"content":"    // isPrivatePrefixPresent(matcher.group(\"isEmailPrivate\")),","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"kevinz420"},"content":"    //","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"kevinz420"},"content":"    // matcher.group(\"address\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"kevinz420"},"content":"    // isPrivatePrefixPresent(matcher.group(\"isAddressPrivate\")),","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"kevinz420"},"content":"    //","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"kevinz420"},"content":"    // getTagsFromArgs(matcher.group(\"tagArguments\"))","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"kevinz420"},"content":"    // );","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"kevinz420"},"content":"    // } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"kevinz420"},"content":"    // return new IncorrectCommand(ive.getMessage());","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"kevinz420"},"content":"    // }","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"kevinz420"},"content":"    // }","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"MrOPPA1"},"content":"     * Returns true if the private prefix is present for a contact detail in the add","lastModifiedDate":"2023-10-20"},{"lineNumber":140,"author":{"gitId":"MrOPPA1"},"content":"     * command\u0027s arguments string.","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"kevinz420"},"content":"    private static boolean isPrivatePrefixPresent(String matchedPrefix) {","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"kevinz420"},"content":"        return matchedPrefix.equals(\"p\");","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"kevinz420"},"content":"     * Extracts the new person\u0027s tags from the add command\u0027s tag arguments string.","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"kevinz420"},"content":"     * Merges duplicate tag strings.","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"kevinz420"},"content":"    private static Set\u003cString\u003e getTagsFromArgs(String tagArguments) throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"kevinz420"},"content":"        // no tags","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"kevinz420"},"content":"        if (tagArguments.isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"kevinz420"},"content":"            return Collections.emptySet();","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"kevinz420"},"content":"        // replace first delimiter prefix, then split","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"kevinz420"},"content":"        final Collection\u003cString\u003e tagStrings \u003d Arrays.asList(tagArguments.replaceFirst(\" t/\", \"\").split(\" t/\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"kevinz420"},"content":"        return new HashSet\u003c\u003e(tagStrings);","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"kevinz420"},"content":"     * Parses the given arguments string as a single index number.","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"kevinz420"},"content":"     * @param args arguments string to parse as index number","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"kevinz420"},"content":"     * @return the parsed index number","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"MrOPPA1"},"content":"     * @throws ParseException        if no region of the args string could be found","lastModifiedDate":"2023-10-20"},{"lineNumber":166,"author":{"gitId":"MrOPPA1"},"content":"     *                               for the index","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"kevinz420"},"content":"     * @throws NumberFormatException the args string region is not a valid number","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"kevinz420"},"content":"    private int parseArgsAsDisplayedIndex(String args) throws ParseException, NumberFormatException {","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"kevinz420"},"content":"        final Matcher matcher \u003d PERSON_INDEX_ARGS_FORMAT.matcher(args.trim());","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"kevinz420"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"kevinz420"},"content":"            throw new ParseException(\"Could not find index number to parse\");","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"kevinz420"},"content":"        return Integer.parseInt(matcher.group(\"targetIndex\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"kevinz420"},"content":"     * Signals that the user input could not be parsed.","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"kevinz420"},"content":"    public static class ParseException extends Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"kevinz420"},"content":"        ParseException(String message) {","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"kevinz420"},"content":"            super(message);","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":185,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":186,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"J-Y-Yan":3,"kevinz420":145,"MrOPPA1":12,"Remy9926":26}},{"path":"src/main/java/seedu/duke/storagefile/StorageFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.storagefile;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import java.io.File;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.exerciselog.Log;","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"public class StorageFile {","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"    private static File dir;","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"    private static File textFile;","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"    private static FileWriter writeFile;","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"    public StorageFile(String dirName, String textFileName) {","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"        dir \u003d new File(dirName);","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"        textFile \u003d new File(textFileName);","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"    public static StorageFile initializeStorage(String dirName, String textFilePath) {","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"        return new StorageFile(dirName, textFilePath);","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"    public void checkForTextFile(Log exerciseLog) throws IOException {","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"        if (dir.exists() \u0026\u0026 textFile.exists()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"            try {","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"                Scanner s \u003d new Scanner(textFile);","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"                while (s.hasNextLine()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"                    textToExercise(s.nextLine().split(\",\"), exerciseLog);","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"                }","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"                s.close();","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"                System.out.println(e);","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"            dir.mkdir();","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"Remy9926"},"content":"        if (!textFile.exists()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"Remy9926"},"content":"            textFile.createNewFile();","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"Remy9926"},"content":"        writeFile \u003d new FileWriter(textFile.toPath().toString(), true);","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"Remy9926"},"content":"    public static void textToExercise(String[] exerciseDetails, Log exerciseLog) {","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"Remy9926"},"content":"        int month \u003d Integer.parseInt(exerciseDetails[0]);","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"Remy9926"},"content":"        int day \u003d Integer.parseInt(exerciseDetails[1]);","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"Remy9926"},"content":"        String exerciseName \u003d String.join(\" \", exerciseDetails[2].split(\"_\"));","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"Remy9926"},"content":"        int caloriesBurned \u003d Integer.parseInt(exerciseDetails[3]);","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.addExercise(month, day, exerciseName, caloriesBurned);","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"Remy9926"},"content":"    public void writeExerciseToFile(int month, int day, String[] exerciseName, int caloriesBurned)","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"Remy9926"},"content":"            throws IOException {","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Remy9926"},"content":"        String writeToFile \u003d \"\";","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"Remy9926"},"content":"        writeToFile +\u003d Integer.toString(month) + \",\";","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"Remy9926"},"content":"        writeToFile +\u003d Integer.toString(day) + \",\";","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"Remy9926"},"content":"        writeToFile +\u003d String.join(\"_\", exerciseName);","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"Remy9926"},"content":"        writeToFile +\u003d \",\" + Integer.toString(caloriesBurned);","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"Remy9926"},"content":"        writeFile.write(writeToFile + \"\\n\");","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"Remy9926"},"content":"        writeFile.flush();","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"Remy9926"},"content":"    public void removeExerciseFromFile(int month, int day, String[] exerciseName, int caloriesBurned)","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"Remy9926"},"content":"            throws IOException {","lastModifiedDate":"2023-11-04"},{"lineNumber":67,"author":{"gitId":"Remy9926"},"content":"        Scanner readFile \u003d new Scanner(textFile);","lastModifiedDate":"2023-11-04"},{"lineNumber":68,"author":{"gitId":"Remy9926"},"content":"        File tempFile \u003d new File(\"./data/temp.txt\");","lastModifiedDate":"2023-11-04"},{"lineNumber":69,"author":{"gitId":"Remy9926"},"content":"        FileWriter tempWriter \u003d new FileWriter(tempFile.toPath().toString());","lastModifiedDate":"2023-11-04"},{"lineNumber":70,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"Remy9926"},"content":"        String removeLine \u003d \"\";","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"Remy9926"},"content":"        removeLine +\u003d Integer.toString(month) + \",\";","lastModifiedDate":"2023-11-04"},{"lineNumber":73,"author":{"gitId":"Remy9926"},"content":"        removeLine +\u003d Integer.toString(day) + \",\";","lastModifiedDate":"2023-11-04"},{"lineNumber":74,"author":{"gitId":"Remy9926"},"content":"        removeLine +\u003d String.join(\"_\", exerciseName);","lastModifiedDate":"2023-11-04"},{"lineNumber":75,"author":{"gitId":"Remy9926"},"content":"        removeLine +\u003d \",\" + Integer.toString(caloriesBurned);","lastModifiedDate":"2023-11-04"},{"lineNumber":76,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":77,"author":{"gitId":"Remy9926"},"content":"        while (readFile.hasNextLine()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":78,"author":{"gitId":"Remy9926"},"content":"            String line \u003d readFile.nextLine();","lastModifiedDate":"2023-11-04"},{"lineNumber":79,"author":{"gitId":"Remy9926"},"content":"            if (!line.equals(removeLine)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":80,"author":{"gitId":"Remy9926"},"content":"                tempWriter.write(line + \"\\n\");","lastModifiedDate":"2023-11-04"},{"lineNumber":81,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":83,"author":{"gitId":"Remy9926"},"content":"        readFile.close();","lastModifiedDate":"2023-11-04"},{"lineNumber":84,"author":{"gitId":"Remy9926"},"content":"        tempWriter.close();","lastModifiedDate":"2023-11-04"},{"lineNumber":85,"author":{"gitId":"Remy9926"},"content":"        textFile.delete();","lastModifiedDate":"2023-11-04"},{"lineNumber":86,"author":{"gitId":"Remy9926"},"content":"        tempFile.renameTo(textFile);","lastModifiedDate":"2023-11-04"},{"lineNumber":87,"author":{"gitId":"Remy9926"},"content":"        textFile \u003d new File(\"./data/ExerciseLog.txt\");","lastModifiedDate":"2023-11-04"},{"lineNumber":88,"author":{"gitId":"Remy9926"},"content":"        writeFile \u003d new FileWriter(textFile.toPath().toString(), true);","lastModifiedDate":"2023-11-04"},{"lineNumber":89,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":90,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":91,"author":{"gitId":"Remy9926"},"content":"    public void updateExerciseInFile(int month, int day, String[] oldExerciseName, int oldCaloriesBurned,","lastModifiedDate":"2023-11-04"},{"lineNumber":92,"author":{"gitId":"Remy9926"},"content":"                                     String[] newExerciseName, int newCaloriesBurned) throws IOException {","lastModifiedDate":"2023-11-04"},{"lineNumber":93,"author":{"gitId":"Remy9926"},"content":"        Scanner readFile \u003d new Scanner(textFile);","lastModifiedDate":"2023-11-04"},{"lineNumber":94,"author":{"gitId":"Remy9926"},"content":"        File tempFile \u003d new File(\"./data/temp.txt\");","lastModifiedDate":"2023-11-04"},{"lineNumber":95,"author":{"gitId":"Remy9926"},"content":"        FileWriter tempWriter \u003d new FileWriter(tempFile.toPath().toString());","lastModifiedDate":"2023-11-04"},{"lineNumber":96,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":97,"author":{"gitId":"Remy9926"},"content":"        String oldLine \u003d \"\";","lastModifiedDate":"2023-11-04"},{"lineNumber":98,"author":{"gitId":"Remy9926"},"content":"        oldLine +\u003d Integer.toString(month) + \",\";","lastModifiedDate":"2023-11-04"},{"lineNumber":99,"author":{"gitId":"Remy9926"},"content":"        oldLine +\u003d Integer.toString(day) + \",\";","lastModifiedDate":"2023-11-04"},{"lineNumber":100,"author":{"gitId":"Remy9926"},"content":"        oldLine +\u003d String.join(\"_\", oldExerciseName);","lastModifiedDate":"2023-11-04"},{"lineNumber":101,"author":{"gitId":"Remy9926"},"content":"        oldLine +\u003d \",\" + Integer.toString(oldCaloriesBurned);","lastModifiedDate":"2023-11-04"},{"lineNumber":102,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":103,"author":{"gitId":"Remy9926"},"content":"        String newLine \u003d \"\";","lastModifiedDate":"2023-11-04"},{"lineNumber":104,"author":{"gitId":"Remy9926"},"content":"        newLine +\u003d Integer.toString(month) + \",\";","lastModifiedDate":"2023-11-04"},{"lineNumber":105,"author":{"gitId":"Remy9926"},"content":"        newLine +\u003d Integer.toString(day) + \",\";","lastModifiedDate":"2023-11-04"},{"lineNumber":106,"author":{"gitId":"Remy9926"},"content":"        newLine +\u003d String.join(\"_\", newExerciseName);","lastModifiedDate":"2023-11-04"},{"lineNumber":107,"author":{"gitId":"Remy9926"},"content":"        newLine +\u003d \",\" + Integer.toString(newCaloriesBurned);","lastModifiedDate":"2023-11-04"},{"lineNumber":108,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":109,"author":{"gitId":"Remy9926"},"content":"        while (readFile.hasNextLine()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":110,"author":{"gitId":"Remy9926"},"content":"            String line \u003d readFile.nextLine();","lastModifiedDate":"2023-11-04"},{"lineNumber":111,"author":{"gitId":"Remy9926"},"content":"            if (!line.equals(oldLine)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":112,"author":{"gitId":"Remy9926"},"content":"                tempWriter.write(line + \"\\n\");","lastModifiedDate":"2023-11-04"},{"lineNumber":113,"author":{"gitId":"Remy9926"},"content":"            } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":114,"author":{"gitId":"Remy9926"},"content":"                tempWriter.write(newLine + \"\\n\");","lastModifiedDate":"2023-11-04"},{"lineNumber":115,"author":{"gitId":"Remy9926"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":116,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":117,"author":{"gitId":"Remy9926"},"content":"        readFile.close();","lastModifiedDate":"2023-11-04"},{"lineNumber":118,"author":{"gitId":"Remy9926"},"content":"        tempWriter.close();","lastModifiedDate":"2023-11-04"},{"lineNumber":119,"author":{"gitId":"Remy9926"},"content":"        textFile.delete();","lastModifiedDate":"2023-11-04"},{"lineNumber":120,"author":{"gitId":"Remy9926"},"content":"        tempFile.renameTo(textFile);","lastModifiedDate":"2023-11-04"},{"lineNumber":121,"author":{"gitId":"Remy9926"},"content":"        textFile \u003d new File(\"./data/ExerciseLog.txt\");","lastModifiedDate":"2023-11-04"},{"lineNumber":122,"author":{"gitId":"Remy9926"},"content":"        writeFile \u003d new FileWriter(textFile.toPath().toString(), true);","lastModifiedDate":"2023-11-04"},{"lineNumber":123,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":124,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Remy9926":124}},{"path":"src/main/java/seedu/duke/ui/TextUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_GOODBYE;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_INIT_FAILED;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_PROGRAM_LAUNCH_ARGS_USAGE;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_USING_STORAGE_FILE;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_WELCOME;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.data.Goal;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.data.GoalList;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.data.Printable;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":" * Text UI of the application.","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"public class TextUi {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"     * Offset required to convert between 1-indexing and 0-indexing.","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"    public static final int DISPLAYED_INDEX_OFFSET \u003d 1;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"     * A decorative prefix added to the beginning of lines printed by AddressBook","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"    private static final String LINE_PREFIX \u003d \"|| \";","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"     * A platform independent line separator.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"kevinz420"},"content":"     * Format of indexed list item","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"kevinz420"},"content":"    private static final String MESSAGE_INDEXED_LIST_ITEM \u003d \"\\t%1$d. %2$s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"kevinz420"},"content":"     * Format of a comment input line. Comment lines are silently consumed when reading user input.","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"kevinz420"},"content":"    private static final String COMMENT_LINE_FORMAT_REGEX \u003d \"#.*\";","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"kevinz420"},"content":"    private final Scanner in;","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"kevinz420"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"kevinz420"},"content":"    public TextUi() {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"kevinz420"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"kevinz420"},"content":"    public TextUi(InputStream in, PrintStream out) {","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"kevinz420"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"kevinz420"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"kevinz420"},"content":"     * Returns true if the user input line should be ignored.","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"kevinz420"},"content":"     * Input should be ignored if it is parsed as a comment, is only whitespace, or is empty.","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"kevinz420"},"content":"     * @param rawInputLine full raw user input line.","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"kevinz420"},"content":"     * @return true if the entire user input line should be ignored.","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"kevinz420"},"content":"    private boolean shouldIgnore(String rawInputLine) {","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"kevinz420"},"content":"        return rawInputLine.trim().isEmpty() || isCommentLine(rawInputLine);","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"kevinz420"},"content":"     * Returns true if the user input line is a comment line.","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"kevinz420"},"content":"     * @param rawInputLine full raw user input line.","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"kevinz420"},"content":"     * @return true if input line is a comment.","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"kevinz420"},"content":"    private boolean isCommentLine(String rawInputLine) {","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"kevinz420"},"content":"        return rawInputLine.trim().matches(COMMENT_LINE_FORMAT_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"kevinz420"},"content":"     * Prompts for the command and reads the text entered by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"kevinz420"},"content":"     * Ignores empty, pure whitespace, and comment lines.","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"kevinz420"},"content":"     * Echos the command back to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"kevinz420"},"content":"     * @return command (full line) entered by the user","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"kevinz420"},"content":"    public String getUserCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"kevinz420"},"content":"        out.print(LINE_PREFIX + \"Enter command: \");","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"kevinz420"},"content":"        String fullInputLine \u003d in.nextLine();","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"kevinz420"},"content":"        // silently consume all ignored lines","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"kevinz420"},"content":"        while (shouldIgnore(fullInputLine)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"kevinz420"},"content":"            fullInputLine \u003d in.nextLine();","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"kevinz420"},"content":"        showToUser(\"[Command entered:\" + fullInputLine + \"]\");","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"kevinz420"},"content":"        return fullInputLine;","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"kevinz420"},"content":"     * Generates and prints the welcome message upon the start of the application.","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"kevinz420"},"content":"     * @param version         current version of the application.","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"kevinz420"},"content":"     * @param storageFilePath path to the storage file being used.","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"kevinz420"},"content":"    public void showWelcomeMessage(String version, String storageFilePath) {","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"kevinz420"},"content":"        String storageFileInfo \u003d String.format(MESSAGE_USING_STORAGE_FILE, storageFilePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"kevinz420"},"content":"        showToUser(","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"kevinz420"},"content":"                DIVIDER,","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"kevinz420"},"content":"                DIVIDER,","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"kevinz420"},"content":"                MESSAGE_WELCOME,","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"kevinz420"},"content":"                version,","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"kevinz420"},"content":"                MESSAGE_PROGRAM_LAUNCH_ARGS_USAGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"kevinz420"},"content":"                storageFileInfo,","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"kevinz420"},"content":"                DIVIDER);","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"kevinz420"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"kevinz420"},"content":"        showToUser(MESSAGE_GOODBYE, DIVIDER, DIVIDER);","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"kevinz420"},"content":"    public void showInitFailedMessage() {","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"kevinz420"},"content":"        showToUser(MESSAGE_INIT_FAILED, DIVIDER, DIVIDER);","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"kevinz420"},"content":"     * Shows message(s) to the user","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"Remy9926"},"content":"     * @param message","lastModifiedDate":"2023-10-20"},{"lineNumber":136,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"kevinz420"},"content":"    public void showToUser(String... message) {","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"kevinz420"},"content":"        for (String m : message) {","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"kevinz420"},"content":"            out.println(LINE_PREFIX + m.replace(\"\\n\", LS + LINE_PREFIX));","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"kevinz420"},"content":"     * Shows the result of a command execution to the user. Includes additional formatting to demarcate different","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"kevinz420"},"content":"     * command execution segments.","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"Remy9926"},"content":"     * @param result","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"kevinz420"},"content":"    public void showResultToUser(CommandResult result) {","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"kevinz420"},"content":"        final Optional\u003cList\u003c? extends Printable\u003e\u003e resultItems \u003d result.getRelevantItems();","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"kevinz420"},"content":"        if (resultItems.isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"kevinz420"},"content":"            showItemsListView(resultItems.get());","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"kevinz420"},"content":"        showToUser(result.feedbackToUser, DIVIDER);","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"kevinz420"},"content":"     * Shows a list of persons to the user, formatted as an indexed list.","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"kevinz420"},"content":"     * Private contact details are hidden.","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"kevinz420"},"content":"    private void showItemsListView(List\u003c? extends Printable\u003e items) {","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"kevinz420"},"content":"        final List\u003cString\u003e formattedItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"kevinz420"},"content":"        for (Printable person : items) {","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"kevinz420"},"content":"            formattedItems.add(person.getAsText());","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"kevinz420"},"content":"        showToUserAsIndexedList(formattedItems);","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"kevinz420"},"content":"     * Shows a list of strings to the user, formatted as an indexed list.","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"kevinz420"},"content":"    private void showToUserAsIndexedList(List\u003cString\u003e list) {","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"kevinz420"},"content":"        showToUser(getIndexedListForViewing(list));","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"kevinz420"},"content":"     * Formats a list of strings as a viewable indexed list.","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"kevinz420"},"content":"    private static String getIndexedListForViewing(List\u003cString\u003e listItems) {","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"kevinz420"},"content":"        final StringBuilder formatted \u003d new StringBuilder();","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"kevinz420"},"content":"        int displayIndex \u003d 0 + DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"kevinz420"},"content":"        for (String listItem : listItems) {","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"kevinz420"},"content":"            formatted.append(getIndexedListItem(displayIndex, listItem)).append(\"\\n\");","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"kevinz420"},"content":"            displayIndex++;","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":185,"author":{"gitId":"kevinz420"},"content":"        return formatted.toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":186,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":187,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":188,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":189,"author":{"gitId":"kevinz420"},"content":"     * Formats a string as a viewable indexed list item.","lastModifiedDate":"2023-10-15"},{"lineNumber":190,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":191,"author":{"gitId":"kevinz420"},"content":"     * @param visibleIndex visible index for this listing","lastModifiedDate":"2023-10-15"},{"lineNumber":192,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":193,"author":{"gitId":"kevinz420"},"content":"    private static String getIndexedListItem(int visibleIndex, String listItem) {","lastModifiedDate":"2023-10-15"},{"lineNumber":194,"author":{"gitId":"kevinz420"},"content":"        return String.format(MESSAGE_INDEXED_LIST_ITEM, visibleIndex, listItem);","lastModifiedDate":"2023-10-15"},{"lineNumber":195,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":196,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":197,"author":{"gitId":"J-Y-Yan"},"content":"    public void printNumberofGoal(int goalCount) {","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"You still have \" + goalCount + \" goals to accomplish. Add oil!\" );","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":200,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":201,"author":{"gitId":"J-Y-Yan"},"content":"    public void printDeleteGoal(Goal deletedGoal) {","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"Good. I have removed this goal: \" + deletedGoal);","lastModifiedDate":"2023-10-19"},{"lineNumber":203,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"Remember not to give up unaccomplished goal! \");","lastModifiedDate":"2023-10-19"},{"lineNumber":204,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":205,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":206,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"J-Y-Yan"},"content":"     * This method is used to implement Goal commend execution, when adding a new goal","lastModifiedDate":"2023-10-19"},{"lineNumber":208,"author":{"gitId":"J-Y-Yan"},"content":"     * @param goals the goals list which is under operation","lastModifiedDate":"2023-10-19"},{"lineNumber":209,"author":{"gitId":"J-Y-Yan"},"content":"     * @return string contains information of generating a new goal successfully","lastModifiedDate":"2023-10-19"},{"lineNumber":210,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"J-Y-Yan"},"content":"    public static String addGoalSuccessMessage(GoalList goals) {","lastModifiedDate":"2023-10-19"},{"lineNumber":212,"author":{"gitId":"J-Y-Yan"},"content":"        int currentNoOfGoal \u003d goals.getGoalCount();","lastModifiedDate":"2023-10-19"},{"lineNumber":213,"author":{"gitId":"J-Y-Yan"},"content":"        Goal newlyAddedGoal \u003d goals.getGoal(currentNoOfGoal - 1);","lastModifiedDate":"2023-10-19"},{"lineNumber":214,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":215,"author":{"gitId":"J-Y-Yan"},"content":"        return \"Nice! I have added the following goal to your goal lists: \\n\\t\" + newlyAddedGoal;","lastModifiedDate":"2023-10-19"},{"lineNumber":216,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":217,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":218,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"J-Y-Yan":23,"kevinz420":193,"Remy9926":2}},{"path":"src/test/java/seedu/duke/exerciselog/DayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.exerciselog;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"public class DayTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"        DayTest test \u003d new DayTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"        test.containsExercisesTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"        test.getExerciseTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"        test.toStringTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"    public void containsExercisesTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"        Day day \u003d new Day();","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"        assert !day.containsExercises();","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"        day.addExercise(\"Swimming\", 0);","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"        assert day.containsExercises();","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"        day.removeExercise(\"Swimming\", 0);","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"        assert !day.containsExercises();","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"    public void getExerciseTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"        Day day \u003d new Day();","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"        day.addExercise(\"Basketball\", 197);","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"        assert day.getExercise(1).equals(new Exercise(\"Basketball\", 197));","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"        assert day.getNumberOfExercises() \u003d\u003d 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"        Day day \u003d new Day();","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"        assert day.toString().equals(\"\\tNO EXCERCISES FOR THIS DAY!\\n\");","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"        day.addExercise(\"chicken\", 28);","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"        assert day.toString().equals(\"\\tExercise: chicken, Calories Burned: 28 Calories\\n\");","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Remy9926":33}},{"path":"src/test/java/seedu/duke/exerciselog/ExerciseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.exerciselog;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"public class ExerciseTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"        ExerciseTest test \u003d new ExerciseTest();","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"        test.initializeExerciseTest();","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"        test.initializeExerciseTest2();","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"        test.testEqualsMethod();","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"        test.testToStringMethod();","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"        test.setNewExerciseNameTest();","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"        test.setNewCaloriesBurnedTest();","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"        assert true;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"    public void initializeExerciseTest() {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"        Exercise testExercise \u003d new Exercise(\"Running\", 280);","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"        assert testExercise.getExerciseName().equals(\"Running\");","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"        assert testExercise.getCaloriesBurned() \u003d\u003d 280;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"    public void initializeExerciseTest2() {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"        Exercise testExercise \u003d new Exercise(\"Running\", 280);","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"        assert !testExercise.getExerciseName().equals(\"running\");","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"        assert !(testExercise.getCaloriesBurned() \u003d\u003d 2800);","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"    public void testEqualsMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"        Exercise testExercise \u003d new Exercise(\"Walking\", 100);","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"        assert testExercise.equals(new Exercise(\"Walking\", 100));","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"        assert !(testExercise.equals(new Exercise(\"Swimming\", 100)));","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"    public void testToStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"        Exercise testExercise \u003d new Exercise(\"Golfing\", 76);","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"        assert testExercise.toString().equals(\"Exercise: Golfing, Calories Burned: 76 Calories\\n\");","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"    public void setNewExerciseNameTest() {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Remy9926"},"content":"        Exercise testExercise \u003d new Exercise(\"Floorball\", 143);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Remy9926"},"content":"        testExercise.setExerciseName(\"hockey\");","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Remy9926"},"content":"        assert testExercise.getExerciseName().equals(\"hockey\");","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Remy9926"},"content":"    public void setNewCaloriesBurnedTest() {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Remy9926"},"content":"        Exercise testExercise \u003d new Exercise(\"Football\", 309);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Remy9926"},"content":"        testExercise.setCaloriesBurned(229);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Remy9926"},"content":"        assert testExercise.getCaloriesBurned() \u003d\u003d 229;","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Remy9926":49}},{"path":"src/test/java/seedu/duke/exerciselog/LogTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.exerciselog;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"public class LogTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"        LogTest test \u003d new LogTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"        test.getNumberOfExercisesTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"        test.addAndRemoveExerciseTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"    public void getNumberOfExercisesTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"        Log log \u003d new Log();","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"        assert log.getNumberOfExercises() \u003d\u003d 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"        assert log.getNumberOfExercisesForMonth(1) \u003d\u003d 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"        assert log.getNumberOfExercisesForDay(1, 21) \u003d\u003d 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"    public void addAndRemoveExerciseTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"        Log log \u003d new Log();","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"        log.addExercise(6, 7, \"Exercise\", 8999999);","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"        log.addExercise(8, 24, \"Exercise\", 112);","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"        assert log.getNumberOfExercises() \u003d\u003d 2;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"        log.removeExercise(6, 7, \"Exercise\", 8999999);","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"        assert log.getNumberOfExercises() \u003d\u003d 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"        log.removeExercise(8, 24, \"Exercise\", 112);","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"        assert log.getNumberOfExercises() \u003d\u003d 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Remy9926":27}},{"path":"src/test/java/seedu/duke/exerciselog/MonthTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.exerciselog;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"public class MonthTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"        MonthTest test \u003d new MonthTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"        test.createMonthTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"        test.addExerciseTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"        test.removeExerciseTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"    public void createMonthTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"        Month month \u003d new Month(31, \"JAN\");","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"        assert month.getName().equals(\"JAN\");","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"        assert month.getNumberOfDays() \u003d\u003d 31;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"    public void addExerciseTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"        Month month \u003d new Month(28, \"FEB\");","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"        month.addExercise(3, \"Volleyball\", 79);","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"        assert month.getNumberOfExercisesForDay(3) \u003d\u003d 1;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"        month.addExercise(14, \"Running\", 121);","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"        assert month.getNumberOfExercisesForDay(14) \u003d\u003d 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"        assert month.getTotalNumberOfExercises() \u003d\u003d 2;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"    public void removeExerciseTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"        Month month \u003d new Month(28, \"FEB\");","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"        month.addExercise(3, \"Volleyball\", 79);","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"        month.addExercise(14, \"Running\", 121);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"        month.removeExercise(3, \"Volleyball\", 79);","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"        assert month.getNumberOfExercisesForDay(3) \u003d\u003d 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"        assert month.getTotalNumberOfExercises() \u003d\u003d 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Remy9926":34}},{"path":"src/test/java/seedu/duke/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.IncorrectCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"public class ParserTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"    private Parser parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"    public void parse_emptyInput_returnsIncorrect() throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"        final String[] emptyInputs \u003d { \"\", \"  \", \"\\n  \\n\" };","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"        final String resultMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"        parseAndAssertIncorrectWithMessage(resultMessage, emptyInputs);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"    public void parse_unknownCommandWord_returnsHelp() throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"        final String input \u003d \"unknowncommandword arguments arguments\";","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"        parseAndAssertCommandType(input, HelpCommand.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"    /*","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"     * Tests for 0-argument commands","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"    public void parse_helpCommand_parsedCorrectly() throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"kevinz420"},"content":"        final String input \u003d \"help\";","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"kevinz420"},"content":"        parseAndAssertCommandType(input, HelpCommand.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"kevinz420"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"    public void parse_exitCommand_parsedCorrectly() throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"kevinz420"},"content":"        final String input \u003d \"exit\";","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"kevinz420"},"content":"        parseAndAssertCommandType(input, ExitCommand.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"kevinz420"},"content":"    /*","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"MrOPPA1"},"content":"     * Utility methods","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"MrOPPA1"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"MrOPPA1"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"MrOPPA1"},"content":"     * Asserts that parsing the given inputs will return IncorrectCommand with the","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"MrOPPA1"},"content":"     * given feedback message.","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"MrOPPA1"},"content":"     * ","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"MrOPPA1"},"content":"     * @throws Exception","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"MrOPPA1"},"content":"    private void parseAndAssertIncorrectWithMessage(String feedbackMessage, String... inputs) throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"kevinz420"},"content":"        for (String input : inputs) {","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"kevinz420"},"content":"            final IncorrectCommand result \u003d parseAndAssertCommandType(input, IncorrectCommand.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"kevinz420"},"content":"            assertEquals(result.feedbackToUser, feedbackMessage);","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"kevinz420"},"content":"     * Parses input and asserts the class/type of the returned command object.","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"kevinz420"},"content":"     * @param input                to be parsed","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"kevinz420"},"content":"     * @param expectedCommandClass expected class of returned command","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"kevinz420"},"content":"     * @return the parsed command object","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"MrOPPA1"},"content":"     * @throws Exception","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"MrOPPA1"},"content":"    private \u003cT extends Command\u003e T parseAndAssertCommandType(String input, Class\u003cT\u003e expectedCommandClass)","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"MrOPPA1"},"content":"            throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"kevinz420"},"content":"        final Command result \u003d parser.parseCommand(input);","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"kevinz420"},"content":"        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"kevinz420"},"content":"        return (T) result;","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":69,"MrOPPA1":17}},{"path":"text-ui-test/UploadCommand.cmd","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"rem customize the tag name and message here","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"set TAG_NAME\u003dfengguangyao","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"set MESSAGE\u003d\"Personal Job\"","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"rem create a branch","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"git branch %TAG_NAME%","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"git switch %TAG_NAME%","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"rem commit all changes","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"git add .","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"git commit -m %MESSAGE%","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"git push origin %TAG_NAME%","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"MrOPPA1":11}},{"path":"tp/.idea/checkstyle-idea.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"CheckStyle-IDEA\" serialisationVersion\u003d\"2\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"    \u003ccheckstyleVersion\u003e10.12.3\u003c/checkstyleVersion\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"    \u003cscanScope\u003eJavaOnly\u003c/scanScope\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"    \u003ccopyLibs\u003etrue\u003c/copyLibs\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"thirdPartyClasspath\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"activeLocationIds\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"locations\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"      \u003clist\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"        \u003cConfigurationLocation id\u003d\"bundled-sun-checks\" type\u003d\"BUNDLED\" scope\u003d\"All\" description\u003d\"Sun Checks\"\u003e(bundled)\u003c/ConfigurationLocation\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"        \u003cConfigurationLocation id\u003d\"bundled-google-checks\" type\u003d\"BUNDLED\" scope\u003d\"All\" description\u003d\"Google Checks\"\u003e(bundled)\u003c/ConfigurationLocation\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"      \u003c/list\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"    \u003c/option\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"\u003c/project\u003e","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"J-Y-Yan":16}},{"path":"tp/.idea/vcs.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"VcsDirectoryMappings\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"    \u003cmapping directory\u003d\"$PROJECT_DIR$/..\" vcs\u003d\"Git\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"\u003c/project\u003e","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"J-Y-Yan":6}},{"path":"tp/.idea/workspace.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"AutoImportSettings\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"autoReloadType\" value\u003d\"SELECTIVE\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"ChangeListManager\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"    \u003clist default\u003d\"true\" id\u003d\"46305296-6e41-460c-93f6-a188eb9d1e4d\" name\u003d\"Changes\" comment\u003d\"\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"SHOW_DIALOG\" value\u003d\"false\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"HIGHLIGHT_CONFLICTS\" value\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value\u003d\"false\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"LAST_RESOLUTION\" value\u003d\"IGNORE\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"ExternalProjectsData\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"    \u003cprojectState path\u003d\"$PROJECT_DIR$\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"      \u003cProjectState /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"    \u003c/projectState\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"ExternalProjectsManager\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"    \u003csystem id\u003d\"GRADLE\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"      \u003cstate\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"        \u003cprojects_view\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"          \u003ctree_state\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"            \u003cexpand /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"            \u003cselect /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"          \u003c/tree_state\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"        \u003c/projects_view\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"      \u003c/state\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"    \u003c/system\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"FileTemplateManagerImpl\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"RECENT_TEMPLATES\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"      \u003clist\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"        \u003coption value\u003d\"Class\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"      \u003c/list\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"    \u003c/option\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"Git.Settings\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"RECENT_GIT_ROOT_PATH\" value\u003d\"$PROJECT_DIR$/..\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"MarkdownSettingsMigration\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"stateVersion\" value\u003d\"1\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"ProjectColorInfo\"\u003e{","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"J-Y-Yan"},"content":"  \u0026quot;customColor\u0026quot;: \u0026quot;\u0026quot;,","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"J-Y-Yan"},"content":"  \u0026quot;associatedIndex\u0026quot;: 3","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"J-Y-Yan"},"content":"}\u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"ProjectId\" id\u003d\"2Wv9jKq5KpsiP8JQSMJuBqpmuB1\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"ProjectLevelVcsManager\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"J-Y-Yan"},"content":"    \u003cConfirmationsSetting value\u003d\"1\" id\u003d\"Add\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"ProjectViewState\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"hideEmptyMiddlePackages\" value\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"showLibraryContents\" value\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"PropertiesComponent\"\u003e\u003c![CDATA[{","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"J-Y-Yan"},"content":"  \"keyToString\": {","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"J-Y-Yan"},"content":"    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"J-Y-Yan"},"content":"    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"J-Y-Yan"},"content":"    \"WebServerToolWindowFactoryState\": \"false\",","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"J-Y-Yan"},"content":"    \"git-widget-placeholder\": \"goal\",","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"J-Y-Yan"},"content":"    \"last_opened_file_path\": \"D:/Programming/CS2113/Team Project\",","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"J-Y-Yan"},"content":"    \"node.js.detected.package.eslint\": \"true\",","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"J-Y-Yan"},"content":"    \"node.js.detected.package.tslint\": \"true\",","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"J-Y-Yan"},"content":"    \"node.js.selected.package.eslint\": \"(autodetect)\",","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"J-Y-Yan"},"content":"    \"node.js.selected.package.tslint\": \"(autodetect)\",","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"J-Y-Yan"},"content":"    \"nodejs_package_manager_path\": \"npm\",","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"J-Y-Yan"},"content":"    \"vue.rearranger.settings.migration\": \"true\"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"J-Y-Yan"},"content":"  }","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"J-Y-Yan"},"content":"}]]\u003e\u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"SpellCheckerSettings\" RuntimeDictionaries\u003d\"0\" Folders\u003d\"0\" CustomDictionaries\u003d\"0\" DefaultDictionary\u003d\"application-level\" UseSingleDictionary\u003d\"true\" transferred\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"TaskManager\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"J-Y-Yan"},"content":"    \u003ctask active\u003d\"true\" id\u003d\"Default\" summary\u003d\"Default task\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"J-Y-Yan"},"content":"      \u003cchangelist id\u003d\"46305296-6e41-460c-93f6-a188eb9d1e4d\" name\u003d\"Changes\" comment\u003d\"\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"J-Y-Yan"},"content":"      \u003ccreated\u003e1697602324590\u003c/created\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"J-Y-Yan"},"content":"      \u003coption name\u003d\"number\" value\u003d\"Default\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"J-Y-Yan"},"content":"      \u003coption name\u003d\"presentableId\" value\u003d\"Default\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"J-Y-Yan"},"content":"      \u003cupdated\u003e1697602324590\u003c/updated\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"J-Y-Yan"},"content":"      \u003cworkItem from\u003d\"1697602329602\" duration\u003d\"41000\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"J-Y-Yan"},"content":"      \u003cworkItem from\u003d\"1697602381500\" duration\u003d\"17642000\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"J-Y-Yan"},"content":"      \u003cworkItem from\u003d\"1697648699355\" duration\u003d\"26000\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"J-Y-Yan"},"content":"    \u003c/task\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"J-Y-Yan"},"content":"    \u003cservers /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"TypeScriptGeneratedFilesManager\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"version\" value\u003d\"3\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"J-Y-Yan"},"content":"\u003c/project\u003e","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"J-Y-Yan":87}}]
