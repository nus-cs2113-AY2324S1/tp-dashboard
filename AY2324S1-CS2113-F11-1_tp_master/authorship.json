[{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |    Name     |             Github Profile             | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"--------|:-----------:|:--------------------------------------:|:---------:","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Kevin Zhang | [Github](https://github.com/kevinz420) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"![](https://picsum.photos/100) |   Ethan Huang   |     [Github](https://github.com/remy9926)      | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Ron John   |     [Github](https://github.com/)      | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  John Roe   |     [Github](https://github.com/)      | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Don Roe   |     [Github](https://github.com/)      | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"kevinz420":2,"Remy9926":1,"-":6}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"{Give product intro here}","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"test","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"MrOPPA1":2,"-":8}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"//import seedu.addressbook.storage.StorageFile;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"//import seedu.addressbook.storage.StorageFile.InvalidStorageFilePathException;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"//import seedu.addressbook.storage.StorageFile.StorageOperationException;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.ui.TextUi;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":" * Entry point of the Address Book application.","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"     * Version info of the program.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"    public static final String VERSION \u003d \"AddressBook Level 2 - Version 1.0\";","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"    private TextUi ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"    //    private StorageFile storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"    public static void main(String... launchArgs) {","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"        new Duke().run(launchArgs);","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"     * Runs the program until termination.","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"    public void run(String[] launchArgs) {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"kevinz420"},"content":"        start(launchArgs);","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"        runCommandLoopUntilExitCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"        exit();","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"     * Sets up the required objects, loads up the data from the storage file, and prints the welcome message.","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"kevinz420"},"content":"     * @param launchArgs arguments supplied by the user at program launch","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"kevinz420"},"content":"    private void start(String[] launchArgs) {","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"kevinz420"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"kevinz420"},"content":"            this.ui \u003d new TextUi();","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"kevinz420"},"content":"            // this.storage \u003d initializeStorage(launchArgs);","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"kevinz420"},"content":"            ui.showWelcomeMessage(VERSION, \"storage.getPath()\");","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"kevinz420"},"content":"        } catch (Exception e) { // TODO: change to specific storage exceptions later","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"kevinz420"},"content":"            ui.showInitFailedMessage();","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"kevinz420"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"kevinz420"},"content":"     * Prints the Goodbye message and exits.","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"kevinz420"},"content":"    private void exit() {","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"kevinz420"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"kevinz420"},"content":"        System.exit(0);","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"kevinz420"},"content":"     * Reads the user command and executes it, until the user issues the exit command.","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"kevinz420"},"content":"    private void runCommandLoopUntilExitCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"kevinz420"},"content":"        Command command;","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"kevinz420"},"content":"        do {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"kevinz420"},"content":"            String userCommandText \u003d ui.getUserCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"kevinz420"},"content":"            command \u003d new Parser().parseCommand(userCommandText);","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"kevinz420"},"content":"            CommandResult result \u003d executeCommand(command);","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"kevinz420"},"content":"            ui.showResultToUser(result);","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"kevinz420"},"content":"        } while (!ExitCommand.isExit(command));","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"kevinz420"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"kevinz420"},"content":"     * @param command user command","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"kevinz420"},"content":"     * @return result of the command","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"kevinz420"},"content":"    private CommandResult executeCommand(Command command) {","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"kevinz420"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"kevinz420"},"content":"            CommandResult result \u003d command.execute();","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"kevinz420"},"content":"            // storage.save(addressBook);","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"kevinz420"},"content":"            return result;","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"kevinz420"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"kevinz420"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"kevinz420"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"kevinz420"},"content":"    //    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"kevinz420"},"content":"    //     * Creates the StorageFile object based on the user specified path (if any) or the default storage path.","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"kevinz420"},"content":"    //     * @param launchArgs arguments supplied by the user at program launch","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"kevinz420"},"content":"    //     * @throws InvalidStorageFilePathException if the target file path is incorrect.","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"kevinz420"},"content":"    //     */","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"kevinz420"},"content":"    //    private StorageFile initializeStorage(String[] launchArgs) throws InvalidStorageFilePathException {","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"kevinz420"},"content":"    //        boolean isStorageFileSpecifiedByUser \u003d launchArgs.length \u003e 0;","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"kevinz420"},"content":"    //        return isStorageFileSpecifiedByUser ? new StorageFile(launchArgs[0]) : new StorageFile();","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"kevinz420"},"content":"    //    }","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kevinz420":88,"Remy9926":6,"-":11}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":" * Represents an executable command.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"public class Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"    public Command() {","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"        throw new UnsupportedOperationException(\"This method is to be implemented by child classes\");","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":16}},{"path":"src/main/java/seedu/duke/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.data.Printable;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"public class CommandResult {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"     * The feedback message to be shown to the user. Contains a description of the execution result","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"     * The list of objects that was produced by the command","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"    private final List\u003c? extends Printable\u003e relevantItems;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"        relevantItems \u003d null;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"    public CommandResult(String feedbackToUser, List\u003c? extends Printable\u003e relevantItems) {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"        this.relevantItems \u003d relevantItems;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"     * Returns a list of objects relevant to the command result, if any.","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"    public Optional\u003cList\u003c? extends Printable\u003e\u003e getRelevantItems() {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"        return Optional.ofNullable(relevantItems);","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":40}},{"path":"src/main/java/seedu/duke/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":" * Terminates the program.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the program.\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_EXIT_ACKNOWEDGEMENT \u003d \"Exiting FITNUS as requested ...\";","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWEDGEMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"        return command instanceof ExitCommand; // instanceof returns false if it is null","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":22}},{"path":"src/main/java/seedu/duke/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" * Shows help instructions.","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"                HelpCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"        //                        + \"\\n\" + DeleteCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"        //                        + \"\\n\" + ClearCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"        //                        + \"\\n\" + FindCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"        //                        + \"\\n\" + ListCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"        //                        + \"\\n\" + ViewCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"        //                        + \"\\n\" + ViewAllCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":26}},{"path":"src/main/java/seedu/duke/commands/IncorrectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" * Represents an incorrect command. Upon execution, produces some feedback to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"    public IncorrectCommand(String feedbackToUser) {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"        return new CommandResult(feedbackToUser);","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":20}},{"path":"src/main/java/seedu/duke/common/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.common;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":" * Container for user visible messages.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"public class Messages {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Good bye!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_INIT_FAILED \u003d \"Failed to initialise address book application. Exiting...\";","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_PROGRAM_LAUNCH_ARGS_USAGE \u003d \"Launch command format: \"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"            + \"java seedu.duke.Duke [STORAGE_FILE_PATH]\";","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Welcome to your FITNUS journey!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_USING_STORAGE_FILE \u003d \"Using storage file : %1$s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":14}},{"path":"src/main/java/seedu/duke/data/Printable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.data;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"public interface Printable {","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"    String getAsText();","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":5}},{"path":"src/main/java/seedu/duke/data/exception/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.data.exception;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"        super(message);","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":13}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.IncorrectCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.data.exception.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":" * Parses user input.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"public class Parser {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"    public static final Pattern PERSON_INDEX_ARGS_FORMAT \u003d Pattern.compile(\"(?\u003ctargetIndex\u003e.+)\");","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"    public static final Pattern KEYWORDS_ARGS_FORMAT \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"            Pattern.compile(\"(?\u003ckeywords\u003e\\\\S+(?:\\\\s+\\\\S+)*)\"); // one or more keywords separated by whitespace","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"kevinz420"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"kevinz420"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"    public Command parseCommand(String userInput) {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"kevinz420"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"kevinz420"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"kevinz420"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"kevinz420"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"kevinz420"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"kevinz420"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"kevinz420"},"content":"        //        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"kevinz420"},"content":"        //            return prepareAdd(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"kevinz420"},"content":"        //        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"kevinz420"},"content":"        //            return prepareDelete(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"kevinz420"},"content":"        //        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"kevinz420"},"content":"        //            return new ClearCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"kevinz420"},"content":"        //        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"kevinz420"},"content":"        //            return prepareFind(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"kevinz420"},"content":"        //        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"kevinz420"},"content":"        //            return new ListCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"kevinz420"},"content":"        //        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"kevinz420"},"content":"        //            return prepareView(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"kevinz420"},"content":"        //        case ViewAllCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"kevinz420"},"content":"        //            return prepareViewAll(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"kevinz420"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"kevinz420"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"kevinz420"},"content":"        case HelpCommand.COMMAND_WORD: // Fallthrough","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"kevinz420"},"content":"        default:","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"kevinz420"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"kevinz420"},"content":"    //    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"kevinz420"},"content":"    //     * Parses arguments in the context of the add person command.","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"kevinz420"},"content":"    //     *","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"kevinz420"},"content":"    //     * @param args full command args string","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"kevinz420"},"content":"    //     * @return the prepared command","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"kevinz420"},"content":"    //     */","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"kevinz420"},"content":"    //    private Command prepareAdd(String args) {","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"kevinz420"},"content":"    //        final Matcher matcher \u003d PERSON_DATA_ARGS_FORMAT.matcher(args.trim());","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"kevinz420"},"content":"    //        // Validate arg string format","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"kevinz420"},"content":"    //        if (!matcher.matches()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"kevinz420"},"content":"    //            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"kevinz420"},"content":"    //        }","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"kevinz420"},"content":"    //        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"kevinz420"},"content":"    //            return new AddCommand(","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"kevinz420"},"content":"    //                    matcher.group(\"name\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"kevinz420"},"content":"    //","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"kevinz420"},"content":"    //                    matcher.group(\"phone\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"kevinz420"},"content":"    //                    isPrivatePrefixPresent(matcher.group(\"isPhonePrivate\")),","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"kevinz420"},"content":"    //","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"kevinz420"},"content":"    //                    matcher.group(\"email\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"kevinz420"},"content":"    //                    isPrivatePrefixPresent(matcher.group(\"isEmailPrivate\")),","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"kevinz420"},"content":"    //","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"kevinz420"},"content":"    //                    matcher.group(\"address\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"kevinz420"},"content":"    //                    isPrivatePrefixPresent(matcher.group(\"isAddressPrivate\")),","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"kevinz420"},"content":"    //","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"kevinz420"},"content":"    //                    getTagsFromArgs(matcher.group(\"tagArguments\"))","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"kevinz420"},"content":"    //            );","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"kevinz420"},"content":"    //        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"kevinz420"},"content":"    //            return new IncorrectCommand(ive.getMessage());","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"kevinz420"},"content":"    //        }","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"kevinz420"},"content":"    //    }","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"kevinz420"},"content":"     * Returns true if the private prefix is present for a contact detail in the add command\u0027s arguments string.","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"kevinz420"},"content":"    private static boolean isPrivatePrefixPresent(String matchedPrefix) {","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"kevinz420"},"content":"        return matchedPrefix.equals(\"p\");","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"kevinz420"},"content":"     * Extracts the new person\u0027s tags from the add command\u0027s tag arguments string.","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"kevinz420"},"content":"     * Merges duplicate tag strings.","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"kevinz420"},"content":"    private static Set\u003cString\u003e getTagsFromArgs(String tagArguments) throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"kevinz420"},"content":"        // no tags","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"kevinz420"},"content":"        if (tagArguments.isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"kevinz420"},"content":"            return Collections.emptySet();","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"kevinz420"},"content":"        // replace first delimiter prefix, then split","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"kevinz420"},"content":"        final Collection\u003cString\u003e tagStrings \u003d Arrays.asList(tagArguments.replaceFirst(\" t/\", \"\").split(\" t/\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"kevinz420"},"content":"        return new HashSet\u003c\u003e(tagStrings);","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"kevinz420"},"content":"     * Parses the given arguments string as a single index number.","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"kevinz420"},"content":"     * @param args arguments string to parse as index number","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"kevinz420"},"content":"     * @return the parsed index number","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"kevinz420"},"content":"     * @throws ParseException        if no region of the args string could be found for the index","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"kevinz420"},"content":"     * @throws NumberFormatException the args string region is not a valid number","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"kevinz420"},"content":"    private int parseArgsAsDisplayedIndex(String args) throws ParseException, NumberFormatException {","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"kevinz420"},"content":"        final Matcher matcher \u003d PERSON_INDEX_ARGS_FORMAT.matcher(args.trim());","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"kevinz420"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"kevinz420"},"content":"            throw new ParseException(\"Could not find index number to parse\");","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"kevinz420"},"content":"        return Integer.parseInt(matcher.group(\"targetIndex\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"kevinz420"},"content":"     * Signals that the user input could not be parsed.","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"kevinz420"},"content":"    public static class ParseException extends Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"kevinz420"},"content":"        ParseException(String message) {","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"kevinz420"},"content":"            super(message);","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":160}},{"path":"src/main/java/seedu/duke/ui/TextUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_GOODBYE;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_INIT_FAILED;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_PROGRAM_LAUNCH_ARGS_USAGE;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_USING_STORAGE_FILE;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_WELCOME;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.data.Printable;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":" * Text UI of the application.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"public class TextUi {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"     * Offset required to convert between 1-indexing and 0-indexing.","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"    public static final int DISPLAYED_INDEX_OFFSET \u003d 1;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"     * A decorative prefix added to the beginning of lines printed by AddressBook","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"    private static final String LINE_PREFIX \u003d \"|| \";","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"kevinz420"},"content":"     * A platform independent line separator.","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"kevinz420"},"content":"     * Format of indexed list item","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"kevinz420"},"content":"    private static final String MESSAGE_INDEXED_LIST_ITEM \u003d \"\\t%1$d. %2$s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"kevinz420"},"content":"     * Format of a comment input line. Comment lines are silently consumed when reading user input.","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"kevinz420"},"content":"    private static final String COMMENT_LINE_FORMAT_REGEX \u003d \"#.*\";","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"kevinz420"},"content":"    private final Scanner in;","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"kevinz420"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"kevinz420"},"content":"    public TextUi() {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"kevinz420"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"kevinz420"},"content":"    public TextUi(InputStream in, PrintStream out) {","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"kevinz420"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"kevinz420"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"kevinz420"},"content":"     * Returns true if the user input line should be ignored.","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"kevinz420"},"content":"     * Input should be ignored if it is parsed as a comment, is only whitespace, or is empty.","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"kevinz420"},"content":"     * @param rawInputLine full raw user input line.","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"kevinz420"},"content":"     * @return true if the entire user input line should be ignored.","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"kevinz420"},"content":"    private boolean shouldIgnore(String rawInputLine) {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"kevinz420"},"content":"        return rawInputLine.trim().isEmpty() || isCommentLine(rawInputLine);","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"kevinz420"},"content":"     * Returns true if the user input line is a comment line.","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"kevinz420"},"content":"     * @param rawInputLine full raw user input line.","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"kevinz420"},"content":"     * @return true if input line is a comment.","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"kevinz420"},"content":"    private boolean isCommentLine(String rawInputLine) {","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"kevinz420"},"content":"        return rawInputLine.trim().matches(COMMENT_LINE_FORMAT_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"kevinz420"},"content":"     * Prompts for the command and reads the text entered by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"kevinz420"},"content":"     * Ignores empty, pure whitespace, and comment lines.","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"kevinz420"},"content":"     * Echos the command back to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"kevinz420"},"content":"     * @return command (full line) entered by the user","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"kevinz420"},"content":"    public String getUserCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"kevinz420"},"content":"        out.print(LINE_PREFIX + \"Enter command: \");","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"kevinz420"},"content":"        String fullInputLine \u003d in.nextLine();","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"kevinz420"},"content":"        // silently consume all ignored lines","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"kevinz420"},"content":"        while (shouldIgnore(fullInputLine)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"kevinz420"},"content":"            fullInputLine \u003d in.nextLine();","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"kevinz420"},"content":"        showToUser(\"[Command entered:\" + fullInputLine + \"]\");","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"kevinz420"},"content":"        return fullInputLine;","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"kevinz420"},"content":"     * Generates and prints the welcome message upon the start of the application.","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"kevinz420"},"content":"     * @param version         current version of the application.","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"kevinz420"},"content":"     * @param storageFilePath path to the storage file being used.","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"kevinz420"},"content":"    public void showWelcomeMessage(String version, String storageFilePath) {","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"kevinz420"},"content":"        String storageFileInfo \u003d String.format(MESSAGE_USING_STORAGE_FILE, storageFilePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"kevinz420"},"content":"        showToUser(","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"kevinz420"},"content":"                DIVIDER,","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"kevinz420"},"content":"                DIVIDER,","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"kevinz420"},"content":"                MESSAGE_WELCOME,","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"kevinz420"},"content":"                version,","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"kevinz420"},"content":"                MESSAGE_PROGRAM_LAUNCH_ARGS_USAGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"kevinz420"},"content":"                storageFileInfo,","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"kevinz420"},"content":"                DIVIDER);","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"kevinz420"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"kevinz420"},"content":"        showToUser(MESSAGE_GOODBYE, DIVIDER, DIVIDER);","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"kevinz420"},"content":"    public void showInitFailedMessage() {","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"kevinz420"},"content":"        showToUser(MESSAGE_INIT_FAILED, DIVIDER, DIVIDER);","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"kevinz420"},"content":"     * Shows message(s) to the user","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"kevinz420"},"content":"    public void showToUser(String... message) {","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"kevinz420"},"content":"        for (String m : message) {","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"kevinz420"},"content":"            out.println(LINE_PREFIX + m.replace(\"\\n\", LS + LINE_PREFIX));","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"kevinz420"},"content":"     * Shows the result of a command execution to the user. Includes additional formatting to demarcate different","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"kevinz420"},"content":"     * command execution segments.","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"kevinz420"},"content":"    public void showResultToUser(CommandResult result) {","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"kevinz420"},"content":"        final Optional\u003cList\u003c? extends Printable\u003e\u003e resultItems \u003d result.getRelevantItems();","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"kevinz420"},"content":"        if (resultItems.isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"kevinz420"},"content":"            showItemsListView(resultItems.get());","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"kevinz420"},"content":"        showToUser(result.feedbackToUser, DIVIDER);","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"kevinz420"},"content":"     * Shows a list of persons to the user, formatted as an indexed list.","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"kevinz420"},"content":"     * Private contact details are hidden.","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"kevinz420"},"content":"    private void showItemsListView(List\u003c? extends Printable\u003e items) {","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"kevinz420"},"content":"        final List\u003cString\u003e formattedItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"kevinz420"},"content":"        for (Printable person : items) {","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"kevinz420"},"content":"            formattedItems.add(person.getAsText());","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"kevinz420"},"content":"        showToUserAsIndexedList(formattedItems);","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"kevinz420"},"content":"     * Shows a list of strings to the user, formatted as an indexed list.","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"kevinz420"},"content":"    private void showToUserAsIndexedList(List\u003cString\u003e list) {","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"kevinz420"},"content":"        showToUser(getIndexedListForViewing(list));","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"kevinz420"},"content":"     * Formats a list of strings as a viewable indexed list.","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"kevinz420"},"content":"    private static String getIndexedListForViewing(List\u003cString\u003e listItems) {","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"kevinz420"},"content":"        final StringBuilder formatted \u003d new StringBuilder();","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"kevinz420"},"content":"        int displayIndex \u003d 0 + DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"kevinz420"},"content":"        for (String listItem : listItems) {","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"kevinz420"},"content":"            formatted.append(getIndexedListItem(displayIndex, listItem)).append(\"\\n\");","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"kevinz420"},"content":"            displayIndex++;","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"kevinz420"},"content":"        return formatted.toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":185,"author":{"gitId":"kevinz420"},"content":"     * Formats a string as a viewable indexed list item.","lastModifiedDate":"2023-10-15"},{"lineNumber":186,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":187,"author":{"gitId":"kevinz420"},"content":"     * @param visibleIndex visible index for this listing","lastModifiedDate":"2023-10-15"},{"lineNumber":188,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":189,"author":{"gitId":"kevinz420"},"content":"    private static String getIndexedListItem(int visibleIndex, String listItem) {","lastModifiedDate":"2023-10-15"},{"lineNumber":190,"author":{"gitId":"kevinz420"},"content":"        return String.format(MESSAGE_INDEXED_LIST_ITEM, visibleIndex, listItem);","lastModifiedDate":"2023-10-15"},{"lineNumber":191,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":192,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":193,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":193}},{"path":"src/test/java/seedu/duke/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.IncorrectCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"public class ParserTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"    private Parser parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"    public void parse_emptyInput_returnsIncorrect() {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"        final String[] emptyInputs \u003d { \"\", \"  \", \"\\n  \\n\" };","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"        final String resultMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"        parseAndAssertIncorrectWithMessage(resultMessage, emptyInputs);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"kevinz420"},"content":"    public void parse_unknownCommandWord_returnsHelp() {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"        final String input \u003d \"unknowncommandword arguments arguments\";","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"        parseAndAssertCommandType(input, HelpCommand.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"    /*","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"     * Tests for 0-argument commands \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"    public void parse_helpCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"kevinz420"},"content":"        final String input \u003d \"help\";","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"kevinz420"},"content":"        parseAndAssertCommandType(input, HelpCommand.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"kevinz420"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"kevinz420"},"content":"    public void parse_exitCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"kevinz420"},"content":"        final String input \u003d \"exit\";","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"kevinz420"},"content":"        parseAndAssertCommandType(input, ExitCommand.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"kevinz420"},"content":"    /*","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"kevinz420"},"content":"     * Utility methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"kevinz420"},"content":"     * Asserts that parsing the given inputs will return IncorrectCommand with the given feedback message.","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"kevinz420"},"content":"    private void parseAndAssertIncorrectWithMessage(String feedbackMessage, String... inputs) {","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"kevinz420"},"content":"        for (String input : inputs) {","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"kevinz420"},"content":"            final IncorrectCommand result \u003d parseAndAssertCommandType(input, IncorrectCommand.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"kevinz420"},"content":"            assertEquals(result.feedbackToUser, feedbackMessage);","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"kevinz420"},"content":"     * Parses input and asserts the class/type of the returned command object.","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"kevinz420"},"content":"     * @param input to be parsed","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"kevinz420"},"content":"     * @param expectedCommandClass expected class of returned command","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"kevinz420"},"content":"     * @return the parsed command object","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"kevinz420"},"content":"    private \u003cT extends Command\u003e T parseAndAssertCommandType(String input, Class\u003cT\u003e expectedCommandClass) {","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"kevinz420"},"content":"        final Command result \u003d parser.parseCommand(input);","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"kevinz420"},"content":"        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"kevinz420"},"content":"        return (T) result;","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":78}},{"path":"text-ui-test/UploadCommand.cmd","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"rem customize the tag name and message here","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"set TAG_NAME\u003dfengguangyao","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"set MESSAGE\u003d\"Personal Job\"","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"rem create a branch","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"git branch %TAG_NAME%","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"git switch %TAG_NAME%","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"rem commit all changes","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"git add .","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"git commit -m %MESSAGE%","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"git push origin %TAG_NAME%","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"MrOPPA1":11}}]
