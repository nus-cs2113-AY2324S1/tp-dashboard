[{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |    Name     |             Github Profile             | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"--------|:-----------:|:--------------------------------------:|:---------:","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Kevin Zhang | [Github](https://github.com/kevinz420) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"![](https://picsum.photos/100) |   Ethan Huang   |     [Github](https://github.com/remy9926)      | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Ron John   |     [Github](https://github.com/)      | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  John Roe   |     [Github](https://github.com/)      | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Don Roe   |     [Github](https://github.com/)      | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"kevinz420":2,"Remy9926":1,"-":6}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"{Give product intro here}","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"test","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"MrOPPA1":2,"-":8}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.data.Goal;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.data.GoalList;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"//import seedu.addressbook.storage.StorageFile;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"//import seedu.addressbook.storage.StorageFile.InvalidStorageFilePathException;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"//import seedu.addressbook.storage.StorageFile.StorageOperationException;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.ui.TextUi;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":" * Entry point of the Address Book application.","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"     * Version info of the program.","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"    public static final String VERSION \u003d \"AddressBook Level 2 - Version 1.0\";","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"    private TextUi ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"    public static GoalList goals \u003d new GoalList();","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"    //    private StorageFile storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"kevinz420"},"content":"    public static void main(String... launchArgs) {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"        new Duke().run(launchArgs);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"     * @param launchArgs","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"     * Runs the program until termination.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"    public void run(String[] launchArgs) {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"        start(launchArgs);","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"        runCommandLoopUntilExitCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"kevinz420"},"content":"        exit();","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"kevinz420"},"content":"     * Sets up the required objects, loads up the data from the storage file, and prints the welcome message.","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"kevinz420"},"content":"     * @param launchArgs arguments supplied by the user at program launch","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"kevinz420"},"content":"    private void start(String[] launchArgs) {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"kevinz420"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"kevinz420"},"content":"            this.ui \u003d new TextUi();","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"kevinz420"},"content":"            // this.storage \u003d initializeStorage(launchArgs);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"kevinz420"},"content":"            ui.showWelcomeMessage(VERSION, \"storage.getPath()\");","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"kevinz420"},"content":"        } catch (Exception e) { // TODO: change to specific storage exceptions later","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"kevinz420"},"content":"            ui.showInitFailedMessage();","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"kevinz420"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"kevinz420"},"content":"     * Prints the Goodbye message and exits.","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"kevinz420"},"content":"    private void exit() {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"kevinz420"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"kevinz420"},"content":"        System.exit(0);","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"kevinz420"},"content":"     * Reads the user command and executes it, until the user issues the exit command.","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"kevinz420"},"content":"    private void runCommandLoopUntilExitCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"kevinz420"},"content":"        Command command;","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"kevinz420"},"content":"        do {","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"kevinz420"},"content":"            String userCommandText \u003d ui.getUserCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"kevinz420"},"content":"            command \u003d new Parser().parseCommand(userCommandText);","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"kevinz420"},"content":"            CommandResult result \u003d executeCommand(command);","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"kevinz420"},"content":"            ui.showResultToUser(result);","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"kevinz420"},"content":"        } while (!ExitCommand.isExit(command));","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"kevinz420"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"kevinz420"},"content":"     * @param command user command","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"kevinz420"},"content":"     * @return result of the command","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"kevinz420"},"content":"    private CommandResult executeCommand(Command command) {","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"kevinz420"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"kevinz420"},"content":"            CommandResult result \u003d command.execute();","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"kevinz420"},"content":"            // storage.save(addressBook);","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"kevinz420"},"content":"            return result;","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"kevinz420"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"kevinz420"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"kevinz420"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"kevinz420"},"content":"    //    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"kevinz420"},"content":"    //     * Creates the StorageFile object based on the user specified path (if any) or the default storage path.","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"kevinz420"},"content":"    //     * @param launchArgs arguments supplied by the user at program launch","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"kevinz420"},"content":"    //     * @throws InvalidStorageFilePathException if the target file path is incorrect.","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"kevinz420"},"content":"    //     */","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"kevinz420"},"content":"    //    private StorageFile initializeStorage(String[] launchArgs) throws InvalidStorageFilePathException {","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"kevinz420"},"content":"    //        boolean isStorageFileSpecifiedByUser \u003d launchArgs.length \u003e 0;","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"kevinz420"},"content":"    //        return isStorageFileSpecifiedByUser ? new StorageFile(launchArgs[0]) : new StorageFile();","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"kevinz420"},"content":"    //    }","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"J-Y-Yan":5,"kevinz420":89,"Remy9926":6,"-":10}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":" * Represents an executable command.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"public class Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"    String userCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"    public Command() {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"    public Command(String cmd){","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"        this.userCommand \u003d cmd;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"    public CommandResult execute() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"        throw new UnsupportedOperationException(\"This method is to be implemented by child classes\");","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"J-Y-Yan":8,"kevinz420":12,"MrOPPA1":1}},{"path":"src/main/java/seedu/duke/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.data.Printable;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"public class CommandResult {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"     * The feedback message to be shown to the user. Contains a description of the execution result","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"     * The list of objects that was produced by the command","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"    private final List\u003c? extends Printable\u003e relevantItems;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"        relevantItems \u003d null;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"    public CommandResult(String feedbackToUser, List\u003c? extends Printable\u003e relevantItems) {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"        this.relevantItems \u003d relevantItems;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"     * Returns a list of objects relevant to the command result, if any.","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"     * @return relevant items","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"    public Optional\u003cList\u003c? extends Printable\u003e\u003e getRelevantItems() {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"kevinz420"},"content":"        return Optional.ofNullable(relevantItems);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"J-Y-Yan":1,"kevinz420":40}},{"path":"src/main/java/seedu/duke/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":" * Terminates the program.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the program.\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_EXIT_ACKNOWEDGEMENT \u003d \"Exiting FITNUS as requested ...\";","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWEDGEMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"        return command instanceof ExitCommand; // instanceof returns false if it is null","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":22}},{"path":"src/main/java/seedu/duke/commands/GoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.ui.TextUi;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.data.exception.IncorrectFormatException;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"public class GoalCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"    public static final String COMMAND_WORD \u003d \"set\";","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"    public GoalCommand(String cmd){","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"        super(cmd);","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"        try{","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"            Duke.goals.addGoal(this.userCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"            String addGoalResultMsg \u003d TextUi.addGoalSuccessMessage(Duke.goals);","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"            return new CommandResult(addGoalResultMsg);","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"        }catch(IncorrectFormatException ife){","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"            ife.handleException();","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"        }catch(NumberFormatException nfe){","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"            System.out.println(\"Please input a valid number for calories.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"        return null;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"J-Y-Yan":31}},{"path":"src/main/java/seedu/duke/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" * Shows help instructions.","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"                HelpCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"        //                        + \"\\n\" + DeleteCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"        //                        + \"\\n\" + ClearCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"        //                        + \"\\n\" + FindCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"        //                        + \"\\n\" + ListCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"        //                        + \"\\n\" + ViewCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"        //                        + \"\\n\" + ViewAllCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":26}},{"path":"src/main/java/seedu/duke/commands/IncorrectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" * Represents an incorrect command. Upon execution, produces some feedback to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"    public IncorrectCommand(String feedbackToUser) {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"        return new CommandResult(feedbackToUser);","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":20}},{"path":"src/main/java/seedu/duke/commands/logcommands/DeleteLogCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.commands.logcommands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.exerciselog.Log;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"public class DeleteLogCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"    public String feedbackToUser;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"    private List\u003cString\u003e exerciseDetails;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"    public DeleteLogCommand() {","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"        super();","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"    public DeleteLogCommand(List\u003cString\u003e exerciseDetails) {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"        super();","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"        this.exerciseDetails \u003d exerciseDetails;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"    public CommandResult execute(Log exerciseLog) {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"        int month \u003d Integer.parseInt(exerciseDetails.get(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"        int day \u003d Integer.parseInt(exerciseDetails.get(1));","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"        String exerciseName \u003d exerciseDetails.get(2);","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"        int caloriesBurned \u003d Integer.parseInt(exerciseDetails.get(3));","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"        feedbackToUser \u003d exerciseLog.removeExercise(month, day, exerciseName, caloriesBurned) ?","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"                \"Successfully removed exercise!\" :","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"                \"Could not find the specified exercise!\";","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"        return new CommandResult(feedbackToUser);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"Remy9926":35}},{"path":"src/main/java/seedu/duke/commands/logcommands/LogCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.commands.logcommands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.exerciselog.Log;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"public class LogCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"    public static final String COMMAND_WORD \u003d \"log\";","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"    public String feedbackToUser;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"    private List\u003cString\u003e exerciseDetails;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"    public LogCommand() {","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"        super();","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"        feedbackToUser \u003d \"Successfully added exercise to log:\\n\\t\";","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"    public LogCommand(List\u003cString\u003e exerciseDetails) {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"        super();","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"        feedbackToUser \u003d \"Successfully added exercise to log:\\n\\t\";","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"        this.exerciseDetails \u003d exerciseDetails;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"    public CommandResult execute(Log exerciseLog) {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"        int month \u003d Integer.parseInt(exerciseDetails.get(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"        int day \u003d Integer.parseInt(exerciseDetails.get(1));","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"        String exerciseName \u003d exerciseDetails.get(2);","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"        int caloriesBurned \u003d Integer.parseInt(exerciseDetails.get(3));","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"        String exerciseDescription \u003d exerciseLog.addExercise(month, day, exerciseName, caloriesBurned);","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"        return new CommandResult(feedbackToUser + exerciseDescription);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"Remy9926":35}},{"path":"src/main/java/seedu/duke/commands/logcommands/ViewLogCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.commands.logcommands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"import seedu.duke.exerciselog.Log;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"enum ViewType {","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"    TOTALEXERCISES,","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"    TOTALEXERCISESMONTH,","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"    TOTALEXERCISESDAY;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"public class ViewLogCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"    private ViewType view;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"    private int month;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"    private int day;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"    public ViewLogCommand() {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"        super();","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"    public ViewLogCommand(String viewType) {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"        super();","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"        switch (viewType) {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"        case \"view all\":","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"            view \u003d ViewType.TOTALEXERCISES;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"            break;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"        case \"view month\":","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"            view \u003d ViewType.TOTALEXERCISESMONTH;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"            // set month to the month to view","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"            break;","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"        case \"view day\":","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"            view \u003d ViewType.TOTALEXERCISESDAY;","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"            // set month and day to the day to view","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"            break;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"        default:","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"Remy9926"},"content":"            System.out.println(\"No ViewType specified\");","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"Remy9926"},"content":"    public CommandResult execute(Log exerciseLog) {","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"Remy9926"},"content":"        switch (view) {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"Remy9926"},"content":"        case TOTALEXERCISES:","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"Remy9926"},"content":"            exerciseLog.getNumberOfExercises();","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"Remy9926"},"content":"            return new CommandResult(\"Here are the total number of exercises you have logged!\\n\");","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"Remy9926"},"content":"        case TOTALEXERCISESMONTH:","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"Remy9926"},"content":"            exerciseLog.getNumberOfExercisesForMonth(month);","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Remy9926"},"content":"            return new CommandResult(\"Here are the total number of exercises for that month!\\n\");","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"Remy9926"},"content":"        case TOTALEXERCISESDAY:","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"Remy9926"},"content":"            exerciseLog.getNumberOfExercisesForDay(month, day);","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"Remy9926"},"content":"            return new CommandResult(\"Here are the total number of exercises for that day!\\n\");","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"Remy9926"},"content":"        default:","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"Remy9926"},"content":"            return new CommandResult(\"Invalid exercise search type\");","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"Remy9926":58}},{"path":"src/main/java/seedu/duke/commands/meal/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package seedu.duke.commands.meal;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"import seedu.duke.data.meal.Meal;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"public class AddCommand extends MealCommand {","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"    private static final int validArgumentAmount \u003d 2;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"    public static final String COMMAND_WORD \u003d \"meal add\";","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add a meal and record the amount of calories.\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"            + \"Example: \" + COMMAND_WORD + \" potato 15\";","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"    private final String name;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"    private final int calories;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"    public AddCommand(String[] arguments) throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"        if (arguments \u003d\u003d null || arguments.length !\u003d 2) {","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"            throw new Exception(\"Incorrect amount of the arguments.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"        name \u003d arguments[0];","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"        calories \u003d Integer.parseInt(arguments[1]);","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"    public CommandResult execute() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"        meals.add(new Meal(name, calories));","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"        return new CommandResult(\"Successfully add meal \u0027\" + name + \"\u0027(\" + calories + \"\u0027 calories)!\");","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"MrOPPA1":29}},{"path":"src/main/java/seedu/duke/commands/meal/MealCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package seedu.duke.commands.meal;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"import seedu.duke.data.meal.Meal;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"public class MealCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"    protected static ArrayList\u003cMeal\u003e meals;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"    public static void SetMeals(ArrayList\u003cMeal\u003e meals) {","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"        MealCommand.meals \u003d meals;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"    protected void CheckArgument(String[] arguments, int validArgumentAmount) throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"        if (arguments \u003d\u003d null || arguments.length !\u003d 2) {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"            throw new Exception(\"Incorrect amount of the arguments.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"MrOPPA1":20}},{"path":"src/main/java/seedu/duke/common/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.common;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":" * Container for user visible messages.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"public class Messages {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Good bye!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_INIT_FAILED \u003d \"Failed to initialise address book application. Exiting...\";","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_PROGRAM_LAUNCH_ARGS_USAGE \u003d \"Launch command format: \"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"            + \"java seedu.duke.Duke [STORAGE_FILE_PATH]\";","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Welcome to your FITNUS journey!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_USING_STORAGE_FILE \u003d \"Using storage file : %1$s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":14}},{"path":"src/main/java/seedu/duke/data/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package seedu.duke.data;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"// import com.google.gson.annotations.SerializedName;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":" * Customized class for showing date and parsing supported string to date.","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"public class Date {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"    transient LocalDate date;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"    // @SerializedName(\"rawData\")","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"    public String standardString;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"    private static DateTimeFormatter[] formatters \u003d new DateTimeFormatter[] {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"M-d-yyyy\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"MMM d, yyyy\", Locale.ENGLISH), };","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"    private static DateTimeFormatter toStringFormatter \u003d formatters[formatters.length - 1];","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"     * Modifying an existing date with a rawData String.","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"     * @param rawData A String that needs to comply with a supported format and","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"     *                indicates a correct date that will be recorded by this Date","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"     *                instance.","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"    public void setRawData(String rawData) throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"            try {","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"                date \u003d LocalDate.parse(rawData, formatter);","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"                standardString \u003d this.toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"                return;","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"            } catch (Exception exception) {","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"        throw new Exception(\"Unable to parse date time!\");","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"MrOPPA1"},"content":"     * Create a new date.","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"     * @param rawData A String that needs to comply with a supported format and","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"MrOPPA1"},"content":"     *                indicates a correct date that will be recorded by this Date","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"MrOPPA1"},"content":"     *                instance.","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"MrOPPA1"},"content":"    public Date(String rawData) throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"MrOPPA1"},"content":"        setRawData(rawData);","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"MrOPPA1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"MrOPPA1"},"content":"        return date.format(toStringFormatter);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"MrOPPA1":64}},{"path":"src/main/java/seedu/duke/data/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package seedu.duke.data;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"// import com.google.gson.annotations.SerializedName;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":" * Customized class for showing date time and parsing supported string to date","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":" * time.","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"public class DateTime {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"    transient LocalDateTime dateTime;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"    // @SerializedName(\"rawData\")","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"MrOPPA1"},"content":"    public String standardString;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"MrOPPA1"},"content":"    private static DateTimeFormatter[] formatters \u003d new DateTimeFormatter[] {","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d H:m\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"M-d-yyyy HHmm\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"M-d-yyyy H:m\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"MrOPPA1"},"content":"            DateTimeFormatter.ofPattern(\"MMM d, yyyy HH:mm\", Locale.ENGLISH), };","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"MrOPPA1"},"content":"    private static DateTimeFormatter toStringFormatter \u003d formatters[formatters.length - 1];","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"MrOPPA1"},"content":"     * Modifying an existing date time with a rawData String.","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"MrOPPA1"},"content":"     * @param rawData A String that needs to comply with a supported format and","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"MrOPPA1"},"content":"     *                indicates a correct time that will be recorded by this Date","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"MrOPPA1"},"content":"     *                instance.","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"MrOPPA1"},"content":"    public void setRawData(String rawData) throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"MrOPPA1"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"MrOPPA1"},"content":"            try {","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"MrOPPA1"},"content":"                dateTime \u003d LocalDateTime.parse(rawData, formatter);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"MrOPPA1"},"content":"                standardString \u003d this.toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"MrOPPA1"},"content":"                return;","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"MrOPPA1"},"content":"            } catch (Exception exception) {","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"MrOPPA1"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"MrOPPA1"},"content":"        throw new Exception(\"Unable to parse date time!\");","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"MrOPPA1"},"content":"     * Create a new date time.","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"MrOPPA1"},"content":"     * @param rawData A String that needs to comply with a supported format and","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"MrOPPA1"},"content":"     *                indicates a correct time that will be recorded by this Date","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"MrOPPA1"},"content":"     *                instance time.","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"MrOPPA1"},"content":"     * @throws TipsException Any excption will be throw in this type, which contains","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"MrOPPA1"},"content":"     *                       information about this exception and the possible","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"MrOPPA1"},"content":"     *                       solution.","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"MrOPPA1"},"content":"    public DateTime(String rawData) throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"MrOPPA1"},"content":"        setRawData(rawData);","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"MrOPPA1"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"MrOPPA1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"MrOPPA1"},"content":"        return dateTime.format(toStringFormatter);","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"MrOPPA1"},"content":"     * Compare the dates of this DateTime and another DateTime.","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"MrOPPA1"},"content":"     * @param dateTime The other DateTime that is used to compare.","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"MrOPPA1"},"content":"     * @return If the date of current instance is earlier,it returns -1.","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"MrOPPA1"},"content":"     *         If the date of current instance is later,it returns 1.","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"MrOPPA1"},"content":"     *         Otherwise(when they\u0027re at exactly the same date) it returns 0.","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"MrOPPA1"},"content":"    public int compareDate(DateTime dateTime) {","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"MrOPPA1"},"content":"        LocalDate date1 \u003d this.dateTime.toLocalDate(), date2 \u003d dateTime.dateTime.toLocalDate();","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"MrOPPA1"},"content":"        if (date1.isBefore(date2)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"MrOPPA1"},"content":"            return 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"MrOPPA1"},"content":"        if (date1.isAfter(date2)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"MrOPPA1"},"content":"            return -1;","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"MrOPPA1"},"content":"        return 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"MrOPPA1"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"MrOPPA1"},"content":"     * Compare the dates of this DateTime and another Date.","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"MrOPPA1"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"MrOPPA1"},"content":"     * @param date The other Date that is used to compare.","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"MrOPPA1"},"content":"     * @return If the date of current instance is earlier,it returns -1.","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"MrOPPA1"},"content":"     *         If the date of current instance is later,it returns 1.","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"MrOPPA1"},"content":"     *         Otherwise(when they\u0027re at exactly the same date) it returns 0.","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"MrOPPA1"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"MrOPPA1"},"content":"    public int compareDate(Date date) {","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"MrOPPA1"},"content":"        LocalDate date1 \u003d this.dateTime.toLocalDate(), date2 \u003d date.date;","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"MrOPPA1"},"content":"        if (date1.isBefore(date2)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"MrOPPA1"},"content":"            return -1;","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"MrOPPA1"},"content":"        if (date1.isAfter(date2)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"MrOPPA1"},"content":"            return 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"MrOPPA1"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"MrOPPA1"},"content":"        return 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"MrOPPA1":106}},{"path":"src/main/java/seedu/duke/data/Goal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package seedu.duke.data;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"public class Goal {","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"    private int calories;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"    private String date;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"    public Goal(int calories, String date){","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"        return \"Consume \" + this.calories + \" kcal on \" + this.date;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"J-Y-Yan":15}},{"path":"src/main/java/seedu/duke/data/GoalList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package seedu.duke.data;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.data.exception.IllegalValueException;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.data.exception.IncorrectFormatException;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.ui.TextUi;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"public class GoalList {","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"    private final String GOAL_KEYWORD \u003d \"set\";","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"    private final String DATE_KEYWORD \u003d \"on\";","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"    private ArrayList\u003cGoal\u003e goals;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"    private int goalCount;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"    private TextUi ui;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"    public GoalList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"        goals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"        this.goalCount \u003d 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"    public GoalList(ArrayList\u003cGoal\u003e goals) {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"        this.goals \u003d goals;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"        this.goalCount \u003d goals.size();","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"    public Goal getGoal(int index) {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"        return goals.get(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"    public int getGoalCount() {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"        return goalCount;","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"     * @param index points to the target gaol at the goal list","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"    public void deleteGoal(int index) {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"J-Y-Yan"},"content":"        Goal targetGoal \u003d goals.remove(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"J-Y-Yan"},"content":"        goalCount--;","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"J-Y-Yan"},"content":"        ui.printDeleteGoal(targetGoal);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"J-Y-Yan"},"content":"        ui.printNumberofGoal(goalCount);","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"J-Y-Yan"},"content":"     * The userCmd should be like: set 1234 on Date","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"J-Y-Yan"},"content":"     * @param userCmd represents the raw userInput","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"J-Y-Yan"},"content":"     * @throws IncorrectFormatException checks if the user Input is valid by:","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"J-Y-Yan"},"content":"     * 1. check if the length of the command equals 4","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"J-Y-Yan"},"content":"     * 2. detect keywords \"set\", \"on\", etc.","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"J-Y-Yan"},"content":"     * 3. check if user inputs a calories number at valid range","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"J-Y-Yan"},"content":"    private void checkGoalInput(String userCmd) throws IncorrectFormatException, NumberFormatException {","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"J-Y-Yan"},"content":"        String[] cmdSplit \u003d userCmd.split(\" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"J-Y-Yan"},"content":"        if (cmdSplit.length !\u003d 4) {","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"J-Y-Yan"},"content":"            throw new IncorrectFormatException(\"Goal message contain extra data. Please \"","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"J-Y-Yan"},"content":"                    + \"provides with only relevant information.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"J-Y-Yan"},"content":"        if (!cmdSplit[0].equals(GOAL_KEYWORD) ) {","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"J-Y-Yan"},"content":"            throw new IncorrectFormatException(\"Sorry. I cannot detect the \u0027\" + GOAL_KEYWORD + \"\u0027 keyword.\" );","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"J-Y-Yan"},"content":"        if (!cmdSplit[2].equals(DATE_KEYWORD)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"J-Y-Yan"},"content":"            throw new IncorrectFormatException(\"Sorry. I cannot detect the \u0027\" + DATE_KEYWORD + \"\u0027 keyword.\" );","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"J-Y-Yan"},"content":"        int calories \u003d Integer.parseInt(cmdSplit[1]); //throws number exception if not a number string","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"J-Y-Yan"},"content":"        if (calories \u003c\u003d 0 ){","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"J-Y-Yan"},"content":"            throw new IllegalValueException(\"Please input a positive value.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"J-Y-Yan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"J-Y-Yan"},"content":"     * This method will first check if the raw user input is in the correct format.","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"J-Y-Yan"},"content":"     * If not, terminate the method and throws error message.","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"J-Y-Yan"},"content":"     * If yes, continue to add a new goal object into the goals list.","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"J-Y-Yan"},"content":"     * @param userCmd represents raw user input","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"J-Y-Yan"},"content":"     * @throws IncorrectFormatException if user input is in wrong format","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"J-Y-Yan"},"content":"     * @throws NumberFormatException if the user does not input a valid number","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"J-Y-Yan"},"content":"    public void addGoal(String userCmd) throws IncorrectFormatException, NumberFormatException{","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"J-Y-Yan"},"content":"        userCmd \u003d userCmd.toLowerCase().trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"J-Y-Yan"},"content":"        checkGoalInput(userCmd); //if invalid, exceptions is thrown","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"J-Y-Yan"},"content":"        String[] cmdSplit \u003d userCmd.split(\" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"J-Y-Yan"},"content":"        int calories \u003d Integer.parseInt(cmdSplit[1]);","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"J-Y-Yan"},"content":"        String date \u003d cmdSplit[3];","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"J-Y-Yan"},"content":"        goals.add(new Goal(calories, date));","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"J-Y-Yan"},"content":"        goalCount++;","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"J-Y-Yan":97}},{"path":"src/main/java/seedu/duke/data/Printable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.data;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"public interface Printable {","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"    String getAsText();","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":5}},{"path":"src/main/java/seedu/duke/data/exception/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.data.exception;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"public class IllegalValueException extends IncorrectFormatException {","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"        super(message);","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"J-Y-Yan":1,"kevinz420":12}},{"path":"src/main/java/seedu/duke/data/exception/IncorrectFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"package seedu.duke.data.exception;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"public class IncorrectFormatException extends Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"    public IncorrectFormatException(String message) {","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"        super(message);","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"    public void handleException(){","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"Please try again.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"J-Y-Yan":13}},{"path":"src/main/java/seedu/duke/data/meal/Meal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"package seedu.duke.data.meal;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"import seedu.duke.data.DateTime;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"public class Meal {","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"    public String name;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"    public int calories;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"    public DateTime time;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"MrOPPA1"},"content":"    public Meal(String name, int calories) throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"MrOPPA1"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"MrOPPA1"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"MrOPPA1"},"content":"        this.time \u003d new DateTime(LocalDateTime.now().toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"MrOPPA1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"MrOPPA1"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"MrOPPA1":17}},{"path":"src/main/java/seedu/duke/exerciselog/Day.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.exerciselog;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"public class Day {","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"    private final ArrayList\u003cExercise\u003e exercises;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"    public Day() {","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"        exercises \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"    public String addExercise(String exerciseName, int caloriesBurned) {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"        Exercise newExercise \u003d new Exercise(exerciseName, caloriesBurned);","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"        exercises.add(newExercise);","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"        return newExercise.toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"    public boolean removeExercise(String exerciseName, int caloriesBurned) {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"        return exercises.remove(new Exercise(exerciseName, caloriesBurned));","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"    public Exercise getExercise(int index) {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"        return exercises.get(index - 1);","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"    public Integer getNumberOfExercises() {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"        return exercises.size();","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"    public boolean containsExercises() {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"        return !exercises.isEmpty();","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"        if (exercises.isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"            return \"\\tNO EXCERCISES FOR THIS DAY!\\n\";","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"        String newString \u003d \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Remy9926"},"content":"        for (Exercise e: exercises) {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Remy9926"},"content":"            newString +\u003d \"\\t\" + e.toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Remy9926"},"content":"        return newString;","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Remy9926":44}},{"path":"src/main/java/seedu/duke/exerciselog/Exercise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.exerciselog;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"public class Exercise {","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"    private String exerciseName;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"    private int caloriesBurned;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"    public Exercise(String exerciseName, int caloriesBurned) {","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"        this.exerciseName \u003d exerciseName;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"        this.caloriesBurned \u003d caloriesBurned;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"    public String getExerciseName() {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"        return exerciseName;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"    public int getCaloriesBurned() {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"        return caloriesBurned;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"    public void setExerciseName(String newName) {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"        this.exerciseName \u003d newName;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"    public void setCaloriesBurned(int newCalories) {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"        this.caloriesBurned \u003d newCalories;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"        return \"Exercise: \" + exerciseName + \", Calories Burned: \" + Integer.toString(caloriesBurned) + \" Calories\\n\";","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"        if (!(other instanceof Exercise)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"        Exercise otherExercise \u003d (Exercise) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"        return this.exerciseName.equals(otherExercise.getExerciseName()) \u0026\u0026","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"                this.caloriesBurned \u003d\u003d otherExercise.getCaloriesBurned();","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Remy9926":40}},{"path":"src/main/java/seedu/duke/exerciselog/Log.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.exerciselog;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"public class Log {","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"    private final ArrayList\u003cMonth\u003e exerciseLog;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"    public Log() {","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"        exerciseLog \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(31, \"jan\")); // Jan 31","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(29, \"feb\")); // Feb 29","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(31, \"mar\")); // Mar 31","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(30, \"apr\")); // Apr 30","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(31, \"may\")); // May 31","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(30, \"jun\")); // Jun 30","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(31, \"jul\")); // Jul 31","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(31, \"aug\")); // Aug 31","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(30, \"sep\")); // Sep 30","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(31, \"oct\")); // Oct 31","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(30, \"nov\")); // Nov 30","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"        exerciseLog.add(new Month(31, \"dec\")); // Dec 31","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"    public String addExercise(int month, int day, String exerciseName, int caloriesBurned) {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"        return exerciseLog.get(month - 1).addExercise(day, exerciseName, caloriesBurned);","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"    public boolean removeExercise(int month, int day, String exerciseName, int caloriesBurned) {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"        return exerciseLog.get(month - 1).removeExercise(day, exerciseName, caloriesBurned);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"    public int getNumberOfExercises() {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"        int totalNumber \u003d 0;","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"        for (Month m: exerciseLog) {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"            totalNumber +\u003d m.getTotalNumberOfExercises();","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"        return totalNumber;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Remy9926"},"content":"    public int getNumberOfExercisesForMonth(int month) {","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Remy9926"},"content":"        return exerciseLog.get(month - 1).getTotalNumberOfExercises();","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Remy9926"},"content":"    public int getNumberOfExercisesForDay(int month, int day) {","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"Remy9926"},"content":"        return exerciseLog.get(month - 1).getNumberOfExercisesForDay(day);","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Remy9926"},"content":"    public Month getMonth(int month) {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Remy9926"},"content":"        return exerciseLog.get(month - 1);","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Remy9926"},"content":"    public Day getDay(int month, int day) {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Remy9926"},"content":"        return exerciseLog.get(month - 1).getDay(day - 1);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Remy9926"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Remy9926"},"content":"        String newString \u003d \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Remy9926"},"content":"        for (Month m: exerciseLog) {","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Remy9926"},"content":"            newString +\u003d m.toString() + \"\\n\";","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Remy9926"},"content":"        return newString;","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Remy9926":63}},{"path":"src/main/java/seedu/duke/exerciselog/Month.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.exerciselog;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"public class Month {","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"    private final ArrayList\u003cDay\u003e dates;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"    private String name;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"    public Month(int days, String name) {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"        dates \u003d new ArrayList\u003cDay\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"        for (int i \u003d 0; i \u003c days; i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"            dates.add(new Day());","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"    public String addExercise(int day, String exerciseName, int caloriesBurned) {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"        return dates.get(day - 1).addExercise(exerciseName, caloriesBurned);","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"    public boolean removeExercise(int day, String exerciseName, int caloriesBurned) {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"        return dates.get(day - 1).removeExercise(exerciseName, caloriesBurned);","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"    public int getTotalNumberOfExercises() {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"        int totalExercises \u003d 0;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"        for (Day d: dates) {","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"            totalExercises +\u003d d.getNumberOfExercises();","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"        return totalExercises;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"    public Day getDay(int day) {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"        return dates.get(day - 1);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"    public int getNumberOfExercisesForDay(int day) {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"        return dates.get(day - 1).getNumberOfExercises();","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Remy9926"},"content":"    public String getName() {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Remy9926"},"content":"        return name;","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Remy9926"},"content":"    public int getNumberOfDays() {","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"Remy9926"},"content":"        return dates.size();","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Remy9926"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Remy9926"},"content":"        String newString \u003d \"Month: \" + name.toUpperCase() + \"\\n\";","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Remy9926"},"content":"        for (int i \u003d 0; i \u003c dates.size(); i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Remy9926"},"content":"            String day \u003d Integer.toString(i + 1);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Remy9926"},"content":"            newString +\u003d \"Day \" + day + \":\\n\";","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Remy9926"},"content":"            newString +\u003d dates.get(i).toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Remy9926"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Remy9926"},"content":"        return newString;","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Remy9926":58}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.commands.*;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.data.exception.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":" * Parses user input.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"public class Parser {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"    public static final Pattern PERSON_INDEX_ARGS_FORMAT \u003d Pattern.compile(\"(?\u003ctargetIndex\u003e.+)\");","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"    public static final Pattern KEYWORDS_ARGS_FORMAT \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"            Pattern.compile(\"(?\u003ckeywords\u003e\\\\S+(?:\\\\s+\\\\S+)*)\"); // one or more keywords separated by whitespace","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"kevinz420"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"kevinz420"},"content":"    public Command parseCommand(String userInput) {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"kevinz420"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"kevinz420"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"kevinz420"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"kevinz420"},"content":"        //        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"kevinz420"},"content":"        //            return prepareAdd(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"kevinz420"},"content":"        //        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"kevinz420"},"content":"        //            return prepareDelete(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"kevinz420"},"content":"        //        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"kevinz420"},"content":"        //            return new ClearCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"kevinz420"},"content":"        //        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"kevinz420"},"content":"        //            return prepareFind(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"kevinz420"},"content":"        //        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"kevinz420"},"content":"        //            return new ListCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"kevinz420"},"content":"        //        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"kevinz420"},"content":"        //            return prepareView(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"kevinz420"},"content":"        //        case ViewAllCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"kevinz420"},"content":"        //            return prepareViewAll(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"kevinz420"},"content":"        //","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"Remy9926"},"content":"        case LogCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"Remy9926"},"content":"            return new LogCommand();","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"Remy9926"},"content":"        case DeleteLogCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"Remy9926"},"content":"            return new DeleteLogCommand();","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"Remy9926"},"content":"        case ViewLogCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Remy9926"},"content":"            return new ViewLogCommand();","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"J-Y-Yan"},"content":"        case GoalCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"J-Y-Yan"},"content":"            return new GoalCommand(userInput);","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"kevinz420"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"kevinz420"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"kevinz420"},"content":"        case HelpCommand.COMMAND_WORD: // Fallthrough","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"Remy9926"},"content":"        ","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"kevinz420"},"content":"          default:","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"kevinz420"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"kevinz420"},"content":"    //    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"kevinz420"},"content":"    //     * Parses arguments in the context of the add person command.","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"kevinz420"},"content":"    //     *","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"kevinz420"},"content":"    //     * @param args full command args string","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"kevinz420"},"content":"    //     * @return the prepared command","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"kevinz420"},"content":"    //     */","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"kevinz420"},"content":"    //    private Command prepareAdd(String args) {","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"kevinz420"},"content":"    //        final Matcher matcher \u003d PERSON_DATA_ARGS_FORMAT.matcher(args.trim());","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"kevinz420"},"content":"    //        // Validate arg string format","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"kevinz420"},"content":"    //        if (!matcher.matches()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"kevinz420"},"content":"    //            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"kevinz420"},"content":"    //        }","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"kevinz420"},"content":"    //        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"kevinz420"},"content":"    //            return new AddCommand(","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"kevinz420"},"content":"    //                    matcher.group(\"name\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"kevinz420"},"content":"    //","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"kevinz420"},"content":"    //                    matcher.group(\"phone\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"kevinz420"},"content":"    //                    isPrivatePrefixPresent(matcher.group(\"isPhonePrivate\")),","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"kevinz420"},"content":"    //","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"kevinz420"},"content":"    //                    matcher.group(\"email\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"kevinz420"},"content":"    //                    isPrivatePrefixPresent(matcher.group(\"isEmailPrivate\")),","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"kevinz420"},"content":"    //","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"kevinz420"},"content":"    //                    matcher.group(\"address\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"kevinz420"},"content":"    //                    isPrivatePrefixPresent(matcher.group(\"isAddressPrivate\")),","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"kevinz420"},"content":"    //","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"kevinz420"},"content":"    //                    getTagsFromArgs(matcher.group(\"tagArguments\"))","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"kevinz420"},"content":"    //            );","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"kevinz420"},"content":"    //        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"kevinz420"},"content":"    //            return new IncorrectCommand(ive.getMessage());","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"kevinz420"},"content":"    //        }","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"kevinz420"},"content":"    //    }","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"kevinz420"},"content":"     * Returns true if the private prefix is present for a contact detail in the add command\u0027s arguments string.","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"kevinz420"},"content":"    private static boolean isPrivatePrefixPresent(String matchedPrefix) {","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"kevinz420"},"content":"        return matchedPrefix.equals(\"p\");","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"kevinz420"},"content":"     * Extracts the new person\u0027s tags from the add command\u0027s tag arguments string.","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"kevinz420"},"content":"     * Merges duplicate tag strings.","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"kevinz420"},"content":"    private static Set\u003cString\u003e getTagsFromArgs(String tagArguments) throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"kevinz420"},"content":"        // no tags","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"kevinz420"},"content":"        if (tagArguments.isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"kevinz420"},"content":"            return Collections.emptySet();","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"kevinz420"},"content":"        // replace first delimiter prefix, then split","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"kevinz420"},"content":"        final Collection\u003cString\u003e tagStrings \u003d Arrays.asList(tagArguments.replaceFirst(\" t/\", \"\").split(\" t/\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"kevinz420"},"content":"        return new HashSet\u003c\u003e(tagStrings);","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"kevinz420"},"content":"     * Parses the given arguments string as a single index number.","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"kevinz420"},"content":"     * @param args arguments string to parse as index number","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"kevinz420"},"content":"     * @return the parsed index number","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"kevinz420"},"content":"     * @throws ParseException        if no region of the args string could be found for the index","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"kevinz420"},"content":"     * @throws NumberFormatException the args string region is not a valid number","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"kevinz420"},"content":"    private int parseArgsAsDisplayedIndex(String args) throws ParseException, NumberFormatException {","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"kevinz420"},"content":"        final Matcher matcher \u003d PERSON_INDEX_ARGS_FORMAT.matcher(args.trim());","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"kevinz420"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"kevinz420"},"content":"            throw new ParseException(\"Could not find index number to parse\");","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"kevinz420"},"content":"        return Integer.parseInt(matcher.group(\"targetIndex\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"kevinz420"},"content":"     * Signals that the user input could not be parsed.","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"kevinz420"},"content":"    public static class ParseException extends Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"kevinz420"},"content":"        ParseException(String message) {","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"kevinz420"},"content":"            super(message);","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"J-Y-Yan":4,"kevinz420":156,"Remy9926":11}},{"path":"src/main/java/seedu/duke/ui/TextUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_GOODBYE;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_INIT_FAILED;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_PROGRAM_LAUNCH_ARGS_USAGE;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_USING_STORAGE_FILE;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_WELCOME;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.data.Goal;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"import seedu.duke.data.GoalList;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.data.Printable;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":" * Text UI of the application.","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"public class TextUi {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"     * Offset required to convert between 1-indexing and 0-indexing.","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"    public static final int DISPLAYED_INDEX_OFFSET \u003d 1;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"     * A decorative prefix added to the beginning of lines printed by AddressBook","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"    private static final String LINE_PREFIX \u003d \"|| \";","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"     * A platform independent line separator.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"kevinz420"},"content":"     * Format of indexed list item","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"kevinz420"},"content":"    private static final String MESSAGE_INDEXED_LIST_ITEM \u003d \"\\t%1$d. %2$s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"kevinz420"},"content":"     * Format of a comment input line. Comment lines are silently consumed when reading user input.","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"kevinz420"},"content":"    private static final String COMMENT_LINE_FORMAT_REGEX \u003d \"#.*\";","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"kevinz420"},"content":"    private final Scanner in;","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"kevinz420"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"kevinz420"},"content":"    public TextUi() {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"kevinz420"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"kevinz420"},"content":"    public TextUi(InputStream in, PrintStream out) {","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"kevinz420"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"kevinz420"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"kevinz420"},"content":"     * Returns true if the user input line should be ignored.","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"kevinz420"},"content":"     * Input should be ignored if it is parsed as a comment, is only whitespace, or is empty.","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"kevinz420"},"content":"     * @param rawInputLine full raw user input line.","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"kevinz420"},"content":"     * @return true if the entire user input line should be ignored.","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"kevinz420"},"content":"    private boolean shouldIgnore(String rawInputLine) {","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"kevinz420"},"content":"        return rawInputLine.trim().isEmpty() || isCommentLine(rawInputLine);","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"kevinz420"},"content":"     * Returns true if the user input line is a comment line.","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"kevinz420"},"content":"     * @param rawInputLine full raw user input line.","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"kevinz420"},"content":"     * @return true if input line is a comment.","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"kevinz420"},"content":"    private boolean isCommentLine(String rawInputLine) {","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"kevinz420"},"content":"        return rawInputLine.trim().matches(COMMENT_LINE_FORMAT_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"kevinz420"},"content":"     * Prompts for the command and reads the text entered by the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"kevinz420"},"content":"     * Ignores empty, pure whitespace, and comment lines.","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"kevinz420"},"content":"     * Echos the command back to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"kevinz420"},"content":"     * @return command (full line) entered by the user","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"kevinz420"},"content":"    public String getUserCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"kevinz420"},"content":"        out.print(LINE_PREFIX + \"Enter command: \");","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"kevinz420"},"content":"        String fullInputLine \u003d in.nextLine();","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"kevinz420"},"content":"        // silently consume all ignored lines","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"kevinz420"},"content":"        while (shouldIgnore(fullInputLine)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"kevinz420"},"content":"            fullInputLine \u003d in.nextLine();","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"kevinz420"},"content":"        showToUser(\"[Command entered:\" + fullInputLine + \"]\");","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"kevinz420"},"content":"        return fullInputLine;","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"kevinz420"},"content":"     * Generates and prints the welcome message upon the start of the application.","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"kevinz420"},"content":"     * @param version         current version of the application.","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"kevinz420"},"content":"     * @param storageFilePath path to the storage file being used.","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"kevinz420"},"content":"    public void showWelcomeMessage(String version, String storageFilePath) {","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"kevinz420"},"content":"        String storageFileInfo \u003d String.format(MESSAGE_USING_STORAGE_FILE, storageFilePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"kevinz420"},"content":"        showToUser(","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"kevinz420"},"content":"                DIVIDER,","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"kevinz420"},"content":"                DIVIDER,","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"kevinz420"},"content":"                MESSAGE_WELCOME,","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"kevinz420"},"content":"                version,","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"kevinz420"},"content":"                MESSAGE_PROGRAM_LAUNCH_ARGS_USAGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"kevinz420"},"content":"                storageFileInfo,","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"kevinz420"},"content":"                DIVIDER);","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"kevinz420"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"kevinz420"},"content":"        showToUser(MESSAGE_GOODBYE, DIVIDER, DIVIDER);","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"kevinz420"},"content":"    public void showInitFailedMessage() {","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"kevinz420"},"content":"        showToUser(MESSAGE_INIT_FAILED, DIVIDER, DIVIDER);","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"J-Y-Yan"},"content":"     * @param message","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"kevinz420"},"content":"     * Shows message(s) to the user","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"kevinz420"},"content":"    public void showToUser(String... message) {","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"kevinz420"},"content":"        for (String m : message) {","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"kevinz420"},"content":"            out.println(LINE_PREFIX + m.replace(\"\\n\", LS + LINE_PREFIX));","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"J-Y-Yan"},"content":"     * @param result","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"kevinz420"},"content":"     * Shows the result of a command execution to the user. Includes additional formatting to demarcate different","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"kevinz420"},"content":"     * command execution segments.","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"kevinz420"},"content":"    public void showResultToUser(CommandResult result) {","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"kevinz420"},"content":"        final Optional\u003cList\u003c? extends Printable\u003e\u003e resultItems \u003d result.getRelevantItems();","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"kevinz420"},"content":"        if (resultItems.isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"kevinz420"},"content":"            showItemsListView(resultItems.get());","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"kevinz420"},"content":"        showToUser(result.feedbackToUser, DIVIDER);","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"kevinz420"},"content":"     * Shows a list of persons to the user, formatted as an indexed list.","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"kevinz420"},"content":"     * Private contact details are hidden.","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"kevinz420"},"content":"    private void showItemsListView(List\u003c? extends Printable\u003e items) {","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"kevinz420"},"content":"        final List\u003cString\u003e formattedItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"kevinz420"},"content":"        for (Printable person : items) {","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"kevinz420"},"content":"            formattedItems.add(person.getAsText());","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"kevinz420"},"content":"        showToUserAsIndexedList(formattedItems);","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"kevinz420"},"content":"     * Shows a list of strings to the user, formatted as an indexed list.","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"kevinz420"},"content":"    private void showToUserAsIndexedList(List\u003cString\u003e list) {","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"kevinz420"},"content":"        showToUser(getIndexedListForViewing(list));","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"kevinz420"},"content":"     * Formats a list of strings as a viewable indexed list.","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"kevinz420"},"content":"    private static String getIndexedListForViewing(List\u003cString\u003e listItems) {","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"kevinz420"},"content":"        final StringBuilder formatted \u003d new StringBuilder();","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"kevinz420"},"content":"        int displayIndex \u003d 0 + DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"kevinz420"},"content":"        for (String listItem : listItems) {","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"kevinz420"},"content":"            formatted.append(getIndexedListItem(displayIndex, listItem)).append(\"\\n\");","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"kevinz420"},"content":"            displayIndex++;","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":185,"author":{"gitId":"kevinz420"},"content":"        return formatted.toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":186,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":187,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":188,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":189,"author":{"gitId":"kevinz420"},"content":"     * Formats a string as a viewable indexed list item.","lastModifiedDate":"2023-10-15"},{"lineNumber":190,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":191,"author":{"gitId":"kevinz420"},"content":"     * @param visibleIndex visible index for this listing","lastModifiedDate":"2023-10-15"},{"lineNumber":192,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":193,"author":{"gitId":"kevinz420"},"content":"    private static String getIndexedListItem(int visibleIndex, String listItem) {","lastModifiedDate":"2023-10-15"},{"lineNumber":194,"author":{"gitId":"kevinz420"},"content":"        return String.format(MESSAGE_INDEXED_LIST_ITEM, visibleIndex, listItem);","lastModifiedDate":"2023-10-15"},{"lineNumber":195,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":196,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":197,"author":{"gitId":"J-Y-Yan"},"content":"    public void printNumberofGoal(int goalCount) {","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"You still have \" + goalCount + \" goals to accomplish. Add oil!\" );","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":200,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":201,"author":{"gitId":"J-Y-Yan"},"content":"    public void printDeleteGoal(Goal deletedGoal) {","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"Good. I have removed this goal: \" + deletedGoal);","lastModifiedDate":"2023-10-19"},{"lineNumber":203,"author":{"gitId":"J-Y-Yan"},"content":"        System.out.println(\"Remember not to give up unaccomplished goal! \");","lastModifiedDate":"2023-10-19"},{"lineNumber":204,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":205,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":206,"author":{"gitId":"J-Y-Yan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"J-Y-Yan"},"content":"     * This method is used to implement Goal commend execution, when adding a new goal","lastModifiedDate":"2023-10-19"},{"lineNumber":208,"author":{"gitId":"J-Y-Yan"},"content":"     * @param goals the goals list which is under operation","lastModifiedDate":"2023-10-19"},{"lineNumber":209,"author":{"gitId":"J-Y-Yan"},"content":"     * @return string contains information of generating a new goal successfully","lastModifiedDate":"2023-10-19"},{"lineNumber":210,"author":{"gitId":"J-Y-Yan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"J-Y-Yan"},"content":"    public static String addGoalSuccessMessage(GoalList goals) {","lastModifiedDate":"2023-10-19"},{"lineNumber":212,"author":{"gitId":"J-Y-Yan"},"content":"        int currentNoOfGoal \u003d goals.getGoalCount();","lastModifiedDate":"2023-10-19"},{"lineNumber":213,"author":{"gitId":"J-Y-Yan"},"content":"        Goal newlyAddedGoal \u003d goals.getGoal(currentNoOfGoal - 1);","lastModifiedDate":"2023-10-19"},{"lineNumber":214,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":215,"author":{"gitId":"J-Y-Yan"},"content":"        return \"Nice! I have added the following goal to your goal lists: \\n\\t\" + newlyAddedGoal;","lastModifiedDate":"2023-10-19"},{"lineNumber":216,"author":{"gitId":"J-Y-Yan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":217,"author":{"gitId":"J-Y-Yan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":218,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"J-Y-Yan":25,"kevinz420":193}},{"path":"src/test/java/seedu/duke/exerciselog/DayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.exerciselog;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"public class DayTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"        DayTest test \u003d new DayTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"        test.containsExercisesTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"        test.getExerciseTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"        test.toStringTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"    public void containsExercisesTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"        Day day \u003d new Day();","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"        assertFalse(day.containsExercises());","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"        day.addExercise(\"Swimming\", 0);","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"        assert day.containsExercises();","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"        day.removeExercise(\"Swimming\", 0);","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"        assert !day.containsExercises();","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"    public void getExerciseTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"        Day day \u003d new Day();","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"        day.addExercise(\"Basketball\", 197);","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"        assertEquals(day.getExercise(1), new Exercise(\"Basketball\", 197));","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"        assert day.getNumberOfExercises() \u003d\u003d 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"        Day day \u003d new Day();","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"        assert day.toString().equals(\"\\tNO EXCERCISES FOR THIS DAY!\\n\");","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"        System.out.println(day);","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"        day.addExercise(\"chicken\", 28);","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"        System.out.println(day);","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"        assert day.toString().equals(\"\\tExercise: chicken, Calories Burned: 28 Calories\\n\");","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Remy9926":38}},{"path":"src/test/java/seedu/duke/exerciselog/ExerciseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.exerciselog;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"public class ExerciseTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"        ExerciseTest test \u003d new ExerciseTest();","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"        test.initializeExerciseTest();","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"        test.initializeExerciseTest2();","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"        test.testEqualsMethod();","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"        test.testToStringMethod();","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"        test.setNewExerciseNameTest();","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"        test.setNewCaloriesBurnedTest();","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"        assert true;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"    public void initializeExerciseTest() {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"        Exercise testExercise \u003d new Exercise(\"Running\", 280);","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"        assertEquals(testExercise.getExerciseName(), \"Running\");","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"        assertEquals(testExercise.getCaloriesBurned(), 280);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"    public void initializeExerciseTest2() {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"        Exercise testExercise \u003d new Exercise(\"Running\", 280);","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"        assertNotEquals(testExercise.getExerciseName(), \"running\");","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"        assertNotEquals(testExercise.getCaloriesBurned(), 2800);","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"    public void testEqualsMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"        Exercise testExercise \u003d new Exercise(\"Walking\", 100);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"        assertEquals(testExercise, new Exercise(\"Walking\", 100));","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"        assertNotEquals(testExercise, new Exercise(\"Swimming\", 100));","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"    public void testToStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Remy9926"},"content":"        Exercise testExercise \u003d new Exercise(\"Golfing\", 76);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Remy9926"},"content":"        assertEquals(testExercise.toString(), \"Exercise: Golfing, Calories Burned: 76 Calories\\n\");","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Remy9926"},"content":"    public void setNewExerciseNameTest() {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Remy9926"},"content":"        Exercise testExercise \u003d new Exercise(\"Floorball\", 143);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Remy9926"},"content":"        testExercise.setExerciseName(\"hockey\");","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Remy9926"},"content":"        assertEquals(testExercise.getExerciseName(), \"hockey\");","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Remy9926"},"content":"    public void setNewCaloriesBurnedTest() {","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Remy9926"},"content":"        Exercise testExercise \u003d new Exercise(\"Football\", 309);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Remy9926"},"content":"        testExercise.setCaloriesBurned(229);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Remy9926"},"content":"        assert testExercise.getCaloriesBurned() \u003d\u003d 229;","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Remy9926":52}},{"path":"src/test/java/seedu/duke/exerciselog/LogTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.exerciselog;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"public class LogTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"        LogTest test \u003d new LogTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"        test.getNumberOfExercisesTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"        test.addAndRemoveExerciseTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"    public void getNumberOfExercisesTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"        Log log \u003d new Log();","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"        assert log.getNumberOfExercises() \u003d\u003d 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"        assert log.getNumberOfExercisesForMonth(1) \u003d\u003d 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"        assert log.getNumberOfExercisesForDay(1, 21) \u003d\u003d 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"    public void addAndRemoveExerciseTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"        Log log \u003d new Log();","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"        log.addExercise(6, 7, \"Exercise\", 8999999);","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"        log.addExercise(8, 24, \"Exercise\", 112);","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"        assert log.getNumberOfExercises() \u003d\u003d 2;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"        log.removeExercise(6, 7, \"Exercise\", 8999999);","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"        assert log.getNumberOfExercises() \u003d\u003d 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"        log.removeExercise(8, 24, \"Exercise\", 112);","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"        assert log.getNumberOfExercises() \u003d\u003d 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Remy9926":29}},{"path":"src/test/java/seedu/duke/exerciselog/MonthTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Remy9926"},"content":"package seedu.duke.exerciselog;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Remy9926"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Remy9926"},"content":"public class MonthTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Remy9926"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Remy9926"},"content":"        MonthTest test \u003d new MonthTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Remy9926"},"content":"        test.createMonthTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Remy9926"},"content":"        test.addExerciseTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Remy9926"},"content":"        test.removeExerciseTest();","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Remy9926"},"content":"    public void createMonthTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Remy9926"},"content":"        Month month \u003d new Month(31, \"JAN\");","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Remy9926"},"content":"        assert month.getName().equals(\"JAN\");","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Remy9926"},"content":"        assert month.getNumberOfDays() \u003d\u003d 31;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Remy9926"},"content":"    public void addExerciseTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Remy9926"},"content":"        Month month \u003d new Month(28, \"FEB\");","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Remy9926"},"content":"        month.addExercise(3, \"Volleyball\", 79);","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Remy9926"},"content":"        assertEquals(month.getNumberOfExercisesForDay(3), 1);","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Remy9926"},"content":"        month.addExercise(14, \"Running\", 121);","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Remy9926"},"content":"        assert month.getNumberOfExercisesForDay(14) \u003d\u003d 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Remy9926"},"content":"        assert month.getTotalNumberOfExercises() \u003d\u003d 2;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Remy9926"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Remy9926"},"content":"    public void removeExerciseTest() {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Remy9926"},"content":"        Month month \u003d new Month(28, \"FEB\");","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Remy9926"},"content":"        month.addExercise(3, \"Volleyball\", 79);","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Remy9926"},"content":"        month.addExercise(14, \"Running\", 121);","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Remy9926"},"content":"        month.removeExercise(3, \"Volleyball\", 79);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Remy9926"},"content":"        assert month.getNumberOfExercisesForDay(3) \u003d\u003d 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"Remy9926"},"content":"        assert month.getTotalNumberOfExercises() \u003d\u003d 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"Remy9926"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Remy9926"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Remy9926":36}},{"path":"src/test/java/seedu/duke/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinz420"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"kevinz420"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"kevinz420"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"kevinz420"},"content":"import static seedu.duke.common.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kevinz420"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"kevinz420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"kevinz420"},"content":"import seedu.duke.commands.IncorrectCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"kevinz420"},"content":"public class ParserTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"kevinz420"},"content":"    private Parser parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"kevinz420"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"kevinz420"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"kevinz420"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"kevinz420"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"kevinz420"},"content":"    public void parse_emptyInput_returnsIncorrect() {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"kevinz420"},"content":"        final String[] emptyInputs \u003d { \"\", \"  \", \"\\n  \\n\" };","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"kevinz420"},"content":"        final String resultMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"kevinz420"},"content":"        parseAndAssertIncorrectWithMessage(resultMessage, emptyInputs);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"kevinz420"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"kevinz420"},"content":"    public void parse_unknownCommandWord_returnsHelp() {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"kevinz420"},"content":"        final String input \u003d \"unknowncommandword arguments arguments\";","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"kevinz420"},"content":"        parseAndAssertCommandType(input, HelpCommand.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"kevinz420"},"content":"    /*","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"kevinz420"},"content":"     * Tests for 0-argument commands \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"kevinz420"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"kevinz420"},"content":"    public void parse_helpCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"kevinz420"},"content":"        final String input \u003d \"help\";","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"kevinz420"},"content":"        parseAndAssertCommandType(input, HelpCommand.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"kevinz420"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"kevinz420"},"content":"    public void parse_exitCommand_parsedCorrectly() {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"kevinz420"},"content":"        final String input \u003d \"exit\";","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"kevinz420"},"content":"        parseAndAssertCommandType(input, ExitCommand.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"kevinz420"},"content":"    /*","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"kevinz420"},"content":"     * Utility methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"kevinz420"},"content":"     * Asserts that parsing the given inputs will return IncorrectCommand with the given feedback message.","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"kevinz420"},"content":"    private void parseAndAssertIncorrectWithMessage(String feedbackMessage, String... inputs) {","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"kevinz420"},"content":"        for (String input : inputs) {","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"kevinz420"},"content":"            final IncorrectCommand result \u003d parseAndAssertCommandType(input, IncorrectCommand.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"kevinz420"},"content":"            assertEquals(result.feedbackToUser, feedbackMessage);","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"kevinz420"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"kevinz420"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"kevinz420"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"kevinz420"},"content":"     * Parses input and asserts the class/type of the returned command object.","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"kevinz420"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"kevinz420"},"content":"     * @param input to be parsed","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"kevinz420"},"content":"     * @param expectedCommandClass expected class of returned command","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"kevinz420"},"content":"     * @return the parsed command object","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"kevinz420"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"kevinz420"},"content":"    private \u003cT extends Command\u003e T parseAndAssertCommandType(String input, Class\u003cT\u003e expectedCommandClass) {","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"kevinz420"},"content":"        final Command result \u003d parser.parseCommand(input);","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"kevinz420"},"content":"        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"kevinz420"},"content":"        return (T) result;","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"kevinz420"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"kevinz420"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"kevinz420":78}},{"path":"text-ui-test/UploadCommand.cmd","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"MrOPPA1"},"content":"rem customize the tag name and message here","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"MrOPPA1"},"content":"set TAG_NAME\u003dfengguangyao","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"MrOPPA1"},"content":"set MESSAGE\u003d\"Personal Job\"","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"MrOPPA1"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"MrOPPA1"},"content":"rem create a branch","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"MrOPPA1"},"content":"git branch %TAG_NAME%","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"MrOPPA1"},"content":"git switch %TAG_NAME%","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"MrOPPA1"},"content":"rem commit all changes","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"MrOPPA1"},"content":"git add .","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"MrOPPA1"},"content":"git commit -m %MESSAGE%","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"MrOPPA1"},"content":"git push origin %TAG_NAME%","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"MrOPPA1":11}},{"path":"tp/.idea/checkstyle-idea.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"CheckStyle-IDEA\" serialisationVersion\u003d\"2\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"    \u003ccheckstyleVersion\u003e10.12.3\u003c/checkstyleVersion\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"    \u003cscanScope\u003eJavaOnly\u003c/scanScope\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"    \u003ccopyLibs\u003etrue\u003c/copyLibs\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"thirdPartyClasspath\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"activeLocationIds\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"locations\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"      \u003clist\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"        \u003cConfigurationLocation id\u003d\"bundled-sun-checks\" type\u003d\"BUNDLED\" scope\u003d\"All\" description\u003d\"Sun Checks\"\u003e(bundled)\u003c/ConfigurationLocation\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"        \u003cConfigurationLocation id\u003d\"bundled-google-checks\" type\u003d\"BUNDLED\" scope\u003d\"All\" description\u003d\"Google Checks\"\u003e(bundled)\u003c/ConfigurationLocation\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"      \u003c/list\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"    \u003c/option\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"\u003c/project\u003e","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"J-Y-Yan":16}},{"path":"tp/.idea/vcs.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"VcsDirectoryMappings\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"    \u003cmapping directory\u003d\"$PROJECT_DIR$/..\" vcs\u003d\"Git\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"\u003c/project\u003e","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"J-Y-Yan":6}},{"path":"tp/.idea/workspace.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"J-Y-Yan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"J-Y-Yan"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"AutoImportSettings\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"autoReloadType\" value\u003d\"SELECTIVE\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"ChangeListManager\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"J-Y-Yan"},"content":"    \u003clist default\u003d\"true\" id\u003d\"46305296-6e41-460c-93f6-a188eb9d1e4d\" name\u003d\"Changes\" comment\u003d\"\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"SHOW_DIALOG\" value\u003d\"false\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"HIGHLIGHT_CONFLICTS\" value\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value\u003d\"false\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"LAST_RESOLUTION\" value\u003d\"IGNORE\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"ExternalProjectsData\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"J-Y-Yan"},"content":"    \u003cprojectState path\u003d\"$PROJECT_DIR$\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"J-Y-Yan"},"content":"      \u003cProjectState /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"J-Y-Yan"},"content":"    \u003c/projectState\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"ExternalProjectsManager\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"J-Y-Yan"},"content":"    \u003csystem id\u003d\"GRADLE\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"J-Y-Yan"},"content":"      \u003cstate\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"J-Y-Yan"},"content":"        \u003cprojects_view\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"J-Y-Yan"},"content":"          \u003ctree_state\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"J-Y-Yan"},"content":"            \u003cexpand /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"J-Y-Yan"},"content":"            \u003cselect /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"J-Y-Yan"},"content":"          \u003c/tree_state\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"J-Y-Yan"},"content":"        \u003c/projects_view\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"J-Y-Yan"},"content":"      \u003c/state\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"J-Y-Yan"},"content":"    \u003c/system\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"FileTemplateManagerImpl\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"RECENT_TEMPLATES\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"J-Y-Yan"},"content":"      \u003clist\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"J-Y-Yan"},"content":"        \u003coption value\u003d\"Class\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"J-Y-Yan"},"content":"      \u003c/list\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"J-Y-Yan"},"content":"    \u003c/option\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"Git.Settings\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"RECENT_GIT_ROOT_PATH\" value\u003d\"$PROJECT_DIR$/..\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"MarkdownSettingsMigration\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"stateVersion\" value\u003d\"1\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"ProjectColorInfo\"\u003e{","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"J-Y-Yan"},"content":"  \u0026quot;customColor\u0026quot;: \u0026quot;\u0026quot;,","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"J-Y-Yan"},"content":"  \u0026quot;associatedIndex\u0026quot;: 3","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"J-Y-Yan"},"content":"}\u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"ProjectId\" id\u003d\"2Wv9jKq5KpsiP8JQSMJuBqpmuB1\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"ProjectLevelVcsManager\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"J-Y-Yan"},"content":"    \u003cConfirmationsSetting value\u003d\"1\" id\u003d\"Add\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"ProjectViewState\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"hideEmptyMiddlePackages\" value\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"showLibraryContents\" value\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"PropertiesComponent\"\u003e\u003c![CDATA[{","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"J-Y-Yan"},"content":"  \"keyToString\": {","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"J-Y-Yan"},"content":"    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"J-Y-Yan"},"content":"    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"J-Y-Yan"},"content":"    \"WebServerToolWindowFactoryState\": \"false\",","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"J-Y-Yan"},"content":"    \"git-widget-placeholder\": \"goal\",","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"J-Y-Yan"},"content":"    \"last_opened_file_path\": \"D:/Programming/CS2113/Team Project\",","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"J-Y-Yan"},"content":"    \"node.js.detected.package.eslint\": \"true\",","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"J-Y-Yan"},"content":"    \"node.js.detected.package.tslint\": \"true\",","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"J-Y-Yan"},"content":"    \"node.js.selected.package.eslint\": \"(autodetect)\",","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"J-Y-Yan"},"content":"    \"node.js.selected.package.tslint\": \"(autodetect)\",","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"J-Y-Yan"},"content":"    \"nodejs_package_manager_path\": \"npm\",","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"J-Y-Yan"},"content":"    \"vue.rearranger.settings.migration\": \"true\"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"J-Y-Yan"},"content":"  }","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"J-Y-Yan"},"content":"}]]\u003e\u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"SpellCheckerSettings\" RuntimeDictionaries\u003d\"0\" Folders\u003d\"0\" CustomDictionaries\u003d\"0\" DefaultDictionary\u003d\"application-level\" UseSingleDictionary\u003d\"true\" transferred\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"TaskManager\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"J-Y-Yan"},"content":"    \u003ctask active\u003d\"true\" id\u003d\"Default\" summary\u003d\"Default task\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"J-Y-Yan"},"content":"      \u003cchangelist id\u003d\"46305296-6e41-460c-93f6-a188eb9d1e4d\" name\u003d\"Changes\" comment\u003d\"\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"J-Y-Yan"},"content":"      \u003ccreated\u003e1697602324590\u003c/created\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"J-Y-Yan"},"content":"      \u003coption name\u003d\"number\" value\u003d\"Default\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"J-Y-Yan"},"content":"      \u003coption name\u003d\"presentableId\" value\u003d\"Default\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"J-Y-Yan"},"content":"      \u003cupdated\u003e1697602324590\u003c/updated\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"J-Y-Yan"},"content":"      \u003cworkItem from\u003d\"1697602329602\" duration\u003d\"41000\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"J-Y-Yan"},"content":"      \u003cworkItem from\u003d\"1697602381500\" duration\u003d\"17642000\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"J-Y-Yan"},"content":"      \u003cworkItem from\u003d\"1697648699355\" duration\u003d\"26000\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"J-Y-Yan"},"content":"    \u003c/task\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"J-Y-Yan"},"content":"    \u003cservers /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"J-Y-Yan"},"content":"  \u003ccomponent name\u003d\"TypeScriptGeneratedFilesManager\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"J-Y-Yan"},"content":"    \u003coption name\u003d\"version\" value\u003d\"3\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"J-Y-Yan"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"J-Y-Yan"},"content":"\u003c/project\u003e","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"J-Y-Yan":87}}]
